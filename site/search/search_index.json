{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u624b\u6478\u624bPrometheus&Thanos\u76d1\u63a7\u6280\u672f\u4e0e\u5b9e\u6218\u6559\u7a0b Started at Oct 16, 2018 By Jacob Xi Prometheus, Grafana, AlertManager, PromQL, Thanos, VictoriaMetrics and APM JX's chit-chat Hi, this part is fucking new and freshing\ud83e\udd14 \u8bb0\u5f55\u4e00\u4e0b\u751f\u6d3b\uff0c\u5927\u6982\u662f\u4e0a\u5468\u56db19\u53f7\u7684\u65f6\u5019\u7ec8\u4e8e\u62ff\u5230\u4e86\u6b63\u5f0f\u7684offer letter, associate director \u526f\u8463\u4e8b\uff0c\u4e5f\u662f\u6211\u8fd9\u8f88\u5b50\u7b2c\u4e00\u6b21\u6709\u4e86\u81ea\u5df1\u7684title\uff0c\u542c\u8d77\u6765\u8fd8\u86ee\u552c\u4eba\u7684\u3002\u4e0d\u8fc7\u5e94\u8be5\u8fd8\u662f\u4e00\u4e2a\u60b2\u50ac\u7684\u6253\u5de5\u4ed4\uff0c\u65e2\u7136\u5df2\u7ecf\u62ff\u5230\u4e86\u5c5e\u4e8e\u81ea\u5df1\u594b\u6597\u7684\u7ed3\u679c\uff0c\u7ec8\u4e8e\u53ef\u4ee5\u6309\u90e8\u5c31\u73ed\u7684\u5b9e\u73b0\u81ea\u5df1\u7684\u8ba1\u5212\u4e86\uff0c\u5e0c\u671b\u4e00\u5207\u987a\u5229\u3002\u8fd9\u5468\u4e00\u4eba\u751f\u7b2c\u4e00\u6b21\u4e3b\u52a8\u63d0\u79bb\u804c\uff0c\u6709\u70b9\u5c0f\u7d27\u5f20\uff0c\u6ee1\u809a\u5b50\u7684\u6028\u6c14\u8fd8\u662f\u6ca1\u6709\u6492\u51fa\u53bb\uff0c\u4e0d\u8fc7\u6211\u5df2\u7ecfpeace\u4e86\u3002 \u611f\u89c9\u5feb\u8981\u89e3\u5c01\u4e86\uff0c\u5e0c\u671b\u5427\uff0c\u4e0d\u8981\u518d\u6b3a\u9a97\u6211\u4eec\u8fd9\u4e9b\u5355\u7eaf\u7684\u5c0f\u4f19\u5b50\u4eec\u4e86\ud83e\udd20 \u8bf4\u8bf4\u6700\u8fd1\u770b\u7684\u65b0\u5267\u548c\u5c0f\u8bf4\u5427 \u201c\u795e\u63a2\u6ce2\u7f57\u201d\u9a6c\u4e0a\u5c31\u8981\u770b\u5b8c\u4e86\uff0c\u867d\u7136\u611f\u89c9\u6709\u70b9\u75b2\u4e86\uff0c\u4f46\u662f\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u771f\u7684\u8fd8\u662f\u771f\u7cbe\u81f4\u7684\u5267\uff0c\u8001\u620f\u9aa8\u7684\u6f14\u6280\u6ca1\u5f97\u8bf4 \u4e1c\u4eac\u7f6a\u6076 Tokyo Vice, \u597d\u4e45\u6ca1\u6709\u770b\u5230\u8282\u594f\u548c\u753b\u9762\u8fd9\u4e48\u68d2\u7684\u7535\u89c6\u5267\u4e86\uff0c\u770b\u5b8c\u771f\u7684\u597d\u60f3\u53bb\u4e1c\u4eac\u8f6c\u4e00\u5708 \u53f2\u524d\u661f\u7403 Prehistoric Planet \u4e0d\u591a\u8bf4\uff0c\u6bcf\u4e00\u5e27\u90fd\u53ef\u4ee5\u622a\u56fe\u4f5c\u4e3a\u58c1\u7eb8\uff0c\u4ee5\u767d\u57a9\u7eaa\u65f6\u4ee3\u7684\u73af\u5883\u4e3a\u80cc\u666f\uff0c\u63cf\u7ed8\u4e86\u6d77\u5cb8\u3001\u6c99\u6f20\u3001\u6cb3\u6d41\u3001\u51b0\u96ea\u4e16\u754c\u548c\u68ee\u6797\u7684\u573a\u666f\uff0c\u5c55\u793a\u4e86\u9c9c\u4e3a\u4eba\u77e5\u4e14\u4ee4\u4eba\u60ca\u8bb6\u7684\u6050\u9f99\u751f\u6d3b\u3002 \u5c0f\u8bf4\uff0c\u6700\u8fd1\u770b\u5b8c\u4e86\u300a\u5bc4\u751f\u524d\u591c\u300b\uff0c\u300a\u970d\u6bd4\u7279\u4eba\u300b\uff0c\u89c9\u5f97\u81ea\u5df1\u5e74\u7eaa\u5927\u4e86\uff0c\u53cd\u800c\u5f00\u59cb\u559c\u6b22\u8fd9\u79cd\u6162\u8282\u594f\u7684\u4e2d\u4e16\u7eaa\u5c0f\u8bf4\u4e86 \u5185\u5bb9\u7b80\u4ecb \u672c\u4e66\u662f\u4e2a\u7279\u522b\u6709\u610f\u601d\u7684\u4e00\u6b21\u5c1d\u8bd5\uff0c\u7b2c\u4e00\u7bc7\u6587\u7ae0\u53d1\u8868\u4e8e2018\u5e7410\u6708\uff0c\u9646\u9646\u7eed\u7eed\u5199\u4e86\u56db\u5e74\u591a\uff0c90\u591a\u7bc7\u6587\u7ae0\uff0c\u4eceBB\u5230SAP\uff0c\u751a\u81f3\u9a6c\u4e0a\u5c31\u8981\u5230\u65b0\u516c\u53f8\u4e86\u3002\u7a81\u7136\u53d1\u73b0\u968f\u7740\u8fd9\u4e9b\u5b64\u7acb\u7684\u6587\u7ae0\u8d8a\u5199\u8d8a\u591a\uff0c\u4e0d\u5982\u628a\u8fd9\u4e9b\u6587\u7ae0\u6574\u7406\u6574\u7406\u51fa\u4e00\u672c\u7535\u5b50\u4e66\uff0c\u6709\u5173Prometheus\u76d1\u63a7\u6280\u672f\u6808\uff0c\u5305\u62ecPrometheus\u7684\u4f7f\u7528\uff0cPrometheus stack\u7684\u642d\u5efa\uff0c\u670d\u52a1\u7684\u6293\u53d6\uff0cPromQL \u7684\u4f7f\u7528\uff0c\u597d\u7528\u4ee5\u53ca\u5e38\u7528\u7684Alert\u4fe1\u606f\uff0c Prometheus HA\u96c6\u7fa4 Thanos\uff0cPrometheus \u6301\u4e45\u5316\u96c6\u7fa4 VictoriaMetrics\uff0c\u4ee5\u53caAPM\u76d1\u63a7\u7684\u4ecb\u7ecd Promethues\u5e94\u7528\u76d1\u63a7\u4ecb\u7ecd\uff0cK8S \u91cc\u9762\u66b4\u9732\u4fe1\u606f\u5e38\u7528\u7684kube-state-metrics\uff0cHPA, Metrics Server, \u4f20\u7edf\u7684\u5b89\u88c5\u65b9\u5f0f Promethues on Linux, Node Exporter\uff0cPrometheus MySQL \u53ef\u89c6\u89c6\u5316\u76d1\u63a7 \u624b\u52a8\u90e8\u7f72Kubernetes Prometheus\uff0c \u73a9\u8f6cPrometheus Operator\u90e8\u7f72\uff0cPrometheus \u670d\u52a1\u7684\u81ea\u52a8\u53d1\u73b0\u4f7f\u7528 Prometheus-Adapter \u5b9e\u73b0 \u5e94\u7528\u8fdb\u884c\u81ea\u5b9a\u4e49\u6307\u6807\u6269\u7f29\u5bb9 PromQL\u7684\u5b66\u4e60\u5305\u62ec\uff0c\u64cd\u4f5c\u7b26 & \u5185\u7f6e\u51fd\u6570\uff0c\u7b80\u5355\u793a\u4f8b\uff0c\u8bb0\u5f55\u89c4\u5219\u7684\u4f7f\u7528(Recording Rule) Awesome Prometheus alerts \u6570\u636e\u53ef\u89c6\u5316 Grafana \u4ee5\u53ca\u51e0\u4e2a\u5e38\u7528\u7684 Grafana Plugin DevOpsProdigy KubeGraf\uff0c darks \u5927\u89c4\u6a21\u573a\u666f\u4e0b Prometheus \u7684\u4f18\u5316\u624b\u6bb5 Thanos Prometheus\u9ad8\u6027\u80fd\u8fdc\u7a0b\u5b58\u50a8VictoriaMetrics \u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u6280\u672f \u4ee5\u53ca APM\u7684\u5e94\u7528\u4ecb\u7ecd Previous on my Technolog book \u624b\u6478\u624b Jenkins \u6218\u672f\u6559\u7a0b (\u5927\u5e08\u7248\uff09 \u624b\u6478\u624b Elasticsearch7 \u6280\u672f\u4e0e\u5b9e\u6218\u6559\u7a0b \u624b\u6478\u624b Redis \u6280\u672f\u4e0e\u5b9e\u6218\u6559\u7a0b \u624b\u6478\u624b Chef & Ansible \u6280\u672f\u4e0e\u5b9e\u6218\u6559\u7a0b \u624b\u6478\u624b \u5206\u5e03\u5f0f\u4e0e\u6d41\u5f0f\u7cfb\u7edf (In progress) Azure 103&900 Tutorial (In progress) \u624b\u6478\u624b Linux Performance & \u9762\u8bd5\u5b9e\u6218\u6559\u7a0b \u624b\u6478\u624b Databases \u5168\u6559\u7a0b AWS Certified Data Analytics Tutorial Istio & Service Mesh \u6218\u672f\u6559\u7a0b AWS Certification Solutions Architect Book \u624b\u6478\u624bPrometheus&Thanos\u76d1\u63a7\u6280\u672f\u4e0e\u5b9e\u6218\u6559\u7a0b Distributed Message System Book(Kafka) Salut! C'est Moi Do or Do not, there is no try Hello, this is me, Jacob. Currently, I'm working as DevOps and Cloud Engineer in SAP, and I'm the certified AWS Solution Architect and Certified Azure Administrator, Kubernetes Specialist, Jenkins CI/CD and ElasticStack enthusiast. I was working as Backend Engineer in New York City and achieved my CS master degree in SIT, America. Believe it or not, I'll keep writing, more and more books will come out at such dramatic and unprecedented 2021. If you have anything want to talk to me directly, you can reach out for via email xichao2015@outlook.com\u3002 Salute, c'est moi, Jacob. Actuellement, je travaille en tant qu'ing\u00e9nieur DevOps et Cloud dans SAP, et je suis architecte de solution AWS certifi\u00e9 et administrateur Azure certifi\u00e9, sp\u00e9cialiste Kubernetes et passionn\u00e9 de CI/CD. Je travaillais en tant qu'ing\u00e9nieur backend \u00e0 New York et j'ai obtenu mon master CS \u00e0 SIT, en Am\u00e9rique. Croyez-le ou non, je continuerai \u00e0 \u00e9crire, de plus en plus de livres sortiront cette ann\u00e9e. To be continue I will start working on Fintech book later on and in future, I will put more effort do finish \"Distributed Message System Book\".\ud83d\ude42","title":"Welcome"},{"location":"#prometheusthanos","text":"Started at Oct 16, 2018 By Jacob Xi Prometheus, Grafana, AlertManager, PromQL, Thanos, VictoriaMetrics and APM","title":"\u624b\u6478\u624bPrometheus&amp;Thanos\u76d1\u63a7\u6280\u672f\u4e0e\u5b9e\u6218\u6559\u7a0b"},{"location":"#jxs-chit-chat","text":"Hi, this part is fucking new and freshing\ud83e\udd14 \u8bb0\u5f55\u4e00\u4e0b\u751f\u6d3b\uff0c\u5927\u6982\u662f\u4e0a\u5468\u56db19\u53f7\u7684\u65f6\u5019\u7ec8\u4e8e\u62ff\u5230\u4e86\u6b63\u5f0f\u7684offer letter, associate director \u526f\u8463\u4e8b\uff0c\u4e5f\u662f\u6211\u8fd9\u8f88\u5b50\u7b2c\u4e00\u6b21\u6709\u4e86\u81ea\u5df1\u7684title\uff0c\u542c\u8d77\u6765\u8fd8\u86ee\u552c\u4eba\u7684\u3002\u4e0d\u8fc7\u5e94\u8be5\u8fd8\u662f\u4e00\u4e2a\u60b2\u50ac\u7684\u6253\u5de5\u4ed4\uff0c\u65e2\u7136\u5df2\u7ecf\u62ff\u5230\u4e86\u5c5e\u4e8e\u81ea\u5df1\u594b\u6597\u7684\u7ed3\u679c\uff0c\u7ec8\u4e8e\u53ef\u4ee5\u6309\u90e8\u5c31\u73ed\u7684\u5b9e\u73b0\u81ea\u5df1\u7684\u8ba1\u5212\u4e86\uff0c\u5e0c\u671b\u4e00\u5207\u987a\u5229\u3002\u8fd9\u5468\u4e00\u4eba\u751f\u7b2c\u4e00\u6b21\u4e3b\u52a8\u63d0\u79bb\u804c\uff0c\u6709\u70b9\u5c0f\u7d27\u5f20\uff0c\u6ee1\u809a\u5b50\u7684\u6028\u6c14\u8fd8\u662f\u6ca1\u6709\u6492\u51fa\u53bb\uff0c\u4e0d\u8fc7\u6211\u5df2\u7ecfpeace\u4e86\u3002 \u611f\u89c9\u5feb\u8981\u89e3\u5c01\u4e86\uff0c\u5e0c\u671b\u5427\uff0c\u4e0d\u8981\u518d\u6b3a\u9a97\u6211\u4eec\u8fd9\u4e9b\u5355\u7eaf\u7684\u5c0f\u4f19\u5b50\u4eec\u4e86\ud83e\udd20 \u8bf4\u8bf4\u6700\u8fd1\u770b\u7684\u65b0\u5267\u548c\u5c0f\u8bf4\u5427 \u201c\u795e\u63a2\u6ce2\u7f57\u201d\u9a6c\u4e0a\u5c31\u8981\u770b\u5b8c\u4e86\uff0c\u867d\u7136\u611f\u89c9\u6709\u70b9\u75b2\u4e86\uff0c\u4f46\u662f\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u771f\u7684\u8fd8\u662f\u771f\u7cbe\u81f4\u7684\u5267\uff0c\u8001\u620f\u9aa8\u7684\u6f14\u6280\u6ca1\u5f97\u8bf4 \u4e1c\u4eac\u7f6a\u6076 Tokyo Vice, \u597d\u4e45\u6ca1\u6709\u770b\u5230\u8282\u594f\u548c\u753b\u9762\u8fd9\u4e48\u68d2\u7684\u7535\u89c6\u5267\u4e86\uff0c\u770b\u5b8c\u771f\u7684\u597d\u60f3\u53bb\u4e1c\u4eac\u8f6c\u4e00\u5708 \u53f2\u524d\u661f\u7403 Prehistoric Planet \u4e0d\u591a\u8bf4\uff0c\u6bcf\u4e00\u5e27\u90fd\u53ef\u4ee5\u622a\u56fe\u4f5c\u4e3a\u58c1\u7eb8\uff0c\u4ee5\u767d\u57a9\u7eaa\u65f6\u4ee3\u7684\u73af\u5883\u4e3a\u80cc\u666f\uff0c\u63cf\u7ed8\u4e86\u6d77\u5cb8\u3001\u6c99\u6f20\u3001\u6cb3\u6d41\u3001\u51b0\u96ea\u4e16\u754c\u548c\u68ee\u6797\u7684\u573a\u666f\uff0c\u5c55\u793a\u4e86\u9c9c\u4e3a\u4eba\u77e5\u4e14\u4ee4\u4eba\u60ca\u8bb6\u7684\u6050\u9f99\u751f\u6d3b\u3002 \u5c0f\u8bf4\uff0c\u6700\u8fd1\u770b\u5b8c\u4e86\u300a\u5bc4\u751f\u524d\u591c\u300b\uff0c\u300a\u970d\u6bd4\u7279\u4eba\u300b\uff0c\u89c9\u5f97\u81ea\u5df1\u5e74\u7eaa\u5927\u4e86\uff0c\u53cd\u800c\u5f00\u59cb\u559c\u6b22\u8fd9\u79cd\u6162\u8282\u594f\u7684\u4e2d\u4e16\u7eaa\u5c0f\u8bf4\u4e86","title":"JX's chit-chat"},{"location":"#_1","text":"\u672c\u4e66\u662f\u4e2a\u7279\u522b\u6709\u610f\u601d\u7684\u4e00\u6b21\u5c1d\u8bd5\uff0c\u7b2c\u4e00\u7bc7\u6587\u7ae0\u53d1\u8868\u4e8e2018\u5e7410\u6708\uff0c\u9646\u9646\u7eed\u7eed\u5199\u4e86\u56db\u5e74\u591a\uff0c90\u591a\u7bc7\u6587\u7ae0\uff0c\u4eceBB\u5230SAP\uff0c\u751a\u81f3\u9a6c\u4e0a\u5c31\u8981\u5230\u65b0\u516c\u53f8\u4e86\u3002\u7a81\u7136\u53d1\u73b0\u968f\u7740\u8fd9\u4e9b\u5b64\u7acb\u7684\u6587\u7ae0\u8d8a\u5199\u8d8a\u591a\uff0c\u4e0d\u5982\u628a\u8fd9\u4e9b\u6587\u7ae0\u6574\u7406\u6574\u7406\u51fa\u4e00\u672c\u7535\u5b50\u4e66\uff0c\u6709\u5173Prometheus\u76d1\u63a7\u6280\u672f\u6808\uff0c\u5305\u62ecPrometheus\u7684\u4f7f\u7528\uff0cPrometheus stack\u7684\u642d\u5efa\uff0c\u670d\u52a1\u7684\u6293\u53d6\uff0cPromQL \u7684\u4f7f\u7528\uff0c\u597d\u7528\u4ee5\u53ca\u5e38\u7528\u7684Alert\u4fe1\u606f\uff0c Prometheus HA\u96c6\u7fa4 Thanos\uff0cPrometheus \u6301\u4e45\u5316\u96c6\u7fa4 VictoriaMetrics\uff0c\u4ee5\u53caAPM\u76d1\u63a7\u7684\u4ecb\u7ecd Promethues\u5e94\u7528\u76d1\u63a7\u4ecb\u7ecd\uff0cK8S \u91cc\u9762\u66b4\u9732\u4fe1\u606f\u5e38\u7528\u7684kube-state-metrics\uff0cHPA, Metrics Server, \u4f20\u7edf\u7684\u5b89\u88c5\u65b9\u5f0f Promethues on Linux, Node Exporter\uff0cPrometheus MySQL \u53ef\u89c6\u89c6\u5316\u76d1\u63a7 \u624b\u52a8\u90e8\u7f72Kubernetes Prometheus\uff0c \u73a9\u8f6cPrometheus Operator\u90e8\u7f72\uff0cPrometheus \u670d\u52a1\u7684\u81ea\u52a8\u53d1\u73b0\u4f7f\u7528 Prometheus-Adapter \u5b9e\u73b0 \u5e94\u7528\u8fdb\u884c\u81ea\u5b9a\u4e49\u6307\u6807\u6269\u7f29\u5bb9 PromQL\u7684\u5b66\u4e60\u5305\u62ec\uff0c\u64cd\u4f5c\u7b26 & \u5185\u7f6e\u51fd\u6570\uff0c\u7b80\u5355\u793a\u4f8b\uff0c\u8bb0\u5f55\u89c4\u5219\u7684\u4f7f\u7528(Recording Rule) Awesome Prometheus alerts \u6570\u636e\u53ef\u89c6\u5316 Grafana \u4ee5\u53ca\u51e0\u4e2a\u5e38\u7528\u7684 Grafana Plugin DevOpsProdigy KubeGraf\uff0c darks \u5927\u89c4\u6a21\u573a\u666f\u4e0b Prometheus \u7684\u4f18\u5316\u624b\u6bb5 Thanos Prometheus\u9ad8\u6027\u80fd\u8fdc\u7a0b\u5b58\u50a8VictoriaMetrics \u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u6280\u672f \u4ee5\u53ca APM\u7684\u5e94\u7528\u4ecb\u7ecd","title":"\u5185\u5bb9\u7b80\u4ecb"},{"location":"#previous-on-my-technolog-book","text":"\u624b\u6478\u624b Jenkins \u6218\u672f\u6559\u7a0b (\u5927\u5e08\u7248\uff09 \u624b\u6478\u624b Elasticsearch7 \u6280\u672f\u4e0e\u5b9e\u6218\u6559\u7a0b \u624b\u6478\u624b Redis \u6280\u672f\u4e0e\u5b9e\u6218\u6559\u7a0b \u624b\u6478\u624b Chef & Ansible \u6280\u672f\u4e0e\u5b9e\u6218\u6559\u7a0b \u624b\u6478\u624b \u5206\u5e03\u5f0f\u4e0e\u6d41\u5f0f\u7cfb\u7edf (In progress) Azure 103&900 Tutorial (In progress) \u624b\u6478\u624b Linux Performance & \u9762\u8bd5\u5b9e\u6218\u6559\u7a0b \u624b\u6478\u624b Databases \u5168\u6559\u7a0b AWS Certified Data Analytics Tutorial Istio & Service Mesh \u6218\u672f\u6559\u7a0b AWS Certification Solutions Architect Book \u624b\u6478\u624bPrometheus&Thanos\u76d1\u63a7\u6280\u672f\u4e0e\u5b9e\u6218\u6559\u7a0b Distributed Message System Book(Kafka)","title":"Previous on my Technolog book"},{"location":"#salut-cest-moi","text":"Do or Do not, there is no try Hello, this is me, Jacob. Currently, I'm working as DevOps and Cloud Engineer in SAP, and I'm the certified AWS Solution Architect and Certified Azure Administrator, Kubernetes Specialist, Jenkins CI/CD and ElasticStack enthusiast. I was working as Backend Engineer in New York City and achieved my CS master degree in SIT, America. Believe it or not, I'll keep writing, more and more books will come out at such dramatic and unprecedented 2021. If you have anything want to talk to me directly, you can reach out for via email xichao2015@outlook.com\u3002 Salute, c'est moi, Jacob. Actuellement, je travaille en tant qu'ing\u00e9nieur DevOps et Cloud dans SAP, et je suis architecte de solution AWS certifi\u00e9 et administrateur Azure certifi\u00e9, sp\u00e9cialiste Kubernetes et passionn\u00e9 de CI/CD. Je travaillais en tant qu'ing\u00e9nieur backend \u00e0 New York et j'ai obtenu mon master CS \u00e0 SIT, en Am\u00e9rique. Croyez-le ou non, je continuerai \u00e0 \u00e9crire, de plus en plus de livres sortiront cette ann\u00e9e.","title":"Salut! C'est Moi"},{"location":"#to-be-continue","text":"I will start working on Fintech book later on and in future, I will put more effort do finish \"Distributed Message System Book\".\ud83d\ude42","title":"To be continue"},{"location":"chap1/17Adv_K8S_Metrics_Server/","text":"\u7b2c\u56db\u8282 Metrics Server \u5b89\u88c5 kubernetes \u96c6\u7fa4\u8d44\u6e90\u76d1\u63a7\u4e4b\u524d\u53ef\u4ee5\u901a\u8fc7 heapster \u6765\u83b7\u53d6\u6570\u636e\uff0c\u5728 1.11 \u5f00\u59cb\u5f00\u59cb\u9010\u6e10\u5e9f\u5f03 heapster \u4e86\uff0c\u91c7\u7528 metrics-server \u6765\u4ee3\u66ff\uff0c metrics-server \u662f\u96c6\u7fa4\u7684\u6838\u5fc3\u76d1\u63a7\u6570\u636e\u7684\u805a\u5408\u5668\uff0c\u5b83\u4ece kubelet \u516c\u5f00\u7684 Summary API \u4e2d\u91c7\u96c6\u6307\u6807\u4fe1\u606f\uff0c metrics-server \u662f\u6269\u5c55\u7684 APIServer \uff0c\u4f9d\u8d56\u4e8e kube-aggregator \uff0c \u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5728 APIServer \u4e2d\u5f00\u542f\u76f8\u5173\u53c2\u6570\u3002 \u67e5\u770b APIServer \u53c2\u6570\u914d\u7f6e\uff0c\u786e\u4fdd\u4f60\u7684 APIServer \u542f\u52a8\u53c2\u6570\u4e2d\u5305\u542b\u4e0b\u7684\u4e00\u4e9b\u53c2\u6570\u914d\u7f6e\u3002 ... - --requestheader-client-ca-file=/etc/kubernetes/certs/proxy-ca.crt - --proxy-client-cert-file=/etc/kubernetes/certs/proxy.crt - --proxy-client-key-file=/etc/kubernetes/certs/proxy.key - --requestheader-allowed-names=aggregator - --requestheader-extra-headers-prefix=X-Remote-Extra- - --requestheader-group-headers=X-Remote-Group - --requestheader-username-headers=X-Remote-User - --enable-aggregator-routing=true ... \u5982\u679c\u60a8\u672a\u5728 master \u8282\u70b9\u4e0a\u8fd0\u884c kube-proxy \uff0c\u5219\u5fc5\u987b\u786e\u4fdd kube-apiserver \u542f\u52a8\u53c2\u6570\u4e2d\u5305\u542b --enable-aggregator-routing=true 1 \u5b89\u88c5 \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 metrics-server \u5b98\u65b9\u63d0\u4f9b\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u76f4\u63a5\u5b89\u88c5\uff0c\u5730\u5740\uff1a https://github.com/kubernetes-incubator/metrics-server/tree/master/deploy # kubernetes 1.7 $ kubectl create -f 1.7/ # kubernetes > 1.8 $ kubectl create -f 1.8+/ \u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Helm \u6765\u5b89\u88c5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 metrics-server \u7684 Chart \u5305 fetch \u5230\u96c6\u7fa4\u4e2d\uff0c\u67e5\u770b\u6a21\u677f\uff0c\u53bb\u4e86\u89e3\u5982\u4f55\u90e8\u7f72\u5e94\u7528\uff1a $ helm fetch stable/metrics-server $ tar -xvf metrics-server-2.7.1.tgz $ cd metrics-server \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5fae\u8f6f\u7684\u955c\u50cf\u6765\u8986\u76d6\u9ed8\u8ba4\u7684 gcr.io \u955c\u50cf\uff0c\u5982\u4e0b\u547d\u540d\u5b89\u88c5\uff1a $ helm install --name metric --namespace kube-system --set image.repository=gcr.azk8s.cn/google_containers/metrics-server-amd64 . NAME: metric LAST DEPLOYED: Wed May 22 01:30:53 2019 NAMESPACE: kube-system STATUS: DEPLOYED RESOURCES: ==> v1/ServiceAccount NAME SECRETS AGE metric-metrics-server 1 1s ==> v1/ClusterRole NAME AGE system:metrics-server-aggregated-reader 1s system:metric-metrics-server 1s ==> v1/ClusterRoleBinding NAME AGE metric-metrics-server:system:auth-delegator 1s system:metric-metrics-server 1s ==> v1beta1/RoleBinding NAME AGE metric-metrics-server-auth-reader 1s ==> v1/Service NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE metric-metrics-server ClusterIP 10.103.214.219 <none> 443/TCP 1s ==> v1/Deployment NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE metric-metrics-server 1 1 1 0 1s ==> v1beta1/APIService NAME AGE v1beta1.metrics.k8s.io 1s ==> v1/Pod(related) NAME READY STATUS RESTARTS AGE metric-metrics-server-697bd98b8b-kvg2d 0/1 ContainerCreating 0 1s NOTES: The metric server has been deployed. In a few minutes you should be able to list metrics using the following command: kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\" \u7b49\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u67e5\u770b Pod \u65e5\u5fd7\u662f\u5426\u6b63\u5e38\uff1a $ kubectl get pods -n kube-system -l release=metric NAME READY STATUS RESTARTS AGE metric-metrics-server-697bd98b8b-kvg2d 1/1 Running 0 58m $ kubectl logs -f metric-metrics-server-697bd98b8b-kvg2d -n kube-system I0521 17:31:54.580374 1 serving.go:273] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key) [restful] 2019/05/21 17:31:55 log.go:33: [restful/swagger] listing is available at https://:8443/swaggerapi [restful] 2019/05/21 17:31:55 log.go:33: [restful/swagger] https://:8443/swaggerui/ is mapped to folder /swagger-ui/ I0521 17:31:55.112171 1 serve.go:96] Serving securely on [::]:8443 E0521 17:32:55.229771 1 manager.go:111] unable to fully collect metrics: [unable to fully scrape metrics from source kubelet_summary:ydzs-node2: unable to fetch metrics from kubelet ydzs-node2 (ydzs-node2): Get https://ydzs-node2:10250/stats/summary/: dial tcp: lookup ydzs-node2 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:ydzs-master: unable to fetch metrics from kubelet ydzs-master (ydzs-master): Get https://ydzs-master:10250/stats/summary/: dial tcp: lookup ydzs-master on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:ydzs-node1: unable to fetch metrics from kubelet ydzs-node1 (ydzs-node1): Get https://ydzs-node1:10250/stats/summary/: dial tcp: lookup ydzs-node1 on 10.96.0.10:53: no such host \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 Pod \u4e2d\u51fa\u73b0\u4e86\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f\uff1a xxx: no such host \uff0c \u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u9519\u8bef\u4fe1\u606f\u4e00\u822c\u5c31\u53ef\u4ee5\u786e\u5b9a\u662f DNS \u89e3\u6790\u4e0d\u4e86\u9020\u6210\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 metrics-server \u4f1a\u901a\u8fc7 kubelet \u7684 10250 \u7aef\u53e3\u83b7\u53d6\u4fe1\u606f \uff0c\u4f7f\u7528\u7684\u662f hostname \uff0c\u6211\u4eec\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\u5728\u8282\u70b9\u7684 /etc/hosts \u91cc\u9762\u6dfb\u52a0\u4e86\u8282\u70b9\u7684 hostname \u548c ip \u7684\u6620\u5c04\uff0c\u4f46\u662f\u662f\u6211\u4eec\u7684 metrics-server \u7684 Pod \u5185\u90e8\u5e76\u6ca1\u6709\u8fd9\u4e2a hosts \u4fe1\u606f\uff0c\u5f53\u7136\u4e5f\u5c31\u4e0d\u8bc6\u522b hostname \u4e86\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u7b2c\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728\u96c6\u7fa4\u5185\u90e8\u7684 DNS \u670d\u52a1\u91cc\u9762\u6dfb\u52a0\u4e0a hostname \u7684\u89e3\u6790 \uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u96c6\u7fa4\u4e2d\u4f7f\u7528\u7684\u662f CoreDNS \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u4fee\u6539\u4e0b CoreDNS \u7684 Configmap \u4fe1\u606f\uff0c\u6dfb\u52a0\u4e0a hosts \u4fe1\u606f\uff1a $ kubectl edit configmap coredns -n kube-system apiVersion: v1 data: Corefile: | .:53 { errors health hosts { # \u6dfb\u52a0\u96c6\u7fa4\u8282\u70b9hosts\u9690\u5c04\u4fe1\u606f 10.151.30.11 emp-master 10.151.30.22 emp-node1 10.151.30.23 emp-node2 fallthrough } kubernetes cluster.local in-addr.arpa ip6.arpa { pods insecure upstream fallthrough in-addr.arpa ip6.arpa } prometheus :9153 proxy . /etc/resolv.conf cache 30 reload } kind: ConfigMap metadata: creationTimestamp: 2019-05-18T11:07:46Z name: coredns namespace: kube-system \u8fd9\u6837\u5f53\u5728\u96c6\u7fa4\u5185\u90e8\u8bbf\u95ee\u96c6\u7fa4\u7684 hostname \u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u89e3\u6790\u5230\u5bf9\u5e94\u7684 ip \u4e86\uff0c \u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728 metrics-server \u7684\u542f\u52a8\u53c2\u6570\u4e2d\u4fee\u6539 kubelet-preferred-address-types \u53c2\u6570\uff0c \u5982\u4e0b\uff1a\uff08custom-values.yaml\uff09 image: repository: gcr.azk8s.cn/google_containers/metrics-server-amd64 args: - --kubelet-preferred-address-types=InternalIP \u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u7136\u540e\u91cd\u65b0\u5b89\u88c5\uff1a $ helm delete metric --purge $ helm install --name metric --namespace kube-system -f custom-values.yaml . ...... $ kubectl get pods -n kube-system |grep metric metric-metrics-server-58fc94d9f-jlxcb 1/1 Running 0 47s $ kubectl logs -f metric-metrics-server-58fc94d9f-jlxcb -n kube-system I0521 17:54:32.873326 1 serving.go:273] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key) [restful] 2019/05/21 17:54:34 log.go:33: [restful/swagger] listing is available at https://:8443/swaggerapi [restful] 2019/05/21 17:54:34 log.go:33: [restful/swagger] https://:8443/swaggerui/ is mapped to folder /swagger-ui/ I0521 17:54:34.668940 1 serve.go:96] Serving securely on [::]:8443 E0521 17:55:34.650303 1 manager.go:111] unable to fully collect metrics: [unable to fully scrape metrics from source kubelet_summary:ydzs-master: unable to fetch metrics from kubelet ydzs-master (10.151.30.11): Get https://10.151.30.11:10250/stats/summary/: x509: cannot validate certificate for 10.151.30.11 because it doesn't contain any IP SANs, unable to fully scrape metrics from source kubelet_summary:ydzs-node2: unable to fetch metrics from kubelet ydzs-node2 (10.151.30.23): Get https://10.151.30.23:10250/stats/summary/: x509: cannot validate certificate for 10.151.30.23 because it doesn't contain any IP SANs, unable to fully scrape metrics from source kubelet_summary:ydzs-node1: unable to fetch metrics from kubelet ydzs-node1 (10.151.30.22): Get https://10.151.30.22:10250/stats/summary/: x509: cannot validate certificate for 10.151.30.22 because it doesn't contain any IP SANs] \u56e0\u4e3a\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\uff0c CA \u8bc1\u4e66\u5e76\u6ca1\u6709\u628a\u5404\u4e2a\u8282\u70b9\u7684 IP \u7b7e\u4e0a\u53bb\uff0c\u6240\u4ee5\u8fd9\u91cc metrics-server \u901a\u8fc7 IP \u53bb\u8bf7\u6c42\u65f6\uff0c\u63d0\u793a\u7b7e\u7684\u8bc1\u4e66\u6ca1\u6709\u5bf9\u5e94\u7684 IP\uff08\u9519\u8bef\uff1ax509: cannot validate certificate for 192.168.33.11 because it doesn\u2019t contain any IP SANs\uff09 \uff0c \u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a --kubelet-insecure-tls \u53c2\u6570\u8df3\u8fc7\u8bc1\u4e66\u6821\u9a8c \uff1a image: repository: gcr.azk8s.cn/google_containers/metrics-server-amd64 args: - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP \u7136\u540e\u518d \u91cd\u65b0\u5b89\u88c5 \u5373\u53ef\u6210\u529f! $ kubectl get apiservice | grep metrics v1beta1.metrics.k8s.io 2019-05-21T18:03:03Z $ kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\" {\"kind\":\"NodeMetricsList\",\"apiVersion\":\"metrics.k8s.io/v1beta1\",\"metadata\":{\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes\"},\"items\":[{\"metadata\":{\"name\":\"ydzs-master\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/ydzs-master\",\"creationTimestamp\":\"2019-05-22T22:11:16Z\"},\"timestamp\":\"2019-05-22T22:11:01Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"516674270n\",\"memory\":\"2555172Ki\"}},{\"metadata\":{\"name\":\"ydzs-node1\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/ydzs-node1\",\"creationTimestamp\":\"2019-05-22T22:11:16Z\"},\"timestamp\":\"2019-05-22T22:11:05Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"413218279n\",\"memory\":\"3417680Ki\"}}]} $ kubectl top nodes NAME CPU(cores) CPU% MEMORY(bytes) MEMORY% emp-master 496m 24% 2443Mi 66% emp-node1 412m 10% 3338Mi 43% \u672c\u7bc7\u6587\u7ae0\u4f7f\u7528\u7684\u96c6\u7fa4\u7248\u672c\u4e3a kubernetes v1.11.0 \u7248\u672c\uff0c\u91c7\u7528 Kubeadm \u65b9\u5f0f\u5b89\u88c5\u3002 \u5728\u5b89\u88c5\u7684\u8fc7\u7a0b\u4e2d\u6216\u591a\u6216\u5c11\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u95ee\u9898\uff0c\u6700\u597d\u7684\u529e\u6cd5\u5c31\u662f\u4e00\u6b65\u4e00\u6b65\u7684\u53bb\u6392\u9519\uff0c\u51fa\u73b0\u4e86\u9519\u8bef\u4e0d\u8981\u7740\u6025\uff0c\u6700\u91cd\u8981\u7684\u5c31\u662f\u5206\u6790\u9519\u8bef\u65e5\u5fd7\u4fe1\u606f\uff0c\u5f88\u591a\u9519\u8bef\u65e5\u5fd7\u63d0\u793a\u5176\u5b9e\u5df2\u7ecf\u975e\u5e38\u660e\u663e\u4e86\u3002","title":"\u7b2c\u56db\u8282 Metrics Server \u5b89\u88c5"},{"location":"chap1/17Adv_K8S_Metrics_Server/#metrics-server","text":"kubernetes \u96c6\u7fa4\u8d44\u6e90\u76d1\u63a7\u4e4b\u524d\u53ef\u4ee5\u901a\u8fc7 heapster \u6765\u83b7\u53d6\u6570\u636e\uff0c\u5728 1.11 \u5f00\u59cb\u5f00\u59cb\u9010\u6e10\u5e9f\u5f03 heapster \u4e86\uff0c\u91c7\u7528 metrics-server \u6765\u4ee3\u66ff\uff0c metrics-server \u662f\u96c6\u7fa4\u7684\u6838\u5fc3\u76d1\u63a7\u6570\u636e\u7684\u805a\u5408\u5668\uff0c\u5b83\u4ece kubelet \u516c\u5f00\u7684 Summary API \u4e2d\u91c7\u96c6\u6307\u6807\u4fe1\u606f\uff0c metrics-server \u662f\u6269\u5c55\u7684 APIServer \uff0c\u4f9d\u8d56\u4e8e kube-aggregator \uff0c \u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5728 APIServer \u4e2d\u5f00\u542f\u76f8\u5173\u53c2\u6570\u3002 \u67e5\u770b APIServer \u53c2\u6570\u914d\u7f6e\uff0c\u786e\u4fdd\u4f60\u7684 APIServer \u542f\u52a8\u53c2\u6570\u4e2d\u5305\u542b\u4e0b\u7684\u4e00\u4e9b\u53c2\u6570\u914d\u7f6e\u3002 ... - --requestheader-client-ca-file=/etc/kubernetes/certs/proxy-ca.crt - --proxy-client-cert-file=/etc/kubernetes/certs/proxy.crt - --proxy-client-key-file=/etc/kubernetes/certs/proxy.key - --requestheader-allowed-names=aggregator - --requestheader-extra-headers-prefix=X-Remote-Extra- - --requestheader-group-headers=X-Remote-Group - --requestheader-username-headers=X-Remote-User - --enable-aggregator-routing=true ... \u5982\u679c\u60a8\u672a\u5728 master \u8282\u70b9\u4e0a\u8fd0\u884c kube-proxy \uff0c\u5219\u5fc5\u987b\u786e\u4fdd kube-apiserver \u542f\u52a8\u53c2\u6570\u4e2d\u5305\u542b --enable-aggregator-routing=true","title":"\u7b2c\u56db\u8282 Metrics Server \u5b89\u88c5"},{"location":"chap1/17Adv_K8S_Metrics_Server/#1","text":"\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 metrics-server \u5b98\u65b9\u63d0\u4f9b\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u76f4\u63a5\u5b89\u88c5\uff0c\u5730\u5740\uff1a https://github.com/kubernetes-incubator/metrics-server/tree/master/deploy # kubernetes 1.7 $ kubectl create -f 1.7/ # kubernetes > 1.8 $ kubectl create -f 1.8+/ \u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Helm \u6765\u5b89\u88c5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 metrics-server \u7684 Chart \u5305 fetch \u5230\u96c6\u7fa4\u4e2d\uff0c\u67e5\u770b\u6a21\u677f\uff0c\u53bb\u4e86\u89e3\u5982\u4f55\u90e8\u7f72\u5e94\u7528\uff1a $ helm fetch stable/metrics-server $ tar -xvf metrics-server-2.7.1.tgz $ cd metrics-server \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5fae\u8f6f\u7684\u955c\u50cf\u6765\u8986\u76d6\u9ed8\u8ba4\u7684 gcr.io \u955c\u50cf\uff0c\u5982\u4e0b\u547d\u540d\u5b89\u88c5\uff1a $ helm install --name metric --namespace kube-system --set image.repository=gcr.azk8s.cn/google_containers/metrics-server-amd64 . NAME: metric LAST DEPLOYED: Wed May 22 01:30:53 2019 NAMESPACE: kube-system STATUS: DEPLOYED RESOURCES: ==> v1/ServiceAccount NAME SECRETS AGE metric-metrics-server 1 1s ==> v1/ClusterRole NAME AGE system:metrics-server-aggregated-reader 1s system:metric-metrics-server 1s ==> v1/ClusterRoleBinding NAME AGE metric-metrics-server:system:auth-delegator 1s system:metric-metrics-server 1s ==> v1beta1/RoleBinding NAME AGE metric-metrics-server-auth-reader 1s ==> v1/Service NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE metric-metrics-server ClusterIP 10.103.214.219 <none> 443/TCP 1s ==> v1/Deployment NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE metric-metrics-server 1 1 1 0 1s ==> v1beta1/APIService NAME AGE v1beta1.metrics.k8s.io 1s ==> v1/Pod(related) NAME READY STATUS RESTARTS AGE metric-metrics-server-697bd98b8b-kvg2d 0/1 ContainerCreating 0 1s NOTES: The metric server has been deployed. In a few minutes you should be able to list metrics using the following command: kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\" \u7b49\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u67e5\u770b Pod \u65e5\u5fd7\u662f\u5426\u6b63\u5e38\uff1a $ kubectl get pods -n kube-system -l release=metric NAME READY STATUS RESTARTS AGE metric-metrics-server-697bd98b8b-kvg2d 1/1 Running 0 58m $ kubectl logs -f metric-metrics-server-697bd98b8b-kvg2d -n kube-system I0521 17:31:54.580374 1 serving.go:273] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key) [restful] 2019/05/21 17:31:55 log.go:33: [restful/swagger] listing is available at https://:8443/swaggerapi [restful] 2019/05/21 17:31:55 log.go:33: [restful/swagger] https://:8443/swaggerui/ is mapped to folder /swagger-ui/ I0521 17:31:55.112171 1 serve.go:96] Serving securely on [::]:8443 E0521 17:32:55.229771 1 manager.go:111] unable to fully collect metrics: [unable to fully scrape metrics from source kubelet_summary:ydzs-node2: unable to fetch metrics from kubelet ydzs-node2 (ydzs-node2): Get https://ydzs-node2:10250/stats/summary/: dial tcp: lookup ydzs-node2 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:ydzs-master: unable to fetch metrics from kubelet ydzs-master (ydzs-master): Get https://ydzs-master:10250/stats/summary/: dial tcp: lookup ydzs-master on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:ydzs-node1: unable to fetch metrics from kubelet ydzs-node1 (ydzs-node1): Get https://ydzs-node1:10250/stats/summary/: dial tcp: lookup ydzs-node1 on 10.96.0.10:53: no such host \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 Pod \u4e2d\u51fa\u73b0\u4e86\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f\uff1a xxx: no such host \uff0c \u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u9519\u8bef\u4fe1\u606f\u4e00\u822c\u5c31\u53ef\u4ee5\u786e\u5b9a\u662f DNS \u89e3\u6790\u4e0d\u4e86\u9020\u6210\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 metrics-server \u4f1a\u901a\u8fc7 kubelet \u7684 10250 \u7aef\u53e3\u83b7\u53d6\u4fe1\u606f \uff0c\u4f7f\u7528\u7684\u662f hostname \uff0c\u6211\u4eec\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\u5728\u8282\u70b9\u7684 /etc/hosts \u91cc\u9762\u6dfb\u52a0\u4e86\u8282\u70b9\u7684 hostname \u548c ip \u7684\u6620\u5c04\uff0c\u4f46\u662f\u662f\u6211\u4eec\u7684 metrics-server \u7684 Pod \u5185\u90e8\u5e76\u6ca1\u6709\u8fd9\u4e2a hosts \u4fe1\u606f\uff0c\u5f53\u7136\u4e5f\u5c31\u4e0d\u8bc6\u522b hostname \u4e86\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u7b2c\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728\u96c6\u7fa4\u5185\u90e8\u7684 DNS \u670d\u52a1\u91cc\u9762\u6dfb\u52a0\u4e0a hostname \u7684\u89e3\u6790 \uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u96c6\u7fa4\u4e2d\u4f7f\u7528\u7684\u662f CoreDNS \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u4fee\u6539\u4e0b CoreDNS \u7684 Configmap \u4fe1\u606f\uff0c\u6dfb\u52a0\u4e0a hosts \u4fe1\u606f\uff1a $ kubectl edit configmap coredns -n kube-system apiVersion: v1 data: Corefile: | .:53 { errors health hosts { # \u6dfb\u52a0\u96c6\u7fa4\u8282\u70b9hosts\u9690\u5c04\u4fe1\u606f 10.151.30.11 emp-master 10.151.30.22 emp-node1 10.151.30.23 emp-node2 fallthrough } kubernetes cluster.local in-addr.arpa ip6.arpa { pods insecure upstream fallthrough in-addr.arpa ip6.arpa } prometheus :9153 proxy . /etc/resolv.conf cache 30 reload } kind: ConfigMap metadata: creationTimestamp: 2019-05-18T11:07:46Z name: coredns namespace: kube-system \u8fd9\u6837\u5f53\u5728\u96c6\u7fa4\u5185\u90e8\u8bbf\u95ee\u96c6\u7fa4\u7684 hostname \u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u89e3\u6790\u5230\u5bf9\u5e94\u7684 ip \u4e86\uff0c \u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728 metrics-server \u7684\u542f\u52a8\u53c2\u6570\u4e2d\u4fee\u6539 kubelet-preferred-address-types \u53c2\u6570\uff0c \u5982\u4e0b\uff1a\uff08custom-values.yaml\uff09 image: repository: gcr.azk8s.cn/google_containers/metrics-server-amd64 args: - --kubelet-preferred-address-types=InternalIP \u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u7136\u540e\u91cd\u65b0\u5b89\u88c5\uff1a $ helm delete metric --purge $ helm install --name metric --namespace kube-system -f custom-values.yaml . ...... $ kubectl get pods -n kube-system |grep metric metric-metrics-server-58fc94d9f-jlxcb 1/1 Running 0 47s $ kubectl logs -f metric-metrics-server-58fc94d9f-jlxcb -n kube-system I0521 17:54:32.873326 1 serving.go:273] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key) [restful] 2019/05/21 17:54:34 log.go:33: [restful/swagger] listing is available at https://:8443/swaggerapi [restful] 2019/05/21 17:54:34 log.go:33: [restful/swagger] https://:8443/swaggerui/ is mapped to folder /swagger-ui/ I0521 17:54:34.668940 1 serve.go:96] Serving securely on [::]:8443 E0521 17:55:34.650303 1 manager.go:111] unable to fully collect metrics: [unable to fully scrape metrics from source kubelet_summary:ydzs-master: unable to fetch metrics from kubelet ydzs-master (10.151.30.11): Get https://10.151.30.11:10250/stats/summary/: x509: cannot validate certificate for 10.151.30.11 because it doesn't contain any IP SANs, unable to fully scrape metrics from source kubelet_summary:ydzs-node2: unable to fetch metrics from kubelet ydzs-node2 (10.151.30.23): Get https://10.151.30.23:10250/stats/summary/: x509: cannot validate certificate for 10.151.30.23 because it doesn't contain any IP SANs, unable to fully scrape metrics from source kubelet_summary:ydzs-node1: unable to fetch metrics from kubelet ydzs-node1 (10.151.30.22): Get https://10.151.30.22:10250/stats/summary/: x509: cannot validate certificate for 10.151.30.22 because it doesn't contain any IP SANs] \u56e0\u4e3a\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\uff0c CA \u8bc1\u4e66\u5e76\u6ca1\u6709\u628a\u5404\u4e2a\u8282\u70b9\u7684 IP \u7b7e\u4e0a\u53bb\uff0c\u6240\u4ee5\u8fd9\u91cc metrics-server \u901a\u8fc7 IP \u53bb\u8bf7\u6c42\u65f6\uff0c\u63d0\u793a\u7b7e\u7684\u8bc1\u4e66\u6ca1\u6709\u5bf9\u5e94\u7684 IP\uff08\u9519\u8bef\uff1ax509: cannot validate certificate for 192.168.33.11 because it doesn\u2019t contain any IP SANs\uff09 \uff0c \u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a --kubelet-insecure-tls \u53c2\u6570\u8df3\u8fc7\u8bc1\u4e66\u6821\u9a8c \uff1a image: repository: gcr.azk8s.cn/google_containers/metrics-server-amd64 args: - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP \u7136\u540e\u518d \u91cd\u65b0\u5b89\u88c5 \u5373\u53ef\u6210\u529f! $ kubectl get apiservice | grep metrics v1beta1.metrics.k8s.io 2019-05-21T18:03:03Z $ kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\" {\"kind\":\"NodeMetricsList\",\"apiVersion\":\"metrics.k8s.io/v1beta1\",\"metadata\":{\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes\"},\"items\":[{\"metadata\":{\"name\":\"ydzs-master\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/ydzs-master\",\"creationTimestamp\":\"2019-05-22T22:11:16Z\"},\"timestamp\":\"2019-05-22T22:11:01Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"516674270n\",\"memory\":\"2555172Ki\"}},{\"metadata\":{\"name\":\"ydzs-node1\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/ydzs-node1\",\"creationTimestamp\":\"2019-05-22T22:11:16Z\"},\"timestamp\":\"2019-05-22T22:11:05Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"413218279n\",\"memory\":\"3417680Ki\"}}]} $ kubectl top nodes NAME CPU(cores) CPU% MEMORY(bytes) MEMORY% emp-master 496m 24% 2443Mi 66% emp-node1 412m 10% 3338Mi 43% \u672c\u7bc7\u6587\u7ae0\u4f7f\u7528\u7684\u96c6\u7fa4\u7248\u672c\u4e3a kubernetes v1.11.0 \u7248\u672c\uff0c\u91c7\u7528 Kubeadm \u65b9\u5f0f\u5b89\u88c5\u3002 \u5728\u5b89\u88c5\u7684\u8fc7\u7a0b\u4e2d\u6216\u591a\u6216\u5c11\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u95ee\u9898\uff0c\u6700\u597d\u7684\u529e\u6cd5\u5c31\u662f\u4e00\u6b65\u4e00\u6b65\u7684\u53bb\u6392\u9519\uff0c\u51fa\u73b0\u4e86\u9519\u8bef\u4e0d\u8981\u7740\u6025\uff0c\u6700\u91cd\u8981\u7684\u5c31\u662f\u5206\u6790\u9519\u8bef\u65e5\u5fd7\u4fe1\u606f\uff0c\u5f88\u591a\u9519\u8bef\u65e5\u5fd7\u63d0\u793a\u5176\u5b9e\u5df2\u7ecf\u975e\u5e38\u660e\u663e\u4e86\u3002","title":"1 \u5b89\u88c5"},{"location":"chap1/18Adv_Prometheus_index_classfication/","text":"\u7b2c\u4e8c\u8282 \u6df1\u5165Prometheus\u8bbe\u8ba1-\u6307\u6807\u5b9a\u4e49\u4e0e\u5206\u7c7b(PromQL) 1.\u6307\u6807 \u6bcf\u79cd\u76d1\u63a7\u7cfb\u7edf\u90fd\u6709\u81ea\u5df1\u7684\u6307\u6807\u5b9a\u4e49\u548c\u89c4\u8303 \u6307\u6807\u7684\u6570\u636e\u683c\u5f0f\u5c06\u76f4\u63a5\u5f71\u54cd\u5bf9\u6570\u636e\u7684\u91c7\u96c6\u548c\u5b58\u50a8 \u5b9a\u4e49\u6307\u6807\u65f6\u9700\u8981\u5145\u5206\u8003\u8651\u901a\u7528\u6027\u548c\u6269\u5c55\u6027 1.1 \u6307\u6807\u5b9a\u4e49 <metric name>{<label name>=<label value>, ...}, 1.1.1\u6307\u6807\u540d\u79f0\uff08metric name\uff09 \u7528\u4e8e\u8bf4\u660e\u6307\u6807\u7684\u542b\u4e49 \u6307\u6807\u540d\u79f0\u5fc5\u987b\u6709\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u6216\u8005\u5192\u53f7\u7ec4\u6210 \u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f [a-zA-Z:][a-zA-Z0-9:] \u5192\u53f7\u4e0d\u80fd\u7528\u4e8e exporter 1.1.2 \u6807\u7b7e\uff08label\uff09 \u4f53\u73b0\u6307\u6807\u7684\u7ef4\u5ea6\u7279\u6027\uff0c\u7528\u4e8e\u8fc7\u6ee4\u548c\u805a\u5408 \u901a\u8fc7\u6807\u7b7e\u540d\u548c\u6807\u7b7e\u503c\u7ec4\u6210\uff0c\u952e\u503c\u5bf9\u5f62\u5f0f\u5f62\u6210\u591a\u79cd\u7ef4\u5ea6 1.1.3 \u4e3e\u4f8b \u6307\u68071 http_request_total{status=\"200\",method=\"POST\"} \u6307\u68072 {__name__ = \"http_request_total\",status=\"200\",method=\"POST\"} \u4ee5\u4e0a\u4e24\u4e2a\u6307\u6807\u662f\u4e00\u6837\uff0c\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u6807\u7b7e\u662f\u7cfb\u7edf\u5185\u90e8\u4f7f\u7528\u7684 \u6307\u6807\u540d\u79f0\uff1a http_request_total \u4ee3\u8868 HTTP \u8bf7\u6c42\u7684\u603b\u6570 \u6807\u7b7e1\uff1a status \u503c 200 \uff0c \u4ee3\u8868\u72b6\u6001\u7801\u4e3a 200 \u6807\u7b7e2\uff1a method \u503c POST \uff0c \u4ee3\u8868\u8bf7\u6c42\u7c7b\u578b\u4e3a POST 2 \u6307\u6807\u5206\u7c7b Prometheus \u6307\u6807\u5206\u4e3a Counter \u3001 Gauge \u3001 Histogram \u3001 Summary \u3002 2.1 Counter \u8ba1\u6570\u5668 \u8ba1\u6570\u5668\u7c7b\u578b\uff0c\u53ea\u589e\u4e0d\u51cf \u9002\u7528\u4e8e\u673a\u5668\u542f\u52a8\u65f6\u95f4\u3001HTTP\u8bbf\u95ee\u91cf \u5177\u6709\u5f88\u597d\u7684\u4e0d\u76f8\u5173\u6027\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u673a\u5668\u91cd\u542f\u800c\u7f6e 0 \u901a\u5e38\u4f1a\u7ed3\u5408 rate() \u65b9\u6cd5\u83b7\u53d6\u8be5\u6307\u6807\u5728\u67d0\u4e2a\u65f6\u95f4\u6bb5\u7684\u53d8\u5316\u7387 2.2 Gauge \u4eea\u8868\u76d8\uff0c\u8868\u5f81\u6307\u6807\u7684\u5b9e\u65f6\u53d8\u5316\u60c5\u51b5 \u3002 \u53ef\u589e\u53ef\u51cf\uff0c CPU \u548c\u5185\u5b58\u4f7f\u7528\u91cf\u3002 \u5927\u90e8\u5206\u76d1\u63a7\u6570\u636e\u7c7b\u578b\u90fd\u662f Gauge \u7c7b\u578b\u7684 2.3 Summary \u9ad8\u7ea7\u6307\u6807\uff0c\u7528\u4e8e\u51f8\u663e\u6570\u636e\u7684\u5206\u5e03\u60c5\u51b5 \u67d0\u4e2a\u65f6\u95f4\u6bb5\u5185\u8bf7\u6c42\u7684\u54cd\u5e94\u65f6\u95f4 \u53ef\u4ee5\u4e0e Histogram \u76f8\u4e92\u8f6c\u5316 \u91c7\u6837\u70b9\u5206\u4f4d\u56fe\u7edf\u8ba1\uff0c\u7528\u4e8e\u5f97\u5230\u6570\u636e\u7684\u5206\u5e03\u60c5\u51b5 \u65e0\u9700\u6d88\u8017\u670d\u52a1\u7aef\u8d44\u6e90 \u4e0e histogram \u76f8\u6bd4\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\u66f4\u591a \u8ba1\u7b97\u7684\u6307\u6807\u4e0d\u80fd\u518d\u83b7\u53d6\u5e73\u5747\u6570\u7b49\u5176\u4ed6\u6307\u6807 \u4e00\u822c\u53ea\u9002\u7528\u4e8e\u72ec\u7acb\u7684\u76d1\u63a7\u6307\u6807\uff0c\u5982\u5783\u573e\u56de\u6536\u65f6\u95f4\u7b49 2.4 Histogram \u53cd\u6620\u4e86\u67d0\u4e2a\u533a\u95f4\u5185\u7684\u6837\u672c\u4e2a\u6570\uff0c\u901a\u8fc7 {le=\"\u4e0a\u8fb9\u754c\"} \u6307\u5b9a\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6837\u672c\u6570\u3002 2.5 \u6570\u636e\u6837\u672c Prometheus \u91c7\u96c6\u7684\u6570\u636e\u6837\u672c\u90fd\u662f\u4ee5\u65f6\u95f4\u5e8f\u5217\u4fdd\u5b58\u7684\uff0c\u6bcf\u4e2a\u6837\u672c\u90fd\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210 \u6307\u6807 \u6837\u672c\u503c\uff1a 64\u4f4d\u6d6e\u70b9\u6570\u548c\u65f6\u95f4\u6233\u7684\u7ec4\u5408\u4ee3\u8868\u8fd9\u4e2a\u65f6\u95f4\u70b9\u91c7\u96c6\u5230\u7684\u6570\u636e\u3002 \u65f6\u95f4\u6233","title":"\u7b2c\u4e8c\u8282 \u6df1\u5165Prometheus\u8bbe\u8ba1-\u6307\u6807\u5b9a\u4e49\u4e0e\u5206\u7c7b(PromQL)"},{"location":"chap1/18Adv_Prometheus_index_classfication/#prometheus-promql","text":"","title":"\u7b2c\u4e8c\u8282 \u6df1\u5165Prometheus\u8bbe\u8ba1-\u6307\u6807\u5b9a\u4e49\u4e0e\u5206\u7c7b(PromQL)"},{"location":"chap1/18Adv_Prometheus_index_classfication/#1","text":"\u6bcf\u79cd\u76d1\u63a7\u7cfb\u7edf\u90fd\u6709\u81ea\u5df1\u7684\u6307\u6807\u5b9a\u4e49\u548c\u89c4\u8303 \u6307\u6807\u7684\u6570\u636e\u683c\u5f0f\u5c06\u76f4\u63a5\u5f71\u54cd\u5bf9\u6570\u636e\u7684\u91c7\u96c6\u548c\u5b58\u50a8 \u5b9a\u4e49\u6307\u6807\u65f6\u9700\u8981\u5145\u5206\u8003\u8651\u901a\u7528\u6027\u548c\u6269\u5c55\u6027","title":"1.\u6307\u6807"},{"location":"chap1/18Adv_Prometheus_index_classfication/#11","text":"<metric name>{<label name>=<label value>, ...},","title":"1.1 \u6307\u6807\u5b9a\u4e49"},{"location":"chap1/18Adv_Prometheus_index_classfication/#111metric-name","text":"\u7528\u4e8e\u8bf4\u660e\u6307\u6807\u7684\u542b\u4e49 \u6307\u6807\u540d\u79f0\u5fc5\u987b\u6709\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u6216\u8005\u5192\u53f7\u7ec4\u6210 \u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f [a-zA-Z:][a-zA-Z0-9:] \u5192\u53f7\u4e0d\u80fd\u7528\u4e8e exporter","title":"1.1.1\u6307\u6807\u540d\u79f0\uff08metric name\uff09"},{"location":"chap1/18Adv_Prometheus_index_classfication/#112-label","text":"\u4f53\u73b0\u6307\u6807\u7684\u7ef4\u5ea6\u7279\u6027\uff0c\u7528\u4e8e\u8fc7\u6ee4\u548c\u805a\u5408 \u901a\u8fc7\u6807\u7b7e\u540d\u548c\u6807\u7b7e\u503c\u7ec4\u6210\uff0c\u952e\u503c\u5bf9\u5f62\u5f0f\u5f62\u6210\u591a\u79cd\u7ef4\u5ea6","title":"1.1.2 \u6807\u7b7e\uff08label\uff09"},{"location":"chap1/18Adv_Prometheus_index_classfication/#113","text":"\u6307\u68071 http_request_total{status=\"200\",method=\"POST\"} \u6307\u68072 {__name__ = \"http_request_total\",status=\"200\",method=\"POST\"} \u4ee5\u4e0a\u4e24\u4e2a\u6307\u6807\u662f\u4e00\u6837\uff0c\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u6807\u7b7e\u662f\u7cfb\u7edf\u5185\u90e8\u4f7f\u7528\u7684 \u6307\u6807\u540d\u79f0\uff1a http_request_total \u4ee3\u8868 HTTP \u8bf7\u6c42\u7684\u603b\u6570 \u6807\u7b7e1\uff1a status \u503c 200 \uff0c \u4ee3\u8868\u72b6\u6001\u7801\u4e3a 200 \u6807\u7b7e2\uff1a method \u503c POST \uff0c \u4ee3\u8868\u8bf7\u6c42\u7c7b\u578b\u4e3a POST","title":"1.1.3 \u4e3e\u4f8b"},{"location":"chap1/18Adv_Prometheus_index_classfication/#2","text":"Prometheus \u6307\u6807\u5206\u4e3a Counter \u3001 Gauge \u3001 Histogram \u3001 Summary \u3002","title":"2 \u6307\u6807\u5206\u7c7b"},{"location":"chap1/18Adv_Prometheus_index_classfication/#21-counter","text":"\u8ba1\u6570\u5668\u7c7b\u578b\uff0c\u53ea\u589e\u4e0d\u51cf \u9002\u7528\u4e8e\u673a\u5668\u542f\u52a8\u65f6\u95f4\u3001HTTP\u8bbf\u95ee\u91cf \u5177\u6709\u5f88\u597d\u7684\u4e0d\u76f8\u5173\u6027\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u673a\u5668\u91cd\u542f\u800c\u7f6e 0 \u901a\u5e38\u4f1a\u7ed3\u5408 rate() \u65b9\u6cd5\u83b7\u53d6\u8be5\u6307\u6807\u5728\u67d0\u4e2a\u65f6\u95f4\u6bb5\u7684\u53d8\u5316\u7387","title":"2.1 Counter \u8ba1\u6570\u5668"},{"location":"chap1/18Adv_Prometheus_index_classfication/#22-gauge","text":"\u4eea\u8868\u76d8\uff0c\u8868\u5f81\u6307\u6807\u7684\u5b9e\u65f6\u53d8\u5316\u60c5\u51b5 \u3002 \u53ef\u589e\u53ef\u51cf\uff0c CPU \u548c\u5185\u5b58\u4f7f\u7528\u91cf\u3002 \u5927\u90e8\u5206\u76d1\u63a7\u6570\u636e\u7c7b\u578b\u90fd\u662f Gauge \u7c7b\u578b\u7684","title":"2.2 Gauge"},{"location":"chap1/18Adv_Prometheus_index_classfication/#23-summary","text":"\u9ad8\u7ea7\u6307\u6807\uff0c\u7528\u4e8e\u51f8\u663e\u6570\u636e\u7684\u5206\u5e03\u60c5\u51b5 \u67d0\u4e2a\u65f6\u95f4\u6bb5\u5185\u8bf7\u6c42\u7684\u54cd\u5e94\u65f6\u95f4 \u53ef\u4ee5\u4e0e Histogram \u76f8\u4e92\u8f6c\u5316 \u91c7\u6837\u70b9\u5206\u4f4d\u56fe\u7edf\u8ba1\uff0c\u7528\u4e8e\u5f97\u5230\u6570\u636e\u7684\u5206\u5e03\u60c5\u51b5 \u65e0\u9700\u6d88\u8017\u670d\u52a1\u7aef\u8d44\u6e90 \u4e0e histogram \u76f8\u6bd4\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\u66f4\u591a \u8ba1\u7b97\u7684\u6307\u6807\u4e0d\u80fd\u518d\u83b7\u53d6\u5e73\u5747\u6570\u7b49\u5176\u4ed6\u6307\u6807 \u4e00\u822c\u53ea\u9002\u7528\u4e8e\u72ec\u7acb\u7684\u76d1\u63a7\u6307\u6807\uff0c\u5982\u5783\u573e\u56de\u6536\u65f6\u95f4\u7b49","title":"2.3 Summary"},{"location":"chap1/18Adv_Prometheus_index_classfication/#24-histogram","text":"\u53cd\u6620\u4e86\u67d0\u4e2a\u533a\u95f4\u5185\u7684\u6837\u672c\u4e2a\u6570\uff0c\u901a\u8fc7 {le=\"\u4e0a\u8fb9\u754c\"} \u6307\u5b9a\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6837\u672c\u6570\u3002","title":"2.4 Histogram"},{"location":"chap1/18Adv_Prometheus_index_classfication/#25","text":"Prometheus \u91c7\u96c6\u7684\u6570\u636e\u6837\u672c\u90fd\u662f\u4ee5\u65f6\u95f4\u5e8f\u5217\u4fdd\u5b58\u7684\uff0c\u6bcf\u4e2a\u6837\u672c\u90fd\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210 \u6307\u6807 \u6837\u672c\u503c\uff1a 64\u4f4d\u6d6e\u70b9\u6570\u548c\u65f6\u95f4\u6233\u7684\u7ec4\u5408\u4ee3\u8868\u8fd9\u4e2a\u65f6\u95f4\u70b9\u91c7\u96c6\u5230\u7684\u6570\u636e\u3002 \u65f6\u95f4\u6233","title":"2.5 \u6570\u636e\u6837\u672c"},{"location":"chap1/1prometheus2022/","text":"\u7b2c\u4e00\u8282 Prometheus \u7cfb\u7edf\u4ecb\u7ecd 2022 1 \u7b80\u4ecb Prometheus \u662f\u53e4\u5e0c\u814a\u795e\u8bdd\u91cc\u6cf0\u5766\u65cf\u7684\u4e00\u540d\u795e\u660e\uff0c\u540d\u5b57\u7684\u610f\u601d\u662f\u201c\u5148\u89c1\u4e4b\u660e\u201d\uff0c\u4e0b\u56fe\u4e2d\u662f Prometheus \u88ab\u5b99\u65af\u60e9\u7f5a\uff0c\u9971\u53d7\u809d\u810f\u65e5\u98df\u591c\u957f\u4e4b\u82e6\u3002 \u5176\u5b98\u7f51\u5c01\u9762\u56fe\u5f15\u5bfc\u8bed\uff1aFrom metrics to insight\uff0c\u4ece\u6307\u6807\u5230\u6d1e\u5bdf\u529b\uff0c\u901a\u8fc7\u6307\u6807\u53bb\u6d1e\u5bdf\u4f60\u7684\u7cfb\u7edf\uff0c\u4e3a\u6211\u4eec\u7684\u7cfb\u7edf\u63d0 \u4f9b\u6307\u6807\u6536\u96c6\u548c\u76d1\u63a7\u7684\u5f00\u6e90\u89e3\u51b3\u65b9\u6848 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0cPrometheus \u662f\u4e00\u4e2a\u6570\u636e\u76d1\u63a7\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8ba9\u6211\u4eec\u80fd\u968f\u65f6\u638c\u63e1\u7cfb\u7edf\u8fd0\u884c\u7684\u72b6\u6001\uff0c\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u548c\u6392\u9664\u6545\u969c\u3002 Prometheus \u53d1\u5c55\u901f\u5ea6\u5f88\u5feb\uff0c12 \u5e74\u5f00\u53d1\u5b8c\u6210\uff0c16 \u5e74\u52a0\u5165 CNCF\uff0c\u6210\u4e3a\u7ee7 Kubernetes \u4e4b\u540e\u7b2c\u4e8c\u4e2a CNCF \u6258\u7ba1\u7684\u9879\u76ee\uff0c\u76ee\u524d GitHub 42k \u7684 \ud83c\udf1f\uff0c\u800c\u4e14\u793e\u533a\u5f88\u6d3b\u8dc3\uff0c\u7ef4\u62a4\u9891\u7387\u5f88\u9ad8\uff0c\u57fa\u672c\u7a33\u5b9a\u5728 1 \u4e2a\u6708 1 \u4e2a\u5c0f\u7248\u672c\u7684\u8fed\u4ee3\u901f\u5ea6\u3002 2 \u6574\u4f53\u751f\u6001 Prometheus \u63d0\u4f9b\u4e86\u4ece \u6307\u6807\u66b4\u9732\uff0c\u5230\u6307\u6807\u6293\u53d6\u3001\u5b58\u50a8\u548c\u53ef\u89c6\u5316 \uff0c\u4ee5\u53ca\u6700\u540e\u7684\u76d1\u63a7\u544a\u8b66\u7b49\u4e00\u7cfb\u5217\u7ec4\u4ef6\u3002 2-1 \u6307\u6807\u66b4\u9732 \u6bcf\u4e00\u4e2a\u88ab Prometheus \u76d1\u63a7\u7684\u670d\u52a1\u90fd\u662f\u4e00\u4e2a Job\uff0cPrometheus \u4e3a\u8fd9\u4e9b Job \u63d0\u4f9b\u4e86\u5b98\u65b9\u7684 SDK \uff0c\u5229\u7528\u8fd9\u4e2a SDK \u53ef\u4ee5\u81ea\u5b9a\u4e49\u5e76\u5bfc\u51fa\u81ea\u5df1\u7684\u4e1a\u52a1\u6307\u6807 \uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 Prometheus \u5b98\u65b9\u63d0\u4f9b\u7684\u5404\u79cd\u5e38\u7528\u7ec4\u4ef6\u548c\u4e2d\u95f4\u4ef6\u7684 Exporter\uff08\u6bd4\u5982\u5e38\u7528\u7684 MySQL\uff0cConsul \u7b49\u7b49\uff09\u3002 \u5bf9\u4e8e\u77ed\u65f6\u95f4\u6267\u884c\u7684\u811a\u672c\u4efb\u52a1\u6216\u8005\u4e0d\u597d\u76f4\u63a5 Pull \u6307\u6807\u7684\u670d\u52a1\uff0c Prometheus \u63d0\u4f9b\u4e86 PushGateWay \u7f51\u5173\u7ed9\u8fd9\u4e9b\u4efb\u52a1\u5c06\u670d\u52a1\u6307\u6807\u4e3b\u52a8\u63a8 Push \u5230\u7f51\u5173\uff0cPrometheus \u518d\u4ece\u8fd9\u4e2a\u7f51\u5173\u91cc Pull \u6307\u6807 \u3002 2-2 \u6307\u6807\u6293\u53d6 \u4e0a\u9762\u63d0\u5230\u4e86 Push \u548c Pull\uff0c\u5176\u5b9e\u8fd9\u662f\u4e24\u79cd\u6307\u6807\u6293\u53d6\u6a21\u578b\u3002 Pull \u6a21\u578b\uff1a\u76d1\u63a7\u670d\u52a1\u4e3b\u52a8\u62c9\u53d6\u88ab\u76d1\u63a7\u670d\u52a1\u7684\u6307\u6807\u3002 \u88ab\u76d1\u63a7\u670d\u52a1\u4e00\u822c\u901a\u8fc7\u4e3b\u52a8\u66b4\u9732 metrics \u7aef\u53e3\u6216\u8005\u901a\u8fc7 Exporter \u7684\u65b9\u5f0f\u66b4\u9732\u6307\u6807 \uff0c\u76d1\u63a7\u670d\u52a1\u4f9d\u8d56\u670d\u52a1\u53d1\u73b0\u6a21\u5757\u53d1\u73b0\u88ab\u76d1\u63a7\u670d\u52a1\uff0c\u4ece\u800c\u53bb\u5b9a\u671f\u7684\u6293\u53d6\u6307\u6807\u3002 Push \u6a21\u578b\uff1a\u88ab\u76d1\u63a7\u670d\u52a1\u4e3b\u52a8\u5c06\u6307\u6807\u63a8\u9001\u5230\u76d1\u63a7\u670d\u52a1\uff0c\u53ef\u80fd\u9700\u8981\u5bf9\u6307\u6807\u505a\u534f\u8bae\u9002\u914d\uff0c\u5fc5\u987b\u5f97\u7b26\u5408\u76d1\u63a7\u670d\u52a1\u8981\u6c42\u7684\u6307\u6807\u683c\u5f0f\u3002 \u5bf9\u4e8e Prometheus \u4e2d\u7684\u6307\u6807\u6293\u53d6\uff0c\u91c7\u7528\u7684\u662f Pull \u6a21\u578b\uff0c \u9ed8\u8ba4\u662f\u4e00\u5206\u949f\u53bb\u62c9\u53d6\u4e00\u6b21\u6307\u6807 \uff0c \u901a\u8fc7 Prometheus.yaml \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 scrape_interval \u914d\u7f6e\u9879\u914d\u7f6e\uff0cPrometheus \u5bf9\u5916\u90fd\u662f\u7528\u7684 Pull \u6a21\u578b \u4e00\u4e2a\u662f Pull Exporter \u7684\u66b4\u9732\u7684\u6307\u6807\uff0c \u4e00\u4e2a\u662f Pull PushGateway \u66b4\u9732\u7684\u6307\u6807\u3002 2-3 \u6307\u6807\u5b58\u50a8\u548c\u67e5\u8be2 \u6307\u6807\u6293\u53d6\u540e\u4f1a\u5b58\u50a8\u5728\u5185\u7f6e\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u4e2d\uff0cPrometheus \u4e5f\u63d0\u4f9b\u4e86 PromQL \u67e5\u8be2\u8bed\u8a00\u7ed9\u6211\u4eec\u505a\u6307\u6807\u7684\u67e5\u8be2\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 Prometheus \u7684 WebUI \u4e0a\u901a\u8fc7 PromQL\uff0c\u53ef\u89c6\u5316\u67e5\u8be2\u6211\u4eec\u7684\u6307\u6807\uff0c\u4e5f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u63a5\u5165\u7b2c\u4e09\u65b9\u7684\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u4f8b\u5982 Grafana\u3002 2-4 \u76d1\u63a7\u544a\u8b66 Prometheus \u63d0\u4f9b\u4e86 Alertmanageer \u57fa\u4e8e PromQL \u6765\u505a\u7cfb\u7edf\u7684\u76d1\u63a7\u544a\u8b66\uff0c\u5f53 PromQL \u67e5\u8be2\u51fa\u6765\u7684\u6307\u6807\u8d85\u8fc7\u6211\u4eec\u5b9a\u4e49\u7684\u9608\u503c\u65f6\uff0cPrometheus \u4f1a\u53d1\u9001\u4e00\u6761\u544a\u8b66\u4fe1\u606f\u5230 Alertmanager\uff0cmanager \u4f1a\u5c06\u544a\u8b66\u4e0b\u53d1\u5230\u914d\u7f6e\u597d\u7684\u90ae\u7bb1\u6216\u8005\u5fae\u4fe1\u3002 3 \u5de5\u4f5c\u539f\u7406 Prometheus \u7684\u4ece\u88ab\u76d1\u63a7\u670d\u52a1\u7684\u6ce8\u518c\u5230\u6307\u6807\u6293\u53d6\u5230\u6307\u6807\u67e5\u8be2\u7684\u6d41\u7a0b\u5206\u4e3a\u4e94\u4e2a\u6b65\u9aa4\uff1a 3-1 \u670d\u52a1\u6ce8\u518c \u88ab\u76d1\u63a7\u670d\u52a1\u5728 Prometheus \u4e2d\u662f\u4e00\u4e2a Job \u5b58\u5728\uff0c\u88ab\u76d1\u63a7\u670d\u52a1\u7684\u6240\u6709\u5b9e\u4f8b\u5728 Prometheus \u4e2d\u662f\u4e00\u4e2a target \u7684\u5b58\u5728\uff0c \u6240\u4ee5\u88ab\u76d1\u63a7\u670d\u52a1\u7684\u6ce8\u518c\u5c31\u662f\u5728 Prometheus \u4e2d\u6ce8\u518c\u4e00\u4e2a Job \u548c\u5176\u6240\u6709\u7684 target \uff0c\u8fd9\u4e2a\u6ce8\u518c\u5206\u4e3a\uff1a \u9759\u6001\u6ce8\u518c \u52a8\u6001\u6ce8\u518c \u9759\u6001\u6ce8\u518c\uff1a \u9759\u6001\u7684\u5c06\u670d\u52a1\u7684 IP \u548c\u6293\u53d6\u6307\u6807\u7684\u7aef\u53e3\u53f7\u914d\u7f6e\u5728 Prometheus yaml \u6587\u4ef6\u7684 scrape_configs \u914d\u7f6e\u4e0b \uff1a scrape_configs: - job_name: \"prometheus\" static_configs: - targets: [\"localhost:9090\"] \u4ee5\u4e0a\u5c31\u662f\u6ce8\u518c\u4e86\u4e00\u4e2a\u540d\u4e3a Prometheus \u7684\u670d\u52a1\uff0c\u8fd9\u4e2a\u670d\u52a1\u4e0b\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u66b4\u9732\u7684\u6293\u53d6\u5730\u5740\u662f localhost:9090\u3002 \u52a8\u6001\u6ce8\u518c \uff1a\u52a8\u6001\u6ce8\u518c\u5c31\u662f\u5728 Prometheus yaml \u6587\u4ef6\u7684 scrape_configs \u914d\u7f6e\u4e0b\u914d\u7f6e\u670d\u52a1\u53d1\u73b0\u7684\u5730\u5740\u548c\u670d\u52a1\u540d\uff0cPrometheus \u4f1a\u53bb\u8be5\u5730\u5740\uff0c \u6839\u636e\u4f60\u63d0\u4f9b\u7684\u670d\u52a1\u540d\u52a8\u6001\u53d1\u73b0\u5b9e\u4f8b\u5217\u8868\uff0c\u5728 Prometheus \u4e2d\uff0c\u652f\u6301 Consul\u3001DNS\u3001\u6587\u4ef6\u3001Kubernetes \u7b49\u591a\u79cd\u670d\u52a1\u53d1\u73b0\u673a\u5236 \u3002 \u57fa\u4e8e Consul \u7684\u670d\u52a1\u53d1\u73b0\uff1a - job_name: \"node_export_consul\" metrics_path: /node_metrics scheme: http consul_sd_configs: - server: localhost:8500 services: - node_exporter consul_sd_configs \u6211\u4eec Consul \u7684\u5730\u5740\u5c31\u662f\uff1alocalhost:8500\uff0c\u670d\u52a1\u540d\u662f node_exporter \uff0c\u5728\u8fd9\u4e2a\u670d\u52a1\u4e0b\u6709\u4e00\u4e2a exporter \u5b9e\u4f8b\uff1alocalhost:9600\u3002 \u6ce8\u610f\uff1a\u5982\u679c\u662f\u52a8\u6001\u6ce8\u518c\uff0c\u6700\u597d\u52a0\u4e0a\u8fd9\u4e24\u914d\u7f6e\uff0c\u9759\u6001\u6ce8\u518c\u6307\u6807\u62c9\u53d6\u7684\u8def\u5f84\u4f1a\u9ed8\u8ba4\u7684\u5e2e\u6211\u4eec\u6307\u5b9a\u4e3a metrics_path:/metrics \uff0c\u6240\u4ee5\u5982\u679c\u66b4\u9732\u7684\u6307\u6807\u6293\u53d6\u8def\u5f84\u4e0d\u540c\u6216\u8005\u662f\u52a8\u6001\u7684\u670d\u52a1\u6ce8\u518c\uff0c\u6700\u597d\u52a0\u4e0a\u8fd9\u4e24\u4e2a\u914d\u7f6e\u3002 metrics_path: /node_metrics scheme: http \u4e0d\u7136\u4f1a\u62a5\u9519\u201cINVALID is not a valid start token\u201d\uff0c\u6f14\u793a\u4e0b\uff0c\u767e\u5ea6\u4e86\u4e00\u4e0b\uff0c\u8fd9\u91cc\u53ef\u80fd\u662f\u6570\u636e\u683c\u5f0f\u4e0d\u7edf\u4e00\u5bfc\u81f4\u3002 \u6700\u540e\u53ef\u4ee5\u5728 WebUI \u4e2d\u67e5\u770b\u53d1\u73b0\u7684\u5b9e\u4f8b\uff1a \u76ee\u524d\uff0cPrometheus \u652f\u6301\u591a\u8fbe\u4e8c\u5341\u591a\u79cd\u670d\u52a1\u53d1\u73b0\u534f\u8bae\uff1a <azure_sd_config> <consul_sd_config> <digitalocean_sd_config> <docker_sd_config> <dockerswarm_sd_config> <dns_sd_config> <ec2_sd_config> <openstack_sd_config> <file_sd_config> <gce_sd_config> <hetzner_sd_config> <http_sd_config> <kubernetes_sd_config> <kuma_sd_config> <lightsail_sd_config> <linode_sd_config> <marathon_sd_config> <nerve_sd_config> <serverset_sd_config> <triton_sd_config> <eureka_sd_config> <scaleway_sd_config> <static_config> 3-2 \u914d\u7f6e\u66f4\u65b0 \u5728\u66f4\u65b0\u5b8c Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0\u6211\u4eec\u7684\u914d\u7f6e\u5230\u7a0b\u5e8f\u5185\u5b58\u91cc\uff0c\u8fd9\u91cc\u7684\u66f4\u65b0\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c \u7b2c\u4e00\u79cd\u7b80\u5355\u7c97\u66b4\uff0c\u5c31\u662f\u91cd\u542f Prometheus\uff0c\u7b2c\u4e8c\u79cd\u662f\u52a8\u6001\u66f4\u65b0\u7684\u65b9\u5f0f \u3002 \u5982\u4f55\u5b9e\u73b0\u52a8\u6001\u7684\u66f4\u65b0 Prometheus \u914d\u7f6e \u3002 \u7b2c\u4e00\u6b65\uff1a\u9996\u5148\u8981\u4fdd\u8bc1\u542f\u52a8 Prometheus \u7684\u65f6\u5019\u5e26\u4e0a\u542f\u52a8\u53c2\u6570\uff1a --web.enable-lifecycle \u3002 prometheus --config.file=/usr/local/etc/prometheus.yml --web.enable-lifecycle \u7b2c\u4e8c\u6b65\uff1a\u53bb\u66f4\u65b0\u6211\u4eec\u7684 Prometheus \u914d\u7f6e\u3002 \u7b2c\u4e09\u6b65\uff1a\u66f4\u65b0\u5b8c\u914d\u7f6e\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 Post \u8bf7\u6c42\u7684\u65b9\u5f0f\uff0c\u52a8\u6001\u66f4\u65b0\u914d\u7f6e\uff1a curl -v --request POST 'http://localhost:9090/-/reload' \u539f\u7406\uff1a Prometheus \u5728 Web \u6a21\u5757\u4e2d\uff0c\u6ce8\u518c\u4e86\u4e00\u4e2a handler\uff1a if o.EnableLifecycle { router.Post(\"/-/quit\", h.quit) router.Put(\"/-/quit\", h.quit) router.Post(\"/-/reload\", h.reload) // reload\u914d\u7f6e router.Put(\"/-/reload\", h.reload) } \u901a\u8fc7 h.reload \u8fd9\u4e2a handler \u65b9\u6cd5\u5b9e\u73b0\uff1a\u8fd9\u4e2a handler \u5c31\u662f\u5f80\u4e00\u4e2a channle \u4e2d\u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7\uff1a func (h *Handler) reload(w http.ResponseWriter, r *http.Request) { rc := make(chan error) h.reloadCh <- rc // \u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7\u5230channe\u4e86\u4e2d if err := <-rc; err != nil { http.Error(w, fmt.Sprintf(\"failed to reload config: %s\", err), http.StatusInternalServerError) } } \u5728 main \u51fd\u6570\u4e2d\u4f1a\u53bb\u76d1\u542c\u8fd9\u4e2a channel\uff0c\u53ea\u8981\u6709\u76d1\u542c\u5230\u4fe1\u53f7\uff0c\u5c31\u4f1a\u505a\u914d\u7f6e\u7684 reload\uff0c\u91cd\u65b0\u5c06\u65b0\u914d\u7f6e\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff1a case rc := <-webHandler.Reload(): if err := reloadConfig(cfg.configFile, cfg.enableExpandExternalLabels, cfg.tsdb.EnableExemplarStorage, logger, noStepSubqueryInterval, reloaders...); err != nil { level.Error(logger).Log(\"msg\", \"Error reloading config\", \"err\", err) rc <- err } else { rc <- nil } 3-3 \u6307\u6807\u6293\u53d6\u548c\u5b58\u50a8 Prometheus \u5bf9\u6307\u6807\u7684\u6293\u53d6\u91c7\u53d6\u4e3b\u52a8 Pull \u7684\u65b9\u5f0f\uff0c \u5373\u5468\u671f\u6027\u7684\u8bf7\u6c42\u88ab\u76d1\u63a7\u670d\u52a1\u66b4\u9732\u7684 Metrics \u63a5\u53e3\u6216\u8005\u662f PushGateway \uff0c\u4ece\u800c\u83b7\u53d6\u5230 Metrics \u6307\u6807\uff0c \u9ed8\u8ba4\u65f6\u95f4\u662f 15s \u6293\u53d6\u4e00\u6b21 \uff0c\u914d\u7f6e\u9879\u5982\u4e0b\uff1a global: scrape_interval: 15s \u6293\u53d6\u5230\u7684\u6307\u6807\u4f1a\u88ab\u4ee5\u65f6\u95f4\u5e8f\u5217\u7684\u5f62\u5f0f\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u4e14\u5b9a\u65f6\u5237\u5230\u78c1\u76d8\u4e0a\uff0c\u9ed8 \u8ba4\u662f\u4e24\u4e2a\u5c0f\u65f6\u56de\u5237\u4e00\u6b21 \u3002\u5e76\u4e14\u4e3a\u4e86\u9632\u6b62 Prometheus \u53d1\u751f\u5d29\u6e83\u6216\u91cd\u542f\u65f6\u80fd\u591f\u6062\u590d\u6570\u636e\uff0cPrometheus \u4e5f\u63d0\u4f9b\u4e86\u7c7b\u4f3c MySQL \u4e2d binlog \u4e00\u6837\u7684\u9884\u5199\u65e5\u5fd7\uff0c\u5f53 Prometheus \u5d29\u6e83\u91cd\u542f\u65f6\uff0c\u4f1a\u8bfb\u8fd9\u4e2a\u9884\u5199\u65e5\u5fd7\u6765\u6062\u590d\u6570\u636e \u3002 4 Metric \u6307\u6807 4-1 \u6570\u636e\u6a21\u578b Prometheus \u91c7\u96c6\u7684\u6240\u6709\u6307\u6807\u90fd\u662f\u4ee5\u65f6\u95f4\u5e8f\u5217\u7684\u5f62\u5f0f\u8fdb\u884c\u5b58\u50a8\uff0c\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u6709\u4e09\u90e8\u5206\u7ec4\u6210\uff1a \u6307\u6807\u540d\u548c\u6307\u6807\u6807\u7b7e\u96c6\u5408\uff1a metric_name{<label1=v1>,<label2=v2>....} \uff0c\u6307\u6807\u540d\uff1a\u8868\u793a\u8fd9\u4e2a\u6307\u6807\u662f\u76d1\u63a7\u54ea\u4e00\u65b9\u9762\u7684\u72b6\u6001\uff0c\u6bd4\u5982 http_request_total \u8868\u793a\u8bf7\u6c42\u6570\u91cf\uff1b \u6307\u6807\u6807\u7b7e\uff1a\u63cf\u8ff0\u8fd9\u4e2a\u6307\u6807\u6709\u54ea\u4e9b\u7ef4\u5ea6\uff0c\u6bd4\u5982 http_request_total \u8fd9\u4e2a\u6307\u6807\uff0c\u6709\u8bf7\u6c42\u72b6\u6001\u7801 code = 200/400/500 \uff0c\u8bf7\u6c42\u65b9\u5f0f method = get/post \u7b49\uff0c\u5b9e\u9645\u4e0a\u6307\u6807\u540d\u79f0\u5b9e\u9645\u4e0a\u662f\u4ee5\u6807\u7b7e\u7684\u5f62\u5f0f\u4fdd\u5b58\uff0c\u8fd9\u4e2a\u6807\u7b7e\u662f name\uff0c\u5373\uff1aname=\u3002 \u65f6\u95f4\u6233\uff1a\u63cf\u8ff0\u5f53\u524d\u65f6\u95f4\u5e8f\u5217\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\uff1a\u6beb\u79d2 \u6837\u672c\u503c\uff1a\u5f53\u524d\u76d1\u63a7\u6307\u6807\u7684\u5177\u4f53\u6570\u503c\uff0c\u6bd4\u5982 http_request_total \u7684\u503c\u5c31\u662f\u8bf7\u6c42\u6570\u662f\u591a\u5c11\u3002 \u6240\u6709\u7684\u6307\u6807\u4e5f\u90fd\u662f\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684\u683c\u5f0f\u6765\u6807\u8bc6\u7684\uff1a # HELP // HELP\uff1a\u8fd9\u91cc\u63cf\u8ff0\u7684\u6307\u6807\u7684\u4fe1\u606f\uff0c\u8868\u793a\u8fd9\u4e2a\u662f\u4e00\u4e2a\u4ec0\u4e48\u6307\u6807\uff0c\u7edf\u8ba1\u4ec0\u4e48\u7684 # TYPE // TYPE\uff1a\u8fd9\u4e2a\u6307\u6807\u662f\u4ec0\u4e48\u7c7b\u578b\u7684 <metric name>{<label name>=<label value>, ...} value // \u6307\u6807\u7684\u5177\u4f53\u683c\u5f0f\uff0c<\u6307\u6807\u540d>{\u6807\u7b7e\u96c6\u5408} \u6307\u6807\u503c 4-2 \u6307\u6807\u7c7b\u578b Prometheus \u5e95\u5c42\u5b58\u50a8\u4e0a\u5176\u5b9e\u5e76\u6ca1\u6709\u5bf9\u6307\u6807\u505a\u7c7b\u578b\u7684\u533a\u5206\uff0c\u90fd\u662f\u4ee5\u65f6\u95f4\u5e8f\u5217\u7684\u5f62\u5f0f\u5b58\u50a8 \uff0c\u4f46\u662f\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u7684\u4f7f\u7528\u548c\u7406\u89e3\u4e0d\u540c\u76d1\u63a7\u6307\u6807\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c Prometheus \u5b9a\u4e49\u4e86 4 \u79cd\u4e0d\u540c\u7684\u6307\u6807\u7c7b\u578b\uff1a\u8ba1\u6570\u5668 counter \uff0c\u4eea\u8868\u76d8 gauge \uff0c\u76f4\u65b9\u56fe histogram \uff0c\u6458\u8981 summary \u3002 Counter \u8ba1\u6570\u5668\uff1a Counter \u7c7b\u578b\u548c Redis \u7684\u81ea\u589e\u547d\u4ee4\u4e00\u6837\uff0c \u53ea\u589e\u4e0d\u51cf \uff0c\u901a\u8fc7 Counter \u6307\u6807\u53ef\u4ee5\u7edf\u8ba1 Http \u8bf7\u6c42\u6570\u91cf\uff0c\u8bf7\u6c42\u9519\u8bef\u6570\uff0c \u63a5\u53e3\u8c03\u7528\u6b21\u6570\u7b49\u5355\u8c03\u9012\u589e\u7684\u6570\u636e \u3002 \u540c\u65f6\u53ef\u4ee5\u7ed3\u5408 increase \u548c rate \u7b49\u51fd\u6570\u7edf\u8ba1\u53d8\u5316\u901f\u7387\uff0c\u540e\u7eed\u6211\u4eec\u4f1a\u63d0\u5230\u8fd9\u4e9b\u5185\u7f6e\u51fd\u6570 \u3002 Gauge \u4eea\u8868\u76d8\uff1a \u548c Counter \u4e0d\u540c\uff0cGauge \u662f\u53ef\u589e\u53ef\u51cf\u7684\uff0c\u53ef\u4ee5\u53cd\u6620\u4e00\u4e9b\u52a8\u6001\u53d8\u5316\u7684\u6570\u636e\uff0c\u4f8b\u5982\u5f53\u524d\u5185\u5b58\u5360\u7528\uff0cCPU \u5229\u7528 \uff0cGc \u6b21\u6570\u7b49\u52a8\u6001\u53ef\u4e0a\u5347\u53ef\u4e0b\u964d\u7684\u6570\u636e\uff0c\u5728 Prometheus \u4e0a\u901a\u8fc7 Gauge\uff0c\u53ef\u4ee5\u4e0d\u7528\u7ecf\u8fc7\u5185\u7f6e\u51fd\u6570\u76f4\u89c2\u7684\u53cd\u6620\u6570\u636e\u7684\u53d8\u5316\u60c5\u51b5\uff0c\u5982\u4e0b\u56fe\u8868\u793a\u5806\u53ef\u5206\u914d\u7684\u7a7a\u95f4\u5927\u5c0f\uff1a Histogram \u76f4\u65b9\u56fe\uff1a Histogram \u662f\u4e00\u79cd\u76f4\u65b9\u56fe\u7c7b\u578b\uff0c \u53ef\u4ee5\u89c2\u5bdf\u5230\u6307\u6807\u5728\u5404\u4e2a\u4e0d\u540c\u7684\u533a\u95f4\u8303\u56f4\u7684\u5206\u5e03\u60c5\u51b5 \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\u53ef\u4ee5\u89c2\u5bdf\u5230\u8bf7\u6c42\u8017\u65f6\u5728\u5404\u4e2a\u6876\u7684\u5206\u5e03\u3002 \u6709\u4e00\u70b9\u8981\u6ce8\u610f\u7684\u662f\uff0c Histogram \u662f\u7d2f\u8ba1\u76f4\u65b9\u56fe\uff0c\u5373\u6bcf\u4e00\u4e2a\u6876\u7684\u662f\u53ea\u6709\u4e0a\u533a\u95f4 \uff0c\u4f8b\u5982\u4e0b\u56fe\u8868\u793a\u5c0f\u4e8e 0.1 \u6beb\u79d2\uff08le=\"0.1\"\uff09\u7684\u8bf7\u6c42\u6570\u91cf\u662f 18173 \u4e2a\uff0c\u5c0f\u4e8e 0.2 \u6beb\u79d2\uff08le=\"0.2\"\uff09\u7684\u8bf7\u6c42\u662f 18182 \u4e2a\uff0c\u5728 le=\"0.2\" \u8fd9\u4e2a\u6876\u4e2d\u662f\u5305\u542b\u4e86 le=\"0.1\"\u8fd9\u4e2a\u6876\u7684\u6570\u636e\uff0c\u5982\u679c\u6211\u4eec\u8981\u62ff\u5230 0.1 \u6beb\u79d2\u5230 0.2 \u6beb\u79d2\u7684\u8bf7\u6c42\u6570\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u6876\u60f3\u51cf\u5f97\u5230\u3002 \u5728\u76f4\u65b9\u56fe\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 histogram_quantile \u51fd\u6570\u6c42\u51fa\u767e\u5206\u4f4d \u6570\uff0c\u6bd4\u5982 P50\u3001P90\u3001P99 \u7b49\u6570\u636e\u3002 Summary \u6458\u8981\uff1a Summary \u4e5f\u662f\u7528\u6765\u505a\u7edf\u8ba1\u5206\u6790\u7684\uff0c\u548c Histogram \u533a\u522b\u5728\u4e8e\uff0c Summary \u76f4\u63a5\u5b58\u50a8\u7684\u5c31\u662f\u767e\u5206\u4f4d\u6570 \uff0c\u5982\u4e0b\u6240\u793a\uff1a\u53ef\u4ee5\u76f4\u89c2\u7684\u89c2\u5bdf\u5230\u6837\u672c\u7684\u4e2d\u4f4d\u6570\uff0cP90 \u548c P99\u3002 Summary \u7684\u767e\u5206\u4f4d\u6570\u662f\u5ba2\u6237\u7aef\u8ba1\u7b97\u597d\u76f4\u63a5\u8ba9 Prometheus \u6293\u53d6\u7684\uff0c\u4e0d\u9700\u8981 Prometheus \u8ba1\u7b97\uff0c\u76f4\u65b9\u56fe\u662f\u901a\u8fc7\u5185\u7f6e\u51fd\u6570 histogram_quantile \u5728 Prometheus \u670d\u52a1\u7aef\u8ba1\u7b97\u6c42\u51fa\u3002 4-3 \u6307\u6807\u5bfc\u51fa \u6807\u5bfc\u51fa\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c \u4e00\u79cd\u662f\u4f7f\u7528 Prometheus \u793e\u533a\u63d0\u4f9b\u7684\u5b9a\u5236\u597d\u7684 Exporter \u5bf9\u4e00\u4e9b\u7ec4\u4ef6\u8bf8\u5982 MySQL\uff0cKafka \u7b49\u7684\u6307\u6807\u4f5c\u5bfc\u51fa\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528\u793e\u533a\u63d0\u4f9b\u7684 Client \u6765\u81ea\u5b9a\u4e49\u6307\u6807\u5bfc\u51fa \u3002 github.com/prometheus/client_golang/prometheus/promhttp \u81ea\u5b9a\u4e49 Prometheus exporter\uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { http.Handle(\"/metrics\", promhttp.Handler()) http.ListenAndServe(\":8080\", nil) } \u8bbf\u95ee\uff1a http://localhost:8080/metrics \uff0c\u5373\u53ef\u770b\u5230\u5bfc\u51fa\u7684\u6307\u6807\uff0c\u8fd9\u91cc\u6211\u4eec\u6ca1\u6709\u81ea\u5b9a\u4e49\u4efb\u4f55\u7684\u6307\u6807\uff0c\u4f46\u662f\u80fd\u770b\u5230\u4e00\u4e9b\u5185\u7f6e\u7684 Go \u7684\u8fd0\u884c\u65f6\u6307\u6807\u548c promhttp \u76f8\u5173\u7684\u6307\u6807\uff0c\u8fd9\u4e2a Client \u9ed8\u8ba4\u4e3a\u6211\u4eec\u66b4\u9732\u7684\u6307\u6807\uff0c go_\uff1a \u4ee5 go \u4e3a\u524d\u7f00\u7684\u6307\u6807\u662f\u5173\u4e8e Go \u8fd0\u884c\u65f6\u76f8\u5173\u7684\u6307\u6807\uff0c\u6bd4\u5982\u5783\u573e\u56de\u6536\u65f6\u95f4\u3001goroutine \u6570\u91cf\u7b49\uff0c\u8fd9\u4e9b\u90fd\u662f Go \u5ba2\u6237\u7aef\u5e93\u7279\u6709\u7684\uff0c\u5176\u4ed6\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u5e93\u53ef\u80fd\u4f1a\u66b4\u9732\u5404\u81ea\u8bed\u8a00\u7684\u5176\u4ed6\u8fd0\u884c\u65f6\u6307\u6807\u3002 promhttp\uff1a\u6765\u81ea promhttp \u5de5\u5177\u5305\u7684\u76f8\u5173\u6307\u6807\uff0c\u7528\u4e8e\u8ddf\u8e2a\u5bf9\u6307\u6807\u8bf7\u6c42\u7684\u5904\u7406 \u3002 \u6dfb\u52a0\u81ea\u5b9a\u4e49\u6307\u6807\uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { // 1.\u5b9a\u4e49\u6307\u6807\uff08\u7c7b\u578b\uff0c\u540d\u5b57\uff0c\u5e2e\u52a9\u4fe1\u606f\uff09 myCounter := prometheus.NewCounter(prometheus.CounterOpts{ Name: \"my_counter_total\", Help: \"\u81ea\u5b9a\u4e49counter\", }) // 2.\u6ce8\u518c\u6307\u6807 prometheus.MustRegister(myCounter) // 3.\u8bbe\u7f6e\u6307\u6807\u503c myCounter.Add(23) http.Handle(\"/metrics\", promhttp.Handler()) http.ListenAndServe(\":8080\", nil) } \u8fd0\u884c\uff1a \u6a21\u62df\u4e0b\u5728\u4e1a\u52a1\u4e2d\u4e0a\u62a5\u63a5\u53e3\u8bf7\u6c42\u91cf\uff1a package main import ( \"fmt\" \"net/http\" \"github.com/prometheus/client_golang/prometheus\" ) var ( MyCounter prometheus.Counter ) // init \u6ce8\u518c\u6307\u6807 func init() { // 1.\u5b9a\u4e49\u6307\u6807\uff08\u7c7b\u578b\uff0c\u540d\u5b57\uff0c\u5e2e\u52a9\u4fe1\u606f\uff09 MyCounter = prometheus.NewCounter(prometheus.CounterOpts{ Name: \"my_counter_total\", Help: \"\u81ea\u5b9a\u4e49counter\", }) // 2.\u6ce8\u518c\u6307\u6807 prometheus.MustRegister(MyCounter) } // Sayhello func Sayhello(w http.ResponseWriter, r *http.Request) { // \u63a5\u53e3\u8bf7\u6c42\u91cf\u9012\u589e MyCounter.Inc() fmt.Fprintf(w, \"Hello World!\") } main.go\uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { http.Handle(\"/metrics\", promhttp.Handler()) http.HandleFunc(\"/counter\",Sayhello) http.ListenAndServe(\":8080\", nil) } \u4e00\u5f00\u59cb\u542f\u52a8\u65f6\uff0c\u6307\u6807 counter \u662f 0\uff1a \u8c03\u7528\uff1a/counter \u63a5\u53e3\u540e\uff0c\u6307\u6807\u6570\u636e\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7b80\u5355\u5b9e\u73b0\u4e86\u63a5\u53e3\u8bf7\u6c42\u6570\u7684\u7edf\u8ba1\uff1a \u5bf9\u4e8e\u5176\u4ed6\u6307\u6807\u5b9a\u4e49\u65b9\u5f0f\u662f\u4e00\u6837\u7684\uff1a var ( MyCounter prometheus.Counter MyGauge prometheus.Gauge MyHistogram prometheus.Histogram MySummary prometheus.Summary ) // init \u6ce8\u518c\u6307\u6807 func init() { // 1.\u5b9a\u4e49\u6307\u6807\uff08\u7c7b\u578b\uff0c\u540d\u5b57\uff0c\u5e2e\u52a9\u4fe1\u606f\uff09 MyCounter = prometheus.NewCounter(prometheus.CounterOpts{ Name: \"my_counter_total\", Help: \"\u81ea\u5b9a\u4e49counter\", }) // \u5b9a\u4e49gauge\u7c7b\u578b\u6307\u6807 MyGauge = prometheus.NewGauge(prometheus.GaugeOpts{ Name: \"my_gauge_num\", Help: \"\u81ea\u5b9a\u4e49gauge\", }) // \u5b9a\u4e49histogram MyHistogram = prometheus.NewHistogram(prometheus.HistogramOpts{ Name: \"my_histogram_bucket\", Help: \"\u81ea\u5b9a\u4e49histogram\", Buckets: []float64{0.1,0.2,0.3,0.4,0.5}, // \u9700\u8981\u6307\u5b9a\u6876 }) // \u5b9a\u4e49Summary MySummary = prometheus.NewSummary(prometheus.SummaryOpts{ Name: \"my_summary_bucket\", Help: \"\u81ea\u5b9a\u4e49summary\", // \u8fd9\u90e8\u5206\u53ef\u4ee5\u7b97\u597d\u540e\u5728set Objectives: map[float64]float64{ 0.5: 0.05, 0.9: 0.01, 0.99: 0.001, }, }) // 2.\u6ce8\u518c\u6307\u6807 prometheus.MustRegister(MyCounter) prometheus.MustRegister(MyGauge) prometheus.MustRegister(MyHistogram) prometheus.MustRegister(MySummary) } \u4e0a\u9762\u7684\u6307\u6807\u90fd\u662f\u6ca1\u6709\u8bbe\u7f6e\u6807\u7b7e\u7684\uff0c\u6211\u4eec\u4e00\u822c\u7684\u6307\u6807\u90fd\u662f\u5e26\u6709\u6807\u7b7e\u7684\uff0c\u5982\u4f55\u8bbe\u7f6e\u6307\u6807\u7684\u6807\u7b7e\u5462\uff1f \u5982\u679c\u6211\u8981\u8bbe\u7f6e\u5e26\u6807\u7b7e\u7684 counter \u7c7b\u578b\u6307\u6807\uff0c\u53ea\u9700\u8981\u5c06\u539f\u6765\u7684 NewCounter \u65b9\u6cd5\u66ff\u6362\u4e3a NewCounterVec \u65b9\u6cd5\u5373\u53ef\uff0c\u5e76\u4e14\u4f20\u5165\u6807\u7b7e\u96c6\u5408\u3002 MyCounter *prometheus.CounterVec // 1.\u5b9a\u4e49\u6307\u6807\uff08\u7c7b\u578b\uff0c\u540d\u5b57\uff0c\u5e2e\u52a9\u4fe1\u606f\uff09 MyCounter = prometheus.NewCounterVec( prometheus.CounterOpts{ Name: \"my_counter_total\", Help: \"\u81ea\u5b9a\u4e49counter\", }, // \u6807\u7b7e\u96c6\u5408 []string{\"label1\",\"label2\"}, ) // \u5e26\u6807\u7b7e\u7684set\u6307\u6807\u503c MyCounter.With(prometheus.Labels{\"label1\":\"1\",\"label2\":\"2\"}).Inc() 5 PromQL \u521a\u521a\u63d0\u5230\u4e86 Prometheus \u4e2d\u6307\u6807\u6709\u54ea\u4e9b\u7c7b\u578b\u4ee5\u53ca\u5982\u4f55\u5bfc\u51fa\u6211\u4eec\u7684\u6307\u6807\uff0c\u73b0\u5728\u6307\u6807\u5bfc\u51fa\u5230 Prometheus \u4e86\uff0c\u5229\u7528\u5176\u63d0\u4f9b\u7684 PromQL \u53ef\u4ee5\u67e5\u8be2\u6211\u4eec\u5bfc\u51fa\u7684\u6307\u6807\u3002 PromQL \u662f Prometheus \u4e3a\u6211\u4eec\u63d0\u4f9b\u7684\u51fd\u6570\u5f0f\u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u67e5\u8be2\u8868\u8fbe\u5f0f\u6709\u56db\u79cd\u7c7b\u578b\uff1a \u5b57\u7b26\u4e32\uff1a\u53ea\u4f5c\u4e3a\u67d0\u4e9b\u5185\u7f6e\u51fd\u6570\u7684\u53c2\u6570\u51fa\u73b0 \u6807\u91cf\uff1a\u5355\u4e00\u7684\u6570\u5b57\u503c\uff0c\u53ef\u4ee5\u662f\u51fd\u6570\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u51fd\u6570\u7684\u8fd4\u56de\u7ed3\u679c \u77ac\u65f6\u5411\u91cf\uff1a\u67d0\u4e00\u65f6\u523b\u7684\u65f6\u5e8f\u6570\u636e \u533a\u95f4\u5411\u91cf\uff1a\u67d0\u4e00\u65f6\u95f4\u533a\u95f4\u5185\u7684\u65f6\u5e8f\u6570\u636e\u96c6\u5408 5-1 \u77ac\u65f6\u67e5\u8be2 \u76f4\u63a5\u901a\u8fc7\u6307\u6807\u540d\u5373\u53ef\u8fdb\u884c\u67e5\u8be2\uff0c\u67e5\u8be2\u7ed3\u679c\u662f\u5f53\u524d\u6307\u6807\u6700\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u6bd4\u5982\u67e5\u8be2 Gc \u7d2f\u79ef\u6d88\u8017\u7684\u65f6\u95f4\uff1a go_gc_duration_seconds_count \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u67e5\u8be2\u51fa\u6765\u6709\u591a\u4e2a\u540c\u540d\u6307\u6807\u7ed3\u679c\uff0c\u53ef\u4ee5\u7528 {} \u505a\u6807\u7b7e\u8fc7\u6ee4\u67e5\u8be2\uff1a\u6bd4\u5982\u6211\u4eec\u60f3\u67e5\u6307\u5b9a\u5b9e\u4f8b\u7684\u6307\u6807 \u3002 go_gc_duration_seconds_count{instance=\"127.0.0.1:9600\"} \u800c\u4e14\u4e5f\u652f\u6301\u5219\u8868\u8fbe\u5f0f\uff0c\u901a\u8fc7 =~ \u6307\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\u67e5\u8be2\u6240\u6709 instance \u662f localhost \u5f00\u5934\u7684\u6307\u6807\u3002 go_gc_duration_seconds_count{instance=~\"localhost.*\"} 5-2 \u8303\u56f4\u67e5\u8be2 \u8303\u56f4\u67e5\u8be2\u7684\u7ed3\u679c\u96c6\u5c31\u662f\u533a\u95f4\u5411\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7 [] \u6307\u5b9a\u65f6\u95f4\u6765\u505a\u8303\u56f4\u67e5\u8be2 \uff0c\u67e5\u8be2 5 \u5206\u949f\u5185\u7684 Gc \u7d2f\u79ef\u6d88\u8017\u65f6\u95f4\uff1a go_gc_duration_seconds_count{}[5m] \u6ce8\u610f\uff1a\u8fd9\u91cc\u8303\u56f4\u67e5\u8be2\u7b2c\u4e00\u4e2a\u70b9\u5e76\u4e0d\u4e00\u5b9a\u7cbe\u786e\u5230\u521a\u521a\u597d 5 \u5206\u949f\u524d\u7684\u90a3\u4e2a\u65f6\u5e8f\u6837\u672c\u70b9\uff0c\u4ed6\u662f\u4ee5 5 \u5206\u949f\u4f5c\u4e3a\u4e00\u4e2a\u533a\u95f4\uff0c\u5bfb\u627e\u8fd9\u4e2a\u533a\u95f4\u7684\u7b2c\u4e00\u4e2a\u70b9\u5230\u6700\u540e\u4e00\u4e2a\u6837\u672c\u70b9\u3002 \u65f6\u95f4\u5355\u4f4d\uff1a d\uff1a\u5929\uff0ch\uff1a\u5c0f\u65f6\uff0cm\uff1a\u5206\u949f\uff0cms\uff1a\u6beb\u79d2\uff0cs\uff1a\u79d2\uff0cw\uff1a\u5468\uff0cy\uff1a\u5e74 \u540c\u6837\u652f\u6301\u7c7b\u4f3c SQL \u4e2d\u7684 offset \u67e5\u8be2\uff0c\u5982\u4e0b\uff1a\u67e5\u8be2\u4e00\u5929\u524d\u5f53\u524d 5 \u5206\u949f\u524d\u7684\u65f6\u5e8f\u6570\u636e\u96c6\uff1a go_gc_duration_seconds_count{}[5m] offset 1d 5-3 \u5185\u7f6e\u51fd\u6570 Prometheus \u5185\u7f6e\u4e86\u5f88\u591a\u51fd\u6570\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bb0\u5f55\u4e0b\u5e38\u7528\u7684\u51e0\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\uff1a rate \u548c irate \u51fd\u6570 rate \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u6c42\u6307\u6807\u7684\u5e73\u5747\u53d8\u5316\u901f\u7387\uff1a rate\u51fd\u6570=\u65f6\u95f4\u533a\u95f4\u524d\u540e\u4e24\u4e2a\u70b9\u7684\u5dee / \u65f6\u95f4\u8303\u56f4 \u3002 \u4e00\u822c rate \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u6c42\u67d0\u4e2a\u65f6\u95f4\u533a\u95f4\u5185\u7684\u8bf7\u6c42\u901f\u7387\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684 QPS\uff1a \u4f46\u662f rate \u51fd\u6570\u53ea\u662f\u7b97\u51fa\u6765\u4e86\u67d0\u4e2a\u65f6\u95f4\u533a\u95f4\u5185\u7684\u5e73\u5747\u901f\u7387\uff0c\u6ca1\u529e\u6cd5\u53cd\u6620\u7a81\u53d1\u53d8\u5316\uff0c\u5047\u8bbe\u5728\u4e00\u5206\u949f\u7684\u65f6\u95f4\u533a\u95f4\u91cc\uff0c\u524d 50 \u79d2\u7684\u8bf7\u6c42\u91cf\u90fd\u662f 0 \u5230 10 \u5de6\u53f3\uff0c\u4f46\u662f\u6700\u540e 10 \u79d2\u7684\u8bf7\u6c42\u91cf\u66b4\u589e\u5230 100 \u4ee5\u4e0a\uff0c\u8fd9\u65f6\u5019\u7b97\u51fa\u6765\u7684\u503c\u53ef\u80fd\u65e0\u6cd5\u5f88\u597d\u7684\u53cd\u6620\u8fd9\u4e2a\u5cf0\u503c\u53d8\u5316 \u3002 \u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7 irate \u51fd\u6570\u89e3\u51b3\uff0cirate \u51fd\u6570\u6c42\u51fa\u6765\u7684\u5c31\u662f\u77ac\u65f6\u53d8\u5316\u7387\u3002 \u65f6\u95f4\u533a\u95f4\u5185\u6700\u540e\u4e24\u4e2a\u6837\u672c\u70b9\u7684\u5dee / \u6700\u540e\u4e24\u4e2a\u6837\u672c\u70b9\u7684\u65f6\u95f4\u5dee\u3002 \u53ef\u4ee5\u901a\u8fc7\u56fe\u50cf\u770b\u4e0b\u4e24\u8005\u7684\u533a\u522b\uff1a irate \u51fd\u6570\u7684\u56fe\u50cf\u5cf0\u503c\u53d8\u5316\u5927\uff0crate \u51fd\u6570\u53d8\u5316\u8f83\u4e3a\u5e73\u7f13\u3002 rate \u51fd\u6570\uff1a irate \u51fd\u6570\uff1a \u805a\u5408\u51fd\u6570\uff1a Sum() by() without() \u4e5f\u662f\u4e0a\u8fb9\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5728\u6c42\u6307\u5b9a\u63a5\u53e3\u7684 QPS \u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u4e2a\u5b9e\u4f8b\u7684 QPS \u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u5982\u4e0b\u662f\u5b58\u5728\u591a\u4e2a\u63a5\u53e3\uff0c\u4e09\u4e2a\u670d\u52a1\u7684 QPS\u3002 rate(demo_api_request_duration_seconds_count{job=\"demo\", method=\"GET\", status=\"200\"}[5m]) \u5229\u7528 Sum \u51fd\u6570\u53ef\u4ee5\u5c06\u4e09\u4e2a QPS \u805a\u5408\uff0c\u5373\u53ef\u5f97\u5230\u6574\u4e2a\u670d\u52a1\u8be5\u63a5\u53e3\u7684 QPS\uff1a \u5176\u5b9e Sum \u5c31\u662f\u5c06\u6307\u6807\u503c\u505a\u76f8\u52a0 \u3002 \u4f46\u662f\u8fd9\u6837\u76f4\u63a5\u7684\u76f8\u52a0\u592a\u7b3c\u7edf\u62bd\u8c61\u4e86\uff0c\u53ef\u4ee5\u914d\u5408 by \u548c without \u51fd\u6570\u5728 sum \u7684\u65f6\u5019\uff0c\u57fa\u4e8e\u67d0\u4e9b\u6807\u7b7e\u5206\u7ec4\uff0c\u7c7b\u4f3c SQL \u4e2d\u7684 group by\u3002 \u4f8b\u5982\uff0c\u6211\u53ef\u4ee5\u6839\u636e\u8bf7\u6c42\u63a5\u53e3\u6807\u7b7e\u5206\u7ec4\uff1a\u8fd9\u6837\u62ff\u5230\u7684\u5c31\u662f\u5177\u4f53\u63a5\u53e3\u7684 QPS\uff1a sum(rate(demo_api_request_duration_seconds_count{job=\"demo\", method=\"GET\", status=\"200\"}[5m])) by(path) \u4e5f\u53ef\u4ee5\u4e0d\u6839\u636e\u63a5\u53e3\u8def\u5f84\u5206\u7ec4\uff1a\u901a\u8fc7 without \u6307\u5b9a \uff1a sum(rate(demo_api_request_duration_seconds_count{job=\"demo\", method=\"GET\", status=\"200\"}[5m])) without(path) \u53ef\u4ee5\u901a\u8fc7 histogram_quantile \u51fd\u6570\u505a\u6570\u636e\u7edf\u8ba1\uff1a \u53ef\u4ee5\u7528\u6765\u7edf\u8ba1\u767e\u5206\u4f4d\u6570\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u767e\u5206\u4f4d\uff0c\u7b2c\u4e8c\u4e2a histogram \u6307\u6807\uff0c\u8fd9\u6837\u8ba1\u7b97\u51fa\u6765\u7684\u5c31\u662f\u4e2d\u4f4d\u6570\uff0c\u5373 P50 \u3002 \u5728\u521a\u521a\u5199\u7684\u81ea\u5b9a\u4e49 exporter \u4e0a\u65b0\u589e\u51e0\u4e2a histogram \u7684\u6837\u672c\u70b9\uff1a MyHistogram.Observe(0.3) MyHistogram.Observe(0.4) MyHistogram.Observe(0.5) \u81ea\u5b9a\u4e49\u6876\uff1a // \u5b9a\u4e49histogram MyHistogram = prometheus.NewHistogram(prometheus.HistogramOpts{ Name: \"my_histogram_bucket\", Help: \"\u81ea\u5b9a\u4e49histogram\", Buckets: []float64{0.1,0.2,0.3,0.4,0.5}, // \u9700\u8981\u6307\u5b9a\u6876 }) \u4e0a\u62a5\u6570\u636e\uff1a MyHistogram.Observe(0.1) MyHistogram.Observe(0.3) MyHistogram.Observe(0.4) \u91cd\u65b0\u8ba1\u7b97 P50\uff0cP99\uff1a histogram_quantile(0.5,my_histogram_bucket_bucket) histogram_quantile(0.99,my_histogram_bucket_bucket) \u6876\u8bbe\u7f6e\u7684\u8d8a\u5408\u7406\uff0c\u8ba1\u7b97\u7684\u8bef\u5dee\u8d8a\u5c0f\u3002 6 Grafana \u53ef\u89c6\u5316 \u9664\u4e86\u53ef\u4ee5\u5229\u7528 Prometheus \u63d0\u4f9b\u7684 webUI \u53ef\u89c6\u5316\u6211\u4eec\u7684\u6307\u6807\u5916\uff0c\u8fd8\u53ef\u4ee5\u63a5\u5165 Grafana \u6765\u505a\u6307\u6807\u7684\u53ef\u89c6\u5316\u3002 \u7b2c\u4e00\u6b65\uff0c\u5bf9\u63a5\u6570\u636e\u6e90\uff1a \u914d\u7f6e\u597d prometheus \u7684\u5730\u5740 \u7b2c\u4e8c\u6b65\uff0c\u521b\u5efa\u4eea\u8868\u76d8\uff1a \u7f16\u8f91\u4eea\u8868\u76d8 \u5728 Metrics \u5904\u7f16\u5199 PromQL \u5373\u53ef\u5b8c\u6210\u67e5\u8be2\u548c\u53ef\u89c6\u5316 \u4eea\u8868\u76d8\u7f16\u8f91\u5b8c\u540e\uff0c\u53ef\u4ee5\u5bfc\u51fa\u5bf9\u5e94\u7684 json \u6587\u4ef6\uff0c\u65b9\u4fbf\u4e0b\u6b21\u5bfc\u5165\u540c\u6837\u7684\u4eea\u8868\u76d8\uff1a 7 \u76d1\u63a7\u544a\u8b66 AlertManager \u662f Prometheus \u63d0\u4f9b\u7684\u544a\u8b66\u4fe1\u606f\u4e0b\u53d1\u7ec4\u4ef6\uff0c\u5305\u542b\u4e86\u5bf9\u544a\u8b66\u4fe1\u606f\u7684\u5206\u7ec4\uff0c\u4e0b\u53d1\uff0c\u9759\u9ed8\u7b49\u7b56\u7565\u3002\u914d\u7f6e\u5b8c\u6210\u540e\u53ef\u4ee5\u5728 WebUI \u4e0a\u770b\u5230\u5bf9\u5e94\u7684\u544a\u8b66\u7b56\u7565\u4fe1\u606f\u3002\u544a\u8b66\u89c4\u5219\u4e5f\u662f\u57fa\u4e8e PromQL \u8fdb\u884c\u5b9a\u5236\u7684\u3002 \u7f16\u5199\u544a\u8b66\u914d\u7f6e\uff1a \u5f53 Http_srv \u8fd9\u4e2a\u670d\u52a1\u6302\u4e86\uff0cPrometheus \u91c7\u96c6\u4e0d\u5230\u6307\u6807\uff0c\u5e76\u4e14\u6301\u7eed\u65f6\u95f4 1 \u5206\u949f\uff0c\u5c31\u4f1a\u89e6\u53d1\u544a\u8b66 \u3002 groups: \\- name: simulator-alert-rule rules: \\- alert: HttpSimulatorDown expr: sum(up{job=\"http_srv\"}) == 0 for: 1m labels: severity: critical \u5728 prometheus.yml \u4e2d\u914d\u7f6e\u544a\u8b66\u914d\u7f6e\u6587\u4ef6\uff0c\u9700\u8981\u914d\u7f6e\u4e0a Alertmanager \u7684\u5730\u5740\u548c\u544a\u8b66\u6587\u4ef6\u7684\u5730\u5740\u3002 \\# Alertmanager configuration alerting: alertmanagers: \\- static_configs: \\- targets: ['localhost:9093'] \\# Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files: \\- \"alert_rules.yml\" \\#- \"first_rules.yml\" \u914d\u7f6e\u544a\u8b66\u4fe1\u606f\uff0c\u4f8b\u5982\u544a\u8b66\u53d1\u9001\u5730\u5740\uff0c\u544a\u8b66\u5185\u5bb9\u6a21\u7248\uff0c\u5206\u7ec4\u7b56\u7565\u7b49\u90fd\u5728 Alertmanager \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\uff1a global: smtp_smarthost: 'smtp.qq.com:465' smtp_from: 'xxxx@qq.com' smtp_auth_username: 'xxxx@qq.com' smtp_auth_password: 'xxxx' smtp_require_tls: false route: group_interval: 1m repeat_interval: 1m receiver: 'mail-receiver' # group_by //\u91c7\u7528\u54ea\u4e2a\u6807\u7b7e\u4f5c\u4e3a\u5206\u7ec4 # group_wait //\u5206\u7ec4\u7b49\u5f85\u7684\u65f6\u95f4\uff0c\u6536\u5230\u62a5\u8b66\u4e0d\u662f\u7acb\u9a6c\u53d1\u9001\u51fa\u53bb\uff0c\u800c\u662f\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u770b\u770b\u540c\u4e00\u7ec4\u4e2d\u662f\u5426\u6709\u5176\u4ed6\u62a5\u8b66\uff0c\u5982\u679c\u6709\u4e00\u5e76\u53d1\u9001 # group_interval //\u544a\u8b66\u65f6\u95f4\u95f4\u9694 # repeat_interval //\u91cd\u590d\u544a\u8b66\u65f6\u95f4\u95f4\u9694\uff0c\u53ef\u4ee5\u51cf\u5c11\u53d1\u9001\u544a\u8b66\u7684\u9891\u7387 # receiver //\u63a5\u6536\u8005\u662f\u8c01 # routes //\u5b50\u8def\u7531\u914d\u7f6e receivers: \\- name: 'mail-receiver' email_configs: \\- to: 'xxxx@qq.com' \u5f53\u6211 kill \u8fdb\u7a0b\uff1a Prometheus \u5df2\u7ecf\u89e6\u53d1\u544a\u8b66\uff1a \u5728\u7b49\u5f85 1 \u5206\u949f\uff0c\u5982\u679c\u6301\u7eed\u8fd8\u662f\u7b26\u5408\u544a\u8b66\u7b56\u7565\uff0c\u5219\u72b6\u6001\u4e3a\u4ece pending \u53d8\u4e3a FIRING \u4f1a\u53d1\u9001\u90ae\u4ef6\u5230\u6211\u7684\u90ae\u7bb1\u3002 \u6b64\u65f6\u6211\u7684\u90ae\u7bb1\u6536\u5230\u4e86\u4e00\u6761\u544a\u8b66\u6d88\u606f\uff1a Alertmanager \u4e5f\u652f\u6301\u5bf9\u544a\u8b66\u8fdb\u884c\u9759\u9ed8\uff0c\u5728 Alertmanager \u7684 WebUI \u4e2d\u914d\u7f6e\u5373\u53ef\uff1a \u95f4\u9694\u4e86 4 \u5206\u949f\uff0c\u6ca1\u6709\u6536\u5230\u544a\u8b66\uff0c\u9759\u9ed8\u751f\u6548\uff1a \u4e00\u4e2a\u5c0f\u65f6\u6ca1\u6709\u6536\u5230\u544a\u8b66\u4fe1\u606f\uff1a","title":"\u7b2c\u4e00\u8282 Prometheus \u7cfb\u7edf\u4ecb\u7ecd 2022"},{"location":"chap1/1prometheus2022/#prometheus-2022","text":"","title":"\u7b2c\u4e00\u8282 Prometheus \u7cfb\u7edf\u4ecb\u7ecd 2022"},{"location":"chap1/1prometheus2022/#1","text":"Prometheus \u662f\u53e4\u5e0c\u814a\u795e\u8bdd\u91cc\u6cf0\u5766\u65cf\u7684\u4e00\u540d\u795e\u660e\uff0c\u540d\u5b57\u7684\u610f\u601d\u662f\u201c\u5148\u89c1\u4e4b\u660e\u201d\uff0c\u4e0b\u56fe\u4e2d\u662f Prometheus \u88ab\u5b99\u65af\u60e9\u7f5a\uff0c\u9971\u53d7\u809d\u810f\u65e5\u98df\u591c\u957f\u4e4b\u82e6\u3002 \u5176\u5b98\u7f51\u5c01\u9762\u56fe\u5f15\u5bfc\u8bed\uff1aFrom metrics to insight\uff0c\u4ece\u6307\u6807\u5230\u6d1e\u5bdf\u529b\uff0c\u901a\u8fc7\u6307\u6807\u53bb\u6d1e\u5bdf\u4f60\u7684\u7cfb\u7edf\uff0c\u4e3a\u6211\u4eec\u7684\u7cfb\u7edf\u63d0 \u4f9b\u6307\u6807\u6536\u96c6\u548c\u76d1\u63a7\u7684\u5f00\u6e90\u89e3\u51b3\u65b9\u6848 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0cPrometheus \u662f\u4e00\u4e2a\u6570\u636e\u76d1\u63a7\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8ba9\u6211\u4eec\u80fd\u968f\u65f6\u638c\u63e1\u7cfb\u7edf\u8fd0\u884c\u7684\u72b6\u6001\uff0c\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u548c\u6392\u9664\u6545\u969c\u3002 Prometheus \u53d1\u5c55\u901f\u5ea6\u5f88\u5feb\uff0c12 \u5e74\u5f00\u53d1\u5b8c\u6210\uff0c16 \u5e74\u52a0\u5165 CNCF\uff0c\u6210\u4e3a\u7ee7 Kubernetes \u4e4b\u540e\u7b2c\u4e8c\u4e2a CNCF \u6258\u7ba1\u7684\u9879\u76ee\uff0c\u76ee\u524d GitHub 42k \u7684 \ud83c\udf1f\uff0c\u800c\u4e14\u793e\u533a\u5f88\u6d3b\u8dc3\uff0c\u7ef4\u62a4\u9891\u7387\u5f88\u9ad8\uff0c\u57fa\u672c\u7a33\u5b9a\u5728 1 \u4e2a\u6708 1 \u4e2a\u5c0f\u7248\u672c\u7684\u8fed\u4ee3\u901f\u5ea6\u3002","title":"1 \u7b80\u4ecb"},{"location":"chap1/1prometheus2022/#2","text":"Prometheus \u63d0\u4f9b\u4e86\u4ece \u6307\u6807\u66b4\u9732\uff0c\u5230\u6307\u6807\u6293\u53d6\u3001\u5b58\u50a8\u548c\u53ef\u89c6\u5316 \uff0c\u4ee5\u53ca\u6700\u540e\u7684\u76d1\u63a7\u544a\u8b66\u7b49\u4e00\u7cfb\u5217\u7ec4\u4ef6\u3002","title":"2 \u6574\u4f53\u751f\u6001"},{"location":"chap1/1prometheus2022/#2-1","text":"\u6bcf\u4e00\u4e2a\u88ab Prometheus \u76d1\u63a7\u7684\u670d\u52a1\u90fd\u662f\u4e00\u4e2a Job\uff0cPrometheus \u4e3a\u8fd9\u4e9b Job \u63d0\u4f9b\u4e86\u5b98\u65b9\u7684 SDK \uff0c\u5229\u7528\u8fd9\u4e2a SDK \u53ef\u4ee5\u81ea\u5b9a\u4e49\u5e76\u5bfc\u51fa\u81ea\u5df1\u7684\u4e1a\u52a1\u6307\u6807 \uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 Prometheus \u5b98\u65b9\u63d0\u4f9b\u7684\u5404\u79cd\u5e38\u7528\u7ec4\u4ef6\u548c\u4e2d\u95f4\u4ef6\u7684 Exporter\uff08\u6bd4\u5982\u5e38\u7528\u7684 MySQL\uff0cConsul \u7b49\u7b49\uff09\u3002 \u5bf9\u4e8e\u77ed\u65f6\u95f4\u6267\u884c\u7684\u811a\u672c\u4efb\u52a1\u6216\u8005\u4e0d\u597d\u76f4\u63a5 Pull \u6307\u6807\u7684\u670d\u52a1\uff0c Prometheus \u63d0\u4f9b\u4e86 PushGateWay \u7f51\u5173\u7ed9\u8fd9\u4e9b\u4efb\u52a1\u5c06\u670d\u52a1\u6307\u6807\u4e3b\u52a8\u63a8 Push \u5230\u7f51\u5173\uff0cPrometheus \u518d\u4ece\u8fd9\u4e2a\u7f51\u5173\u91cc Pull \u6307\u6807 \u3002","title":"2-1 \u6307\u6807\u66b4\u9732"},{"location":"chap1/1prometheus2022/#2-2","text":"\u4e0a\u9762\u63d0\u5230\u4e86 Push \u548c Pull\uff0c\u5176\u5b9e\u8fd9\u662f\u4e24\u79cd\u6307\u6807\u6293\u53d6\u6a21\u578b\u3002 Pull \u6a21\u578b\uff1a\u76d1\u63a7\u670d\u52a1\u4e3b\u52a8\u62c9\u53d6\u88ab\u76d1\u63a7\u670d\u52a1\u7684\u6307\u6807\u3002 \u88ab\u76d1\u63a7\u670d\u52a1\u4e00\u822c\u901a\u8fc7\u4e3b\u52a8\u66b4\u9732 metrics \u7aef\u53e3\u6216\u8005\u901a\u8fc7 Exporter \u7684\u65b9\u5f0f\u66b4\u9732\u6307\u6807 \uff0c\u76d1\u63a7\u670d\u52a1\u4f9d\u8d56\u670d\u52a1\u53d1\u73b0\u6a21\u5757\u53d1\u73b0\u88ab\u76d1\u63a7\u670d\u52a1\uff0c\u4ece\u800c\u53bb\u5b9a\u671f\u7684\u6293\u53d6\u6307\u6807\u3002 Push \u6a21\u578b\uff1a\u88ab\u76d1\u63a7\u670d\u52a1\u4e3b\u52a8\u5c06\u6307\u6807\u63a8\u9001\u5230\u76d1\u63a7\u670d\u52a1\uff0c\u53ef\u80fd\u9700\u8981\u5bf9\u6307\u6807\u505a\u534f\u8bae\u9002\u914d\uff0c\u5fc5\u987b\u5f97\u7b26\u5408\u76d1\u63a7\u670d\u52a1\u8981\u6c42\u7684\u6307\u6807\u683c\u5f0f\u3002 \u5bf9\u4e8e Prometheus \u4e2d\u7684\u6307\u6807\u6293\u53d6\uff0c\u91c7\u7528\u7684\u662f Pull \u6a21\u578b\uff0c \u9ed8\u8ba4\u662f\u4e00\u5206\u949f\u53bb\u62c9\u53d6\u4e00\u6b21\u6307\u6807 \uff0c \u901a\u8fc7 Prometheus.yaml \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 scrape_interval \u914d\u7f6e\u9879\u914d\u7f6e\uff0cPrometheus \u5bf9\u5916\u90fd\u662f\u7528\u7684 Pull \u6a21\u578b \u4e00\u4e2a\u662f Pull Exporter \u7684\u66b4\u9732\u7684\u6307\u6807\uff0c \u4e00\u4e2a\u662f Pull PushGateway \u66b4\u9732\u7684\u6307\u6807\u3002","title":"2-2 \u6307\u6807\u6293\u53d6"},{"location":"chap1/1prometheus2022/#2-3","text":"\u6307\u6807\u6293\u53d6\u540e\u4f1a\u5b58\u50a8\u5728\u5185\u7f6e\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u4e2d\uff0cPrometheus \u4e5f\u63d0\u4f9b\u4e86 PromQL \u67e5\u8be2\u8bed\u8a00\u7ed9\u6211\u4eec\u505a\u6307\u6807\u7684\u67e5\u8be2\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 Prometheus \u7684 WebUI \u4e0a\u901a\u8fc7 PromQL\uff0c\u53ef\u89c6\u5316\u67e5\u8be2\u6211\u4eec\u7684\u6307\u6807\uff0c\u4e5f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u63a5\u5165\u7b2c\u4e09\u65b9\u7684\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u4f8b\u5982 Grafana\u3002","title":"2-3 \u6307\u6807\u5b58\u50a8\u548c\u67e5\u8be2"},{"location":"chap1/1prometheus2022/#2-4","text":"Prometheus \u63d0\u4f9b\u4e86 Alertmanageer \u57fa\u4e8e PromQL \u6765\u505a\u7cfb\u7edf\u7684\u76d1\u63a7\u544a\u8b66\uff0c\u5f53 PromQL \u67e5\u8be2\u51fa\u6765\u7684\u6307\u6807\u8d85\u8fc7\u6211\u4eec\u5b9a\u4e49\u7684\u9608\u503c\u65f6\uff0cPrometheus \u4f1a\u53d1\u9001\u4e00\u6761\u544a\u8b66\u4fe1\u606f\u5230 Alertmanager\uff0cmanager \u4f1a\u5c06\u544a\u8b66\u4e0b\u53d1\u5230\u914d\u7f6e\u597d\u7684\u90ae\u7bb1\u6216\u8005\u5fae\u4fe1\u3002","title":"2-4 \u76d1\u63a7\u544a\u8b66"},{"location":"chap1/1prometheus2022/#3","text":"Prometheus \u7684\u4ece\u88ab\u76d1\u63a7\u670d\u52a1\u7684\u6ce8\u518c\u5230\u6307\u6807\u6293\u53d6\u5230\u6307\u6807\u67e5\u8be2\u7684\u6d41\u7a0b\u5206\u4e3a\u4e94\u4e2a\u6b65\u9aa4\uff1a","title":"3 \u5de5\u4f5c\u539f\u7406"},{"location":"chap1/1prometheus2022/#3-1","text":"\u88ab\u76d1\u63a7\u670d\u52a1\u5728 Prometheus \u4e2d\u662f\u4e00\u4e2a Job \u5b58\u5728\uff0c\u88ab\u76d1\u63a7\u670d\u52a1\u7684\u6240\u6709\u5b9e\u4f8b\u5728 Prometheus \u4e2d\u662f\u4e00\u4e2a target \u7684\u5b58\u5728\uff0c \u6240\u4ee5\u88ab\u76d1\u63a7\u670d\u52a1\u7684\u6ce8\u518c\u5c31\u662f\u5728 Prometheus \u4e2d\u6ce8\u518c\u4e00\u4e2a Job \u548c\u5176\u6240\u6709\u7684 target \uff0c\u8fd9\u4e2a\u6ce8\u518c\u5206\u4e3a\uff1a \u9759\u6001\u6ce8\u518c \u52a8\u6001\u6ce8\u518c \u9759\u6001\u6ce8\u518c\uff1a \u9759\u6001\u7684\u5c06\u670d\u52a1\u7684 IP \u548c\u6293\u53d6\u6307\u6807\u7684\u7aef\u53e3\u53f7\u914d\u7f6e\u5728 Prometheus yaml \u6587\u4ef6\u7684 scrape_configs \u914d\u7f6e\u4e0b \uff1a scrape_configs: - job_name: \"prometheus\" static_configs: - targets: [\"localhost:9090\"] \u4ee5\u4e0a\u5c31\u662f\u6ce8\u518c\u4e86\u4e00\u4e2a\u540d\u4e3a Prometheus \u7684\u670d\u52a1\uff0c\u8fd9\u4e2a\u670d\u52a1\u4e0b\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u66b4\u9732\u7684\u6293\u53d6\u5730\u5740\u662f localhost:9090\u3002 \u52a8\u6001\u6ce8\u518c \uff1a\u52a8\u6001\u6ce8\u518c\u5c31\u662f\u5728 Prometheus yaml \u6587\u4ef6\u7684 scrape_configs \u914d\u7f6e\u4e0b\u914d\u7f6e\u670d\u52a1\u53d1\u73b0\u7684\u5730\u5740\u548c\u670d\u52a1\u540d\uff0cPrometheus \u4f1a\u53bb\u8be5\u5730\u5740\uff0c \u6839\u636e\u4f60\u63d0\u4f9b\u7684\u670d\u52a1\u540d\u52a8\u6001\u53d1\u73b0\u5b9e\u4f8b\u5217\u8868\uff0c\u5728 Prometheus \u4e2d\uff0c\u652f\u6301 Consul\u3001DNS\u3001\u6587\u4ef6\u3001Kubernetes \u7b49\u591a\u79cd\u670d\u52a1\u53d1\u73b0\u673a\u5236 \u3002 \u57fa\u4e8e Consul \u7684\u670d\u52a1\u53d1\u73b0\uff1a - job_name: \"node_export_consul\" metrics_path: /node_metrics scheme: http consul_sd_configs: - server: localhost:8500 services: - node_exporter consul_sd_configs \u6211\u4eec Consul \u7684\u5730\u5740\u5c31\u662f\uff1alocalhost:8500\uff0c\u670d\u52a1\u540d\u662f node_exporter \uff0c\u5728\u8fd9\u4e2a\u670d\u52a1\u4e0b\u6709\u4e00\u4e2a exporter \u5b9e\u4f8b\uff1alocalhost:9600\u3002 \u6ce8\u610f\uff1a\u5982\u679c\u662f\u52a8\u6001\u6ce8\u518c\uff0c\u6700\u597d\u52a0\u4e0a\u8fd9\u4e24\u914d\u7f6e\uff0c\u9759\u6001\u6ce8\u518c\u6307\u6807\u62c9\u53d6\u7684\u8def\u5f84\u4f1a\u9ed8\u8ba4\u7684\u5e2e\u6211\u4eec\u6307\u5b9a\u4e3a metrics_path:/metrics \uff0c\u6240\u4ee5\u5982\u679c\u66b4\u9732\u7684\u6307\u6807\u6293\u53d6\u8def\u5f84\u4e0d\u540c\u6216\u8005\u662f\u52a8\u6001\u7684\u670d\u52a1\u6ce8\u518c\uff0c\u6700\u597d\u52a0\u4e0a\u8fd9\u4e24\u4e2a\u914d\u7f6e\u3002 metrics_path: /node_metrics scheme: http \u4e0d\u7136\u4f1a\u62a5\u9519\u201cINVALID is not a valid start token\u201d\uff0c\u6f14\u793a\u4e0b\uff0c\u767e\u5ea6\u4e86\u4e00\u4e0b\uff0c\u8fd9\u91cc\u53ef\u80fd\u662f\u6570\u636e\u683c\u5f0f\u4e0d\u7edf\u4e00\u5bfc\u81f4\u3002 \u6700\u540e\u53ef\u4ee5\u5728 WebUI \u4e2d\u67e5\u770b\u53d1\u73b0\u7684\u5b9e\u4f8b\uff1a \u76ee\u524d\uff0cPrometheus \u652f\u6301\u591a\u8fbe\u4e8c\u5341\u591a\u79cd\u670d\u52a1\u53d1\u73b0\u534f\u8bae\uff1a <azure_sd_config> <consul_sd_config> <digitalocean_sd_config> <docker_sd_config> <dockerswarm_sd_config> <dns_sd_config> <ec2_sd_config> <openstack_sd_config> <file_sd_config> <gce_sd_config> <hetzner_sd_config> <http_sd_config> <kubernetes_sd_config> <kuma_sd_config> <lightsail_sd_config> <linode_sd_config> <marathon_sd_config> <nerve_sd_config> <serverset_sd_config> <triton_sd_config> <eureka_sd_config> <scaleway_sd_config> <static_config>","title":"3-1 \u670d\u52a1\u6ce8\u518c"},{"location":"chap1/1prometheus2022/#3-2","text":"\u5728\u66f4\u65b0\u5b8c Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0\u6211\u4eec\u7684\u914d\u7f6e\u5230\u7a0b\u5e8f\u5185\u5b58\u91cc\uff0c\u8fd9\u91cc\u7684\u66f4\u65b0\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c \u7b2c\u4e00\u79cd\u7b80\u5355\u7c97\u66b4\uff0c\u5c31\u662f\u91cd\u542f Prometheus\uff0c\u7b2c\u4e8c\u79cd\u662f\u52a8\u6001\u66f4\u65b0\u7684\u65b9\u5f0f \u3002 \u5982\u4f55\u5b9e\u73b0\u52a8\u6001\u7684\u66f4\u65b0 Prometheus \u914d\u7f6e \u3002 \u7b2c\u4e00\u6b65\uff1a\u9996\u5148\u8981\u4fdd\u8bc1\u542f\u52a8 Prometheus \u7684\u65f6\u5019\u5e26\u4e0a\u542f\u52a8\u53c2\u6570\uff1a --web.enable-lifecycle \u3002 prometheus --config.file=/usr/local/etc/prometheus.yml --web.enable-lifecycle \u7b2c\u4e8c\u6b65\uff1a\u53bb\u66f4\u65b0\u6211\u4eec\u7684 Prometheus \u914d\u7f6e\u3002 \u7b2c\u4e09\u6b65\uff1a\u66f4\u65b0\u5b8c\u914d\u7f6e\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 Post \u8bf7\u6c42\u7684\u65b9\u5f0f\uff0c\u52a8\u6001\u66f4\u65b0\u914d\u7f6e\uff1a curl -v --request POST 'http://localhost:9090/-/reload' \u539f\u7406\uff1a Prometheus \u5728 Web \u6a21\u5757\u4e2d\uff0c\u6ce8\u518c\u4e86\u4e00\u4e2a handler\uff1a if o.EnableLifecycle { router.Post(\"/-/quit\", h.quit) router.Put(\"/-/quit\", h.quit) router.Post(\"/-/reload\", h.reload) // reload\u914d\u7f6e router.Put(\"/-/reload\", h.reload) } \u901a\u8fc7 h.reload \u8fd9\u4e2a handler \u65b9\u6cd5\u5b9e\u73b0\uff1a\u8fd9\u4e2a handler \u5c31\u662f\u5f80\u4e00\u4e2a channle \u4e2d\u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7\uff1a func (h *Handler) reload(w http.ResponseWriter, r *http.Request) { rc := make(chan error) h.reloadCh <- rc // \u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7\u5230channe\u4e86\u4e2d if err := <-rc; err != nil { http.Error(w, fmt.Sprintf(\"failed to reload config: %s\", err), http.StatusInternalServerError) } } \u5728 main \u51fd\u6570\u4e2d\u4f1a\u53bb\u76d1\u542c\u8fd9\u4e2a channel\uff0c\u53ea\u8981\u6709\u76d1\u542c\u5230\u4fe1\u53f7\uff0c\u5c31\u4f1a\u505a\u914d\u7f6e\u7684 reload\uff0c\u91cd\u65b0\u5c06\u65b0\u914d\u7f6e\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff1a case rc := <-webHandler.Reload(): if err := reloadConfig(cfg.configFile, cfg.enableExpandExternalLabels, cfg.tsdb.EnableExemplarStorage, logger, noStepSubqueryInterval, reloaders...); err != nil { level.Error(logger).Log(\"msg\", \"Error reloading config\", \"err\", err) rc <- err } else { rc <- nil }","title":"3-2 \u914d\u7f6e\u66f4\u65b0"},{"location":"chap1/1prometheus2022/#3-3","text":"Prometheus \u5bf9\u6307\u6807\u7684\u6293\u53d6\u91c7\u53d6\u4e3b\u52a8 Pull \u7684\u65b9\u5f0f\uff0c \u5373\u5468\u671f\u6027\u7684\u8bf7\u6c42\u88ab\u76d1\u63a7\u670d\u52a1\u66b4\u9732\u7684 Metrics \u63a5\u53e3\u6216\u8005\u662f PushGateway \uff0c\u4ece\u800c\u83b7\u53d6\u5230 Metrics \u6307\u6807\uff0c \u9ed8\u8ba4\u65f6\u95f4\u662f 15s \u6293\u53d6\u4e00\u6b21 \uff0c\u914d\u7f6e\u9879\u5982\u4e0b\uff1a global: scrape_interval: 15s \u6293\u53d6\u5230\u7684\u6307\u6807\u4f1a\u88ab\u4ee5\u65f6\u95f4\u5e8f\u5217\u7684\u5f62\u5f0f\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u4e14\u5b9a\u65f6\u5237\u5230\u78c1\u76d8\u4e0a\uff0c\u9ed8 \u8ba4\u662f\u4e24\u4e2a\u5c0f\u65f6\u56de\u5237\u4e00\u6b21 \u3002\u5e76\u4e14\u4e3a\u4e86\u9632\u6b62 Prometheus \u53d1\u751f\u5d29\u6e83\u6216\u91cd\u542f\u65f6\u80fd\u591f\u6062\u590d\u6570\u636e\uff0cPrometheus \u4e5f\u63d0\u4f9b\u4e86\u7c7b\u4f3c MySQL \u4e2d binlog \u4e00\u6837\u7684\u9884\u5199\u65e5\u5fd7\uff0c\u5f53 Prometheus \u5d29\u6e83\u91cd\u542f\u65f6\uff0c\u4f1a\u8bfb\u8fd9\u4e2a\u9884\u5199\u65e5\u5fd7\u6765\u6062\u590d\u6570\u636e \u3002","title":"3-3 \u6307\u6807\u6293\u53d6\u548c\u5b58\u50a8"},{"location":"chap1/1prometheus2022/#4-metric","text":"","title":"4 Metric \u6307\u6807"},{"location":"chap1/1prometheus2022/#4-1","text":"Prometheus \u91c7\u96c6\u7684\u6240\u6709\u6307\u6807\u90fd\u662f\u4ee5\u65f6\u95f4\u5e8f\u5217\u7684\u5f62\u5f0f\u8fdb\u884c\u5b58\u50a8\uff0c\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u6709\u4e09\u90e8\u5206\u7ec4\u6210\uff1a \u6307\u6807\u540d\u548c\u6307\u6807\u6807\u7b7e\u96c6\u5408\uff1a metric_name{<label1=v1>,<label2=v2>....} \uff0c\u6307\u6807\u540d\uff1a\u8868\u793a\u8fd9\u4e2a\u6307\u6807\u662f\u76d1\u63a7\u54ea\u4e00\u65b9\u9762\u7684\u72b6\u6001\uff0c\u6bd4\u5982 http_request_total \u8868\u793a\u8bf7\u6c42\u6570\u91cf\uff1b \u6307\u6807\u6807\u7b7e\uff1a\u63cf\u8ff0\u8fd9\u4e2a\u6307\u6807\u6709\u54ea\u4e9b\u7ef4\u5ea6\uff0c\u6bd4\u5982 http_request_total \u8fd9\u4e2a\u6307\u6807\uff0c\u6709\u8bf7\u6c42\u72b6\u6001\u7801 code = 200/400/500 \uff0c\u8bf7\u6c42\u65b9\u5f0f method = get/post \u7b49\uff0c\u5b9e\u9645\u4e0a\u6307\u6807\u540d\u79f0\u5b9e\u9645\u4e0a\u662f\u4ee5\u6807\u7b7e\u7684\u5f62\u5f0f\u4fdd\u5b58\uff0c\u8fd9\u4e2a\u6807\u7b7e\u662f name\uff0c\u5373\uff1aname=\u3002 \u65f6\u95f4\u6233\uff1a\u63cf\u8ff0\u5f53\u524d\u65f6\u95f4\u5e8f\u5217\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\uff1a\u6beb\u79d2 \u6837\u672c\u503c\uff1a\u5f53\u524d\u76d1\u63a7\u6307\u6807\u7684\u5177\u4f53\u6570\u503c\uff0c\u6bd4\u5982 http_request_total \u7684\u503c\u5c31\u662f\u8bf7\u6c42\u6570\u662f\u591a\u5c11\u3002 \u6240\u6709\u7684\u6307\u6807\u4e5f\u90fd\u662f\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684\u683c\u5f0f\u6765\u6807\u8bc6\u7684\uff1a # HELP // HELP\uff1a\u8fd9\u91cc\u63cf\u8ff0\u7684\u6307\u6807\u7684\u4fe1\u606f\uff0c\u8868\u793a\u8fd9\u4e2a\u662f\u4e00\u4e2a\u4ec0\u4e48\u6307\u6807\uff0c\u7edf\u8ba1\u4ec0\u4e48\u7684 # TYPE // TYPE\uff1a\u8fd9\u4e2a\u6307\u6807\u662f\u4ec0\u4e48\u7c7b\u578b\u7684 <metric name>{<label name>=<label value>, ...} value // \u6307\u6807\u7684\u5177\u4f53\u683c\u5f0f\uff0c<\u6307\u6807\u540d>{\u6807\u7b7e\u96c6\u5408} \u6307\u6807\u503c","title":"4-1 \u6570\u636e\u6a21\u578b"},{"location":"chap1/1prometheus2022/#4-2","text":"Prometheus \u5e95\u5c42\u5b58\u50a8\u4e0a\u5176\u5b9e\u5e76\u6ca1\u6709\u5bf9\u6307\u6807\u505a\u7c7b\u578b\u7684\u533a\u5206\uff0c\u90fd\u662f\u4ee5\u65f6\u95f4\u5e8f\u5217\u7684\u5f62\u5f0f\u5b58\u50a8 \uff0c\u4f46\u662f\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u7684\u4f7f\u7528\u548c\u7406\u89e3\u4e0d\u540c\u76d1\u63a7\u6307\u6807\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c Prometheus \u5b9a\u4e49\u4e86 4 \u79cd\u4e0d\u540c\u7684\u6307\u6807\u7c7b\u578b\uff1a\u8ba1\u6570\u5668 counter \uff0c\u4eea\u8868\u76d8 gauge \uff0c\u76f4\u65b9\u56fe histogram \uff0c\u6458\u8981 summary \u3002 Counter \u8ba1\u6570\u5668\uff1a Counter \u7c7b\u578b\u548c Redis \u7684\u81ea\u589e\u547d\u4ee4\u4e00\u6837\uff0c \u53ea\u589e\u4e0d\u51cf \uff0c\u901a\u8fc7 Counter \u6307\u6807\u53ef\u4ee5\u7edf\u8ba1 Http \u8bf7\u6c42\u6570\u91cf\uff0c\u8bf7\u6c42\u9519\u8bef\u6570\uff0c \u63a5\u53e3\u8c03\u7528\u6b21\u6570\u7b49\u5355\u8c03\u9012\u589e\u7684\u6570\u636e \u3002 \u540c\u65f6\u53ef\u4ee5\u7ed3\u5408 increase \u548c rate \u7b49\u51fd\u6570\u7edf\u8ba1\u53d8\u5316\u901f\u7387\uff0c\u540e\u7eed\u6211\u4eec\u4f1a\u63d0\u5230\u8fd9\u4e9b\u5185\u7f6e\u51fd\u6570 \u3002 Gauge \u4eea\u8868\u76d8\uff1a \u548c Counter \u4e0d\u540c\uff0cGauge \u662f\u53ef\u589e\u53ef\u51cf\u7684\uff0c\u53ef\u4ee5\u53cd\u6620\u4e00\u4e9b\u52a8\u6001\u53d8\u5316\u7684\u6570\u636e\uff0c\u4f8b\u5982\u5f53\u524d\u5185\u5b58\u5360\u7528\uff0cCPU \u5229\u7528 \uff0cGc \u6b21\u6570\u7b49\u52a8\u6001\u53ef\u4e0a\u5347\u53ef\u4e0b\u964d\u7684\u6570\u636e\uff0c\u5728 Prometheus \u4e0a\u901a\u8fc7 Gauge\uff0c\u53ef\u4ee5\u4e0d\u7528\u7ecf\u8fc7\u5185\u7f6e\u51fd\u6570\u76f4\u89c2\u7684\u53cd\u6620\u6570\u636e\u7684\u53d8\u5316\u60c5\u51b5\uff0c\u5982\u4e0b\u56fe\u8868\u793a\u5806\u53ef\u5206\u914d\u7684\u7a7a\u95f4\u5927\u5c0f\uff1a Histogram \u76f4\u65b9\u56fe\uff1a Histogram \u662f\u4e00\u79cd\u76f4\u65b9\u56fe\u7c7b\u578b\uff0c \u53ef\u4ee5\u89c2\u5bdf\u5230\u6307\u6807\u5728\u5404\u4e2a\u4e0d\u540c\u7684\u533a\u95f4\u8303\u56f4\u7684\u5206\u5e03\u60c5\u51b5 \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\u53ef\u4ee5\u89c2\u5bdf\u5230\u8bf7\u6c42\u8017\u65f6\u5728\u5404\u4e2a\u6876\u7684\u5206\u5e03\u3002 \u6709\u4e00\u70b9\u8981\u6ce8\u610f\u7684\u662f\uff0c Histogram \u662f\u7d2f\u8ba1\u76f4\u65b9\u56fe\uff0c\u5373\u6bcf\u4e00\u4e2a\u6876\u7684\u662f\u53ea\u6709\u4e0a\u533a\u95f4 \uff0c\u4f8b\u5982\u4e0b\u56fe\u8868\u793a\u5c0f\u4e8e 0.1 \u6beb\u79d2\uff08le=\"0.1\"\uff09\u7684\u8bf7\u6c42\u6570\u91cf\u662f 18173 \u4e2a\uff0c\u5c0f\u4e8e 0.2 \u6beb\u79d2\uff08le=\"0.2\"\uff09\u7684\u8bf7\u6c42\u662f 18182 \u4e2a\uff0c\u5728 le=\"0.2\" \u8fd9\u4e2a\u6876\u4e2d\u662f\u5305\u542b\u4e86 le=\"0.1\"\u8fd9\u4e2a\u6876\u7684\u6570\u636e\uff0c\u5982\u679c\u6211\u4eec\u8981\u62ff\u5230 0.1 \u6beb\u79d2\u5230 0.2 \u6beb\u79d2\u7684\u8bf7\u6c42\u6570\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u6876\u60f3\u51cf\u5f97\u5230\u3002 \u5728\u76f4\u65b9\u56fe\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 histogram_quantile \u51fd\u6570\u6c42\u51fa\u767e\u5206\u4f4d \u6570\uff0c\u6bd4\u5982 P50\u3001P90\u3001P99 \u7b49\u6570\u636e\u3002 Summary \u6458\u8981\uff1a Summary \u4e5f\u662f\u7528\u6765\u505a\u7edf\u8ba1\u5206\u6790\u7684\uff0c\u548c Histogram \u533a\u522b\u5728\u4e8e\uff0c Summary \u76f4\u63a5\u5b58\u50a8\u7684\u5c31\u662f\u767e\u5206\u4f4d\u6570 \uff0c\u5982\u4e0b\u6240\u793a\uff1a\u53ef\u4ee5\u76f4\u89c2\u7684\u89c2\u5bdf\u5230\u6837\u672c\u7684\u4e2d\u4f4d\u6570\uff0cP90 \u548c P99\u3002 Summary \u7684\u767e\u5206\u4f4d\u6570\u662f\u5ba2\u6237\u7aef\u8ba1\u7b97\u597d\u76f4\u63a5\u8ba9 Prometheus \u6293\u53d6\u7684\uff0c\u4e0d\u9700\u8981 Prometheus \u8ba1\u7b97\uff0c\u76f4\u65b9\u56fe\u662f\u901a\u8fc7\u5185\u7f6e\u51fd\u6570 histogram_quantile \u5728 Prometheus \u670d\u52a1\u7aef\u8ba1\u7b97\u6c42\u51fa\u3002","title":"4-2 \u6307\u6807\u7c7b\u578b"},{"location":"chap1/1prometheus2022/#4-3","text":"\u6807\u5bfc\u51fa\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c \u4e00\u79cd\u662f\u4f7f\u7528 Prometheus \u793e\u533a\u63d0\u4f9b\u7684\u5b9a\u5236\u597d\u7684 Exporter \u5bf9\u4e00\u4e9b\u7ec4\u4ef6\u8bf8\u5982 MySQL\uff0cKafka \u7b49\u7684\u6307\u6807\u4f5c\u5bfc\u51fa\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528\u793e\u533a\u63d0\u4f9b\u7684 Client \u6765\u81ea\u5b9a\u4e49\u6307\u6807\u5bfc\u51fa \u3002 github.com/prometheus/client_golang/prometheus/promhttp \u81ea\u5b9a\u4e49 Prometheus exporter\uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { http.Handle(\"/metrics\", promhttp.Handler()) http.ListenAndServe(\":8080\", nil) } \u8bbf\u95ee\uff1a http://localhost:8080/metrics \uff0c\u5373\u53ef\u770b\u5230\u5bfc\u51fa\u7684\u6307\u6807\uff0c\u8fd9\u91cc\u6211\u4eec\u6ca1\u6709\u81ea\u5b9a\u4e49\u4efb\u4f55\u7684\u6307\u6807\uff0c\u4f46\u662f\u80fd\u770b\u5230\u4e00\u4e9b\u5185\u7f6e\u7684 Go \u7684\u8fd0\u884c\u65f6\u6307\u6807\u548c promhttp \u76f8\u5173\u7684\u6307\u6807\uff0c\u8fd9\u4e2a Client \u9ed8\u8ba4\u4e3a\u6211\u4eec\u66b4\u9732\u7684\u6307\u6807\uff0c go_\uff1a \u4ee5 go \u4e3a\u524d\u7f00\u7684\u6307\u6807\u662f\u5173\u4e8e Go \u8fd0\u884c\u65f6\u76f8\u5173\u7684\u6307\u6807\uff0c\u6bd4\u5982\u5783\u573e\u56de\u6536\u65f6\u95f4\u3001goroutine \u6570\u91cf\u7b49\uff0c\u8fd9\u4e9b\u90fd\u662f Go \u5ba2\u6237\u7aef\u5e93\u7279\u6709\u7684\uff0c\u5176\u4ed6\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u5e93\u53ef\u80fd\u4f1a\u66b4\u9732\u5404\u81ea\u8bed\u8a00\u7684\u5176\u4ed6\u8fd0\u884c\u65f6\u6307\u6807\u3002 promhttp\uff1a\u6765\u81ea promhttp \u5de5\u5177\u5305\u7684\u76f8\u5173\u6307\u6807\uff0c\u7528\u4e8e\u8ddf\u8e2a\u5bf9\u6307\u6807\u8bf7\u6c42\u7684\u5904\u7406 \u3002 \u6dfb\u52a0\u81ea\u5b9a\u4e49\u6307\u6807\uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { // 1.\u5b9a\u4e49\u6307\u6807\uff08\u7c7b\u578b\uff0c\u540d\u5b57\uff0c\u5e2e\u52a9\u4fe1\u606f\uff09 myCounter := prometheus.NewCounter(prometheus.CounterOpts{ Name: \"my_counter_total\", Help: \"\u81ea\u5b9a\u4e49counter\", }) // 2.\u6ce8\u518c\u6307\u6807 prometheus.MustRegister(myCounter) // 3.\u8bbe\u7f6e\u6307\u6807\u503c myCounter.Add(23) http.Handle(\"/metrics\", promhttp.Handler()) http.ListenAndServe(\":8080\", nil) } \u8fd0\u884c\uff1a \u6a21\u62df\u4e0b\u5728\u4e1a\u52a1\u4e2d\u4e0a\u62a5\u63a5\u53e3\u8bf7\u6c42\u91cf\uff1a package main import ( \"fmt\" \"net/http\" \"github.com/prometheus/client_golang/prometheus\" ) var ( MyCounter prometheus.Counter ) // init \u6ce8\u518c\u6307\u6807 func init() { // 1.\u5b9a\u4e49\u6307\u6807\uff08\u7c7b\u578b\uff0c\u540d\u5b57\uff0c\u5e2e\u52a9\u4fe1\u606f\uff09 MyCounter = prometheus.NewCounter(prometheus.CounterOpts{ Name: \"my_counter_total\", Help: \"\u81ea\u5b9a\u4e49counter\", }) // 2.\u6ce8\u518c\u6307\u6807 prometheus.MustRegister(MyCounter) } // Sayhello func Sayhello(w http.ResponseWriter, r *http.Request) { // \u63a5\u53e3\u8bf7\u6c42\u91cf\u9012\u589e MyCounter.Inc() fmt.Fprintf(w, \"Hello World!\") } main.go\uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { http.Handle(\"/metrics\", promhttp.Handler()) http.HandleFunc(\"/counter\",Sayhello) http.ListenAndServe(\":8080\", nil) } \u4e00\u5f00\u59cb\u542f\u52a8\u65f6\uff0c\u6307\u6807 counter \u662f 0\uff1a \u8c03\u7528\uff1a/counter \u63a5\u53e3\u540e\uff0c\u6307\u6807\u6570\u636e\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7b80\u5355\u5b9e\u73b0\u4e86\u63a5\u53e3\u8bf7\u6c42\u6570\u7684\u7edf\u8ba1\uff1a \u5bf9\u4e8e\u5176\u4ed6\u6307\u6807\u5b9a\u4e49\u65b9\u5f0f\u662f\u4e00\u6837\u7684\uff1a var ( MyCounter prometheus.Counter MyGauge prometheus.Gauge MyHistogram prometheus.Histogram MySummary prometheus.Summary ) // init \u6ce8\u518c\u6307\u6807 func init() { // 1.\u5b9a\u4e49\u6307\u6807\uff08\u7c7b\u578b\uff0c\u540d\u5b57\uff0c\u5e2e\u52a9\u4fe1\u606f\uff09 MyCounter = prometheus.NewCounter(prometheus.CounterOpts{ Name: \"my_counter_total\", Help: \"\u81ea\u5b9a\u4e49counter\", }) // \u5b9a\u4e49gauge\u7c7b\u578b\u6307\u6807 MyGauge = prometheus.NewGauge(prometheus.GaugeOpts{ Name: \"my_gauge_num\", Help: \"\u81ea\u5b9a\u4e49gauge\", }) // \u5b9a\u4e49histogram MyHistogram = prometheus.NewHistogram(prometheus.HistogramOpts{ Name: \"my_histogram_bucket\", Help: \"\u81ea\u5b9a\u4e49histogram\", Buckets: []float64{0.1,0.2,0.3,0.4,0.5}, // \u9700\u8981\u6307\u5b9a\u6876 }) // \u5b9a\u4e49Summary MySummary = prometheus.NewSummary(prometheus.SummaryOpts{ Name: \"my_summary_bucket\", Help: \"\u81ea\u5b9a\u4e49summary\", // \u8fd9\u90e8\u5206\u53ef\u4ee5\u7b97\u597d\u540e\u5728set Objectives: map[float64]float64{ 0.5: 0.05, 0.9: 0.01, 0.99: 0.001, }, }) // 2.\u6ce8\u518c\u6307\u6807 prometheus.MustRegister(MyCounter) prometheus.MustRegister(MyGauge) prometheus.MustRegister(MyHistogram) prometheus.MustRegister(MySummary) } \u4e0a\u9762\u7684\u6307\u6807\u90fd\u662f\u6ca1\u6709\u8bbe\u7f6e\u6807\u7b7e\u7684\uff0c\u6211\u4eec\u4e00\u822c\u7684\u6307\u6807\u90fd\u662f\u5e26\u6709\u6807\u7b7e\u7684\uff0c\u5982\u4f55\u8bbe\u7f6e\u6307\u6807\u7684\u6807\u7b7e\u5462\uff1f \u5982\u679c\u6211\u8981\u8bbe\u7f6e\u5e26\u6807\u7b7e\u7684 counter \u7c7b\u578b\u6307\u6807\uff0c\u53ea\u9700\u8981\u5c06\u539f\u6765\u7684 NewCounter \u65b9\u6cd5\u66ff\u6362\u4e3a NewCounterVec \u65b9\u6cd5\u5373\u53ef\uff0c\u5e76\u4e14\u4f20\u5165\u6807\u7b7e\u96c6\u5408\u3002 MyCounter *prometheus.CounterVec // 1.\u5b9a\u4e49\u6307\u6807\uff08\u7c7b\u578b\uff0c\u540d\u5b57\uff0c\u5e2e\u52a9\u4fe1\u606f\uff09 MyCounter = prometheus.NewCounterVec( prometheus.CounterOpts{ Name: \"my_counter_total\", Help: \"\u81ea\u5b9a\u4e49counter\", }, // \u6807\u7b7e\u96c6\u5408 []string{\"label1\",\"label2\"}, ) // \u5e26\u6807\u7b7e\u7684set\u6307\u6807\u503c MyCounter.With(prometheus.Labels{\"label1\":\"1\",\"label2\":\"2\"}).Inc()","title":"4-3 \u6307\u6807\u5bfc\u51fa"},{"location":"chap1/1prometheus2022/#5-promql","text":"\u521a\u521a\u63d0\u5230\u4e86 Prometheus \u4e2d\u6307\u6807\u6709\u54ea\u4e9b\u7c7b\u578b\u4ee5\u53ca\u5982\u4f55\u5bfc\u51fa\u6211\u4eec\u7684\u6307\u6807\uff0c\u73b0\u5728\u6307\u6807\u5bfc\u51fa\u5230 Prometheus \u4e86\uff0c\u5229\u7528\u5176\u63d0\u4f9b\u7684 PromQL \u53ef\u4ee5\u67e5\u8be2\u6211\u4eec\u5bfc\u51fa\u7684\u6307\u6807\u3002 PromQL \u662f Prometheus \u4e3a\u6211\u4eec\u63d0\u4f9b\u7684\u51fd\u6570\u5f0f\u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u67e5\u8be2\u8868\u8fbe\u5f0f\u6709\u56db\u79cd\u7c7b\u578b\uff1a \u5b57\u7b26\u4e32\uff1a\u53ea\u4f5c\u4e3a\u67d0\u4e9b\u5185\u7f6e\u51fd\u6570\u7684\u53c2\u6570\u51fa\u73b0 \u6807\u91cf\uff1a\u5355\u4e00\u7684\u6570\u5b57\u503c\uff0c\u53ef\u4ee5\u662f\u51fd\u6570\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u51fd\u6570\u7684\u8fd4\u56de\u7ed3\u679c \u77ac\u65f6\u5411\u91cf\uff1a\u67d0\u4e00\u65f6\u523b\u7684\u65f6\u5e8f\u6570\u636e \u533a\u95f4\u5411\u91cf\uff1a\u67d0\u4e00\u65f6\u95f4\u533a\u95f4\u5185\u7684\u65f6\u5e8f\u6570\u636e\u96c6\u5408","title":"5 PromQL"},{"location":"chap1/1prometheus2022/#5-1","text":"\u76f4\u63a5\u901a\u8fc7\u6307\u6807\u540d\u5373\u53ef\u8fdb\u884c\u67e5\u8be2\uff0c\u67e5\u8be2\u7ed3\u679c\u662f\u5f53\u524d\u6307\u6807\u6700\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u6bd4\u5982\u67e5\u8be2 Gc \u7d2f\u79ef\u6d88\u8017\u7684\u65f6\u95f4\uff1a go_gc_duration_seconds_count \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u67e5\u8be2\u51fa\u6765\u6709\u591a\u4e2a\u540c\u540d\u6307\u6807\u7ed3\u679c\uff0c\u53ef\u4ee5\u7528 {} \u505a\u6807\u7b7e\u8fc7\u6ee4\u67e5\u8be2\uff1a\u6bd4\u5982\u6211\u4eec\u60f3\u67e5\u6307\u5b9a\u5b9e\u4f8b\u7684\u6307\u6807 \u3002 go_gc_duration_seconds_count{instance=\"127.0.0.1:9600\"} \u800c\u4e14\u4e5f\u652f\u6301\u5219\u8868\u8fbe\u5f0f\uff0c\u901a\u8fc7 =~ \u6307\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\u67e5\u8be2\u6240\u6709 instance \u662f localhost \u5f00\u5934\u7684\u6307\u6807\u3002 go_gc_duration_seconds_count{instance=~\"localhost.*\"}","title":"5-1 \u77ac\u65f6\u67e5\u8be2"},{"location":"chap1/1prometheus2022/#5-2","text":"\u8303\u56f4\u67e5\u8be2\u7684\u7ed3\u679c\u96c6\u5c31\u662f\u533a\u95f4\u5411\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7 [] \u6307\u5b9a\u65f6\u95f4\u6765\u505a\u8303\u56f4\u67e5\u8be2 \uff0c\u67e5\u8be2 5 \u5206\u949f\u5185\u7684 Gc \u7d2f\u79ef\u6d88\u8017\u65f6\u95f4\uff1a go_gc_duration_seconds_count{}[5m] \u6ce8\u610f\uff1a\u8fd9\u91cc\u8303\u56f4\u67e5\u8be2\u7b2c\u4e00\u4e2a\u70b9\u5e76\u4e0d\u4e00\u5b9a\u7cbe\u786e\u5230\u521a\u521a\u597d 5 \u5206\u949f\u524d\u7684\u90a3\u4e2a\u65f6\u5e8f\u6837\u672c\u70b9\uff0c\u4ed6\u662f\u4ee5 5 \u5206\u949f\u4f5c\u4e3a\u4e00\u4e2a\u533a\u95f4\uff0c\u5bfb\u627e\u8fd9\u4e2a\u533a\u95f4\u7684\u7b2c\u4e00\u4e2a\u70b9\u5230\u6700\u540e\u4e00\u4e2a\u6837\u672c\u70b9\u3002 \u65f6\u95f4\u5355\u4f4d\uff1a d\uff1a\u5929\uff0ch\uff1a\u5c0f\u65f6\uff0cm\uff1a\u5206\u949f\uff0cms\uff1a\u6beb\u79d2\uff0cs\uff1a\u79d2\uff0cw\uff1a\u5468\uff0cy\uff1a\u5e74 \u540c\u6837\u652f\u6301\u7c7b\u4f3c SQL \u4e2d\u7684 offset \u67e5\u8be2\uff0c\u5982\u4e0b\uff1a\u67e5\u8be2\u4e00\u5929\u524d\u5f53\u524d 5 \u5206\u949f\u524d\u7684\u65f6\u5e8f\u6570\u636e\u96c6\uff1a go_gc_duration_seconds_count{}[5m] offset 1d","title":"5-2 \u8303\u56f4\u67e5\u8be2"},{"location":"chap1/1prometheus2022/#5-3","text":"Prometheus \u5185\u7f6e\u4e86\u5f88\u591a\u51fd\u6570\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bb0\u5f55\u4e0b\u5e38\u7528\u7684\u51e0\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\uff1a rate \u548c irate \u51fd\u6570 rate \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u6c42\u6307\u6807\u7684\u5e73\u5747\u53d8\u5316\u901f\u7387\uff1a rate\u51fd\u6570=\u65f6\u95f4\u533a\u95f4\u524d\u540e\u4e24\u4e2a\u70b9\u7684\u5dee / \u65f6\u95f4\u8303\u56f4 \u3002 \u4e00\u822c rate \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u6c42\u67d0\u4e2a\u65f6\u95f4\u533a\u95f4\u5185\u7684\u8bf7\u6c42\u901f\u7387\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684 QPS\uff1a \u4f46\u662f rate \u51fd\u6570\u53ea\u662f\u7b97\u51fa\u6765\u4e86\u67d0\u4e2a\u65f6\u95f4\u533a\u95f4\u5185\u7684\u5e73\u5747\u901f\u7387\uff0c\u6ca1\u529e\u6cd5\u53cd\u6620\u7a81\u53d1\u53d8\u5316\uff0c\u5047\u8bbe\u5728\u4e00\u5206\u949f\u7684\u65f6\u95f4\u533a\u95f4\u91cc\uff0c\u524d 50 \u79d2\u7684\u8bf7\u6c42\u91cf\u90fd\u662f 0 \u5230 10 \u5de6\u53f3\uff0c\u4f46\u662f\u6700\u540e 10 \u79d2\u7684\u8bf7\u6c42\u91cf\u66b4\u589e\u5230 100 \u4ee5\u4e0a\uff0c\u8fd9\u65f6\u5019\u7b97\u51fa\u6765\u7684\u503c\u53ef\u80fd\u65e0\u6cd5\u5f88\u597d\u7684\u53cd\u6620\u8fd9\u4e2a\u5cf0\u503c\u53d8\u5316 \u3002 \u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7 irate \u51fd\u6570\u89e3\u51b3\uff0cirate \u51fd\u6570\u6c42\u51fa\u6765\u7684\u5c31\u662f\u77ac\u65f6\u53d8\u5316\u7387\u3002 \u65f6\u95f4\u533a\u95f4\u5185\u6700\u540e\u4e24\u4e2a\u6837\u672c\u70b9\u7684\u5dee / \u6700\u540e\u4e24\u4e2a\u6837\u672c\u70b9\u7684\u65f6\u95f4\u5dee\u3002 \u53ef\u4ee5\u901a\u8fc7\u56fe\u50cf\u770b\u4e0b\u4e24\u8005\u7684\u533a\u522b\uff1a irate \u51fd\u6570\u7684\u56fe\u50cf\u5cf0\u503c\u53d8\u5316\u5927\uff0crate \u51fd\u6570\u53d8\u5316\u8f83\u4e3a\u5e73\u7f13\u3002 rate \u51fd\u6570\uff1a irate \u51fd\u6570\uff1a \u805a\u5408\u51fd\u6570\uff1a Sum() by() without() \u4e5f\u662f\u4e0a\u8fb9\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5728\u6c42\u6307\u5b9a\u63a5\u53e3\u7684 QPS \u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u4e2a\u5b9e\u4f8b\u7684 QPS \u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u5982\u4e0b\u662f\u5b58\u5728\u591a\u4e2a\u63a5\u53e3\uff0c\u4e09\u4e2a\u670d\u52a1\u7684 QPS\u3002 rate(demo_api_request_duration_seconds_count{job=\"demo\", method=\"GET\", status=\"200\"}[5m]) \u5229\u7528 Sum \u51fd\u6570\u53ef\u4ee5\u5c06\u4e09\u4e2a QPS \u805a\u5408\uff0c\u5373\u53ef\u5f97\u5230\u6574\u4e2a\u670d\u52a1\u8be5\u63a5\u53e3\u7684 QPS\uff1a \u5176\u5b9e Sum \u5c31\u662f\u5c06\u6307\u6807\u503c\u505a\u76f8\u52a0 \u3002 \u4f46\u662f\u8fd9\u6837\u76f4\u63a5\u7684\u76f8\u52a0\u592a\u7b3c\u7edf\u62bd\u8c61\u4e86\uff0c\u53ef\u4ee5\u914d\u5408 by \u548c without \u51fd\u6570\u5728 sum \u7684\u65f6\u5019\uff0c\u57fa\u4e8e\u67d0\u4e9b\u6807\u7b7e\u5206\u7ec4\uff0c\u7c7b\u4f3c SQL \u4e2d\u7684 group by\u3002 \u4f8b\u5982\uff0c\u6211\u53ef\u4ee5\u6839\u636e\u8bf7\u6c42\u63a5\u53e3\u6807\u7b7e\u5206\u7ec4\uff1a\u8fd9\u6837\u62ff\u5230\u7684\u5c31\u662f\u5177\u4f53\u63a5\u53e3\u7684 QPS\uff1a sum(rate(demo_api_request_duration_seconds_count{job=\"demo\", method=\"GET\", status=\"200\"}[5m])) by(path) \u4e5f\u53ef\u4ee5\u4e0d\u6839\u636e\u63a5\u53e3\u8def\u5f84\u5206\u7ec4\uff1a\u901a\u8fc7 without \u6307\u5b9a \uff1a sum(rate(demo_api_request_duration_seconds_count{job=\"demo\", method=\"GET\", status=\"200\"}[5m])) without(path) \u53ef\u4ee5\u901a\u8fc7 histogram_quantile \u51fd\u6570\u505a\u6570\u636e\u7edf\u8ba1\uff1a \u53ef\u4ee5\u7528\u6765\u7edf\u8ba1\u767e\u5206\u4f4d\u6570\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u767e\u5206\u4f4d\uff0c\u7b2c\u4e8c\u4e2a histogram \u6307\u6807\uff0c\u8fd9\u6837\u8ba1\u7b97\u51fa\u6765\u7684\u5c31\u662f\u4e2d\u4f4d\u6570\uff0c\u5373 P50 \u3002 \u5728\u521a\u521a\u5199\u7684\u81ea\u5b9a\u4e49 exporter \u4e0a\u65b0\u589e\u51e0\u4e2a histogram \u7684\u6837\u672c\u70b9\uff1a MyHistogram.Observe(0.3) MyHistogram.Observe(0.4) MyHistogram.Observe(0.5) \u81ea\u5b9a\u4e49\u6876\uff1a // \u5b9a\u4e49histogram MyHistogram = prometheus.NewHistogram(prometheus.HistogramOpts{ Name: \"my_histogram_bucket\", Help: \"\u81ea\u5b9a\u4e49histogram\", Buckets: []float64{0.1,0.2,0.3,0.4,0.5}, // \u9700\u8981\u6307\u5b9a\u6876 }) \u4e0a\u62a5\u6570\u636e\uff1a MyHistogram.Observe(0.1) MyHistogram.Observe(0.3) MyHistogram.Observe(0.4) \u91cd\u65b0\u8ba1\u7b97 P50\uff0cP99\uff1a histogram_quantile(0.5,my_histogram_bucket_bucket) histogram_quantile(0.99,my_histogram_bucket_bucket) \u6876\u8bbe\u7f6e\u7684\u8d8a\u5408\u7406\uff0c\u8ba1\u7b97\u7684\u8bef\u5dee\u8d8a\u5c0f\u3002","title":"5-3 \u5185\u7f6e\u51fd\u6570"},{"location":"chap1/1prometheus2022/#6-grafana","text":"\u9664\u4e86\u53ef\u4ee5\u5229\u7528 Prometheus \u63d0\u4f9b\u7684 webUI \u53ef\u89c6\u5316\u6211\u4eec\u7684\u6307\u6807\u5916\uff0c\u8fd8\u53ef\u4ee5\u63a5\u5165 Grafana \u6765\u505a\u6307\u6807\u7684\u53ef\u89c6\u5316\u3002 \u7b2c\u4e00\u6b65\uff0c\u5bf9\u63a5\u6570\u636e\u6e90\uff1a \u914d\u7f6e\u597d prometheus \u7684\u5730\u5740 \u7b2c\u4e8c\u6b65\uff0c\u521b\u5efa\u4eea\u8868\u76d8\uff1a \u7f16\u8f91\u4eea\u8868\u76d8 \u5728 Metrics \u5904\u7f16\u5199 PromQL \u5373\u53ef\u5b8c\u6210\u67e5\u8be2\u548c\u53ef\u89c6\u5316 \u4eea\u8868\u76d8\u7f16\u8f91\u5b8c\u540e\uff0c\u53ef\u4ee5\u5bfc\u51fa\u5bf9\u5e94\u7684 json \u6587\u4ef6\uff0c\u65b9\u4fbf\u4e0b\u6b21\u5bfc\u5165\u540c\u6837\u7684\u4eea\u8868\u76d8\uff1a","title":"6 Grafana \u53ef\u89c6\u5316"},{"location":"chap1/1prometheus2022/#7","text":"AlertManager \u662f Prometheus \u63d0\u4f9b\u7684\u544a\u8b66\u4fe1\u606f\u4e0b\u53d1\u7ec4\u4ef6\uff0c\u5305\u542b\u4e86\u5bf9\u544a\u8b66\u4fe1\u606f\u7684\u5206\u7ec4\uff0c\u4e0b\u53d1\uff0c\u9759\u9ed8\u7b49\u7b56\u7565\u3002\u914d\u7f6e\u5b8c\u6210\u540e\u53ef\u4ee5\u5728 WebUI \u4e0a\u770b\u5230\u5bf9\u5e94\u7684\u544a\u8b66\u7b56\u7565\u4fe1\u606f\u3002\u544a\u8b66\u89c4\u5219\u4e5f\u662f\u57fa\u4e8e PromQL \u8fdb\u884c\u5b9a\u5236\u7684\u3002 \u7f16\u5199\u544a\u8b66\u914d\u7f6e\uff1a \u5f53 Http_srv \u8fd9\u4e2a\u670d\u52a1\u6302\u4e86\uff0cPrometheus \u91c7\u96c6\u4e0d\u5230\u6307\u6807\uff0c\u5e76\u4e14\u6301\u7eed\u65f6\u95f4 1 \u5206\u949f\uff0c\u5c31\u4f1a\u89e6\u53d1\u544a\u8b66 \u3002 groups: \\- name: simulator-alert-rule rules: \\- alert: HttpSimulatorDown expr: sum(up{job=\"http_srv\"}) == 0 for: 1m labels: severity: critical \u5728 prometheus.yml \u4e2d\u914d\u7f6e\u544a\u8b66\u914d\u7f6e\u6587\u4ef6\uff0c\u9700\u8981\u914d\u7f6e\u4e0a Alertmanager \u7684\u5730\u5740\u548c\u544a\u8b66\u6587\u4ef6\u7684\u5730\u5740\u3002 \\# Alertmanager configuration alerting: alertmanagers: \\- static_configs: \\- targets: ['localhost:9093'] \\# Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files: \\- \"alert_rules.yml\" \\#- \"first_rules.yml\" \u914d\u7f6e\u544a\u8b66\u4fe1\u606f\uff0c\u4f8b\u5982\u544a\u8b66\u53d1\u9001\u5730\u5740\uff0c\u544a\u8b66\u5185\u5bb9\u6a21\u7248\uff0c\u5206\u7ec4\u7b56\u7565\u7b49\u90fd\u5728 Alertmanager \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\uff1a global: smtp_smarthost: 'smtp.qq.com:465' smtp_from: 'xxxx@qq.com' smtp_auth_username: 'xxxx@qq.com' smtp_auth_password: 'xxxx' smtp_require_tls: false route: group_interval: 1m repeat_interval: 1m receiver: 'mail-receiver' # group_by //\u91c7\u7528\u54ea\u4e2a\u6807\u7b7e\u4f5c\u4e3a\u5206\u7ec4 # group_wait //\u5206\u7ec4\u7b49\u5f85\u7684\u65f6\u95f4\uff0c\u6536\u5230\u62a5\u8b66\u4e0d\u662f\u7acb\u9a6c\u53d1\u9001\u51fa\u53bb\uff0c\u800c\u662f\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u770b\u770b\u540c\u4e00\u7ec4\u4e2d\u662f\u5426\u6709\u5176\u4ed6\u62a5\u8b66\uff0c\u5982\u679c\u6709\u4e00\u5e76\u53d1\u9001 # group_interval //\u544a\u8b66\u65f6\u95f4\u95f4\u9694 # repeat_interval //\u91cd\u590d\u544a\u8b66\u65f6\u95f4\u95f4\u9694\uff0c\u53ef\u4ee5\u51cf\u5c11\u53d1\u9001\u544a\u8b66\u7684\u9891\u7387 # receiver //\u63a5\u6536\u8005\u662f\u8c01 # routes //\u5b50\u8def\u7531\u914d\u7f6e receivers: \\- name: 'mail-receiver' email_configs: \\- to: 'xxxx@qq.com' \u5f53\u6211 kill \u8fdb\u7a0b\uff1a Prometheus \u5df2\u7ecf\u89e6\u53d1\u544a\u8b66\uff1a \u5728\u7b49\u5f85 1 \u5206\u949f\uff0c\u5982\u679c\u6301\u7eed\u8fd8\u662f\u7b26\u5408\u544a\u8b66\u7b56\u7565\uff0c\u5219\u72b6\u6001\u4e3a\u4ece pending \u53d8\u4e3a FIRING \u4f1a\u53d1\u9001\u90ae\u4ef6\u5230\u6211\u7684\u90ae\u7bb1\u3002 \u6b64\u65f6\u6211\u7684\u90ae\u7bb1\u6536\u5230\u4e86\u4e00\u6761\u544a\u8b66\u6d88\u606f\uff1a Alertmanager \u4e5f\u652f\u6301\u5bf9\u544a\u8b66\u8fdb\u884c\u9759\u9ed8\uff0c\u5728 Alertmanager \u7684 WebUI \u4e2d\u914d\u7f6e\u5373\u53ef\uff1a \u95f4\u9694\u4e86 4 \u5206\u949f\uff0c\u6ca1\u6709\u6536\u5230\u544a\u8b66\uff0c\u9759\u9ed8\u751f\u6548\uff1a \u4e00\u4e2a\u5c0f\u65f6\u6ca1\u6709\u6536\u5230\u544a\u8b66\u4fe1\u606f\uff1a","title":"7 \u76d1\u63a7\u544a\u8b66"},{"location":"chap1/20Install_metrics_server_SAP_CC/","text":"\u7b2c\u4e94\u8282 Install Kubernetes Metrics Server on SAP Converged Cloud 1 Project Introduction 1 Bcakground 1: Sap Converged Cloud SAP Converged Cloud : From Playground to Production on one Infrastructure-as-a-Service (IaaS), powered by Kubernetes, OpenStack, SAP HANA and Monsoon Automation 2 Bcakground 2: Why Metrics servers not heaspter RETIRED : Heapster is now retired. . We will not be making changes to Heapster. The following are potential migration paths for Heapster functionality: For basic CPU/memory HPA metrics: Use metrics-server. For general monitoring : Consider a third-party monitoring pipeline that can gather Prometheus-formatted metrics. The kubelet exposes all the metrics exported by Heapster in Prometheus format. 3 Prvious: Install Tiller Server for the cluster Check which cluster to install tiller server $ kubectl config current-context jam initialize Helm on both client and server Helm 2 $ helm init $HELM_HOME has been configured at /Users/.../.helm. Tiller (the Helm server-side component) has been installed into your Kubernetes Cluster. Please note: by default, Tiller is deployed with an insecure 'allow unauthenticated users' policy. To prevent this, run `helm init` with the --tiller-tls-verify flag. $ kubectl get pods --all-namespaces NAMESPACE NAME READY STATUS RESTARTS AGE kube-system tiller-deploy-595f59d579-nszzh 1/1 Running 0 35s 2 Install Metrics Server by helm 2-1\" fetch\"metrics server package helm fetch: download a chart to your local directory to view $ helm fetch stable/metrics-server $ tar -xvf metrics-server-2.8.2.tgz x metrics-server/Chart.yaml x metrics-server/values.yaml x metrics-server/templates/NOTES.txt x metrics-server/templates/_helpers.tpl x metrics-server/templates/aggregated-metrics-reader-cluster-role.yaml x metrics-server/templates/auth-delegator-crb.yaml x metrics-server/templates/cluster-role.yaml x metrics-server/templates/metric-server-service.yaml x metrics-server/templates/metrics-api-service.yaml x metrics-server/templates/metrics-server-crb.yaml x metrics-server/templates/metrics-server-deployment.yaml x metrics-server/templates/metrics-server-serviceaccount.yaml x metrics-server/templates/pdb.yaml x metrics-server/templates/psp.yaml x metrics-server/templates/role-binding.yaml x metrics-server/templates/tests/test-version.yaml x metrics-server/.helmignore x metrics-server/README.md x metrics-server/ci/ci-values.yaml $ helm install ./metrics-server --namespace kube-system --name metric --namespace : special namespaces --name : special release name $ helm install ./metrics-server --namespace kube-system Error: no available release name found $ helm install ./metrics-server --namespace kube-system --name metric Error: release metric failed: namespaces \"kube-system\" is forbidden: User \"system:serviceaccount:kube-system:default\" cannot get namespaces in the namespace \"kube-system\" 2-2 Looks like we have Service-account forbidden Problem So create tiller SA accound and role $ kubectl create serviceaccount --namespace kube-system tiller serviceaccount/tiller created $ kubectl get sa --all-namespaces NAMESPACE NAME SECRETS AGE kube-system tiller 1 28s $ kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller clusterrolebinding.rbac.authorization.k8s.io/tiller-cluster-rule created $ kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller clusterrolebinding.rbac.authorization.k8s.io/tiller-cluster-rule created $ kubectl patch deploy --namespace kube-system tiller-deploy -p '{\"spec\":{\"template\":{\"spec\":{\"serviceAccount\":\"tiller\"}}}}' deployment.extensions/tiller-deploy patched 2-3 Install The metrics server $ helm install ./metrics-server --namespace kube-system --name metric NAME: metric LAST DEPLOYED: Fri Jul 19 17:25:29 2019 NAMESPACE: kube-system STATUS: DEPLOYED RESOURCES: ==> v1/ClusterRole NAME AGE system:metric-metrics-server 2s system:metrics-server-aggregated-reader 2s ==> v1/ClusterRoleBinding NAME AGE metric-metrics-server:system:auth-delegator 2s system:metric-metrics-server 2s ==> v1/Deployment NAME READY UP-TO-DATE AVAILABLE AGE metric-metrics-server 0/1 1 0 2s ==> v1/Pod(related) NAME READY STATUS RESTARTS AGE metric-metrics-server-77df84fbdd-5bb9c 0/1 ContainerCreating 0 2s ==> v1/Service NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE metric-metrics-server ClusterIP 198.18.216.71 <none> 443/TCP 2s ==> v1/ServiceAccount NAME SECRETS AGE metric-metrics-server 1 2s ==> v1beta1/APIService NAME AGE v1beta1.metrics.k8s.io 2s ==> v1beta1/RoleBinding NAME AGE metric-metrics-server-auth-reader 2s NOTES: The metric server has been deployed. In a few minutes you should be able to list metrics using the following command: kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\" $ kubectl get pods -n kube-system` NAME READY STATUS RESTARTS AGE tiller-deploy-c5c655fc5-zldr4 1/1 Running 0 1m metric-metrics-server-77df84fbdd-5bb9c 0/1 Running 0 30s 3 Fix problem Looks we have unable to fetch metrics from Kubelet problem here $ kubectl logs -f metric-metrics-server-77df84fbdd-5bb9c -n kube-system I0719 09:25:33.716791 1 serving.go:273] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key) [restful] 2019/07/19 09:25:34 log.go:33: [restful/swagger] listing is available at https://:8443/swaggerapi [restful] 2019/07/19 09:25:34 log.go:33: [restful/swagger] https://:8443/swaggerui/ is mapped to folder /swagger-ui/ I0719 09:25:34.884929 1 serve.go:96] Serving securely on [::]:8443 E0719 09:26:34.898366 1 manager.go:111] unable to fully collect metrics: [unable to fully scrape metrics from source kubelet_summary:jam-m2xlarge-fphgs: unable to fetch metrics from Kubelet jam-m2xlarge-fphgs (jam-m2xlarge-fphgs.novalocal): Get https://jam-m2xlarge-fphgs.novalocal:10250/stats/summary/: dial tcp: lookup jam-m2xlarge-fphgs.novalocal on 198.18.128.2:53: no such host, unable to fully scrape metrics from source kubelet_summary:jam-m2xlarge-6zqkq: unable to fetch metrics from Kubelet jam-m2xlarge-6zqkq (jam-m2xlarge-6zqkq.novalocal): Get https://jam-m2xlarge-6zqkq.novalocal:10250/stats/summary/: dial tcp: lookup jam-m2xlarge-6zqkq.novalocal on 198.18.128.2:53: no such host, unable to fully scrape metrics from source kubelet_summary:jam-m2xlarge-sxrj8: unable to fetch metrics from Kubelet jam-m2xlarge-sxrj8 (jam-m2xlarge-sxrj8.novalocal): Get https://jam-m2xlarge-sxrj8.novalocal:10250/stats/summary/: dial tcp: lookup jam-m2xlarge-sxrj8.novalocal on 198.18.128.2:53: no such host] [restful] 2019/07/19 09:28:30 log.go:33: [restful/swagger] listing is available at https://:8443/swaggerapi [restful] 2019/07/19 09:28:30 log.go:33: [restful/swagger] https://:8443/swaggerui/ is mapped to folder /swagger-ui/ I0719 09:28:30.854420 1 serve.go:96] Serving securely on [::]:8443 E0719 09:28:56.628369 1 reststorage.go:129] unable to fetch node metrics for node \"jam-m2xlarge-6zqkq\": no metrics known for node E0719 09:28:56.628399 1 reststorage.go:129] unable to fetch node metrics for node \"jam-m2xlarge-fphgs\": no metrics known for node E0719 09:28:56.628404 1 reststorage.go:129] unable to fetch node metrics for node \"jam-m2xlarge-sxrj8\": no metrics known for node \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 Pod \u4e2d\u51fa\u73b0\u4e86\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f\uff1a xxx: no such host \uff0c \u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u9519\u8bef\u4fe1\u606f\u4e00\u822c\u5c31\u53ef\u4ee5\u786e\u5b9a\u662f DNS \u89e3\u6790\u4e0d\u4e86\u9020\u6210\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 metrics-server \u4f1a\u901a\u8fc7 kubelet \u7684 10250 \u7aef\u53e3\u83b7\u53d6\u4fe1\u606f\uff0c\u4f7f\u7528\u7684\u662f hostname \uff0c \u6211\u4eec\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\u5728\u8282\u70b9\u7684 /etc/hosts \u91cc\u9762\u6dfb\u52a0\u4e86\u8282\u70b9\u7684 hostname \u548c ip \u7684\u6620\u5c04\uff0c\u4f46\u662f\u662f\u6211\u4eec\u7684 metrics-server \u7684 Pod \u5185\u90e8\u5e76\u6ca1\u6709\u8fd9\u4e2a hosts \u4fe1\u606f\uff0c\u5f53\u7136\u4e5f\u5c31\u4e0d\u8bc6\u522b hostname \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u7b2c\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728\u96c6\u7fa4\u5185\u90e8\u7684 DNS \u670d\u52a1\u91cc\u9762\u6dfb\u52a0\u4e0a hostname \u7684\u89e3\u6790 \u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728 metrics-server \u7684\u542f\u52a8\u53c2\u6570\u4e2d\u4fee\u6539 kubelet-preferred-address-types \u53c2\u6570 \u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a --kubelet-insecure-tls \u53c2\u6570\u8df3\u8fc7\u8bc1\u4e66\u6821\u9a8c 3-1 Edit metric-server deployment to add the flags $ kubectl edit deployment metric-metrics-server -n kube-system deployment.extensions/metric-metrics-server edited 8 spaces args: - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname Please use 4 spaces to replace one tap, otherwise you may encounter unident problem $ kubectl get pods --all-namespaces NAMESPACE NAME READY STATUS RESTARTS AGE kube-system metric-metrics-server-77df84fbdd-5bb9c 0/1 Terminating 9 26m kube-system metric-metrics-server-78996fbfbf-plcww 1/1 Running 0 1m $ kubectl top nodes NAME CPU(cores) CPU% MEMORY(bytes) MEMORY% jam-m2xlarge-6zqkq 39m 0% 948Mi 5% jam-m2xlarge-fphgs 62m 0% 825Mi 5% jam-m2xlarge-sxrj8 47m 0% 613Mi 3% Now it works fine","title":"\u7b2c\u4e94\u8282 Install Kubernetes Metrics Server on SAP Converged Cloud"},{"location":"chap1/20Install_metrics_server_SAP_CC/#install-kubernetes-metrics-server-on-sap-converged-cloud","text":"","title":"\u7b2c\u4e94\u8282 Install Kubernetes Metrics Server on SAP Converged Cloud"},{"location":"chap1/20Install_metrics_server_SAP_CC/#1-project-introduction","text":"","title":"1 Project Introduction"},{"location":"chap1/20Install_metrics_server_SAP_CC/#1-bcakground-1-sap-converged-cloud","text":"SAP Converged Cloud : From Playground to Production on one Infrastructure-as-a-Service (IaaS), powered by Kubernetes, OpenStack, SAP HANA and Monsoon Automation","title":"1 Bcakground 1: Sap Converged Cloud"},{"location":"chap1/20Install_metrics_server_SAP_CC/#2-bcakground-2-why-metrics-servers-not-heaspter","text":"RETIRED : Heapster is now retired. . We will not be making changes to Heapster. The following are potential migration paths for Heapster functionality: For basic CPU/memory HPA metrics: Use metrics-server. For general monitoring : Consider a third-party monitoring pipeline that can gather Prometheus-formatted metrics. The kubelet exposes all the metrics exported by Heapster in Prometheus format.","title":"2 Bcakground 2: Why Metrics servers not heaspter"},{"location":"chap1/20Install_metrics_server_SAP_CC/#3-prvious-install-tiller-server-for-the-cluster","text":"Check which cluster to install tiller server $ kubectl config current-context jam","title":"3 Prvious: Install Tiller Server for the cluster"},{"location":"chap1/20Install_metrics_server_SAP_CC/#initialize-helm-on-both-client-and-server","text":"Helm 2 $ helm init $HELM_HOME has been configured at /Users/.../.helm. Tiller (the Helm server-side component) has been installed into your Kubernetes Cluster. Please note: by default, Tiller is deployed with an insecure 'allow unauthenticated users' policy. To prevent this, run `helm init` with the --tiller-tls-verify flag. $ kubectl get pods --all-namespaces NAMESPACE NAME READY STATUS RESTARTS AGE kube-system tiller-deploy-595f59d579-nszzh 1/1 Running 0 35s","title":"initialize Helm on both client and server"},{"location":"chap1/20Install_metrics_server_SAP_CC/#2-install-metrics-server-by-helm","text":"","title":"2 Install Metrics Server by helm"},{"location":"chap1/20Install_metrics_server_SAP_CC/#2-1-fetchmetrics-server-package","text":"helm fetch: download a chart to your local directory to view $ helm fetch stable/metrics-server $ tar -xvf metrics-server-2.8.2.tgz x metrics-server/Chart.yaml x metrics-server/values.yaml x metrics-server/templates/NOTES.txt x metrics-server/templates/_helpers.tpl x metrics-server/templates/aggregated-metrics-reader-cluster-role.yaml x metrics-server/templates/auth-delegator-crb.yaml x metrics-server/templates/cluster-role.yaml x metrics-server/templates/metric-server-service.yaml x metrics-server/templates/metrics-api-service.yaml x metrics-server/templates/metrics-server-crb.yaml x metrics-server/templates/metrics-server-deployment.yaml x metrics-server/templates/metrics-server-serviceaccount.yaml x metrics-server/templates/pdb.yaml x metrics-server/templates/psp.yaml x metrics-server/templates/role-binding.yaml x metrics-server/templates/tests/test-version.yaml x metrics-server/.helmignore x metrics-server/README.md x metrics-server/ci/ci-values.yaml $ helm install ./metrics-server --namespace kube-system --name metric --namespace : special namespaces --name : special release name $ helm install ./metrics-server --namespace kube-system Error: no available release name found $ helm install ./metrics-server --namespace kube-system --name metric Error: release metric failed: namespaces \"kube-system\" is forbidden: User \"system:serviceaccount:kube-system:default\" cannot get namespaces in the namespace \"kube-system\"","title":"2-1\" fetch\"metrics server package"},{"location":"chap1/20Install_metrics_server_SAP_CC/#2-2-looks-like-we-have-service-account-forbidden-problem","text":"","title":"2-2 Looks like we have Service-account forbidden Problem"},{"location":"chap1/20Install_metrics_server_SAP_CC/#so-create-tiller-sa-accound-and-role","text":"$ kubectl create serviceaccount --namespace kube-system tiller serviceaccount/tiller created $ kubectl get sa --all-namespaces NAMESPACE NAME SECRETS AGE kube-system tiller 1 28s $ kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller clusterrolebinding.rbac.authorization.k8s.io/tiller-cluster-rule created $ kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller clusterrolebinding.rbac.authorization.k8s.io/tiller-cluster-rule created $ kubectl patch deploy --namespace kube-system tiller-deploy -p '{\"spec\":{\"template\":{\"spec\":{\"serviceAccount\":\"tiller\"}}}}' deployment.extensions/tiller-deploy patched","title":"So create tiller SA accound and role"},{"location":"chap1/20Install_metrics_server_SAP_CC/#2-3-install-the-metrics-server","text":"$ helm install ./metrics-server --namespace kube-system --name metric NAME: metric LAST DEPLOYED: Fri Jul 19 17:25:29 2019 NAMESPACE: kube-system STATUS: DEPLOYED RESOURCES: ==> v1/ClusterRole NAME AGE system:metric-metrics-server 2s system:metrics-server-aggregated-reader 2s ==> v1/ClusterRoleBinding NAME AGE metric-metrics-server:system:auth-delegator 2s system:metric-metrics-server 2s ==> v1/Deployment NAME READY UP-TO-DATE AVAILABLE AGE metric-metrics-server 0/1 1 0 2s ==> v1/Pod(related) NAME READY STATUS RESTARTS AGE metric-metrics-server-77df84fbdd-5bb9c 0/1 ContainerCreating 0 2s ==> v1/Service NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE metric-metrics-server ClusterIP 198.18.216.71 <none> 443/TCP 2s ==> v1/ServiceAccount NAME SECRETS AGE metric-metrics-server 1 2s ==> v1beta1/APIService NAME AGE v1beta1.metrics.k8s.io 2s ==> v1beta1/RoleBinding NAME AGE metric-metrics-server-auth-reader 2s NOTES: The metric server has been deployed. In a few minutes you should be able to list metrics using the following command: kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\" $ kubectl get pods -n kube-system` NAME READY STATUS RESTARTS AGE tiller-deploy-c5c655fc5-zldr4 1/1 Running 0 1m metric-metrics-server-77df84fbdd-5bb9c 0/1 Running 0 30s","title":"2-3 Install The metrics server"},{"location":"chap1/20Install_metrics_server_SAP_CC/#3-fix-problem","text":"Looks we have unable to fetch metrics from Kubelet problem here $ kubectl logs -f metric-metrics-server-77df84fbdd-5bb9c -n kube-system I0719 09:25:33.716791 1 serving.go:273] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key) [restful] 2019/07/19 09:25:34 log.go:33: [restful/swagger] listing is available at https://:8443/swaggerapi [restful] 2019/07/19 09:25:34 log.go:33: [restful/swagger] https://:8443/swaggerui/ is mapped to folder /swagger-ui/ I0719 09:25:34.884929 1 serve.go:96] Serving securely on [::]:8443 E0719 09:26:34.898366 1 manager.go:111] unable to fully collect metrics: [unable to fully scrape metrics from source kubelet_summary:jam-m2xlarge-fphgs: unable to fetch metrics from Kubelet jam-m2xlarge-fphgs (jam-m2xlarge-fphgs.novalocal): Get https://jam-m2xlarge-fphgs.novalocal:10250/stats/summary/: dial tcp: lookup jam-m2xlarge-fphgs.novalocal on 198.18.128.2:53: no such host, unable to fully scrape metrics from source kubelet_summary:jam-m2xlarge-6zqkq: unable to fetch metrics from Kubelet jam-m2xlarge-6zqkq (jam-m2xlarge-6zqkq.novalocal): Get https://jam-m2xlarge-6zqkq.novalocal:10250/stats/summary/: dial tcp: lookup jam-m2xlarge-6zqkq.novalocal on 198.18.128.2:53: no such host, unable to fully scrape metrics from source kubelet_summary:jam-m2xlarge-sxrj8: unable to fetch metrics from Kubelet jam-m2xlarge-sxrj8 (jam-m2xlarge-sxrj8.novalocal): Get https://jam-m2xlarge-sxrj8.novalocal:10250/stats/summary/: dial tcp: lookup jam-m2xlarge-sxrj8.novalocal on 198.18.128.2:53: no such host] [restful] 2019/07/19 09:28:30 log.go:33: [restful/swagger] listing is available at https://:8443/swaggerapi [restful] 2019/07/19 09:28:30 log.go:33: [restful/swagger] https://:8443/swaggerui/ is mapped to folder /swagger-ui/ I0719 09:28:30.854420 1 serve.go:96] Serving securely on [::]:8443 E0719 09:28:56.628369 1 reststorage.go:129] unable to fetch node metrics for node \"jam-m2xlarge-6zqkq\": no metrics known for node E0719 09:28:56.628399 1 reststorage.go:129] unable to fetch node metrics for node \"jam-m2xlarge-fphgs\": no metrics known for node E0719 09:28:56.628404 1 reststorage.go:129] unable to fetch node metrics for node \"jam-m2xlarge-sxrj8\": no metrics known for node \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 Pod \u4e2d\u51fa\u73b0\u4e86\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f\uff1a xxx: no such host \uff0c \u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u9519\u8bef\u4fe1\u606f\u4e00\u822c\u5c31\u53ef\u4ee5\u786e\u5b9a\u662f DNS \u89e3\u6790\u4e0d\u4e86\u9020\u6210\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 metrics-server \u4f1a\u901a\u8fc7 kubelet \u7684 10250 \u7aef\u53e3\u83b7\u53d6\u4fe1\u606f\uff0c\u4f7f\u7528\u7684\u662f hostname \uff0c \u6211\u4eec\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\u5728\u8282\u70b9\u7684 /etc/hosts \u91cc\u9762\u6dfb\u52a0\u4e86\u8282\u70b9\u7684 hostname \u548c ip \u7684\u6620\u5c04\uff0c\u4f46\u662f\u662f\u6211\u4eec\u7684 metrics-server \u7684 Pod \u5185\u90e8\u5e76\u6ca1\u6709\u8fd9\u4e2a hosts \u4fe1\u606f\uff0c\u5f53\u7136\u4e5f\u5c31\u4e0d\u8bc6\u522b hostname \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u7b2c\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728\u96c6\u7fa4\u5185\u90e8\u7684 DNS \u670d\u52a1\u91cc\u9762\u6dfb\u52a0\u4e0a hostname \u7684\u89e3\u6790 \u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728 metrics-server \u7684\u542f\u52a8\u53c2\u6570\u4e2d\u4fee\u6539 kubelet-preferred-address-types \u53c2\u6570 \u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a --kubelet-insecure-tls \u53c2\u6570\u8df3\u8fc7\u8bc1\u4e66\u6821\u9a8c","title":"3 Fix problem"},{"location":"chap1/20Install_metrics_server_SAP_CC/#3-1-edit-metric-server-deployment-to-add-the-flags","text":"$ kubectl edit deployment metric-metrics-server -n kube-system deployment.extensions/metric-metrics-server edited 8 spaces args: - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname Please use 4 spaces to replace one tap, otherwise you may encounter unident problem $ kubectl get pods --all-namespaces NAMESPACE NAME READY STATUS RESTARTS AGE kube-system metric-metrics-server-77df84fbdd-5bb9c 0/1 Terminating 9 26m kube-system metric-metrics-server-78996fbfbf-plcww 1/1 Running 0 1m $ kubectl top nodes NAME CPU(cores) CPU% MEMORY(bytes) MEMORY% jam-m2xlarge-6zqkq 39m 0% 948Mi 5% jam-m2xlarge-fphgs 62m 0% 825Mi 5% jam-m2xlarge-sxrj8 47m 0% 613Mi 3% Now it works fine","title":"3-1 Edit metric-server deployment to add the flags"},{"location":"chap1/37kubectl_top/","text":"\u4ecekubectl top\u770bK8S\u76d1\u63a7\u539f\u7406 1 \u524d\u8a00 kubectl top \u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u67e5\u770bnode\u3001pod\u7684\u5b9e\u65f6\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\uff1a\u5982CPU\u3001\u5185\u5b58\u3002\u8fd9\u7bc7\u6587\u7ae0\u4f1a\u4ecb\u7ecd\u5176\u6570\u636e\u94fe\u8def\u548c\u5b9e\u73b0\u539f\u7406\uff0c\u540c\u65f6\u501f kubectl top \u9610\u8ff0 k8s \u4e2d\u7684\u76d1\u63a7\u4f53\u7cfb\uff0c\u7aa5\u4e00\u6591\u800c\u77e5\u5168\u8c79\u3002\u6700\u540e\u4f1a\u89e3\u91ca\u5e38\u89c1\u7684\u4e00\u4e9b\u95ee\u9898\uff1a kubectl top \u4e3a\u4ec0\u4e48\u4f1a\u62a5\u9519\uff1f kubectl top node \u600e\u4e48\u8ba1\u7b97\uff0c\u548c\u8282\u70b9\u4e0a\u76f4\u63a5 top \u6709\u4ec0\u4e48\u533a\u522b\uff1f kubectl top pod \u600e\u4e48\u8ba1\u7b97\uff0c\u5305\u542b pause \u5417\uff1f kubectl top pod \u548cexec \u8fdb\u5165 pod \u540e\u770b\u5230\u7684 top \u4e0d\u4e00\u6837\uff1f kubectl top pod \u548c docker stats\u5f97\u5230\u7684\u503c\u4e3a\u4ec0\u4e48\u4e0d\u540c\uff1f 2 \u4f7f\u7528 kubectl top \u662f\u57fa\u7840\u547d\u4ee4\uff0c\u4f46\u662f\u9700\u8981\u90e8\u7f72\u914d\u5957\u7684\u7ec4\u4ef6\u624d\u80fd\u83b7\u53d6\u5230\u76d1\u63a7\u503c 1.8\u4ee5\u4e0b\uff1a\u90e8\u7f72 heapter 1.8\u4ee5\u4e0a\uff1a\u90e8\u7f72 metric-server 2-1 \u5b89\u88c5 helm install metric ./metrics-server --namespace kube-system kubectl edit deployment metric-metrics-server -n kube-system ... args: - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname ... $ kubectl top nodes NAME CPU(cores) CPU% MEMORY(bytes) MEMORY% docker-desktop 499m 12% 2198Mi 27% kubectl top pod: \u67e5\u770b pod \u7684\u4f7f\u7528\u60c5\u51b5 $ kubectl top pods NAME CPU(cores) MEMORY(bytes) dark-57c5c58bf8-llxqj 1m 4Mi $ kubectl top pod kfk-zookeeper-0 -n kafka NAME CPU(cores) MEMORY(bytes) kfk-zookeeper-0 3m 187Mi $ kubectl top pod kfk-zookeeper-0 -n kafka --containers POD NAME CPU(cores) MEMORY(bytes) kfk-zookeeper-0 zookeeper 3m 187Mi \u6307\u6807\u542b\u4e49\uff1a \u548c k8s \u4e2d\u7684 request\u3001limit \u4e00\u81f4\uff0c CPU \u5355\u4f4d 100m=0.1 \u5185\u5b58\u5355\u4f4d 1Mi=1024Ki pod \u7684\u5185\u5b58\u503c\u662f\u5176\u5b9e\u9645\u4f7f\u7528\u91cf\uff0c\u4e5f\u662f\u505a limit \u9650\u5236\u65f6\u5224\u65ad oom \u7684\u4f9d\u636e\u3002 pod \u7684\u4f7f\u7528\u91cf\u7b49\u4e8e\u5176\u6240\u6709\u4e1a\u52a1\u5bb9\u5668\u7684\u603b\u548c\uff0c\u4e0d\u5305\u62ec pause \u5bb9\u5668\uff0c\u503c\u7b49\u4e8e cadvisr \u4e2d\u7684 container_memory_working_set_bytes \u6307\u6807 node \u7684\u503c\u5e76\u4e0d\u7b49\u4e8e\u8be5 node \u4e0a\u6240\u6709 pod \u503c\u7684\u603b\u548c\uff0c\u4e5f\u4e0d\u7b49\u4e8e\u76f4\u63a5\u5728\u673a\u5668\u4e0a\u8fd0\u884c top \u6216 free \u770b\u5230\u7684\u503c 3 \u5b9e\u73b0\u539f\u7406 3.1 \u6570\u636e\u94fe\u8def kubectl top \u3001 k8s dashboard \u4ee5\u53ca HPA \u7b49\u8c03\u5ea6\u7ec4\u4ef6\u4f7f\u7528\u7684\u6570\u636e\u662f\u4e00\u6837\uff0c\u6570\u636e\u94fe\u8def\u5982\u4e0b\uff1a \u4f7f\u7528 heapster \u65f6\uff1a apiserver \u4f1a\u76f4\u63a5\u5c06 metric \u8bf7\u6c42\u901a\u8fc7 proxy \u7684\u65b9\u5f0f\u8f6c\u53d1\u7ed9\u96c6\u7fa4\u5185\u7684 hepaster \u670d\u52a1\u3002 \u800c\u4f7f\u7528 metrics-server \u65f6\uff1a apiserver \u662f\u901a\u8fc7 /apis/metrics.k8s.io/ \u7684\u5730\u5740\u8bbf\u95ee metric \u8fd9\u91cc\u53ef\u4ee5\u5bf9\u6bd4\u4e0b kubect get pod \u65f6\u7684\u65e5\u5fd7\uff1a 3.2 metric api \u53ef\u4ee5\u53d1\u73b0\uff0c heapster \u4f7f\u7528\u7684\u662f proxy \u8f6c\u53d1\uff0c \u800c metric-server \u548c\u666e\u901a pod \u90fd\u662f\u4f7f\u7528 api/xx \u7684\u8d44\u6e90\u63a5\u53e3 \uff0c heapster \u91c7\u7528\u7684\u8fd9\u79cd proxy \u65b9\u5f0f\u662f\u6709\u95ee\u9898\u7684\uff1a proxy \u53ea\u662f\u4ee3\u7406\u8bf7\u6c42\uff0c\u4e00\u822c\u7528\u4e8e\u95ee\u9898\u6392\u67e5\uff0c\u4e0d\u591f\u7a33\u5b9a\uff0c\u4e14\u7248\u672c\u4e0d\u53ef\u63a7 heapster \u7684\u63a5\u53e3\u4e0d\u80fd\u50cf apiserver \u4e00\u6837\u6709\u5b8c\u6574\u7684\u9274\u6743\u4ee5\u53ca client \u96c6\u6210\uff0c\u4e24\u8fb9\u90fd\u7ef4\u62a4\u7684\u8bdd\u4ee3\u4ef7\u9ad8\uff0c\u5982 generic apiserver \uff09 pod \u7684\u76d1\u63a7\u6570\u636e\u662f\u6838\u5fc3\u6307\u6807\uff08HPA\u8c03\u5ea6\uff09\uff0c\u5e94\u8be5\u548c pod \u672c\u8eab\u62e5\u6709\u540c\u7b49\u5730\u4f4d\uff0c\u5373 metric \u5e94\u8be5\u4f5c\u4e3a\u4e00\u79cd\u8d44\u6e90\u5b58\u5728\uff0c\u5982 metrics.k8s.io \u7684\u5f62\u5f0f\uff0c\u79f0\u4e4b\u4e3a Metric Api \u4e8e\u662f\u5b98\u65b9\u4ece 1.8 \u7248\u672c\u5f00\u59cb\u9010\u6b65\u5e9f\u5f03 heapster \uff0c\u5e76\u63d0\u51fa\u4e86\u4e0a\u8fb9 Metric api \u7684\u6982\u5ff5\uff0c\u800c metrics-server \u5c31\u662f\u8fd9\u79cd\u6982\u5ff5\u4e0b\u5b98\u65b9\u7684\u4e00\u79cd\u5b9e\u73b0\uff0c\u7528\u4e8e\u4ece kubelet \u83b7\u53d6\u6307\u6807\uff0c\u66ff\u6362\u6389\u4e4b\u524d\u7684 heapster 3.3 kube-aggregator \u6709\u4e86metrics-server\u7ec4\u4ef6\uff0c\u91c7\u96c6\u5230\u4e86\u9700\u8981\u7684\u6570\u636e\uff0c\u4e5f\u66b4\u9732\u4e86\u63a5\u53e3\uff0c\u4f46\u8d70\u5230\u8fd9\u4e00\u6b65\u548c heapster \u5176\u5b9e\u6ca1\u6709\u533a\u522b\uff0c\u6700\u5173\u952e\u7684\u4e00\u6b65\u5c31\u662f\u5982\u4f55\u5c06\u6253\u5230 apiserver\u7684/apis/metrics.k8s.io \u8bf7\u6c42\u8f6c\u53d1\u7ed9 metrics-server \u7ec4\u4ef6\uff1f \u89e3\u51b3\u65b9\u6848\u5c31\u662f\uff1a kube-aggregator \u3002 kube-aggregator \u662f\u5bf9 apiserver \u7684\u6709\u529b\u6269\u5c55\uff0c\u5b83\u5141\u8bb8k8s\u7684\u5f00\u53d1\u4eba\u5458\u7f16\u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u670d\u52a1\uff0c\u5e76\u628a\u8fd9\u4e2a\u670d\u52a1\u6ce8\u518c\u5230k8s\u7684 ap i\u91cc\u9762\uff0c\u5373\u6269\u5c55 API \uff0c metric-server \u5176\u5b9e\u5728 1.7 \u7248\u672c\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86\uff0c\u53ea\u662f\u5728\u7b49 kube-aggregator \u7684\u51fa\u73b0\u3002 kube-aggregator\u662f apiserver \u4e2d\u7684\u5b9e\u73b0\uff0c\u6709\u4e9b k8s \u7248\u672c\u9ed8\u8ba4\u6ca1\u5f00\u542f\uff0c\u4f60\u53ef\u4ee5\u52a0\u4e0a\u8fd9\u4e9b \u914d\u7f6e \u6765\u5f00\u542f\u3002\u4ed6\u7684\u6838\u5fc3\u529f\u80fd\u662f\u52a8\u6001\u6ce8\u518c\u3001\u53d1\u73b0\u6c47\u603b\u3001\u5b89\u5168\u4ee3\u7406\u3002 \u5982 metric-server \u6ce8\u518c pod \u548c node \u65f6: 3.4 \u76d1\u63a7\u4f53\u7cfb \u5728\u63d0\u51fa metric api \u7684\u6982\u5ff5\u65f6\uff0c\u5b98\u65b9\u4e5f\u63d0\u51fa\u4e86\u65b0\u7684\u76d1\u63a7\u4f53\u7cfb\uff0c\u76d1\u63a7\u8d44\u6e90\u88ab\u5206\u4e3a\u4e862\u79cd\uff1a Core metrics (\u6838\u5fc3\u6307\u6807)\uff1a\u4ece Kubelet \u3001 cAdvisor \u7b49\u83b7\u53d6\u5ea6\u91cf\u6570\u636e\uff0c\u518d\u7531 metrics-server \u63d0\u4f9b\u7ed9 Dashboard \u3001 HPA \u63a7\u5236\u5668\u7b49\u4f7f\u7528\u3002 Custom Metrics (\u81ea\u5b9a\u4e49\u6307\u6807)\uff1a\u7531 Prometheus Adapter \u63d0\u4f9b API custom.metrics.k8s.io \uff0c\u7531\u6b64\u53ef\u652f\u6301\u4efb\u610f Prometheus \u91c7\u96c6\u5230\u7684\u6307\u6807\u3002 \u6838\u5fc3\u6307\u6807\u53ea\u5305\u542b node \u548c pod \u7684 cpu \u3001\u5185\u5b58\u7b49\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u6838\u5fc3\u6307\u6807\u4f5cHPA\u5df2\u7ecf\u8db3\u591f\uff0c\u4f46\u5982\u679c\u60f3\u6839\u636e\u81ea\u5b9a\u4e49\u6307\u6807:\u5982\u8bf7\u6c42 qps/5xx \u9519\u8bef\u6570\u6765\u5b9e\u73b0HPA\uff0c\u5c31\u9700\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u6307\u6807\u4e86\u3002 \u76ee\u524d Kubernetes \u4e2d\u81ea\u5b9a\u4e49\u6307\u6807\u4e00\u822c\u7531 Prometheus \u6765\u63d0\u4f9b\uff0c\u518d\u5229\u7528 k8s-prometheus-adpater \u805a\u5408\u5230 apiserver \uff0c\u5b9e\u73b0\u548c\u6838\u5fc3\u6307\u6807\uff08 metric-server )\u540c\u6837\u7684\u6548\u679c\u3002 3.5 kubelet \u524d\u9762\u63d0\u5230\uff0c\u65e0\u8bba\u662f heapster \u8fd8\u662f metric-server \uff0c\u90fd\u53ea\u662f\u6570\u636e\u7684\u4e2d\u8f6c\u548c\u805a\u5408\uff0c\u4e24\u8005\u90fd\u662f\u8c03\u7528\u7684 kubelet \u7684 api \u63a5\u53e3\u83b7\u53d6\u7684\u6570\u636e\uff0c\u800c kubelet \u4ee3\u7801\u4e2d\u5b9e\u9645\u91c7\u96c6\u6307\u6807\u7684\u662f cadvisor \u6a21\u5757\uff0c\u4f60\u53ef\u4ee5\u5728 node \u8282\u70b9\u8bbf\u95ee 10255 \u7aef\u53e3 \uff08 read-only-port )\u83b7\u53d6\u76d1\u63a7\u6570\u636e\uff1a Kubelet Summary metrics: 127.0.0.1:10255/metrics \uff0c\u66b4\u9732 node\u3001pod \u6c47\u603b\u6570\u636e Cadvisor metrics: 127.0.0.1:10255/metrics/cadvisor \uff0c\u66b4\u9732 container \u7ef4\u5ea6\u6570\u636e \u793a\u4f8b\uff0c\u5bb9\u5668\u7684\u5185\u5b58\u4f7f\u7528\u91cf\uff1a kubelet\u867d\u7136\u63d0\u4f9b\u4e86 metric \u63a5\u53e3\uff0c\u4f46\u5b9e\u9645\u76d1\u63a7\u903b\u8f91\u7531\u5185\u7f6e\u7684 cAdvisor \u6a21\u5757\u8d1f\u8d23\uff0c\u6f14\u53d8\u8fc7\u7a0b\u5982\u4e0b\uff1a \u4ece k8s 1.6 \u5f00\u59cb\uff0c kubernetes \u5c06 cAdvisor \u5f00\u59cb\u96c6\u6210\u5728 kubelet \u4e2d\uff0c\u4e0d\u9700\u8981\u5355\u72ec\u914d\u7f6e \u4ece k8s 1.7 \u5f00\u59cb\uff0c Kubelet metrics API \u4e0d\u518d\u5305\u542b cadvisor metrics \uff0c\u800c\u662f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684 API \u63a5\u53e3\u6765\u505a\u6c47\u603b \u4ece k8s 1.12 \u5f00\u59cb\uff0c cadvisor \u76d1\u542c\u7684\u7aef\u53e3\u5728 k8s \u4e2d\u88ab\u5220\u9664\uff0c\u6240\u6709\u76d1\u63a7\u6570\u636e\u7edf\u4e00\u7531 Kubelet \u7684 API \u63d0\u4f9b \u5230\u8fd9\u91cc\u4e3a\u6b62\uff0c k8s \u8303\u56f4\u5185\u7684\u76d1\u63a7\u4f53\u7cfb\u5c31\u7ed3\u675f\u4e86\uff0c\u5982\u679c\u4f60\u60f3\u7ee7\u7eed\u4e86\u89e3cadvisor\u548c cgroup \u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u5411\u4e0b\u9605\u8bfb 3.6 cadvisor cadvisor\u7531\u8c37\u6b4c\u5f00\u6e90\uff0c\u4f7f\u7528Go\u5f00\u53d1\uff0c\u9879\u76ee\u5730\u5740\u4e5f\u662f google/cadvisor \uff0c cadvisor \u4e0d\u4ec5\u53ef\u4ee5\u641c\u96c6\u4e00\u53f0\u673a\u5668\u4e0a\u6240\u6709\u8fd0\u884c\u7684\u5bb9\u5668\u4fe1\u606f\uff0c\u5305\u62ec CPU \u4f7f\u7528\u60c5\u51b5\u3001\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u3001\u7f51\u7edc\u541e\u5410\u91cf\u53ca\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u60c5\u51b5\uff0c\u8fd8\u63d0\u4f9b\u57fa\u7840\u67e5\u8be2\u754c\u9762\u548chttp\u63a5\u53e3\uff0c\u65b9\u4fbf\u5176\u4ed6\u7ec4\u4ef6\u8fdb\u884c\u6570\u636e\u6293\u53d6\u3002\u5728K8S\u4e2d\u96c6\u6210\u5728Kubelet\u91cc\u4f5c\u4e3a\u9ed8\u8ba4\u542f\u52a8\u9879\uff0ck8s\u5b98\u65b9\u6807\u914d\u3002 cadvisor \u62ff\u5230\u7684\u6570\u636e\u7ed3\u6784\u793a\u4f8b\uff1a \u6838\u5fc3\u903b\u8f91\uff1a \u901a\u8fc7 new \u51fa\u6765\u7684 memoryStorage \u4ee5\u53ca sysfs \u5b9e\u4f8b\uff0c\u521b\u5efa\u4e00\u4e2a manager \u5b9e\u4f8b\uff0c manager \u7684 interface \u4e2d\u5b9a\u4e49\u4e86\u8bb8\u591a\u7528\u4e8e\u83b7\u53d6\u5bb9\u5668\u548c machine \u4fe1\u606f\u7684\u51fd\u6570 cadvisor\u7684\u6307\u6807\u89e3\u8bfb\uff1a cgroup-v1 cadvisor \u83b7\u53d6\u6307\u6807\u65f6\u5b9e\u9645\u8c03\u7528\u7684\u662f runc/libcontainer \u5e93\uff0c\u800c libcontainer \u662f\u5bf9 cgroup \u6587\u4ef6 \u7684\u5c01\u88c5\uff0c\u5373 cadvsio r\u4e5f\u53ea\u662f\u4e2a\u8f6c\u53d1\u8005\uff0c\u5b83\u7684\u6570\u636e\u6765\u81ea\u4e8e cgroup \u6587\u4ef6\u3002 3.7 cgroup cgroup\u6587\u4ef6\u4e2d\u7684\u503c\u662f\u76d1\u63a7\u6570\u636e\u7684\u6700\u7ec8\u6765\u6e90\uff0c\u5982 mem usage \u7684\u503c\uff0c\u6765\u81ea\u4e8e /sys/fs/cgroup/memory/docker/[containerId]/memory.usage_in_bytes \u5982\u679c\u6ca1\u9650\u5236\u5185\u5b58\uff0c Limit = machine_mem \uff0c\u5426\u5219\u6765\u81ea\u4e8e /sys/fs/cgroup/memory/docker/[id]/memory.limit_in_bytes \u5185\u5b58\u4f7f\u7528\u7387 = memory.usage_in_bytes/memory.limit_in_bytes \u4e00\u822c\u60c5\u51b5\u4e0b\uff0ccgroup\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9\u5305\u62ecCPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\u4fe1\u606f\uff1a \u5982memory\u4e0b\u7684\u51e0\u4e2a\u5e38\u7528\u7684\u6307\u6807\u542b\u4e49\uff1a memory.stat \u4e2d\u7684\u4fe1\u606f\u662f\u6700\u5168\u7684\uff1a \u539f\u7406\u5230\u8fd9\u91cc\u7ed3\u675f\uff0c\u8fd9\u91cc\u89e3\u91ca\u4e0b\u6700\u5f00\u59cb\u7684kubectl top \u7684\u51e0\u4e2a\u95ee\u9898\uff1a \u56db. \u95ee\u9898 4.1 kubectl top \u4e3a\u4ec0\u4e48\u4f1a\u62a5\u9519 \u4e00\u822c\u60c5\u51b5\u4e0b top \u62a5\u9519\u6709\u4ee5\u4e0b\u51e0\u79cd\uff0c\u53ef\u4ee5 kubectl top pod -v=10 \u770b\u5230\u5177\u4f53\u7684\u8c03\u7528\u65e5\u5fd7: \u6ca1\u6709\u90e8\u7f72 heapster \u6216\u8005 metric-server \uff0c\u6216\u8005 pod \u8fd0\u884c\u5f02\u5e38\uff0c\u53ef\u4ee5\u6392\u67e5\u5bf9\u5e94 pod \u65e5\u5fd7 \u8981\u770b\u7684 pod \u521a\u521a\u5efa\u51fa\u6765\uff0c\u8fd8\u6ca1\u6765\u5f97\u53ca\u91c7\u96c6\u6307\u6807\uff0c\u62a5 not found \u9519\u8bef\uff0c\u9ed8\u8ba4 1 \u5206\u949f \u4ee5\u4e0a\u4e24\u79cd\u90fd\u4e0d\u662f\uff0c\u53ef\u4ee5\u68c0\u67e5\u4e0b kubelet \u7684 10255 \u7aef\u53e3\u662f\u5426\u5f00\u653e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u53ea\u8bfb\u7aef\u53e3\u83b7\u53d6\u6307\u6807\uff0c\u4e5f\u53ef\u4ee5\u5728 heapster \u6216 metric-server \u7684\u914d\u7f6e\u4e2d\u589e\u52a0\u8bc1\u4e66\uff0c\u6362\u6210 10250 \u8ba4\u8bc1\u7aef\u53e3 4.2 kubectl top pod \u5185\u5b58\u600e\u4e48\u8ba1\u7b97\uff0c\u5305\u542b pause\u5bb9\u5668\u5417 \u6bcf\u6b21\u542f\u52a8 pod \uff0c\u90fd\u4f1a\u6709\u4e00\u4e2a pause \u5bb9\u5668\uff0c\u65e2\u7136\u662f\u5bb9\u5668\u5c31\u4e00\u5b9a\u6709\u8d44\u6e90\u6d88\u8017\uff08\u4e00\u822c\u5728 2-3M \u7684\u5185\u5b58\uff09\uff0c cgroup \u6587\u4ef6\u4e2d\uff0c\u4e1a\u52a1\u5bb9\u5668\u548c pause \u5bb9\u5668\u90fd\u5728\u540c\u4e00\u4e2a pod\u7684\u6587\u4ef6\u5939\u4e0b\u3002 \u4f46 cadvisor \u5728\u67e5\u8be2 pod \u7684\u5185\u5b58\u4f7f\u7528\u91cf\u65f6\uff0c\u662f\u5148\u83b7\u53d6\u4e86 pod \u4e0b\u7684 container \u5217\u8868\uff0c\u518d\u9010\u4e2a\u83b7\u53d6 container \u7684\u5185\u5b58\u5360\u7528\uff0c \u4e0d\u8fc7\u8fd9\u91cc\u7684 container \u5217\u8868\u5e76\u6ca1\u6709\u5305\u542b pause \uff0c \u56e0\u6b64\u6700\u7ec8 top pod \u7684\u7ed3\u679c\u4e5f\u4e0d\u5305\u542b pause \u5bb9\u5668 pod \u7684\u5185\u5b58\u4f7f\u7528\u91cf\u8ba1\u7b97 kubectl top pod \u5f97\u5230\u7684\u5185\u5b58\u4f7f\u7528\u91cf\uff0c\u5e76\u4e0d\u662f cadvisor \u4e2d\u7684 container_memory_usage_bytes \uff0c\u800c\u662f container_memory_working_set_bytes \uff0c\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a container_memory_usage_bytes == container_memory_rss + container_memory_cache + kernel memory container_memory_working_set_bytes = container_memory_usage_bytes \u2013 total_inactive_file \uff08\u672a\u6fc0\u6d3b\u7684\u533f\u540d\u7f13\u5b58\u9875\uff09 container_memory_working_set_bytes \u662f\u5bb9\u5668\u771f\u5b9e\u4f7f\u7528\u7684\u5185\u5b58\u91cf\uff0c\u4e5f\u662f limit \u9650\u5236\u65f6\u7684 oom \u5224\u65ad\u4f9d\u636e cadvisor \u4e2d\u7684 container_memory_usage_bytes \u5bf9\u5e94 cgroup \u4e2d\u7684 memory.usage_in_bytes \u6587\u4ef6\uff0c\u4f46 container_memory_working_set_bytes \u5e76\u6ca1\u6709\u5177\u4f53\u7684\u6587\u4ef6\uff0c\u4ed6\u7684\u8ba1\u7b97\u903b\u8f91\u5728 cadvisor \u7684\u4ee3\u7801\u4e2d\uff0c\u5982\u4e0b\uff1a \u540c\u7406\uff0cnode \u7684\u5185\u5b58\u4f7f\u7528\u91cf\u4e5f\u662f container_memory_working_set_bytes 4.3 kubectl top node \u600e\u4e48\u8ba1\u7b97\uff0c\u548c\u8282\u70b9\u4e0a\u76f4\u63a5 top \u6709\u4ec0\u4e48\u533a\u522b kubectl top node \u5f97\u5230\u7684 cpu \u548c\u5185\u5b58\u503c\uff0c\u5e76\u4e0d\u662f\u8282\u70b9\u4e0a\u6240\u6709 pod \u7684\u603b\u548c\uff0c\u4e0d\u8981\u76f4\u63a5\u76f8\u52a0\u3002 top node \u662f\u673a\u5668\u4e0a cgroup \u6839\u76ee\u5f55\u4e0b\u7684\u6c47\u603b\u7edf\u8ba1 \u5728\u673a\u5668\u4e0a\u76f4\u63a5 top\u547d\u4ee4\u770b\u5230\u7684\u503c\u548c kubectl top node \u4e0d\u80fd\u76f4\u63a5\u5bf9\u6bd4\uff0c\u56e0\u4e3a\u8ba1\u7b97\u903b\u8f91\u4e0d\u540c\uff0c\u5982\u5185\u5b58\uff0c\u5927\u81f4\u7684\u5bf9\u5e94\u5173\u7cfb\u662f(\u524d\u8005\u662f\u673a\u5668\u4e0a top\uff0c\u540e\u8005\u662fkubectl top) : rss + cache = (in)active_anon + (in)active_file 4.4 kubectl top pod \u548cexec \u8fdb\u5165 pod \u540e\u770b\u5230\u7684 top \u4e0d\u4e00\u6837 top\u547d\u4ee4\u7684\u5dee\u5f02\u548c\u4e0a\u8fb9 \u4e00\u81f4\uff0c\u65e0\u6cd5\u76f4\u63a5\u5bf9\u6bd4\uff0c\u540c\u65f6\uff0c\u5c31\u7b97\u4f60\u5bf9 pod \u505a\u4e86 limit \u9650\u5236\uff0c pod \u5185\u7684 top \u770b\u5230\u7684\u5185\u5b58\u548c cpu \u603b\u91cf\u4ecd\u7136\u662f\u673a\u5668\u603b\u91cf\uff0c\u5e76\u4e0d\u662f pod \u53ef\u5206\u914d\u91cf \u8fdb\u7a0b\u7684 RSS \u4e3a\u8fdb\u7a0b\u4f7f\u7528\u7684\u6240\u6709\u7269\u7406\u5185\u5b58\uff08 file_rss\uff0banon_rss \uff09\uff0c\u5373 Anonymous pages\uff0bMapped apges \uff08\u5305\u542b\u5171\u4eab\u5185\u5b58\uff09 cgroup RSS \u4e3a\uff08 anonymous and swap cache memory \uff09\uff0c\u4e0d\u5305\u542b\u5171\u4eab\u5185\u5b58\u3002\u4e24\u8005\u90fd\u4e0d\u5305\u542b file cache 4.5 kubectl top pod \u548c docker stats\u5f97\u5230\u7684\u503c\u4e3a\u4ec0\u4e48\u4e0d\u540c\uff1f docker stats dockerID \u53ef\u4ee5\u770b\u5230\u5bb9\u5668\u5f53\u524d\u7684\u4f7f\u7528\u91cf\uff1a \u5982\u679c\u4f60\u7684 pod \u4e2d\u53ea\u6709\u4e00\u4e2a container \uff0c\u4f60\u4f1a\u53d1\u73b0 docker stats \u503c\u4e0d\u7b49\u4e8e kubectl top \u7684\u503c\uff0c\u65e2\u4e0d\u7b49\u4e8e container_memory_usage_bytes \uff0c\u4e5f\u4e0d\u7b49\u4e8e container_memory_working_set_bytes \u3002 \u56e0\u4e3a docker stats \u548c cadvisor \u7684\u8ba1\u7b97\u65b9\u5f0f\u4e0d\u540c\uff0c\u603b\u4f53\u503c\u4f1a\u5c0f\u4e8e kubectl top \uff1a\u8ba1\u7b97\u903b\u8f91\u662f\uff1a docker stats = container_memory_usage_bytes - container_memory_cache \u4e94. \u540e\u8bb0 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u65f6\u523b\u5173\u5fc3node \u6216 pod \u7684\u4f7f\u7528\u91cf\uff0c\u56e0\u4e3a\u6709\u96c6\u7fa4\u81ea\u52a8\u6269\u7f29\u5bb9(cluster-autoscaler)\u548cpod \u6c34\u5e73\u6269\u7f29\u5bb9\uff08 HPA \uff09\u6765\u5e94\u5bf9\u8fd9\u4e24\u79cd\u8d44\u6e90\u53d8\u5316\uff0c\u8d44\u6e90\u6307\u6807\u7684\u610f\u4e49\u66f4\u9002\u5408\u4f7f\u7528 prometheus \u6765\u6301\u4e45\u5316 cadvisor \u7684\u6570\u636e\uff0c\u7528\u4e8e\u56de\u6eaf\u5386\u53f2\u6216\u8005\u53d1\u9001\u62a5\u8b66\u3002 \u5176\u4ed6\u8865\u5145\uff1a \u867d\u7136 kubectl top help \u4e2d\u663e\u793a\u652f\u6301 Storage \uff0c\u4f46\u76f4\u5230 1.16 \u7248\u672c\u4ecd\u7136\u4e0d\u652f\u6301 1.13 \u4e4b\u524d\u9700\u8981 heapster\uff0c1.13 \u4ee5\u540e\u9700\u8981 metric-server \uff0c\u8fd9\u90e8\u5206 kubectl top help \u7684\u8f93\u51fa \u6709\u8bef\uff0c\u91cc\u9762\u53ea\u63d0\u5230\u4e86heapster k8s dashboard \u4e2d\u7684\u76d1\u63a7\u56fe\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f heapster \uff0c\u5207\u6362\u4e3a metric-server \u540e\u6570\u636e\u4f1a\u5f02\u5e38\uff0c\u9700\u8981\u591a\u90e8\u7f72\u4e00\u4e2a metric-server-scraper \u7684 pod \u6765\u505a\u63a5\u53e3\u8f6c\u6362\uff0c\u5177\u4f53\u53c2\u8003 pr\uff1a https://github.com/kubernetes/dashboard/pull/3504","title":"\u7b2c\u516b\u8282 \u4ecekubectl top\u770bK8S\u76d1\u63a7\u539f\u7406"},{"location":"chap1/37kubectl_top/#kubectl-topk8s","text":"","title":"\u4ecekubectl top\u770bK8S\u76d1\u63a7\u539f\u7406"},{"location":"chap1/37kubectl_top/#1","text":"kubectl top \u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u67e5\u770bnode\u3001pod\u7684\u5b9e\u65f6\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\uff1a\u5982CPU\u3001\u5185\u5b58\u3002\u8fd9\u7bc7\u6587\u7ae0\u4f1a\u4ecb\u7ecd\u5176\u6570\u636e\u94fe\u8def\u548c\u5b9e\u73b0\u539f\u7406\uff0c\u540c\u65f6\u501f kubectl top \u9610\u8ff0 k8s \u4e2d\u7684\u76d1\u63a7\u4f53\u7cfb\uff0c\u7aa5\u4e00\u6591\u800c\u77e5\u5168\u8c79\u3002\u6700\u540e\u4f1a\u89e3\u91ca\u5e38\u89c1\u7684\u4e00\u4e9b\u95ee\u9898\uff1a kubectl top \u4e3a\u4ec0\u4e48\u4f1a\u62a5\u9519\uff1f kubectl top node \u600e\u4e48\u8ba1\u7b97\uff0c\u548c\u8282\u70b9\u4e0a\u76f4\u63a5 top \u6709\u4ec0\u4e48\u533a\u522b\uff1f kubectl top pod \u600e\u4e48\u8ba1\u7b97\uff0c\u5305\u542b pause \u5417\uff1f kubectl top pod \u548cexec \u8fdb\u5165 pod \u540e\u770b\u5230\u7684 top \u4e0d\u4e00\u6837\uff1f kubectl top pod \u548c docker stats\u5f97\u5230\u7684\u503c\u4e3a\u4ec0\u4e48\u4e0d\u540c\uff1f","title":"1 \u524d\u8a00"},{"location":"chap1/37kubectl_top/#2","text":"kubectl top \u662f\u57fa\u7840\u547d\u4ee4\uff0c\u4f46\u662f\u9700\u8981\u90e8\u7f72\u914d\u5957\u7684\u7ec4\u4ef6\u624d\u80fd\u83b7\u53d6\u5230\u76d1\u63a7\u503c 1.8\u4ee5\u4e0b\uff1a\u90e8\u7f72 heapter 1.8\u4ee5\u4e0a\uff1a\u90e8\u7f72 metric-server","title":"2 \u4f7f\u7528"},{"location":"chap1/37kubectl_top/#2-1","text":"helm install metric ./metrics-server --namespace kube-system kubectl edit deployment metric-metrics-server -n kube-system ... args: - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname ... $ kubectl top nodes NAME CPU(cores) CPU% MEMORY(bytes) MEMORY% docker-desktop 499m 12% 2198Mi 27% kubectl top pod: \u67e5\u770b pod \u7684\u4f7f\u7528\u60c5\u51b5 $ kubectl top pods NAME CPU(cores) MEMORY(bytes) dark-57c5c58bf8-llxqj 1m 4Mi $ kubectl top pod kfk-zookeeper-0 -n kafka NAME CPU(cores) MEMORY(bytes) kfk-zookeeper-0 3m 187Mi $ kubectl top pod kfk-zookeeper-0 -n kafka --containers POD NAME CPU(cores) MEMORY(bytes) kfk-zookeeper-0 zookeeper 3m 187Mi \u6307\u6807\u542b\u4e49\uff1a \u548c k8s \u4e2d\u7684 request\u3001limit \u4e00\u81f4\uff0c CPU \u5355\u4f4d 100m=0.1 \u5185\u5b58\u5355\u4f4d 1Mi=1024Ki pod \u7684\u5185\u5b58\u503c\u662f\u5176\u5b9e\u9645\u4f7f\u7528\u91cf\uff0c\u4e5f\u662f\u505a limit \u9650\u5236\u65f6\u5224\u65ad oom \u7684\u4f9d\u636e\u3002 pod \u7684\u4f7f\u7528\u91cf\u7b49\u4e8e\u5176\u6240\u6709\u4e1a\u52a1\u5bb9\u5668\u7684\u603b\u548c\uff0c\u4e0d\u5305\u62ec pause \u5bb9\u5668\uff0c\u503c\u7b49\u4e8e cadvisr \u4e2d\u7684 container_memory_working_set_bytes \u6307\u6807 node \u7684\u503c\u5e76\u4e0d\u7b49\u4e8e\u8be5 node \u4e0a\u6240\u6709 pod \u503c\u7684\u603b\u548c\uff0c\u4e5f\u4e0d\u7b49\u4e8e\u76f4\u63a5\u5728\u673a\u5668\u4e0a\u8fd0\u884c top \u6216 free \u770b\u5230\u7684\u503c","title":"2-1 \u5b89\u88c5"},{"location":"chap1/37kubectl_top/#3","text":"","title":"3 \u5b9e\u73b0\u539f\u7406"},{"location":"chap1/37kubectl_top/#31","text":"kubectl top \u3001 k8s dashboard \u4ee5\u53ca HPA \u7b49\u8c03\u5ea6\u7ec4\u4ef6\u4f7f\u7528\u7684\u6570\u636e\u662f\u4e00\u6837\uff0c\u6570\u636e\u94fe\u8def\u5982\u4e0b\uff1a \u4f7f\u7528 heapster \u65f6\uff1a apiserver \u4f1a\u76f4\u63a5\u5c06 metric \u8bf7\u6c42\u901a\u8fc7 proxy \u7684\u65b9\u5f0f\u8f6c\u53d1\u7ed9\u96c6\u7fa4\u5185\u7684 hepaster \u670d\u52a1\u3002 \u800c\u4f7f\u7528 metrics-server \u65f6\uff1a apiserver \u662f\u901a\u8fc7 /apis/metrics.k8s.io/ \u7684\u5730\u5740\u8bbf\u95ee metric \u8fd9\u91cc\u53ef\u4ee5\u5bf9\u6bd4\u4e0b kubect get pod \u65f6\u7684\u65e5\u5fd7\uff1a","title":"3.1 \u6570\u636e\u94fe\u8def"},{"location":"chap1/37kubectl_top/#32-metric-api","text":"\u53ef\u4ee5\u53d1\u73b0\uff0c heapster \u4f7f\u7528\u7684\u662f proxy \u8f6c\u53d1\uff0c \u800c metric-server \u548c\u666e\u901a pod \u90fd\u662f\u4f7f\u7528 api/xx \u7684\u8d44\u6e90\u63a5\u53e3 \uff0c heapster \u91c7\u7528\u7684\u8fd9\u79cd proxy \u65b9\u5f0f\u662f\u6709\u95ee\u9898\u7684\uff1a proxy \u53ea\u662f\u4ee3\u7406\u8bf7\u6c42\uff0c\u4e00\u822c\u7528\u4e8e\u95ee\u9898\u6392\u67e5\uff0c\u4e0d\u591f\u7a33\u5b9a\uff0c\u4e14\u7248\u672c\u4e0d\u53ef\u63a7 heapster \u7684\u63a5\u53e3\u4e0d\u80fd\u50cf apiserver \u4e00\u6837\u6709\u5b8c\u6574\u7684\u9274\u6743\u4ee5\u53ca client \u96c6\u6210\uff0c\u4e24\u8fb9\u90fd\u7ef4\u62a4\u7684\u8bdd\u4ee3\u4ef7\u9ad8\uff0c\u5982 generic apiserver \uff09 pod \u7684\u76d1\u63a7\u6570\u636e\u662f\u6838\u5fc3\u6307\u6807\uff08HPA\u8c03\u5ea6\uff09\uff0c\u5e94\u8be5\u548c pod \u672c\u8eab\u62e5\u6709\u540c\u7b49\u5730\u4f4d\uff0c\u5373 metric \u5e94\u8be5\u4f5c\u4e3a\u4e00\u79cd\u8d44\u6e90\u5b58\u5728\uff0c\u5982 metrics.k8s.io \u7684\u5f62\u5f0f\uff0c\u79f0\u4e4b\u4e3a Metric Api \u4e8e\u662f\u5b98\u65b9\u4ece 1.8 \u7248\u672c\u5f00\u59cb\u9010\u6b65\u5e9f\u5f03 heapster \uff0c\u5e76\u63d0\u51fa\u4e86\u4e0a\u8fb9 Metric api \u7684\u6982\u5ff5\uff0c\u800c metrics-server \u5c31\u662f\u8fd9\u79cd\u6982\u5ff5\u4e0b\u5b98\u65b9\u7684\u4e00\u79cd\u5b9e\u73b0\uff0c\u7528\u4e8e\u4ece kubelet \u83b7\u53d6\u6307\u6807\uff0c\u66ff\u6362\u6389\u4e4b\u524d\u7684 heapster","title":"3.2 metric api"},{"location":"chap1/37kubectl_top/#33-kube-aggregator","text":"\u6709\u4e86metrics-server\u7ec4\u4ef6\uff0c\u91c7\u96c6\u5230\u4e86\u9700\u8981\u7684\u6570\u636e\uff0c\u4e5f\u66b4\u9732\u4e86\u63a5\u53e3\uff0c\u4f46\u8d70\u5230\u8fd9\u4e00\u6b65\u548c heapster \u5176\u5b9e\u6ca1\u6709\u533a\u522b\uff0c\u6700\u5173\u952e\u7684\u4e00\u6b65\u5c31\u662f\u5982\u4f55\u5c06\u6253\u5230 apiserver\u7684/apis/metrics.k8s.io \u8bf7\u6c42\u8f6c\u53d1\u7ed9 metrics-server \u7ec4\u4ef6\uff1f \u89e3\u51b3\u65b9\u6848\u5c31\u662f\uff1a kube-aggregator \u3002 kube-aggregator \u662f\u5bf9 apiserver \u7684\u6709\u529b\u6269\u5c55\uff0c\u5b83\u5141\u8bb8k8s\u7684\u5f00\u53d1\u4eba\u5458\u7f16\u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u670d\u52a1\uff0c\u5e76\u628a\u8fd9\u4e2a\u670d\u52a1\u6ce8\u518c\u5230k8s\u7684 ap i\u91cc\u9762\uff0c\u5373\u6269\u5c55 API \uff0c metric-server \u5176\u5b9e\u5728 1.7 \u7248\u672c\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86\uff0c\u53ea\u662f\u5728\u7b49 kube-aggregator \u7684\u51fa\u73b0\u3002 kube-aggregator\u662f apiserver \u4e2d\u7684\u5b9e\u73b0\uff0c\u6709\u4e9b k8s \u7248\u672c\u9ed8\u8ba4\u6ca1\u5f00\u542f\uff0c\u4f60\u53ef\u4ee5\u52a0\u4e0a\u8fd9\u4e9b \u914d\u7f6e \u6765\u5f00\u542f\u3002\u4ed6\u7684\u6838\u5fc3\u529f\u80fd\u662f\u52a8\u6001\u6ce8\u518c\u3001\u53d1\u73b0\u6c47\u603b\u3001\u5b89\u5168\u4ee3\u7406\u3002 \u5982 metric-server \u6ce8\u518c pod \u548c node \u65f6:","title":"3.3 kube-aggregator"},{"location":"chap1/37kubectl_top/#34","text":"\u5728\u63d0\u51fa metric api \u7684\u6982\u5ff5\u65f6\uff0c\u5b98\u65b9\u4e5f\u63d0\u51fa\u4e86\u65b0\u7684\u76d1\u63a7\u4f53\u7cfb\uff0c\u76d1\u63a7\u8d44\u6e90\u88ab\u5206\u4e3a\u4e862\u79cd\uff1a Core metrics (\u6838\u5fc3\u6307\u6807)\uff1a\u4ece Kubelet \u3001 cAdvisor \u7b49\u83b7\u53d6\u5ea6\u91cf\u6570\u636e\uff0c\u518d\u7531 metrics-server \u63d0\u4f9b\u7ed9 Dashboard \u3001 HPA \u63a7\u5236\u5668\u7b49\u4f7f\u7528\u3002 Custom Metrics (\u81ea\u5b9a\u4e49\u6307\u6807)\uff1a\u7531 Prometheus Adapter \u63d0\u4f9b API custom.metrics.k8s.io \uff0c\u7531\u6b64\u53ef\u652f\u6301\u4efb\u610f Prometheus \u91c7\u96c6\u5230\u7684\u6307\u6807\u3002 \u6838\u5fc3\u6307\u6807\u53ea\u5305\u542b node \u548c pod \u7684 cpu \u3001\u5185\u5b58\u7b49\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u6838\u5fc3\u6307\u6807\u4f5cHPA\u5df2\u7ecf\u8db3\u591f\uff0c\u4f46\u5982\u679c\u60f3\u6839\u636e\u81ea\u5b9a\u4e49\u6307\u6807:\u5982\u8bf7\u6c42 qps/5xx \u9519\u8bef\u6570\u6765\u5b9e\u73b0HPA\uff0c\u5c31\u9700\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u6307\u6807\u4e86\u3002 \u76ee\u524d Kubernetes \u4e2d\u81ea\u5b9a\u4e49\u6307\u6807\u4e00\u822c\u7531 Prometheus \u6765\u63d0\u4f9b\uff0c\u518d\u5229\u7528 k8s-prometheus-adpater \u805a\u5408\u5230 apiserver \uff0c\u5b9e\u73b0\u548c\u6838\u5fc3\u6307\u6807\uff08 metric-server )\u540c\u6837\u7684\u6548\u679c\u3002","title":"3.4 \u76d1\u63a7\u4f53\u7cfb"},{"location":"chap1/37kubectl_top/#35-kubelet","text":"\u524d\u9762\u63d0\u5230\uff0c\u65e0\u8bba\u662f heapster \u8fd8\u662f metric-server \uff0c\u90fd\u53ea\u662f\u6570\u636e\u7684\u4e2d\u8f6c\u548c\u805a\u5408\uff0c\u4e24\u8005\u90fd\u662f\u8c03\u7528\u7684 kubelet \u7684 api \u63a5\u53e3\u83b7\u53d6\u7684\u6570\u636e\uff0c\u800c kubelet \u4ee3\u7801\u4e2d\u5b9e\u9645\u91c7\u96c6\u6307\u6807\u7684\u662f cadvisor \u6a21\u5757\uff0c\u4f60\u53ef\u4ee5\u5728 node \u8282\u70b9\u8bbf\u95ee 10255 \u7aef\u53e3 \uff08 read-only-port )\u83b7\u53d6\u76d1\u63a7\u6570\u636e\uff1a Kubelet Summary metrics: 127.0.0.1:10255/metrics \uff0c\u66b4\u9732 node\u3001pod \u6c47\u603b\u6570\u636e Cadvisor metrics: 127.0.0.1:10255/metrics/cadvisor \uff0c\u66b4\u9732 container \u7ef4\u5ea6\u6570\u636e \u793a\u4f8b\uff0c\u5bb9\u5668\u7684\u5185\u5b58\u4f7f\u7528\u91cf\uff1a kubelet\u867d\u7136\u63d0\u4f9b\u4e86 metric \u63a5\u53e3\uff0c\u4f46\u5b9e\u9645\u76d1\u63a7\u903b\u8f91\u7531\u5185\u7f6e\u7684 cAdvisor \u6a21\u5757\u8d1f\u8d23\uff0c\u6f14\u53d8\u8fc7\u7a0b\u5982\u4e0b\uff1a \u4ece k8s 1.6 \u5f00\u59cb\uff0c kubernetes \u5c06 cAdvisor \u5f00\u59cb\u96c6\u6210\u5728 kubelet \u4e2d\uff0c\u4e0d\u9700\u8981\u5355\u72ec\u914d\u7f6e \u4ece k8s 1.7 \u5f00\u59cb\uff0c Kubelet metrics API \u4e0d\u518d\u5305\u542b cadvisor metrics \uff0c\u800c\u662f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684 API \u63a5\u53e3\u6765\u505a\u6c47\u603b \u4ece k8s 1.12 \u5f00\u59cb\uff0c cadvisor \u76d1\u542c\u7684\u7aef\u53e3\u5728 k8s \u4e2d\u88ab\u5220\u9664\uff0c\u6240\u6709\u76d1\u63a7\u6570\u636e\u7edf\u4e00\u7531 Kubelet \u7684 API \u63d0\u4f9b \u5230\u8fd9\u91cc\u4e3a\u6b62\uff0c k8s \u8303\u56f4\u5185\u7684\u76d1\u63a7\u4f53\u7cfb\u5c31\u7ed3\u675f\u4e86\uff0c\u5982\u679c\u4f60\u60f3\u7ee7\u7eed\u4e86\u89e3cadvisor\u548c cgroup \u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u5411\u4e0b\u9605\u8bfb","title":"3.5 kubelet"},{"location":"chap1/37kubectl_top/#36-cadvisor","text":"cadvisor\u7531\u8c37\u6b4c\u5f00\u6e90\uff0c\u4f7f\u7528Go\u5f00\u53d1\uff0c\u9879\u76ee\u5730\u5740\u4e5f\u662f google/cadvisor \uff0c cadvisor \u4e0d\u4ec5\u53ef\u4ee5\u641c\u96c6\u4e00\u53f0\u673a\u5668\u4e0a\u6240\u6709\u8fd0\u884c\u7684\u5bb9\u5668\u4fe1\u606f\uff0c\u5305\u62ec CPU \u4f7f\u7528\u60c5\u51b5\u3001\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u3001\u7f51\u7edc\u541e\u5410\u91cf\u53ca\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u60c5\u51b5\uff0c\u8fd8\u63d0\u4f9b\u57fa\u7840\u67e5\u8be2\u754c\u9762\u548chttp\u63a5\u53e3\uff0c\u65b9\u4fbf\u5176\u4ed6\u7ec4\u4ef6\u8fdb\u884c\u6570\u636e\u6293\u53d6\u3002\u5728K8S\u4e2d\u96c6\u6210\u5728Kubelet\u91cc\u4f5c\u4e3a\u9ed8\u8ba4\u542f\u52a8\u9879\uff0ck8s\u5b98\u65b9\u6807\u914d\u3002 cadvisor \u62ff\u5230\u7684\u6570\u636e\u7ed3\u6784\u793a\u4f8b\uff1a \u6838\u5fc3\u903b\u8f91\uff1a \u901a\u8fc7 new \u51fa\u6765\u7684 memoryStorage \u4ee5\u53ca sysfs \u5b9e\u4f8b\uff0c\u521b\u5efa\u4e00\u4e2a manager \u5b9e\u4f8b\uff0c manager \u7684 interface \u4e2d\u5b9a\u4e49\u4e86\u8bb8\u591a\u7528\u4e8e\u83b7\u53d6\u5bb9\u5668\u548c machine \u4fe1\u606f\u7684\u51fd\u6570 cadvisor\u7684\u6307\u6807\u89e3\u8bfb\uff1a cgroup-v1 cadvisor \u83b7\u53d6\u6307\u6807\u65f6\u5b9e\u9645\u8c03\u7528\u7684\u662f runc/libcontainer \u5e93\uff0c\u800c libcontainer \u662f\u5bf9 cgroup \u6587\u4ef6 \u7684\u5c01\u88c5\uff0c\u5373 cadvsio r\u4e5f\u53ea\u662f\u4e2a\u8f6c\u53d1\u8005\uff0c\u5b83\u7684\u6570\u636e\u6765\u81ea\u4e8e cgroup \u6587\u4ef6\u3002","title":"3.6 cadvisor"},{"location":"chap1/37kubectl_top/#37-cgroup","text":"cgroup\u6587\u4ef6\u4e2d\u7684\u503c\u662f\u76d1\u63a7\u6570\u636e\u7684\u6700\u7ec8\u6765\u6e90\uff0c\u5982 mem usage \u7684\u503c\uff0c\u6765\u81ea\u4e8e /sys/fs/cgroup/memory/docker/[containerId]/memory.usage_in_bytes \u5982\u679c\u6ca1\u9650\u5236\u5185\u5b58\uff0c Limit = machine_mem \uff0c\u5426\u5219\u6765\u81ea\u4e8e /sys/fs/cgroup/memory/docker/[id]/memory.limit_in_bytes \u5185\u5b58\u4f7f\u7528\u7387 = memory.usage_in_bytes/memory.limit_in_bytes \u4e00\u822c\u60c5\u51b5\u4e0b\uff0ccgroup\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9\u5305\u62ecCPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\u4fe1\u606f\uff1a \u5982memory\u4e0b\u7684\u51e0\u4e2a\u5e38\u7528\u7684\u6307\u6807\u542b\u4e49\uff1a memory.stat \u4e2d\u7684\u4fe1\u606f\u662f\u6700\u5168\u7684\uff1a \u539f\u7406\u5230\u8fd9\u91cc\u7ed3\u675f\uff0c\u8fd9\u91cc\u89e3\u91ca\u4e0b\u6700\u5f00\u59cb\u7684kubectl top \u7684\u51e0\u4e2a\u95ee\u9898\uff1a","title":"3.7 cgroup"},{"location":"chap1/37kubectl_top/#_1","text":"","title":"\u56db. \u95ee\u9898"},{"location":"chap1/37kubectl_top/#41-kubectl-top","text":"\u4e00\u822c\u60c5\u51b5\u4e0b top \u62a5\u9519\u6709\u4ee5\u4e0b\u51e0\u79cd\uff0c\u53ef\u4ee5 kubectl top pod -v=10 \u770b\u5230\u5177\u4f53\u7684\u8c03\u7528\u65e5\u5fd7: \u6ca1\u6709\u90e8\u7f72 heapster \u6216\u8005 metric-server \uff0c\u6216\u8005 pod \u8fd0\u884c\u5f02\u5e38\uff0c\u53ef\u4ee5\u6392\u67e5\u5bf9\u5e94 pod \u65e5\u5fd7 \u8981\u770b\u7684 pod \u521a\u521a\u5efa\u51fa\u6765\uff0c\u8fd8\u6ca1\u6765\u5f97\u53ca\u91c7\u96c6\u6307\u6807\uff0c\u62a5 not found \u9519\u8bef\uff0c\u9ed8\u8ba4 1 \u5206\u949f \u4ee5\u4e0a\u4e24\u79cd\u90fd\u4e0d\u662f\uff0c\u53ef\u4ee5\u68c0\u67e5\u4e0b kubelet \u7684 10255 \u7aef\u53e3\u662f\u5426\u5f00\u653e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u53ea\u8bfb\u7aef\u53e3\u83b7\u53d6\u6307\u6807\uff0c\u4e5f\u53ef\u4ee5\u5728 heapster \u6216 metric-server \u7684\u914d\u7f6e\u4e2d\u589e\u52a0\u8bc1\u4e66\uff0c\u6362\u6210 10250 \u8ba4\u8bc1\u7aef\u53e3","title":"4.1 kubectl top \u4e3a\u4ec0\u4e48\u4f1a\u62a5\u9519"},{"location":"chap1/37kubectl_top/#42-kubectl-top-pod-pause","text":"\u6bcf\u6b21\u542f\u52a8 pod \uff0c\u90fd\u4f1a\u6709\u4e00\u4e2a pause \u5bb9\u5668\uff0c\u65e2\u7136\u662f\u5bb9\u5668\u5c31\u4e00\u5b9a\u6709\u8d44\u6e90\u6d88\u8017\uff08\u4e00\u822c\u5728 2-3M \u7684\u5185\u5b58\uff09\uff0c cgroup \u6587\u4ef6\u4e2d\uff0c\u4e1a\u52a1\u5bb9\u5668\u548c pause \u5bb9\u5668\u90fd\u5728\u540c\u4e00\u4e2a pod\u7684\u6587\u4ef6\u5939\u4e0b\u3002 \u4f46 cadvisor \u5728\u67e5\u8be2 pod \u7684\u5185\u5b58\u4f7f\u7528\u91cf\u65f6\uff0c\u662f\u5148\u83b7\u53d6\u4e86 pod \u4e0b\u7684 container \u5217\u8868\uff0c\u518d\u9010\u4e2a\u83b7\u53d6 container \u7684\u5185\u5b58\u5360\u7528\uff0c \u4e0d\u8fc7\u8fd9\u91cc\u7684 container \u5217\u8868\u5e76\u6ca1\u6709\u5305\u542b pause \uff0c \u56e0\u6b64\u6700\u7ec8 top pod \u7684\u7ed3\u679c\u4e5f\u4e0d\u5305\u542b pause \u5bb9\u5668","title":"4.2 kubectl top pod \u5185\u5b58\u600e\u4e48\u8ba1\u7b97\uff0c\u5305\u542b pause\u5bb9\u5668\u5417"},{"location":"chap1/37kubectl_top/#pod","text":"kubectl top pod \u5f97\u5230\u7684\u5185\u5b58\u4f7f\u7528\u91cf\uff0c\u5e76\u4e0d\u662f cadvisor \u4e2d\u7684 container_memory_usage_bytes \uff0c\u800c\u662f container_memory_working_set_bytes \uff0c\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a container_memory_usage_bytes == container_memory_rss + container_memory_cache + kernel memory container_memory_working_set_bytes = container_memory_usage_bytes \u2013 total_inactive_file \uff08\u672a\u6fc0\u6d3b\u7684\u533f\u540d\u7f13\u5b58\u9875\uff09 container_memory_working_set_bytes \u662f\u5bb9\u5668\u771f\u5b9e\u4f7f\u7528\u7684\u5185\u5b58\u91cf\uff0c\u4e5f\u662f limit \u9650\u5236\u65f6\u7684 oom \u5224\u65ad\u4f9d\u636e cadvisor \u4e2d\u7684 container_memory_usage_bytes \u5bf9\u5e94 cgroup \u4e2d\u7684 memory.usage_in_bytes \u6587\u4ef6\uff0c\u4f46 container_memory_working_set_bytes \u5e76\u6ca1\u6709\u5177\u4f53\u7684\u6587\u4ef6\uff0c\u4ed6\u7684\u8ba1\u7b97\u903b\u8f91\u5728 cadvisor \u7684\u4ee3\u7801\u4e2d\uff0c\u5982\u4e0b\uff1a \u540c\u7406\uff0cnode \u7684\u5185\u5b58\u4f7f\u7528\u91cf\u4e5f\u662f container_memory_working_set_bytes","title":"pod \u7684\u5185\u5b58\u4f7f\u7528\u91cf\u8ba1\u7b97"},{"location":"chap1/37kubectl_top/#43-kubectl-top-node-top","text":"kubectl top node \u5f97\u5230\u7684 cpu \u548c\u5185\u5b58\u503c\uff0c\u5e76\u4e0d\u662f\u8282\u70b9\u4e0a\u6240\u6709 pod \u7684\u603b\u548c\uff0c\u4e0d\u8981\u76f4\u63a5\u76f8\u52a0\u3002 top node \u662f\u673a\u5668\u4e0a cgroup \u6839\u76ee\u5f55\u4e0b\u7684\u6c47\u603b\u7edf\u8ba1 \u5728\u673a\u5668\u4e0a\u76f4\u63a5 top\u547d\u4ee4\u770b\u5230\u7684\u503c\u548c kubectl top node \u4e0d\u80fd\u76f4\u63a5\u5bf9\u6bd4\uff0c\u56e0\u4e3a\u8ba1\u7b97\u903b\u8f91\u4e0d\u540c\uff0c\u5982\u5185\u5b58\uff0c\u5927\u81f4\u7684\u5bf9\u5e94\u5173\u7cfb\u662f(\u524d\u8005\u662f\u673a\u5668\u4e0a top\uff0c\u540e\u8005\u662fkubectl top) : rss + cache = (in)active_anon + (in)active_file","title":"4.3 kubectl top node \u600e\u4e48\u8ba1\u7b97\uff0c\u548c\u8282\u70b9\u4e0a\u76f4\u63a5 top \u6709\u4ec0\u4e48\u533a\u522b"},{"location":"chap1/37kubectl_top/#44-kubectl-top-pod-exec-pod-top","text":"top\u547d\u4ee4\u7684\u5dee\u5f02\u548c\u4e0a\u8fb9 \u4e00\u81f4\uff0c\u65e0\u6cd5\u76f4\u63a5\u5bf9\u6bd4\uff0c\u540c\u65f6\uff0c\u5c31\u7b97\u4f60\u5bf9 pod \u505a\u4e86 limit \u9650\u5236\uff0c pod \u5185\u7684 top \u770b\u5230\u7684\u5185\u5b58\u548c cpu \u603b\u91cf\u4ecd\u7136\u662f\u673a\u5668\u603b\u91cf\uff0c\u5e76\u4e0d\u662f pod \u53ef\u5206\u914d\u91cf \u8fdb\u7a0b\u7684 RSS \u4e3a\u8fdb\u7a0b\u4f7f\u7528\u7684\u6240\u6709\u7269\u7406\u5185\u5b58\uff08 file_rss\uff0banon_rss \uff09\uff0c\u5373 Anonymous pages\uff0bMapped apges \uff08\u5305\u542b\u5171\u4eab\u5185\u5b58\uff09 cgroup RSS \u4e3a\uff08 anonymous and swap cache memory \uff09\uff0c\u4e0d\u5305\u542b\u5171\u4eab\u5185\u5b58\u3002\u4e24\u8005\u90fd\u4e0d\u5305\u542b file cache","title":"4.4 kubectl top pod \u548cexec \u8fdb\u5165 pod \u540e\u770b\u5230\u7684 top \u4e0d\u4e00\u6837"},{"location":"chap1/37kubectl_top/#45-kubectl-top-pod-docker-stats","text":"docker stats dockerID \u53ef\u4ee5\u770b\u5230\u5bb9\u5668\u5f53\u524d\u7684\u4f7f\u7528\u91cf\uff1a \u5982\u679c\u4f60\u7684 pod \u4e2d\u53ea\u6709\u4e00\u4e2a container \uff0c\u4f60\u4f1a\u53d1\u73b0 docker stats \u503c\u4e0d\u7b49\u4e8e kubectl top \u7684\u503c\uff0c\u65e2\u4e0d\u7b49\u4e8e container_memory_usage_bytes \uff0c\u4e5f\u4e0d\u7b49\u4e8e container_memory_working_set_bytes \u3002 \u56e0\u4e3a docker stats \u548c cadvisor \u7684\u8ba1\u7b97\u65b9\u5f0f\u4e0d\u540c\uff0c\u603b\u4f53\u503c\u4f1a\u5c0f\u4e8e kubectl top \uff1a\u8ba1\u7b97\u903b\u8f91\u662f\uff1a docker stats = container_memory_usage_bytes - container_memory_cache","title":"4.5 kubectl top pod \u548c docker stats\u5f97\u5230\u7684\u503c\u4e3a\u4ec0\u4e48\u4e0d\u540c\uff1f"},{"location":"chap1/37kubectl_top/#_2","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u65f6\u523b\u5173\u5fc3node \u6216 pod \u7684\u4f7f\u7528\u91cf\uff0c\u56e0\u4e3a\u6709\u96c6\u7fa4\u81ea\u52a8\u6269\u7f29\u5bb9(cluster-autoscaler)\u548cpod \u6c34\u5e73\u6269\u7f29\u5bb9\uff08 HPA \uff09\u6765\u5e94\u5bf9\u8fd9\u4e24\u79cd\u8d44\u6e90\u53d8\u5316\uff0c\u8d44\u6e90\u6307\u6807\u7684\u610f\u4e49\u66f4\u9002\u5408\u4f7f\u7528 prometheus \u6765\u6301\u4e45\u5316 cadvisor \u7684\u6570\u636e\uff0c\u7528\u4e8e\u56de\u6eaf\u5386\u53f2\u6216\u8005\u53d1\u9001\u62a5\u8b66\u3002 \u5176\u4ed6\u8865\u5145\uff1a \u867d\u7136 kubectl top help \u4e2d\u663e\u793a\u652f\u6301 Storage \uff0c\u4f46\u76f4\u5230 1.16 \u7248\u672c\u4ecd\u7136\u4e0d\u652f\u6301 1.13 \u4e4b\u524d\u9700\u8981 heapster\uff0c1.13 \u4ee5\u540e\u9700\u8981 metric-server \uff0c\u8fd9\u90e8\u5206 kubectl top help \u7684\u8f93\u51fa \u6709\u8bef\uff0c\u91cc\u9762\u53ea\u63d0\u5230\u4e86heapster k8s dashboard \u4e2d\u7684\u76d1\u63a7\u56fe\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f heapster \uff0c\u5207\u6362\u4e3a metric-server \u540e\u6570\u636e\u4f1a\u5f02\u5e38\uff0c\u9700\u8981\u591a\u90e8\u7f72\u4e00\u4e2a metric-server-scraper \u7684 pod \u6765\u505a\u63a5\u53e3\u8f6c\u6362\uff0c\u5177\u4f53\u53c2\u8003 pr\uff1a https://github.com/kubernetes/dashboard/pull/3504","title":"\u4e94. \u540e\u8bb0"},{"location":"chap1/38k8s_hpa_metricsserver/","text":"\u7b2c\u516d\u8282 Kubernetes HPA \u4f7f\u7528\u8be6\u89e3(Metrics Server/CPU/Mem/adapater) Metrics Server \u57fa\u4e8e CPU \u7684 HPA \u57fa\u4e8e\u5185\u5b58 \u7684 HPA \u57fa\u4e8e\u81ea\u5b9a\u4e49\u6307\u6807 \u548c Prometheus-adapater \u7684 HPA \u5728\u524d\u9762\u7684\u5b66\u4e60\u4e2d\u6211\u4eec\u4f7f\u7528\u7528\u4e00\u4e2a kubectl scale \u547d\u4ee4\u53ef\u4ee5\u6765\u5b9e\u73b0 Pod \u7684\u6269\u7f29\u5bb9\u529f\u80fd\uff0c\u4f46\u662f\u8fd9\u4e2a\u6bd5\u7adf\u662f\u5b8c\u5168\u624b\u52a8\u64cd\u4f5c\u7684\uff0c\u8981\u5e94\u5bf9\u7ebf\u4e0a\u7684\u5404\u79cd\u590d\u6742\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u505a\u5230\u81ea\u52a8\u5316\u53bb\u611f\u77e5\u4e1a\u52a1\uff0c\u6765\u81ea\u52a8\u8fdb\u884c\u6269\u7f29\u5bb9\u3002 \u4e3a\u6b64\uff0c Kubernetes \u4e5f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u6837\u7684\u4e00\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff1a Horizontal Pod Autoscaling \uff08Pod \u6c34\u5e73\u81ea\u52a8\u4f38\u7f29\uff09\uff0c\u7b80\u79f0 HPA \uff0c HPA \u901a\u8fc7\u76d1\u63a7\u5206\u6790\u4e00\u4e9b\u63a7\u5236\u5668\u63a7\u5236\u7684\u6240\u6709 Pod \u7684\u8d1f\u8f7d\u53d8\u5316\u60c5\u51b5\u6765\u786e\u5b9a\u662f\u5426\u9700\u8981\u8c03\u6574 Pod \u7684\u526f\u672c\u6570\u91cf\uff0c\u8fd9\u662f HPA \u6700\u57fa\u672c\u7684\u539f\u7406\uff1a \u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u901a\u8fc7 kubectl autoscale \u547d\u4ee4\u6765\u521b\u5efa\u4e00\u4e2a HPA \u8d44\u6e90\u5bf9\u8c61\uff0c HPA Controller \u9ed8\u8ba4 30s \u8f6e\u8be2\u4e00\u6b21\uff08\u53ef\u901a\u8fc7 kube-controller-manager \u7684 --horizontal-pod-autoscaler-sync-period \u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\uff09 \uff0c\u67e5\u8be2\u6307\u5b9a\u7684\u8d44\u6e90\u4e2d\u7684 Pod \u8d44\u6e90\u4f7f\u7528\u7387\uff0c\u5e76\u4e14\u4e0e\u521b\u5efa\u65f6\u8bbe\u5b9a\u7684\u503c\u548c\u6307\u6807\u505a\u5bf9\u6bd4\uff0c\u4ece\u800c\u5b9e\u73b0\u81ea\u52a8\u4f38\u7f29\u7684\u529f\u80fd\u3002 1 Metrics Server \u5728 HPA \u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u9700\u8981 Heapster \u63d0\u4f9b CPU \u548c\u5185\u5b58\u6307\u6807\uff0c\u5728 HPA v2 \u8fc7\u540e\u5c31\u9700\u8981\u5b89\u88c5 Metrcis Server \u4e86\uff0c Metrics Server \u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 Kubernetes API \u628a\u76d1\u63a7\u6570\u636e\u66b4\u9732\u51fa\u6765\uff0c\u6709\u4e86 Metrics Server \u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 Kubernetes API \u6765\u8bbf\u95ee\u6211\u4eec\u60f3\u8981\u83b7\u53d6\u7684\u76d1\u63a7\u6570\u636e\u4e86\uff1a https://10.96.0.1/apis/metrics.k8s.io/v1beta1/namespaces/<namespace-name>/pods/<pod-name> \u6bd4\u5982\u5f53\u6211\u4eec\u8bbf\u95ee\u4e0a\u9762\u7684 API \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230\u8be5 Pod \u7684\u8d44\u6e90\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5176\u5b9e\u662f\u6765\u81ea\u4e8e kubelet \u7684 Summary API \u91c7\u96c6\u800c\u6765\u7684\u3002 \u4e0d\u8fc7\u9700\u8981\u8bf4\u660e\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 API \u6765\u83b7\u53d6\u8d44\u6e90\u76d1\u63a7\u6570\u636e\uff0c\u5e76\u4e0d\u662f\u56e0\u4e3a Metrics Server \u5c31\u662f APIServer \u7684\u4e00\u90e8\u5206\uff0c \u800c\u662f\u901a\u8fc7 Kubernetes \u63d0\u4f9b\u7684 Aggregator \u6c47\u805a\u63d2\u4ef6\u6765\u5b9e\u73b0\u7684\uff0c\u662f\u72ec\u7acb\u4e8e APIServer \u4e4b\u5916\u8fd0\u884c\u7684 \u3002 1-1 \u805a\u5408 API Aggregator \u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u7f16\u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u670d\u52a1\uff0c\u628a\u8fd9\u4e2a\u670d\u52a1\u6ce8\u518c\u5230 Kubernetes \u7684 APIServer \u91cc\u9762\u53bb\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u50cf\u539f\u751f\u7684 APIServer \u63d0\u4f9b\u7684 API \u4f7f\u7528\u81ea\u5df1\u7684 API \u4e86\uff0c\u6211\u4eec\u628a\u81ea\u5df1\u7684\u670d\u52a1\u8fd0\u884c\u5728 Kubernetes \u96c6\u7fa4\u91cc\u9762\uff0c \u7136\u540e Kubernetes \u7684 Aggregator \u901a\u8fc7 Service \u540d\u79f0\u5c31\u53ef\u4ee5\u8f6c\u53d1\u5230\u6211\u4eec\u81ea\u5df1\u5199\u7684 Service \u91cc\u9762\u53bb\u4e86 \u3002 \u8fd9\u6837\u8fd9\u4e2a\u805a\u5408\u5c42\u5c31\u5e26\u6765\u4e86\u5f88\u591a\u597d\u5904\uff1a \u589e\u52a0\u4e86 API \u7684\u6269\u5c55\u6027\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684 API \u670d\u52a1\u6765\u66b4\u9732\u4ed6\u4eec\u60f3\u8981\u7684 API \u3002 \u4e30\u5bcc\u4e86 API \uff0c\u6838\u5fc3 kubernetes \u56e2\u961f\u963b\u6b62\u4e86\u5f88\u591a\u65b0\u7684 API \u63d0\u6848\uff0c\u901a\u8fc7\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5c06\u4ed6\u4eec\u7684 API \u4f5c\u4e3a\u5355\u72ec\u7684\u670d\u52a1\u516c\u5f00\uff0c\u8fd9\u6837\u5c31\u65e0\u987b\u793e\u533a\u7e41\u6742\u7684\u5ba1\u67e5\u4e86\u3002 \u5f00\u53d1\u5206\u9636\u6bb5\u5b9e\u9a8c\u6027 API \uff0c\u65b0\u7684 API \u53ef\u4ee5\u5728\u5355\u72ec\u7684\u805a\u5408\u670d\u52a1\u4e2d\u5f00\u53d1\uff0c\u5f53\u5b83\u7a33\u5b9a\u4e4b\u540e\uff0c\u5728\u5408\u5e76\u4f1a APIServer \u5c31\u5f88\u5bb9\u6613\u4e86\u3002 \u786e\u4fdd\u65b0 API \u9075\u5faa Kubernetes \u7ea6\u5b9a\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u91cc\u63d0\u51fa\u7684\u673a\u5236\uff0c\u793e\u533a\u6210\u5458\u53ef\u80fd\u4f1a\u88ab\u8feb\u63a8\u51fa\u81ea\u5df1\u7684\u4e1c\u897f\uff0c\u8fd9\u6837\u5f88\u53ef\u80fd\u9020\u6210\u793e\u533a\u6210\u5458\u548c\u793e\u533a\u7ea6\u5b9a\u4e0d\u4e00\u81f4\u3002 1-2 \u5b89\u88c5 \u6240\u4ee5\u73b0\u5728\u6211\u4eec\u8981\u4f7f\u7528 HPA \uff0c\u5c31\u9700\u8981\u5728\u96c6\u7fa4\u4e2d\u5b89\u88c5 Metrics Server \u670d\u52a1\uff0c\u8981\u5b89\u88c5 Metrics Server \u5c31\u9700\u8981\u5f00\u542f Aggregator \uff0c\u56e0\u4e3a Metrics Server \u5c31\u662f\u901a\u8fc7\u8be5\u4ee3\u7406\u8fdb\u884c\u6269\u5c55\u7684\uff0c\u4e0d\u8fc7\u6211\u4eec\u96c6\u7fa4\u662f\u901a\u8fc7 Kubeadm \u642d\u5efa\u7684\uff0c\u9ed8\u8ba4\u5df2\u7ecf\u5f00\u542f\u4e86\uff0c\u5982\u679c\u662f\u4e8c\u8fdb\u5236\u65b9\u5f0f\u5b89\u88c5\u7684\u96c6\u7fa4\uff0c\u9700\u8981\u5355\u72ec\u914d\u7f6e kube-apsierver \u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u53c2\u6570\uff1a --requestheader-client-ca-file=<path to aggregator CA cert> --requestheader-allowed-names=aggregator --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --proxy-client-cert-file=<path to aggregator proxy cert> --proxy-client-key-file=<path to aggregator proxy key> - --requestheader-allowed-names=front-proxy-client \u5982\u679c kube-proxy \u6ca1\u6709\u548c APIServer \u8fd0\u884c\u5728\u540c\u4e00\u53f0\u4e3b\u673a\u4e0a\uff0c\u90a3\u4e48\u9700\u8981\u786e\u4fdd\u542f\u7528\u4e86\u5982\u4e0b kube-apsierver \u7684\u53c2\u6570\uff1a --enable-aggregator-routing=true \u5bf9\u4e8e\u8fd9\u4e9b\u8bc1\u4e66\u7684\u751f\u6210\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1ahttps://github.com/kubernetes-sigs/apiserver-builder-alpha/blob/master/docs/concepts/auth.md\u3002 Aggregator \u805a\u5408\u5c42\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u6765\u5b89\u88c5 Metrics Server \u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u8be5\u4ed3\u5e93\u7684\u5b98\u65b9\u5b89\u88c5\u8d44\u6e90\u6e05\u5355\uff1a $ git clone https://github.com/kubernetes-incubator/metrics-server $ cd metrics-server $ kubectl apply -f deploy/1.8+/ \u5728\u90e8\u7f72\u4e4b\u524d\uff0c\u4fee\u6539 metrcis-server/deploy/1.8+/metrics-server-deployment.yaml \u7684\u955c\u50cf\u5730\u5740\u4e3a\uff1a containers: - name: metrics-server image: gcr.azk8s.cn/google_containers/metrics-server-amd64:v0.3.6 \u7b49\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u67e5\u770b Pod \u65e5\u5fd7\u662f\u5426\u6b63\u5e38\uff1a $ kubectl get pods -n kube-system -l k8s-app=metrics-server NAME READY STATUS RESTARTS AGE metrics-server-6886856d7c-g5k6q 1/1 Running 0 2m39s $ kubectl logs -f metrics-server-6886856d7c-g5k6q -n kube-system ...... E1119 09:05:57.234312 1 manager.go:111] unable to fully collect metrics: [unable to fully scrape metrics from source kubelet_summary:jxi-node1: unable to fetch metrics from Kubelet jxi-node1 (jxi-node1): Get https://jxi-node1:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node1 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node4: unable to fetch metrics from Kubelet jxi-node4 (jxi-node4): Get https://jxi-node4:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node4 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node3: unable to fetch metrics from Kubelet jxi-node3 (jxi-node3): Get https://jxi-node3:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node3 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-master: unable to fetch metrics from Kubelet jxi-master (jxi-master): Get https://jxi-master:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-master on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node2: unable to fetch metrics from Kubelet jxi-node2 (jxi-node2): Get https://jxi-node2:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node2 on 10.96.0.10:53: no such host] \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 Pod \u4e2d\u51fa\u73b0\u4e86\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f\uff1a xxx: no such host \uff0c\u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u9519\u8bef\u4fe1\u606f\u4e00\u822c\u5c31\u53ef\u4ee5\u786e\u5b9a\u662f DNS \u89e3\u6790\u4e0d\u4e86\u9020\u6210\u7684\uff0c \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Metrics Server \u4f1a\u901a\u8fc7 kubelet \u7684 10250 \u7aef\u53e3\u83b7\u53d6\u4fe1\u606f\uff0c\u4f7f\u7528\u7684\u662f hostname \uff0c\u6211\u4eec\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\u5728\u8282\u70b9\u7684 /etc/hosts \u91cc\u9762\u6dfb\u52a0\u4e86\u8282\u70b9\u7684 hostname \u548c ip \u7684\u6620\u5c04 \uff0c \u4f46\u662f\u662f\u6211\u4eec\u7684 Metrics Server \u7684 Pod \u5185\u90e8\u5e76\u6ca1\u6709\u8fd9\u4e2a hosts \u4fe1\u606f\uff0c\u5f53\u7136\u4e5f\u5c31\u4e0d\u8bc6\u522b hostname \u4e86 \uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u7b2c\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728\u96c6\u7fa4\u5185\u90e8\u7684 DNS \u670d\u52a1\u91cc\u9762\u6dfb\u52a0\u4e0a hostname \u7684\u89e3\u6790\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u96c6\u7fa4\u4e2d\u4f7f\u7528\u7684\u662f CoreDNS \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u4fee\u6539\u4e0b CoreDNS \u7684 Configmap \u4fe1\u606f\uff0c\u6dfb\u52a0\u4e0a hosts \u4fe1\u606f \uff1a $ kubectl edit configmap coredns -n kube-system apiVersion: v1 data: Corefile: | .:53 { errors health hosts { # \u6dfb\u52a0\u96c6\u7fa4\u8282\u70b9hosts\u9690\u5c04\u4fe1\u606f 10.151.30.11 jxi-master 10.151.30.57 jxi-node3 10.151.30.59 jxi-node4 10.151.30.22 jxi-node1 10.151.30.23 jxi-node2 fallthrough } kubernetes cluster.local in-addr.arpa ip6.arpa { pods insecure upstream fallthrough in-addr.arpa ip6.arpa } prometheus :9153 proxy . /etc/resolv.conf cache 30 reload } kind: ConfigMap metadata: creationTimestamp: 2019-05-18T11:07:46Z name: coredns namespace: kube-system \u8fd9\u6837\u5f53\u5728\u96c6\u7fa4\u5185\u90e8\u8bbf\u95ee\u96c6\u7fa4\u7684 hostname \u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u89e3\u6790\u5230\u5bf9\u5e94\u7684 ip \u4e86\uff0c \u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728 metrics-server \u7684\u542f\u52a8\u53c2\u6570\u4e2d\u4fee\u6539 kubelet-preferred-address-types \u53c2\u6570 \uff0c\u5982\u4e0b\uff1a args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-preferred-address-types=InternalIP \u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u7136\u540e\u91cd\u65b0\u5b89\u88c5\uff1a $ kubectl get pods -n kube-system -l app=metrics-server NAME READY STATUS RESTARTS AGE metric-metrics-server-6d4d4f6dc4-c8hhl 1/1 Running 0 2d11h $ kubectl logs -f metric-metrics-server-58fc94d9f-jlxcb -n kube-system ...... E1119 09:05:57.234312 1 manager.go:111] unable to fully collect metrics: [unable to fully scrape metrics from source kubelet_summary:jxi-node1: unable to fetch metrics from Kubelet jxi-node1 (jxi-node1): Get https://jxi-node1:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node1 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node4: unable to fetch metrics from Kubelet jxi-node4 (jxi-node4): Get https://jxi-node4:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node4 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node3: unable to fetch metrics from Kubelet jxi-node3 (jxi-node3): Get https://jxi-node3:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node3 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-master: unable to fetch metrics from Kubelet jxi-master (jxi-master): Get https://jxi-master:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-master on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node2: unable to fetch metrics from Kubelet jxi-node2 (jxi-node2): Get https://jxi-node2:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node2 on 10.96.0.10:53: no such host] \u56e0\u4e3a\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\uff0c CA \u8bc1\u4e66\u5e76\u6ca1\u6709\u628a\u5404\u4e2a\u8282\u70b9\u7684 IP \u7b7e\u4e0a\u53bb\uff0c\u6240\u4ee5\u8fd9\u91cc Metrics Server \u901a\u8fc7 IP \u53bb\u8bf7\u6c42\u65f6\uff0c\u63d0\u793a\u7b7e\u7684\u8bc1\u4e66\u6ca1\u6709\u5bf9\u5e94\u7684 IP\uff08\u9519\u8bef\uff1ax509: cannot validate certificate for 10.151.30.22 because it doesn\u2019t contain any IP SANs\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a --kubelet-insecure-tls \u53c2\u6570\u8df3\u8fc7\u8bc1\u4e66\u6821\u9a8c\uff1a args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP \u7136\u540e\u518d\u91cd\u65b0\u5b89\u88c5\u5373\u53ef\u6210\u529f\uff01\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u9a8c\u8bc1\uff1a $ kubectl apply -f deploy/1.8+/ $ kubectl get pods -n kube-system -l k8s-app=metrics-server NAME READY STATUS RESTARTS AGE metrics-server-5d4dbb78bb-6klw6 1/1 Running 0 14s $ kubectl logs -f metrics-server-5d4dbb78bb-6klw6 -n kube-system I1119 09:10:44.249092 1 serving.go:312] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key) I1119 09:10:45.264076 1 secure_serving.go:116] Serving securely on [::]:4443 $ kubectl get apiservice | grep metrics v1beta1.metrics.k8s.io kube-system/metrics-server True 9m $ kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\" {\"kind\":\"NodeMetricsList\",\"apiVersion\":\"metrics.k8s.io/v1beta1\",\"metadata\":{\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes\"},\"items\":[{\"metadata\":{\"name\":\"jxi-node3\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/jxi-node3\",\"creationTimestamp\":\"2019-11-19T09:11:53Z\"},\"timestamp\":\"2019-11-19T09:11:38Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"240965441n\",\"memory\":\"3004360Ki\"}},{\"metadata\":{\"name\":\"jxi-node4\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/jxi-node4\",\"creationTimestamp\":\"2019-11-19T09:11:53Z\"},\"timestamp\":\"2019-11-19T09:11:37Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"167036681n\",\"memory\":\"2574664Ki\"}},{\"metadata\":{\"name\":\"jxi-master\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/jxi-master\",\"creationTimestamp\":\"2019-11-19T09:11:53Z\"},\"timestamp\":\"2019-11-19T09:11:38Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"350907350n\",\"memory\":\"2986716Ki\"}},{\"metadata\":{\"name\":\"jxi-node1\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/jxi-node1\",\"creationTimestamp\":\"2019-11-19T09:11:53Z\"},\"timestamp\":\"2019-11-19T09:11:39Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"1319638039n\",\"memory\":\"2094376Ki\"}},{\"metadata\":{\"name\":\"jxi-node2\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/jxi-node2\",\"creationTimestamp\":\"2019-11-19T09:11:53Z\"},\"timestamp\":\"2019-11-19T09:11:36Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"320381888n\",\"memory\":\"3270368Ki\"}}]} $ kubectl top nodes NAME CPU(cores) CPU% MEMORY(bytes) MEMORY% jxi-master 351m 17% 2916Mi 79% jxi-node1 1320m 33% 2045Mi 26% jxi-node2 321m 8% 3193Mi 41% jxi-node3 241m 6% 2933Mi 37% jxi-node4 168m 4% 2514Mi 32% \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl top \u547d\u4ee4\u6765\u83b7\u53d6\u5230\u8d44\u6e90\u6570\u636e\u4e86\uff0c\u8bc1\u660e Metrics Server \u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u4e86\u3002 2 \u57fa\u4e8e CPU \u73b0\u5728\u6211\u4eec\u7528 Deployment \u6765\u521b\u5efa\u4e00\u4e2a Nginx Pod \uff0c\u7136\u540e\u5229\u7528 HPA \u6765\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a\uff08 hpa-demo.yaml \uff09 apiVersion: apps/v1 kind: Deployment metadata: name: hpa-demo spec: selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx ports: - containerPort: 80 \u7136\u540e\u76f4\u63a5\u521b\u5efa Deployment \uff1a $ kubectl apply -f hpa-demo.yaml deployment.apps/hpa-demo created \u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a HPA \u8d44\u6e90\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 kubectl autoscale \u547d\u4ee4\u6765\u521b\u5efa\uff1a kubectl autoscale deployment hpa-demo --cpu-percent=10 --min=1 --max=10 horizontalpodautoscaler.autoscaling/hpa-demo autoscaled $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo <unknown>/10% 1 10 0 12s \u6b64\u547d\u4ee4\u521b\u5efa\u4e86\u4e00\u4e2a\u5173\u8054\u8d44\u6e90 hpa-demo \u7684 HPA \uff0c\u6700\u5c0f\u7684 Pod \u526f\u672c\u6570\u4e3a 1 \uff0c\u6700\u5927\u4e3a 10 \u3002HPA \u4f1a\u6839\u636e\u8bbe\u5b9a\u7684 cpu \u4f7f\u7528\u7387\uff08 10% \uff09\u52a8\u6001\u7684\u589e\u52a0\u6216\u8005\u51cf\u5c11 Pod \u6570\u91cf\u3002 \u5f53\u7136\u6211\u4eec\u4f9d\u7136\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa YAML \u6587\u4ef6\u7684\u5f62\u5f0f\u6765\u521b\u5efa HPA \u8d44\u6e90\u5bf9\u8c61\u3002\u5982\u679c\u6211\u4eec\u4e0d\u77e5\u9053\u600e\u4e48\u7f16\u5199\u7684\u8bdd\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0a\u9762\u547d\u4ee4\u884c\u521b\u5efa\u7684HPA\u7684YAML\u6587\u4ef6\uff1a $ kubectl get hpa hpa-demo -o yaml apiVersion: autoscaling/v1 kind: HorizontalPodAutoscaler metadata: annotations: autoscaling.alpha.kubernetes.io/conditions: '[{\"type\":\"AbleToScale\",\"status\":\"True\",\"lastTransitionTime\":\"2020-04-07T15:38:07Z\",\"reason\": \"SucceededGetScale\",\"message\":\"the HPA controller was able to get the target''s current scale\"},{\"type\":\"ScalingActive\",\"status\":\"False\",\"lastTransitionTime\":\"2020-04-07T 15:38:07Z\",\"reason\":\"FailedGetResourceMetric\",\"message\":\"the HPA was unable to compute the replica count: missing request for cpu\"}]' creationTimestamp: \"2020-04-07T15:37:52Z\" name: hpa-demo namespace: default resourceVersion: \"2321037\" selfLink: /apis/autoscaling/v1/namespaces/default/horizontalpodautoscalers/hpa-demo uid: d24084ba-f050-41d3-a524-51fa1ed76d78 spec: maxReplicas: 10 minReplicas: 1 scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: hpa-demo targetCPUUtilizationPercentage: 10 status: currentReplicas: 1 desiredReplicas: 0 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0a\u9762\u7684 YAML \u6587\u4ef6\u5c31\u53ef\u4ee5\u81ea\u5df1\u6765\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e YAML \u7684 HPA \u63cf\u8ff0\u6587\u4ef6\u4e86\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u4fe1\u606f\u91cc\u9762\u51fa\u73b0\u4e86\u4e00\u4e9b Fail \u4fe1\u606f\uff0c\u6211\u4eec\u6765\u67e5\u770b\u4e0b\u8fd9\u4e2a HPA \u5bf9\u8c61\u7684\u4fe1\u606f\uff1a $ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Tue, 07 Apr 2020 23:37:52 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods (as a percentage of request): <unknown> / 10% Min replicas: 1 Max replicas: 10 Deployment pods: 1 current / 0 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True SucceededGetScale the HPA controller was able to get the target's current scale ScalingActive False FailedGetResourceMetric the HPA was unable to compute the replica count: missing request for cpu Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning FailedComputeMetricsReplicas 36s (x12 over 3m21s) horizontal-pod-autoscaler invalid metrics (1 invalid out of 1), first error is: failed to get cpu utilization: missing request for cpu Warning FailedGetResourceMetric 21s (x13 over 3m21s) horizontal-pod-autoscaler missing request for cpu \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u4e8b\u4ef6\u4fe1\u606f\u91cc\u9762\u51fa\u73b0\u4e86 failed to get cpu utilization: missing request for cpu \u8fd9\u6837\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u7684 Pod \u5bf9\u8c61\u6ca1\u6709\u6dfb\u52a0 request \u8d44\u6e90\u58f0\u660e\uff0c\u8fd9\u6837\u5bfc\u81f4 HPA \u8bfb\u53d6\u4e0d\u5230 CPU \u6307\u6807\u4fe1\u606f\uff0c \u6240\u4ee5\u5982\u679c\u8981\u60f3\u8ba9 HPA \u751f\u6548\uff0c\u5bf9\u5e94\u7684 Pod \u8d44\u6e90\u5fc5\u987b\u6dfb\u52a0 requests` \u8d44\u6e90\u58f0\u660e \uff0c\u66f4\u65b0\u6211\u4eec\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff1a apiVersion: apps/v1 kind: Deployment metadata: name: hpa-demo spec: selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx ports: - containerPort: 80 resources: requests: memory: 50Mi cpu: 50m \u7136\u540e\u91cd\u65b0\u66f4\u65b0 Deployment\uff0c\u91cd\u65b0\u521b\u5efa HPA \u5bf9\u8c61\uff1a $ kubectl apply -f hpa-demo.yaml deployment.apps/hpa-demo configured $ kubectl get pods -o wide -l app=nginx NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES hpa-demo-75f94c5d7-ncg5f 1/1 Running 0 16s 10.1.5.71 docker-desktop <none> <none> hpa-demo-85ff79dd56-mc7mq 0/1 Terminating 0 34m 10.1.5.70 docker-desktop <none> <none> $ kubectl delete hpa hpa-demo horizontalpodautoscaler.autoscaling \"hpa-demo\" deleted $ kubectl autoscale deployment hpa-demo --cpu-percent=10 --min=1 --max=10 horizontalpodautoscaler.autoscaling/hpa-demo autoscaled $ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Wed, 08 Apr 2020 09:33:15 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods (as a percentage of request): 0% (0) / 10% Min replicas: 1 Max replicas: 10 Deployment pods: 1 current / 1 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ScaleDownStabilized recent recommendations were higher than current one, applying the highest recent recommendation ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request) ScalingLimited False DesiredWithinRange the desired count is within the acceptable range Events: <none> $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 0%/10% 1 10 1 91s \u73b0\u5728\u53ef\u4ee5\u770b\u5230 HPA \u8d44\u6e90\u5bf9\u8c61\u5df2\u7ecf\u6b63\u5e38\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u6765\u589e\u5927\u8d1f\u8f7d\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a busybox \u7684 Pod\uff0c\u5e76\u4e14\u5faa\u73af\u8bbf\u95ee\u4e0a\u9762\u521b\u5efa\u7684 Pod\uff1a $ kubectl get pod -l app=nginx -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES hpa-demo-69968bb59f-dxjd7 1/1 Running 0 7m16s 10.1.5.75 docker-desktop <none> <none> kubectl run -it --image busybox test-hpa --restart=Never --rm /bin/sh If you don't see a command prompt, try pressing enter. / # while true; do wget -q -O- http://10.1.5.75; done $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 264%/10% 1 10 8 7m36s ]$ kubectl get pods -l app=nginx --watch NAME READY STATUS RESTARTS AGE hpa-demo-69968bb59f-4624m 1/1 Running 0 41s hpa-demo-69968bb59f-4h6lh 1/1 Running 0 11s hpa-demo-69968bb59f-7dw9d 1/1 Running 0 26s hpa-demo-69968bb59f-dxjd7 1/1 Running 0 10m hpa-demo-69968bb59f-ggmgw 1/1 Running 0 41s hpa-demo-69968bb59f-nnsm7 1/1 Running 0 26s hpa-demo-69968bb59f-np6fc 1/1 Running 0 26s hpa-demo-69968bb59f-tkbzb 1/1 Running 0 41s hpa-demo-69968bb59f-x8x9r 1/1 Running 0 26s hpa-demo-69968bb59f-zcnp7 0/1 ContainerCreating 0 11s hpa-demo-69968bb59f-zcnp7 1/1 Running 0 13s \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u81ea\u52a8\u62c9\u8d77\u4e86\u5f88\u591a\u65b0\u7684 Pod\uff0c\u6700\u540e\u5b9a\u683c\u5728\u4e86\u6211\u4eec\u4e0a\u9762\u8bbe\u7f6e\u7684 10 \u4e2a Pod\uff0c\u540c\u65f6\u67e5\u770b\u8d44\u6e90 hpa-demo \u7684\u526f\u672c\u6570\u91cf\uff0c\u526f\u672c\u6570\u91cf\u5df2\u7ecf\u4ece\u539f\u6765\u76841\u53d8\u6210\u4e8610\u4e2a\uff1a $ kubectl get deployment hpa-demo NAME READY UP-TO-DATE AVAILABLE AGE hpa-demo 10/10 10 10 20m \u67e5\u770b HPA \u8d44\u6e90\u7684\u5bf9\u8c61\u4e86\u89e3\u5de5\u4f5c\u8fc7\u7a0b\uff1a $ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Wed, 08 Apr 2020 09:33:15 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods (as a percentage of request): 10% (5m) / 10% Min replicas: 1 Max replicas: 10 Deployment pods: 10 current / 10 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ScaleDownStabilized recent recommendations were higher than current one, applying the highest recent recommendation ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request) ScalingLimited True TooManyReplicas the desired replica count is more than the maximum replica count Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 89s horizontal-pod-autoscaler New size: 4; reason: cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 74s horizontal-pod-autoscaler New size: 8; reason: cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 59s horizontal-pod-autoscaler New size: 10; reason: cpu resource utilization (percentage of request) above target \u540c\u6837\u7684\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6765\u5173\u6389 busybox \u6765\u51cf\u5c11\u8d1f\u8f7d\uff0c\u7136\u540e\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u89c2\u5bdf\u4e0b HPA \u548c Deployment \u5bf9\u8c61\uff1a $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 0%/10% 1 10 1 14m $ kubectl get deployment hpa-demo NAME READY UP-TO-DATE AVAILABLE AGE hpa-demo 1/1 1 1 24m \u4ece Kubernetes v1.12 \u7248\u672c\u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e kube-controller-manager \u7ec4\u4ef6\u7684 --horizontal-pod-autoscaler-downscale-stabilization \u53c2\u6570\u6765\u8bbe\u7f6e\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\uff0c\u7528\u4e8e\u6307\u5b9a\u5728\u5f53\u524d\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c HPA \u5fc5\u987b\u7b49\u5f85\u591a\u957f\u65f6\u95f4\u624d\u80fd\u6267\u884c\u53e6\u4e00\u6b21\u7f29\u653e\u64cd\u4f5c\u3002\u9ed8\u8ba4\u4e3a 5 \u5206\u949f\uff0c\u4e5f\u5c31\u662f\u9ed8\u8ba4\u9700\u8981\u7b49\u5f855\u5206\u949f\u540e\u624d\u4f1a\u5f00\u59cb\u81ea\u52a8\u7f29\u653e \u3002 \u53ef\u4ee5\u770b\u5230\u526f\u672c\u6570\u91cf\u5df2\u7ecf\u7531 10 \u53d8\u4e3a 1\uff0c\u5f53\u524d\u6211\u4eec\u53ea\u662f\u6f14\u793a\u4e86 CPU \u4f7f\u7528\u7387\u8fd9\u4e00\u4e2a\u6307\u6807\uff0c\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u8fd8\u4f1a\u5b66\u4e60\u5230\u6839\u636e\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807\u6765\u81ea\u52a8\u5bf9 Pod \u8fdb\u884c\u6269\u7f29\u5bb9\u3002 $ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Wed, 08 Apr 2020 09:33:15 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods (as a percentage of request): 0% (0) / 10% Min replicas: 1 Max replicas: 10 Deployment pods: 1 current / 1 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ReadyForNewScale recommended size matches current size ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request) ScalingLimited True TooFewReplicas the desired replica count is less than the minimum replica count Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 11m horizontal-pod-autoscaler New size: 4; reason: cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 11m horizontal-pod-autoscaler New size: 8; reason: cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 10m horizontal-pod-autoscaler New size: 10; reason: cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 4m23s horizontal-pod-autoscaler New size: 1; reason: All metrics below target [Jacob@i515190:~/Devops_sap/k8s_cka/CKAD]$ kubectl describe hpa hpa-demo 3 \u57fa\u4e8e\u5185\u5b58 HorizontalPodAutoscaler \u662f Kubernetes autoscaling API \u7ec4\u7684\u8d44\u6e90\uff0c\u5728\u5f53\u524d\u7a33\u5b9a\u7248\u672c autoscaling/v1 \u4e2d\u53ea\u652f\u6301\u57fa\u4e8e CPU \u6307\u6807\u7684\u7f29\u653e\u3002 \u5728 Beta \u7248\u672c autoscaling/v2beta2 \uff0c\u5f15\u5165\u4e86\u57fa\u4e8e\u5185\u5b58\u548c\u81ea\u5b9a\u4e49\u6307\u6807\u7684\u7f29\u653e\u3002\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u4f7f\u7528 Beta \u7248\u672c\u7684 API \u3002 \u73b0\u5728\u6211\u4eec\u7528 Deployment \u6765\u521b\u5efa\u4e00\u4e2a Nginx Pod\uff0c\u7136\u540e\u5229\u7528 HPA \u6765\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a\uff08 hpa-mem-demo.yaml \uff09 apiVersion: apps/v1 kind: Deployment metadata: name: hpa-mem-demo spec: selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: volumes: - name: increase-mem-script configMap: name: increase-mem-config containers: - name: nginx image: nginx ports: - containerPort: 80 volumeMounts: - name: increase-mem-script mountPath: /etc/script resources: requests: memory: 50Mi cpu: 50m securityContext: privileged: true \u8fd9\u91cc\u548c\u524d\u9762\u666e\u901a\u7684\u5e94\u7528\u6709\u4e00\u4e9b\u533a\u522b\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u540d\u4e3a increase-mem-config \u7684 ConfigMap \u8d44\u6e90\u5bf9\u8c61\u6302\u8f7d\u5230\u4e86\u5bb9\u5668\u4e2d\uff0c\u8be5\u914d\u7f6e\u6587\u4ef6\u662f\u7528\u4e8e\u540e\u9762\u589e\u52a0\u5bb9\u5668\u5185\u5b58\u5360\u7528\u7684\u811a\u672c\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a\uff08 increase-mem-cm.yaml \uff09 apiVersion: v1 kind: ConfigMap metadata: name: increase-mem-config data: increase-mem.sh: | #!/bin/bash mkdir /tmp/memory mount -t tmpfs -o size=40M tmpfs /tmp/memory dd if=/dev/zero of=/tmp/memory/block sleep 60 rm /tmp/memory/block umount /tmp/memory rmdir /tmp/memory $ kubectl apply -f increase-mem-cm.yaml $ kubectl apply -f hpa-mem-demo.yaml $ kubectl get pods -l app=nginx NAME READY STATUS RESTARTS AGE hpa-mem-demo-66944b79bf-696r8 1/1 Running 0 19s \u7136\u540e\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684 HPA \u8d44\u6e90\u5bf9\u8c61\uff1a\uff08 hpa-mem.yaml \uff09 apiVersion: autoscaling/v2beta1 kind: HorizontalPodAutoscaler metadata: name: nginx-hpa spec: scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: hpa-mem-demo minReplicas: 1 maxReplicas: 5 metrics: - type: Resource resource: name: memory targetAverageUtilization: 60 $ kubectl apply -f hpa-mem.yaml horizontalpodautoscaler.autoscaling/nginx-hpa created $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 0%/10% 1 10 1 22m nginx-hpa Deployment/hpa-mem-demo 4%/60% 1 5 1 15s \u5230\u8fd9\u91cc\u8bc1\u660e HPA \u8d44\u6e90\u5bf9\u8c61\u5df2\u7ecf\u90e8\u7f72\u6210\u529f\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5bf9\u5e94\u7528\u8fdb\u884c\u538b\u6d4b\uff0c\u5c06\u5185\u5b58\u538b\u4e0a\u53bb\uff0c\u76f4\u63a5\u6267\u884c\u4e0a\u9762\u6211\u4eec\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u7684 increase-mem.sh \u811a\u672c\u5373\u53ef\uff1a $ kubectl exec -it hpa-mem-demo-66944b79bf-696r8 /bin/bash root@hpa-mem-demo-66944b79bf-696r8:/# ls /etc/script/ increase-mem.sh root@hpa-mem-demo-66944b79bf-696r8:/# increase-mem.sh bash: increase-mem.sh: command not found root@hpa-mem-demo-66944b79bf-696r8:/# source /etc/script/increase-mem.sh dd: writing to '/tmp/memory/block': No space left on device 81921+0 records in 81920+0 records out 41943040 bytes (42 MB, 40 MiB) copied, 0.14645 s, 286 MB/s \u7136\u540e\u6253\u5f00\u53e6\u5916\u4e00\u4e2a\u7ec8\u7aef\u89c2\u5bdf HPA \u8d44\u6e90\u5bf9\u8c61\u7684\u53d8\u5316\u60c5\u51b5\uff1a $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE nginx-hpa Deployment/hpa-mem-demo 44%/60% 1 5 2 2m45s $ kubectl describe hpa nginx-hpa Name: nginx-hpa Namespace: default Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"autoscaling/v2beta1\",\"kind\":\"HorizontalPodAutoscaler\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-hpa\",\"namespace\":\"default\"... CreationTimestamp: Wed, 08 Apr 2020 09:55:46 +0800 Reference: Deployment/hpa-mem-demo Metrics: ( current / target ) resource memory on pods (as a percentage of request): 44% (23568384) / 60% Min replicas: 1 Max replicas: 5 Deployment pods: 2 current / 2 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ReadyForNewScale recommended size matches current size ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from memory resource utilization (percentage of request) ScalingLimited False DesiredWithinRange the desired count is within the acceptable range Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 47s horizontal-pod-autoscaler New size: 2; reason: memory resource utilization (percentage of request) above target $ kubectl top pod hpa-mem-demo-66944b79bf-f79l2 NAME CPU(cores) MEMORY(bytes) hpa-mem-demo-66944b79bf-tqrn9 0m 41Mi \u53ef\u4ee5\u770b\u5230\u5185\u5b58\u4f7f\u7528\u5df2\u7ecf\u8d85\u8fc7\u4e86\u6211\u4eec\u8bbe\u5b9a\u7684 60% \u8fd9\u4e2a\u9608\u503c\u4e86\uff0cHPA \u8d44\u6e90\u5bf9\u8c61\u4e5f\u5df2\u7ecf\u89e6\u53d1\u4e86\u81ea\u52a8\u6269\u5bb9\uff0c\u53d8\u6210\u4e86\u4e24\u4e2a\u526f\u672c\u4e86\uff1a $ kubectl get pods -l app=nginx NAME READY STATUS RESTARTS AGE hpa-mem-demo-66944b79bf-696r8 1/1 Running 0 9m39s hpa-mem-demo-66944b79bf-f79l2 1/1 Running 0 5m47s \u5f53\u5185\u5b58\u91ca\u653e\u6389\u540e\uff0c controller-manager \u9ed8\u8ba45\u5206\u949f\u8fc7\u540e\u4f1a\u8fdb\u884c\u7f29\u653e\uff0c\u5230\u8fd9\u91cc\u5c31\u5b8c\u6210\u4e86\u57fa\u4e8e\u5185\u5b58\u7684 HPA \u64cd\u4f5c\u3002 4 \u57fa\u4e8e\u81ea\u5b9a\u4e49\u6307\u6807 \u9664\u4e86\u57fa\u4e8e CPU \u548c\u5185\u5b58\u6765\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6839\u636e\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807\u6765\u8fdb\u884c\u3002 \u8fd9\u4e2a\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528 Prometheus Adapter \uff0c Prometheus \u7528\u4e8e\u76d1\u63a7\u5e94\u7528\u7684\u8d1f\u8f7d\u548c\u96c6\u7fa4\u672c\u8eab\u7684\u5404\u79cd\u6307\u6807\uff0c Prometheus Adapter \u53ef\u4ee5\u5e2e\u6211\u4eec\u4f7f\u7528 Prometheus \u6536\u96c6\u7684\u6307\u6807\u5e76\u4f7f\u7528\u5b83\u4eec\u6765\u5236\u5b9a\u6269\u5c55\u7b56\u7565 \uff0c\u8fd9\u4e9b\u6307\u6807\u90fd\u662f\u901a\u8fc7 APIServer \u66b4\u9732\u7684\uff0c\u800c\u4e14 HPA \u8d44\u6e90\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u5f88\u8f7b\u6613\u7684\u76f4\u63a5\u4f7f\u7528 \u9996\u5148\uff0c\u6211\u4eec\u90e8\u7f72\u4e00\u4e2a\u793a\u4f8b\u5e94\u7528\uff0c\u5728\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e0a\u6d4b\u8bd5 Prometheus \u6307\u6807\u81ea\u52a8\u7f29\u653e\uff0c\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a\uff08 hpa-prome-demo.yaml \uff09 apiVersion: apps/v1 kind: Deployment metadata: name: hpa-prom-demo spec: selector: matchLabels: app: nginx-server template: metadata: labels: app: nginx-server spec: containers: - name: nginx-demo image: cnych/nginx-vts:v1.0 resources: limits: cpu: 50m requests: cpu: 50m ports: - containerPort: 80 name: http --- apiVersion: v1 kind: Service metadata: name: hpa-prom-demo annotations: prometheus.io/scrape: \"true\" prometheus.io/port: \"80\" prometheus.io/path: \"/status/format/prometheus\" spec: ports: - port: 80 targetPort: 80 name: http selector: app: nginx-server type: NodePort $ kubectl apply -f hpa-prome-demo.yaml deployment.apps/hpa-prom-demo created service/hpa-prom-demo created $ kubectl get pods -l app=nginx-server NAME READY STATUS RESTARTS AGE hpa-prom-demo-cddb7b67f-97pqf 1/1 Running 0 95s $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE hpa-prom-demo NodePort 10.104.168.230 <none> 80:30339/TCP 109s \u90e8\u7f72\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6d4b\u8bd5\u5e94\u7528\u662f\u5426\u6b63\u5e38\uff0c\u4ee5\u53ca\u6307\u6807\u6570\u636e\u63a5\u53e3\u80fd\u591f\u6b63\u5e38\u83b7\u53d6\uff1a $ curl localhost:30339 <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> <style> body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } </style> </head> <body> <h1>Welcome to nginx!</h1> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to <a href=\"http://nginx.org/\">nginx.org</a>.<br/> Commercial support is available at <a href=\"http://nginx.com/\">nginx.com</a>.</p> <p><em>Thank you for using nginx.</em></p> </body> </html> $ curl http://localhost:30339/status/format/prometheus # HELP nginx_vts_info Nginx info # TYPE nginx_vts_info gauge nginx_vts_info{hostname=\"hpa-prom-demo-cddb7b67f-97pqf\",version=\"1.13.12\"} 1 # HELP nginx_vts_start_time_seconds Nginx start time # TYPE nginx_vts_start_time_seconds gauge nginx_vts_start_time_seconds 1586312884.322 # HELP nginx_vts_main_connections Nginx connections # TYPE nginx_vts_main_connections gauge nginx_vts_main_connections{status=\"accepted\"} 4 nginx_vts_main_connections{status=\"active\"} 2 nginx_vts_main_connections{status=\"handled\"} 4 nginx_vts_main_connections{status=\"reading\"} 0 nginx_vts_main_connections{status=\"requests\"} 129 nginx_vts_main_connections{status=\"waiting\"} 1 nginx_vts_main_connections{status=\"writing\"} 1 # HELP nginx_vts_main_shm_usage_bytes Shared memory [ngx_http_vhost_traffic_status] info # TYPE nginx_vts_main_shm_usage_bytes gauge nginx_vts_main_shm_usage_bytes{shared=\"max_size\"} 1048575 ... \u4e0a\u9762\u7684\u6307\u6807\u6570\u636e\u4e2d\uff0c\u6211\u4eec\u6bd4\u8f83\u5173\u5fc3\u7684\u662f nginx_vts_server_requests_total \u8fd9\u4e2a\u6307\u6807\uff0c\u8868\u793a\u8bf7\u6c42\u603b\u6570\uff0c\u662f\u4e00\u4e2a Counter \u7c7b\u578b\u7684\u6307\u6807\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u6307\u6807\u7684\u503c\u6765\u786e\u5b9a\u662f\u5426\u9700\u8981\u5bf9\u6211\u4eec\u7684\u5e94\u7528\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002 code prometheus-additional.yaml kubectl create secret generic additional-configs --from-file=prometheus-additional.yaml -n monitoring secret/additional-configs created $ kubectl get prometheus -n monitoring NAME VERSION REPLICAS AGE kube-prom-prometheus-opera-prometheus v2.15.2 1 17d kubectl edit prometheus kube-prom-prometheus-opera-prometheus -n monitoring ... securityContext: fsGroup: 2000 runAsNonRoot: true runAsUser: 1000 additionalScrapeConfigs: name: additional-configs key: prometheus-additional.yaml serviceAccountName: prometheus-k8s ... kubectl port-forward svc/prometheus-operated 9090:9090 -n monitoring \u63a5\u4e0b\u6765\u6211\u4eec\u5c06 Prometheus-Adapter \u5b89\u88c5\u5230\u96c6\u7fa4\u4e2d\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u89c4\u5219\u6765\u8ddf\u8e2a Pod \u7684\u8bf7\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 Prometheus \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6307\u6807\u90fd\u7528\u4e8e HPA \uff0c\u4f46\u662f\u524d\u63d0\u662f\u4f60\u5f97\u901a\u8fc7\u67e5\u8be2\u8bed\u53e5\u5c06\u5b83\u62ff\u5230\uff08\u5305\u62ec\u6307\u6807\u540d\u79f0\u548c\u5176\u5bf9\u5e94\u7684\u503c\uff09\u3002 \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u89c4\u5219\uff1a rules: - seriesQuery: 'nginx_vts_server_requests_total' seriesFilters: [] resources: overrides: kubernetes_namespace: resource: namespace kubernetes_pod_name: resource: pod name: matches: \"^(.*)_total\" as: \"${1}_per_second\" metricsQuery: (sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)) \u63a5\u4e0b\u6765\u6211\u4eec\u5c06 Prometheus-Adapter \u5b89\u88c5\u5230\u96c6\u7fa4\u4e2d\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u89c4\u5219\u6765\u8ddf\u8e2a Pod \u7684\u8bf7\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 Prometheus \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6307\u6807\u90fd\u7528\u4e8e HPA\uff0c\u4f46\u662f\u524d\u63d0\u662f\u4f60\u5f97\u901a\u8fc7\u67e5\u8be2\u8bed\u53e5\u5c06\u5b83\u62ff\u5230\uff08\u5305\u62ec\u6307\u6807\u540d\u79f0\u548c\u5176\u5bf9\u5e94\u7684\u503c\uff09\u3002 \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u89c4\u5219\uff1a rules: - seriesQuery: 'nginx_vts_server_requests_total' seriesFilters: [] resources: overrides: kubernetes_namespace: resource: namespace kubernetes_pod_name: resource: pod name: matches: \"^(.*)_total\" as: \"${1}_per_second\" metricsQuery: (sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)) \u8fd9\u662f\u4e00\u4e2a\u5e26\u53c2\u6570\u7684 Prometheus \u67e5\u8be2\uff0c\u5176\u4e2d\uff1a seriesQuery \uff1a\u67e5\u8be2 Prometheus \u7684\u8bed\u53e5\uff0c\u901a\u8fc7\u8fd9\u4e2a\u67e5\u8be2\u8bed\u53e5\u67e5\u8be2\u5230\u7684\u6240\u6709\u6307\u6807\u90fd\u53ef\u4ee5\u7528\u4e8e HPA seriesFilters \uff1a\u67e5\u8be2\u5230\u7684\u6307\u6807\u53ef\u80fd\u4f1a\u5b58\u5728\u4e0d\u9700\u8981\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u8fc7\u6ee4\u6389\u3002 resources \uff1a\u901a\u8fc7 seriesQuery \u67e5\u8be2\u5230\u7684\u53ea\u662f\u6307\u6807\uff0c\u5982\u679c\u9700\u8981\u67e5\u8be2\u67d0\u4e2a Pod \u7684\u6307\u6807\uff0c\u80af\u5b9a\u8981\u5c06\u5b83\u7684\u540d\u79f0\u548c\u6240\u5728\u7684\u547d\u540d\u7a7a\u95f4\u4f5c\u4e3a\u6307\u6807\u7684\u6807\u7b7e\u8fdb\u884c\u67e5\u8be2\uff0c resources \u5c31\u662f\u5c06\u6307\u6807\u7684\u6807\u7b7e\u548c k8s \u7684\u8d44\u6e90\u7c7b\u578b\u5173\u8054\u8d77\u6765\uff0c\u6700\u5e38\u7528\u7684\u5c31\u662f pod \u548c namespace \u3002\u6709\u4e24\u79cd\u6dfb\u52a0\u6807\u7b7e\u7684\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f overrides \uff0c\u53e6\u4e00\u79cd\u662f template \u3002 overrides \uff1a\u5b83\u4f1a\u5c06\u6307\u6807\u4e2d\u7684\u6807\u7b7e\u548c k8s \u8d44\u6e90\u5173\u8054\u8d77\u6765\u3002\u4e0a\u9762\u793a\u4f8b\u4e2d\u5c31\u662f\u5c06\u6307\u6807\u4e2d\u7684 pod \u548c namespace \u6807\u7b7e\u548c k8s \u4e2d\u7684 pod \u548c namespace \u5173\u8054\u8d77\u6765\uff0c\u56e0\u4e3a pod \u548c namespace \u90fd\u5c5e\u4e8e\u6838\u5fc3 api \u7ec4\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6307\u5b9a api \u7ec4\u3002\u5f53\u6211\u4eec\u67e5\u8be2\u67d0\u4e2a pod \u7684\u6307\u6807\u65f6\uff0c\u5b83\u4f1a\u81ea\u52a8\u5c06 pod \u7684\u540d\u79f0\u548c\u540d\u79f0\u7a7a\u95f4\u4f5c\u4e3a\u6807\u7b7e\u52a0\u5165\u5230\u67e5\u8be2\u6761\u4ef6\u4e2d\u3002\u6bd4\u5982 nginx: {group: \"apps\", resource: \"deployment\"} \u8fd9\u4e48\u5199\u8868\u793a\u7684\u5c31\u662f\u5c06\u6307\u6807\u4e2d nginx \u8fd9\u4e2a\u6807\u7b7e\u548c apps \u8fd9\u4e2a api \u7ec4\u4e2d\u7684 deployment \u8d44\u6e90\u5173\u8054\u8d77\u6765\uff1b template \uff1a\u901a\u8fc7 go \u6a21\u677f\u7684\u5f62\u5f0f\u3002\u6bd4\u5982 template: \"kube_<<.Group>>_<<.Resource>>\" \u8fd9\u4e48\u5199\u8868\u793a\uff0c\u5047\u5982 <<.Group>> \u4e3a apps\uff0c<<.Resource>> \u4e3a deployment \uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u5c06\u6307\u6807\u4e2d kube_apps_deployment \u6807\u7b7e\u548c deployment \u8d44\u6e90\u5173\u8054\u8d77\u6765\u3002 name \uff1a\u7528\u6765\u7ed9\u6307\u6807\u91cd\u547d\u540d\u7684\uff0c\u4e4b\u6240\u4ee5\u8981\u7ed9\u6307\u6807\u91cd\u547d\u540d\u662f\u56e0\u4e3a\u6709\u4e9b\u6307\u6807\u662f\u53ea\u589e\u7684\uff0c\u6bd4\u5982\u4ee5 total \u7ed3\u5c3e\u7684\u6307\u6807\u3002\u8fd9\u4e9b\u6307\u6807\u62ff\u6765\u505a HPA \u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u4e00\u822c\u8ba1\u7b97\u5b83\u7684\u901f\u7387\uff0c\u4ee5\u901f\u7387\u4f5c\u4e3a\u503c\uff0c\u90a3\u4e48\u6b64\u65f6\u7684\u540d\u79f0\u5c31\u4e0d\u80fd\u4ee5 total \u7ed3\u5c3e\u4e86\uff0c\u6240\u4ee5\u8981\u8fdb\u884c\u91cd\u547d\u540d\u3002 matches \uff1a\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5339\u914d\u6307\u6807\u540d\uff0c\u53ef\u4ee5\u8fdb\u884c\u5206\u7ec4 as \uff1a\u9ed8\u8ba4\u503c\u4e3a $1 \uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u5206\u7ec4\u3002 as \u4e3a\u7a7a\u5c31\u662f\u4f7f\u7528\u9ed8\u8ba4\u503c\u7684\u610f\u601d\u3002 metricsQuery \uff1a\u8fd9\u5c31\u662f Prometheus \u7684\u67e5\u8be2\u8bed\u53e5\u4e86\uff0c\u524d\u9762\u7684 seriesQuery \u67e5\u8be2\u662f\u83b7\u5f97 HPA \u6307\u6807\u3002\u5f53\u6211\u4eec\u8981\u67e5\u67d0\u4e2a\u6307\u6807\u7684\u503c\u65f6\u5c31\u8981\u901a\u8fc7\u5b83\u6307\u5b9a\u7684\u67e5\u8be2\u8bed\u53e5\u8fdb\u884c\u4e86\u3002\u53ef\u4ee5\u770b\u5230\u67e5\u8be2\u8bed\u53e5\u4f7f\u7528\u4e86\u901f\u7387\u548c\u5206\u7ec4\uff0c\u8fd9\u5c31\u662f\u89e3\u51b3\u4e0a\u9762\u63d0\u5230\u7684\u53ea\u589e\u6307\u6807\u7684\u95ee\u9898 Series \uff1a\u8868\u793a\u6307\u6807\u540d\u79f0 LabelMatchers \uff1a\u9644\u52a0\u7684\u6807\u7b7e\uff0c\u76ee\u524d\u53ea\u6709 pod \u548c namespace \u4e24\u79cd\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5728\u4e4b\u524d\u4f7f\u7528 resources \u8fdb\u884c\u5173\u8054 GroupBy \uff1a\u5c31\u662f pod \u540d\u79f0\uff0c\u540c\u6837\u9700\u8981\u4f7f\u7528 resources \u8fdb\u884c\u5173\u8054\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7 Helm Chart \u6765\u90e8\u7f72 Prometheus Adapter \uff0c\u65b0\u5efa hpa-prome-adapter-values.yaml \u6587\u4ef6\u8986\u76d6\u9ed8\u8ba4\u7684 Values \u503c\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a rules: default: false custom: - seriesQuery: 'nginx_vts_server_requests_total' resources: overrides: kubernetes_namespace: resource: namespace kubernetes_pod_name: resource: pod name: matches: \"^(.*)_total\" as: \"${1}_per_second\" metricsQuery: (sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)) prometheus: url: http://kube-prom-prometheus-opera-prometheus.monitoring.svc.cluster.local \u8fd9\u91cc\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u6761 rules \u89c4\u5219\uff0c\u7136\u540e\u6307\u5b9a\u4e86 Prometheus \u7684\u5730\u5740\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u4f7f\u7528\u4e86 Operator \u90e8\u7f72\u7684 Promethues \u96c6\u7fa4\uff0c\u6240\u4ee5\u7528 kube-prom-prometheus-opera-prometheus \u7684\u5730\u5740\u3002\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4e00\u952e\u5b89\u88c5\uff1a $ helm install prometheus-adapter stable/prometheus-adapter -n monitoring -f hpa-prome-adapter-values.yaml NAME: prometheus-adapter LAST DEPLOYED: Wed Apr 8 12:09:13 2020 NAMESPACE: monitoring STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: prometheus-adapter has been deployed. In a few minutes you should be able to list metrics using the following command(s): kubectl get --raw /apis/custom.metrics.k8s.io/v1beta1 \u7b49\u4e00\u5c0f\u4f1a\u513f\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u68c0\u6d4b\u662f\u5426\u751f\u6548\u4e86\uff1a $ kubectl get pods -n monitoring -l app=prometheus-adapter NAME READY STATUS RESTARTS AGE prometheus-adapter-58b559fc7d-mk5bz 1/1 Running 0 3m39s $ kubectl get --raw=\"/apis/custom.metrics.k8s.io/v1beta1\" | jq { \"kind\": \"APIResourceList\", \"apiVersion\": \"v1\", \"groupVersion\": \"custom.metrics.k8s.io/v1beta1\", \"resources\": [ { \"name\": \"namespaces/nginx_vts_server_requests_per_second\", \"singularName\": \"\", \"namespaced\": false, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] }, { \"name\": \"pods/nginx_vts_server_requests_per_second\", \"singularName\": \"\", \"namespaced\": true, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] } ] } \u6211\u4eec\u53ef\u4ee5\u770b\u5230 nginx_vts_server_requests_per_second \u6307\u6807\u53ef\u7528\u3002 \u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u68c0\u67e5\u8be5\u6307\u6807\u7684\u5f53\u524d\u503c\uff1a $ kubectl get --raw \"/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/*/nginx_vts_server_requests_per_second\" | jq . { \"kind\": \"MetricValueList\", \"apiVersion\": \"custom.metrics.k8s.io/v1beta1\", \"metadata\": { \"selfLink\": \"/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/%2A/nginx_vts_server_requests_per_second\" }, \"items\": [ { \"describedObject\": { \"kind\": \"Pod\", \"namespace\": \"default\", \"name\": \"hpa-prom-demo-755bb56f85-lvksr\", \"apiVersion\": \"/v1\" }, \"metricName\": \"nginx_vts_server_requests_per_second\", \"timestamp\": \"2020-04-07T09:45:45Z\", \"value\": \"527m\", \"selector\": null } ] } \u51fa\u73b0\u7c7b\u4f3c\u4e0a\u9762\u7684\u4fe1\u606f\u5c31\u8868\u660e\u5df2\u7ecf\u914d\u7f6e\u6210\u529f\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u90e8\u7f72\u4e00\u4e2a\u9488\u5bf9\u4e0a\u9762\u7684\u81ea\u5b9a\u4e49\u6307\u6807\u7684 HAP \u8d44\u6e90\u5bf9\u8c61\uff0c\u5982\u4e0b\u6240\u793a\uff1a( hpa-prome.yaml ) apiVersion: autoscaling/v2beta1 kind: HorizontalPodAutoscaler metadata: name: nginx-custom-hpa spec: scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: hpa-prom-demo minReplicas: 2 maxReplicas: 5 metrics: - type: Pods pods: metricName: nginx_vts_server_requests_per_second targetAverageValue: 10 \u5982\u679c\u8bf7\u6c42\u6570\u8d85\u8fc7\u6bcf\u79d210\u4e2a\uff0c\u5219\u5c06\u5bf9\u5e94\u7528\u8fdb\u884c\u6269\u5bb9\u3002\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl apply -f hpa-prome.yaml horizontalpodautoscaler.autoscaling/nginx-custom-hpa created $ kubectl describe hpa nginx-custom-hpa Name: nginx-custom-hpa Namespace: default Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"autoscaling/v2beta1\",\"kind\":\"HorizontalPodAutoscaler\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-custom-hpa\",\"namespace\":\"d... CreationTimestamp: Tue, 07 Apr 2020 17:54:55 +0800 Reference: Deployment/hpa-prom-demo Metrics: ( current / target ) \"nginx_vts_server_requests_per_second\" on pods: <unknown> / 10 Min replicas: 2 Max replicas: 5 Deployment pods: 1 current / 2 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True SucceededRescale the HPA controller was able to update the target scale to 2 Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 7s horizontal-pod-autoscaler New size: 2; reason: Current number of replicas below Spec.MinReplicas \u53ef\u4ee5\u770b\u5230 HPA \u5bf9\u8c61\u5df2\u7ecf\u751f\u6548\u4e86\uff0c\u4f1a\u5e94\u7528\u6700\u5c0f\u7684\u526f\u672c\u65702\uff0c\u6240\u4ee5\u4f1a\u65b0\u589e\u4e00\u4e2a Pod \u526f\u672c\uff1a $ kubectl get pods -l app=nginx-server NAME READY STATUS RESTARTS AGE hpa-prom-demo-755bb56f85-s5dzf 1/1 Running 0 67s hpa-prom-demo-755bb56f85-wbpfr 1/1 Running 0 3m30s \u63a5\u4e0b\u6765\u6211\u4eec\u540c\u6837\u5bf9\u5e94\u7528\u8fdb\u884c\u538b\u6d4b\uff1a $ while true; do wget -q -O- http://localhost:30339; done \u6253\u5f00\u53e6\u5916\u4e00\u4e2a\u7ec8\u7aef\u89c2\u5bdf HPA \u5bf9\u8c61\u7684\u53d8\u5316\uff1a $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE nginx-custom-hpa Deployment/hpa-prom-demo 14239m/10 2 5 2 4m27s $ kubectl describe hpa nginx-custom-hpa Name: nginx-custom-hpa Namespace: default Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"autoscaling/v2beta1\",\"kind\":\"HorizontalPodAutoscaler\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-custom-hpa\",\"namespace\":\"d... CreationTimestamp: Tue, 07 Apr 2020 17:54:55 +0800 Reference: Deployment/hpa-prom-demo Metrics: ( current / target ) \"nginx_vts_server_requests_per_second\" on pods: 14308m / 10 Min replicas: 2 Max replicas: 5 Deployment pods: 3 current / 3 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ReadyForNewScale recommended size matches current size ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from pods metric nginx_vts_server_requests_per_second ScalingLimited False DesiredWithinRange the desired count is within the acceptable range Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 5m2s horizontal-pod-autoscaler New size: 2; reason: Current number of replicas below Spec.MinReplicas Normal SuccessfulRescale 61s horizontal-pod-autoscaler New size: 3; reason: pods metric nginx_vts_server_requests_per_second above target \u53ef\u4ee5\u770b\u5230\u6307\u6807 nginx_vts_server_requests_per_second \u7684\u6570\u636e\u5df2\u7ecf\u8d85\u8fc7\u9608\u503c\u4e86\uff0c\u89e6\u53d1\u6269\u5bb9\u52a8\u4f5c\u4e86\uff0c\u526f\u672c\u6570\u53d8\u6210\u4e86 3 \uff0c\u4f46\u662f\u540e\u7eed\u5f88\u96be\u7ee7\u7eed\u6269\u5bb9\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e0a\u9762\u6211\u4eec\u7684 while \u547d\u4ee4\u5e76\u4e0d\u591f\u5feb\uff0c 3 \u4e2a\u526f\u672c\u5b8c\u5168\u53ef\u4ee5\u6ee1\u8db3\u6bcf\u79d2\u4e0d\u8d85\u8fc7 10 \u4e2a\u8bf7\u6c42\u7684\u9608\u503c\u3002 \u5982\u679c\u9700\u8981\u66f4\u597d\u7684\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u538b\u6d4b\u5de5\u5177\uff0c\u6bd4\u5982 ab\u3001fortio \u7b49\u5de5\u5177\u3002\u5f53\u6211\u4eec\u4e2d\u65ad\u6d4b\u8bd5\u540e\uff0c\u9ed8\u8ba45\u5206\u949f\u8fc7\u540e\u5c31\u4f1a\u81ea\u52a8\u7f29\u5bb9\uff1a $ kubectl describe hpa nginx-custom-hpa Name: nginx-custom-hpa Namespace: default Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"autoscaling/v2beta1\",\"kind\":\"HorizontalPodAutoscaler\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-custom-hpa\",\"namespace\":\"d... CreationTimestamp: Tue, 07 Apr 2020 17:54:55 +0800 Reference: Deployment/hpa-prom-demo Metrics: ( current / target ) \"nginx_vts_server_requests_per_second\" on pods: 533m / 10 Min replicas: 2 Max replicas: 5 Deployment pods: 2 current / 2 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ReadyForNewScale recommended size matches current size ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from pods metric nginx_vts_server_requests_per_second ScalingLimited True TooFewReplicas the desired replica count is less than the minimum replica count Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 23m horizontal-pod-autoscaler New size: 2; reason: Current number of replicas below Spec.MinReplicas Normal SuccessfulRescale 19m horizontal-pod-autoscaler New size: 3; reason: pods metric nginx_vts_server_requests_per_second above target Normal SuccessfulRescale 4m2s horizontal-pod-autoscaler New size: 2; reason: All metrics below target \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6307\u6807\u5bf9\u5e94\u7528\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u7684\u64cd\u4f5c\u3002\u5982\u679c Prometheus \u5b89\u88c5\u5728\u6211\u4eec\u7684 Kubernetes \u96c6\u7fa4\u4e4b\u5916\uff0c\u5219\u53ea\u9700\u8981\u786e\u4fdd\u53ef\u4ee5\u4ece\u96c6\u7fa4\u8bbf\u95ee\u5230\u67e5\u8be2\u7684\u7aef\u70b9\uff0c\u5e76\u5728 adapter \u7684\u90e8\u7f72\u6e05\u5355\u4e2d\u5bf9\u5176\u8fdb\u884c\u66f4\u65b0\u5373\u53ef\u3002\u5728\u66f4\u590d\u6742\u7684\u573a\u666f\u4e2d\uff0c\u53ef\u4ee5\u83b7\u53d6\u591a\u4e2a\u6307\u6807\u7ed3\u5408\u4f7f\u7528\u6765\u5236\u5b9a\u6269\u5c55\u7b56\u7565\u3002","title":"\u7b2c\u516d\u8282 Kubernetes HPA \u4f7f\u7528\u8be6\u89e3(Metrics Server/CPU/Mem/adapater)"},{"location":"chap1/38k8s_hpa_metricsserver/#kubernetes-hpa-metrics-servercpumemadapater","text":"Metrics Server \u57fa\u4e8e CPU \u7684 HPA \u57fa\u4e8e\u5185\u5b58 \u7684 HPA \u57fa\u4e8e\u81ea\u5b9a\u4e49\u6307\u6807 \u548c Prometheus-adapater \u7684 HPA \u5728\u524d\u9762\u7684\u5b66\u4e60\u4e2d\u6211\u4eec\u4f7f\u7528\u7528\u4e00\u4e2a kubectl scale \u547d\u4ee4\u53ef\u4ee5\u6765\u5b9e\u73b0 Pod \u7684\u6269\u7f29\u5bb9\u529f\u80fd\uff0c\u4f46\u662f\u8fd9\u4e2a\u6bd5\u7adf\u662f\u5b8c\u5168\u624b\u52a8\u64cd\u4f5c\u7684\uff0c\u8981\u5e94\u5bf9\u7ebf\u4e0a\u7684\u5404\u79cd\u590d\u6742\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u505a\u5230\u81ea\u52a8\u5316\u53bb\u611f\u77e5\u4e1a\u52a1\uff0c\u6765\u81ea\u52a8\u8fdb\u884c\u6269\u7f29\u5bb9\u3002 \u4e3a\u6b64\uff0c Kubernetes \u4e5f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u6837\u7684\u4e00\u4e2a\u8d44\u6e90\u5bf9\u8c61\uff1a Horizontal Pod Autoscaling \uff08Pod \u6c34\u5e73\u81ea\u52a8\u4f38\u7f29\uff09\uff0c\u7b80\u79f0 HPA \uff0c HPA \u901a\u8fc7\u76d1\u63a7\u5206\u6790\u4e00\u4e9b\u63a7\u5236\u5668\u63a7\u5236\u7684\u6240\u6709 Pod \u7684\u8d1f\u8f7d\u53d8\u5316\u60c5\u51b5\u6765\u786e\u5b9a\u662f\u5426\u9700\u8981\u8c03\u6574 Pod \u7684\u526f\u672c\u6570\u91cf\uff0c\u8fd9\u662f HPA \u6700\u57fa\u672c\u7684\u539f\u7406\uff1a \u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u901a\u8fc7 kubectl autoscale \u547d\u4ee4\u6765\u521b\u5efa\u4e00\u4e2a HPA \u8d44\u6e90\u5bf9\u8c61\uff0c HPA Controller \u9ed8\u8ba4 30s \u8f6e\u8be2\u4e00\u6b21\uff08\u53ef\u901a\u8fc7 kube-controller-manager \u7684 --horizontal-pod-autoscaler-sync-period \u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\uff09 \uff0c\u67e5\u8be2\u6307\u5b9a\u7684\u8d44\u6e90\u4e2d\u7684 Pod \u8d44\u6e90\u4f7f\u7528\u7387\uff0c\u5e76\u4e14\u4e0e\u521b\u5efa\u65f6\u8bbe\u5b9a\u7684\u503c\u548c\u6307\u6807\u505a\u5bf9\u6bd4\uff0c\u4ece\u800c\u5b9e\u73b0\u81ea\u52a8\u4f38\u7f29\u7684\u529f\u80fd\u3002","title":"\u7b2c\u516d\u8282 Kubernetes HPA \u4f7f\u7528\u8be6\u89e3(Metrics Server/CPU/Mem/adapater)"},{"location":"chap1/38k8s_hpa_metricsserver/#1-metrics-server","text":"\u5728 HPA \u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u9700\u8981 Heapster \u63d0\u4f9b CPU \u548c\u5185\u5b58\u6307\u6807\uff0c\u5728 HPA v2 \u8fc7\u540e\u5c31\u9700\u8981\u5b89\u88c5 Metrcis Server \u4e86\uff0c Metrics Server \u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 Kubernetes API \u628a\u76d1\u63a7\u6570\u636e\u66b4\u9732\u51fa\u6765\uff0c\u6709\u4e86 Metrics Server \u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 Kubernetes API \u6765\u8bbf\u95ee\u6211\u4eec\u60f3\u8981\u83b7\u53d6\u7684\u76d1\u63a7\u6570\u636e\u4e86\uff1a https://10.96.0.1/apis/metrics.k8s.io/v1beta1/namespaces/<namespace-name>/pods/<pod-name> \u6bd4\u5982\u5f53\u6211\u4eec\u8bbf\u95ee\u4e0a\u9762\u7684 API \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230\u8be5 Pod \u7684\u8d44\u6e90\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5176\u5b9e\u662f\u6765\u81ea\u4e8e kubelet \u7684 Summary API \u91c7\u96c6\u800c\u6765\u7684\u3002 \u4e0d\u8fc7\u9700\u8981\u8bf4\u660e\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 API \u6765\u83b7\u53d6\u8d44\u6e90\u76d1\u63a7\u6570\u636e\uff0c\u5e76\u4e0d\u662f\u56e0\u4e3a Metrics Server \u5c31\u662f APIServer \u7684\u4e00\u90e8\u5206\uff0c \u800c\u662f\u901a\u8fc7 Kubernetes \u63d0\u4f9b\u7684 Aggregator \u6c47\u805a\u63d2\u4ef6\u6765\u5b9e\u73b0\u7684\uff0c\u662f\u72ec\u7acb\u4e8e APIServer \u4e4b\u5916\u8fd0\u884c\u7684 \u3002","title":"1 Metrics Server"},{"location":"chap1/38k8s_hpa_metricsserver/#1-1-api","text":"Aggregator \u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u7f16\u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u670d\u52a1\uff0c\u628a\u8fd9\u4e2a\u670d\u52a1\u6ce8\u518c\u5230 Kubernetes \u7684 APIServer \u91cc\u9762\u53bb\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u50cf\u539f\u751f\u7684 APIServer \u63d0\u4f9b\u7684 API \u4f7f\u7528\u81ea\u5df1\u7684 API \u4e86\uff0c\u6211\u4eec\u628a\u81ea\u5df1\u7684\u670d\u52a1\u8fd0\u884c\u5728 Kubernetes \u96c6\u7fa4\u91cc\u9762\uff0c \u7136\u540e Kubernetes \u7684 Aggregator \u901a\u8fc7 Service \u540d\u79f0\u5c31\u53ef\u4ee5\u8f6c\u53d1\u5230\u6211\u4eec\u81ea\u5df1\u5199\u7684 Service \u91cc\u9762\u53bb\u4e86 \u3002 \u8fd9\u6837\u8fd9\u4e2a\u805a\u5408\u5c42\u5c31\u5e26\u6765\u4e86\u5f88\u591a\u597d\u5904\uff1a \u589e\u52a0\u4e86 API \u7684\u6269\u5c55\u6027\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684 API \u670d\u52a1\u6765\u66b4\u9732\u4ed6\u4eec\u60f3\u8981\u7684 API \u3002 \u4e30\u5bcc\u4e86 API \uff0c\u6838\u5fc3 kubernetes \u56e2\u961f\u963b\u6b62\u4e86\u5f88\u591a\u65b0\u7684 API \u63d0\u6848\uff0c\u901a\u8fc7\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5c06\u4ed6\u4eec\u7684 API \u4f5c\u4e3a\u5355\u72ec\u7684\u670d\u52a1\u516c\u5f00\uff0c\u8fd9\u6837\u5c31\u65e0\u987b\u793e\u533a\u7e41\u6742\u7684\u5ba1\u67e5\u4e86\u3002 \u5f00\u53d1\u5206\u9636\u6bb5\u5b9e\u9a8c\u6027 API \uff0c\u65b0\u7684 API \u53ef\u4ee5\u5728\u5355\u72ec\u7684\u805a\u5408\u670d\u52a1\u4e2d\u5f00\u53d1\uff0c\u5f53\u5b83\u7a33\u5b9a\u4e4b\u540e\uff0c\u5728\u5408\u5e76\u4f1a APIServer \u5c31\u5f88\u5bb9\u6613\u4e86\u3002 \u786e\u4fdd\u65b0 API \u9075\u5faa Kubernetes \u7ea6\u5b9a\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u91cc\u63d0\u51fa\u7684\u673a\u5236\uff0c\u793e\u533a\u6210\u5458\u53ef\u80fd\u4f1a\u88ab\u8feb\u63a8\u51fa\u81ea\u5df1\u7684\u4e1c\u897f\uff0c\u8fd9\u6837\u5f88\u53ef\u80fd\u9020\u6210\u793e\u533a\u6210\u5458\u548c\u793e\u533a\u7ea6\u5b9a\u4e0d\u4e00\u81f4\u3002","title":"1-1 \u805a\u5408 API"},{"location":"chap1/38k8s_hpa_metricsserver/#1-2","text":"\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u8981\u4f7f\u7528 HPA \uff0c\u5c31\u9700\u8981\u5728\u96c6\u7fa4\u4e2d\u5b89\u88c5 Metrics Server \u670d\u52a1\uff0c\u8981\u5b89\u88c5 Metrics Server \u5c31\u9700\u8981\u5f00\u542f Aggregator \uff0c\u56e0\u4e3a Metrics Server \u5c31\u662f\u901a\u8fc7\u8be5\u4ee3\u7406\u8fdb\u884c\u6269\u5c55\u7684\uff0c\u4e0d\u8fc7\u6211\u4eec\u96c6\u7fa4\u662f\u901a\u8fc7 Kubeadm \u642d\u5efa\u7684\uff0c\u9ed8\u8ba4\u5df2\u7ecf\u5f00\u542f\u4e86\uff0c\u5982\u679c\u662f\u4e8c\u8fdb\u5236\u65b9\u5f0f\u5b89\u88c5\u7684\u96c6\u7fa4\uff0c\u9700\u8981\u5355\u72ec\u914d\u7f6e kube-apsierver \u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u53c2\u6570\uff1a --requestheader-client-ca-file=<path to aggregator CA cert> --requestheader-allowed-names=aggregator --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --proxy-client-cert-file=<path to aggregator proxy cert> --proxy-client-key-file=<path to aggregator proxy key> - --requestheader-allowed-names=front-proxy-client \u5982\u679c kube-proxy \u6ca1\u6709\u548c APIServer \u8fd0\u884c\u5728\u540c\u4e00\u53f0\u4e3b\u673a\u4e0a\uff0c\u90a3\u4e48\u9700\u8981\u786e\u4fdd\u542f\u7528\u4e86\u5982\u4e0b kube-apsierver \u7684\u53c2\u6570\uff1a --enable-aggregator-routing=true \u5bf9\u4e8e\u8fd9\u4e9b\u8bc1\u4e66\u7684\u751f\u6210\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1ahttps://github.com/kubernetes-sigs/apiserver-builder-alpha/blob/master/docs/concepts/auth.md\u3002 Aggregator \u805a\u5408\u5c42\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u6765\u5b89\u88c5 Metrics Server \u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u8be5\u4ed3\u5e93\u7684\u5b98\u65b9\u5b89\u88c5\u8d44\u6e90\u6e05\u5355\uff1a $ git clone https://github.com/kubernetes-incubator/metrics-server $ cd metrics-server $ kubectl apply -f deploy/1.8+/ \u5728\u90e8\u7f72\u4e4b\u524d\uff0c\u4fee\u6539 metrcis-server/deploy/1.8+/metrics-server-deployment.yaml \u7684\u955c\u50cf\u5730\u5740\u4e3a\uff1a containers: - name: metrics-server image: gcr.azk8s.cn/google_containers/metrics-server-amd64:v0.3.6 \u7b49\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u67e5\u770b Pod \u65e5\u5fd7\u662f\u5426\u6b63\u5e38\uff1a $ kubectl get pods -n kube-system -l k8s-app=metrics-server NAME READY STATUS RESTARTS AGE metrics-server-6886856d7c-g5k6q 1/1 Running 0 2m39s $ kubectl logs -f metrics-server-6886856d7c-g5k6q -n kube-system ...... E1119 09:05:57.234312 1 manager.go:111] unable to fully collect metrics: [unable to fully scrape metrics from source kubelet_summary:jxi-node1: unable to fetch metrics from Kubelet jxi-node1 (jxi-node1): Get https://jxi-node1:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node1 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node4: unable to fetch metrics from Kubelet jxi-node4 (jxi-node4): Get https://jxi-node4:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node4 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node3: unable to fetch metrics from Kubelet jxi-node3 (jxi-node3): Get https://jxi-node3:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node3 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-master: unable to fetch metrics from Kubelet jxi-master (jxi-master): Get https://jxi-master:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-master on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node2: unable to fetch metrics from Kubelet jxi-node2 (jxi-node2): Get https://jxi-node2:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node2 on 10.96.0.10:53: no such host] \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 Pod \u4e2d\u51fa\u73b0\u4e86\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f\uff1a xxx: no such host \uff0c\u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u9519\u8bef\u4fe1\u606f\u4e00\u822c\u5c31\u53ef\u4ee5\u786e\u5b9a\u662f DNS \u89e3\u6790\u4e0d\u4e86\u9020\u6210\u7684\uff0c \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Metrics Server \u4f1a\u901a\u8fc7 kubelet \u7684 10250 \u7aef\u53e3\u83b7\u53d6\u4fe1\u606f\uff0c\u4f7f\u7528\u7684\u662f hostname \uff0c\u6211\u4eec\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\u5728\u8282\u70b9\u7684 /etc/hosts \u91cc\u9762\u6dfb\u52a0\u4e86\u8282\u70b9\u7684 hostname \u548c ip \u7684\u6620\u5c04 \uff0c \u4f46\u662f\u662f\u6211\u4eec\u7684 Metrics Server \u7684 Pod \u5185\u90e8\u5e76\u6ca1\u6709\u8fd9\u4e2a hosts \u4fe1\u606f\uff0c\u5f53\u7136\u4e5f\u5c31\u4e0d\u8bc6\u522b hostname \u4e86 \uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u7b2c\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728\u96c6\u7fa4\u5185\u90e8\u7684 DNS \u670d\u52a1\u91cc\u9762\u6dfb\u52a0\u4e0a hostname \u7684\u89e3\u6790\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u96c6\u7fa4\u4e2d\u4f7f\u7528\u7684\u662f CoreDNS \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u4fee\u6539\u4e0b CoreDNS \u7684 Configmap \u4fe1\u606f\uff0c\u6dfb\u52a0\u4e0a hosts \u4fe1\u606f \uff1a $ kubectl edit configmap coredns -n kube-system apiVersion: v1 data: Corefile: | .:53 { errors health hosts { # \u6dfb\u52a0\u96c6\u7fa4\u8282\u70b9hosts\u9690\u5c04\u4fe1\u606f 10.151.30.11 jxi-master 10.151.30.57 jxi-node3 10.151.30.59 jxi-node4 10.151.30.22 jxi-node1 10.151.30.23 jxi-node2 fallthrough } kubernetes cluster.local in-addr.arpa ip6.arpa { pods insecure upstream fallthrough in-addr.arpa ip6.arpa } prometheus :9153 proxy . /etc/resolv.conf cache 30 reload } kind: ConfigMap metadata: creationTimestamp: 2019-05-18T11:07:46Z name: coredns namespace: kube-system \u8fd9\u6837\u5f53\u5728\u96c6\u7fa4\u5185\u90e8\u8bbf\u95ee\u96c6\u7fa4\u7684 hostname \u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u89e3\u6790\u5230\u5bf9\u5e94\u7684 ip \u4e86\uff0c \u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5728 metrics-server \u7684\u542f\u52a8\u53c2\u6570\u4e2d\u4fee\u6539 kubelet-preferred-address-types \u53c2\u6570 \uff0c\u5982\u4e0b\uff1a args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-preferred-address-types=InternalIP \u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u7136\u540e\u91cd\u65b0\u5b89\u88c5\uff1a $ kubectl get pods -n kube-system -l app=metrics-server NAME READY STATUS RESTARTS AGE metric-metrics-server-6d4d4f6dc4-c8hhl 1/1 Running 0 2d11h $ kubectl logs -f metric-metrics-server-58fc94d9f-jlxcb -n kube-system ...... E1119 09:05:57.234312 1 manager.go:111] unable to fully collect metrics: [unable to fully scrape metrics from source kubelet_summary:jxi-node1: unable to fetch metrics from Kubelet jxi-node1 (jxi-node1): Get https://jxi-node1:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node1 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node4: unable to fetch metrics from Kubelet jxi-node4 (jxi-node4): Get https://jxi-node4:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node4 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node3: unable to fetch metrics from Kubelet jxi-node3 (jxi-node3): Get https://jxi-node3:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node3 on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-master: unable to fetch metrics from Kubelet jxi-master (jxi-master): Get https://jxi-master:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-master on 10.96.0.10:53: no such host, unable to fully scrape metrics from source kubelet_summary:jxi-node2: unable to fetch metrics from Kubelet jxi-node2 (jxi-node2): Get https://jxi-node2:10250/stats/summary?only_cpu_and_memory=true: dial tcp: lookup jxi-node2 on 10.96.0.10:53: no such host] \u56e0\u4e3a\u90e8\u7f72\u96c6\u7fa4\u7684\u65f6\u5019\uff0c CA \u8bc1\u4e66\u5e76\u6ca1\u6709\u628a\u5404\u4e2a\u8282\u70b9\u7684 IP \u7b7e\u4e0a\u53bb\uff0c\u6240\u4ee5\u8fd9\u91cc Metrics Server \u901a\u8fc7 IP \u53bb\u8bf7\u6c42\u65f6\uff0c\u63d0\u793a\u7b7e\u7684\u8bc1\u4e66\u6ca1\u6709\u5bf9\u5e94\u7684 IP\uff08\u9519\u8bef\uff1ax509: cannot validate certificate for 10.151.30.22 because it doesn\u2019t contain any IP SANs\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a --kubelet-insecure-tls \u53c2\u6570\u8df3\u8fc7\u8bc1\u4e66\u6821\u9a8c\uff1a args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP \u7136\u540e\u518d\u91cd\u65b0\u5b89\u88c5\u5373\u53ef\u6210\u529f\uff01\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u9a8c\u8bc1\uff1a $ kubectl apply -f deploy/1.8+/ $ kubectl get pods -n kube-system -l k8s-app=metrics-server NAME READY STATUS RESTARTS AGE metrics-server-5d4dbb78bb-6klw6 1/1 Running 0 14s $ kubectl logs -f metrics-server-5d4dbb78bb-6klw6 -n kube-system I1119 09:10:44.249092 1 serving.go:312] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key) I1119 09:10:45.264076 1 secure_serving.go:116] Serving securely on [::]:4443 $ kubectl get apiservice | grep metrics v1beta1.metrics.k8s.io kube-system/metrics-server True 9m $ kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\" {\"kind\":\"NodeMetricsList\",\"apiVersion\":\"metrics.k8s.io/v1beta1\",\"metadata\":{\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes\"},\"items\":[{\"metadata\":{\"name\":\"jxi-node3\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/jxi-node3\",\"creationTimestamp\":\"2019-11-19T09:11:53Z\"},\"timestamp\":\"2019-11-19T09:11:38Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"240965441n\",\"memory\":\"3004360Ki\"}},{\"metadata\":{\"name\":\"jxi-node4\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/jxi-node4\",\"creationTimestamp\":\"2019-11-19T09:11:53Z\"},\"timestamp\":\"2019-11-19T09:11:37Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"167036681n\",\"memory\":\"2574664Ki\"}},{\"metadata\":{\"name\":\"jxi-master\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/jxi-master\",\"creationTimestamp\":\"2019-11-19T09:11:53Z\"},\"timestamp\":\"2019-11-19T09:11:38Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"350907350n\",\"memory\":\"2986716Ki\"}},{\"metadata\":{\"name\":\"jxi-node1\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/jxi-node1\",\"creationTimestamp\":\"2019-11-19T09:11:53Z\"},\"timestamp\":\"2019-11-19T09:11:39Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"1319638039n\",\"memory\":\"2094376Ki\"}},{\"metadata\":{\"name\":\"jxi-node2\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/jxi-node2\",\"creationTimestamp\":\"2019-11-19T09:11:53Z\"},\"timestamp\":\"2019-11-19T09:11:36Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"320381888n\",\"memory\":\"3270368Ki\"}}]} $ kubectl top nodes NAME CPU(cores) CPU% MEMORY(bytes) MEMORY% jxi-master 351m 17% 2916Mi 79% jxi-node1 1320m 33% 2045Mi 26% jxi-node2 321m 8% 3193Mi 41% jxi-node3 241m 6% 2933Mi 37% jxi-node4 168m 4% 2514Mi 32% \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl top \u547d\u4ee4\u6765\u83b7\u53d6\u5230\u8d44\u6e90\u6570\u636e\u4e86\uff0c\u8bc1\u660e Metrics Server \u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u4e86\u3002","title":"1-2 \u5b89\u88c5"},{"location":"chap1/38k8s_hpa_metricsserver/#2-cpu","text":"\u73b0\u5728\u6211\u4eec\u7528 Deployment \u6765\u521b\u5efa\u4e00\u4e2a Nginx Pod \uff0c\u7136\u540e\u5229\u7528 HPA \u6765\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a\uff08 hpa-demo.yaml \uff09 apiVersion: apps/v1 kind: Deployment metadata: name: hpa-demo spec: selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx ports: - containerPort: 80 \u7136\u540e\u76f4\u63a5\u521b\u5efa Deployment \uff1a $ kubectl apply -f hpa-demo.yaml deployment.apps/hpa-demo created \u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a HPA \u8d44\u6e90\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 kubectl autoscale \u547d\u4ee4\u6765\u521b\u5efa\uff1a kubectl autoscale deployment hpa-demo --cpu-percent=10 --min=1 --max=10 horizontalpodautoscaler.autoscaling/hpa-demo autoscaled $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo <unknown>/10% 1 10 0 12s \u6b64\u547d\u4ee4\u521b\u5efa\u4e86\u4e00\u4e2a\u5173\u8054\u8d44\u6e90 hpa-demo \u7684 HPA \uff0c\u6700\u5c0f\u7684 Pod \u526f\u672c\u6570\u4e3a 1 \uff0c\u6700\u5927\u4e3a 10 \u3002HPA \u4f1a\u6839\u636e\u8bbe\u5b9a\u7684 cpu \u4f7f\u7528\u7387\uff08 10% \uff09\u52a8\u6001\u7684\u589e\u52a0\u6216\u8005\u51cf\u5c11 Pod \u6570\u91cf\u3002 \u5f53\u7136\u6211\u4eec\u4f9d\u7136\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa YAML \u6587\u4ef6\u7684\u5f62\u5f0f\u6765\u521b\u5efa HPA \u8d44\u6e90\u5bf9\u8c61\u3002\u5982\u679c\u6211\u4eec\u4e0d\u77e5\u9053\u600e\u4e48\u7f16\u5199\u7684\u8bdd\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0a\u9762\u547d\u4ee4\u884c\u521b\u5efa\u7684HPA\u7684YAML\u6587\u4ef6\uff1a $ kubectl get hpa hpa-demo -o yaml apiVersion: autoscaling/v1 kind: HorizontalPodAutoscaler metadata: annotations: autoscaling.alpha.kubernetes.io/conditions: '[{\"type\":\"AbleToScale\",\"status\":\"True\",\"lastTransitionTime\":\"2020-04-07T15:38:07Z\",\"reason\": \"SucceededGetScale\",\"message\":\"the HPA controller was able to get the target''s current scale\"},{\"type\":\"ScalingActive\",\"status\":\"False\",\"lastTransitionTime\":\"2020-04-07T 15:38:07Z\",\"reason\":\"FailedGetResourceMetric\",\"message\":\"the HPA was unable to compute the replica count: missing request for cpu\"}]' creationTimestamp: \"2020-04-07T15:37:52Z\" name: hpa-demo namespace: default resourceVersion: \"2321037\" selfLink: /apis/autoscaling/v1/namespaces/default/horizontalpodautoscalers/hpa-demo uid: d24084ba-f050-41d3-a524-51fa1ed76d78 spec: maxReplicas: 10 minReplicas: 1 scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: hpa-demo targetCPUUtilizationPercentage: 10 status: currentReplicas: 1 desiredReplicas: 0 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0a\u9762\u7684 YAML \u6587\u4ef6\u5c31\u53ef\u4ee5\u81ea\u5df1\u6765\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e YAML \u7684 HPA \u63cf\u8ff0\u6587\u4ef6\u4e86\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u4fe1\u606f\u91cc\u9762\u51fa\u73b0\u4e86\u4e00\u4e9b Fail \u4fe1\u606f\uff0c\u6211\u4eec\u6765\u67e5\u770b\u4e0b\u8fd9\u4e2a HPA \u5bf9\u8c61\u7684\u4fe1\u606f\uff1a $ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Tue, 07 Apr 2020 23:37:52 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods (as a percentage of request): <unknown> / 10% Min replicas: 1 Max replicas: 10 Deployment pods: 1 current / 0 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True SucceededGetScale the HPA controller was able to get the target's current scale ScalingActive False FailedGetResourceMetric the HPA was unable to compute the replica count: missing request for cpu Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning FailedComputeMetricsReplicas 36s (x12 over 3m21s) horizontal-pod-autoscaler invalid metrics (1 invalid out of 1), first error is: failed to get cpu utilization: missing request for cpu Warning FailedGetResourceMetric 21s (x13 over 3m21s) horizontal-pod-autoscaler missing request for cpu \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u4e8b\u4ef6\u4fe1\u606f\u91cc\u9762\u51fa\u73b0\u4e86 failed to get cpu utilization: missing request for cpu \u8fd9\u6837\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u7684 Pod \u5bf9\u8c61\u6ca1\u6709\u6dfb\u52a0 request \u8d44\u6e90\u58f0\u660e\uff0c\u8fd9\u6837\u5bfc\u81f4 HPA \u8bfb\u53d6\u4e0d\u5230 CPU \u6307\u6807\u4fe1\u606f\uff0c \u6240\u4ee5\u5982\u679c\u8981\u60f3\u8ba9 HPA \u751f\u6548\uff0c\u5bf9\u5e94\u7684 Pod \u8d44\u6e90\u5fc5\u987b\u6dfb\u52a0 requests` \u8d44\u6e90\u58f0\u660e \uff0c\u66f4\u65b0\u6211\u4eec\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff1a apiVersion: apps/v1 kind: Deployment metadata: name: hpa-demo spec: selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx ports: - containerPort: 80 resources: requests: memory: 50Mi cpu: 50m \u7136\u540e\u91cd\u65b0\u66f4\u65b0 Deployment\uff0c\u91cd\u65b0\u521b\u5efa HPA \u5bf9\u8c61\uff1a $ kubectl apply -f hpa-demo.yaml deployment.apps/hpa-demo configured $ kubectl get pods -o wide -l app=nginx NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES hpa-demo-75f94c5d7-ncg5f 1/1 Running 0 16s 10.1.5.71 docker-desktop <none> <none> hpa-demo-85ff79dd56-mc7mq 0/1 Terminating 0 34m 10.1.5.70 docker-desktop <none> <none> $ kubectl delete hpa hpa-demo horizontalpodautoscaler.autoscaling \"hpa-demo\" deleted $ kubectl autoscale deployment hpa-demo --cpu-percent=10 --min=1 --max=10 horizontalpodautoscaler.autoscaling/hpa-demo autoscaled $ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Wed, 08 Apr 2020 09:33:15 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods (as a percentage of request): 0% (0) / 10% Min replicas: 1 Max replicas: 10 Deployment pods: 1 current / 1 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ScaleDownStabilized recent recommendations were higher than current one, applying the highest recent recommendation ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request) ScalingLimited False DesiredWithinRange the desired count is within the acceptable range Events: <none> $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 0%/10% 1 10 1 91s \u73b0\u5728\u53ef\u4ee5\u770b\u5230 HPA \u8d44\u6e90\u5bf9\u8c61\u5df2\u7ecf\u6b63\u5e38\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u6765\u589e\u5927\u8d1f\u8f7d\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a busybox \u7684 Pod\uff0c\u5e76\u4e14\u5faa\u73af\u8bbf\u95ee\u4e0a\u9762\u521b\u5efa\u7684 Pod\uff1a $ kubectl get pod -l app=nginx -o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES hpa-demo-69968bb59f-dxjd7 1/1 Running 0 7m16s 10.1.5.75 docker-desktop <none> <none> kubectl run -it --image busybox test-hpa --restart=Never --rm /bin/sh If you don't see a command prompt, try pressing enter. / # while true; do wget -q -O- http://10.1.5.75; done $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 264%/10% 1 10 8 7m36s ]$ kubectl get pods -l app=nginx --watch NAME READY STATUS RESTARTS AGE hpa-demo-69968bb59f-4624m 1/1 Running 0 41s hpa-demo-69968bb59f-4h6lh 1/1 Running 0 11s hpa-demo-69968bb59f-7dw9d 1/1 Running 0 26s hpa-demo-69968bb59f-dxjd7 1/1 Running 0 10m hpa-demo-69968bb59f-ggmgw 1/1 Running 0 41s hpa-demo-69968bb59f-nnsm7 1/1 Running 0 26s hpa-demo-69968bb59f-np6fc 1/1 Running 0 26s hpa-demo-69968bb59f-tkbzb 1/1 Running 0 41s hpa-demo-69968bb59f-x8x9r 1/1 Running 0 26s hpa-demo-69968bb59f-zcnp7 0/1 ContainerCreating 0 11s hpa-demo-69968bb59f-zcnp7 1/1 Running 0 13s \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u81ea\u52a8\u62c9\u8d77\u4e86\u5f88\u591a\u65b0\u7684 Pod\uff0c\u6700\u540e\u5b9a\u683c\u5728\u4e86\u6211\u4eec\u4e0a\u9762\u8bbe\u7f6e\u7684 10 \u4e2a Pod\uff0c\u540c\u65f6\u67e5\u770b\u8d44\u6e90 hpa-demo \u7684\u526f\u672c\u6570\u91cf\uff0c\u526f\u672c\u6570\u91cf\u5df2\u7ecf\u4ece\u539f\u6765\u76841\u53d8\u6210\u4e8610\u4e2a\uff1a $ kubectl get deployment hpa-demo NAME READY UP-TO-DATE AVAILABLE AGE hpa-demo 10/10 10 10 20m \u67e5\u770b HPA \u8d44\u6e90\u7684\u5bf9\u8c61\u4e86\u89e3\u5de5\u4f5c\u8fc7\u7a0b\uff1a $ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Wed, 08 Apr 2020 09:33:15 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods (as a percentage of request): 10% (5m) / 10% Min replicas: 1 Max replicas: 10 Deployment pods: 10 current / 10 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ScaleDownStabilized recent recommendations were higher than current one, applying the highest recent recommendation ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request) ScalingLimited True TooManyReplicas the desired replica count is more than the maximum replica count Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 89s horizontal-pod-autoscaler New size: 4; reason: cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 74s horizontal-pod-autoscaler New size: 8; reason: cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 59s horizontal-pod-autoscaler New size: 10; reason: cpu resource utilization (percentage of request) above target \u540c\u6837\u7684\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6765\u5173\u6389 busybox \u6765\u51cf\u5c11\u8d1f\u8f7d\uff0c\u7136\u540e\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u89c2\u5bdf\u4e0b HPA \u548c Deployment \u5bf9\u8c61\uff1a $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 0%/10% 1 10 1 14m $ kubectl get deployment hpa-demo NAME READY UP-TO-DATE AVAILABLE AGE hpa-demo 1/1 1 1 24m \u4ece Kubernetes v1.12 \u7248\u672c\u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e kube-controller-manager \u7ec4\u4ef6\u7684 --horizontal-pod-autoscaler-downscale-stabilization \u53c2\u6570\u6765\u8bbe\u7f6e\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\uff0c\u7528\u4e8e\u6307\u5b9a\u5728\u5f53\u524d\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c HPA \u5fc5\u987b\u7b49\u5f85\u591a\u957f\u65f6\u95f4\u624d\u80fd\u6267\u884c\u53e6\u4e00\u6b21\u7f29\u653e\u64cd\u4f5c\u3002\u9ed8\u8ba4\u4e3a 5 \u5206\u949f\uff0c\u4e5f\u5c31\u662f\u9ed8\u8ba4\u9700\u8981\u7b49\u5f855\u5206\u949f\u540e\u624d\u4f1a\u5f00\u59cb\u81ea\u52a8\u7f29\u653e \u3002 \u53ef\u4ee5\u770b\u5230\u526f\u672c\u6570\u91cf\u5df2\u7ecf\u7531 10 \u53d8\u4e3a 1\uff0c\u5f53\u524d\u6211\u4eec\u53ea\u662f\u6f14\u793a\u4e86 CPU \u4f7f\u7528\u7387\u8fd9\u4e00\u4e2a\u6307\u6807\uff0c\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u8fd8\u4f1a\u5b66\u4e60\u5230\u6839\u636e\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807\u6765\u81ea\u52a8\u5bf9 Pod \u8fdb\u884c\u6269\u7f29\u5bb9\u3002 $ kubectl describe hpa hpa-demo Name: hpa-demo Namespace: default Labels: <none> Annotations: <none> CreationTimestamp: Wed, 08 Apr 2020 09:33:15 +0800 Reference: Deployment/hpa-demo Metrics: ( current / target ) resource cpu on pods (as a percentage of request): 0% (0) / 10% Min replicas: 1 Max replicas: 10 Deployment pods: 1 current / 1 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ReadyForNewScale recommended size matches current size ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request) ScalingLimited True TooFewReplicas the desired replica count is less than the minimum replica count Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 11m horizontal-pod-autoscaler New size: 4; reason: cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 11m horizontal-pod-autoscaler New size: 8; reason: cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 10m horizontal-pod-autoscaler New size: 10; reason: cpu resource utilization (percentage of request) above target Normal SuccessfulRescale 4m23s horizontal-pod-autoscaler New size: 1; reason: All metrics below target [Jacob@i515190:~/Devops_sap/k8s_cka/CKAD]$ kubectl describe hpa hpa-demo","title":"2 \u57fa\u4e8e CPU"},{"location":"chap1/38k8s_hpa_metricsserver/#3","text":"HorizontalPodAutoscaler \u662f Kubernetes autoscaling API \u7ec4\u7684\u8d44\u6e90\uff0c\u5728\u5f53\u524d\u7a33\u5b9a\u7248\u672c autoscaling/v1 \u4e2d\u53ea\u652f\u6301\u57fa\u4e8e CPU \u6307\u6807\u7684\u7f29\u653e\u3002 \u5728 Beta \u7248\u672c autoscaling/v2beta2 \uff0c\u5f15\u5165\u4e86\u57fa\u4e8e\u5185\u5b58\u548c\u81ea\u5b9a\u4e49\u6307\u6807\u7684\u7f29\u653e\u3002\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u4f7f\u7528 Beta \u7248\u672c\u7684 API \u3002 \u73b0\u5728\u6211\u4eec\u7528 Deployment \u6765\u521b\u5efa\u4e00\u4e2a Nginx Pod\uff0c\u7136\u540e\u5229\u7528 HPA \u6765\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a\uff08 hpa-mem-demo.yaml \uff09 apiVersion: apps/v1 kind: Deployment metadata: name: hpa-mem-demo spec: selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: volumes: - name: increase-mem-script configMap: name: increase-mem-config containers: - name: nginx image: nginx ports: - containerPort: 80 volumeMounts: - name: increase-mem-script mountPath: /etc/script resources: requests: memory: 50Mi cpu: 50m securityContext: privileged: true \u8fd9\u91cc\u548c\u524d\u9762\u666e\u901a\u7684\u5e94\u7528\u6709\u4e00\u4e9b\u533a\u522b\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u540d\u4e3a increase-mem-config \u7684 ConfigMap \u8d44\u6e90\u5bf9\u8c61\u6302\u8f7d\u5230\u4e86\u5bb9\u5668\u4e2d\uff0c\u8be5\u914d\u7f6e\u6587\u4ef6\u662f\u7528\u4e8e\u540e\u9762\u589e\u52a0\u5bb9\u5668\u5185\u5b58\u5360\u7528\u7684\u811a\u672c\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a\uff08 increase-mem-cm.yaml \uff09 apiVersion: v1 kind: ConfigMap metadata: name: increase-mem-config data: increase-mem.sh: | #!/bin/bash mkdir /tmp/memory mount -t tmpfs -o size=40M tmpfs /tmp/memory dd if=/dev/zero of=/tmp/memory/block sleep 60 rm /tmp/memory/block umount /tmp/memory rmdir /tmp/memory $ kubectl apply -f increase-mem-cm.yaml $ kubectl apply -f hpa-mem-demo.yaml $ kubectl get pods -l app=nginx NAME READY STATUS RESTARTS AGE hpa-mem-demo-66944b79bf-696r8 1/1 Running 0 19s \u7136\u540e\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684 HPA \u8d44\u6e90\u5bf9\u8c61\uff1a\uff08 hpa-mem.yaml \uff09 apiVersion: autoscaling/v2beta1 kind: HorizontalPodAutoscaler metadata: name: nginx-hpa spec: scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: hpa-mem-demo minReplicas: 1 maxReplicas: 5 metrics: - type: Resource resource: name: memory targetAverageUtilization: 60 $ kubectl apply -f hpa-mem.yaml horizontalpodautoscaler.autoscaling/nginx-hpa created $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE hpa-demo Deployment/hpa-demo 0%/10% 1 10 1 22m nginx-hpa Deployment/hpa-mem-demo 4%/60% 1 5 1 15s \u5230\u8fd9\u91cc\u8bc1\u660e HPA \u8d44\u6e90\u5bf9\u8c61\u5df2\u7ecf\u90e8\u7f72\u6210\u529f\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5bf9\u5e94\u7528\u8fdb\u884c\u538b\u6d4b\uff0c\u5c06\u5185\u5b58\u538b\u4e0a\u53bb\uff0c\u76f4\u63a5\u6267\u884c\u4e0a\u9762\u6211\u4eec\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u7684 increase-mem.sh \u811a\u672c\u5373\u53ef\uff1a $ kubectl exec -it hpa-mem-demo-66944b79bf-696r8 /bin/bash root@hpa-mem-demo-66944b79bf-696r8:/# ls /etc/script/ increase-mem.sh root@hpa-mem-demo-66944b79bf-696r8:/# increase-mem.sh bash: increase-mem.sh: command not found root@hpa-mem-demo-66944b79bf-696r8:/# source /etc/script/increase-mem.sh dd: writing to '/tmp/memory/block': No space left on device 81921+0 records in 81920+0 records out 41943040 bytes (42 MB, 40 MiB) copied, 0.14645 s, 286 MB/s \u7136\u540e\u6253\u5f00\u53e6\u5916\u4e00\u4e2a\u7ec8\u7aef\u89c2\u5bdf HPA \u8d44\u6e90\u5bf9\u8c61\u7684\u53d8\u5316\u60c5\u51b5\uff1a $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE nginx-hpa Deployment/hpa-mem-demo 44%/60% 1 5 2 2m45s $ kubectl describe hpa nginx-hpa Name: nginx-hpa Namespace: default Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"autoscaling/v2beta1\",\"kind\":\"HorizontalPodAutoscaler\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-hpa\",\"namespace\":\"default\"... CreationTimestamp: Wed, 08 Apr 2020 09:55:46 +0800 Reference: Deployment/hpa-mem-demo Metrics: ( current / target ) resource memory on pods (as a percentage of request): 44% (23568384) / 60% Min replicas: 1 Max replicas: 5 Deployment pods: 2 current / 2 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ReadyForNewScale recommended size matches current size ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from memory resource utilization (percentage of request) ScalingLimited False DesiredWithinRange the desired count is within the acceptable range Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 47s horizontal-pod-autoscaler New size: 2; reason: memory resource utilization (percentage of request) above target $ kubectl top pod hpa-mem-demo-66944b79bf-f79l2 NAME CPU(cores) MEMORY(bytes) hpa-mem-demo-66944b79bf-tqrn9 0m 41Mi \u53ef\u4ee5\u770b\u5230\u5185\u5b58\u4f7f\u7528\u5df2\u7ecf\u8d85\u8fc7\u4e86\u6211\u4eec\u8bbe\u5b9a\u7684 60% \u8fd9\u4e2a\u9608\u503c\u4e86\uff0cHPA \u8d44\u6e90\u5bf9\u8c61\u4e5f\u5df2\u7ecf\u89e6\u53d1\u4e86\u81ea\u52a8\u6269\u5bb9\uff0c\u53d8\u6210\u4e86\u4e24\u4e2a\u526f\u672c\u4e86\uff1a $ kubectl get pods -l app=nginx NAME READY STATUS RESTARTS AGE hpa-mem-demo-66944b79bf-696r8 1/1 Running 0 9m39s hpa-mem-demo-66944b79bf-f79l2 1/1 Running 0 5m47s \u5f53\u5185\u5b58\u91ca\u653e\u6389\u540e\uff0c controller-manager \u9ed8\u8ba45\u5206\u949f\u8fc7\u540e\u4f1a\u8fdb\u884c\u7f29\u653e\uff0c\u5230\u8fd9\u91cc\u5c31\u5b8c\u6210\u4e86\u57fa\u4e8e\u5185\u5b58\u7684 HPA \u64cd\u4f5c\u3002","title":"3 \u57fa\u4e8e\u5185\u5b58"},{"location":"chap1/38k8s_hpa_metricsserver/#4","text":"\u9664\u4e86\u57fa\u4e8e CPU \u548c\u5185\u5b58\u6765\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6839\u636e\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807\u6765\u8fdb\u884c\u3002 \u8fd9\u4e2a\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528 Prometheus Adapter \uff0c Prometheus \u7528\u4e8e\u76d1\u63a7\u5e94\u7528\u7684\u8d1f\u8f7d\u548c\u96c6\u7fa4\u672c\u8eab\u7684\u5404\u79cd\u6307\u6807\uff0c Prometheus Adapter \u53ef\u4ee5\u5e2e\u6211\u4eec\u4f7f\u7528 Prometheus \u6536\u96c6\u7684\u6307\u6807\u5e76\u4f7f\u7528\u5b83\u4eec\u6765\u5236\u5b9a\u6269\u5c55\u7b56\u7565 \uff0c\u8fd9\u4e9b\u6307\u6807\u90fd\u662f\u901a\u8fc7 APIServer \u66b4\u9732\u7684\uff0c\u800c\u4e14 HPA \u8d44\u6e90\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u5f88\u8f7b\u6613\u7684\u76f4\u63a5\u4f7f\u7528 \u9996\u5148\uff0c\u6211\u4eec\u90e8\u7f72\u4e00\u4e2a\u793a\u4f8b\u5e94\u7528\uff0c\u5728\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e0a\u6d4b\u8bd5 Prometheus \u6307\u6807\u81ea\u52a8\u7f29\u653e\uff0c\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a\uff08 hpa-prome-demo.yaml \uff09 apiVersion: apps/v1 kind: Deployment metadata: name: hpa-prom-demo spec: selector: matchLabels: app: nginx-server template: metadata: labels: app: nginx-server spec: containers: - name: nginx-demo image: cnych/nginx-vts:v1.0 resources: limits: cpu: 50m requests: cpu: 50m ports: - containerPort: 80 name: http --- apiVersion: v1 kind: Service metadata: name: hpa-prom-demo annotations: prometheus.io/scrape: \"true\" prometheus.io/port: \"80\" prometheus.io/path: \"/status/format/prometheus\" spec: ports: - port: 80 targetPort: 80 name: http selector: app: nginx-server type: NodePort $ kubectl apply -f hpa-prome-demo.yaml deployment.apps/hpa-prom-demo created service/hpa-prom-demo created $ kubectl get pods -l app=nginx-server NAME READY STATUS RESTARTS AGE hpa-prom-demo-cddb7b67f-97pqf 1/1 Running 0 95s $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE hpa-prom-demo NodePort 10.104.168.230 <none> 80:30339/TCP 109s \u90e8\u7f72\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6d4b\u8bd5\u5e94\u7528\u662f\u5426\u6b63\u5e38\uff0c\u4ee5\u53ca\u6307\u6807\u6570\u636e\u63a5\u53e3\u80fd\u591f\u6b63\u5e38\u83b7\u53d6\uff1a $ curl localhost:30339 <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> <style> body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } </style> </head> <body> <h1>Welcome to nginx!</h1> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to <a href=\"http://nginx.org/\">nginx.org</a>.<br/> Commercial support is available at <a href=\"http://nginx.com/\">nginx.com</a>.</p> <p><em>Thank you for using nginx.</em></p> </body> </html> $ curl http://localhost:30339/status/format/prometheus # HELP nginx_vts_info Nginx info # TYPE nginx_vts_info gauge nginx_vts_info{hostname=\"hpa-prom-demo-cddb7b67f-97pqf\",version=\"1.13.12\"} 1 # HELP nginx_vts_start_time_seconds Nginx start time # TYPE nginx_vts_start_time_seconds gauge nginx_vts_start_time_seconds 1586312884.322 # HELP nginx_vts_main_connections Nginx connections # TYPE nginx_vts_main_connections gauge nginx_vts_main_connections{status=\"accepted\"} 4 nginx_vts_main_connections{status=\"active\"} 2 nginx_vts_main_connections{status=\"handled\"} 4 nginx_vts_main_connections{status=\"reading\"} 0 nginx_vts_main_connections{status=\"requests\"} 129 nginx_vts_main_connections{status=\"waiting\"} 1 nginx_vts_main_connections{status=\"writing\"} 1 # HELP nginx_vts_main_shm_usage_bytes Shared memory [ngx_http_vhost_traffic_status] info # TYPE nginx_vts_main_shm_usage_bytes gauge nginx_vts_main_shm_usage_bytes{shared=\"max_size\"} 1048575 ... \u4e0a\u9762\u7684\u6307\u6807\u6570\u636e\u4e2d\uff0c\u6211\u4eec\u6bd4\u8f83\u5173\u5fc3\u7684\u662f nginx_vts_server_requests_total \u8fd9\u4e2a\u6307\u6807\uff0c\u8868\u793a\u8bf7\u6c42\u603b\u6570\uff0c\u662f\u4e00\u4e2a Counter \u7c7b\u578b\u7684\u6307\u6807\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u8be5\u6307\u6807\u7684\u503c\u6765\u786e\u5b9a\u662f\u5426\u9700\u8981\u5bf9\u6211\u4eec\u7684\u5e94\u7528\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002 code prometheus-additional.yaml kubectl create secret generic additional-configs --from-file=prometheus-additional.yaml -n monitoring secret/additional-configs created $ kubectl get prometheus -n monitoring NAME VERSION REPLICAS AGE kube-prom-prometheus-opera-prometheus v2.15.2 1 17d kubectl edit prometheus kube-prom-prometheus-opera-prometheus -n monitoring ... securityContext: fsGroup: 2000 runAsNonRoot: true runAsUser: 1000 additionalScrapeConfigs: name: additional-configs key: prometheus-additional.yaml serviceAccountName: prometheus-k8s ... kubectl port-forward svc/prometheus-operated 9090:9090 -n monitoring \u63a5\u4e0b\u6765\u6211\u4eec\u5c06 Prometheus-Adapter \u5b89\u88c5\u5230\u96c6\u7fa4\u4e2d\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u89c4\u5219\u6765\u8ddf\u8e2a Pod \u7684\u8bf7\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 Prometheus \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6307\u6807\u90fd\u7528\u4e8e HPA \uff0c\u4f46\u662f\u524d\u63d0\u662f\u4f60\u5f97\u901a\u8fc7\u67e5\u8be2\u8bed\u53e5\u5c06\u5b83\u62ff\u5230\uff08\u5305\u62ec\u6307\u6807\u540d\u79f0\u548c\u5176\u5bf9\u5e94\u7684\u503c\uff09\u3002 \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u89c4\u5219\uff1a rules: - seriesQuery: 'nginx_vts_server_requests_total' seriesFilters: [] resources: overrides: kubernetes_namespace: resource: namespace kubernetes_pod_name: resource: pod name: matches: \"^(.*)_total\" as: \"${1}_per_second\" metricsQuery: (sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)) \u63a5\u4e0b\u6765\u6211\u4eec\u5c06 Prometheus-Adapter \u5b89\u88c5\u5230\u96c6\u7fa4\u4e2d\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u89c4\u5219\u6765\u8ddf\u8e2a Pod \u7684\u8bf7\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 Prometheus \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6307\u6807\u90fd\u7528\u4e8e HPA\uff0c\u4f46\u662f\u524d\u63d0\u662f\u4f60\u5f97\u901a\u8fc7\u67e5\u8be2\u8bed\u53e5\u5c06\u5b83\u62ff\u5230\uff08\u5305\u62ec\u6307\u6807\u540d\u79f0\u548c\u5176\u5bf9\u5e94\u7684\u503c\uff09\u3002 \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u89c4\u5219\uff1a rules: - seriesQuery: 'nginx_vts_server_requests_total' seriesFilters: [] resources: overrides: kubernetes_namespace: resource: namespace kubernetes_pod_name: resource: pod name: matches: \"^(.*)_total\" as: \"${1}_per_second\" metricsQuery: (sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)) \u8fd9\u662f\u4e00\u4e2a\u5e26\u53c2\u6570\u7684 Prometheus \u67e5\u8be2\uff0c\u5176\u4e2d\uff1a seriesQuery \uff1a\u67e5\u8be2 Prometheus \u7684\u8bed\u53e5\uff0c\u901a\u8fc7\u8fd9\u4e2a\u67e5\u8be2\u8bed\u53e5\u67e5\u8be2\u5230\u7684\u6240\u6709\u6307\u6807\u90fd\u53ef\u4ee5\u7528\u4e8e HPA seriesFilters \uff1a\u67e5\u8be2\u5230\u7684\u6307\u6807\u53ef\u80fd\u4f1a\u5b58\u5728\u4e0d\u9700\u8981\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u8fc7\u6ee4\u6389\u3002 resources \uff1a\u901a\u8fc7 seriesQuery \u67e5\u8be2\u5230\u7684\u53ea\u662f\u6307\u6807\uff0c\u5982\u679c\u9700\u8981\u67e5\u8be2\u67d0\u4e2a Pod \u7684\u6307\u6807\uff0c\u80af\u5b9a\u8981\u5c06\u5b83\u7684\u540d\u79f0\u548c\u6240\u5728\u7684\u547d\u540d\u7a7a\u95f4\u4f5c\u4e3a\u6307\u6807\u7684\u6807\u7b7e\u8fdb\u884c\u67e5\u8be2\uff0c resources \u5c31\u662f\u5c06\u6307\u6807\u7684\u6807\u7b7e\u548c k8s \u7684\u8d44\u6e90\u7c7b\u578b\u5173\u8054\u8d77\u6765\uff0c\u6700\u5e38\u7528\u7684\u5c31\u662f pod \u548c namespace \u3002\u6709\u4e24\u79cd\u6dfb\u52a0\u6807\u7b7e\u7684\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f overrides \uff0c\u53e6\u4e00\u79cd\u662f template \u3002 overrides \uff1a\u5b83\u4f1a\u5c06\u6307\u6807\u4e2d\u7684\u6807\u7b7e\u548c k8s \u8d44\u6e90\u5173\u8054\u8d77\u6765\u3002\u4e0a\u9762\u793a\u4f8b\u4e2d\u5c31\u662f\u5c06\u6307\u6807\u4e2d\u7684 pod \u548c namespace \u6807\u7b7e\u548c k8s \u4e2d\u7684 pod \u548c namespace \u5173\u8054\u8d77\u6765\uff0c\u56e0\u4e3a pod \u548c namespace \u90fd\u5c5e\u4e8e\u6838\u5fc3 api \u7ec4\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6307\u5b9a api \u7ec4\u3002\u5f53\u6211\u4eec\u67e5\u8be2\u67d0\u4e2a pod \u7684\u6307\u6807\u65f6\uff0c\u5b83\u4f1a\u81ea\u52a8\u5c06 pod \u7684\u540d\u79f0\u548c\u540d\u79f0\u7a7a\u95f4\u4f5c\u4e3a\u6807\u7b7e\u52a0\u5165\u5230\u67e5\u8be2\u6761\u4ef6\u4e2d\u3002\u6bd4\u5982 nginx: {group: \"apps\", resource: \"deployment\"} \u8fd9\u4e48\u5199\u8868\u793a\u7684\u5c31\u662f\u5c06\u6307\u6807\u4e2d nginx \u8fd9\u4e2a\u6807\u7b7e\u548c apps \u8fd9\u4e2a api \u7ec4\u4e2d\u7684 deployment \u8d44\u6e90\u5173\u8054\u8d77\u6765\uff1b template \uff1a\u901a\u8fc7 go \u6a21\u677f\u7684\u5f62\u5f0f\u3002\u6bd4\u5982 template: \"kube_<<.Group>>_<<.Resource>>\" \u8fd9\u4e48\u5199\u8868\u793a\uff0c\u5047\u5982 <<.Group>> \u4e3a apps\uff0c<<.Resource>> \u4e3a deployment \uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u5c06\u6307\u6807\u4e2d kube_apps_deployment \u6807\u7b7e\u548c deployment \u8d44\u6e90\u5173\u8054\u8d77\u6765\u3002 name \uff1a\u7528\u6765\u7ed9\u6307\u6807\u91cd\u547d\u540d\u7684\uff0c\u4e4b\u6240\u4ee5\u8981\u7ed9\u6307\u6807\u91cd\u547d\u540d\u662f\u56e0\u4e3a\u6709\u4e9b\u6307\u6807\u662f\u53ea\u589e\u7684\uff0c\u6bd4\u5982\u4ee5 total \u7ed3\u5c3e\u7684\u6307\u6807\u3002\u8fd9\u4e9b\u6307\u6807\u62ff\u6765\u505a HPA \u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u4e00\u822c\u8ba1\u7b97\u5b83\u7684\u901f\u7387\uff0c\u4ee5\u901f\u7387\u4f5c\u4e3a\u503c\uff0c\u90a3\u4e48\u6b64\u65f6\u7684\u540d\u79f0\u5c31\u4e0d\u80fd\u4ee5 total \u7ed3\u5c3e\u4e86\uff0c\u6240\u4ee5\u8981\u8fdb\u884c\u91cd\u547d\u540d\u3002 matches \uff1a\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5339\u914d\u6307\u6807\u540d\uff0c\u53ef\u4ee5\u8fdb\u884c\u5206\u7ec4 as \uff1a\u9ed8\u8ba4\u503c\u4e3a $1 \uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u5206\u7ec4\u3002 as \u4e3a\u7a7a\u5c31\u662f\u4f7f\u7528\u9ed8\u8ba4\u503c\u7684\u610f\u601d\u3002 metricsQuery \uff1a\u8fd9\u5c31\u662f Prometheus \u7684\u67e5\u8be2\u8bed\u53e5\u4e86\uff0c\u524d\u9762\u7684 seriesQuery \u67e5\u8be2\u662f\u83b7\u5f97 HPA \u6307\u6807\u3002\u5f53\u6211\u4eec\u8981\u67e5\u67d0\u4e2a\u6307\u6807\u7684\u503c\u65f6\u5c31\u8981\u901a\u8fc7\u5b83\u6307\u5b9a\u7684\u67e5\u8be2\u8bed\u53e5\u8fdb\u884c\u4e86\u3002\u53ef\u4ee5\u770b\u5230\u67e5\u8be2\u8bed\u53e5\u4f7f\u7528\u4e86\u901f\u7387\u548c\u5206\u7ec4\uff0c\u8fd9\u5c31\u662f\u89e3\u51b3\u4e0a\u9762\u63d0\u5230\u7684\u53ea\u589e\u6307\u6807\u7684\u95ee\u9898 Series \uff1a\u8868\u793a\u6307\u6807\u540d\u79f0 LabelMatchers \uff1a\u9644\u52a0\u7684\u6807\u7b7e\uff0c\u76ee\u524d\u53ea\u6709 pod \u548c namespace \u4e24\u79cd\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5728\u4e4b\u524d\u4f7f\u7528 resources \u8fdb\u884c\u5173\u8054 GroupBy \uff1a\u5c31\u662f pod \u540d\u79f0\uff0c\u540c\u6837\u9700\u8981\u4f7f\u7528 resources \u8fdb\u884c\u5173\u8054\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7 Helm Chart \u6765\u90e8\u7f72 Prometheus Adapter \uff0c\u65b0\u5efa hpa-prome-adapter-values.yaml \u6587\u4ef6\u8986\u76d6\u9ed8\u8ba4\u7684 Values \u503c\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a rules: default: false custom: - seriesQuery: 'nginx_vts_server_requests_total' resources: overrides: kubernetes_namespace: resource: namespace kubernetes_pod_name: resource: pod name: matches: \"^(.*)_total\" as: \"${1}_per_second\" metricsQuery: (sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)) prometheus: url: http://kube-prom-prometheus-opera-prometheus.monitoring.svc.cluster.local \u8fd9\u91cc\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u6761 rules \u89c4\u5219\uff0c\u7136\u540e\u6307\u5b9a\u4e86 Prometheus \u7684\u5730\u5740\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u4f7f\u7528\u4e86 Operator \u90e8\u7f72\u7684 Promethues \u96c6\u7fa4\uff0c\u6240\u4ee5\u7528 kube-prom-prometheus-opera-prometheus \u7684\u5730\u5740\u3002\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4e00\u952e\u5b89\u88c5\uff1a $ helm install prometheus-adapter stable/prometheus-adapter -n monitoring -f hpa-prome-adapter-values.yaml NAME: prometheus-adapter LAST DEPLOYED: Wed Apr 8 12:09:13 2020 NAMESPACE: monitoring STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: prometheus-adapter has been deployed. In a few minutes you should be able to list metrics using the following command(s): kubectl get --raw /apis/custom.metrics.k8s.io/v1beta1 \u7b49\u4e00\u5c0f\u4f1a\u513f\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u68c0\u6d4b\u662f\u5426\u751f\u6548\u4e86\uff1a $ kubectl get pods -n monitoring -l app=prometheus-adapter NAME READY STATUS RESTARTS AGE prometheus-adapter-58b559fc7d-mk5bz 1/1 Running 0 3m39s $ kubectl get --raw=\"/apis/custom.metrics.k8s.io/v1beta1\" | jq { \"kind\": \"APIResourceList\", \"apiVersion\": \"v1\", \"groupVersion\": \"custom.metrics.k8s.io/v1beta1\", \"resources\": [ { \"name\": \"namespaces/nginx_vts_server_requests_per_second\", \"singularName\": \"\", \"namespaced\": false, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] }, { \"name\": \"pods/nginx_vts_server_requests_per_second\", \"singularName\": \"\", \"namespaced\": true, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] } ] } \u6211\u4eec\u53ef\u4ee5\u770b\u5230 nginx_vts_server_requests_per_second \u6307\u6807\u53ef\u7528\u3002 \u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u68c0\u67e5\u8be5\u6307\u6807\u7684\u5f53\u524d\u503c\uff1a $ kubectl get --raw \"/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/*/nginx_vts_server_requests_per_second\" | jq . { \"kind\": \"MetricValueList\", \"apiVersion\": \"custom.metrics.k8s.io/v1beta1\", \"metadata\": { \"selfLink\": \"/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/%2A/nginx_vts_server_requests_per_second\" }, \"items\": [ { \"describedObject\": { \"kind\": \"Pod\", \"namespace\": \"default\", \"name\": \"hpa-prom-demo-755bb56f85-lvksr\", \"apiVersion\": \"/v1\" }, \"metricName\": \"nginx_vts_server_requests_per_second\", \"timestamp\": \"2020-04-07T09:45:45Z\", \"value\": \"527m\", \"selector\": null } ] } \u51fa\u73b0\u7c7b\u4f3c\u4e0a\u9762\u7684\u4fe1\u606f\u5c31\u8868\u660e\u5df2\u7ecf\u914d\u7f6e\u6210\u529f\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u90e8\u7f72\u4e00\u4e2a\u9488\u5bf9\u4e0a\u9762\u7684\u81ea\u5b9a\u4e49\u6307\u6807\u7684 HAP \u8d44\u6e90\u5bf9\u8c61\uff0c\u5982\u4e0b\u6240\u793a\uff1a( hpa-prome.yaml ) apiVersion: autoscaling/v2beta1 kind: HorizontalPodAutoscaler metadata: name: nginx-custom-hpa spec: scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: hpa-prom-demo minReplicas: 2 maxReplicas: 5 metrics: - type: Pods pods: metricName: nginx_vts_server_requests_per_second targetAverageValue: 10 \u5982\u679c\u8bf7\u6c42\u6570\u8d85\u8fc7\u6bcf\u79d210\u4e2a\uff0c\u5219\u5c06\u5bf9\u5e94\u7528\u8fdb\u884c\u6269\u5bb9\u3002\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl apply -f hpa-prome.yaml horizontalpodautoscaler.autoscaling/nginx-custom-hpa created $ kubectl describe hpa nginx-custom-hpa Name: nginx-custom-hpa Namespace: default Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"autoscaling/v2beta1\",\"kind\":\"HorizontalPodAutoscaler\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-custom-hpa\",\"namespace\":\"d... CreationTimestamp: Tue, 07 Apr 2020 17:54:55 +0800 Reference: Deployment/hpa-prom-demo Metrics: ( current / target ) \"nginx_vts_server_requests_per_second\" on pods: <unknown> / 10 Min replicas: 2 Max replicas: 5 Deployment pods: 1 current / 2 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True SucceededRescale the HPA controller was able to update the target scale to 2 Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 7s horizontal-pod-autoscaler New size: 2; reason: Current number of replicas below Spec.MinReplicas \u53ef\u4ee5\u770b\u5230 HPA \u5bf9\u8c61\u5df2\u7ecf\u751f\u6548\u4e86\uff0c\u4f1a\u5e94\u7528\u6700\u5c0f\u7684\u526f\u672c\u65702\uff0c\u6240\u4ee5\u4f1a\u65b0\u589e\u4e00\u4e2a Pod \u526f\u672c\uff1a $ kubectl get pods -l app=nginx-server NAME READY STATUS RESTARTS AGE hpa-prom-demo-755bb56f85-s5dzf 1/1 Running 0 67s hpa-prom-demo-755bb56f85-wbpfr 1/1 Running 0 3m30s \u63a5\u4e0b\u6765\u6211\u4eec\u540c\u6837\u5bf9\u5e94\u7528\u8fdb\u884c\u538b\u6d4b\uff1a $ while true; do wget -q -O- http://localhost:30339; done \u6253\u5f00\u53e6\u5916\u4e00\u4e2a\u7ec8\u7aef\u89c2\u5bdf HPA \u5bf9\u8c61\u7684\u53d8\u5316\uff1a $ kubectl get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE nginx-custom-hpa Deployment/hpa-prom-demo 14239m/10 2 5 2 4m27s $ kubectl describe hpa nginx-custom-hpa Name: nginx-custom-hpa Namespace: default Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"autoscaling/v2beta1\",\"kind\":\"HorizontalPodAutoscaler\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-custom-hpa\",\"namespace\":\"d... CreationTimestamp: Tue, 07 Apr 2020 17:54:55 +0800 Reference: Deployment/hpa-prom-demo Metrics: ( current / target ) \"nginx_vts_server_requests_per_second\" on pods: 14308m / 10 Min replicas: 2 Max replicas: 5 Deployment pods: 3 current / 3 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ReadyForNewScale recommended size matches current size ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from pods metric nginx_vts_server_requests_per_second ScalingLimited False DesiredWithinRange the desired count is within the acceptable range Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 5m2s horizontal-pod-autoscaler New size: 2; reason: Current number of replicas below Spec.MinReplicas Normal SuccessfulRescale 61s horizontal-pod-autoscaler New size: 3; reason: pods metric nginx_vts_server_requests_per_second above target \u53ef\u4ee5\u770b\u5230\u6307\u6807 nginx_vts_server_requests_per_second \u7684\u6570\u636e\u5df2\u7ecf\u8d85\u8fc7\u9608\u503c\u4e86\uff0c\u89e6\u53d1\u6269\u5bb9\u52a8\u4f5c\u4e86\uff0c\u526f\u672c\u6570\u53d8\u6210\u4e86 3 \uff0c\u4f46\u662f\u540e\u7eed\u5f88\u96be\u7ee7\u7eed\u6269\u5bb9\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e0a\u9762\u6211\u4eec\u7684 while \u547d\u4ee4\u5e76\u4e0d\u591f\u5feb\uff0c 3 \u4e2a\u526f\u672c\u5b8c\u5168\u53ef\u4ee5\u6ee1\u8db3\u6bcf\u79d2\u4e0d\u8d85\u8fc7 10 \u4e2a\u8bf7\u6c42\u7684\u9608\u503c\u3002 \u5982\u679c\u9700\u8981\u66f4\u597d\u7684\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u538b\u6d4b\u5de5\u5177\uff0c\u6bd4\u5982 ab\u3001fortio \u7b49\u5de5\u5177\u3002\u5f53\u6211\u4eec\u4e2d\u65ad\u6d4b\u8bd5\u540e\uff0c\u9ed8\u8ba45\u5206\u949f\u8fc7\u540e\u5c31\u4f1a\u81ea\u52a8\u7f29\u5bb9\uff1a $ kubectl describe hpa nginx-custom-hpa Name: nginx-custom-hpa Namespace: default Labels: <none> Annotations: kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"autoscaling/v2beta1\",\"kind\":\"HorizontalPodAutoscaler\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-custom-hpa\",\"namespace\":\"d... CreationTimestamp: Tue, 07 Apr 2020 17:54:55 +0800 Reference: Deployment/hpa-prom-demo Metrics: ( current / target ) \"nginx_vts_server_requests_per_second\" on pods: 533m / 10 Min replicas: 2 Max replicas: 5 Deployment pods: 2 current / 2 desired Conditions: Type Status Reason Message ---- ------ ------ ------- AbleToScale True ReadyForNewScale recommended size matches current size ScalingActive True ValidMetricFound the HPA was able to successfully calculate a replica count from pods metric nginx_vts_server_requests_per_second ScalingLimited True TooFewReplicas the desired replica count is less than the minimum replica count Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal SuccessfulRescale 23m horizontal-pod-autoscaler New size: 2; reason: Current number of replicas below Spec.MinReplicas Normal SuccessfulRescale 19m horizontal-pod-autoscaler New size: 3; reason: pods metric nginx_vts_server_requests_per_second above target Normal SuccessfulRescale 4m2s horizontal-pod-autoscaler New size: 2; reason: All metrics below target \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6307\u6807\u5bf9\u5e94\u7528\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u7684\u64cd\u4f5c\u3002\u5982\u679c Prometheus \u5b89\u88c5\u5728\u6211\u4eec\u7684 Kubernetes \u96c6\u7fa4\u4e4b\u5916\uff0c\u5219\u53ea\u9700\u8981\u786e\u4fdd\u53ef\u4ee5\u4ece\u96c6\u7fa4\u8bbf\u95ee\u5230\u67e5\u8be2\u7684\u7aef\u70b9\uff0c\u5e76\u5728 adapter \u7684\u90e8\u7f72\u6e05\u5355\u4e2d\u5bf9\u5176\u8fdb\u884c\u66f4\u65b0\u5373\u53ef\u3002\u5728\u66f4\u590d\u6742\u7684\u573a\u666f\u4e2d\uff0c\u53ef\u4ee5\u83b7\u53d6\u591a\u4e2a\u6307\u6807\u7ed3\u5408\u4f7f\u7528\u6765\u5236\u5b9a\u6269\u5c55\u7b56\u7565\u3002","title":"4 \u57fa\u4e8e\u81ea\u5b9a\u4e49\u6307\u6807"},{"location":"chap1/55prometheus_go_metrics/","text":"\u7b2c\u4e03\u8282 \u4e3aGo\u5e94\u7528\u6dfb\u52a0Prometheus\u76d1\u63a7\u6307\u6807 1\u3001\u521b\u5efa\u5e94\u7528 \u6211\u4eec\u9996\u5148\u4ece\u4e00\u4e2a\u6700\u7b80\u5355\u7684 Go \u5e94\u7528\u7a0b\u5e8f\u5f00\u59cb\uff0c\u5728\u7aef\u53e3 8080 \u7684 /metrics \u7aef\u70b9\u4e0a\u66b4\u9732\u5ba2\u6237\u7aef\u5e93\u7684\u9ed8\u8ba4\u6ce8\u518c\u8868\uff0c\u6682\u65f6\u8fd8\u6ca1\u6709\u8ddf\u8e2a\u4efb\u4f55\u5176\u4ed6\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807\u3002 \u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a instrument-demo \u7684\u76ee\u5f55\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u9762\u521d\u59cb\u5316\u9879\u76ee\uff1a \u2638 \u279c mkdir instrument-demo && cd instrument-demo \u2638 \u279c go mod init github.com/cnych/instrument-demo \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u5728 instrument-demo \u76ee\u5f55\u4e0b\u9762\u751f\u6210\u4e00\u4e2a go.mod \u6587\u4ef6\uff0c\u5728\u540c\u76ee\u5f55\u4e0b\u9762\u65b0\u5efa\u4e00\u4e2a main.go \u7684\u5165\u53e3\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a \uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { // Serve the default Prometheus metrics registry over HTTP on /metrics. http.Handle(\"/metrics\", promhttp.Handler()) http.ListenAndServe(\":8080\", nil) } \u7136\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u4e0b\u8f7d Prometheus \u5ba2\u6237\u7aef\u5e93\u4f9d\u8d56\uff1a \u2638 \u279c export GOPROXY=\"https://goproxy.cn\" \u2638 \u279c go mod tidy go: finding module for package github.com/prometheus/client_golang/prometheus/promhttp go: found github.com/prometheus/client_golang/prometheus/promhttp in github.com/prometheus/client_golang v1.11.0 go: downloading google.golang.org/protobuf v1.26.0-rc.1 \u7136\u540e\u76f4\u63a5\u6267\u884c go run \u547d\u4ee4\u542f\u52a8\u670d\u52a1\uff1a \u2638 \u279c go run main.go \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://localhost:8080/metrics \u6765\u83b7\u5f97\u9ed8\u8ba4\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff1a # HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles. # TYPE go_gc_duration_seconds summary go_gc_duration_seconds{quantile=\"0\"} 0 go_gc_duration_seconds{quantile=\"0.25\"} 0 go_gc_duration_seconds{quantile=\"0.5\"} 0 go_gc_duration_seconds{quantile=\"0.75\"} 0 go_gc_duration_seconds{quantile=\"1\"} 0 go_gc_duration_seconds_sum 0 go_gc_duration_seconds_count 0 # HELP go_goroutines Number of goroutines that currently exist. # TYPE go_goroutines gauge go_goroutines 6 ...... # HELP go_threads Number of OS threads created. # TYPE go_threads gauge go_threads 8 # HELP promhttp_metric_handler_requests_in_flight Current number of scrapes being served. # TYPE promhttp_metric_handler_requests_in_flight gauge promhttp_metric_handler_requests_in_flight 1 # HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code. # TYPE promhttp_metric_handler_requests_total counter promhttp_metric_handler_requests_total{code=\"200\"} 1 promhttp_metric_handler_requests_total{code=\"500\"} 0 promhttp_metric_handler_requests_total{code=\"503\"} 0 \u6211\u4eec\u5e76\u6ca1\u6709\u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0\u4ec0\u4e48\u4e1a\u52a1\u903b\u8f91\uff0c\u4f46\u662f\u53ef\u4ee5\u770b\u5230\u4f9d\u7136\u6709\u4e00\u4e9b\u6307\u6807\u6570\u636e\u8f93\u51fa\uff0c\u8fd9\u662f\u56e0\u4e3a Go \u5ba2\u6237\u7aef\u5e93\u9ed8\u8ba4\u5728\u6211\u4eec\u66b4\u9732\u7684\u5168\u5c40\u9ed8\u8ba4\u6307\u6807\u6ce8\u518c\u8868\u4e2d\u6ce8\u518c\u4e86\u4e00\u4e9b\u5173\u4e8e promhttp \u5904\u7406\u5668\u548c\u8fd0\u884c\u65f6\u95f4\u76f8\u5173\u7684\u9ed8\u8ba4\u6307\u6807\uff0c\u6839\u636e\u4e0d\u540c\u6307\u6807\u540d\u79f0\u7684\u524d\u7f00\u53ef\u4ee5\u770b\u51fa\uff1a go_* \uff1a\u4ee5 go_ \u4e3a\u524d\u7f00\u7684\u6307\u6807\u662f\u5173\u4e8e Go \u8fd0\u884c\u65f6\u76f8\u5173\u7684\u6307\u6807\uff0c\u6bd4\u5982\u5783\u573e\u56de\u6536\u65f6\u95f4\u3001 goroutine \u6570\u91cf\u7b49\uff0c\u8fd9\u4e9b\u90fd\u662f Go \u5ba2\u6237\u7aef\u5e93\u7279\u6709\u7684\uff0c\u5176\u4ed6\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u5e93\u53ef\u80fd\u4f1a\u66b4\u9732\u5404\u81ea\u8bed\u8a00\u7684\u5176\u4ed6\u8fd0\u884c\u65f6\u6307\u6807\u3002 promhttp_* \uff1a\u6765\u81ea promhttp \u5de5\u5177\u5305\u7684\u76f8\u5173\u6307\u6807\uff0c\u7528\u4e8e\u8ddf\u8e2a\u5bf9\u6307\u6807\u8bf7\u6c42\u7684\u5904\u7406 \u3002 \u8fd9\u4e9b\u9ed8\u8ba4\u7684\u6307\u6807\u662f\u975e\u5e38\u6709\u7528\uff0c\u4f46\u662f\u66f4\u591a\u7684\u65f6\u5019\u6211\u4eec\u9700\u8981\u81ea\u5df1\u63a7\u5236\uff0c\u6765\u66b4\u9732\u4e00\u4e9b\u81ea\u5b9a\u4e49\u6307\u6807\u3002\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u53bb\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u6307\u6807\u4e86\u3002 2\u3001\u6dfb\u52a0\u81ea\u5b9a\u4e49\u6307\u6807 \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7684 gauge \u6307\u6807\u6765\u66b4\u9732\u5f53\u524d\u7684\u6e29\u5ea6\u3002\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6 custom-metric/main.go \uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { // \u521b\u5efa\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55 label \u6807\u7b7e\u7684 gauge \u6307\u6807 temp := prometheus.NewGauge(prometheus.GaugeOpts{ Name: \"home_temperature_celsius\", Help: \"The current temperature in degrees Celsius.\", }) // \u5728\u9ed8\u8ba4\u7684\u6ce8\u518c\u8868\u4e2d\u6ce8\u518c\u8be5\u6307\u6807 prometheus.MustRegister(temp) // \u8bbe\u7f6e gauge \u7684\u503c\u4e3a 39 temp.Set(39) // \u66b4\u9732\u6307\u6807 http.Handle(\"/metrics\", promhttp.Handler()) http.ListenAndServe(\":8080\", nil) } \u4e0a\u9762\u6587\u4ef6\u4e2d\u548c\u6700\u521d\u7684\u6587\u4ef6\u5c31\u6709\u4e00\u4e9b\u53d8\u5316\u4e86\uff1a \u6211\u4eec\u4f7f\u7528 prometheus.NewGauge() \u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 gauge \u6307\u6807\u5bf9\u8c61\uff0c\u6307\u6807\u540d\u79f0\u4e3a home_temperature_celsius \uff0c\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6ce8\u91ca\u4fe1\u606f\u3002 \u7136\u540e\u4f7f\u7528 prometheus.MustRegister() \u51fd\u6570\u5728\u9ed8\u8ba4\u7684\u6ce8\u518c\u8868\u4e2d\u6ce8\u518c\u4e86\u8fd9\u4e2a gauge \u6307\u6807\u5bf9\u8c61\u3002 \u901a\u8fc7\u8c03\u7528 Set() \u65b9\u6cd5\u5c06 gauge \u6307\u6807\u7684\u503c\u8bbe\u7f6e\u4e3a 39\u3002 \u7136\u540e\u50cf\u4e4b\u524d\u4e00\u6837\u901a\u8fc7 HTTP \u66b4\u9732\u9ed8\u8ba4\u7684\u6ce8\u518c\u8868\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\u9664\u4e86 prometheus.MustRegister() \u51fd\u6570\u4e4b\u5916\u8fd8\u6709\u4e00\u4e2a prometheus.Register() \u51fd\u6570\uff0c\u4e00\u822c\u5728 golang \u4e2d\u6211\u4eec\u4f1a\u5c06 Mustxxx \u5f00\u5934\u7684\u51fd\u6570\u5b9a\u4e49\u4e3a\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u7684\u51fd\u6570\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u4f1a\u8fd4\u56de\u4e00\u4e2a panic \u800c\u4e0d\u662f\u4e00\u4e2a error \u64cd\u4f5c\uff0c\u6240\u4ee5\u5982\u679c\u8fd9\u91cc\u4e0d\u80fd\u6b63\u5e38\u6ce8\u518c\u7684\u8bdd\u4f1a\u629b\u51fa\u4e00\u4e2a panic\u3002 \u73b0\u5728\u6211\u4eec\u6765\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff1a \u2638 \u279c go run ./custom-metric \u542f\u52a8\u540e\u91cd\u65b0\u8bbf\u95ee\u6307\u6807\u63a5\u53e3 http://localhost:8080/metrics \uff0c\u4ed4\u7ec6\u5bf9\u6bd4\u6211\u4eec\u4f1a\u53d1\u73b0\u591a\u4e86\u4e00\u4e2a\u540d\u4e3a home_temperature_celsius \u7684\u6307\u6807\uff1a ... # HELP home_temperature_celsius The current temperature in degrees Celsius. # TYPE home_temperature_celsius gauge home_temperature_celsius 42 ... \u8fd9\u6837\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u6dfb\u52a0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6307\u6807\u7684\u64cd\u4f5c\uff0c\u6574\u4f53\u6bd4\u8f83\u7b80\u5355\uff0c\u5f53\u7136\u5728\u5b9e\u9645\u7684\u9879\u76ee\u4e2d\u9700\u8981\u7ed3\u5408\u4e1a\u52a1\u6765\u786e\u5b9a\u6dfb\u52a0\u54ea\u4e9b\u81ea\u5b9a\u4e49\u6307\u6807\u3002 3\u3001\u81ea\u5b9a\u4e49\u6ce8\u518c\u8868 3-1 Gauges \u524d\u9762\u7684\u793a\u4f8b\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\u5982\u4f55\u6dfb\u52a0 gauge \u7c7b\u578b\u7684\u6307\u6807\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55\u6807\u7b7e\u7684\u6307\u6807\uff0c\u76f4\u63a5\u4f7f\u7528 prometheus.NewGauge() \u51fd\u6570\u5373\u53ef\u5b9e\u4f8b\u5316\u4e00\u4e2a gauge \u7c7b\u578b\u7684\u6307\u6807\u5bf9\u8c61\uff0c\u901a\u8fc7 prometheus.GaugeOpts \u5bf9\u8c61\u53ef\u4ee5\u6307\u5b9a\u6307\u6807\u7684\u540d\u79f0\u548c\u6ce8\u91ca\u4fe1\u606f\uff1a queueLength := prometheus.NewGauge(prometheus.GaugeOpts{ Name: \"queue_length\", Help: \"The number of items in the queue.\", }) \u6211\u4eec\u77e5\u9053 gauge \u7c7b\u578b\u7684\u6307\u6807\u503c\u662f\u53ef\u4ee5\u4e0a\u5347\u6216\u4e0b\u964d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e3a gauge \u6307\u6807\u8bbe\u7f6e\u4e00\u4e2a\u6307\u5b9a\u7684\u503c\uff0c\u6240\u4ee5 gauge \u6307\u6807\u5bf9\u8c61\u66b4\u9732\u4e86 Set() \u3001 Inc() \u3001 Dec() \u3001 Add() \u548c Sub() \u8fd9\u4e9b\u51fd\u6570\u6765\u66f4\u6539\u6307\u6807\u503c \uff1a // \u4f7f\u7528 Set() \u8bbe\u7f6e\u6307\u5b9a\u7684\u503c queueLength.Set(0) // \u589e\u52a0\u6216\u51cf\u5c11 queueLength.Inc() // +1\uff1aIncrement the gauge by 1. queueLength.Dec() // -1\uff1aDecrement the gauge by 1. queueLength.Add(23) // Increment by 23. queueLength.Sub(42) // Decrement by 42. \u53e6\u5916 gauge \u4eea\u8868\u76d8\u7ecf\u5e38\u88ab\u7528\u6765\u66b4\u9732 Unix \u7684\u65f6\u95f4\u6233\u6837\u672c\u503c\uff0c\u6240\u4ee5\u4e5f\u6709\u4e00\u4e2a\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u5c06 gauge \u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u6233\uff1a demoTimestamp.SetToCurrentTime() \u6700\u7ec8 gauge \u6307\u6807\u4f1a\u88ab\u6e32\u67d3\u6210\u5982\u4e0b\u6240\u793a\u7684\u6570\u636e\uff1a # HELP queue_length The number of items in the queue. # TYPE queue_length gauge queue_length 42 3-2 Counters \u8981\u521b\u5efa\u4e00\u4e2a counter \u7c7b\u578b\u7684\u6307\u6807\u548c gauge \u6bd4\u8f83\u7c7b\u4f3c\uff0c\u53ea\u662f\u7528 prometheus.NewCounter() \u51fd\u6570\u6765\u521d\u59cb\u5316\u6307\u6807\u5bf9\u8c61\uff1a totalRequests := prometheus.NewCounter(prometheus.CounterOpts{ Name: \"http_requests_total\", Help: \"The total number of handled HTTP requests.\", }) \u6211\u4eec\u77e5\u9053 counter \u6307\u6807\u53ea\u80fd\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u4e0d\u65ad\u589e\u52a0\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4e3a\u5176\u8bbe\u7f6e\u4e00\u4e2a\u6307\u5b9a\u7684\u503c\u6216\u8005\u51cf\u5c11\u6307\u6807\u503c\uff0c\u6240\u4ee5\u8be5\u5bf9\u8c61\u4e0b\u9762\u53ea\u6709 Inc() \u548c Add() \u4e24\u4e2a\u51fd\u6570\uff1a totalRequests.Inc() // +1\uff1aIncrement the counter by 1. totalRequests.Add(23) // +n\uff1aIncrement the counter by 23. \u5f53\u670d\u52a1\u8fdb\u7a0b\u91cd\u65b0\u542f\u52a8\u7684\u65f6\u5019\uff0ccounter \u6307\u6807\u503c\u4f1a\u88ab\u91cd\u7f6e\u4e3a 0\uff0c\u4e0d\u8fc7\u4e0d\u7528\u62c5\u5fc3\u6570\u636e\u9519\u4e71\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u4f7f\u7528\u7684 rate() \u51fd\u6570\u4f1a\u81ea\u52a8\u5904\u7406\u3002 # HELP http_requests_total The total number of handled HTTP requests. # TYPE http_requests_total counter http_requests_total 7734 3-3 Histograms \u521b\u5efa\u76f4\u65b9\u56fe\u6307\u6807\u6bd4 counter \u548c gauge \u90fd\u8981\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u914d\u7f6e\u628a\u89c2\u6d4b\u503c\u5f52\u5165\u7684 bucket \u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u6bcf\u4e2a bucket \u7684\u4e0a\u8fb9\u754c\u3002 Prometheus \u4e2d\u7684\u76f4\u65b9\u56fe\u662f\u7d2f\u79ef\u7684\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u540e\u7eed\u7684 bucket \u90fd\u5305\u542b\u524d\u4e00\u4e2a bucket \u7684\u89c2\u5bdf\u8ba1\u6570\uff0c\u6240\u6709 bucket \u7684\u4e0b\u9650\u90fd\u4ece 0 \u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u660e\u786e\u914d\u7f6e\u6bcf\u4e2a bucket \u7684\u4e0b\u9650\uff0c\u53ea\u9700\u8981\u914d\u7f6e\u4e0a\u9650\u5373\u53ef\u3002 \u540c\u6837\u8981\u521b\u5efa\u76f4\u65b9\u56fe\u6307\u6807\u5bf9\u8c61\uff0c\u6211\u4eec\u4f7f\u7528 prometheus.NewHistogram() \u51fd\u6570\u6765\u8fdb\u884c\u521d\u59cb\u5316\uff1a requestDurations := prometheus.NewHistogram(prometheus.HistogramOpts{ Name: \"http_request_duration_seconds\", Help: \"A histogram of the HTTP request durations in seconds.\", // Bucket \u914d\u7f6e\uff1a\u7b2c\u4e00\u4e2a bucket \u5305\u62ec\u6240\u6709\u5728 0.05s \u5185\u5b8c\u6210\u7684\u8bf7\u6c42\uff0c\u6700\u540e\u4e00\u4e2a\u5305\u62ec\u6240\u6709\u572810s\u5185\u5b8c\u6210\u7684\u8bf7\u6c42\u3002 Buckets: []float64{0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10}, }) \u8fd9\u91cc\u548c\u524d\u9762\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5728\u4e8e\u9664\u4e86\u6307\u5b9a\u6307\u6807\u540d\u79f0\u548c\u5e2e\u52a9\u4fe1\u606f\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u914d\u7f6e Buckets\u3002\u5982\u679c\u6211\u4eec\u624b\u52a8\u53bb\u679a\u4e3e\u6240\u6709\u7684 bucket \u53ef\u80fd\u5f88\u7e41\u7410\uff0c\u6240\u4ee5 Go \u5ba2\u6237\u7aef\u5e93\u4e3a\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u8f85\u52a9\u51fd\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u7ebf\u6027\u6216\u8005\u6307\u6570\u589e\u957f\u7684 bucket\uff0c\u6bd4\u5982 prometheus.LinearBuckets() \u548c prometheus.ExponentialBuckets() \u51fd\u6570\u3002 \u76f4\u65b9\u56fe\u4f1a\u81ea\u52a8\u5bf9\u6570\u503c\u7684\u5206\u5e03\u8fdb\u884c\u5206\u7c7b\u548c\u8ba1\u6570\uff0c\u6240\u4ee5\u5b83\u53ea\u6709\u4e00\u4e2a Observe() \u65b9\u6cd5\uff0c\u6bcf\u5f53\u4f60\u5728\u4ee3\u7801\u4e2d\u5904\u7406\u8981\u8ddf\u8e2a\u7684\u6570\u636e\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u521a\u521a\u5904\u7406\u4e86\u4e00\u4e2a HTTP \u8bf7\u6c42\uff0c\u82b1\u4e86 0.42 \u79d2\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u8ddf\u8e2a\u3002 requestDurations.Observe(0.42) \u7531\u4e8e\u8ddf\u8e2a\u6301\u7eed\u65f6\u95f4\u662f\u76f4\u65b9\u56fe\u7684\u4e00\u4e2a\u5e38\u89c1\u7528\u4f8b\uff0cGo \u5ba2\u6237\u7aef\u5e93\u5c31\u63d0\u4f9b\u4e86\u8f85\u52a9\u51fd\u6570\uff0c\u7528\u4e8e\u5bf9\u4ee3\u7801\u7684\u67d0\u4e9b\u90e8\u5206\u8fdb\u884c\u8ba1\u65f6\uff0c\u7136\u540e\u81ea\u52a8\u89c2\u5bdf\u6240\u4ea7\u751f\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u76f4\u65b9\u56fe\uff0c\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff1a // \u542f\u52a8\u4e00\u4e2a\u8ba1\u65f6\u5668 timer := prometheus.NewTimer(requestDurations) // [...\u5728\u5e94\u7528\u4e2d\u5904\u7406\u8bf7\u6c42...] // \u505c\u6b62\u8ba1\u65f6\u5668\u5e76\u89c2\u5bdf\u5176\u6301\u7eed\u65f6\u95f4\uff0c\u5c06\u5176\u653e\u8fdb requestDurations \u7684\u76f4\u65b9\u56fe\u6307\u6807\u4e2d\u53bb timer.ObserveDuration() \u76f4\u65b9\u56fe\u6307\u6807\u6700\u7ec8\u4f1a\u751f\u6210\u5982\u4e0b\u6240\u793a\u7684\u6570\u636e\uff1a # HELP http_request_duration_seconds A histogram of the HTTP request durations in seconds. # TYPE http_request_duration_seconds histogram http_request_duration_seconds_bucket{le=\"0.05\"} 4599 http_request_duration_seconds_bucket{le=\"0.1\"} 24128 http_request_duration_seconds_bucket{le=\"0.25\"} 45311 http_request_duration_seconds_bucket{le=\"0.5\"} 59983 http_request_duration_seconds_bucket{le=\"1\"} 60345 http_request_duration_seconds_bucket{le=\"2.5\"} 114003 http_request_duration_seconds_bucket{le=\"5\"} 201325 http_request_duration_seconds_bucket{le=\"+Inf\"} 227420 http_request_duration_seconds_sum 88364.234 http_request_duration_seconds_count 227420 \u6bcf\u4e2a\u914d\u7f6e\u7684\u5b58\u50a8\u6876\u6700\u7ec8\u4f5c\u4e3a\u4e00\u4e2a\u5e26\u6709 _bucket \u540e\u7f00\u7684\u8ba1\u6570\u5668\u65f6\u95f4\u5e8f\u5217\uff0c\u4f7f\u7528 le\uff08\u5c0f\u4e8e\u6216\u7b49\u4e8e \uff09 \u6807\u7b7e\u6307\u793a\u8be5\u5b58\u50a8\u6876\u7684\u4e0a\u9650\uff0c\u5177\u6709\u4e0a\u9650\u7684\u9690\u5f0f\u5b58\u50a8\u6876 +Inf \u4e5f\u66b4\u9732\u4e8e\u6bd4\u6700\u5927\u914d\u7f6e\u7684\u5b58\u50a8\u6876\u8fb9\u754c\u82b1\u8d39\u66f4\u957f\u7684\u65f6\u95f4\u7684\u8bf7\u6c42\uff0c\u8fd8\u5305\u62ec\u4f7f\u7528\u540e\u7f00 _sum \u7d2f\u79ef\u603b\u548c\u548c\u8ba1\u6570 _count \u7684\u6307\u6807\uff0c\u8fd9\u4e9b\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5728\u6982\u5ff5\u4e0a\u90fd\u662f\u4e00\u4e2a counter \u8ba1\u6570\u5668\uff08\u53ea\u80fd\u4e0a\u5347\u7684\u5355\u4e2a\u503c\uff09\uff0c\u53ea\u662f\u5b83\u4eec\u662f\u4f5c\u4e3a\u76f4\u65b9\u56fe\u7684\u4e00\u90e8\u5206\u521b\u5efa\u7684\u3002 3-4 Summaries \u521b\u5efa\u548c\u4f7f\u7528\u6458\u8981\u4e0e\u76f4\u65b9\u56fe\u975e\u5e38\u7c7b\u4f3c\uff0c\u53ea\u662f\u6211\u4eec\u9700\u8981\u6307\u5b9a\u8981\u8ddf\u8e2a\u7684 quantiles \u5206\u4f4d\u6570\u503c\uff0c\u800c\u4e0d\u9700\u8981\u5904\u7406 bucket \u6876\uff0c\u6bd4\u5982\u6211\u4eec\u60f3\u8981\u8ddf\u8e2a HTTP \u8bf7\u6c42\u5ef6\u8fdf\u7684\u7b2c 50\u300190 \u548c 99 \u4e2a\u767e\u5206\u4f4d\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u8fd9\u6837\u7684\u4e00\u4e2a\u6458\u8981\u5bf9\u8c61\uff1a requestDurations := prometheus.NewSummary(prometheus.SummaryOpts{ Name: \"http_request_duration_seconds\", Help: \"A summary of the HTTP request durations in seconds.\", Objectives: map[float64]float64{ 0.5: 0.05, // \u7b2c50\u4e2a\u767e\u5206\u4f4d\u6570\uff0c\u6700\u5927\u7edd\u5bf9\u8bef\u5dee\u4e3a0.05\u3002 0.9: 0.01, // \u7b2c90\u4e2a\u767e\u5206\u4f4d\u6570\uff0c\u6700\u5927\u7edd\u5bf9\u8bef\u5dee\u4e3a0.01\u3002 0.99: 0.001, // \u7b2c90\u4e2a\u767e\u5206\u4f4d\u6570\uff0c\u6700\u5927\u7edd\u5bf9\u8bef\u5dee\u4e3a0.001\u3002 }, }, ) \u8fd9\u91cc\u548c\u524d\u9762\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5728\u4e8e\u4f7f\u7528 prometheus.NewSummary() \u51fd\u6570\u521d\u59cb\u5316\u6458\u8981\u6307\u6807\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u9700\u8981\u901a\u8fc7 prometheus.SummaryOpts{} \u5bf9\u8c61\u7684 Objectives \u5c5e\u6027\u6307\u5b9a\u60f3\u8981\u8ddf\u8e2a\u7684\u5206\u4f4d\u6570\u503c \u3002 \u540c\u6837\u6458\u8981\u6307\u6807\u5bf9\u8c61\u521b\u5efa\u540e\uff0c\u8ddf\u8e2a\u6301\u7eed\u65f6\u95f4\u7684\u65b9\u5f0f\u548c\u76f4\u65b9\u56fe\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u4f7f\u7528\u4e00\u4e2a Observe() \u51fd\u6570\u5373\u53ef\uff1a requestDurations.Observe(0.42) \u867d\u7136\u76f4\u65b9\u56fe\u6876\u53ef\u4ee5\u8de8\u7ef4\u5ea6\u6c47\u603b\uff08\u5982\u7aef\u70b9\u3001HTTP \u65b9\u6cd5\u7b49\uff09\uff0c\u4f46\u8fd9\u5bf9\u4e8e\u6c47\u603b quantiles \u5206\u4f4d\u6570\u503c\u6765\u8bf4\u5728\u7edf\u8ba1\u5b66\u4e0a\u662f\u65e0\u6548\u7684\u3002\u4f8b\u5982\uff0c\u4f60\u4e0d\u80fd\u5bf9\u4e24\u4e2a\u5355\u72ec\u7684\u670d\u52a1\u5b9e\u4f8b\u7684\u7b2c 90 \u767e\u5206\u4f4d\u5ef6\u8fdf\u8fdb\u884c\u5e73\u5747\uff0c\u5e76\u671f\u671b\u5f97\u5230\u4e00\u4e2a\u6709\u6548\u7684\u6574\u4f53\u7b2c 90 \u767e\u5206\u4f4d\u5ef6\u8fdf\u3002\u5982\u679c\u9700\u8981\u6309\u7ef4\u5ea6\u8fdb\u884c\u6c47\u603b\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u4f7f\u7528\u76f4\u65b9\u56fe\u800c\u4e0d\u662f\u6458\u8981\u6307\u6807\u3002 \u6458\u8981\u6307\u6807\u6700\u7ec8\u751f\u6210\u7684\u6307\u6807\u6570\u636e\u4e0e\u76f4\u65b9\u56fe\u975e\u5e38\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u4f7f\u7528 quantile \u6807\u7b7e\u6765\u8868\u793a\u5206\u4f4d\u6570\u5e8f\u5217\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5e8f\u5217\u6ca1\u6709\u6269\u5c55\u6307\u6807\u540d\u79f0\u7684\u540e\u7f00\uff1a # HELP http_request_duration_seconds A summary of the HTTP request durations in seconds. # TYPE http_request_duration_seconds summary http_request_duration_seconds{quantile=\"0.5\"} 0.052 http_request_duration_seconds{quantile=\"0.90\"} 0.564 http_request_duration_seconds{quantile=\"0.99\"} 2.372 http_request_duration_seconds_sum 88364.234 http_request_duration_seconds_count 227420 3-5 \u6807\u7b7e \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u4e3a\u6307\u6807\u5bf9\u8c61\u6dfb\u52a0\u4efb\u4f55\u7684\u6807\u7b7e\uff0c\u8981\u521b\u5efa\u5177\u6709\u6807\u7b7e\u7ef4\u5ea6\u7684\u6307\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u7c7b\u4f3c\u4e8e NewXXXVec() \u7684\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316\u6307\u6807\u5bf9\u8c61\uff1a NewGauge() \u53d8\u6210 NewGaugeVec() NewCounter() \u53d8\u6210 NewCounterVec() NewSummary() \u53d8\u6210 NewSummaryVec() NewHistogram() \u53d8\u6210 NewHistogramVec() \u8fd9\u4e9b\u51fd\u6570\u5141\u8bb8\u6211\u4eec\u6307\u5b9a\u4e00\u4e2a\u989d\u5916\u7684\u5b57\u7b26\u4e32\u5207\u7247\u53c2\u6570\uff0c\u63d0\u4f9b\u6807\u7b7e\u540d\u79f0\u7684\u5217\u8868\uff0c\u901a\u8fc7\u5b83\u6765\u62c6\u5206\u6307\u6807\u3002 \u4f8b\u5982\uff0c\u4e3a\u4e86\u6309\u7167\u623f\u5b50\u4ee5\u53ca\u6d4b\u91cf\u6e29\u5ea6\u7684\u623f\u95f4\u6765\u5212\u5206\u6211\u4eec\u65e9\u671f\u7684\u6e29\u5ea6\u8868\u6307\u6807\uff0c\u53ef\u4ee5\u8fd9\u6837\u521b\u5efa\u6307\u6807\u3002 temp := prometheus.NewGaugeVec( prometheus.GaugeOpts{ Name: \"home_temperature_celsius\", Help: \"The current temperature in degrees Celsius.\", }, // \u4e24\u4e2a\u6807\u7b7e\u540d\u79f0\uff0c\u901a\u8fc7\u5b83\u4eec\u6765\u5206\u5272\u6307\u6807\u3002 []string{\"house\", \"room\"}, ) \u7136\u540e\u8981\u8bbf\u95ee\u4e00\u4e2a\u7279\u6709\u6807\u7b7e\u7684\u5b50\u6307\u6807\uff0c\u9700\u8981\u5728\u8bbe\u7f6e\u5176\u503c\u4e4b\u524d\uff0c\u7528 house \u548c room \u6807\u7b7e\u7684\u5404\u81ea\u6570\u503c\uff0c\u5bf9\u4ea7\u751f\u7684 gauge \u5411\u91cf\u8c03\u7528 WithLabelValues() \u65b9\u6cd5\u6765\u5904\u7406\u4e0b\uff1a // \u4e3a home=ydzs \u548c room=living-room \u8bbe\u7f6e\u6307\u6807\u503c temp.WithLabelValues(\"ydzs\", \"living-room\").Set(27) \u5982\u679c\u4f60\u559c\u6b22\u5728\u9009\u62e9\u7684\u5b50\u6307\u6807\u4e2d\u660e\u786e\u63d0\u4f9b\u6807\u7b7e\u540d\u79f0\uff0c\u53ef\u4ee5\u4f7f\u7528\u6548\u7387\u7a0d\u4f4e\u7684 With() \u65b9\u6cd5\u6765\u4ee3\u66ff \uff1a temp.With(prometheus.Labels{\"house\": \"ydzs\", \"room\": \"living-room\"}).Set(66) \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u5982\u679c\u5411\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4f20\u9012\u4e0d\u6b63\u786e\u7684\u6807\u7b7e\u6570\u91cf\u6216\u4e0d\u6b63\u786e\u7684\u6807\u7b7e\u540d\u79f0\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u4f1a\u89e6\u53d1 panic\u3002 \u4e0b\u9762\u662f\u6211\u4eec\u6309\u7167 house \u548c room \u6807\u7b7e\u7ef4\u5ea6\u533a\u5206\u6307\u6807\u7684\u5b8c\u6574\u793a\u4f8b\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a label-metric/main.go \u7684\u65b0\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { // \u521b\u5efa\u5e26 house \u548c room \u6807\u7b7e\u7684 gauge \u6307\u6807\u5bf9\u8c61 temp := prometheus.NewGaugeVec( prometheus.GaugeOpts{ Name: \"home_temperature_celsius\", Help: \"The current temperature in degrees Celsius.\", }, // \u6307\u5b9a\u6807\u7b7e\u540d\u79f0 []string{\"house\", \"room\"}, ) // \u6ce8\u518c\u5230\u5168\u5c40\u9ed8\u8ba4\u6ce8\u518c\u8868\u4e2d prometheus.MustRegister(temp) // \u9488\u5bf9\u4e0d\u540c\u6807\u7b7e\u503c\u8bbe\u7f6e\u4e0d\u540c\u7684\u6307\u6807\u503c temp.WithLabelValues(\"cnych\", \"living-room\").Set(27) temp.WithLabelValues(\"cnych\", \"bedroom\").Set(25.3) temp.WithLabelValues(\"ydzs\", \"living-room\").Set(24.5) temp.WithLabelValues(\"ydzs\", \"bedroom\").Set(27.7) // \u66b4\u9732\u81ea\u5b9a\u4e49\u7684\u6307\u6807 http.Handle(\"/metrics\", promhttp.Handler()) http.ListenAndServe(\":8080\", nil) } \u4e0a\u9762\u4ee3\u7801\u975e\u5e38\u6e05\u6670\u4e86\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\uff1a \u2638 \u279c go run ./label-metric \u542f\u52a8\u5b8c\u6210\u540e\u91cd\u65b0\u8bbf\u95ee\u6307\u6807\u7aef\u70b9 http://localhost:8080/metrics \uff0c\u53ef\u4ee5\u627e\u5230 home_temperature_celsius \u6307\u6807\u4e0d\u540c\u6807\u7b7e\u7ef4\u5ea6\u4e0b\u9762\u7684\u6307\u6807\u503c\uff1a ... # HELP home_temperature_celsius The current temperature in degrees Celsius. # TYPE home_temperature_celsius gauge home_temperature_celsius{house=\"cnych\",room=\"bedroom\"} 25.3 home_temperature_celsius{house=\"cnych\",room=\"living-room\"} 27 home_temperature_celsius{house=\"ydzs\",room=\"bedroom\"} 27.7 home_temperature_celsius{house=\"ydzs\",room=\"living-room\"} 24.5 ... \u6ce8\u610f\uff1a\u5f53\u4f7f\u7528\u5e26\u6709\u6807\u7b7e\u7ef4\u5ea6\u7684\u6307\u6807\u65f6\uff0c\u4efb\u4f55\u6807\u7b7e\u7ec4\u5408\u7684\u65f6\u95f4\u5e8f\u5217\u53ea\u6709\u5728\u8be5\u6807\u7b7e\u7ec4\u5408\u88ab\u8bbf\u95ee\u8fc7\u81f3\u5c11\u4e00\u6b21\u540e\u624d\u4f1a\u51fa\u73b0\u5728 /metrics \u8f93\u51fa\u4e2d\uff0c\u8fd9\u5bf9\u6211\u4eec\u5728 PromQL \u67e5\u8be2\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u4e00\u4e9b\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u5e0c\u671b\u67d0\u4e9b\u65f6\u95f4\u5e8f\u5217\u4e00\u76f4\u5b58\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7a0b\u5e8f\u7b2c\u4e00\u6b21\u542f\u52a8\u65f6\uff0c\u5c06\u6240\u6709\u91cd\u8981\u7684\u6807\u7b7e\u7ec4\u5408\u9884\u5148\u521d\u59cb\u5316\u4e3a\u9ed8\u8ba4\u503c\u3002","title":"\u7b2c\u4e03\u8282 \u4e3aGo\u5e94\u7528\u6dfb\u52a0Prometheus\u76d1\u63a7\u6307\u6807"},{"location":"chap1/55prometheus_go_metrics/#goprometheus","text":"","title":"\u7b2c\u4e03\u8282 \u4e3aGo\u5e94\u7528\u6dfb\u52a0Prometheus\u76d1\u63a7\u6307\u6807"},{"location":"chap1/55prometheus_go_metrics/#1","text":"\u6211\u4eec\u9996\u5148\u4ece\u4e00\u4e2a\u6700\u7b80\u5355\u7684 Go \u5e94\u7528\u7a0b\u5e8f\u5f00\u59cb\uff0c\u5728\u7aef\u53e3 8080 \u7684 /metrics \u7aef\u70b9\u4e0a\u66b4\u9732\u5ba2\u6237\u7aef\u5e93\u7684\u9ed8\u8ba4\u6ce8\u518c\u8868\uff0c\u6682\u65f6\u8fd8\u6ca1\u6709\u8ddf\u8e2a\u4efb\u4f55\u5176\u4ed6\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807\u3002 \u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a instrument-demo \u7684\u76ee\u5f55\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u9762\u521d\u59cb\u5316\u9879\u76ee\uff1a \u2638 \u279c mkdir instrument-demo && cd instrument-demo \u2638 \u279c go mod init github.com/cnych/instrument-demo \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u5728 instrument-demo \u76ee\u5f55\u4e0b\u9762\u751f\u6210\u4e00\u4e2a go.mod \u6587\u4ef6\uff0c\u5728\u540c\u76ee\u5f55\u4e0b\u9762\u65b0\u5efa\u4e00\u4e2a main.go \u7684\u5165\u53e3\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a \uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { // Serve the default Prometheus metrics registry over HTTP on /metrics. http.Handle(\"/metrics\", promhttp.Handler()) http.ListenAndServe(\":8080\", nil) } \u7136\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u4e0b\u8f7d Prometheus \u5ba2\u6237\u7aef\u5e93\u4f9d\u8d56\uff1a \u2638 \u279c export GOPROXY=\"https://goproxy.cn\" \u2638 \u279c go mod tidy go: finding module for package github.com/prometheus/client_golang/prometheus/promhttp go: found github.com/prometheus/client_golang/prometheus/promhttp in github.com/prometheus/client_golang v1.11.0 go: downloading google.golang.org/protobuf v1.26.0-rc.1 \u7136\u540e\u76f4\u63a5\u6267\u884c go run \u547d\u4ee4\u542f\u52a8\u670d\u52a1\uff1a \u2638 \u279c go run main.go \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://localhost:8080/metrics \u6765\u83b7\u5f97\u9ed8\u8ba4\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff1a # HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles. # TYPE go_gc_duration_seconds summary go_gc_duration_seconds{quantile=\"0\"} 0 go_gc_duration_seconds{quantile=\"0.25\"} 0 go_gc_duration_seconds{quantile=\"0.5\"} 0 go_gc_duration_seconds{quantile=\"0.75\"} 0 go_gc_duration_seconds{quantile=\"1\"} 0 go_gc_duration_seconds_sum 0 go_gc_duration_seconds_count 0 # HELP go_goroutines Number of goroutines that currently exist. # TYPE go_goroutines gauge go_goroutines 6 ...... # HELP go_threads Number of OS threads created. # TYPE go_threads gauge go_threads 8 # HELP promhttp_metric_handler_requests_in_flight Current number of scrapes being served. # TYPE promhttp_metric_handler_requests_in_flight gauge promhttp_metric_handler_requests_in_flight 1 # HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code. # TYPE promhttp_metric_handler_requests_total counter promhttp_metric_handler_requests_total{code=\"200\"} 1 promhttp_metric_handler_requests_total{code=\"500\"} 0 promhttp_metric_handler_requests_total{code=\"503\"} 0 \u6211\u4eec\u5e76\u6ca1\u6709\u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0\u4ec0\u4e48\u4e1a\u52a1\u903b\u8f91\uff0c\u4f46\u662f\u53ef\u4ee5\u770b\u5230\u4f9d\u7136\u6709\u4e00\u4e9b\u6307\u6807\u6570\u636e\u8f93\u51fa\uff0c\u8fd9\u662f\u56e0\u4e3a Go \u5ba2\u6237\u7aef\u5e93\u9ed8\u8ba4\u5728\u6211\u4eec\u66b4\u9732\u7684\u5168\u5c40\u9ed8\u8ba4\u6307\u6807\u6ce8\u518c\u8868\u4e2d\u6ce8\u518c\u4e86\u4e00\u4e9b\u5173\u4e8e promhttp \u5904\u7406\u5668\u548c\u8fd0\u884c\u65f6\u95f4\u76f8\u5173\u7684\u9ed8\u8ba4\u6307\u6807\uff0c\u6839\u636e\u4e0d\u540c\u6307\u6807\u540d\u79f0\u7684\u524d\u7f00\u53ef\u4ee5\u770b\u51fa\uff1a go_* \uff1a\u4ee5 go_ \u4e3a\u524d\u7f00\u7684\u6307\u6807\u662f\u5173\u4e8e Go \u8fd0\u884c\u65f6\u76f8\u5173\u7684\u6307\u6807\uff0c\u6bd4\u5982\u5783\u573e\u56de\u6536\u65f6\u95f4\u3001 goroutine \u6570\u91cf\u7b49\uff0c\u8fd9\u4e9b\u90fd\u662f Go \u5ba2\u6237\u7aef\u5e93\u7279\u6709\u7684\uff0c\u5176\u4ed6\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u5e93\u53ef\u80fd\u4f1a\u66b4\u9732\u5404\u81ea\u8bed\u8a00\u7684\u5176\u4ed6\u8fd0\u884c\u65f6\u6307\u6807\u3002 promhttp_* \uff1a\u6765\u81ea promhttp \u5de5\u5177\u5305\u7684\u76f8\u5173\u6307\u6807\uff0c\u7528\u4e8e\u8ddf\u8e2a\u5bf9\u6307\u6807\u8bf7\u6c42\u7684\u5904\u7406 \u3002 \u8fd9\u4e9b\u9ed8\u8ba4\u7684\u6307\u6807\u662f\u975e\u5e38\u6709\u7528\uff0c\u4f46\u662f\u66f4\u591a\u7684\u65f6\u5019\u6211\u4eec\u9700\u8981\u81ea\u5df1\u63a7\u5236\uff0c\u6765\u66b4\u9732\u4e00\u4e9b\u81ea\u5b9a\u4e49\u6307\u6807\u3002\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u53bb\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u6307\u6807\u4e86\u3002","title":"1\u3001\u521b\u5efa\u5e94\u7528"},{"location":"chap1/55prometheus_go_metrics/#2","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7684 gauge \u6307\u6807\u6765\u66b4\u9732\u5f53\u524d\u7684\u6e29\u5ea6\u3002\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6 custom-metric/main.go \uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { // \u521b\u5efa\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55 label \u6807\u7b7e\u7684 gauge \u6307\u6807 temp := prometheus.NewGauge(prometheus.GaugeOpts{ Name: \"home_temperature_celsius\", Help: \"The current temperature in degrees Celsius.\", }) // \u5728\u9ed8\u8ba4\u7684\u6ce8\u518c\u8868\u4e2d\u6ce8\u518c\u8be5\u6307\u6807 prometheus.MustRegister(temp) // \u8bbe\u7f6e gauge \u7684\u503c\u4e3a 39 temp.Set(39) // \u66b4\u9732\u6307\u6807 http.Handle(\"/metrics\", promhttp.Handler()) http.ListenAndServe(\":8080\", nil) } \u4e0a\u9762\u6587\u4ef6\u4e2d\u548c\u6700\u521d\u7684\u6587\u4ef6\u5c31\u6709\u4e00\u4e9b\u53d8\u5316\u4e86\uff1a \u6211\u4eec\u4f7f\u7528 prometheus.NewGauge() \u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 gauge \u6307\u6807\u5bf9\u8c61\uff0c\u6307\u6807\u540d\u79f0\u4e3a home_temperature_celsius \uff0c\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6ce8\u91ca\u4fe1\u606f\u3002 \u7136\u540e\u4f7f\u7528 prometheus.MustRegister() \u51fd\u6570\u5728\u9ed8\u8ba4\u7684\u6ce8\u518c\u8868\u4e2d\u6ce8\u518c\u4e86\u8fd9\u4e2a gauge \u6307\u6807\u5bf9\u8c61\u3002 \u901a\u8fc7\u8c03\u7528 Set() \u65b9\u6cd5\u5c06 gauge \u6307\u6807\u7684\u503c\u8bbe\u7f6e\u4e3a 39\u3002 \u7136\u540e\u50cf\u4e4b\u524d\u4e00\u6837\u901a\u8fc7 HTTP \u66b4\u9732\u9ed8\u8ba4\u7684\u6ce8\u518c\u8868\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\u9664\u4e86 prometheus.MustRegister() \u51fd\u6570\u4e4b\u5916\u8fd8\u6709\u4e00\u4e2a prometheus.Register() \u51fd\u6570\uff0c\u4e00\u822c\u5728 golang \u4e2d\u6211\u4eec\u4f1a\u5c06 Mustxxx \u5f00\u5934\u7684\u51fd\u6570\u5b9a\u4e49\u4e3a\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u7684\u51fd\u6570\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u4f1a\u8fd4\u56de\u4e00\u4e2a panic \u800c\u4e0d\u662f\u4e00\u4e2a error \u64cd\u4f5c\uff0c\u6240\u4ee5\u5982\u679c\u8fd9\u91cc\u4e0d\u80fd\u6b63\u5e38\u6ce8\u518c\u7684\u8bdd\u4f1a\u629b\u51fa\u4e00\u4e2a panic\u3002 \u73b0\u5728\u6211\u4eec\u6765\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff1a \u2638 \u279c go run ./custom-metric \u542f\u52a8\u540e\u91cd\u65b0\u8bbf\u95ee\u6307\u6807\u63a5\u53e3 http://localhost:8080/metrics \uff0c\u4ed4\u7ec6\u5bf9\u6bd4\u6211\u4eec\u4f1a\u53d1\u73b0\u591a\u4e86\u4e00\u4e2a\u540d\u4e3a home_temperature_celsius \u7684\u6307\u6807\uff1a ... # HELP home_temperature_celsius The current temperature in degrees Celsius. # TYPE home_temperature_celsius gauge home_temperature_celsius 42 ... \u8fd9\u6837\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u6dfb\u52a0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6307\u6807\u7684\u64cd\u4f5c\uff0c\u6574\u4f53\u6bd4\u8f83\u7b80\u5355\uff0c\u5f53\u7136\u5728\u5b9e\u9645\u7684\u9879\u76ee\u4e2d\u9700\u8981\u7ed3\u5408\u4e1a\u52a1\u6765\u786e\u5b9a\u6dfb\u52a0\u54ea\u4e9b\u81ea\u5b9a\u4e49\u6307\u6807\u3002","title":"2\u3001\u6dfb\u52a0\u81ea\u5b9a\u4e49\u6307\u6807"},{"location":"chap1/55prometheus_go_metrics/#3","text":"","title":"3\u3001\u81ea\u5b9a\u4e49\u6ce8\u518c\u8868"},{"location":"chap1/55prometheus_go_metrics/#3-1-gauges","text":"\u524d\u9762\u7684\u793a\u4f8b\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\u5982\u4f55\u6dfb\u52a0 gauge \u7c7b\u578b\u7684\u6307\u6807\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55\u6807\u7b7e\u7684\u6307\u6807\uff0c\u76f4\u63a5\u4f7f\u7528 prometheus.NewGauge() \u51fd\u6570\u5373\u53ef\u5b9e\u4f8b\u5316\u4e00\u4e2a gauge \u7c7b\u578b\u7684\u6307\u6807\u5bf9\u8c61\uff0c\u901a\u8fc7 prometheus.GaugeOpts \u5bf9\u8c61\u53ef\u4ee5\u6307\u5b9a\u6307\u6807\u7684\u540d\u79f0\u548c\u6ce8\u91ca\u4fe1\u606f\uff1a queueLength := prometheus.NewGauge(prometheus.GaugeOpts{ Name: \"queue_length\", Help: \"The number of items in the queue.\", }) \u6211\u4eec\u77e5\u9053 gauge \u7c7b\u578b\u7684\u6307\u6807\u503c\u662f\u53ef\u4ee5\u4e0a\u5347\u6216\u4e0b\u964d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e3a gauge \u6307\u6807\u8bbe\u7f6e\u4e00\u4e2a\u6307\u5b9a\u7684\u503c\uff0c\u6240\u4ee5 gauge \u6307\u6807\u5bf9\u8c61\u66b4\u9732\u4e86 Set() \u3001 Inc() \u3001 Dec() \u3001 Add() \u548c Sub() \u8fd9\u4e9b\u51fd\u6570\u6765\u66f4\u6539\u6307\u6807\u503c \uff1a // \u4f7f\u7528 Set() \u8bbe\u7f6e\u6307\u5b9a\u7684\u503c queueLength.Set(0) // \u589e\u52a0\u6216\u51cf\u5c11 queueLength.Inc() // +1\uff1aIncrement the gauge by 1. queueLength.Dec() // -1\uff1aDecrement the gauge by 1. queueLength.Add(23) // Increment by 23. queueLength.Sub(42) // Decrement by 42. \u53e6\u5916 gauge \u4eea\u8868\u76d8\u7ecf\u5e38\u88ab\u7528\u6765\u66b4\u9732 Unix \u7684\u65f6\u95f4\u6233\u6837\u672c\u503c\uff0c\u6240\u4ee5\u4e5f\u6709\u4e00\u4e2a\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u5c06 gauge \u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u6233\uff1a demoTimestamp.SetToCurrentTime() \u6700\u7ec8 gauge \u6307\u6807\u4f1a\u88ab\u6e32\u67d3\u6210\u5982\u4e0b\u6240\u793a\u7684\u6570\u636e\uff1a # HELP queue_length The number of items in the queue. # TYPE queue_length gauge queue_length 42","title":"3-1 Gauges"},{"location":"chap1/55prometheus_go_metrics/#3-2-counters","text":"\u8981\u521b\u5efa\u4e00\u4e2a counter \u7c7b\u578b\u7684\u6307\u6807\u548c gauge \u6bd4\u8f83\u7c7b\u4f3c\uff0c\u53ea\u662f\u7528 prometheus.NewCounter() \u51fd\u6570\u6765\u521d\u59cb\u5316\u6307\u6807\u5bf9\u8c61\uff1a totalRequests := prometheus.NewCounter(prometheus.CounterOpts{ Name: \"http_requests_total\", Help: \"The total number of handled HTTP requests.\", }) \u6211\u4eec\u77e5\u9053 counter \u6307\u6807\u53ea\u80fd\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u4e0d\u65ad\u589e\u52a0\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4e3a\u5176\u8bbe\u7f6e\u4e00\u4e2a\u6307\u5b9a\u7684\u503c\u6216\u8005\u51cf\u5c11\u6307\u6807\u503c\uff0c\u6240\u4ee5\u8be5\u5bf9\u8c61\u4e0b\u9762\u53ea\u6709 Inc() \u548c Add() \u4e24\u4e2a\u51fd\u6570\uff1a totalRequests.Inc() // +1\uff1aIncrement the counter by 1. totalRequests.Add(23) // +n\uff1aIncrement the counter by 23. \u5f53\u670d\u52a1\u8fdb\u7a0b\u91cd\u65b0\u542f\u52a8\u7684\u65f6\u5019\uff0ccounter \u6307\u6807\u503c\u4f1a\u88ab\u91cd\u7f6e\u4e3a 0\uff0c\u4e0d\u8fc7\u4e0d\u7528\u62c5\u5fc3\u6570\u636e\u9519\u4e71\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u4f7f\u7528\u7684 rate() \u51fd\u6570\u4f1a\u81ea\u52a8\u5904\u7406\u3002 # HELP http_requests_total The total number of handled HTTP requests. # TYPE http_requests_total counter http_requests_total 7734","title":"3-2 Counters"},{"location":"chap1/55prometheus_go_metrics/#3-3-histograms","text":"\u521b\u5efa\u76f4\u65b9\u56fe\u6307\u6807\u6bd4 counter \u548c gauge \u90fd\u8981\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u914d\u7f6e\u628a\u89c2\u6d4b\u503c\u5f52\u5165\u7684 bucket \u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u6bcf\u4e2a bucket \u7684\u4e0a\u8fb9\u754c\u3002 Prometheus \u4e2d\u7684\u76f4\u65b9\u56fe\u662f\u7d2f\u79ef\u7684\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u540e\u7eed\u7684 bucket \u90fd\u5305\u542b\u524d\u4e00\u4e2a bucket \u7684\u89c2\u5bdf\u8ba1\u6570\uff0c\u6240\u6709 bucket \u7684\u4e0b\u9650\u90fd\u4ece 0 \u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u660e\u786e\u914d\u7f6e\u6bcf\u4e2a bucket \u7684\u4e0b\u9650\uff0c\u53ea\u9700\u8981\u914d\u7f6e\u4e0a\u9650\u5373\u53ef\u3002 \u540c\u6837\u8981\u521b\u5efa\u76f4\u65b9\u56fe\u6307\u6807\u5bf9\u8c61\uff0c\u6211\u4eec\u4f7f\u7528 prometheus.NewHistogram() \u51fd\u6570\u6765\u8fdb\u884c\u521d\u59cb\u5316\uff1a requestDurations := prometheus.NewHistogram(prometheus.HistogramOpts{ Name: \"http_request_duration_seconds\", Help: \"A histogram of the HTTP request durations in seconds.\", // Bucket \u914d\u7f6e\uff1a\u7b2c\u4e00\u4e2a bucket \u5305\u62ec\u6240\u6709\u5728 0.05s \u5185\u5b8c\u6210\u7684\u8bf7\u6c42\uff0c\u6700\u540e\u4e00\u4e2a\u5305\u62ec\u6240\u6709\u572810s\u5185\u5b8c\u6210\u7684\u8bf7\u6c42\u3002 Buckets: []float64{0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10}, }) \u8fd9\u91cc\u548c\u524d\u9762\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5728\u4e8e\u9664\u4e86\u6307\u5b9a\u6307\u6807\u540d\u79f0\u548c\u5e2e\u52a9\u4fe1\u606f\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u914d\u7f6e Buckets\u3002\u5982\u679c\u6211\u4eec\u624b\u52a8\u53bb\u679a\u4e3e\u6240\u6709\u7684 bucket \u53ef\u80fd\u5f88\u7e41\u7410\uff0c\u6240\u4ee5 Go \u5ba2\u6237\u7aef\u5e93\u4e3a\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u8f85\u52a9\u51fd\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u7ebf\u6027\u6216\u8005\u6307\u6570\u589e\u957f\u7684 bucket\uff0c\u6bd4\u5982 prometheus.LinearBuckets() \u548c prometheus.ExponentialBuckets() \u51fd\u6570\u3002 \u76f4\u65b9\u56fe\u4f1a\u81ea\u52a8\u5bf9\u6570\u503c\u7684\u5206\u5e03\u8fdb\u884c\u5206\u7c7b\u548c\u8ba1\u6570\uff0c\u6240\u4ee5\u5b83\u53ea\u6709\u4e00\u4e2a Observe() \u65b9\u6cd5\uff0c\u6bcf\u5f53\u4f60\u5728\u4ee3\u7801\u4e2d\u5904\u7406\u8981\u8ddf\u8e2a\u7684\u6570\u636e\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u521a\u521a\u5904\u7406\u4e86\u4e00\u4e2a HTTP \u8bf7\u6c42\uff0c\u82b1\u4e86 0.42 \u79d2\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u8ddf\u8e2a\u3002 requestDurations.Observe(0.42) \u7531\u4e8e\u8ddf\u8e2a\u6301\u7eed\u65f6\u95f4\u662f\u76f4\u65b9\u56fe\u7684\u4e00\u4e2a\u5e38\u89c1\u7528\u4f8b\uff0cGo \u5ba2\u6237\u7aef\u5e93\u5c31\u63d0\u4f9b\u4e86\u8f85\u52a9\u51fd\u6570\uff0c\u7528\u4e8e\u5bf9\u4ee3\u7801\u7684\u67d0\u4e9b\u90e8\u5206\u8fdb\u884c\u8ba1\u65f6\uff0c\u7136\u540e\u81ea\u52a8\u89c2\u5bdf\u6240\u4ea7\u751f\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u76f4\u65b9\u56fe\uff0c\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff1a // \u542f\u52a8\u4e00\u4e2a\u8ba1\u65f6\u5668 timer := prometheus.NewTimer(requestDurations) // [...\u5728\u5e94\u7528\u4e2d\u5904\u7406\u8bf7\u6c42...] // \u505c\u6b62\u8ba1\u65f6\u5668\u5e76\u89c2\u5bdf\u5176\u6301\u7eed\u65f6\u95f4\uff0c\u5c06\u5176\u653e\u8fdb requestDurations \u7684\u76f4\u65b9\u56fe\u6307\u6807\u4e2d\u53bb timer.ObserveDuration() \u76f4\u65b9\u56fe\u6307\u6807\u6700\u7ec8\u4f1a\u751f\u6210\u5982\u4e0b\u6240\u793a\u7684\u6570\u636e\uff1a # HELP http_request_duration_seconds A histogram of the HTTP request durations in seconds. # TYPE http_request_duration_seconds histogram http_request_duration_seconds_bucket{le=\"0.05\"} 4599 http_request_duration_seconds_bucket{le=\"0.1\"} 24128 http_request_duration_seconds_bucket{le=\"0.25\"} 45311 http_request_duration_seconds_bucket{le=\"0.5\"} 59983 http_request_duration_seconds_bucket{le=\"1\"} 60345 http_request_duration_seconds_bucket{le=\"2.5\"} 114003 http_request_duration_seconds_bucket{le=\"5\"} 201325 http_request_duration_seconds_bucket{le=\"+Inf\"} 227420 http_request_duration_seconds_sum 88364.234 http_request_duration_seconds_count 227420 \u6bcf\u4e2a\u914d\u7f6e\u7684\u5b58\u50a8\u6876\u6700\u7ec8\u4f5c\u4e3a\u4e00\u4e2a\u5e26\u6709 _bucket \u540e\u7f00\u7684\u8ba1\u6570\u5668\u65f6\u95f4\u5e8f\u5217\uff0c\u4f7f\u7528 le\uff08\u5c0f\u4e8e\u6216\u7b49\u4e8e \uff09 \u6807\u7b7e\u6307\u793a\u8be5\u5b58\u50a8\u6876\u7684\u4e0a\u9650\uff0c\u5177\u6709\u4e0a\u9650\u7684\u9690\u5f0f\u5b58\u50a8\u6876 +Inf \u4e5f\u66b4\u9732\u4e8e\u6bd4\u6700\u5927\u914d\u7f6e\u7684\u5b58\u50a8\u6876\u8fb9\u754c\u82b1\u8d39\u66f4\u957f\u7684\u65f6\u95f4\u7684\u8bf7\u6c42\uff0c\u8fd8\u5305\u62ec\u4f7f\u7528\u540e\u7f00 _sum \u7d2f\u79ef\u603b\u548c\u548c\u8ba1\u6570 _count \u7684\u6307\u6807\uff0c\u8fd9\u4e9b\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5728\u6982\u5ff5\u4e0a\u90fd\u662f\u4e00\u4e2a counter \u8ba1\u6570\u5668\uff08\u53ea\u80fd\u4e0a\u5347\u7684\u5355\u4e2a\u503c\uff09\uff0c\u53ea\u662f\u5b83\u4eec\u662f\u4f5c\u4e3a\u76f4\u65b9\u56fe\u7684\u4e00\u90e8\u5206\u521b\u5efa\u7684\u3002","title":"3-3 Histograms"},{"location":"chap1/55prometheus_go_metrics/#3-4-summaries","text":"\u521b\u5efa\u548c\u4f7f\u7528\u6458\u8981\u4e0e\u76f4\u65b9\u56fe\u975e\u5e38\u7c7b\u4f3c\uff0c\u53ea\u662f\u6211\u4eec\u9700\u8981\u6307\u5b9a\u8981\u8ddf\u8e2a\u7684 quantiles \u5206\u4f4d\u6570\u503c\uff0c\u800c\u4e0d\u9700\u8981\u5904\u7406 bucket \u6876\uff0c\u6bd4\u5982\u6211\u4eec\u60f3\u8981\u8ddf\u8e2a HTTP \u8bf7\u6c42\u5ef6\u8fdf\u7684\u7b2c 50\u300190 \u548c 99 \u4e2a\u767e\u5206\u4f4d\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u8fd9\u6837\u7684\u4e00\u4e2a\u6458\u8981\u5bf9\u8c61\uff1a requestDurations := prometheus.NewSummary(prometheus.SummaryOpts{ Name: \"http_request_duration_seconds\", Help: \"A summary of the HTTP request durations in seconds.\", Objectives: map[float64]float64{ 0.5: 0.05, // \u7b2c50\u4e2a\u767e\u5206\u4f4d\u6570\uff0c\u6700\u5927\u7edd\u5bf9\u8bef\u5dee\u4e3a0.05\u3002 0.9: 0.01, // \u7b2c90\u4e2a\u767e\u5206\u4f4d\u6570\uff0c\u6700\u5927\u7edd\u5bf9\u8bef\u5dee\u4e3a0.01\u3002 0.99: 0.001, // \u7b2c90\u4e2a\u767e\u5206\u4f4d\u6570\uff0c\u6700\u5927\u7edd\u5bf9\u8bef\u5dee\u4e3a0.001\u3002 }, }, ) \u8fd9\u91cc\u548c\u524d\u9762\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5728\u4e8e\u4f7f\u7528 prometheus.NewSummary() \u51fd\u6570\u521d\u59cb\u5316\u6458\u8981\u6307\u6807\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u9700\u8981\u901a\u8fc7 prometheus.SummaryOpts{} \u5bf9\u8c61\u7684 Objectives \u5c5e\u6027\u6307\u5b9a\u60f3\u8981\u8ddf\u8e2a\u7684\u5206\u4f4d\u6570\u503c \u3002 \u540c\u6837\u6458\u8981\u6307\u6807\u5bf9\u8c61\u521b\u5efa\u540e\uff0c\u8ddf\u8e2a\u6301\u7eed\u65f6\u95f4\u7684\u65b9\u5f0f\u548c\u76f4\u65b9\u56fe\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u4f7f\u7528\u4e00\u4e2a Observe() \u51fd\u6570\u5373\u53ef\uff1a requestDurations.Observe(0.42) \u867d\u7136\u76f4\u65b9\u56fe\u6876\u53ef\u4ee5\u8de8\u7ef4\u5ea6\u6c47\u603b\uff08\u5982\u7aef\u70b9\u3001HTTP \u65b9\u6cd5\u7b49\uff09\uff0c\u4f46\u8fd9\u5bf9\u4e8e\u6c47\u603b quantiles \u5206\u4f4d\u6570\u503c\u6765\u8bf4\u5728\u7edf\u8ba1\u5b66\u4e0a\u662f\u65e0\u6548\u7684\u3002\u4f8b\u5982\uff0c\u4f60\u4e0d\u80fd\u5bf9\u4e24\u4e2a\u5355\u72ec\u7684\u670d\u52a1\u5b9e\u4f8b\u7684\u7b2c 90 \u767e\u5206\u4f4d\u5ef6\u8fdf\u8fdb\u884c\u5e73\u5747\uff0c\u5e76\u671f\u671b\u5f97\u5230\u4e00\u4e2a\u6709\u6548\u7684\u6574\u4f53\u7b2c 90 \u767e\u5206\u4f4d\u5ef6\u8fdf\u3002\u5982\u679c\u9700\u8981\u6309\u7ef4\u5ea6\u8fdb\u884c\u6c47\u603b\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u4f7f\u7528\u76f4\u65b9\u56fe\u800c\u4e0d\u662f\u6458\u8981\u6307\u6807\u3002 \u6458\u8981\u6307\u6807\u6700\u7ec8\u751f\u6210\u7684\u6307\u6807\u6570\u636e\u4e0e\u76f4\u65b9\u56fe\u975e\u5e38\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u4f7f\u7528 quantile \u6807\u7b7e\u6765\u8868\u793a\u5206\u4f4d\u6570\u5e8f\u5217\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5e8f\u5217\u6ca1\u6709\u6269\u5c55\u6307\u6807\u540d\u79f0\u7684\u540e\u7f00\uff1a # HELP http_request_duration_seconds A summary of the HTTP request durations in seconds. # TYPE http_request_duration_seconds summary http_request_duration_seconds{quantile=\"0.5\"} 0.052 http_request_duration_seconds{quantile=\"0.90\"} 0.564 http_request_duration_seconds{quantile=\"0.99\"} 2.372 http_request_duration_seconds_sum 88364.234 http_request_duration_seconds_count 227420","title":"3-4 Summaries"},{"location":"chap1/55prometheus_go_metrics/#3-5","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u4e3a\u6307\u6807\u5bf9\u8c61\u6dfb\u52a0\u4efb\u4f55\u7684\u6807\u7b7e\uff0c\u8981\u521b\u5efa\u5177\u6709\u6807\u7b7e\u7ef4\u5ea6\u7684\u6307\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u7c7b\u4f3c\u4e8e NewXXXVec() \u7684\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316\u6307\u6807\u5bf9\u8c61\uff1a NewGauge() \u53d8\u6210 NewGaugeVec() NewCounter() \u53d8\u6210 NewCounterVec() NewSummary() \u53d8\u6210 NewSummaryVec() NewHistogram() \u53d8\u6210 NewHistogramVec() \u8fd9\u4e9b\u51fd\u6570\u5141\u8bb8\u6211\u4eec\u6307\u5b9a\u4e00\u4e2a\u989d\u5916\u7684\u5b57\u7b26\u4e32\u5207\u7247\u53c2\u6570\uff0c\u63d0\u4f9b\u6807\u7b7e\u540d\u79f0\u7684\u5217\u8868\uff0c\u901a\u8fc7\u5b83\u6765\u62c6\u5206\u6307\u6807\u3002 \u4f8b\u5982\uff0c\u4e3a\u4e86\u6309\u7167\u623f\u5b50\u4ee5\u53ca\u6d4b\u91cf\u6e29\u5ea6\u7684\u623f\u95f4\u6765\u5212\u5206\u6211\u4eec\u65e9\u671f\u7684\u6e29\u5ea6\u8868\u6307\u6807\uff0c\u53ef\u4ee5\u8fd9\u6837\u521b\u5efa\u6307\u6807\u3002 temp := prometheus.NewGaugeVec( prometheus.GaugeOpts{ Name: \"home_temperature_celsius\", Help: \"The current temperature in degrees Celsius.\", }, // \u4e24\u4e2a\u6807\u7b7e\u540d\u79f0\uff0c\u901a\u8fc7\u5b83\u4eec\u6765\u5206\u5272\u6307\u6807\u3002 []string{\"house\", \"room\"}, ) \u7136\u540e\u8981\u8bbf\u95ee\u4e00\u4e2a\u7279\u6709\u6807\u7b7e\u7684\u5b50\u6307\u6807\uff0c\u9700\u8981\u5728\u8bbe\u7f6e\u5176\u503c\u4e4b\u524d\uff0c\u7528 house \u548c room \u6807\u7b7e\u7684\u5404\u81ea\u6570\u503c\uff0c\u5bf9\u4ea7\u751f\u7684 gauge \u5411\u91cf\u8c03\u7528 WithLabelValues() \u65b9\u6cd5\u6765\u5904\u7406\u4e0b\uff1a // \u4e3a home=ydzs \u548c room=living-room \u8bbe\u7f6e\u6307\u6807\u503c temp.WithLabelValues(\"ydzs\", \"living-room\").Set(27) \u5982\u679c\u4f60\u559c\u6b22\u5728\u9009\u62e9\u7684\u5b50\u6307\u6807\u4e2d\u660e\u786e\u63d0\u4f9b\u6807\u7b7e\u540d\u79f0\uff0c\u53ef\u4ee5\u4f7f\u7528\u6548\u7387\u7a0d\u4f4e\u7684 With() \u65b9\u6cd5\u6765\u4ee3\u66ff \uff1a temp.With(prometheus.Labels{\"house\": \"ydzs\", \"room\": \"living-room\"}).Set(66) \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u5982\u679c\u5411\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4f20\u9012\u4e0d\u6b63\u786e\u7684\u6807\u7b7e\u6570\u91cf\u6216\u4e0d\u6b63\u786e\u7684\u6807\u7b7e\u540d\u79f0\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u4f1a\u89e6\u53d1 panic\u3002 \u4e0b\u9762\u662f\u6211\u4eec\u6309\u7167 house \u548c room \u6807\u7b7e\u7ef4\u5ea6\u533a\u5206\u6307\u6807\u7684\u5b8c\u6574\u793a\u4f8b\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a label-metric/main.go \u7684\u65b0\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a package main import ( \"net/http\" \"github.com/prometheus/client_golang/prometheus\" \"github.com/prometheus/client_golang/prometheus/promhttp\" ) func main() { // \u521b\u5efa\u5e26 house \u548c room \u6807\u7b7e\u7684 gauge \u6307\u6807\u5bf9\u8c61 temp := prometheus.NewGaugeVec( prometheus.GaugeOpts{ Name: \"home_temperature_celsius\", Help: \"The current temperature in degrees Celsius.\", }, // \u6307\u5b9a\u6807\u7b7e\u540d\u79f0 []string{\"house\", \"room\"}, ) // \u6ce8\u518c\u5230\u5168\u5c40\u9ed8\u8ba4\u6ce8\u518c\u8868\u4e2d prometheus.MustRegister(temp) // \u9488\u5bf9\u4e0d\u540c\u6807\u7b7e\u503c\u8bbe\u7f6e\u4e0d\u540c\u7684\u6307\u6807\u503c temp.WithLabelValues(\"cnych\", \"living-room\").Set(27) temp.WithLabelValues(\"cnych\", \"bedroom\").Set(25.3) temp.WithLabelValues(\"ydzs\", \"living-room\").Set(24.5) temp.WithLabelValues(\"ydzs\", \"bedroom\").Set(27.7) // \u66b4\u9732\u81ea\u5b9a\u4e49\u7684\u6307\u6807 http.Handle(\"/metrics\", promhttp.Handler()) http.ListenAndServe(\":8080\", nil) } \u4e0a\u9762\u4ee3\u7801\u975e\u5e38\u6e05\u6670\u4e86\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\uff1a \u2638 \u279c go run ./label-metric \u542f\u52a8\u5b8c\u6210\u540e\u91cd\u65b0\u8bbf\u95ee\u6307\u6807\u7aef\u70b9 http://localhost:8080/metrics \uff0c\u53ef\u4ee5\u627e\u5230 home_temperature_celsius \u6307\u6807\u4e0d\u540c\u6807\u7b7e\u7ef4\u5ea6\u4e0b\u9762\u7684\u6307\u6807\u503c\uff1a ... # HELP home_temperature_celsius The current temperature in degrees Celsius. # TYPE home_temperature_celsius gauge home_temperature_celsius{house=\"cnych\",room=\"bedroom\"} 25.3 home_temperature_celsius{house=\"cnych\",room=\"living-room\"} 27 home_temperature_celsius{house=\"ydzs\",room=\"bedroom\"} 27.7 home_temperature_celsius{house=\"ydzs\",room=\"living-room\"} 24.5 ... \u6ce8\u610f\uff1a\u5f53\u4f7f\u7528\u5e26\u6709\u6807\u7b7e\u7ef4\u5ea6\u7684\u6307\u6807\u65f6\uff0c\u4efb\u4f55\u6807\u7b7e\u7ec4\u5408\u7684\u65f6\u95f4\u5e8f\u5217\u53ea\u6709\u5728\u8be5\u6807\u7b7e\u7ec4\u5408\u88ab\u8bbf\u95ee\u8fc7\u81f3\u5c11\u4e00\u6b21\u540e\u624d\u4f1a\u51fa\u73b0\u5728 /metrics \u8f93\u51fa\u4e2d\uff0c\u8fd9\u5bf9\u6211\u4eec\u5728 PromQL \u67e5\u8be2\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u4e00\u4e9b\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u5e0c\u671b\u67d0\u4e9b\u65f6\u95f4\u5e8f\u5217\u4e00\u76f4\u5b58\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7a0b\u5e8f\u7b2c\u4e00\u6b21\u542f\u52a8\u65f6\uff0c\u5c06\u6240\u6709\u91cd\u8981\u7684\u6807\u7b7e\u7ec4\u5408\u9884\u5148\u521d\u59cb\u5316\u4e3a\u9ed8\u8ba4\u503c\u3002","title":"3-5 \u6807\u7b7e"},{"location":"chap1/57prometheus_best_practice/","text":"\u7b2c0\u8282 Promethues \u5e94\u7528\u76d1\u63a7\u7684\u4e00\u4e9b\u5b9e\u8df5 \u5728\u5177\u4f53\u8bbe\u8ba1 Metrics \u4e4b\u524d\uff0c\u9996\u5148\u9700\u8981\u660e\u786e\u9700\u8981\u6d4b\u91cf\u7684\u5bf9\u8c61\u3002\u9700\u8981\u6d4b\u91cf\u7684\u5bf9\u8c61\u5e94\u8be5\u4f9d\u636e\u5177\u4f53\u7684\u95ee\u9898\u80cc\u666f\u3001\u9700\u6c42\u548c\u9700\u76d1\u63a7\u7684\u7cfb\u7edf\u672c\u8eab\u6765\u786e\u5b9a\u3002 1 \u4ece\u9700\u6c42\u51fa\u53d1 Google \u9488\u5bf9\u5927\u91cf\u5206\u5e03\u5f0f\u76d1\u63a7\u7684\u7ecf\u9a8c\u603b\u7ed3\u51fa\u56db\u4e2a\u76d1\u63a7\u7684\u9ec4\u91d1\u6307\u6807\uff0c\u8fd9\u56db\u4e2a\u6307\u6807\u5bf9\u4e8e\u4e00\u822c\u6027\u7684\u76d1\u63a7\u6d4b\u91cf\u5bf9\u8c61\u90fd\u5177\u6709\u8f83\u597d\u7684\u53c2\u8003\u610f\u4e49\u3002\u8fd9\u56db\u4e2a\u6307\u6807\u5206\u522b\u4e3a\uff1a \u5ef6\u8fdf \uff1a\u670d\u52a1\u8bf7\u6c42\u7684\u65f6\u95f4\u3002 \u901a\u8baf\u91cf \uff1a\u76d1\u63a7\u5f53\u524d\u7cfb\u7edf\u7684\u6d41\u91cf\uff0c\u7528\u4e8e\u8861\u91cf\u670d\u52a1\u7684\u5bb9\u91cf\u9700\u6c42\u3002 \u9519\u8bef \uff1a\u76d1\u63a7\u5f53\u524d\u7cfb\u7edf\u6240\u6709\u53d1\u751f\u7684\u9519\u8bef\u8bf7\u6c42\uff0c\u8861\u91cf\u5f53\u524d\u7cfb\u7edf\u9519\u8bef\u53d1\u751f\u7684\u901f\u7387\u3002 \u9971\u548c\u5ea6 \uff1a\u8861\u91cf\u5f53\u524d\u670d\u52a1\u7684\u9971\u548c\u5ea6\u3002\u4e3b\u8981\u5f3a\u8c03\u6700\u80fd\u5f71\u54cd\u670d\u52a1\u72b6\u6001\u7684\u53d7\u9650\u5236\u7684\u8d44\u6e90\u3002\u4f8b\u5982\uff0c\u5982\u679c\u7cfb\u7edf\u4e3b\u8981\u53d7\u5185\u5b58\u5f71\u54cd\uff0c\u90a3\u5c31\u4e3b\u8981\u5173\u6ce8\u7cfb\u7edf\u7684\u5185\u5b58\u72b6\u6001\u3002\u4ee5\u4e0a\u56db\u79cd\u6307\u6807\uff0c\u5176\u5b9e\u662f\u4e3a\u4e86\u6ee1\u8db3\u56db\u4e2a\u76d1\u63a7\u9700\u6c42\uff1a \u53cd\u6620\u7528\u6237\u4f53\u9a8c\uff0c\u8861\u91cf\u7cfb\u7edf\u6838\u5fc3\u00e5\u6027\u80fd \u3002\u5982\uff1a\u5728\u7ebf\u7cfb\u7edf\u7684\u65f6\u5ef6\uff0c\u4f5c\u4e1a\u8ba1\u7b97\u7cfb\u7edf\u7684\u4f5c\u4e1a\u5b8c\u6210\u65f6\u95f4\u7b49\u3002 \u53cd\u6620\u7cfb\u7edf\u7684\u541e\u5410\u91cf \u3002\u5982\uff1a\u8bf7\u6c42\u6570\uff0c\u53d1\u51fa\u548c\u63a5\u6536\u7684\u7f51\u7edc\u5305\u5927\u5c0f\u7b49\u3002 \u5e2e\u52a9\u53d1\u73b0\u548c\u5b9a\u4f4d\u6545\u969c\u548c\u95ee\u9898 \u3002\u5982\uff1a\u9519\u8bef\u8ba1\u6570\u3001\u8c03\u7528\u5931\u8d25\u7387\u7b49\u3002 \u53cd\u6620\u7cfb\u7edf\u7684\u9971\u548c\u5ea6\u548c\u8d1f\u8f7d \u3002\u5982\uff1a\u7cfb\u7edf\u5360\u7528\u7684\u5185\u5b58\u3001\u4f5c\u4e1a\u961f\u5217\u7684\u957f\u5ea6\u7b49\u3002\u9664\u4e86\u4ee5\u4e0a\u5e38\u89c4\u9700\u6c42\uff0c\u8fd8\u53ef\u6839\u636e\u5177\u4f53\u7684\u95ee\u9898\u573a\u666f\uff0c\u4e3a\u4e86\u6392\u9664\u548c\u53d1\u73b0\u4ee5\u524d\u51fa\u73b0\u8fc7\u6216\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u786e\u5b9a\u76f8\u5e94\u7684\u6d4b\u91cf\u5bf9\u8c61\u3002\u6bd4\u5982\uff0c\u7cfb\u7edf\u9700\u8981\u7ecf\u5e38\u8c03\u7528\u7684\u4e00\u4e2a\u5e93\u7684\u63a5\u53e3\u53ef\u80fd\u8017\u65f6\u8f83\u957f\uff0c\u6216\u5076\u6709\u5931\u8d25\uff0c\u53ef\u5236\u5b9a Metrics \u4ee5\u6d4b\u91cf\u8fd9\u4e2a\u63a5\u53e3\u7684\u65f6\u5ef6\u548c\u5931\u8d25\u6570\u3002 2 \u4ece\u9700\u8981\u76d1\u63a7\u7684\u7cfb\u7edf\u51fa\u53d1 \u4e3a\u4e86\u6ee1\u8db3\u76f8\u5e94\u7684\u9700\u6c42\uff0c\u4e0d\u540c\u7cfb\u7edf\u9700\u8981\u89c2\u6d4b\u7684\u6d4b\u91cf\u5bf9\u8c61\u4e5f\u662f\u4e0d\u540c\u7684\u3002\u5728 \u5b98\u65b9\u6587\u6863 \u7684\u6700\u4f73\u5b9e\u8df5\u4e2d\uff0c\u5c06\u9700\u8981\u76d1\u63a7\u7684\u5e94\u7528\u5206\u4e3a\u4e86\u4e09\u7c7b\uff1a \u7ebf\u4e0a\u670d\u52a1\u7cfb\u7edf\uff08Online-serving systems \uff09\uff1a\u9700\u5bf9\u8bf7\u6c42\u505a\u5373\u65f6\u7684\u54cd\u5e94\uff0c\u8bf7\u6c42\u53d1\u8d77\u8005\u4f1a\u7b49\u5f85\u54cd\u5e94\u3002\u5982 web \u670d\u52a1\u5668\u3002 \u7ebf\u4e0b\u8ba1\u7b97\u7cfb\u7edf\uff08Offline processing\uff09 \uff1a\u8bf7\u6c42\u53d1\u8d77\u8005\u4e0d\u4f1a\u7b49\u5f85\u54cd\u5e94\uff0c\u8bf7\u6c42\u7684\u4f5c\u4e1a\u901a\u5e38\u4f1a\u8017\u65f6\u8f83\u957f\u3002\u5982\u6279\u5904\u7406\u8ba1\u7b97\u6846\u67b6 Spark \u7b49\u3002 \u6279\u5904\u7406\u4f5c\u4e1a\uff08Batch jobs\uff09 \uff1a\u8fd9\u7c7b\u5e94\u7528\u901a\u5e38\u4e3a\u4e00\u6b21\u6027\u7684\uff0c\u4e0d\u4f1a\u4e00\u76f4\u8fd0\u884c\uff0c\u8fd0\u884c\u5b8c\u6210\u540e\u4fbf\u4f1a\u7ed3\u675f\u8fd0\u884c\u3002\u5982\u6570\u636e\u5206\u6790\u7684 MapReduce \u4f5c\u4e1a\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7c7b\u5e94\u7528\u5176\u901a\u5e38\u60c5\u51b5\u4e0b\u6d4b\u91cf\u7684\u5bf9\u8c61\u662f\u4e0d\u592a\u4e00\u6837\u7684\u3002\u5176\u603b\u7ed3\u5982\u4e0b\uff1a * \u7ebf\u4e0a\u670d\u52a1\u7cfb\u7edf \uff1a\u4e3b\u8981\u6709\u8bf7\u6c42\u3001\u51fa\u9519\u7684\u6570\u91cf\uff0c\u8bf7\u6c42\u7684\u65f6\u5ef6\u7b49\u3002 \u7ebf\u4e0b\u8ba1\u7b97\u7cfb\u7edf\uff1a\u6700\u540e\u5f00\u59cb\u5904\u7406\u4f5c\u4e1a\u7684\u65f6\u95f4\uff0c\u76ee\u524d\u6b63\u5728\u5904\u7406\u4f5c\u4e1a\u7684\u6570\u91cf\uff0c\u53d1\u51fa\u4e86\u591a\u5c11 items\uff0c \u4f5c\u4e1a\u961f\u5217\u7684\u957f\u5ea6\u7b49\u3002 \u6279\u5904\u7406\u4f5c\u4e1a \uff1a\u6700\u540e\u6210\u529f\u6267\u884c\u7684\u65f6\u523b\uff0c\u6bcf\u4e2a\u4e3b\u8981 stage \u7684\u6267\u884c\u65f6\u95f4\uff0c\u603b\u7684\u8017\u65f6\uff0c\u5904\u7406\u7684\u8bb0\u5f55\u6570\u91cf\u7b49\u3002 * \u9664\u4e86\u7cfb\u7edf\u672c\u8eab\uff0c\u6709\u65f6\u8fd8\u9700\u76d1\u63a7\u5b50\u7cfb\u7edf\uff1a \u4f7f\u7528\u7684\u5e93\uff08Libraries\uff09: \u8c03\u7528\u6b21\u6570\uff0c\u6210\u529f\u6570\uff0c\u51fa\u9519\u6570\uff0c\u8c03\u7528\u7684\u65f6\u5ef6\u3002 \u65e5\u5fd7\uff08Logging\uff09\uff1a\u8ba1\u6570\u6bcf\u4e00\u6761\u5199\u5165\u7684\u65e5\u5fd7\uff0c\u4ece\u800c\u53ef\u627e\u5230\u6bcf\u6761\u65e5\u5fd7\u53d1\u751f\u7684\u9891\u7387\u548c\u65f6\u95f4\u3002 Failures: \u9519\u8bef\u8ba1\u6570\u3002 \u7ebf\u7a0b\u6c60\uff1a\u6392\u961f\u7684\u8bf7\u6c42\u6570\uff0c\u6b63\u5728\u4f7f\u7528\u7684\u7ebf\u7a0b\u6570\uff0c\u603b\u7ebf\u7a0b\u6570\uff0c\u8017\u65f6\uff0c\u6b63\u5728\u5904\u7406\u7684\u4efb\u52a1\u6570\u7b49\u3002 \u7f13\u5b58\uff1a\u8bf7\u6c42\u6570\uff0c\u547d\u4e2d\u6570\uff0c\u603b\u65f6\u5ef6\u7b49\u3002 3 \u786e\u5b9a Label \u5e38\u89c1 Label \u7684\u9009\u62e9\u6709\uff1a resource region type \u786e\u5b9a Label \u7684\u4e00\u4e2a\u91cd\u8981\u539f\u5219\u662f\uff1a \u540c\u4e00\u7ef4\u5ea6 Label \u7684\u6570\u636e\u662f\u53ef\u5e73\u5747\u548c\u53ef\u52a0\u548c\u7684\uff0c\u4e5f\u5373\u5355\u4f4d\u8981\u7edf\u4e00\u3002\u5982\u98ce\u6247\u7684\u98ce\u901f\u548c\u7535\u538b\u5c31\u4e0d\u80fd\u653e\u5728\u4e00\u4e2a Label \u91cc\u3002\u6b64\u5916\uff0c\u4e0d\u5efa\u8bae\u4e0b\u5217\u505a\u6cd5\uff1a my_metric{label=a} 1 my_metric{label=b} 6 my_metric{label=total} 7 \u5373\u5728 Label \u4e2d\u540c\u65f6\u7edf\u8ba1\u4e86\u5206\u548c\u603b\u7684\u6570\u636e\uff0c\u5efa\u8bae\u91c7\u7528 PromQL \u5728\u670d\u52a1\u5668\u7aef\u805a\u5408\u5f97\u5230\u603b\u548c\u7684\u7ed3\u679c\u3002\u6216\u8005\u7528\u53e6\u5916\u7684 Metric \u53bb\u6d4b\u91cf\u603b\u7684\u6570\u636e\u3002 4 \u547d\u540d Metrics \u548c Label \u597d\u7684\u547d\u540d\u80fd\u591f\u89c1\u540d\u77e5\u4e49\uff0c\u56e0\u6b64\u547d\u540d\u4e5f\u662f\u826f\u597d\u8bbe\u8ba1\u7684\u4e00\u73af\u3002 4-1 Metric \u7684\u547d\u540d\uff1a \u9700\u8981\u7b26\u5408 pattern: a-zA-Z*:* \u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u5355\u8bcd\u4f5c\u4e3a\u524d\u7f00\uff0c\u8868\u660e\u8fd9\u4e2a Metric \u6240\u5c5e\u7684\u57df\u3002\u5982\uff1a prometheus_notifications_total process_cpu_seconds_total ipamd_request_latency \u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u5355\u4f4d\u7684\u5355\u4f4d\u4f5c\u4e3a\u540e\u7f00\uff0c\u8868\u660e\u8fd9\u4e2a Metric \u7684\u5355\u4f4d\u3002\u5982\uff1a http_request_duration_seconds node_memory_usage_bytes http_requests_total (for a unit-less accumulating count) \u903b\u8f91\u4e0a\u4e0e\u88ab\u6d4b\u91cf\u7684\u53d8\u91cf\u542b\u4e49\u76f8\u540c\u3002 \u5c3d\u91cf\u4f7f\u7528\u57fa\u672c\u5355\u4f4d\uff0c\u5982 seconds\uff0cbytes\u3002\u800c\u4e0d\u662f Milliseconds, megabytes\u3002 4-2 Label \u7684\u547d\u540d\uff1a \u4f9d\u636e\u9009\u62e9\u7684\u7ef4\u5ea6\u547d\u540d\uff0c\u5982\uff1a region: shenzhen/guangzhou/beijing owner: user1/user2/user3 stage: extract/transform/load 5 Buckets\u9009\u62e9 \u9002\u5b9c\u7684 buckets \u80fd\u4f7f histogram \u7684\u767e\u5206\u4f4d\u6570\u8ba1\u7b97\u66f4\u52a0\u51c6\u786e\u3002 \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6876\u4f1a\u4f7f\u5f97\u6570\u636e\u5206\u5e03\u5448\u9636\u68af\u72b6\uff0c\u5373\u5404\u6876\u533a\u95f4\u5185\u6570\u636e\u4e2a\u6570\u5927\u81f4\u76f8\u540c\u3002buckets \u7684\u8bbe\u8ba1\u53ef\u9075\u4ece\u5982\u4e0b\u7ecf\u9a8c\uff1a \u9700\u8981\u77e5\u9053\u6570\u636e\u7684\u5927\u81f4\u5206\u5e03\uff0c\u82e5\u4e8b\u5148\u4e0d\u77e5\u9053\u53ef\u5148\u7528\u9ed8\u8ba4\u6876 \uff08{.005, .01, .025, .05, .1, .25, .5, 1, 2.5, 5, 10}\uff09 \u6216 2 \u500d\u6570\u6876 \uff08{1,2,4,8\u2026}\uff09 \u89c2\u5bdf\u6570\u636e\u5206\u5e03\u518d\u8c03\u6574 buckets\u3002 \u6570\u636e\u5206\u5e03\u8f83\u5bc6\u5904\u6876\u95f4\u9694\u5236\u5b9a\u7684\u8f83\u7a84\u4e00\u4e9b\uff0c\u5206\u5e03\u7a00\u758f\u5904\u53ef\u5236\u5b9a\u7684\u8f83\u5bbd\u4e00\u4e9b\u3002 \u5bf9\u4e8e\u591a\u6570\u65f6\u5ef6\u6570\u636e\uff0c\u4e00\u822c\u5177\u6709\u957f\u5c3e\u7684\u7279\u6027\uff0c\u8f83\u9002\u5b9c\u7528\u6307\u6570\u5f62\u5f0f\u7684\u6876\uff08 ExponentialBuckets \uff09\u3002 \u521d\u59cb\u6876\u4e0a\u754c\u4e00\u822c\u8986\u76d610%\u5de6\u53f3\u7684\u6570\u636e\uff0c\u82e5\u4e0d\u5173\u6ce8\u5934\u90e8\u6570\u636e\u4e5f\u53ef\u4ee5\u8ba9\u521d\u59cb\u4e0a\u754c\u66f4\u5927\u4e00\u4e9b\u3002 \u82e5\u4e3a\u4e86\u66f4\u51c6\u786e\u8ba1\u7b97\u7279\u5b9a\u767e\u5206\u4f4d\u6570\uff0c\u598290%\uff0c\u53ef\u572890%\u7684\u6570\u636e\u5904\u52a0\u5bc6\u5206\u5e03\u6876\uff0c\u5373\u51cf\u5c11\u6876\u7684\u95f4\u9694\u3002 \u6bd4\u5982\u6211\u5728\u76d1\u63a7\u6211\u4eec\u67d0\u4e9b\u4efb\u52a1\u8017\u65f6\u7684\u65f6\u5019\uff0c\u5c31\u662f\u9009\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4f30\u7b97\u51fa\u5927\u81f4\u7684 bucket \u53d6\u503c\uff0c\u4e0a\u7ebf\u540e\u89c2\u5bdf\u6570\u636e\u548c\u76d1\u63a7\u518d\u53bb\u8c03\u6574 bucket\uff0c \u8fd9\u6837\u7ecf\u8fc7\u51e0\u6b21\u8c03\u6574\u5e94\u8be5\u5c31\u80fd\u8c03\u6574\u5230\u6bd4\u8f83\u5408\u9002\u7684 bucket\u3002 6 Grafana \u4f7f\u7528\u6280\u5de7 6-1 \u67e5\u770b\u6240\u6709\u7ef4\u5ea6 \u5982\u679c\u4f60\u60f3\u77e5\u9053\u662f\u5426\u8fd8\u80fd\u6309\u5176\u5b83\u7ef4\u5ea6\u5206\u7ec4\uff0c\u5e76\u5feb\u901f\u67e5\u770b\u8fd8\u6709\u54ea\u4e9b\u7ef4\u5ea6\uff0c\u53ef\u91c7\u7528\u4ee5\u4e0b\u6280\u5de7\uff1a\u5728 query \u7684\u8868\u8fbe\u5f0f\u4e0a\u53ea\u4fdd\u7559\u6307\u6807\u540d\u79f0\uff0c\u4e0d\u505a\u4efb\u4f55\u8ba1\u7b97\uff0cLegend format \u4e5f\u7559\u7a7a\u3002\u8fd9\u6837\u5c31\u80fd\u663e\u793a\u51fa\u539f\u59cb\u7684 metric \u6570\u636e\u3002\u5982\u4e0b\u56fe\u6240\u793a 6-2 \u6807\u5c3a\u8054\u52a8 \u5728 Settings \u9762\u677f\u4e2d\uff0c\u6709\u4e00\u4e2a Graph Tooltip \u8bbe\u7f6e\u9879\uff0c\u9ed8\u8ba4\u4f7f\u7528 Default\u3002 \u4e0b\u9762\u5c06\u56fe\u5f62\u5c55\u793a\u5de5\u5177\u5206\u522b\u8c03\u6574\u4e3a Shared crosshair \u548c Shared Tooltip \u770b\u770b\u6548\u679c\u3002\u53ef\u4ee5\u770b\u5230\u6807\u5c3a\u80fd\u8054\u52a8\u5c55\u793a\u4e86\uff0c\u65b9\u4fbf\u6392\u67e5\u95ee\u9898\u65f6\u786e\u8ba4 2 \u4e2a\u6307\u6807\u7684\u5173\u8054\u6027\u3002\u5c06\u56fe\u5f62\u5c55\u793a\u5de5\u5177\u8c03\u6574\u4e3a Shared Tooltip\uff1a","title":"\u7b2c\u96f6\u8282 Promethues \u5e94\u7528\u76d1\u63a7\u7684\u4e00\u4e9b\u5b9e\u8df5"},{"location":"chap1/57prometheus_best_practice/#0-promethues","text":"\u5728\u5177\u4f53\u8bbe\u8ba1 Metrics \u4e4b\u524d\uff0c\u9996\u5148\u9700\u8981\u660e\u786e\u9700\u8981\u6d4b\u91cf\u7684\u5bf9\u8c61\u3002\u9700\u8981\u6d4b\u91cf\u7684\u5bf9\u8c61\u5e94\u8be5\u4f9d\u636e\u5177\u4f53\u7684\u95ee\u9898\u80cc\u666f\u3001\u9700\u6c42\u548c\u9700\u76d1\u63a7\u7684\u7cfb\u7edf\u672c\u8eab\u6765\u786e\u5b9a\u3002","title":"\u7b2c0\u8282 Promethues \u5e94\u7528\u76d1\u63a7\u7684\u4e00\u4e9b\u5b9e\u8df5"},{"location":"chap1/57prometheus_best_practice/#1","text":"Google \u9488\u5bf9\u5927\u91cf\u5206\u5e03\u5f0f\u76d1\u63a7\u7684\u7ecf\u9a8c\u603b\u7ed3\u51fa\u56db\u4e2a\u76d1\u63a7\u7684\u9ec4\u91d1\u6307\u6807\uff0c\u8fd9\u56db\u4e2a\u6307\u6807\u5bf9\u4e8e\u4e00\u822c\u6027\u7684\u76d1\u63a7\u6d4b\u91cf\u5bf9\u8c61\u90fd\u5177\u6709\u8f83\u597d\u7684\u53c2\u8003\u610f\u4e49\u3002\u8fd9\u56db\u4e2a\u6307\u6807\u5206\u522b\u4e3a\uff1a \u5ef6\u8fdf \uff1a\u670d\u52a1\u8bf7\u6c42\u7684\u65f6\u95f4\u3002 \u901a\u8baf\u91cf \uff1a\u76d1\u63a7\u5f53\u524d\u7cfb\u7edf\u7684\u6d41\u91cf\uff0c\u7528\u4e8e\u8861\u91cf\u670d\u52a1\u7684\u5bb9\u91cf\u9700\u6c42\u3002 \u9519\u8bef \uff1a\u76d1\u63a7\u5f53\u524d\u7cfb\u7edf\u6240\u6709\u53d1\u751f\u7684\u9519\u8bef\u8bf7\u6c42\uff0c\u8861\u91cf\u5f53\u524d\u7cfb\u7edf\u9519\u8bef\u53d1\u751f\u7684\u901f\u7387\u3002 \u9971\u548c\u5ea6 \uff1a\u8861\u91cf\u5f53\u524d\u670d\u52a1\u7684\u9971\u548c\u5ea6\u3002\u4e3b\u8981\u5f3a\u8c03\u6700\u80fd\u5f71\u54cd\u670d\u52a1\u72b6\u6001\u7684\u53d7\u9650\u5236\u7684\u8d44\u6e90\u3002\u4f8b\u5982\uff0c\u5982\u679c\u7cfb\u7edf\u4e3b\u8981\u53d7\u5185\u5b58\u5f71\u54cd\uff0c\u90a3\u5c31\u4e3b\u8981\u5173\u6ce8\u7cfb\u7edf\u7684\u5185\u5b58\u72b6\u6001\u3002\u4ee5\u4e0a\u56db\u79cd\u6307\u6807\uff0c\u5176\u5b9e\u662f\u4e3a\u4e86\u6ee1\u8db3\u56db\u4e2a\u76d1\u63a7\u9700\u6c42\uff1a \u53cd\u6620\u7528\u6237\u4f53\u9a8c\uff0c\u8861\u91cf\u7cfb\u7edf\u6838\u5fc3\u00e5\u6027\u80fd \u3002\u5982\uff1a\u5728\u7ebf\u7cfb\u7edf\u7684\u65f6\u5ef6\uff0c\u4f5c\u4e1a\u8ba1\u7b97\u7cfb\u7edf\u7684\u4f5c\u4e1a\u5b8c\u6210\u65f6\u95f4\u7b49\u3002 \u53cd\u6620\u7cfb\u7edf\u7684\u541e\u5410\u91cf \u3002\u5982\uff1a\u8bf7\u6c42\u6570\uff0c\u53d1\u51fa\u548c\u63a5\u6536\u7684\u7f51\u7edc\u5305\u5927\u5c0f\u7b49\u3002 \u5e2e\u52a9\u53d1\u73b0\u548c\u5b9a\u4f4d\u6545\u969c\u548c\u95ee\u9898 \u3002\u5982\uff1a\u9519\u8bef\u8ba1\u6570\u3001\u8c03\u7528\u5931\u8d25\u7387\u7b49\u3002 \u53cd\u6620\u7cfb\u7edf\u7684\u9971\u548c\u5ea6\u548c\u8d1f\u8f7d \u3002\u5982\uff1a\u7cfb\u7edf\u5360\u7528\u7684\u5185\u5b58\u3001\u4f5c\u4e1a\u961f\u5217\u7684\u957f\u5ea6\u7b49\u3002\u9664\u4e86\u4ee5\u4e0a\u5e38\u89c4\u9700\u6c42\uff0c\u8fd8\u53ef\u6839\u636e\u5177\u4f53\u7684\u95ee\u9898\u573a\u666f\uff0c\u4e3a\u4e86\u6392\u9664\u548c\u53d1\u73b0\u4ee5\u524d\u51fa\u73b0\u8fc7\u6216\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u786e\u5b9a\u76f8\u5e94\u7684\u6d4b\u91cf\u5bf9\u8c61\u3002\u6bd4\u5982\uff0c\u7cfb\u7edf\u9700\u8981\u7ecf\u5e38\u8c03\u7528\u7684\u4e00\u4e2a\u5e93\u7684\u63a5\u53e3\u53ef\u80fd\u8017\u65f6\u8f83\u957f\uff0c\u6216\u5076\u6709\u5931\u8d25\uff0c\u53ef\u5236\u5b9a Metrics \u4ee5\u6d4b\u91cf\u8fd9\u4e2a\u63a5\u53e3\u7684\u65f6\u5ef6\u548c\u5931\u8d25\u6570\u3002","title":"1 \u4ece\u9700\u6c42\u51fa\u53d1"},{"location":"chap1/57prometheus_best_practice/#2","text":"\u4e3a\u4e86\u6ee1\u8db3\u76f8\u5e94\u7684\u9700\u6c42\uff0c\u4e0d\u540c\u7cfb\u7edf\u9700\u8981\u89c2\u6d4b\u7684\u6d4b\u91cf\u5bf9\u8c61\u4e5f\u662f\u4e0d\u540c\u7684\u3002\u5728 \u5b98\u65b9\u6587\u6863 \u7684\u6700\u4f73\u5b9e\u8df5\u4e2d\uff0c\u5c06\u9700\u8981\u76d1\u63a7\u7684\u5e94\u7528\u5206\u4e3a\u4e86\u4e09\u7c7b\uff1a \u7ebf\u4e0a\u670d\u52a1\u7cfb\u7edf\uff08Online-serving systems \uff09\uff1a\u9700\u5bf9\u8bf7\u6c42\u505a\u5373\u65f6\u7684\u54cd\u5e94\uff0c\u8bf7\u6c42\u53d1\u8d77\u8005\u4f1a\u7b49\u5f85\u54cd\u5e94\u3002\u5982 web \u670d\u52a1\u5668\u3002 \u7ebf\u4e0b\u8ba1\u7b97\u7cfb\u7edf\uff08Offline processing\uff09 \uff1a\u8bf7\u6c42\u53d1\u8d77\u8005\u4e0d\u4f1a\u7b49\u5f85\u54cd\u5e94\uff0c\u8bf7\u6c42\u7684\u4f5c\u4e1a\u901a\u5e38\u4f1a\u8017\u65f6\u8f83\u957f\u3002\u5982\u6279\u5904\u7406\u8ba1\u7b97\u6846\u67b6 Spark \u7b49\u3002 \u6279\u5904\u7406\u4f5c\u4e1a\uff08Batch jobs\uff09 \uff1a\u8fd9\u7c7b\u5e94\u7528\u901a\u5e38\u4e3a\u4e00\u6b21\u6027\u7684\uff0c\u4e0d\u4f1a\u4e00\u76f4\u8fd0\u884c\uff0c\u8fd0\u884c\u5b8c\u6210\u540e\u4fbf\u4f1a\u7ed3\u675f\u8fd0\u884c\u3002\u5982\u6570\u636e\u5206\u6790\u7684 MapReduce \u4f5c\u4e1a\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7c7b\u5e94\u7528\u5176\u901a\u5e38\u60c5\u51b5\u4e0b\u6d4b\u91cf\u7684\u5bf9\u8c61\u662f\u4e0d\u592a\u4e00\u6837\u7684\u3002\u5176\u603b\u7ed3\u5982\u4e0b\uff1a * \u7ebf\u4e0a\u670d\u52a1\u7cfb\u7edf \uff1a\u4e3b\u8981\u6709\u8bf7\u6c42\u3001\u51fa\u9519\u7684\u6570\u91cf\uff0c\u8bf7\u6c42\u7684\u65f6\u5ef6\u7b49\u3002 \u7ebf\u4e0b\u8ba1\u7b97\u7cfb\u7edf\uff1a\u6700\u540e\u5f00\u59cb\u5904\u7406\u4f5c\u4e1a\u7684\u65f6\u95f4\uff0c\u76ee\u524d\u6b63\u5728\u5904\u7406\u4f5c\u4e1a\u7684\u6570\u91cf\uff0c\u53d1\u51fa\u4e86\u591a\u5c11 items\uff0c \u4f5c\u4e1a\u961f\u5217\u7684\u957f\u5ea6\u7b49\u3002 \u6279\u5904\u7406\u4f5c\u4e1a \uff1a\u6700\u540e\u6210\u529f\u6267\u884c\u7684\u65f6\u523b\uff0c\u6bcf\u4e2a\u4e3b\u8981 stage \u7684\u6267\u884c\u65f6\u95f4\uff0c\u603b\u7684\u8017\u65f6\uff0c\u5904\u7406\u7684\u8bb0\u5f55\u6570\u91cf\u7b49\u3002 * \u9664\u4e86\u7cfb\u7edf\u672c\u8eab\uff0c\u6709\u65f6\u8fd8\u9700\u76d1\u63a7\u5b50\u7cfb\u7edf\uff1a \u4f7f\u7528\u7684\u5e93\uff08Libraries\uff09: \u8c03\u7528\u6b21\u6570\uff0c\u6210\u529f\u6570\uff0c\u51fa\u9519\u6570\uff0c\u8c03\u7528\u7684\u65f6\u5ef6\u3002 \u65e5\u5fd7\uff08Logging\uff09\uff1a\u8ba1\u6570\u6bcf\u4e00\u6761\u5199\u5165\u7684\u65e5\u5fd7\uff0c\u4ece\u800c\u53ef\u627e\u5230\u6bcf\u6761\u65e5\u5fd7\u53d1\u751f\u7684\u9891\u7387\u548c\u65f6\u95f4\u3002 Failures: \u9519\u8bef\u8ba1\u6570\u3002 \u7ebf\u7a0b\u6c60\uff1a\u6392\u961f\u7684\u8bf7\u6c42\u6570\uff0c\u6b63\u5728\u4f7f\u7528\u7684\u7ebf\u7a0b\u6570\uff0c\u603b\u7ebf\u7a0b\u6570\uff0c\u8017\u65f6\uff0c\u6b63\u5728\u5904\u7406\u7684\u4efb\u52a1\u6570\u7b49\u3002 \u7f13\u5b58\uff1a\u8bf7\u6c42\u6570\uff0c\u547d\u4e2d\u6570\uff0c\u603b\u65f6\u5ef6\u7b49\u3002","title":"2 \u4ece\u9700\u8981\u76d1\u63a7\u7684\u7cfb\u7edf\u51fa\u53d1"},{"location":"chap1/57prometheus_best_practice/#3-label","text":"\u5e38\u89c1 Label \u7684\u9009\u62e9\u6709\uff1a resource region type \u786e\u5b9a Label \u7684\u4e00\u4e2a\u91cd\u8981\u539f\u5219\u662f\uff1a \u540c\u4e00\u7ef4\u5ea6 Label \u7684\u6570\u636e\u662f\u53ef\u5e73\u5747\u548c\u53ef\u52a0\u548c\u7684\uff0c\u4e5f\u5373\u5355\u4f4d\u8981\u7edf\u4e00\u3002\u5982\u98ce\u6247\u7684\u98ce\u901f\u548c\u7535\u538b\u5c31\u4e0d\u80fd\u653e\u5728\u4e00\u4e2a Label \u91cc\u3002\u6b64\u5916\uff0c\u4e0d\u5efa\u8bae\u4e0b\u5217\u505a\u6cd5\uff1a my_metric{label=a} 1 my_metric{label=b} 6 my_metric{label=total} 7 \u5373\u5728 Label \u4e2d\u540c\u65f6\u7edf\u8ba1\u4e86\u5206\u548c\u603b\u7684\u6570\u636e\uff0c\u5efa\u8bae\u91c7\u7528 PromQL \u5728\u670d\u52a1\u5668\u7aef\u805a\u5408\u5f97\u5230\u603b\u548c\u7684\u7ed3\u679c\u3002\u6216\u8005\u7528\u53e6\u5916\u7684 Metric \u53bb\u6d4b\u91cf\u603b\u7684\u6570\u636e\u3002","title":"3 \u786e\u5b9a Label"},{"location":"chap1/57prometheus_best_practice/#4-metrics-label","text":"\u597d\u7684\u547d\u540d\u80fd\u591f\u89c1\u540d\u77e5\u4e49\uff0c\u56e0\u6b64\u547d\u540d\u4e5f\u662f\u826f\u597d\u8bbe\u8ba1\u7684\u4e00\u73af\u3002","title":"4 \u547d\u540d Metrics \u548c Label"},{"location":"chap1/57prometheus_best_practice/#4-1-metric","text":"\u9700\u8981\u7b26\u5408 pattern: a-zA-Z*:* \u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u5355\u8bcd\u4f5c\u4e3a\u524d\u7f00\uff0c\u8868\u660e\u8fd9\u4e2a Metric \u6240\u5c5e\u7684\u57df\u3002\u5982\uff1a prometheus_notifications_total process_cpu_seconds_total ipamd_request_latency \u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u5355\u4f4d\u7684\u5355\u4f4d\u4f5c\u4e3a\u540e\u7f00\uff0c\u8868\u660e\u8fd9\u4e2a Metric \u7684\u5355\u4f4d\u3002\u5982\uff1a http_request_duration_seconds node_memory_usage_bytes http_requests_total (for a unit-less accumulating count) \u903b\u8f91\u4e0a\u4e0e\u88ab\u6d4b\u91cf\u7684\u53d8\u91cf\u542b\u4e49\u76f8\u540c\u3002 \u5c3d\u91cf\u4f7f\u7528\u57fa\u672c\u5355\u4f4d\uff0c\u5982 seconds\uff0cbytes\u3002\u800c\u4e0d\u662f Milliseconds, megabytes\u3002","title":"4-1 Metric \u7684\u547d\u540d\uff1a"},{"location":"chap1/57prometheus_best_practice/#4-2-label","text":"\u4f9d\u636e\u9009\u62e9\u7684\u7ef4\u5ea6\u547d\u540d\uff0c\u5982\uff1a region: shenzhen/guangzhou/beijing owner: user1/user2/user3 stage: extract/transform/load","title":"4-2 Label \u7684\u547d\u540d\uff1a"},{"location":"chap1/57prometheus_best_practice/#5-buckets","text":"\u9002\u5b9c\u7684 buckets \u80fd\u4f7f histogram \u7684\u767e\u5206\u4f4d\u6570\u8ba1\u7b97\u66f4\u52a0\u51c6\u786e\u3002 \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6876\u4f1a\u4f7f\u5f97\u6570\u636e\u5206\u5e03\u5448\u9636\u68af\u72b6\uff0c\u5373\u5404\u6876\u533a\u95f4\u5185\u6570\u636e\u4e2a\u6570\u5927\u81f4\u76f8\u540c\u3002buckets \u7684\u8bbe\u8ba1\u53ef\u9075\u4ece\u5982\u4e0b\u7ecf\u9a8c\uff1a \u9700\u8981\u77e5\u9053\u6570\u636e\u7684\u5927\u81f4\u5206\u5e03\uff0c\u82e5\u4e8b\u5148\u4e0d\u77e5\u9053\u53ef\u5148\u7528\u9ed8\u8ba4\u6876 \uff08{.005, .01, .025, .05, .1, .25, .5, 1, 2.5, 5, 10}\uff09 \u6216 2 \u500d\u6570\u6876 \uff08{1,2,4,8\u2026}\uff09 \u89c2\u5bdf\u6570\u636e\u5206\u5e03\u518d\u8c03\u6574 buckets\u3002 \u6570\u636e\u5206\u5e03\u8f83\u5bc6\u5904\u6876\u95f4\u9694\u5236\u5b9a\u7684\u8f83\u7a84\u4e00\u4e9b\uff0c\u5206\u5e03\u7a00\u758f\u5904\u53ef\u5236\u5b9a\u7684\u8f83\u5bbd\u4e00\u4e9b\u3002 \u5bf9\u4e8e\u591a\u6570\u65f6\u5ef6\u6570\u636e\uff0c\u4e00\u822c\u5177\u6709\u957f\u5c3e\u7684\u7279\u6027\uff0c\u8f83\u9002\u5b9c\u7528\u6307\u6570\u5f62\u5f0f\u7684\u6876\uff08 ExponentialBuckets \uff09\u3002 \u521d\u59cb\u6876\u4e0a\u754c\u4e00\u822c\u8986\u76d610%\u5de6\u53f3\u7684\u6570\u636e\uff0c\u82e5\u4e0d\u5173\u6ce8\u5934\u90e8\u6570\u636e\u4e5f\u53ef\u4ee5\u8ba9\u521d\u59cb\u4e0a\u754c\u66f4\u5927\u4e00\u4e9b\u3002 \u82e5\u4e3a\u4e86\u66f4\u51c6\u786e\u8ba1\u7b97\u7279\u5b9a\u767e\u5206\u4f4d\u6570\uff0c\u598290%\uff0c\u53ef\u572890%\u7684\u6570\u636e\u5904\u52a0\u5bc6\u5206\u5e03\u6876\uff0c\u5373\u51cf\u5c11\u6876\u7684\u95f4\u9694\u3002 \u6bd4\u5982\u6211\u5728\u76d1\u63a7\u6211\u4eec\u67d0\u4e9b\u4efb\u52a1\u8017\u65f6\u7684\u65f6\u5019\uff0c\u5c31\u662f\u9009\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4f30\u7b97\u51fa\u5927\u81f4\u7684 bucket \u53d6\u503c\uff0c\u4e0a\u7ebf\u540e\u89c2\u5bdf\u6570\u636e\u548c\u76d1\u63a7\u518d\u53bb\u8c03\u6574 bucket\uff0c \u8fd9\u6837\u7ecf\u8fc7\u51e0\u6b21\u8c03\u6574\u5e94\u8be5\u5c31\u80fd\u8c03\u6574\u5230\u6bd4\u8f83\u5408\u9002\u7684 bucket\u3002","title":"5 Buckets\u9009\u62e9"},{"location":"chap1/57prometheus_best_practice/#6-grafana","text":"","title":"6 Grafana \u4f7f\u7528\u6280\u5de7"},{"location":"chap1/57prometheus_best_practice/#6-1","text":"\u5982\u679c\u4f60\u60f3\u77e5\u9053\u662f\u5426\u8fd8\u80fd\u6309\u5176\u5b83\u7ef4\u5ea6\u5206\u7ec4\uff0c\u5e76\u5feb\u901f\u67e5\u770b\u8fd8\u6709\u54ea\u4e9b\u7ef4\u5ea6\uff0c\u53ef\u91c7\u7528\u4ee5\u4e0b\u6280\u5de7\uff1a\u5728 query \u7684\u8868\u8fbe\u5f0f\u4e0a\u53ea\u4fdd\u7559\u6307\u6807\u540d\u79f0\uff0c\u4e0d\u505a\u4efb\u4f55\u8ba1\u7b97\uff0cLegend format \u4e5f\u7559\u7a7a\u3002\u8fd9\u6837\u5c31\u80fd\u663e\u793a\u51fa\u539f\u59cb\u7684 metric \u6570\u636e\u3002\u5982\u4e0b\u56fe\u6240\u793a","title":"6-1 \u67e5\u770b\u6240\u6709\u7ef4\u5ea6"},{"location":"chap1/57prometheus_best_practice/#6-2","text":"\u5728 Settings \u9762\u677f\u4e2d\uff0c\u6709\u4e00\u4e2a Graph Tooltip \u8bbe\u7f6e\u9879\uff0c\u9ed8\u8ba4\u4f7f\u7528 Default\u3002 \u4e0b\u9762\u5c06\u56fe\u5f62\u5c55\u793a\u5de5\u5177\u5206\u522b\u8c03\u6574\u4e3a Shared crosshair \u548c Shared Tooltip \u770b\u770b\u6548\u679c\u3002\u53ef\u4ee5\u770b\u5230\u6807\u5c3a\u80fd\u8054\u52a8\u5c55\u793a\u4e86\uff0c\u65b9\u4fbf\u6392\u67e5\u95ee\u9898\u65f6\u786e\u8ba4 2 \u4e2a\u6307\u6807\u7684\u5173\u8054\u6027\u3002\u5c06\u56fe\u5f62\u5c55\u793a\u5de5\u5177\u8c03\u6574\u4e3a Shared Tooltip\uff1a","title":"6-2 \u6807\u5c3a\u8054\u52a8"},{"location":"chap1/9kube-state-metrics_crd/","text":"\u7b2c\u4e5d\u8282 \u901a\u8fc7 kube-state-metrics \u6dfb\u52a0 CRD \u72b6\u6001\u6307\u6807 \u5728 Kubernetes \u4e2d\uff0c\u81ea\u5b9a\u4e49\u8d44\u6e90\uff08CRD\uff09\u662f\u4e00\u79cd\u6269\u5c55 API \u7684\u673a\u5236\uff0c\u53ef\u4ee5\u4f7f\u7528 Kubernetes APIServer \u6765\u5b58\u50a8\u548c\u7ba1\u7406\u81ea\u5b9a\u4e49\u5bf9\u8c61\u3002 \u672c\u6587\u6211\u4eec\u5c06\u63cf\u8ff0\u5982\u4f55\u5728\u4e0d\u7f16\u5199\u81ea\u5b9a\u4e49\u8d44\u6e90\u6ce8\u518c\u8868\u548c\u81ea\u5df1\u6784\u5efa KSM \u7684\u60c5\u51b5\u4e0b\uff0c\u6839\u636e\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684\u72b6\u6001\u6765\u6dfb\u52a0\u6307\u6807\u3002 \u914d\u7f6e \u9700\u8981\u4e0b\u9762\u63cf\u8ff0\u7684 YAML \u914d\u7f6e\u6587\u4ef6\u6765\u5b9a\u4e49\u4f60\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u548c\u8981\u8f6c\u6362\u4e3a\u6307\u6807\u7684\u5b57\u6bb5\u3002 \u6709\u4e24\u4e2a\u53c2\u6570\u9700\u8981\u7528\u5230\uff1a --custom-resource-state-config \u5728\u5185\u8054\u7684 yaml \u4e2d --custom-resource-state-config-file \u6307\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 \u5982\u679c\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6807\u5fd7\uff0c\u5219\u5185\u8054\u914d\u7f6e\u5c06\u4f18\u5148\u3002 \u5f53\u540c\u4e00\u8d44\u6e90\u5b58\u5728\u591a\u4e2a\u6761\u76ee\u65f6\uff0c kube-state-metrics \u5c06\u9000\u51fa\u5e76\u62a5\u9519\uff0c\u8fd9\u5305\u62ec\u5f15\u7528\u4e0d\u540c API \u7248\u672c\u7684\u914d\u7f6e \u3002 \u9664\u4e86\u6307\u5b9a --custom-resource-state-config* \u6807\u5fd7\u4e4b\u5916\uff0c\u8fd8\u5e94\u8be5\u5c06\u590d\u6570\u5f62\u5f0f\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u79cd\u7c7b\u6dfb\u52a0\u5230 --resources \u6807\u5fd7\u4e2d\u7684\u66b4\u9732\u8d44\u6e90\u5217\u8868\u4e2d \u3002 \u5982\u679c\u4e0d\u6307\u5b9a --resources \uff0c\u90a3\u4e48 kube-state-metrics \u5c06\u8003\u8651\u5728 --custom-resource-state-config* \u4e2d\u914d\u7f6e\u7684\u6240\u6709\u5df2\u77e5\u81ea\u5b9a\u4e49\u8d44\u6e90\u548c\u6240\u6709\u53ef\u7528\u7684\u9ed8\u8ba4 kubernetes \u5bf9\u8c61\u3002 apiVersion: apps/v1 kind: Deployment metadata: name: kube-state-metrics namespace: kube-system spec: template: spec: containers: - name: kube-state-metrics args: - --custom-resource-state-config - | # \u5728YAML\u6587\u4ef6\u4e2d\uff0c| \u5141\u8bb8\u5c06\u591a\u884c\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6807\u5fd7\u503c\u4f20\u9012 # https://yaml-multiline.info spec: resources: - groupVersionKind: group: myteam.io version: \"v1\" kind: Foo metrics: - name: active_count help: \"Count of active Foo\" each: type: Gauge ... - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,foos,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments,verticalpodautoscalers \u4e5f\u53ef\u4ee5\u5c06 kube-state-metrics \u914d\u7f6e\u4e3a\u4ec5\u5728\u81ea\u5b9a\u4e49\u8d44\u6e90\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff0c\u9664\u4e86\u6307\u5b9a --custom-resource-state-config* \u6807\u5fd7\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u5c06 --custom-resource-state-only \u8bbe\u7f6e\u4e3a true\u3002 \u4f7f\u7528\u6b64\u914d\u7f6e\uff0c kube-state-metrics \u53ea\u4f1a\u8003\u8651\u5728 --custom-resource-state-config* \u4e2d\u914d\u7f6e\u7684\u5df2\u77e5\u81ea\u5b9a\u4e49\u8d44\u6e90\u3002 apiVersion: apps/v1 kind: Deployment metadata: name: kube-state-metrics namespace: kube-system spec: template: spec: containers: - name: kube-state-metrics args: - --custom-resource-state-config - | spec: resources: - groupVersionKind: group: myteam.io version: \"v1\" kind: Foo metrics: - name: active_count help: \"Count of active Foo\" each: type: Gauge ... - --custom-resource-state-only=true \u6ce8\u610f\uff1a customresource_group \u3001 customresource_version \u548c customresource_kind \u8fd9\u51e0\u4e2a\u516c\u5171\u6807\u7b7e\u662f\u4fdd\u7559\u7684\uff0c\u5c06\u88ab groupVersionKind \u5b57\u6bb5\u4e2d\u7684\u503c\u8986\u76d6\u3002 \u793a\u4f8b \u4e0b\u9762\u6211\u4eec\u5c06\u5c06\u4f7f\u7528\u4ee5\u4e0b\u81ea\u5b9a\u4e49\u8d44\u6e90\u6765\u8fdb\u884c\u8bf4\u660e\uff1a kind: Foo apiVersion: myteam.io/vl metadata: annotations: bar: baz qux: quxx labels: foo: bar name: foo spec: version: v1.2.3 order: - id: 1 value: true - id: 3 value: false replicas: 1 status: phase: Pending active: type-a: 1 type-b: 3 conditions: - name: a value: 45 - name: b value: 66 sub: type-a: active: 1 ready: 2 type-b: active: 3 ready: 4 uptime: 43.21 \u5355\u503c \u914d\u7f6e\u5982\u4e0b\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" metrics: - name: \"uptime\" help: \"Foo uptime\" each: type: Gauge gauge: path: [status, uptime] \u4f7f\u7528\u4e0a\u9762\u7684\u914d\u7f6e\u4f1a\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u6307\u6807\uff1a kube_customresource_uptime{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\"} 43.21 \u591a\u6307\u6807 kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" commonLabels: # labels can be added to all metrics from a resource crd_type: \"foo\" labelsFromPath: # \u6765\u81ea path \u8def\u5f84\u7684\u6807\u7b7e name: [metadata, name] # \u76f8\u5f53\u4e8e\uff1aname=metadata.name metrics: - name: \"ready_count\" help: \"Number Foo Bars ready\" each: type: Gauge gauge: # \u4ee5\u5bf9\u8c61\u6216\u6570\u7ec4\u4e3a\u76ee\u6807\u5c06\u751f\u6210\u6bcf\u4e2a\u5143\u7d20\u6807\u7b7e FromPath \u7684\u6307\u6807\uff0c\u5e76\u4e14\u503c\u4e0e\u6b64\u8def\u5f84\u76f8\u5173 path: [status, sub] # \u5982\u679c path \u76ee\u6807\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219\u5bf9\u8c61\u7684 key \u5c06\u4f1a\u88ab\u7528\u4f5c\u6807\u7b7e\u503c # StateSet \u7c7b\u578b\u4e0d\u652f\u6301\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u6240\u6709\u503c\u90fd\u662ftrue\uff0c\u8fd9\u662f\u591a\u4f59\u7684\u3002 labelFromKey: type # \u53ef\u4ee5\u89e3\u6790\u7279\u5b9a\u4e8e\u6b64\u8def\u5f84\u7684\u6807\u7b7e\u503c labelsFromPath: active: [active] # \u8981\u7528\u4f5c\u6307\u6807\u503c\u7684\u5b9e\u9645\u5b57\u6bb5\uff0c\u5e94\u4e3a\u6570\u5b57\u3001\u5e03\u5c14\u503c\u6216 RFC3339 \u65f6\u95f4\u6233\u5b57\u7b26\u4e32\u3002 valueFrom: [ready] commonLabels: custom_metric: \"yes\" labelsFromPath: # \u6574\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u201c*\u201d\u590d\u5236\u5230\u6807\u7b7e\u4e2d # *\u4efb\u4f55\u5185\u5bb9\u90fd\u5c06\u88ab\u590d\u5236\u5230\u6807\u7b7e\u4e2d\uff0c\u9996\u5148\u662f\u6392\u5e8f\u6700\u9ad8\u7684 * \u5b57\u7b26\u4e32 \"*\": [metadata, labels] \"**\": [metadata, annotations] # \u6216\u8005\u53ef\u4ee5\u590d\u5236\u7279\u5b9a\u5b57\u6bb5\u3002\u8fd9\u4e9b\u5b57\u6bb5\u5c06\u59cb\u7ec8\u8986\u76d6*s\u4e2d\u7684\u503c name: [metadata, name] foo: [metadata, labels, foo] \u7136\u540e\u4f1a\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a kube_customresource_ready_count{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", active=\"1\",custom_metric=\"yes\",foo=\"bar\",name=\"foo\",bar=\"baz\",qux=\"quxx\",type=\"type-a\"} 2 kube_customresource_ready_count{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", active=\"3\",custom_metric=\"yes\",foo=\"bar\",name=\"foo\",bar=\"baz\",qux=\"quxx\",type=\"type-b\"} 4 \u6307\u6807\u7c7b\u578b \u8be5\u914d\u7f6e\u652f\u6301 OpenMetrics \u89c4\u8303 \u4e2d\u7684\u4e09\u79cd\u6307\u6807\u3002\u6307\u6807\u7c7b\u578b\u7531 type \u5b57\u6bb5\u53ca\u5176\u5728\u7c7b\u578b\u7279\u5b9a\u7ed3\u6784\u4e2d\u7684\u7279\u5b9a\u914d\u7f6e\u6307\u5b9a\u3002 Gauge Gauge \u662f\u8868\u793a\u7684\u662f\u5f53\u524d\u7684\u6d4b\u91cf\u503c\uff0c\u5982\u5f53\u524d\u4f7f\u7528\u7684\u5185\u5b58\u5b57\u8282\u6570\u6216\u961f\u5217\u4e2d\u7684\u9879\u76ee\u6570\uff0c\u5bf9\u4e8e gauge \u6765\u8bf4\uff0c\u7edd\u5bf9\u503c\u662f\u5927\u5bb6\u611f\u5174\u8da3\u7684\u4e1c\u897f\u3002\u4f8b\u5982\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" metrics: - name: \"uptime\" help: \"Foo uptime\" each: type: Gauge gauge: path: [status, uptime] # status.uptime \u4f7f\u7528\u4e0a\u9762\u7684\u914d\u7f6e\u53ef\u4ee5\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a kube_customresource_uptime{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\"} 43.21 \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u4e0b\u7c7b\u578b\u8f6c\u6362\u3002Gauge \u751f\u6210 float64 \u7c7b\u578b\u7684\u503c\uff0c\u4f46\u81ea\u5b9a\u4e49\u8d44\u6e90\u53ef\u4ee5\u662f\u5404\u79cd\u7c7b\u578b\uff0ckube-state-metrics \u5bf9\u5f88\u591a\u7c7b\u578b\u6267\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u652f\u6301\u7684\u7c7b\u578b\u5305\u62ec\uff1a (u)int32/64\u3001int\u3001float32 \u548c byte \u8f6c\u6362\u4e3a float64 \u5982\u679c NilIsZero \u4e3a\u771f\uff0cnil \u4e00\u822c\u4f1a\u88ab\u6620\u5c04\u4e3a 0.0\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9519\u8bef bool \u7c7b\u578b true \u6620\u5c04\u5230 1.0\uff0cfalse \u6620\u5c04\u5230 0.0 \u5bf9\u4e8e\u5b57\u7b26\u4e32\uff0c\u4ee5\u4e0b\u903b\u8f91\u9002\u7528\uff1a \"true\" \u548c \"yes\" \u88ab\u6620\u5c04\u4e3a 1.0\uff0c\"false\" \u548c \"no\"\u88ab\u6620\u5c04\u4e3a 0.0\uff08\u5168\u90e8\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09 RFC3339 \u65f6\u95f4\u88ab\u89e3\u6790\u4e3a\u6d6e\u70b9\u65f6\u95f4\u6233 \u6700\u540e\u4f7f\u7528 https://pkg.go.dev/strconv#ParseFloat \u5c06\u5b57\u7b26\u4e32\u89e3\u6790\u4e3a\u6d6e\u70b9\u6570\uff0c\u5b83\u5e94\u8be5\u652f\u6301\u6240\u6709\u5e38\u89c1\u7684\u6570\u5b57\u683c\u5f0f\uff0c\u5982\u679c\u5931\u8d25\uff0c\u5219\u4f1a\u4ea7\u751f\u9519\u8bef Kubernetes \u63a7\u5236\u5668\u4e0a\u7684\u72b6\u6001\u6761\u4ef6\u793a\u4f8b\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" labelsFromPath: name: - metadata - name namespace: - metadata - namespace metrics: - name: \"foo_status\" help: \"status condition \" each: type: Gauge gauge: path: [status, conditions] labelsFromPath: type: [\"type\"] valueFrom: [\"status\"] \u8fd9\u9002\u7528\u4e8e\u6839\u636e kubernetes api (https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#Condition) \u516c\u5f00\u72b6\u6001\u6761\u4ef6\u7684 kubernetes \u63a7\u5236\u5668 CR\uff1a status: conditions: - lastTransitionTime: \"2019-10-22T16:29:31Z\" status: \"True\" type: Ready \u53ef\u4ee5\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a kube_customresource_foo_status{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", type=\"Ready\"} 1.0 StateSet StateSet \u8868\u793a\u4e00\u7cfb\u5217\u76f8\u5173\u7684\u5e03\u5c14\u503c\uff0c\u4e5f\u79f0\u4e3a bitset\u3002\u5982\u679c\u9700\u8981\u5bf9 ENUM \u8fdb\u884c\u7f16\u7801\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 StateSet \u6765\u5b8c\u6210\u3002\u4f8b\u5982\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" metrics: - name: \"status_phase\" help: \"Foo status_phase\" each: type: StateSet stateSet: labelName: phase path: [status, phase] list: [Pending, Bar, Baz] StateSet \u7c7b\u578b\u7684\u6307\u6807\u5c06\u4e3a\u6bcf\u4e2a\u8d44\u6e90\u7684\u5217\u8868\u4e2d\u5b9a\u4e49\u7684\u6bcf\u4e2a\u503c\u751f\u6210\u4e00\u4e2a\u6307\u6807\uff0c\u5982\u679c\u8be5\u503c\u4e0e\u5217\u8868\u4e2d\u7684\u503c\u5339\u914d\uff0c\u5219\u8be5\u503c\u5c06\u4e3a 1\u3002\u4f1a\u751f\u6210\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a kube_customresource_status_phase{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", phase=\"Pending\"} 1 kube_customresource_status_phase{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", phase=\"Bar\"} 0 kube_customresource_status_phase{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", phase=\"Baz\"} 0 Info Info \u6307\u6807\u7528\u4e8e\u66b4\u9732\u6587\u672c\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u5728\u8fdb\u7a0b\u751f\u547d\u5468\u671f\u5185\u4e0d\u5e94\u66f4\u6539\uff0c\u5e38\u89c1\u793a\u4f8b\u662f\u5e94\u7528\u7a0b\u5e8f\u7684\u7248\u672c\u3001\u4fee\u8ba2\u63a7\u5236\u63d0\u4ea4\u548c\u7f16\u8bd1\u5668\u7684\u7248\u672c\u3002 Info \u7c7b\u578b\u7684\u6307\u6807\u7684\u503c\u59cb\u7ec8\u4e3a 1\uff0c\u4f8b\u5982\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" metrics: - name: \"version\" help: \"Foo version\" each: type: Info info: labelsFromPath: version: [spec, version] \u4f1a\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a kube_customresource_version{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", version=\"v1.2.3\"} 1 \u547d\u540d \u9ed8\u8ba4\u6307\u6807\u540d\u79f0\u5e26\u6709\u524d\u7f00\u4ee5\u907f\u514d\u4e0e\u5176\u4ed6\u6307\u6807\u51b2\u7a81\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 kube_ \u7684\u6307\u6807\u524d\u7f00\u4e0e\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684 group+version+kind \u8fde\u63a5\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 metricNamePrefix \u5b57\u6bb5\u8986\u76d6\u6b64\u884c\u4e3a\u3002 kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: ... metricNamePrefix: myteam_foos metrics: - name: uptime ... \u4f1a\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a myteam_foos_uptime{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\"} 43.21 \u8981\u5b8c\u5168\u7701\u7565\u547d\u540d\u7a7a\u95f4\u7a7a\u95f4\u548c/\u6216\u5b50\u7cfb\u7edf\uff0c\u8bf7\u5c06\u5b83\u4eec\u8bbe\u7f6e\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: ... metricNamePrefix: \"\" metrics: - name: uptime ... \u4f1a\u4ea7\u751f\u5982\u4e0b\u7684\u6307\u6807\uff1a uptime{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\"} 43.21 \u65e5\u5fd7 \u5982\u679c\u5df2\u6ce8\u518c\u6307\u6807\u8def\u5f84\u4f46\u672a\u5728\u81ea\u5b9a\u4e49\u8d44\u6e90\u4e0a\u627e\u5230\uff0c\u5219\u4f1a\u8bb0\u5f55\u9519\u8bef\u65e5\u5fd7\u3002\u5bf9\u4e8e\u67d0\u4e9b\u8d44\u6e90\uff0c\u8fd9\u53ef\u80fd\u4f1a\u4ea7\u751f\u5927\u91cf\u65e0\u7528\u7684\u65e5\u5fd7\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8d44\u6e90\u6216\u6307\u6807\u4e0a\u7684 errorLogV \u8bbe\u7f6e\u6307\u6807\u6216\u8d44\u6e90\u7684\u9519\u8bef\u65e5\u5fd7\u8be6\u7ec6\u7a0b\u5ea6\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: ... errorLogV: 0 # 0 = default for errors metrics: - name: uptime errorLogV: 10 # only log at high verbosity \u8def\u5f84\u8bed\u6cd5 Path \u8def\u5f84\u88ab\u6307\u5b9a\u4e3a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u662f\u4e00\u4e2a path \u7247\u6bb5\uff0c\u6839\u636e\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684\u6570\u636e\u52a8\u6001\u89e3\u6790\u3002\u5982\u679c\u7f3a\u5c11 path \u7684\u4efb\u4f55\u90e8\u5206\uff0c\u5219\u7ed3\u679c\u4e3a\u96f6\u3002\u4f8b\u5982\uff1a # \u7b80\u5355\u8def\u5f84\u67e5\u627e [spec, replicas] # spec.replicas == 1 # \u6570\u7ec4\u7d22\u5f15 [spec, order, \"0\", value] # spec.order[0].value = true # \u901a\u8fc7 key = value \u5728\u5217\u8868\u4e2d\u67e5\u627e\u5143\u7d20 [status, conditions, \"[name=a]\", value] # status.conditions[0].value = 45 # \u5982\u679c\u8981\u5339\u914d\u7684\u503c\u662f\u6570\u5b57\u6216\u5e03\u5c14\u503c\uff0c\u5219\u5c06\u8be5\u503c\u4f5c\u4e3a\u6570\u5b57\u6216\u5e03\u5c14\u503c\u8fdb\u884c\u6bd4\u8f83 [status, conditions, \"[value=66]\", name] # status.conditions[1].name = \"b\"","title":"\u7b2c\u4e5d\u8282 \u901a\u8fc7 kube-state-metrics \u6dfb\u52a0 CRD \u72b6\u6001\u6307\u6807"},{"location":"chap1/9kube-state-metrics_crd/#kube-state-metrics-crd","text":"\u5728 Kubernetes \u4e2d\uff0c\u81ea\u5b9a\u4e49\u8d44\u6e90\uff08CRD\uff09\u662f\u4e00\u79cd\u6269\u5c55 API \u7684\u673a\u5236\uff0c\u53ef\u4ee5\u4f7f\u7528 Kubernetes APIServer \u6765\u5b58\u50a8\u548c\u7ba1\u7406\u81ea\u5b9a\u4e49\u5bf9\u8c61\u3002 \u672c\u6587\u6211\u4eec\u5c06\u63cf\u8ff0\u5982\u4f55\u5728\u4e0d\u7f16\u5199\u81ea\u5b9a\u4e49\u8d44\u6e90\u6ce8\u518c\u8868\u548c\u81ea\u5df1\u6784\u5efa KSM \u7684\u60c5\u51b5\u4e0b\uff0c\u6839\u636e\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684\u72b6\u6001\u6765\u6dfb\u52a0\u6307\u6807\u3002","title":"\u7b2c\u4e5d\u8282 \u901a\u8fc7 kube-state-metrics \u6dfb\u52a0 CRD \u72b6\u6001\u6307\u6807"},{"location":"chap1/9kube-state-metrics_crd/#_1","text":"\u9700\u8981\u4e0b\u9762\u63cf\u8ff0\u7684 YAML \u914d\u7f6e\u6587\u4ef6\u6765\u5b9a\u4e49\u4f60\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u548c\u8981\u8f6c\u6362\u4e3a\u6307\u6807\u7684\u5b57\u6bb5\u3002 \u6709\u4e24\u4e2a\u53c2\u6570\u9700\u8981\u7528\u5230\uff1a --custom-resource-state-config \u5728\u5185\u8054\u7684 yaml \u4e2d --custom-resource-state-config-file \u6307\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 \u5982\u679c\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6807\u5fd7\uff0c\u5219\u5185\u8054\u914d\u7f6e\u5c06\u4f18\u5148\u3002 \u5f53\u540c\u4e00\u8d44\u6e90\u5b58\u5728\u591a\u4e2a\u6761\u76ee\u65f6\uff0c kube-state-metrics \u5c06\u9000\u51fa\u5e76\u62a5\u9519\uff0c\u8fd9\u5305\u62ec\u5f15\u7528\u4e0d\u540c API \u7248\u672c\u7684\u914d\u7f6e \u3002 \u9664\u4e86\u6307\u5b9a --custom-resource-state-config* \u6807\u5fd7\u4e4b\u5916\uff0c\u8fd8\u5e94\u8be5\u5c06\u590d\u6570\u5f62\u5f0f\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u79cd\u7c7b\u6dfb\u52a0\u5230 --resources \u6807\u5fd7\u4e2d\u7684\u66b4\u9732\u8d44\u6e90\u5217\u8868\u4e2d \u3002 \u5982\u679c\u4e0d\u6307\u5b9a --resources \uff0c\u90a3\u4e48 kube-state-metrics \u5c06\u8003\u8651\u5728 --custom-resource-state-config* \u4e2d\u914d\u7f6e\u7684\u6240\u6709\u5df2\u77e5\u81ea\u5b9a\u4e49\u8d44\u6e90\u548c\u6240\u6709\u53ef\u7528\u7684\u9ed8\u8ba4 kubernetes \u5bf9\u8c61\u3002 apiVersion: apps/v1 kind: Deployment metadata: name: kube-state-metrics namespace: kube-system spec: template: spec: containers: - name: kube-state-metrics args: - --custom-resource-state-config - | # \u5728YAML\u6587\u4ef6\u4e2d\uff0c| \u5141\u8bb8\u5c06\u591a\u884c\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6807\u5fd7\u503c\u4f20\u9012 # https://yaml-multiline.info spec: resources: - groupVersionKind: group: myteam.io version: \"v1\" kind: Foo metrics: - name: active_count help: \"Count of active Foo\" each: type: Gauge ... - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,foos,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments,verticalpodautoscalers \u4e5f\u53ef\u4ee5\u5c06 kube-state-metrics \u914d\u7f6e\u4e3a\u4ec5\u5728\u81ea\u5b9a\u4e49\u8d44\u6e90\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff0c\u9664\u4e86\u6307\u5b9a --custom-resource-state-config* \u6807\u5fd7\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u5c06 --custom-resource-state-only \u8bbe\u7f6e\u4e3a true\u3002 \u4f7f\u7528\u6b64\u914d\u7f6e\uff0c kube-state-metrics \u53ea\u4f1a\u8003\u8651\u5728 --custom-resource-state-config* \u4e2d\u914d\u7f6e\u7684\u5df2\u77e5\u81ea\u5b9a\u4e49\u8d44\u6e90\u3002 apiVersion: apps/v1 kind: Deployment metadata: name: kube-state-metrics namespace: kube-system spec: template: spec: containers: - name: kube-state-metrics args: - --custom-resource-state-config - | spec: resources: - groupVersionKind: group: myteam.io version: \"v1\" kind: Foo metrics: - name: active_count help: \"Count of active Foo\" each: type: Gauge ... - --custom-resource-state-only=true \u6ce8\u610f\uff1a customresource_group \u3001 customresource_version \u548c customresource_kind \u8fd9\u51e0\u4e2a\u516c\u5171\u6807\u7b7e\u662f\u4fdd\u7559\u7684\uff0c\u5c06\u88ab groupVersionKind \u5b57\u6bb5\u4e2d\u7684\u503c\u8986\u76d6\u3002","title":"\u914d\u7f6e"},{"location":"chap1/9kube-state-metrics_crd/#_2","text":"\u4e0b\u9762\u6211\u4eec\u5c06\u5c06\u4f7f\u7528\u4ee5\u4e0b\u81ea\u5b9a\u4e49\u8d44\u6e90\u6765\u8fdb\u884c\u8bf4\u660e\uff1a kind: Foo apiVersion: myteam.io/vl metadata: annotations: bar: baz qux: quxx labels: foo: bar name: foo spec: version: v1.2.3 order: - id: 1 value: true - id: 3 value: false replicas: 1 status: phase: Pending active: type-a: 1 type-b: 3 conditions: - name: a value: 45 - name: b value: 66 sub: type-a: active: 1 ready: 2 type-b: active: 3 ready: 4 uptime: 43.21","title":"\u793a\u4f8b"},{"location":"chap1/9kube-state-metrics_crd/#_3","text":"\u914d\u7f6e\u5982\u4e0b\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" metrics: - name: \"uptime\" help: \"Foo uptime\" each: type: Gauge gauge: path: [status, uptime] \u4f7f\u7528\u4e0a\u9762\u7684\u914d\u7f6e\u4f1a\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u6307\u6807\uff1a kube_customresource_uptime{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\"} 43.21","title":"\u5355\u503c"},{"location":"chap1/9kube-state-metrics_crd/#_4","text":"kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" commonLabels: # labels can be added to all metrics from a resource crd_type: \"foo\" labelsFromPath: # \u6765\u81ea path \u8def\u5f84\u7684\u6807\u7b7e name: [metadata, name] # \u76f8\u5f53\u4e8e\uff1aname=metadata.name metrics: - name: \"ready_count\" help: \"Number Foo Bars ready\" each: type: Gauge gauge: # \u4ee5\u5bf9\u8c61\u6216\u6570\u7ec4\u4e3a\u76ee\u6807\u5c06\u751f\u6210\u6bcf\u4e2a\u5143\u7d20\u6807\u7b7e FromPath \u7684\u6307\u6807\uff0c\u5e76\u4e14\u503c\u4e0e\u6b64\u8def\u5f84\u76f8\u5173 path: [status, sub] # \u5982\u679c path \u76ee\u6807\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219\u5bf9\u8c61\u7684 key \u5c06\u4f1a\u88ab\u7528\u4f5c\u6807\u7b7e\u503c # StateSet \u7c7b\u578b\u4e0d\u652f\u6301\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u6240\u6709\u503c\u90fd\u662ftrue\uff0c\u8fd9\u662f\u591a\u4f59\u7684\u3002 labelFromKey: type # \u53ef\u4ee5\u89e3\u6790\u7279\u5b9a\u4e8e\u6b64\u8def\u5f84\u7684\u6807\u7b7e\u503c labelsFromPath: active: [active] # \u8981\u7528\u4f5c\u6307\u6807\u503c\u7684\u5b9e\u9645\u5b57\u6bb5\uff0c\u5e94\u4e3a\u6570\u5b57\u3001\u5e03\u5c14\u503c\u6216 RFC3339 \u65f6\u95f4\u6233\u5b57\u7b26\u4e32\u3002 valueFrom: [ready] commonLabels: custom_metric: \"yes\" labelsFromPath: # \u6574\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u201c*\u201d\u590d\u5236\u5230\u6807\u7b7e\u4e2d # *\u4efb\u4f55\u5185\u5bb9\u90fd\u5c06\u88ab\u590d\u5236\u5230\u6807\u7b7e\u4e2d\uff0c\u9996\u5148\u662f\u6392\u5e8f\u6700\u9ad8\u7684 * \u5b57\u7b26\u4e32 \"*\": [metadata, labels] \"**\": [metadata, annotations] # \u6216\u8005\u53ef\u4ee5\u590d\u5236\u7279\u5b9a\u5b57\u6bb5\u3002\u8fd9\u4e9b\u5b57\u6bb5\u5c06\u59cb\u7ec8\u8986\u76d6*s\u4e2d\u7684\u503c name: [metadata, name] foo: [metadata, labels, foo] \u7136\u540e\u4f1a\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a kube_customresource_ready_count{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", active=\"1\",custom_metric=\"yes\",foo=\"bar\",name=\"foo\",bar=\"baz\",qux=\"quxx\",type=\"type-a\"} 2 kube_customresource_ready_count{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", active=\"3\",custom_metric=\"yes\",foo=\"bar\",name=\"foo\",bar=\"baz\",qux=\"quxx\",type=\"type-b\"} 4","title":"\u591a\u6307\u6807"},{"location":"chap1/9kube-state-metrics_crd/#_5","text":"\u8be5\u914d\u7f6e\u652f\u6301 OpenMetrics \u89c4\u8303 \u4e2d\u7684\u4e09\u79cd\u6307\u6807\u3002\u6307\u6807\u7c7b\u578b\u7531 type \u5b57\u6bb5\u53ca\u5176\u5728\u7c7b\u578b\u7279\u5b9a\u7ed3\u6784\u4e2d\u7684\u7279\u5b9a\u914d\u7f6e\u6307\u5b9a\u3002","title":"\u6307\u6807\u7c7b\u578b"},{"location":"chap1/9kube-state-metrics_crd/#gauge","text":"Gauge \u662f\u8868\u793a\u7684\u662f\u5f53\u524d\u7684\u6d4b\u91cf\u503c\uff0c\u5982\u5f53\u524d\u4f7f\u7528\u7684\u5185\u5b58\u5b57\u8282\u6570\u6216\u961f\u5217\u4e2d\u7684\u9879\u76ee\u6570\uff0c\u5bf9\u4e8e gauge \u6765\u8bf4\uff0c\u7edd\u5bf9\u503c\u662f\u5927\u5bb6\u611f\u5174\u8da3\u7684\u4e1c\u897f\u3002\u4f8b\u5982\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" metrics: - name: \"uptime\" help: \"Foo uptime\" each: type: Gauge gauge: path: [status, uptime] # status.uptime \u4f7f\u7528\u4e0a\u9762\u7684\u914d\u7f6e\u53ef\u4ee5\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a kube_customresource_uptime{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\"} 43.21 \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u4e0b\u7c7b\u578b\u8f6c\u6362\u3002Gauge \u751f\u6210 float64 \u7c7b\u578b\u7684\u503c\uff0c\u4f46\u81ea\u5b9a\u4e49\u8d44\u6e90\u53ef\u4ee5\u662f\u5404\u79cd\u7c7b\u578b\uff0ckube-state-metrics \u5bf9\u5f88\u591a\u7c7b\u578b\u6267\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u652f\u6301\u7684\u7c7b\u578b\u5305\u62ec\uff1a (u)int32/64\u3001int\u3001float32 \u548c byte \u8f6c\u6362\u4e3a float64 \u5982\u679c NilIsZero \u4e3a\u771f\uff0cnil \u4e00\u822c\u4f1a\u88ab\u6620\u5c04\u4e3a 0.0\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9519\u8bef bool \u7c7b\u578b true \u6620\u5c04\u5230 1.0\uff0cfalse \u6620\u5c04\u5230 0.0 \u5bf9\u4e8e\u5b57\u7b26\u4e32\uff0c\u4ee5\u4e0b\u903b\u8f91\u9002\u7528\uff1a \"true\" \u548c \"yes\" \u88ab\u6620\u5c04\u4e3a 1.0\uff0c\"false\" \u548c \"no\"\u88ab\u6620\u5c04\u4e3a 0.0\uff08\u5168\u90e8\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09 RFC3339 \u65f6\u95f4\u88ab\u89e3\u6790\u4e3a\u6d6e\u70b9\u65f6\u95f4\u6233 \u6700\u540e\u4f7f\u7528 https://pkg.go.dev/strconv#ParseFloat \u5c06\u5b57\u7b26\u4e32\u89e3\u6790\u4e3a\u6d6e\u70b9\u6570\uff0c\u5b83\u5e94\u8be5\u652f\u6301\u6240\u6709\u5e38\u89c1\u7684\u6570\u5b57\u683c\u5f0f\uff0c\u5982\u679c\u5931\u8d25\uff0c\u5219\u4f1a\u4ea7\u751f\u9519\u8bef Kubernetes \u63a7\u5236\u5668\u4e0a\u7684\u72b6\u6001\u6761\u4ef6\u793a\u4f8b\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" labelsFromPath: name: - metadata - name namespace: - metadata - namespace metrics: - name: \"foo_status\" help: \"status condition \" each: type: Gauge gauge: path: [status, conditions] labelsFromPath: type: [\"type\"] valueFrom: [\"status\"] \u8fd9\u9002\u7528\u4e8e\u6839\u636e kubernetes api (https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#Condition) \u516c\u5f00\u72b6\u6001\u6761\u4ef6\u7684 kubernetes \u63a7\u5236\u5668 CR\uff1a status: conditions: - lastTransitionTime: \"2019-10-22T16:29:31Z\" status: \"True\" type: Ready \u53ef\u4ee5\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a kube_customresource_foo_status{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", type=\"Ready\"} 1.0","title":"Gauge"},{"location":"chap1/9kube-state-metrics_crd/#stateset","text":"StateSet \u8868\u793a\u4e00\u7cfb\u5217\u76f8\u5173\u7684\u5e03\u5c14\u503c\uff0c\u4e5f\u79f0\u4e3a bitset\u3002\u5982\u679c\u9700\u8981\u5bf9 ENUM \u8fdb\u884c\u7f16\u7801\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 StateSet \u6765\u5b8c\u6210\u3002\u4f8b\u5982\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" metrics: - name: \"status_phase\" help: \"Foo status_phase\" each: type: StateSet stateSet: labelName: phase path: [status, phase] list: [Pending, Bar, Baz] StateSet \u7c7b\u578b\u7684\u6307\u6807\u5c06\u4e3a\u6bcf\u4e2a\u8d44\u6e90\u7684\u5217\u8868\u4e2d\u5b9a\u4e49\u7684\u6bcf\u4e2a\u503c\u751f\u6210\u4e00\u4e2a\u6307\u6807\uff0c\u5982\u679c\u8be5\u503c\u4e0e\u5217\u8868\u4e2d\u7684\u503c\u5339\u914d\uff0c\u5219\u8be5\u503c\u5c06\u4e3a 1\u3002\u4f1a\u751f\u6210\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a kube_customresource_status_phase{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", phase=\"Pending\"} 1 kube_customresource_status_phase{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", phase=\"Bar\"} 0 kube_customresource_status_phase{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", phase=\"Baz\"} 0","title":"StateSet"},{"location":"chap1/9kube-state-metrics_crd/#info","text":"Info \u6307\u6807\u7528\u4e8e\u66b4\u9732\u6587\u672c\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u5728\u8fdb\u7a0b\u751f\u547d\u5468\u671f\u5185\u4e0d\u5e94\u66f4\u6539\uff0c\u5e38\u89c1\u793a\u4f8b\u662f\u5e94\u7528\u7a0b\u5e8f\u7684\u7248\u672c\u3001\u4fee\u8ba2\u63a7\u5236\u63d0\u4ea4\u548c\u7f16\u8bd1\u5668\u7684\u7248\u672c\u3002 Info \u7c7b\u578b\u7684\u6307\u6807\u7684\u503c\u59cb\u7ec8\u4e3a 1\uff0c\u4f8b\u5982\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: group: myteam.io kind: \"Foo\" version: \"v1\" metrics: - name: \"version\" help: \"Foo version\" each: type: Info info: labelsFromPath: version: [spec, version] \u4f1a\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a kube_customresource_version{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\", version=\"v1.2.3\"} 1","title":"Info"},{"location":"chap1/9kube-state-metrics_crd/#_6","text":"\u9ed8\u8ba4\u6307\u6807\u540d\u79f0\u5e26\u6709\u524d\u7f00\u4ee5\u907f\u514d\u4e0e\u5176\u4ed6\u6307\u6807\u51b2\u7a81\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 kube_ \u7684\u6307\u6807\u524d\u7f00\u4e0e\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684 group+version+kind \u8fde\u63a5\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 metricNamePrefix \u5b57\u6bb5\u8986\u76d6\u6b64\u884c\u4e3a\u3002 kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: ... metricNamePrefix: myteam_foos metrics: - name: uptime ... \u4f1a\u4ea7\u751f\u5982\u4e0b\u6240\u793a\u7684\u6307\u6807\uff1a myteam_foos_uptime{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\"} 43.21 \u8981\u5b8c\u5168\u7701\u7565\u547d\u540d\u7a7a\u95f4\u7a7a\u95f4\u548c/\u6216\u5b50\u7cfb\u7edf\uff0c\u8bf7\u5c06\u5b83\u4eec\u8bbe\u7f6e\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: ... metricNamePrefix: \"\" metrics: - name: uptime ... \u4f1a\u4ea7\u751f\u5982\u4e0b\u7684\u6307\u6807\uff1a uptime{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\"} 43.21","title":"\u547d\u540d"},{"location":"chap1/9kube-state-metrics_crd/#_7","text":"\u5982\u679c\u5df2\u6ce8\u518c\u6307\u6807\u8def\u5f84\u4f46\u672a\u5728\u81ea\u5b9a\u4e49\u8d44\u6e90\u4e0a\u627e\u5230\uff0c\u5219\u4f1a\u8bb0\u5f55\u9519\u8bef\u65e5\u5fd7\u3002\u5bf9\u4e8e\u67d0\u4e9b\u8d44\u6e90\uff0c\u8fd9\u53ef\u80fd\u4f1a\u4ea7\u751f\u5927\u91cf\u65e0\u7528\u7684\u65e5\u5fd7\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8d44\u6e90\u6216\u6307\u6807\u4e0a\u7684 errorLogV \u8bbe\u7f6e\u6307\u6807\u6216\u8d44\u6e90\u7684\u9519\u8bef\u65e5\u5fd7\u8be6\u7ec6\u7a0b\u5ea6\uff1a kind: CustomResourceStateMetrics spec: resources: - groupVersionKind: ... errorLogV: 0 # 0 = default for errors metrics: - name: uptime errorLogV: 10 # only log at high verbosity","title":"\u65e5\u5fd7"},{"location":"chap1/9kube-state-metrics_crd/#_8","text":"Path \u8def\u5f84\u88ab\u6307\u5b9a\u4e3a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u662f\u4e00\u4e2a path \u7247\u6bb5\uff0c\u6839\u636e\u81ea\u5b9a\u4e49\u8d44\u6e90\u7684\u6570\u636e\u52a8\u6001\u89e3\u6790\u3002\u5982\u679c\u7f3a\u5c11 path \u7684\u4efb\u4f55\u90e8\u5206\uff0c\u5219\u7ed3\u679c\u4e3a\u96f6\u3002\u4f8b\u5982\uff1a # \u7b80\u5355\u8def\u5f84\u67e5\u627e [spec, replicas] # spec.replicas == 1 # \u6570\u7ec4\u7d22\u5f15 [spec, order, \"0\", value] # spec.order[0].value = true # \u901a\u8fc7 key = value \u5728\u5217\u8868\u4e2d\u67e5\u627e\u5143\u7d20 [status, conditions, \"[name=a]\", value] # status.conditions[0].value = 45 # \u5982\u679c\u8981\u5339\u914d\u7684\u503c\u662f\u6570\u5b57\u6216\u5e03\u5c14\u503c\uff0c\u5219\u5c06\u8be5\u503c\u4f5c\u4e3a\u6570\u5b57\u6216\u5e03\u5c14\u503c\u8fdb\u884c\u6bd4\u8f83 [status, conditions, \"[value=66]\", name] # status.conditions[1].name = \"b\"","title":"\u8def\u5f84\u8bed\u6cd5"},{"location":"chap1/k8s_adv39_kube_state_metrics/","text":"\u7b2c\u4e09\u8282 kube-state-metrics 1 \u6982\u8ff0 \u5df2\u7ecf\u6709\u4e86 cadvisor \u3001 heapster \u3001 metric-server \uff0c\u51e0\u4e4e\u5bb9\u5668\u8fd0\u884c\u7684\u6240\u6709\u6307\u6807\u90fd\u80fd\u62ff\u5230\uff0c\u4f46\u662f\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\u5374\u65e0\u80fd\u4e3a\u529b\uff1a \u6211\u8c03\u5ea6\u4e86\u591a\u5c11\u4e2a replicas \uff1f\u73b0\u5728\u53ef\u7528\u7684\u6709\u51e0\u4e2a\uff1f \u591a\u5c11\u4e2a Pod \u662f running/stopped/terminated \u72b6\u6001\uff1f Pod \u91cd\u542f\u4e86\u591a\u5c11\u6b21\uff1f \u6211\u6709\u591a\u5c11 job \u5728\u8fd0\u884c\u4e2d \u800c\u8fd9\u4e9b\u5219\u662f kube-state-metrics \u63d0\u4f9b\u7684\u5185\u5bb9\uff0c\u5b83\u57fa\u4e8e client-go \u5f00\u53d1\uff0c\u8f6e\u8be2 Kubernetes API \uff0c\u5e76\u5c06 Kubernetes \u7684\u7ed3\u6784\u5316\u4fe1\u606f\u8f6c\u6362\u4e3a metrics \u3002 2 \u529f\u80fd kube-state-metrics \u63d0\u4f9b\u7684\u6307\u6807\uff0c\u6309\u7167\u9636\u6bb5\u5206\u4e3a\u4e09\u79cd\u7c7b\u522b\uff1a 1.\u5b9e\u9a8c\u6027\u8d28\u7684\uff1a k8s api \u4e2d alpha \u9636\u6bb5\u7684\u6216\u8005 spec \u7684\u5b57\u6bb5\u3002 2.\u7a33\u5b9a\u7248\u672c\u7684\uff1a k8s \u4e2d\u4e0d\u5411\u540e\u517c\u5bb9\u7684\u4e3b\u8981\u7248\u672c\u7684\u66f4\u65b0 3.\u88ab\u5e9f\u5f03\u7684\uff1a\u5df2\u7ecf\u4e0d\u5728\u7ef4\u62a4\u7684\u3002 \u6307\u6807\u7c7b\u522b\u5305\u62ec\uff1a CronJob Metrics DaemonSet Metrics Deployment Metrics Job Metrics LimitRange Metrics Node Metrics PersistentVolume Metrics PersistentVolumeClaim Metrics Pod Metrics Pod Disruption Budget Metrics ReplicaSet Metrics ReplicationController Metrics ResourceQuota Metrics Service Metrics StatefulSet Metrics Namespace Metrics Horizontal Pod Autoscaler Metrics Endpoint Metrics Secret Metrics ConfigMap Metrics \u4ee5 Pod \u4e3a\u4f8b\uff1a kube_pod_info kube_pod_owner kube_pod_status_phase kube_pod_status_ready kube_pod_status_scheduled kube_pod_container_status_waiting kube_pod_container_status_terminated_reason ... 3 \u4f7f\u7528: \u90e8\u7f72\u6e05\u5355\u5730\u5740\uff1a https://github.com/kubernetes/kube-state-metrics/tree/master/kubernetes $ cd kube-state-metrics/kubernetes $ tree . \u251c\u2500\u2500 kube-state-metrics-cluster-role-binding.yaml \u251c\u2500\u2500 kube-state-metrics-cluster-role.yaml \u251c\u2500\u2500 kube-state-metrics-deployment.yaml \u251c\u2500\u2500 kube-state-metrics-role-binding.yaml \u251c\u2500\u2500 kube-state-metrics-role.yaml \u251c\u2500\u2500 kube-state-metrics-service-account.yaml \u2514\u2500\u2500 kube-state-metrics-service.yaml 0 directories, 7 files \u4e3b\u8981\u955c\u50cf\u6709\uff1a image: quay.io/coreos/kube-state-metrics:v1.5.0 image: k8s.gcr.io/addon-resizer:1.8.3\uff08\u53c2\u8003metric-server\u6587\u7ae0\uff0c\u7528\u4e8e\u6269\u7f29\u5bb9\uff09 \u5bf9\u4e8e pod \u7684\u8d44\u6e90\u9650\u5236\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff1a 200MiB memory 0.1 cores \u8d85\u8fc7 100 \u8282\u70b9\u7684\u96c6\u7fa4\uff1a 2MiB memory per node 0.001 cores per node kube-state-metrics \u505a\u8fc7\u4e00\u6b21\u6027\u80fd\u4f18\u5316\uff0c\u5177\u4f53\u5185\u5bb9\u53c2\u8003\u4e0b\u6587 \u90e8\u7f72\u6210\u529f\u540e\uff0c prometheus \u7684 target \u4f1a\u51fa\u73b0\u5982\u4e0b\u6807\u5fd7 \u56e0\u4e3a kube-state-metrics-service.yaml \u4e2d\u6709 prometheus.io/scrape:'true' \u6807\u8bc6\uff0c\u56e0\u6b64\u4f1a\u5c06 metric \u66b4\u9732\u7ed9 Prometheus \uff0c\u800c Prometheus \u4f1a\u5728 kubernetes-service-endpoints \u8fd9\u4e2a job \u4e0b\u81ea\u52a8\u53d1\u73b0 kube-state-metrics \uff0c\u5e76\u5f00\u59cb\u62c9\u53d6 metrics \uff0c\u65e0\u9700\u5176\u4ed6\u914d\u7f6e\u3002 kube-state-metrics-service.yaml apiVersion: v1 kind: Service metadata: name: kube-state-metrics namespace: kube-system labels: k8s-app: kube-state-metrics annotations: prometheus.io/scrape: 'true' spec: ports: - name: http-metrics port: 8080 targetPort: http-metrics protocol: TCP - name: telemetry port: 8081 targetPort: telemetry protocol: TCP selector: k8s-app: kube-state-metrics annotations: prometheus.io/scrape: 'true' \u4f7f\u7528 kube-state-metrics \u540e\u7684\u5e38\u7528\u573a\u666f\u6709\uff1a \u5b58\u5728\u6267\u884c\u5931\u8d25\u7684 Job : kube_job_status_failed{job=\"kubernetes-service-endpoints\",k8s_app=\"kube-state-metrics\"}==1 \u96c6\u7fa4\u8282\u70b9\u72b6\u6001\u9519\u8bef : kube_node_status_condition{condition=\"Ready\",status!=\"true\"}==1 \u96c6\u7fa4\u4e2d\u5b58\u5728\u542f\u52a8\u5931\u8d25\u7684 Pod \uff1a kube_pod_status_phase{phase=~\"Failed|Unknown\"}==1 \u6700\u8fd130\u5206\u949f\u5185\u6709 Pod \u5bb9\u5668\u91cd\u542f : changes(kube_pod_container_status_restarts[30m])>0 \u914d\u5408\u62a5\u8b66\u53ef\u4ee5\u66f4\u597d\u5730\u76d1\u63a7\u96c6\u7fa4\u7684\u8fd0\u884c 4 \u4e0e metric-server \u7684\u5bf9\u6bd4 metric-server \uff08\u6216 heapster \uff09\u662f\u4ece api-server \u4e2d\u83b7\u53d6 cpu \u3001 \u5185\u5b58\u4f7f\u7528\u7387 \u8fd9\u79cd\u76d1\u63a7\u6307\u6807\uff0c\u5e76\u628a\u4ed6\u4eec\u53d1\u9001\u7ed9\u5b58\u50a8\u540e\u7aef\uff0c\u5982 influxdb \u6216\u4e91\u5382\u5546\uff0c\u4ed6\u5f53\u524d\u7684\u6838\u5fc3\u4f5c\u7528\u662f\uff1a\u4e3a HPA \u7b49\u7ec4\u4ef6\u63d0\u4f9b\u51b3\u7b56\u6307\u6807\u652f\u6301\u3002 kube-state-metrics \u5173\u6ce8\u4e8e\u83b7\u53d6 k8s \u5404\u79cd\u8d44\u6e90\u7684\u6700\u65b0\u72b6\u6001\uff0c\u5982 deployment \u6216\u8005 daemonset \uff0c \u4e4b\u6240\u4ee5\u6ca1\u6709\u628a kube-state-metrics \u7eb3\u5165\u5230 metric-server \u7684\u80fd\u529b\u4e2d\uff0c \u662f\u56e0\u4e3a\u4ed6\u4eec\u7684\u5173\u6ce8\u70b9\u672c\u8d28\u4e0a\u662f\u4e0d\u4e00\u6837\u7684 \u3002 metric-server \u4ec5\u4ec5\u662f\u83b7\u53d6\u3001\u683c\u5f0f\u5316\u73b0\u6709\u6570\u636e\uff0c\u5199\u5165\u7279\u5b9a\u7684\u5b58\u50a8\uff0c\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u76d1\u63a7\u7cfb\u7edf \u3002 \u800c kube-state-metrics \u662f\u5c06 k8s \u7684\u8fd0\u884c\u72b6\u51b5\u5728\u5185\u5b58\u4e2d\u505a\u4e86\u4e2a\u5feb\u7167\uff0c\u5e76\u4e14\u83b7\u53d6\u65b0\u7684\u6307\u6807\uff0c\u4f46\u4ed6\u6ca1\u6709\u80fd\u529b\u5bfc\u51fa\u8fd9\u4e9b\u6307\u6807 \u6362\u4e2a\u89d2\u5ea6\u8bb2\uff0c kube-state-metrics \u672c\u8eab\u662f metric-server \u7684\u4e00\u79cd\u6570\u636e\u6765\u6e90\uff0c\u867d\u7136\u73b0\u5728\u6ca1\u6709\u8fd9\u4e48\u505a\u3002 \u53e6\u5916\uff0c\u50cf Prometheus \u8fd9\u79cd\u76d1\u63a7\u7cfb\u7edf\uff0c\u5e76\u4e0d\u4f1a\u53bb\u7528 metric-server \u4e2d\u7684\u6570\u636e\uff0c\u4ed6\u90fd\u662f\u81ea\u5df1\u505a\u6307\u6807\u6536\u96c6\u3001\u96c6\u6210\u7684 \uff08Prometheus\u5305\u542b\u4e86metric-server\u7684\u80fd\u529b\uff09 \uff0c\u4f46 Prometheus \u53ef\u4ee5\u76d1\u63a7 metric-server \u672c\u8eab\u7ec4\u4ef6\u7684\u76d1\u63a7\u72b6\u6001\u5e76\u9002\u65f6\u62a5\u8b66\uff0c\u8fd9\u91cc\u7684\u76d1\u63a7\u5c31\u53ef\u4ee5\u901a\u8fc7 kube-state-metrics \u6765\u5b9e\u73b0\uff0c\u5982 metric-server pod \u7684\u8fd0\u884c\u72b6\u6001\u3002 5 \u6df1\u5165\u89e3\u6790 kube-state-metrics \u672c\u8d28\u4e0a\u662f\u4e0d\u65ad\u8f6e\u8be2 api-server \uff0c\u4ee3\u7801\u7ed3\u6784\u4e5f\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u4ee3\u7801\u76ee\u5f55\uff1a $ cd /kube-state-metrics/pkg/ $ tree . \u251c\u2500\u2500 collectors \u2502 \u251c\u2500\u2500 builder.go \u2502 \u251c\u2500\u2500 collectors.go \u2502 \u251c\u2500\u2500 configmap.go \u2502 ... \u2502 \u251c\u2500\u2500 statefulset_test.go \u2502 \u251c\u2500\u2500 testutils.go \u2502 \u251c\u2500\u2500 testutils_test.go \u2502 \u2514\u2500\u2500 utils.go \u251c\u2500\u2500 constant \u2502 \u2514\u2500\u2500 resource_unit.go \u251c\u2500\u2500 metrics \u2502 \u251c\u2500\u2500 metrics.go \u2502 \u2514\u2500\u2500 metrics_test.go \u251c\u2500\u2500 metrics_store \u2502 \u251c\u2500\u2500 metrics_store.go \u2502 \u2514\u2500\u2500 metrics_store_test.go \u251c\u2500\u2500 options \u2502 \u251c\u2500\u2500 collector.go \u2502 \u251c\u2500\u2500 options.go \u2502 \u251c\u2500\u2500 options_test.go \u2502 \u251c\u2500\u2500 types.go \u2502 \u2514\u2500\u2500 types_test.go \u251c\u2500\u2500 version \u2502 \u2514\u2500\u2500 version.go \u2514\u2500\u2500 whiteblacklist \u251c\u2500\u2500 whiteblacklist.go \u2514\u2500\u2500 whiteblacklist_test.go 7 directories, 58 files \u6240\u6709\u7c7b\u578b\uff1a $ cd /kube-state-metrics/pkg/options $ less collectors.go package options import ( metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\" ) var ( DefaultNamespaces = NamespaceList{metav1.NamespaceAll} DefaultCollectors = CollectorSet{ \"daemonsets\": struct{}{}, \"deployments\": struct{}{}, \"limitranges\": struct{}{}, \"nodes\": struct{}{}, \"pods\": struct{}{}, \"poddisruptionbudgets\": struct{}{}, \"replicasets\": struct{}{}, \"replicationcontrollers\": struct{}{}, \"resourcequotas\": struct{}{}, \"services\": struct{}{}, \"jobs\": struct{}{}, \"cronjobs\": struct{}{}, \"statefulsets\": struct{}{}, \"persistentvolumes\": struct{}{}, \"persistentvolumeclaims\": struct{}{}, \"namespaces\": struct{}{}, \"horizontalpodautoscalers\": struct{}{}, \"endpoints\": struct{}{}, \"secrets\": struct{}{}, \"configmaps\": struct{}{}, } ) \u6784\u5efa\u5bf9\u5e94\u7684\u6536\u96c6\u5668 Family \u5373\u4e00\u4e2a\u7c7b\u578b\u7684\u8d44\u6e90\u96c6\u5408\uff0c\u5982 job \u4e0b\u7684 kubejobinfo \u3001 kubejobcreated \uff0c\u90fd\u662f\u4e00\u4e2a FamilyGenerator \u5b9e\u4f8b metrics.FamilyGenerator{ Name: \"kube_job_info\", Type: metrics.MetricTypeGauge, Help: \"Information about job.\", GenerateFunc: wrapJobFunc(func(j *v1batch.Job) metrics.Family { return metrics.Family{&metrics.Metric{ Name: \"kube_job_info\", Value: 1, }} }), }, func (b *Builder) buildCronJobCollector() *Collector{ // \u8fc7\u6ee4\u4f20\u5165\u7684\u767d\u540d\u5355 filteredMetricFamilies := filterMetricFamilies(b.whiteBlackList, cronJobMetricFamilies) composedMetricGenFuncs := composeMetricGenFuncs(filteredMetricFamilies) // \u5c06\u53c2\u6570\u5199\u5230header\u4e2d familyHeaders := extractMetricFamilyHeaders(filteredMetricFamilies) // NewMetricsStore\u5b9e\u73b0\u4e86client-go\u7684cache.Store\u63a5\u53e3\uff0c\u5b9e\u73b0\u672c\u5730\u7f13\u5b58\u3002 store := metricsstore.NewMetricsStore( familyHeaders, composedMetricGenFuncs, ) // \u6309namespace\u6784\u5efaReflector\uff0c\u76d1\u542c\u53d8\u5316 reflectorPerNamespace(b.ctx, b.kubeClient, &batchv1beta1.CronJob{}, store, b.namespaces, createCronJobListWatch) return NewCollector(store) } \u6027\u80fd\u4f18\u5316\uff1a kube-state-metrics \u5728\u4e4b\u524d\u7684\u7248\u672c\u4e2d\u66b4\u9732\u51fa\u4e24\u4e2a\u95ee\u9898\uff1a /metrics \u63a5\u53e3\u54cd\u5e94\u6162(10-20s) \u5185\u5b58\u6d88\u8017\u592a\u5927\uff0c\u5bfc\u81f4\u8d85\u51fa limit \u88ab\u6740\u6389 \u95ee\u9898\u4e00\u7684\u65b9\u6848\u5c31\u662f\u57fa\u4e8e client-go \u7684 cache tool \u5b9e\u73b0\u672c\u5730\u7f13\u5b58\uff0c\u5177\u4f53\u7ed3\u6784\u4e3a\uff1a var cache = map[uuid][]byte{} \u95ee\u9898\u4e8c\u7684\u7684\u65b9\u6848\u662f\uff1a\u5bf9\u4e8e\u65f6\u95f4\u5e8f\u5217\u7684\u5b57\u7b26\u4e32\uff0c\u662f\u5b58\u5728\u5f88\u591a\u91cd\u590d\u5b57\u7b26\u7684\uff08\u5982 namespace \u7b49\u524d\u7f00\u7b5b\u9009\uff09\uff0c\u53ef\u4ee5\u7528\u6307\u9488\u6216\u8005\u7ed3\u6784\u5316\u8fd9\u4e9b\u91cd\u590d\u5b57\u7b26\u3002 6 \u4f18\u5316\u70b9\u548c\u95ee\u9898 \u56e0\u4e3a kube-state-metrics \u662f\u76d1\u542c\u8d44\u6e90\u7684 add \u3001 delete \u3001 update \u4e8b\u4ef6\uff0c\u90a3\u4e48\u5728 kube-state-metrics \u90e8\u7f72\u4e4b\u524d\u5df2\u7ecf\u8fd0\u884c\u7684\u8d44\u6e90\uff0c\u5c82\u4e0d\u662f\u62ff\u4e0d\u5230\u6570\u636e\uff1f kube-state-metric \u5229\u7528 client-go \u53ef\u4ee5\u521d\u59cb\u5316\u6240\u6709\u5df2\u7ecf\u5b58\u5728\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u786e\u4fdd\u6ca1\u6709\u4efb\u4f55\u9057\u6f0f kube-state-metrics \u5f53\u524d\u4e0d\u4f1a\u8f93\u51fa metadata \u4fe1\u606f(\u5982 help \u548c description \uff09 \u7f13\u5b58\u5b9e\u73b0\u662f\u57fa\u4e8e golang \u7684 map \uff0c\u89e3\u51b3\u5e76\u53d1\u8bfb\u95ee\u9898\u5f53\u671f\u662f\u7528\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4e92\u65a5\u9501\uff0c\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u540e\u7eed\u4f1a\u8003\u8651 golang \u7684 sync.Map \u5b89\u5168 map \u3002 kube-state-metrics \u901a\u8fc7\u6bd4\u8f83 resource version \u6765\u4fdd\u8bc1 event \u7684\u987a\u5e8f kube-state-metrics \u5e76\u4e0d\u4fdd\u8bc1\u5305\u542b\u6240\u6709\u8d44\u6e90","title":"\u7b2c\u4e09\u8282 kube-state-metrics"},{"location":"chap1/k8s_adv39_kube_state_metrics/#kube-state-metrics","text":"","title":"\u7b2c\u4e09\u8282 kube-state-metrics"},{"location":"chap1/k8s_adv39_kube_state_metrics/#1","text":"\u5df2\u7ecf\u6709\u4e86 cadvisor \u3001 heapster \u3001 metric-server \uff0c\u51e0\u4e4e\u5bb9\u5668\u8fd0\u884c\u7684\u6240\u6709\u6307\u6807\u90fd\u80fd\u62ff\u5230\uff0c\u4f46\u662f\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\u5374\u65e0\u80fd\u4e3a\u529b\uff1a \u6211\u8c03\u5ea6\u4e86\u591a\u5c11\u4e2a replicas \uff1f\u73b0\u5728\u53ef\u7528\u7684\u6709\u51e0\u4e2a\uff1f \u591a\u5c11\u4e2a Pod \u662f running/stopped/terminated \u72b6\u6001\uff1f Pod \u91cd\u542f\u4e86\u591a\u5c11\u6b21\uff1f \u6211\u6709\u591a\u5c11 job \u5728\u8fd0\u884c\u4e2d \u800c\u8fd9\u4e9b\u5219\u662f kube-state-metrics \u63d0\u4f9b\u7684\u5185\u5bb9\uff0c\u5b83\u57fa\u4e8e client-go \u5f00\u53d1\uff0c\u8f6e\u8be2 Kubernetes API \uff0c\u5e76\u5c06 Kubernetes \u7684\u7ed3\u6784\u5316\u4fe1\u606f\u8f6c\u6362\u4e3a metrics \u3002","title":"1 \u6982\u8ff0"},{"location":"chap1/k8s_adv39_kube_state_metrics/#2","text":"kube-state-metrics \u63d0\u4f9b\u7684\u6307\u6807\uff0c\u6309\u7167\u9636\u6bb5\u5206\u4e3a\u4e09\u79cd\u7c7b\u522b\uff1a 1.\u5b9e\u9a8c\u6027\u8d28\u7684\uff1a k8s api \u4e2d alpha \u9636\u6bb5\u7684\u6216\u8005 spec \u7684\u5b57\u6bb5\u3002 2.\u7a33\u5b9a\u7248\u672c\u7684\uff1a k8s \u4e2d\u4e0d\u5411\u540e\u517c\u5bb9\u7684\u4e3b\u8981\u7248\u672c\u7684\u66f4\u65b0 3.\u88ab\u5e9f\u5f03\u7684\uff1a\u5df2\u7ecf\u4e0d\u5728\u7ef4\u62a4\u7684\u3002 \u6307\u6807\u7c7b\u522b\u5305\u62ec\uff1a CronJob Metrics DaemonSet Metrics Deployment Metrics Job Metrics LimitRange Metrics Node Metrics PersistentVolume Metrics PersistentVolumeClaim Metrics Pod Metrics Pod Disruption Budget Metrics ReplicaSet Metrics ReplicationController Metrics ResourceQuota Metrics Service Metrics StatefulSet Metrics Namespace Metrics Horizontal Pod Autoscaler Metrics Endpoint Metrics Secret Metrics ConfigMap Metrics \u4ee5 Pod \u4e3a\u4f8b\uff1a kube_pod_info kube_pod_owner kube_pod_status_phase kube_pod_status_ready kube_pod_status_scheduled kube_pod_container_status_waiting kube_pod_container_status_terminated_reason ...","title":"2 \u529f\u80fd"},{"location":"chap1/k8s_adv39_kube_state_metrics/#3","text":"\u90e8\u7f72\u6e05\u5355\u5730\u5740\uff1a https://github.com/kubernetes/kube-state-metrics/tree/master/kubernetes $ cd kube-state-metrics/kubernetes $ tree . \u251c\u2500\u2500 kube-state-metrics-cluster-role-binding.yaml \u251c\u2500\u2500 kube-state-metrics-cluster-role.yaml \u251c\u2500\u2500 kube-state-metrics-deployment.yaml \u251c\u2500\u2500 kube-state-metrics-role-binding.yaml \u251c\u2500\u2500 kube-state-metrics-role.yaml \u251c\u2500\u2500 kube-state-metrics-service-account.yaml \u2514\u2500\u2500 kube-state-metrics-service.yaml 0 directories, 7 files \u4e3b\u8981\u955c\u50cf\u6709\uff1a image: quay.io/coreos/kube-state-metrics:v1.5.0 image: k8s.gcr.io/addon-resizer:1.8.3\uff08\u53c2\u8003metric-server\u6587\u7ae0\uff0c\u7528\u4e8e\u6269\u7f29\u5bb9\uff09 \u5bf9\u4e8e pod \u7684\u8d44\u6e90\u9650\u5236\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff1a 200MiB memory 0.1 cores \u8d85\u8fc7 100 \u8282\u70b9\u7684\u96c6\u7fa4\uff1a 2MiB memory per node 0.001 cores per node kube-state-metrics \u505a\u8fc7\u4e00\u6b21\u6027\u80fd\u4f18\u5316\uff0c\u5177\u4f53\u5185\u5bb9\u53c2\u8003\u4e0b\u6587 \u90e8\u7f72\u6210\u529f\u540e\uff0c prometheus \u7684 target \u4f1a\u51fa\u73b0\u5982\u4e0b\u6807\u5fd7 \u56e0\u4e3a kube-state-metrics-service.yaml \u4e2d\u6709 prometheus.io/scrape:'true' \u6807\u8bc6\uff0c\u56e0\u6b64\u4f1a\u5c06 metric \u66b4\u9732\u7ed9 Prometheus \uff0c\u800c Prometheus \u4f1a\u5728 kubernetes-service-endpoints \u8fd9\u4e2a job \u4e0b\u81ea\u52a8\u53d1\u73b0 kube-state-metrics \uff0c\u5e76\u5f00\u59cb\u62c9\u53d6 metrics \uff0c\u65e0\u9700\u5176\u4ed6\u914d\u7f6e\u3002 kube-state-metrics-service.yaml apiVersion: v1 kind: Service metadata: name: kube-state-metrics namespace: kube-system labels: k8s-app: kube-state-metrics annotations: prometheus.io/scrape: 'true' spec: ports: - name: http-metrics port: 8080 targetPort: http-metrics protocol: TCP - name: telemetry port: 8081 targetPort: telemetry protocol: TCP selector: k8s-app: kube-state-metrics annotations: prometheus.io/scrape: 'true' \u4f7f\u7528 kube-state-metrics \u540e\u7684\u5e38\u7528\u573a\u666f\u6709\uff1a \u5b58\u5728\u6267\u884c\u5931\u8d25\u7684 Job : kube_job_status_failed{job=\"kubernetes-service-endpoints\",k8s_app=\"kube-state-metrics\"}==1 \u96c6\u7fa4\u8282\u70b9\u72b6\u6001\u9519\u8bef : kube_node_status_condition{condition=\"Ready\",status!=\"true\"}==1 \u96c6\u7fa4\u4e2d\u5b58\u5728\u542f\u52a8\u5931\u8d25\u7684 Pod \uff1a kube_pod_status_phase{phase=~\"Failed|Unknown\"}==1 \u6700\u8fd130\u5206\u949f\u5185\u6709 Pod \u5bb9\u5668\u91cd\u542f : changes(kube_pod_container_status_restarts[30m])>0 \u914d\u5408\u62a5\u8b66\u53ef\u4ee5\u66f4\u597d\u5730\u76d1\u63a7\u96c6\u7fa4\u7684\u8fd0\u884c","title":"3 \u4f7f\u7528:"},{"location":"chap1/k8s_adv39_kube_state_metrics/#4-metric-server","text":"metric-server \uff08\u6216 heapster \uff09\u662f\u4ece api-server \u4e2d\u83b7\u53d6 cpu \u3001 \u5185\u5b58\u4f7f\u7528\u7387 \u8fd9\u79cd\u76d1\u63a7\u6307\u6807\uff0c\u5e76\u628a\u4ed6\u4eec\u53d1\u9001\u7ed9\u5b58\u50a8\u540e\u7aef\uff0c\u5982 influxdb \u6216\u4e91\u5382\u5546\uff0c\u4ed6\u5f53\u524d\u7684\u6838\u5fc3\u4f5c\u7528\u662f\uff1a\u4e3a HPA \u7b49\u7ec4\u4ef6\u63d0\u4f9b\u51b3\u7b56\u6307\u6807\u652f\u6301\u3002 kube-state-metrics \u5173\u6ce8\u4e8e\u83b7\u53d6 k8s \u5404\u79cd\u8d44\u6e90\u7684\u6700\u65b0\u72b6\u6001\uff0c\u5982 deployment \u6216\u8005 daemonset \uff0c \u4e4b\u6240\u4ee5\u6ca1\u6709\u628a kube-state-metrics \u7eb3\u5165\u5230 metric-server \u7684\u80fd\u529b\u4e2d\uff0c \u662f\u56e0\u4e3a\u4ed6\u4eec\u7684\u5173\u6ce8\u70b9\u672c\u8d28\u4e0a\u662f\u4e0d\u4e00\u6837\u7684 \u3002 metric-server \u4ec5\u4ec5\u662f\u83b7\u53d6\u3001\u683c\u5f0f\u5316\u73b0\u6709\u6570\u636e\uff0c\u5199\u5165\u7279\u5b9a\u7684\u5b58\u50a8\uff0c\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u76d1\u63a7\u7cfb\u7edf \u3002 \u800c kube-state-metrics \u662f\u5c06 k8s \u7684\u8fd0\u884c\u72b6\u51b5\u5728\u5185\u5b58\u4e2d\u505a\u4e86\u4e2a\u5feb\u7167\uff0c\u5e76\u4e14\u83b7\u53d6\u65b0\u7684\u6307\u6807\uff0c\u4f46\u4ed6\u6ca1\u6709\u80fd\u529b\u5bfc\u51fa\u8fd9\u4e9b\u6307\u6807 \u6362\u4e2a\u89d2\u5ea6\u8bb2\uff0c kube-state-metrics \u672c\u8eab\u662f metric-server \u7684\u4e00\u79cd\u6570\u636e\u6765\u6e90\uff0c\u867d\u7136\u73b0\u5728\u6ca1\u6709\u8fd9\u4e48\u505a\u3002 \u53e6\u5916\uff0c\u50cf Prometheus \u8fd9\u79cd\u76d1\u63a7\u7cfb\u7edf\uff0c\u5e76\u4e0d\u4f1a\u53bb\u7528 metric-server \u4e2d\u7684\u6570\u636e\uff0c\u4ed6\u90fd\u662f\u81ea\u5df1\u505a\u6307\u6807\u6536\u96c6\u3001\u96c6\u6210\u7684 \uff08Prometheus\u5305\u542b\u4e86metric-server\u7684\u80fd\u529b\uff09 \uff0c\u4f46 Prometheus \u53ef\u4ee5\u76d1\u63a7 metric-server \u672c\u8eab\u7ec4\u4ef6\u7684\u76d1\u63a7\u72b6\u6001\u5e76\u9002\u65f6\u62a5\u8b66\uff0c\u8fd9\u91cc\u7684\u76d1\u63a7\u5c31\u53ef\u4ee5\u901a\u8fc7 kube-state-metrics \u6765\u5b9e\u73b0\uff0c\u5982 metric-server pod \u7684\u8fd0\u884c\u72b6\u6001\u3002","title":"4 \u4e0emetric-server\u7684\u5bf9\u6bd4"},{"location":"chap1/k8s_adv39_kube_state_metrics/#5","text":"kube-state-metrics \u672c\u8d28\u4e0a\u662f\u4e0d\u65ad\u8f6e\u8be2 api-server \uff0c\u4ee3\u7801\u7ed3\u6784\u4e5f\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u4ee3\u7801\u76ee\u5f55\uff1a $ cd /kube-state-metrics/pkg/ $ tree . \u251c\u2500\u2500 collectors \u2502 \u251c\u2500\u2500 builder.go \u2502 \u251c\u2500\u2500 collectors.go \u2502 \u251c\u2500\u2500 configmap.go \u2502 ... \u2502 \u251c\u2500\u2500 statefulset_test.go \u2502 \u251c\u2500\u2500 testutils.go \u2502 \u251c\u2500\u2500 testutils_test.go \u2502 \u2514\u2500\u2500 utils.go \u251c\u2500\u2500 constant \u2502 \u2514\u2500\u2500 resource_unit.go \u251c\u2500\u2500 metrics \u2502 \u251c\u2500\u2500 metrics.go \u2502 \u2514\u2500\u2500 metrics_test.go \u251c\u2500\u2500 metrics_store \u2502 \u251c\u2500\u2500 metrics_store.go \u2502 \u2514\u2500\u2500 metrics_store_test.go \u251c\u2500\u2500 options \u2502 \u251c\u2500\u2500 collector.go \u2502 \u251c\u2500\u2500 options.go \u2502 \u251c\u2500\u2500 options_test.go \u2502 \u251c\u2500\u2500 types.go \u2502 \u2514\u2500\u2500 types_test.go \u251c\u2500\u2500 version \u2502 \u2514\u2500\u2500 version.go \u2514\u2500\u2500 whiteblacklist \u251c\u2500\u2500 whiteblacklist.go \u2514\u2500\u2500 whiteblacklist_test.go 7 directories, 58 files \u6240\u6709\u7c7b\u578b\uff1a $ cd /kube-state-metrics/pkg/options $ less collectors.go package options import ( metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\" ) var ( DefaultNamespaces = NamespaceList{metav1.NamespaceAll} DefaultCollectors = CollectorSet{ \"daemonsets\": struct{}{}, \"deployments\": struct{}{}, \"limitranges\": struct{}{}, \"nodes\": struct{}{}, \"pods\": struct{}{}, \"poddisruptionbudgets\": struct{}{}, \"replicasets\": struct{}{}, \"replicationcontrollers\": struct{}{}, \"resourcequotas\": struct{}{}, \"services\": struct{}{}, \"jobs\": struct{}{}, \"cronjobs\": struct{}{}, \"statefulsets\": struct{}{}, \"persistentvolumes\": struct{}{}, \"persistentvolumeclaims\": struct{}{}, \"namespaces\": struct{}{}, \"horizontalpodautoscalers\": struct{}{}, \"endpoints\": struct{}{}, \"secrets\": struct{}{}, \"configmaps\": struct{}{}, } ) \u6784\u5efa\u5bf9\u5e94\u7684\u6536\u96c6\u5668 Family \u5373\u4e00\u4e2a\u7c7b\u578b\u7684\u8d44\u6e90\u96c6\u5408\uff0c\u5982 job \u4e0b\u7684 kubejobinfo \u3001 kubejobcreated \uff0c\u90fd\u662f\u4e00\u4e2a FamilyGenerator \u5b9e\u4f8b metrics.FamilyGenerator{ Name: \"kube_job_info\", Type: metrics.MetricTypeGauge, Help: \"Information about job.\", GenerateFunc: wrapJobFunc(func(j *v1batch.Job) metrics.Family { return metrics.Family{&metrics.Metric{ Name: \"kube_job_info\", Value: 1, }} }), }, func (b *Builder) buildCronJobCollector() *Collector{ // \u8fc7\u6ee4\u4f20\u5165\u7684\u767d\u540d\u5355 filteredMetricFamilies := filterMetricFamilies(b.whiteBlackList, cronJobMetricFamilies) composedMetricGenFuncs := composeMetricGenFuncs(filteredMetricFamilies) // \u5c06\u53c2\u6570\u5199\u5230header\u4e2d familyHeaders := extractMetricFamilyHeaders(filteredMetricFamilies) // NewMetricsStore\u5b9e\u73b0\u4e86client-go\u7684cache.Store\u63a5\u53e3\uff0c\u5b9e\u73b0\u672c\u5730\u7f13\u5b58\u3002 store := metricsstore.NewMetricsStore( familyHeaders, composedMetricGenFuncs, ) // \u6309namespace\u6784\u5efaReflector\uff0c\u76d1\u542c\u53d8\u5316 reflectorPerNamespace(b.ctx, b.kubeClient, &batchv1beta1.CronJob{}, store, b.namespaces, createCronJobListWatch) return NewCollector(store) } \u6027\u80fd\u4f18\u5316\uff1a kube-state-metrics \u5728\u4e4b\u524d\u7684\u7248\u672c\u4e2d\u66b4\u9732\u51fa\u4e24\u4e2a\u95ee\u9898\uff1a /metrics \u63a5\u53e3\u54cd\u5e94\u6162(10-20s) \u5185\u5b58\u6d88\u8017\u592a\u5927\uff0c\u5bfc\u81f4\u8d85\u51fa limit \u88ab\u6740\u6389 \u95ee\u9898\u4e00\u7684\u65b9\u6848\u5c31\u662f\u57fa\u4e8e client-go \u7684 cache tool \u5b9e\u73b0\u672c\u5730\u7f13\u5b58\uff0c\u5177\u4f53\u7ed3\u6784\u4e3a\uff1a var cache = map[uuid][]byte{} \u95ee\u9898\u4e8c\u7684\u7684\u65b9\u6848\u662f\uff1a\u5bf9\u4e8e\u65f6\u95f4\u5e8f\u5217\u7684\u5b57\u7b26\u4e32\uff0c\u662f\u5b58\u5728\u5f88\u591a\u91cd\u590d\u5b57\u7b26\u7684\uff08\u5982 namespace \u7b49\u524d\u7f00\u7b5b\u9009\uff09\uff0c\u53ef\u4ee5\u7528\u6307\u9488\u6216\u8005\u7ed3\u6784\u5316\u8fd9\u4e9b\u91cd\u590d\u5b57\u7b26\u3002","title":"5 \u6df1\u5165\u89e3\u6790"},{"location":"chap1/k8s_adv39_kube_state_metrics/#6","text":"\u56e0\u4e3a kube-state-metrics \u662f\u76d1\u542c\u8d44\u6e90\u7684 add \u3001 delete \u3001 update \u4e8b\u4ef6\uff0c\u90a3\u4e48\u5728 kube-state-metrics \u90e8\u7f72\u4e4b\u524d\u5df2\u7ecf\u8fd0\u884c\u7684\u8d44\u6e90\uff0c\u5c82\u4e0d\u662f\u62ff\u4e0d\u5230\u6570\u636e\uff1f kube-state-metric \u5229\u7528 client-go \u53ef\u4ee5\u521d\u59cb\u5316\u6240\u6709\u5df2\u7ecf\u5b58\u5728\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u786e\u4fdd\u6ca1\u6709\u4efb\u4f55\u9057\u6f0f kube-state-metrics \u5f53\u524d\u4e0d\u4f1a\u8f93\u51fa metadata \u4fe1\u606f(\u5982 help \u548c description \uff09 \u7f13\u5b58\u5b9e\u73b0\u662f\u57fa\u4e8e golang \u7684 map \uff0c\u89e3\u51b3\u5e76\u53d1\u8bfb\u95ee\u9898\u5f53\u671f\u662f\u7528\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4e92\u65a5\u9501\uff0c\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u540e\u7eed\u4f1a\u8003\u8651 golang \u7684 sync.Map \u5b89\u5168 map \u3002 kube-state-metrics \u901a\u8fc7\u6bd4\u8f83 resource version \u6765\u4fdd\u8bc1 event \u7684\u987a\u5e8f kube-state-metrics \u5e76\u4e0d\u4fdd\u8bc1\u5305\u542b\u6240\u6709\u8d44\u6e90","title":"6 \u4f18\u5316\u70b9\u548c\u95ee\u9898"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/","text":"2 \u4f18\u79c0\u7684Grafana K8S \u63d2\u4ef6-DevOpsProdigy KubeGraf DevOpsProdigy KubeGraf \u662f\u4e00\u4e2a\u975e\u5e38\u4f18\u79c0\u7684 Grafana Kubernetes \u63d2\u4ef6\uff0c\u662f Grafana \u5b98\u65b9\u7684 Kubernetes \u63d2\u4ef6 \u7684\u5347\u7ea7\u7248\u672c\uff0c\u8be5\u63d2\u4ef6\u53ef\u4ee5\u7528\u6765\u53ef\u89c6\u5316\u548c\u5206\u6790 Kubernetes \u96c6\u7fa4\u7684\u6027\u80fd\uff0c\u901a\u8fc7\u5404\u79cd\u56fe\u5f62\u76f4\u89c2\u7684\u5c55\u793a\u4e86 Kubernetes \u96c6\u7fa4\u7684\u4e3b\u8981\u670d\u52a1\u7684\u6307\u6807\u548c\u7279\u5f81\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u5e94\u7528\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u548c\u9519\u8bef\u65e5\u5fd7\u3002 \u73af\u5883\u8981\u6c42 \u8981\u5b89\u88c5\u4f7f\u7528 DevOpsProdigy KubeGraf \u63d2\u4ef6\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a Grafana > 5.0.0 \u7248\u672c \u9700\u8981\u5728 Kubernetes \u96c6\u7fa4\u4e0a\u90e8\u7f72 Prometheus + node-exporter + kube-state-metrics \u4f9d\u8d56 Grafana-piechart-panel \u63d2\u4ef6 1 \u5b89\u88c5 Prometheus Operator \u6211\u4eec\u8fd9\u91cc\u6765\u4f7f\u7528 Prometheus Operator \uff0c\u8fd9\u4e2a Operator \u901a\u8fc7\u62bd\u8c61\u5316 Prometheus \u7684\u90e8\u7f72\u6765\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u52a0\u7b80\u5355\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u4f7f\u7528 Prometheus \uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u5728 monitoring \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5b89\u88c5 Prometheus Operator \uff1a kubectl create ns monitoring Enable grafana with peristent volume prometheus-operator-values.yml # We don't need the alertmanager for this demo alertmanager: enabled: false # This configuration means all ServiceMonitors in the namespsace will be picked up # Use with caution! prometheus: prometheusSpec: serviceMonitorSelectorNilUsesHelmValues: false serviceMonitorSelector: {} grafana: persistence: enabled: true type: pvc size: 5G storageClassName: 1-1 \u5b89\u88c5 $ cd /k8s_sap/test/k8s-prometheus-custom-scaling $ helm install kube-prom stable/prometheus-operator -f helm-values/prometheus-operator-values.yml --namespace monitoring $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE kube-prom-grafana-6d4c5bc7f4-qzk78 3/3 Running 0 15m kube-prom-kube-state-metrics-76558456fc-gfmcd 1/1 Running 0 15m kube-prom-prometheus-node-exporter-r72xd 1/1 Running 0 15m kube-prom-prometheus-opera-operator-5c7bd49d7c-5xfs9 2/2 Running 0 15m prometheus-kube-prom-prometheus-opera-prometheus-0 3/3 Running 1 15m $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kube-prom-grafana ClusterIP 10.102.30.65 <none> 80/TCP 16m kube-prom-kube-state-metrics ClusterIP 10.99.95.81 <none> 8080/TCP 16m kube-prom-prometheus-node-exporter ClusterIP 10.98.248.155 <none> 9100/TCP 16m kube-prom-prometheus-opera-operator ClusterIP 10.107.123.72 <none> 8080/TCP,443/TCP 16m kube-prom-prometheus-opera-prometheus ClusterIP 10.99.222.171 <none> 9090/TCP 16m prometheus-operated ClusterIP None <none> 9090/ kubectl port-forward svc/grafana -n monitoring 3000:3000 admin prom-operator 2 \u7279\u6027 \u8be5\u63d2\u4ef6\u5305\u542b3\u4e2a\u4e3b\u8981\u7684\u4fe1\u606f\u9875\u9762\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173 Kubernetes \u96c6\u7fa4\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 2-1 \u5e94\u7528\u6982\u8ff0 \u8be5\u63d2\u4ef6\u53ef\u4ee5\u663e\u793a Kubernetes \u96c6\u7fa4\u4e0a\u9762\u7684\u5e94\u7528\u7684\u4e00\u4e9b\u57fa\u672c\u76d1\u63a7\u4fe1\u606f\uff1a \u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u56fe Kubernetes \u5bf9\u8c61\u7684\u5206\u5e03 \u53ef\u89c6\u5316\u5e94\u7528\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u548c\u57fa\u672c\u7279\u5f81\u4fe1\u606f \u5728\u96c6\u7fa4\u4e2d\u5141\u8bb8\u8bbf\u95ee\u7684\u670d\u52a1\u7aef\u53e3\u7684\u63cf\u8ff0\u4fe1\u606f 2-2 \u96c6\u7fa4\u72b6\u6001 \u96c6\u7fa4\u548c\u96c6\u7fa4\u8282\u70b9\u7684\u72b6\u6001\u4fe1\u606f \u76d1\u63a7\u7684\u5e94\u7528\u7a0b\u5e8f\u751f\u547d\u5468\u671f\u7684\u8be6\u7ec6\u4fe1\u606f \u96c6\u7fa4\u4e2d\u670d\u52a1\u6240\u5728\u4f4d\u7f6e\u7684\u53ef\u89c6\u5316 2-3 \u8282\u70b9\u6982\u8ff0 \u96c6\u7fa4\u8282\u70b9\u4fe1\u606f \u5df2\u4f7f\u7528\u548c\u5df2\u5206\u914d\u8d44\u6e90\uff08\u5185\u5b58\u3001CPU \u5229\u7528\u7387\uff09\u4ee5\u53ca\u5bb9\u5668\u6570\u91cf\u7684\u4fe1\u606f Pods \u7684\u7269\u7406\u5206\u5e03 2-4 Dashboards \u9664\u4e86\u5728\u63d2\u4ef6\u4e3b\u9875\u4e0a\u63d0\u4f9b\u4e86\u5e38\u89c1\u7684\u4fe1\u606f\u4e4b\u5916\uff0c\u8be5\u63d2\u4ef6\u8fd8\u63d0\u4f9b\u4e86\u53e6\u59165\u4e2a Dashboard \u4f9b\u6211\u4eec\u6765\u8ddf\u8e2a\u96c6\u7fa4\u7684\u5404\u79cd\u6027\u80fd\u6307\u6807\u3002 node dashboard \u8fd9\u662f\u4e00\u4e2a\u5e26\u6709\u8282\u70b9\u6307\u6807\u7684 Dashboard \uff0c\u5b83\u53ef\u4ee5\u663e\u793a\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u4f8b\u5982 CPU \u5229\u7528\u7387\u3001\u5185\u5b58\u6d88\u8017\u3001\u7a7a\u95f2 /iowait \u6a21\u5f0f\u4e0b\u7684 CPU \u65f6\u95f4\u767e\u5206\u6bd4\u4ee5\u53ca\u78c1\u76d8\u548c\u7f51\u7edc\u7684\u72b6\u6001\u3002 pod dashboard \u53ef\u4ee5\u6839\u636e\u6240\u9009\u62e9\u7684 Pod \u6765\u663e\u793a\u5bf9\u5e94\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u3002 deployments dashboard \u4ee5 Deployment \u4e3a\u7ef4\u5ea6\u6765\u663e\u793a\u5bf9\u5e94\u7684\u8d44\u6e90\u5bf9\u8c61\u76f8\u5173\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u3002 statefulsets dashboard daemonsets dashboard \u4e0a\u9762\u4e09\u4e2a Dashboard \u663e\u793a\u4e86\u53ef\u7528/\u4e0d\u53ef\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u526f\u672c\u6570\u91cf\u4ee5\u53ca\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u7684\u5bb9\u5668\u72b6\u6001\uff0c\u8fd8\u4f1a\u8ddf\u8e2a\u5bb9\u5668\u7684\u91cd\u542f\u3002 3 \u5b89\u88c5 \u6211\u4eec\u8fd9\u91cc\u7684 Grafana \u540c\u6837\u662f\u5b89\u88c5\u5728 Kubernetes \u96c6\u7fa4\u4e0a\u9762\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fdb\u5165\u5230\u5bb9\u5668\u4e2d\u8fdb\u884c\u5b89\u88c5\uff1a $ kubectl exec -it kube-prom-grafana-6d4c5bc7f4-qzk78 -n monitoring sh -c grafana /app $ grafana-cli plugins ls Restart grafana after installing plugins . <service grafana-server restart> usr/share/grafana $ grafana-cli plugins install devopsprodigy-kubegraf-app installing devopsprodigy-kubegraf-app @ 1.3.0 from: https://grafana.com/api/plugins/devopsprodigy-kubegraf-app/versions/1.3.0/download into: /var/lib/grafana/plugins \u2714 Installed devopsprodigy-kubegraf-app successfully Restart grafana after installing plugins . <service grafana-server restart> # \u5982\u679c\u6ca1\u6709\u5b89\u88c5 Grafana-piechart-panel \u63d2\u4ef6\u540c\u6837\u9700\u8981\u5b89\u88c5 $ grafana-cli plugins install Grafana-piechart-panel installing Grafana-piechart-panel @ 1.4.0 from: https://grafana.com/api/plugins/Grafana-piechart-panel/versions/1.4.0/download into: /var/lib/grafana/plugins \u2714 Installed Grafana-piechart-panel successfully Restart grafana after installing plugins . <service grafana-server restart> \u63d2\u4ef6\u5b89\u88c5\u5b8c\u6210\u540e\u9700\u8981\u91cd\u542f Grafana \u624d\u4f1a\u751f\u6548\uff0c\u6211\u4eec\u8fd9\u91cc\u662f Pod \uff0c\u6240\u4ee5\u76f4\u63a5\u5220\u9664 Pod \u91cd\u5efa\u5373\u53ef\uff08\u5f53\u7136\u524d\u63d0\u662f\u9700\u8981\u5bf9\u63d2\u4ef6\u76ee\u5f55\u505a\u597d\u6301\u4e45\u5316\uff09: kubectl scale deployment kube-prom-grafana --replicas=0 -n monitoring kubectl scale deployment kube-prom-grafana --replicas=1 -n monitoring Pod \u5220\u9664\u91cd\u5efa\u5b8c\u6210\u540e\u63d2\u4ef6\u5c31\u5b89\u88c5\u6210\u529f\u4e86\u3002\u7136\u540e\u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00 Grafana \u627e\u5230\u8be5\u63d2\u4ef6\uff0c\u70b9\u51fb enable \u542f\u7528\u63d2\u4ef6\u3002 \u70b9\u51fb Set up your first k8s-cluster \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Kubernetes \u96c6\u7fa4: URL \u4f7f\u7528 Kubernetes Service \u5730\u5740\u5373\u53ef\uff1a https://kubernetes.default:443 Access \u8bbf\u95ee\u6a21\u5f0f\u4f7f\u7528\uff1a Server(default) \u7531\u4e8e\u63d2\u4ef6\u8bbf\u95ee Kubernetes \u96c6\u7fa4\u7684\u5404\u79cd\u8d44\u6e90\u5bf9\u8c61\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u914d\u7f6e\u8bbf\u95ee\u6743\u9650\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u4f7f\u7528 kubectl \u7684 kubeconfig \u6765\u8fdb\u884c\u914d\u7f6e\u5373\u53ef\u3002 \u52fe\u9009 Auth \u4e0b\u9762\u7684 TLS Client Auth \u548c With CA Cert \u4e24\u4e2a\u9009\u9879 \u5176\u4e2d TLS Auth Details \u4e0b\u9762\u7684\u503c\u5c31\u5bf9\u5e94 kubeconfig \u91cc\u9762\u7684\u8bc1\u4e66\u4fe1\u606f\u3002\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u7684 kubeconfig \u6587\u4ef6\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a $ cat config apiVersion: v1 clusters: - cluster: certificate-authority-data: <certificate-authority-data> server: https://kubernetes.docker.internal:6443 name: docker-desktop contexts: - context: cluster: docker-desktop user: docker-desktop name: docker-desktop - context: cluster: docker-desktop user: docker-desktop name: docker-for-desktop current-context: docker-desktop kind: Config preferences: {} users: - name: docker-desktop user: client-certificate-data: <client-certificate-data> client-key-data: <client-key-data> \u90a3\u4e48 CA Cert \u7684\u503c\u5c31\u5bf9\u5e94 kubeconfig \u91cc\u9762\u7684 <certificate-authority-data> \u8fdb\u884c base64 \u89e3\u7801\u8fc7\u540e\u7684\u503c\uff1b Client Cert \u7684\u503c\u5bf9\u5e94 <client-certificate-data> \u8fdb\u884c base64 \u89e3\u7801\u8fc7\u540e\u7684\u503c\uff1b Client Key \u7684\u503c\u5c31\u5bf9\u5e94 <client-key-data> \u8fdb\u884c base64 \u89e3\u7801\u8fc7\u540e\u7684\u503c\u3002 \u5bf9\u4e8e base64 \u89e3\u7801\u63a8\u8350\u4f7f\u7528\u4e00\u4e9b\u5728\u7ebf\u7684\u670d\u52a1\uff0c\u6bd4\u5982 https://www.base64decode.org/\uff0c\u975e\u5e38\u65b9\u4fbf\u3002 \u6700\u540e\u5728 additional datasources \u4e0b\u62c9\u5217\u8868\u4e2d\u9009\u62e9 prometheus \u7684\u6570\u636e\u6e90\u3002 \u70b9\u51fb Save & Test \u6b63\u5e38\u5c31\u53ef\u4ee5\u4fdd\u5b58\u6210\u529f\u4e86\u3002 \u63d2\u4ef6\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u5728\u5de6\u4fa7\u4fa7\u8fb9\u680f\u5c31\u4f1a\u51fa\u73b0 DevOpsProdigy KubeGraf \u63d2\u4ef6\u7684\u5165\u53e3\uff0c\u901a\u8fc7\u63d2\u4ef6\u9875\u9762\u53ef\u4ee5\u67e5\u770b\u6574\u4e2a\u96c6\u7fa4\u7684\u72b6\u6001\u4ee5\u53ca\u76f8\u5173\u7684 Dashboard \u76d1\u63a7\u56fe\u8868\u3002","title":"2 \u4f18\u79c0\u7684Grafana K8S \u63d2\u4ef6-DevOpsProdigy KubeGraf"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/#2-grafana-k8s-devopsprodigy-kubegraf","text":"DevOpsProdigy KubeGraf \u662f\u4e00\u4e2a\u975e\u5e38\u4f18\u79c0\u7684 Grafana Kubernetes \u63d2\u4ef6\uff0c\u662f Grafana \u5b98\u65b9\u7684 Kubernetes \u63d2\u4ef6 \u7684\u5347\u7ea7\u7248\u672c\uff0c\u8be5\u63d2\u4ef6\u53ef\u4ee5\u7528\u6765\u53ef\u89c6\u5316\u548c\u5206\u6790 Kubernetes \u96c6\u7fa4\u7684\u6027\u80fd\uff0c\u901a\u8fc7\u5404\u79cd\u56fe\u5f62\u76f4\u89c2\u7684\u5c55\u793a\u4e86 Kubernetes \u96c6\u7fa4\u7684\u4e3b\u8981\u670d\u52a1\u7684\u6307\u6807\u548c\u7279\u5f81\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u5e94\u7528\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u548c\u9519\u8bef\u65e5\u5fd7\u3002","title":"2 \u4f18\u79c0\u7684Grafana K8S \u63d2\u4ef6-DevOpsProdigy KubeGraf"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/#_1","text":"\u8981\u5b89\u88c5\u4f7f\u7528 DevOpsProdigy KubeGraf \u63d2\u4ef6\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a Grafana > 5.0.0 \u7248\u672c \u9700\u8981\u5728 Kubernetes \u96c6\u7fa4\u4e0a\u90e8\u7f72 Prometheus + node-exporter + kube-state-metrics \u4f9d\u8d56 Grafana-piechart-panel \u63d2\u4ef6","title":"\u73af\u5883\u8981\u6c42"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/#1-prometheus-operator","text":"\u6211\u4eec\u8fd9\u91cc\u6765\u4f7f\u7528 Prometheus Operator \uff0c\u8fd9\u4e2a Operator \u901a\u8fc7\u62bd\u8c61\u5316 Prometheus \u7684\u90e8\u7f72\u6765\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u52a0\u7b80\u5355\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u4f7f\u7528 Prometheus \uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u5728 monitoring \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5b89\u88c5 Prometheus Operator \uff1a kubectl create ns monitoring Enable grafana with peristent volume prometheus-operator-values.yml # We don't need the alertmanager for this demo alertmanager: enabled: false # This configuration means all ServiceMonitors in the namespsace will be picked up # Use with caution! prometheus: prometheusSpec: serviceMonitorSelectorNilUsesHelmValues: false serviceMonitorSelector: {} grafana: persistence: enabled: true type: pvc size: 5G storageClassName:","title":"1 \u5b89\u88c5 Prometheus Operator"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/#1-1","text":"$ cd /k8s_sap/test/k8s-prometheus-custom-scaling $ helm install kube-prom stable/prometheus-operator -f helm-values/prometheus-operator-values.yml --namespace monitoring $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE kube-prom-grafana-6d4c5bc7f4-qzk78 3/3 Running 0 15m kube-prom-kube-state-metrics-76558456fc-gfmcd 1/1 Running 0 15m kube-prom-prometheus-node-exporter-r72xd 1/1 Running 0 15m kube-prom-prometheus-opera-operator-5c7bd49d7c-5xfs9 2/2 Running 0 15m prometheus-kube-prom-prometheus-opera-prometheus-0 3/3 Running 1 15m $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kube-prom-grafana ClusterIP 10.102.30.65 <none> 80/TCP 16m kube-prom-kube-state-metrics ClusterIP 10.99.95.81 <none> 8080/TCP 16m kube-prom-prometheus-node-exporter ClusterIP 10.98.248.155 <none> 9100/TCP 16m kube-prom-prometheus-opera-operator ClusterIP 10.107.123.72 <none> 8080/TCP,443/TCP 16m kube-prom-prometheus-opera-prometheus ClusterIP 10.99.222.171 <none> 9090/TCP 16m prometheus-operated ClusterIP None <none> 9090/ kubectl port-forward svc/grafana -n monitoring 3000:3000 admin prom-operator","title":"1-1 \u5b89\u88c5"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/#2","text":"\u8be5\u63d2\u4ef6\u5305\u542b3\u4e2a\u4e3b\u8981\u7684\u4fe1\u606f\u9875\u9762\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173 Kubernetes \u96c6\u7fa4\u7684\u8be6\u7ec6\u4fe1\u606f\u3002","title":"2 \u7279\u6027"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/#2-1","text":"\u8be5\u63d2\u4ef6\u53ef\u4ee5\u663e\u793a Kubernetes \u96c6\u7fa4\u4e0a\u9762\u7684\u5e94\u7528\u7684\u4e00\u4e9b\u57fa\u672c\u76d1\u63a7\u4fe1\u606f\uff1a \u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u56fe Kubernetes \u5bf9\u8c61\u7684\u5206\u5e03 \u53ef\u89c6\u5316\u5e94\u7528\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u548c\u57fa\u672c\u7279\u5f81\u4fe1\u606f \u5728\u96c6\u7fa4\u4e2d\u5141\u8bb8\u8bbf\u95ee\u7684\u670d\u52a1\u7aef\u53e3\u7684\u63cf\u8ff0\u4fe1\u606f","title":"2-1 \u5e94\u7528\u6982\u8ff0"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/#2-2","text":"\u96c6\u7fa4\u548c\u96c6\u7fa4\u8282\u70b9\u7684\u72b6\u6001\u4fe1\u606f \u76d1\u63a7\u7684\u5e94\u7528\u7a0b\u5e8f\u751f\u547d\u5468\u671f\u7684\u8be6\u7ec6\u4fe1\u606f \u96c6\u7fa4\u4e2d\u670d\u52a1\u6240\u5728\u4f4d\u7f6e\u7684\u53ef\u89c6\u5316","title":"2-2 \u96c6\u7fa4\u72b6\u6001"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/#2-3","text":"\u96c6\u7fa4\u8282\u70b9\u4fe1\u606f \u5df2\u4f7f\u7528\u548c\u5df2\u5206\u914d\u8d44\u6e90\uff08\u5185\u5b58\u3001CPU \u5229\u7528\u7387\uff09\u4ee5\u53ca\u5bb9\u5668\u6570\u91cf\u7684\u4fe1\u606f Pods \u7684\u7269\u7406\u5206\u5e03","title":"2-3 \u8282\u70b9\u6982\u8ff0"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/#2-4-dashboards","text":"\u9664\u4e86\u5728\u63d2\u4ef6\u4e3b\u9875\u4e0a\u63d0\u4f9b\u4e86\u5e38\u89c1\u7684\u4fe1\u606f\u4e4b\u5916\uff0c\u8be5\u63d2\u4ef6\u8fd8\u63d0\u4f9b\u4e86\u53e6\u59165\u4e2a Dashboard \u4f9b\u6211\u4eec\u6765\u8ddf\u8e2a\u96c6\u7fa4\u7684\u5404\u79cd\u6027\u80fd\u6307\u6807\u3002 node dashboard \u8fd9\u662f\u4e00\u4e2a\u5e26\u6709\u8282\u70b9\u6307\u6807\u7684 Dashboard \uff0c\u5b83\u53ef\u4ee5\u663e\u793a\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u4f8b\u5982 CPU \u5229\u7528\u7387\u3001\u5185\u5b58\u6d88\u8017\u3001\u7a7a\u95f2 /iowait \u6a21\u5f0f\u4e0b\u7684 CPU \u65f6\u95f4\u767e\u5206\u6bd4\u4ee5\u53ca\u78c1\u76d8\u548c\u7f51\u7edc\u7684\u72b6\u6001\u3002 pod dashboard \u53ef\u4ee5\u6839\u636e\u6240\u9009\u62e9\u7684 Pod \u6765\u663e\u793a\u5bf9\u5e94\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u3002 deployments dashboard \u4ee5 Deployment \u4e3a\u7ef4\u5ea6\u6765\u663e\u793a\u5bf9\u5e94\u7684\u8d44\u6e90\u5bf9\u8c61\u76f8\u5173\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u3002 statefulsets dashboard daemonsets dashboard \u4e0a\u9762\u4e09\u4e2a Dashboard \u663e\u793a\u4e86\u53ef\u7528/\u4e0d\u53ef\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u526f\u672c\u6570\u91cf\u4ee5\u53ca\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u7684\u5bb9\u5668\u72b6\u6001\uff0c\u8fd8\u4f1a\u8ddf\u8e2a\u5bb9\u5668\u7684\u91cd\u542f\u3002","title":"2-4 Dashboards"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/#3","text":"\u6211\u4eec\u8fd9\u91cc\u7684 Grafana \u540c\u6837\u662f\u5b89\u88c5\u5728 Kubernetes \u96c6\u7fa4\u4e0a\u9762\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fdb\u5165\u5230\u5bb9\u5668\u4e2d\u8fdb\u884c\u5b89\u88c5\uff1a $ kubectl exec -it kube-prom-grafana-6d4c5bc7f4-qzk78 -n monitoring sh -c grafana /app $ grafana-cli plugins ls Restart grafana after installing plugins . <service grafana-server restart> usr/share/grafana $ grafana-cli plugins install devopsprodigy-kubegraf-app installing devopsprodigy-kubegraf-app @ 1.3.0 from: https://grafana.com/api/plugins/devopsprodigy-kubegraf-app/versions/1.3.0/download into: /var/lib/grafana/plugins \u2714 Installed devopsprodigy-kubegraf-app successfully Restart grafana after installing plugins . <service grafana-server restart> # \u5982\u679c\u6ca1\u6709\u5b89\u88c5 Grafana-piechart-panel \u63d2\u4ef6\u540c\u6837\u9700\u8981\u5b89\u88c5 $ grafana-cli plugins install Grafana-piechart-panel installing Grafana-piechart-panel @ 1.4.0 from: https://grafana.com/api/plugins/Grafana-piechart-panel/versions/1.4.0/download into: /var/lib/grafana/plugins \u2714 Installed Grafana-piechart-panel successfully Restart grafana after installing plugins . <service grafana-server restart> \u63d2\u4ef6\u5b89\u88c5\u5b8c\u6210\u540e\u9700\u8981\u91cd\u542f Grafana \u624d\u4f1a\u751f\u6548\uff0c\u6211\u4eec\u8fd9\u91cc\u662f Pod \uff0c\u6240\u4ee5\u76f4\u63a5\u5220\u9664 Pod \u91cd\u5efa\u5373\u53ef\uff08\u5f53\u7136\u524d\u63d0\u662f\u9700\u8981\u5bf9\u63d2\u4ef6\u76ee\u5f55\u505a\u597d\u6301\u4e45\u5316\uff09: kubectl scale deployment kube-prom-grafana --replicas=0 -n monitoring kubectl scale deployment kube-prom-grafana --replicas=1 -n monitoring Pod \u5220\u9664\u91cd\u5efa\u5b8c\u6210\u540e\u63d2\u4ef6\u5c31\u5b89\u88c5\u6210\u529f\u4e86\u3002\u7136\u540e\u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00 Grafana \u627e\u5230\u8be5\u63d2\u4ef6\uff0c\u70b9\u51fb enable \u542f\u7528\u63d2\u4ef6\u3002","title":"3 \u5b89\u88c5"},{"location":"chap10/28Grafana_plugin_DevOpsProdigy/#set-up-your-first-k8s-cluster-kubernetes","text":"URL \u4f7f\u7528 Kubernetes Service \u5730\u5740\u5373\u53ef\uff1a https://kubernetes.default:443 Access \u8bbf\u95ee\u6a21\u5f0f\u4f7f\u7528\uff1a Server(default) \u7531\u4e8e\u63d2\u4ef6\u8bbf\u95ee Kubernetes \u96c6\u7fa4\u7684\u5404\u79cd\u8d44\u6e90\u5bf9\u8c61\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u914d\u7f6e\u8bbf\u95ee\u6743\u9650\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u4f7f\u7528 kubectl \u7684 kubeconfig \u6765\u8fdb\u884c\u914d\u7f6e\u5373\u53ef\u3002 \u52fe\u9009 Auth \u4e0b\u9762\u7684 TLS Client Auth \u548c With CA Cert \u4e24\u4e2a\u9009\u9879 \u5176\u4e2d TLS Auth Details \u4e0b\u9762\u7684\u503c\u5c31\u5bf9\u5e94 kubeconfig \u91cc\u9762\u7684\u8bc1\u4e66\u4fe1\u606f\u3002\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u7684 kubeconfig \u6587\u4ef6\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a $ cat config apiVersion: v1 clusters: - cluster: certificate-authority-data: <certificate-authority-data> server: https://kubernetes.docker.internal:6443 name: docker-desktop contexts: - context: cluster: docker-desktop user: docker-desktop name: docker-desktop - context: cluster: docker-desktop user: docker-desktop name: docker-for-desktop current-context: docker-desktop kind: Config preferences: {} users: - name: docker-desktop user: client-certificate-data: <client-certificate-data> client-key-data: <client-key-data> \u90a3\u4e48 CA Cert \u7684\u503c\u5c31\u5bf9\u5e94 kubeconfig \u91cc\u9762\u7684 <certificate-authority-data> \u8fdb\u884c base64 \u89e3\u7801\u8fc7\u540e\u7684\u503c\uff1b Client Cert \u7684\u503c\u5bf9\u5e94 <client-certificate-data> \u8fdb\u884c base64 \u89e3\u7801\u8fc7\u540e\u7684\u503c\uff1b Client Key \u7684\u503c\u5c31\u5bf9\u5e94 <client-key-data> \u8fdb\u884c base64 \u89e3\u7801\u8fc7\u540e\u7684\u503c\u3002 \u5bf9\u4e8e base64 \u89e3\u7801\u63a8\u8350\u4f7f\u7528\u4e00\u4e9b\u5728\u7ebf\u7684\u670d\u52a1\uff0c\u6bd4\u5982 https://www.base64decode.org/\uff0c\u975e\u5e38\u65b9\u4fbf\u3002 \u6700\u540e\u5728 additional datasources \u4e0b\u62c9\u5217\u8868\u4e2d\u9009\u62e9 prometheus \u7684\u6570\u636e\u6e90\u3002 \u70b9\u51fb Save & Test \u6b63\u5e38\u5c31\u53ef\u4ee5\u4fdd\u5b58\u6210\u529f\u4e86\u3002 \u63d2\u4ef6\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u5728\u5de6\u4fa7\u4fa7\u8fb9\u680f\u5c31\u4f1a\u51fa\u73b0 DevOpsProdigy KubeGraf \u63d2\u4ef6\u7684\u5165\u53e3\uff0c\u901a\u8fc7\u63d2\u4ef6\u9875\u9762\u53ef\u4ee5\u67e5\u770b\u6574\u4e2a\u96c6\u7fa4\u7684\u72b6\u6001\u4ee5\u53ca\u76f8\u5173\u7684 Dashboard \u76d1\u63a7\u56fe\u8868\u3002","title":"\u70b9\u51fb Set up your first k8s-cluster \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Kubernetes \u96c6\u7fa4:"},{"location":"chap10/30Create_Grafana_dashboards/","text":"3 \u7528 Kubernetes darks\u8d44\u6e90\u5bf9\u8c61\u521b\u5efaGrafana Dashboard \u6211\u4eec\u5728\u4f7f\u7528 Grafana Dashboard \u6765\u5c55\u793a\u6211\u4eec\u7684\u76d1\u63a7\u56fe\u8868\u7684\u65f6\u5019\uff0c\u5f88\u591a\u65f6\u5019\u6211\u4eec\u90fd\u662f\u53bb\u627e\u522b\u4eba\u5df2\u7ecf\u505a\u597d\u7684 Dashboard \u62ff\u8fc7\u6765\u6539\u4e00\u6539\uff0c\u4f46\u662f\u8fd9\u6837\u4e5f\u9020\u6210\u4e86\u5f88\u591a\u4f7f\u7528 Grafana \u7684\u4eba\u5458\u538b\u6839\u4e0d\u77e5\u9053\u5982\u4f55\u53bb\u81ea\u5b9a\u4e49\u4e00\u4e2a Dashboard \uff0c\u867d\u7136\u8fd9\u5e76\u4e0d\u662f\u5f88\u56f0\u96be\u3002\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e2a\u6bd4\u8f83\u65b0\u9896\uff08\u9a9a\uff09\u7684\u5de5\u5177\uff1a DARK \uff0c \u5168\u79f0 Dashboards As Resources in Kubernetes .\uff0c\u610f\u601d\u5c31\u662f\u901a\u8fc7 Kubernetes \u7684\u8d44\u6e90\u5bf9\u8c61\u6765\u5b9a\u4e49 Grafana Dashboard \uff0c\u5b9e\u73b0\u539f\u7406\u4e5f\u5f88\u7b80\u5355\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7 CRD \u6765\u5b9a\u4e49 Dashboard \uff0c\u7136\u540e\u901a\u8fc7\u548c Grafana \u7684 API Token \u8fdb\u884c\u4ea4\u4e92\u5b9e\u73b0 Dashboard \u7684 CRUD \u3002 \u4e0b\u9762\u6211\u4eec\u6765\u770b\u4e0b\u5982\u4f55\u4f7f\u7528 DARK \u5b9a\u4e49 Grafana Dashboard \u3002\u9996\u5148 Clone \u9879\u76ee\u4ee3\u7801\uff1a $ git clone https://github.com/K-Phoen/dark.git \u7136\u540e\u5b89\u88c5 CRD \u8d44\u6e90\uff1a $ kubectl apply -f k8s/crd.yaml customresourcedefinition.apiextensions.k8s.io/grafanadashboards.k8s.kevingomez.fr created \u7136\u540e\u901a\u8fc7 Secre t \u5bf9\u8c61\u521b\u5efa Grafana \u7684 API KEYS \uff0c\u5728 Grafana \u4e3b\u754c\u9762\u4e2d\uff0c\u9009\u62e9\u5de6\u4fa7\u7684 \u914d\u7f6e\u83dc\u5355 -> API Keys \u521b\u5efa API Keys \uff0c\u9009\u62e9 Editor \u7684\u89d2\u8272 kubectl port-forward svc/kube-prom-grafana -n monitoring 3000:80 \u521b\u5efa\u5b8c\u6210\u540e\u4f1a\u5f39\u51fa\u4e00\u4e2a\u5bf9\u8bdd\u6846\u663e\u793a\u5bf9\u5e94\u7684 API Keys \uff0c\u4f7f\u7528\u8fd9\u4e2a KEY \u6765\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Secret \u5bf9\u8c61\uff1a $ kubectl create secret generic dark-tokens --from-literal=grafana=<\u66ff\u6362\u6210APIKEY> kubectl create secret generic dark-tokens --from-literal=grafana=eyJrIjoiNDR4S0swU1dTNHNlS3pnMTZaUDh3OG54cXhJTGFxQ1QiLCJuIjoiZGFyay10b2tlbiIsImlkIjoxfQ== secret/dark-tokens created \u7136\u540e\u4fee\u6539 k8s/cluster-role.yaml \u6587\u4ef6\uff0c\u5982\u4e0b\u6240\u793a\uff1a apiVersion: v1 kind: ServiceAccount metadata: name: dark --- kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1 metadata: name: dashboards-viewer rules: - apiGroups: [\"k8s.kevingomez.fr\"] resources: [\"grafanadashboards\"] verbs: [\"get\", \"watch\", \"list\"] - apiGroups: [\"\"] resources: [\"events\"] verbs: [\"create\", \"patch\"] --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: dashboards-viewer-cluster subjects: - kind: ServiceAccount name: dark namespace: default roleRef: kind: ClusterRole name: dashboards-viewer apiGroup: rbac.authorization.k8s.io $ kubectl apply -f cluster-role.yaml serviceaccount/dark created clusterrole.rbac.authorization.k8s.io/dashboards-viewer created clusterrolebinding.rbac.authorization.k8s.io/dashboards-viewer-cluster created \u4fee\u6539 k8s/deployment.yaml \u6587\u4ef6\uff0c\u5c06 GRAFANA_HOST \u73af\u5883\u53d8\u91cf\u4fee\u6539\u6210\u81ea\u5df1\u7684 Grafana \u7684\u5730\u5740\uff0c\u7531\u4e8e\u6211\u8fd9\u91cc Grafana \u4e5f\u5b89\u88c5\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u7528 DNS \u5f62\u5f0f\u914d\u7f6e\uff0c\u7136\u540e\u52a0\u4e0a\u4e0a\u9762\u521b\u5efa\u7684 dark \u8fd9\u4e2a ServiceAccount \uff1a apiVersion: apps/v1 kind: Deployment metadata: name: dark labels: app: dark spec: replicas: 1 selector: matchLabels: app: dark template: metadata: labels: app: dark spec: serviceAccountName: dark containers: - name: dark image: kphoen/dark:latest env: - name: GRAFANA_HOST value: http://kube-prom-grafana.monitoring:80 - name: GRAFANA_TOKEN valueFrom: secretKeyRef: key: grafana name: dark-tokens volumes: - name: dark-tokens secret: secretName: dark-tokens \u4fee\u6539\u5b8c\u6210\u540e\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Controller\uff1a $ kubectl apply -f deployment.yaml deployment.apps/dark created $ kubectl get pod -l app=dark NAME READY STATUS RESTARTS AGE dark-849776f75-zz67c 1/1 Running 0 2m39s \u73b0\u5728 Controller \u5b9a\u4e49\u597d\u8fc7\u540e\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u901a\u8fc7 CRD \u5bf9\u8c61\u6765\u5b9a\u4e49 Grafana Dashboard \u4e86\uff0c\u5982\u4e0b\u6240\u793a\u5b9a\u4e49\u4e86\u4e00\u4e2a GrafanaDashboard \u5bf9\u8c61\uff0c\u5728\u5bf9\u8c61\u4e2d\u6211\u4eec\u5b8c\u5168\u5c31\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u53bb\u5b9a\u4e49\u5185\u5bb9\u4e86\uff0c\u6bd4\u5982\u5b9a\u4e49 annotations \u3001 variables \u3001 graph \u3001 table \u90fd\u53ef\u4ee5\uff0c\u5f53\u7136\u6700\u91cd\u8981\u7684\u8fd8\u662f\u6570\u636e\u6e90\u8981\u6b63\u786e\uff0c\u4ee5\u53ca\u67e5\u8be2\u8bed\u53e5\uff1a\uff08 example-dashboards.yaml \uff09 apiVersion: k8s.kevingomez.fr/v1 kind: GrafanaDashboard metadata: name: example-dashboard folder: \"Test folder\" spec: title: Awesome dashboard editable: true shared_crosshair: true tags: [generated, yaml] auto_refresh: 10s tags_annotations: - name: Deployments datasource: \"Prometheus\" color: \"#5794F2\" tags: [\"deploy\", \"production\"] variables: - interval: name: interval label: Interval values: [\"30s\", \"1m\", \"5m\", \"10m\", \"30m\", \"1h\", \"6h\", \"12h\"] - query: name: status label: HTTP status datasource: Prometheus request: \"label_values(prometheus_http_requests_total, code)\" - const: name: percentile label: Percentile default: 80 values_map: 50th: \"50\" 75th: \"75\" 80th: \"80\" 85th: \"85\" 90th: \"90\" 95th: \"95\" 99th: \"99\" - custom: name: vX default: v2 values_map: v1: v1 v2: v2 rows: - name: Prometheus panels: - graph: title: HTTP Rate height: 400px datasource: Prometheus targets: - prometheus: query: \"rate(promhttp_metric_handler_requests_total[$interval])\" legend: \"{{handler}} - {{ code }}\" - graph: title: Heap allocations height: 400px datasource: Prometheus targets: - prometheus: query: \"go_memstats_heap_alloc_bytes\" legend: \"{{job}}\" ref: A - table: title: Threads datasource: Prometheus targets: - prometheus: query: \"go_threads\" hidden_columns: [\"Time\"] time_series_aggregations: - label: AVG type: avg - label: Current type: current - single_stat: title: Heap Allocations datasource: Prometheus targets: - prometheus: query: 'go_memstats_heap_alloc_bytes{job=\"prometheus\"}' unit: bytes thresholds: [\"26000000\", \"28000000\"] color: [\"value\"] - name: \"Some text, because it might be useful\" panels: - text: title: Some awesome text? markdown: \"Markdown syntax help: [commonmark.org/help](https://commonmark.org/help/)\\n${percentile}\" - text: title: Some awesome html? html: \"Some <b>awesome</b> html?\" \u540c\u6837\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u793a\u4f8b\u6587\u4ef6\uff1a $ kubectl apply -f example-dashboards.yaml grafanadashboard.k8s.kevingomez.fr/example-dashboard created $ kubectl get dashboards NAME AGE example-dashboard 10s $ kubectl logs dark-57c5c58bf8-llxqj W0327 07:58:12.389816 1 client_config.go:543] Neither --kubeconfig nor --master was specified. Using the inClusterConfig. This might not work. I0327 07:58:12.390943 1 controller.go:87] Setting up event handlers I0327 07:58:12.391669 1 controller.go:118] Starting dark-controller I0327 07:58:12.391702 1 controller.go:121] Waiting for informer caches to sync I0327 07:58:12.492291 1 controller.go:126] Starting workers I0327 07:58:12.492380 1 controller.go:132] Started workers I0327 07:58:12.657649 1 controller.go:197] Successfully synced 'default/example-dashboard' I0327 07:58:12.658620 1 event.go:278] Event(v1.ObjectReference{Kind:\"GrafanaDashboard\", Namespace:\"default\", Name:\"example-dashboard\", UID:\"5fd1337c-1ebb-41c6-b226-eaa500862073\", APIVersion:\"k8s.kevingomez.fr/v1\", ResourceVersion:\"1221348\", FieldPath:\"\"}): type: 'Normal' reason: 'Synced' GrafanaDashboard synced successfully \u5728 Controller \u4e2d\u4e5f\u53ef\u4ee5\u770b\u5230\u5bf9\u5e94\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u8d44\u6e90\u5bf9\u8c61\u521b\u5efa\u6210\u529f\u4ee5\u540e\uff0c\u73b0\u5728\u53bb Grafana \u9875\u9762\u4e0a\u67e5\u770b\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u65b0\u589e\u4e86\u4e00\u4e2a Test folder \u7684\u6587\u4ef6\u5939\u4ee5\u53ca Awesome dashboard \uff1a \u67e5\u770b Dashboard \u5c31\u53ef\u4ee5\u770b\u5230\u548c\u4e0a\u9762 CRD \u4e2d\u5b9a\u4e49\u7684\u5404\u79cd\u56fe\u8868\u4fe1\u606f\u4e86\uff1a \u8fd9\u6837\u6211\u4eec\u5c31\u4f7f\u7528 Kubernetes \u8d44\u6e90\u5bf9\u8c61\u53bb\u5b9a\u4e49\u4e86 Grafana Dashboard \u4e86\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u76f4\u63a5\u5728\u9875\u9762\u4e0a\u53bb\u624b\u52a8\u914d\u7f6e\u663e\u7136\u8981\u66f4\u4f18\u96c5\uff0c\u4e5f\u7b26\u5408 everything as code \u7684\u601d\u60f3","title":"3 \u7528 Kubernetes darks\u8d44\u6e90\u5bf9\u8c61\u521b\u5efaGrafana Dashboard"},{"location":"chap10/30Create_Grafana_dashboards/#3-kubernetes-darksgrafana-dashboard","text":"\u6211\u4eec\u5728\u4f7f\u7528 Grafana Dashboard \u6765\u5c55\u793a\u6211\u4eec\u7684\u76d1\u63a7\u56fe\u8868\u7684\u65f6\u5019\uff0c\u5f88\u591a\u65f6\u5019\u6211\u4eec\u90fd\u662f\u53bb\u627e\u522b\u4eba\u5df2\u7ecf\u505a\u597d\u7684 Dashboard \u62ff\u8fc7\u6765\u6539\u4e00\u6539\uff0c\u4f46\u662f\u8fd9\u6837\u4e5f\u9020\u6210\u4e86\u5f88\u591a\u4f7f\u7528 Grafana \u7684\u4eba\u5458\u538b\u6839\u4e0d\u77e5\u9053\u5982\u4f55\u53bb\u81ea\u5b9a\u4e49\u4e00\u4e2a Dashboard \uff0c\u867d\u7136\u8fd9\u5e76\u4e0d\u662f\u5f88\u56f0\u96be\u3002\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e2a\u6bd4\u8f83\u65b0\u9896\uff08\u9a9a\uff09\u7684\u5de5\u5177\uff1a DARK \uff0c \u5168\u79f0 Dashboards As Resources in Kubernetes .\uff0c\u610f\u601d\u5c31\u662f\u901a\u8fc7 Kubernetes \u7684\u8d44\u6e90\u5bf9\u8c61\u6765\u5b9a\u4e49 Grafana Dashboard \uff0c\u5b9e\u73b0\u539f\u7406\u4e5f\u5f88\u7b80\u5355\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7 CRD \u6765\u5b9a\u4e49 Dashboard \uff0c\u7136\u540e\u901a\u8fc7\u548c Grafana \u7684 API Token \u8fdb\u884c\u4ea4\u4e92\u5b9e\u73b0 Dashboard \u7684 CRUD \u3002 \u4e0b\u9762\u6211\u4eec\u6765\u770b\u4e0b\u5982\u4f55\u4f7f\u7528 DARK \u5b9a\u4e49 Grafana Dashboard \u3002\u9996\u5148 Clone \u9879\u76ee\u4ee3\u7801\uff1a $ git clone https://github.com/K-Phoen/dark.git \u7136\u540e\u5b89\u88c5 CRD \u8d44\u6e90\uff1a $ kubectl apply -f k8s/crd.yaml customresourcedefinition.apiextensions.k8s.io/grafanadashboards.k8s.kevingomez.fr created \u7136\u540e\u901a\u8fc7 Secre t \u5bf9\u8c61\u521b\u5efa Grafana \u7684 API KEYS \uff0c\u5728 Grafana \u4e3b\u754c\u9762\u4e2d\uff0c\u9009\u62e9\u5de6\u4fa7\u7684 \u914d\u7f6e\u83dc\u5355 -> API Keys \u521b\u5efa API Keys \uff0c\u9009\u62e9 Editor \u7684\u89d2\u8272 kubectl port-forward svc/kube-prom-grafana -n monitoring 3000:80 \u521b\u5efa\u5b8c\u6210\u540e\u4f1a\u5f39\u51fa\u4e00\u4e2a\u5bf9\u8bdd\u6846\u663e\u793a\u5bf9\u5e94\u7684 API Keys \uff0c\u4f7f\u7528\u8fd9\u4e2a KEY \u6765\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Secret \u5bf9\u8c61\uff1a $ kubectl create secret generic dark-tokens --from-literal=grafana=<\u66ff\u6362\u6210APIKEY> kubectl create secret generic dark-tokens --from-literal=grafana=eyJrIjoiNDR4S0swU1dTNHNlS3pnMTZaUDh3OG54cXhJTGFxQ1QiLCJuIjoiZGFyay10b2tlbiIsImlkIjoxfQ== secret/dark-tokens created \u7136\u540e\u4fee\u6539 k8s/cluster-role.yaml \u6587\u4ef6\uff0c\u5982\u4e0b\u6240\u793a\uff1a apiVersion: v1 kind: ServiceAccount metadata: name: dark --- kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1 metadata: name: dashboards-viewer rules: - apiGroups: [\"k8s.kevingomez.fr\"] resources: [\"grafanadashboards\"] verbs: [\"get\", \"watch\", \"list\"] - apiGroups: [\"\"] resources: [\"events\"] verbs: [\"create\", \"patch\"] --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: dashboards-viewer-cluster subjects: - kind: ServiceAccount name: dark namespace: default roleRef: kind: ClusterRole name: dashboards-viewer apiGroup: rbac.authorization.k8s.io $ kubectl apply -f cluster-role.yaml serviceaccount/dark created clusterrole.rbac.authorization.k8s.io/dashboards-viewer created clusterrolebinding.rbac.authorization.k8s.io/dashboards-viewer-cluster created \u4fee\u6539 k8s/deployment.yaml \u6587\u4ef6\uff0c\u5c06 GRAFANA_HOST \u73af\u5883\u53d8\u91cf\u4fee\u6539\u6210\u81ea\u5df1\u7684 Grafana \u7684\u5730\u5740\uff0c\u7531\u4e8e\u6211\u8fd9\u91cc Grafana \u4e5f\u5b89\u88c5\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u7528 DNS \u5f62\u5f0f\u914d\u7f6e\uff0c\u7136\u540e\u52a0\u4e0a\u4e0a\u9762\u521b\u5efa\u7684 dark \u8fd9\u4e2a ServiceAccount \uff1a apiVersion: apps/v1 kind: Deployment metadata: name: dark labels: app: dark spec: replicas: 1 selector: matchLabels: app: dark template: metadata: labels: app: dark spec: serviceAccountName: dark containers: - name: dark image: kphoen/dark:latest env: - name: GRAFANA_HOST value: http://kube-prom-grafana.monitoring:80 - name: GRAFANA_TOKEN valueFrom: secretKeyRef: key: grafana name: dark-tokens volumes: - name: dark-tokens secret: secretName: dark-tokens \u4fee\u6539\u5b8c\u6210\u540e\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684 Controller\uff1a $ kubectl apply -f deployment.yaml deployment.apps/dark created $ kubectl get pod -l app=dark NAME READY STATUS RESTARTS AGE dark-849776f75-zz67c 1/1 Running 0 2m39s \u73b0\u5728 Controller \u5b9a\u4e49\u597d\u8fc7\u540e\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u901a\u8fc7 CRD \u5bf9\u8c61\u6765\u5b9a\u4e49 Grafana Dashboard \u4e86\uff0c\u5982\u4e0b\u6240\u793a\u5b9a\u4e49\u4e86\u4e00\u4e2a GrafanaDashboard \u5bf9\u8c61\uff0c\u5728\u5bf9\u8c61\u4e2d\u6211\u4eec\u5b8c\u5168\u5c31\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u53bb\u5b9a\u4e49\u5185\u5bb9\u4e86\uff0c\u6bd4\u5982\u5b9a\u4e49 annotations \u3001 variables \u3001 graph \u3001 table \u90fd\u53ef\u4ee5\uff0c\u5f53\u7136\u6700\u91cd\u8981\u7684\u8fd8\u662f\u6570\u636e\u6e90\u8981\u6b63\u786e\uff0c\u4ee5\u53ca\u67e5\u8be2\u8bed\u53e5\uff1a\uff08 example-dashboards.yaml \uff09 apiVersion: k8s.kevingomez.fr/v1 kind: GrafanaDashboard metadata: name: example-dashboard folder: \"Test folder\" spec: title: Awesome dashboard editable: true shared_crosshair: true tags: [generated, yaml] auto_refresh: 10s tags_annotations: - name: Deployments datasource: \"Prometheus\" color: \"#5794F2\" tags: [\"deploy\", \"production\"] variables: - interval: name: interval label: Interval values: [\"30s\", \"1m\", \"5m\", \"10m\", \"30m\", \"1h\", \"6h\", \"12h\"] - query: name: status label: HTTP status datasource: Prometheus request: \"label_values(prometheus_http_requests_total, code)\" - const: name: percentile label: Percentile default: 80 values_map: 50th: \"50\" 75th: \"75\" 80th: \"80\" 85th: \"85\" 90th: \"90\" 95th: \"95\" 99th: \"99\" - custom: name: vX default: v2 values_map: v1: v1 v2: v2 rows: - name: Prometheus panels: - graph: title: HTTP Rate height: 400px datasource: Prometheus targets: - prometheus: query: \"rate(promhttp_metric_handler_requests_total[$interval])\" legend: \"{{handler}} - {{ code }}\" - graph: title: Heap allocations height: 400px datasource: Prometheus targets: - prometheus: query: \"go_memstats_heap_alloc_bytes\" legend: \"{{job}}\" ref: A - table: title: Threads datasource: Prometheus targets: - prometheus: query: \"go_threads\" hidden_columns: [\"Time\"] time_series_aggregations: - label: AVG type: avg - label: Current type: current - single_stat: title: Heap Allocations datasource: Prometheus targets: - prometheus: query: 'go_memstats_heap_alloc_bytes{job=\"prometheus\"}' unit: bytes thresholds: [\"26000000\", \"28000000\"] color: [\"value\"] - name: \"Some text, because it might be useful\" panels: - text: title: Some awesome text? markdown: \"Markdown syntax help: [commonmark.org/help](https://commonmark.org/help/)\\n${percentile}\" - text: title: Some awesome html? html: \"Some <b>awesome</b> html?\" \u540c\u6837\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u793a\u4f8b\u6587\u4ef6\uff1a $ kubectl apply -f example-dashboards.yaml grafanadashboard.k8s.kevingomez.fr/example-dashboard created $ kubectl get dashboards NAME AGE example-dashboard 10s $ kubectl logs dark-57c5c58bf8-llxqj W0327 07:58:12.389816 1 client_config.go:543] Neither --kubeconfig nor --master was specified. Using the inClusterConfig. This might not work. I0327 07:58:12.390943 1 controller.go:87] Setting up event handlers I0327 07:58:12.391669 1 controller.go:118] Starting dark-controller I0327 07:58:12.391702 1 controller.go:121] Waiting for informer caches to sync I0327 07:58:12.492291 1 controller.go:126] Starting workers I0327 07:58:12.492380 1 controller.go:132] Started workers I0327 07:58:12.657649 1 controller.go:197] Successfully synced 'default/example-dashboard' I0327 07:58:12.658620 1 event.go:278] Event(v1.ObjectReference{Kind:\"GrafanaDashboard\", Namespace:\"default\", Name:\"example-dashboard\", UID:\"5fd1337c-1ebb-41c6-b226-eaa500862073\", APIVersion:\"k8s.kevingomez.fr/v1\", ResourceVersion:\"1221348\", FieldPath:\"\"}): type: 'Normal' reason: 'Synced' GrafanaDashboard synced successfully \u5728 Controller \u4e2d\u4e5f\u53ef\u4ee5\u770b\u5230\u5bf9\u5e94\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u8d44\u6e90\u5bf9\u8c61\u521b\u5efa\u6210\u529f\u4ee5\u540e\uff0c\u73b0\u5728\u53bb Grafana \u9875\u9762\u4e0a\u67e5\u770b\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u65b0\u589e\u4e86\u4e00\u4e2a Test folder \u7684\u6587\u4ef6\u5939\u4ee5\u53ca Awesome dashboard \uff1a \u67e5\u770b Dashboard \u5c31\u53ef\u4ee5\u770b\u5230\u548c\u4e0a\u9762 CRD \u4e2d\u5b9a\u4e49\u7684\u5404\u79cd\u56fe\u8868\u4fe1\u606f\u4e86\uff1a \u8fd9\u6837\u6211\u4eec\u5c31\u4f7f\u7528 Kubernetes \u8d44\u6e90\u5bf9\u8c61\u53bb\u5b9a\u4e49\u4e86 Grafana Dashboard \u4e86\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u76f4\u63a5\u5728\u9875\u9762\u4e0a\u53bb\u624b\u52a8\u914d\u7f6e\u663e\u7136\u8981\u66f4\u4f18\u96c5\uff0c\u4e5f\u7b26\u5408 everything as code \u7684\u601d\u60f3","title":"3 \u7528 Kubernetes darks\u8d44\u6e90\u5bf9\u8c61\u521b\u5efaGrafana Dashboard"},{"location":"chap10/48grafana_Trickster/","text":"4 Grafana \u56fe\u8868\u52a0\u901f\u795e\u5668 - Trickster Trickster(tricksterproxy.io)\u662f\u4e00\u4e2a\u7528\u4e8e http \u5e94\u7528\u7684 HTTP \u53cd\u5411\u4ee3\u7406/\u7f13\u5b58\uff0c\u4e5f\u662f\u4e00\u4e2a\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\u7684\u4eea\u8868\u76d8\u67e5\u8be2\u52a0\u901f\u5668\u3002 \u76ee\u524d Trickster \u662f\u6709\u7531 CNCF \u4f5c\u4e3a\u6c99\u76d2\u7ea7\u9879\u76ee\u8fdb\u884c\u6258\u7ba1\u7684\uff0c\u76ee\u524d Trickster v1.1 \u662f\u751f\u4ea7\u7248\u672c\uff0c\u6765\u6e90\u4e8e v1.1.x \u5206\u652f\uff0c\u4e3b\u5206\u652f\u6765\u6e90 Trickster 2.0\uff0c\u76ee\u524d\u5904\u4e8e\u6d4b\u8bd5\u9636\u6bb5\u3002 1 HTTP \u53cd\u5411\u4ee3\u7406\u7f13\u5b58 Trickster \u662f\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684 HTTP \u53cd\u5411\u4ee3\u7406\u7f13\u5b58\u5de5\u5177\uff0c\u9002\u7528\u4e8e HTTP \u5e94\u7528\uff0c\u5982\u9759\u6001\u6587\u4ef6\u670d\u52a1\u5668\u548c Web API\u3002 1-1 \u529f\u80fd\u4eae\u70b9 \u4e00\u4e2a\u72ec\u7279\u800c\u5f3a\u5927\u7684\u5e94\u7528\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u548c\u901a\u7528 HTTP \u7aef\u70b9 \u652f\u6301 TLS \u548c HTTP/2 * \u4e3a\u7f13\u5b58\u5c42\u63d0\u4f9b\u4e86\u51e0\u79cd\u9009\u62e9\uff0c\u5305\u62ec\u5185\u5b58\u3001\u6587\u4ef6\u7cfb\u7edf\u3001Redis \u548c bbolt \u9ad8\u5ea6\u53ef\u5b9a\u5236\uff0c\u4f7f\u7528\u7b80\u5355\u7684 yaml \u914d\u7f6e\u8bbe\u7f6e\uff0c\u5230 HTTP \u8def\u5f84\u3002 \u5185\u7f6e\u7684 Prometheus \u6307\u6807\u548c\u53ef\u5b9a\u5236\u7684\u5065\u5eb7\u68c0\u67e5\u7aef\u70b9\uff0c\u7528\u4e8e\u7aef\u5230\u7aef\u76d1\u63a7 \u9ad8\u6027\u80fd\u8f6c\u53d1 Byte \u8303\u56f4\u5185\u8bf7\u6c42\u7f13\u5b58\u548c\u52a0\u901f \u901a\u8fc7 OpenTelemetry \u8fdb\u884c\u5206\u5e03\u5f0f\u8ddf\u8e2a\uff0c\u652f\u6301 Jaeger \u548c Zipkin \u7528\u4e8e\u81ea\u5b9a\u4e49\u8bf7\u6c42\u8def\u7531\u548c\u91cd\u5199\u7684\u89c4\u5219\u5f15\u64ce 2 \u65f6\u5e8f\u6570\u636e\u5e93\u52a0\u901f\u5668 Trickster \u901a\u8fc7\u6d88\u9664 TSDB \u4e0a\u7684\u5197\u4f59\u8ba1\u7b97\uff0c\u6781\u5927\u5730\u6539\u5584\u4e86\u7ec8\u7aef\u7528\u6237\u7684\u4eea\u8868\u76d8\u56fe\u8868\u6e32\u67d3\u65f6\u95f4\u3002\u7b80\u800c\u8a00\u4e4b\uff0cTrickster \u5bf9\u4e8e\u8bfb\u53d6\u91cf\u5927\u7684 Dashboard/TSDB \u73af\u5883\uff0c\u4ee5\u53ca\u90a3\u4e9b\u5177\u6709\u9ad8\u5ea6\u6807\u51c6\u5316\u6570\u636e\u96c6\u7684\u73af\u5883\uff0c\u6781\u5927\u63d0\u9ad8\u4e86\u6027\u80fd\u548c\u53ef\u6269\u5c55\u6027\u3002 Trickster \u517c\u5bb9 Prometheus\u3001ClickHouse\u3001InfluxDB\u3001Circonus IRONdb 2-1 \u5982\u4f55\u52a0\u901f\u65f6\u95f4\u5e8f\u5217 1. \u65f6\u95f4\u5e8f\u5217 Delta \u4ee3\u7406\u7f13\u5b58 \uff0c\u5927\u591a\u6570\u4eea\u8868\u76d8\u5728\u6bcf\u6b21\u7528\u6237\u7684\u4eea\u8868\u76d8\u52a0\u8f7d\u65f6\uff0c\u4ee5\u53ca\u6bcf\u6b21\u81ea\u52a8\u5237\u65b0\u65f6\uff0c\u90fd\u4f1a\u5411\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\u8bf7\u6c42\u4ed6\u4eec\u5e0c\u671b\u5448\u73b0\u7684\u6574\u4e2a\u6570\u636e\u65f6\u95f4\u8303\u56f4\u3002 Trickster \u7684 Delta Proxy \u4f1a\u68c0\u67e5\u5ba2\u6237\u7aef\u67e5\u8be2\u7684\u65f6\u95f4\u8303\u56f4\uff0c\u4ee5\u786e\u5b9a\u54ea\u4e9b\u6570\u636e\u70b9\u5df2\u7ecf\u88ab\u7f13\u5b58\uff0c\u5e76\u4ece tsdb \u4e2d\u53ea\u8bf7\u6c42\u4ecd\u7136\u9700\u8981\u670d\u52a1\u4e8e\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u6570\u636e\u70b9 \u3002 \u8fd9\u6837\u4e00\u6765\uff0c\u6bcf\u4e2a\u4eba\u7684\u56fe\u8868\u52a0\u8f7d\u65f6\u95f4\u90fd\u4f1a\u5927\u5927\u52a0\u5feb\uff0c\u56e0\u4e3a tsdb \u5728\u6bcf\u6b21\u52a0\u8f7d\u4eea\u8868\u76d8\u65f6\u53ea\u67e5\u8be2\u5fae\u5c0f\u7684\u589e\u91cf\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u51e0\u767e\u4e2a\u6570\u636e\u70b9\u7684\u91cd\u590d\u6570\u636e\u3002 2. \u8fb9\u754c\u6807\u51c6\u5316\uff0c\u5f53 Trickster \u4ece tsdb \u8bf7\u6c42\u6570\u636e\u65f6\uff0c\u5b83\u4f1a\u7a0d\u5fae\u8c03\u6574\u5ba2\u6237\u8bf7\u6c42\u7684\u65f6\u95f4\u8303\u56f4\uff0c\u4ee5\u786e\u4fdd\u8fd4\u56de\u7684\u6240\u6709\u6570\u636e\u70b9\u90fd\u4e0e\u6807\u51c6\u5316\u7684\u6b65\u957f\u8fb9\u754c\u4e00\u81f4 \u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6b65\u957f\u4e3a 300s\uff0c\u6240\u6709\u6570\u636e\u70b9\u5c06\u843d\u5728\u65f6\u949f 0 \u548c 5 \u4e0a\u3002\u8fd9\u786e\u4fdd\u4e86\u6570\u636e\u7684\u9ad8\u5ea6\u53ef\u7f13\u5b58\u6027\uff0c\u4ee5\u66f4\u76f4\u89c2\u5730\u4f20\u8fbe\u7ed9\u7528\u6237\uff0c\u5e76\u4e14\u6240\u6709\u4eea\u8868\u76d8\u7528\u6237\u5728\u5c4f\u5e55\u4e0a\u770b\u5230\u7684\u6570\u636e\u90fd\u662f\u76f8\u540c\u7684\u3002 3. Fast Forward\uff0cTrickster \u7684 Fast Forward \u529f\u80fd\u786e\u4fdd\u4e86\u5373\u4f7f\u5728\u6b65\u957f\u8fb9\u754c\u7edf\u4e00\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u65f6\u56fe\u8868\u4ecd\u7136\u603b\u662f\u663e\u793a\u6700\u65b0\u7684\u6570\u636e\uff0c\u800c\u4e0d\u7ba1\u4e0b\u4e00\u4e2a\u6b65\u957f\u8fb9\u754c\u6709\u591a\u8fdc \u3002 \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u7684\u56fe\u8868\u6b65\u957f\u662f 300s\uff0c\u800c\u65f6\u95f4\u76ee\u524d\u662f 1:21p\uff0c\u901a\u5e38\u4f60\u4f1a\u5728 1:25p \u518d\u7b49 4 \u5206\u949f\u624d\u6709\u65b0\u7684\u6570\u636e\u70b9\u3002Trickster \u4f1a\u6253\u7834\u6700\u8fd1\u6570\u636e\u70b9\u7684\u6b65\u957f\u95f4\u9694\uff0c\u5e76\u59cb\u7ec8\u5c06\u5176\u5305\u542b\u5728\u5bf9\u5ba2\u6237\u8bf7\u6c42\u5b9e\u65f6\u6570\u636e\u7684\u54cd\u5e94\u4e2d\u3002 \u53ef\u4ee5\u901a\u8fc7 https://helm.tricksterproxy.io/ \u5728 Kubernetes \u4e2d\u8fdb\u884c\u5b89\u88c5\u3002","title":"4 Grafana \u56fe\u8868\u52a0\u901f\u795e\u5668-Trickster"},{"location":"chap10/48grafana_Trickster/#4-grafana-trickster","text":"Trickster(tricksterproxy.io)\u662f\u4e00\u4e2a\u7528\u4e8e http \u5e94\u7528\u7684 HTTP \u53cd\u5411\u4ee3\u7406/\u7f13\u5b58\uff0c\u4e5f\u662f\u4e00\u4e2a\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\u7684\u4eea\u8868\u76d8\u67e5\u8be2\u52a0\u901f\u5668\u3002 \u76ee\u524d Trickster \u662f\u6709\u7531 CNCF \u4f5c\u4e3a\u6c99\u76d2\u7ea7\u9879\u76ee\u8fdb\u884c\u6258\u7ba1\u7684\uff0c\u76ee\u524d Trickster v1.1 \u662f\u751f\u4ea7\u7248\u672c\uff0c\u6765\u6e90\u4e8e v1.1.x \u5206\u652f\uff0c\u4e3b\u5206\u652f\u6765\u6e90 Trickster 2.0\uff0c\u76ee\u524d\u5904\u4e8e\u6d4b\u8bd5\u9636\u6bb5\u3002","title":"4 Grafana \u56fe\u8868\u52a0\u901f\u795e\u5668 - Trickster"},{"location":"chap10/48grafana_Trickster/#1-http","text":"Trickster \u662f\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684 HTTP \u53cd\u5411\u4ee3\u7406\u7f13\u5b58\u5de5\u5177\uff0c\u9002\u7528\u4e8e HTTP \u5e94\u7528\uff0c\u5982\u9759\u6001\u6587\u4ef6\u670d\u52a1\u5668\u548c Web API\u3002","title":"1 HTTP \u53cd\u5411\u4ee3\u7406\u7f13\u5b58"},{"location":"chap10/48grafana_Trickster/#1-1","text":"\u4e00\u4e2a\u72ec\u7279\u800c\u5f3a\u5927\u7684\u5e94\u7528\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u548c\u901a\u7528 HTTP \u7aef\u70b9 \u652f\u6301 TLS \u548c HTTP/2 * \u4e3a\u7f13\u5b58\u5c42\u63d0\u4f9b\u4e86\u51e0\u79cd\u9009\u62e9\uff0c\u5305\u62ec\u5185\u5b58\u3001\u6587\u4ef6\u7cfb\u7edf\u3001Redis \u548c bbolt \u9ad8\u5ea6\u53ef\u5b9a\u5236\uff0c\u4f7f\u7528\u7b80\u5355\u7684 yaml \u914d\u7f6e\u8bbe\u7f6e\uff0c\u5230 HTTP \u8def\u5f84\u3002 \u5185\u7f6e\u7684 Prometheus \u6307\u6807\u548c\u53ef\u5b9a\u5236\u7684\u5065\u5eb7\u68c0\u67e5\u7aef\u70b9\uff0c\u7528\u4e8e\u7aef\u5230\u7aef\u76d1\u63a7 \u9ad8\u6027\u80fd\u8f6c\u53d1 Byte \u8303\u56f4\u5185\u8bf7\u6c42\u7f13\u5b58\u548c\u52a0\u901f \u901a\u8fc7 OpenTelemetry \u8fdb\u884c\u5206\u5e03\u5f0f\u8ddf\u8e2a\uff0c\u652f\u6301 Jaeger \u548c Zipkin \u7528\u4e8e\u81ea\u5b9a\u4e49\u8bf7\u6c42\u8def\u7531\u548c\u91cd\u5199\u7684\u89c4\u5219\u5f15\u64ce","title":"1-1 \u529f\u80fd\u4eae\u70b9"},{"location":"chap10/48grafana_Trickster/#2","text":"Trickster \u901a\u8fc7\u6d88\u9664 TSDB \u4e0a\u7684\u5197\u4f59\u8ba1\u7b97\uff0c\u6781\u5927\u5730\u6539\u5584\u4e86\u7ec8\u7aef\u7528\u6237\u7684\u4eea\u8868\u76d8\u56fe\u8868\u6e32\u67d3\u65f6\u95f4\u3002\u7b80\u800c\u8a00\u4e4b\uff0cTrickster \u5bf9\u4e8e\u8bfb\u53d6\u91cf\u5927\u7684 Dashboard/TSDB \u73af\u5883\uff0c\u4ee5\u53ca\u90a3\u4e9b\u5177\u6709\u9ad8\u5ea6\u6807\u51c6\u5316\u6570\u636e\u96c6\u7684\u73af\u5883\uff0c\u6781\u5927\u63d0\u9ad8\u4e86\u6027\u80fd\u548c\u53ef\u6269\u5c55\u6027\u3002 Trickster \u517c\u5bb9 Prometheus\u3001ClickHouse\u3001InfluxDB\u3001Circonus IRONdb","title":"2 \u65f6\u5e8f\u6570\u636e\u5e93\u52a0\u901f\u5668"},{"location":"chap10/48grafana_Trickster/#2-1","text":"1. \u65f6\u95f4\u5e8f\u5217 Delta \u4ee3\u7406\u7f13\u5b58 \uff0c\u5927\u591a\u6570\u4eea\u8868\u76d8\u5728\u6bcf\u6b21\u7528\u6237\u7684\u4eea\u8868\u76d8\u52a0\u8f7d\u65f6\uff0c\u4ee5\u53ca\u6bcf\u6b21\u81ea\u52a8\u5237\u65b0\u65f6\uff0c\u90fd\u4f1a\u5411\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\u8bf7\u6c42\u4ed6\u4eec\u5e0c\u671b\u5448\u73b0\u7684\u6574\u4e2a\u6570\u636e\u65f6\u95f4\u8303\u56f4\u3002 Trickster \u7684 Delta Proxy \u4f1a\u68c0\u67e5\u5ba2\u6237\u7aef\u67e5\u8be2\u7684\u65f6\u95f4\u8303\u56f4\uff0c\u4ee5\u786e\u5b9a\u54ea\u4e9b\u6570\u636e\u70b9\u5df2\u7ecf\u88ab\u7f13\u5b58\uff0c\u5e76\u4ece tsdb \u4e2d\u53ea\u8bf7\u6c42\u4ecd\u7136\u9700\u8981\u670d\u52a1\u4e8e\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u6570\u636e\u70b9 \u3002 \u8fd9\u6837\u4e00\u6765\uff0c\u6bcf\u4e2a\u4eba\u7684\u56fe\u8868\u52a0\u8f7d\u65f6\u95f4\u90fd\u4f1a\u5927\u5927\u52a0\u5feb\uff0c\u56e0\u4e3a tsdb \u5728\u6bcf\u6b21\u52a0\u8f7d\u4eea\u8868\u76d8\u65f6\u53ea\u67e5\u8be2\u5fae\u5c0f\u7684\u589e\u91cf\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u51e0\u767e\u4e2a\u6570\u636e\u70b9\u7684\u91cd\u590d\u6570\u636e\u3002 2. \u8fb9\u754c\u6807\u51c6\u5316\uff0c\u5f53 Trickster \u4ece tsdb \u8bf7\u6c42\u6570\u636e\u65f6\uff0c\u5b83\u4f1a\u7a0d\u5fae\u8c03\u6574\u5ba2\u6237\u8bf7\u6c42\u7684\u65f6\u95f4\u8303\u56f4\uff0c\u4ee5\u786e\u4fdd\u8fd4\u56de\u7684\u6240\u6709\u6570\u636e\u70b9\u90fd\u4e0e\u6807\u51c6\u5316\u7684\u6b65\u957f\u8fb9\u754c\u4e00\u81f4 \u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6b65\u957f\u4e3a 300s\uff0c\u6240\u6709\u6570\u636e\u70b9\u5c06\u843d\u5728\u65f6\u949f 0 \u548c 5 \u4e0a\u3002\u8fd9\u786e\u4fdd\u4e86\u6570\u636e\u7684\u9ad8\u5ea6\u53ef\u7f13\u5b58\u6027\uff0c\u4ee5\u66f4\u76f4\u89c2\u5730\u4f20\u8fbe\u7ed9\u7528\u6237\uff0c\u5e76\u4e14\u6240\u6709\u4eea\u8868\u76d8\u7528\u6237\u5728\u5c4f\u5e55\u4e0a\u770b\u5230\u7684\u6570\u636e\u90fd\u662f\u76f8\u540c\u7684\u3002 3. Fast Forward\uff0cTrickster \u7684 Fast Forward \u529f\u80fd\u786e\u4fdd\u4e86\u5373\u4f7f\u5728\u6b65\u957f\u8fb9\u754c\u7edf\u4e00\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u65f6\u56fe\u8868\u4ecd\u7136\u603b\u662f\u663e\u793a\u6700\u65b0\u7684\u6570\u636e\uff0c\u800c\u4e0d\u7ba1\u4e0b\u4e00\u4e2a\u6b65\u957f\u8fb9\u754c\u6709\u591a\u8fdc \u3002 \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u7684\u56fe\u8868\u6b65\u957f\u662f 300s\uff0c\u800c\u65f6\u95f4\u76ee\u524d\u662f 1:21p\uff0c\u901a\u5e38\u4f60\u4f1a\u5728 1:25p \u518d\u7b49 4 \u5206\u949f\u624d\u6709\u65b0\u7684\u6570\u636e\u70b9\u3002Trickster \u4f1a\u6253\u7834\u6700\u8fd1\u6570\u636e\u70b9\u7684\u6b65\u957f\u95f4\u9694\uff0c\u5e76\u59cb\u7ec8\u5c06\u5176\u5305\u542b\u5728\u5bf9\u5ba2\u6237\u8bf7\u6c42\u5b9e\u65f6\u6570\u636e\u7684\u54cd\u5e94\u4e2d\u3002 \u53ef\u4ee5\u901a\u8fc7 https://helm.tricksterproxy.io/ \u5728 Kubernetes \u4e2d\u8fdb\u884c\u5b89\u88c5\u3002","title":"2-1 \u5982\u4f55\u52a0\u901f\u65f6\u95f4\u5e8f\u5217"},{"location":"chap10/58grafana_init/","text":"1 \u4f7f\u7528 Grafana \u6784\u5efa\u4f60\u7684\u7b2c\u4e00\u4e2a\u4eea\u8868\u76d8 \u65f6\u5e38\u5bf9\u4e00\u4e9b\u5de5\u5177\u7684\u5b58\u5728\u89c9\u5f97\u7406\u6240\u5f53\u7136\u3002\u6bd4\u5982\u8bf4\uff0c\u9700\u8981\u8ba1\u7b97\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u5c31\u53ef\u4ee5\u8981\u6765\u4e24\u767e\u53f0\u865a\u62df\u5316\u597d\u7684\u673a\u5b50\u3002\u9700\u8981\u8bd5\u4e0b\u7f13\u5b58\uff1f\u70b9\u4e0b\u9f20\u6807\u5c31\u53ef\u4ee5\u8981\u5230\u51e0\u5341\u4e2a\u914d\u7f6e\u597d\u7684 Redis \u7ed3\u70b9\u3002\u6700\u7701\u5fc3\u7684\u662f\uff0c\u8fd9\u4e9b\u5de5\u5177\u90fd\u5df2\u7ecf\u6839\u636e\u5de5\u4f5c\u6d41\u914d\u7f6e\u597d\u4e86\uff1a\u9274\u6743\u3001\u4f18\u5316\u3001\u7f51\u7edc\u8fde\u63a5\u7b49\u7b49\u901a\u901a\u4e0d\u7528\u4f60\u64cd\u5fc3\u3002 \u62ff Grafana \u548c\u670d\u52a1\u76d1\u63a7\u6765\u8bf4\uff1a \u670d\u52a1\u76d1\u63a7\u5230\u5e95\u548b\u914d\u7f6e\uff1f\u600e\u6837\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\uff1f \u4fdd\u8bc1\u5065\u5eb7\u7684\u670d\u52a1\u5230\u5e95\u5e94\u8be5\u76d1\u63a7\u4e9b\u4ec0\u4e48\uff1f \u914d\u7f6e\u597d\u540e\u7684\u4eea\u8868\u76d8\u4e3a\u5565\u6d88\u5931\u4e86\uff1f \u67e5\u8be2 Query \u53c8\u8be5\u548b\u5199\uff1f 1 Grafana \u662f\u4ec0\u4e48 \u5f00\u59cb\u524d\u9996\u5148\u8981\u95ee\u4e00\u4e2a\u95ee\u9898\uff0cGrafana \u5230\u5e95\u662f\u4ec0\u4e48\u3002 Grafana \u662f\u4e00\u4e2a\u76d1\u63a7\u4eea\u8868\u7cfb\u7edf\uff0c\u5b83\u662f\u7531 Grafana Labs \u516c\u53f8\u5f00\u6e90\u7684\u7684\u4e00\u4e2a\u7cfb\u7edf\u76d1\u6d4b (System Monitoring) \u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u5927\u5927\u5e2e\u52a9\u4f60\u7b80\u5316\u76d1\u63a7\u7684\u590d\u6742\u5ea6\uff0c\u4f60\u53ea\u9700\u8981\u63d0\u4f9b\u4f60\u9700\u8981\u76d1\u63a7\u7684\u6570\u636e\uff0c\u5b83\u5c31\u53ef\u4ee5\u5e2e\u4f60\u751f\u6210\u5404\u79cd\u53ef\u89c6\u5316\u4eea\u8868\u3002\u540c\u65f6\u5b83\u8fd8\u6709\u62a5\u8b66\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u7cfb\u7edf\u51fa\u73b0\u95ee\u9898\u65f6\u901a\u77e5\u4f60\u3002 Grafana \u4e0d\u5bf9\u6570\u636e\u6e90\u4f5c\u5047\u8bbe\uff0c\u5b83\u652f\u6301\u4ee5\u4e0b\u5404\u79cd\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4f60\u7684\u6570\u636e\u6e90\u662f\u4ee5\u4e0b\u4efb\u610f\u4e00\u79cd\uff0c\u5b83\u90fd\u53ef\u4ee5\u5e2e\u52a9\u751f\u6210\u4eea\u8868\u3002\u540c\u65f6\u5728\u5e02\u9762\u4e0a\uff0c\u5982\u679c Grafana \u79f0\u7b2c\u4e8c\uff0c\u90a3\u4e48\u5e94\u8be5\u6ca1\u6709\u6562\u79f0\u7b2c\u4e00\u7684\u4eea\u8868\u53ef\u89c6\u5316\u5de5\u5177\u4e86\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u641e\u5b9a\u4e86 Grafana\uff0c\u5b83\u51e0\u4e4e\u662f\u4e00\u4e2a\u4f1a\u966a\u4f34\u4f60\u5230\u5404\u4e2a\u516c\u53f8\u7684\u4e00\u4ef6\u79f0\u5fc3\u5e94\u624b\u7684\u5175\u5668\u3002 Grafana \u652f\u6301\u7684\u6570\u636e\u6e90 Prometheus \u672c\u6587\u4e2d\u7684\u4f8b\u5b50\uff0c\u4f60\u6ca1\u542c\u8fc7\u4e5f\u6ca1\u5173\u7cfb\u4e0d\u5f71\u54cd\u9605\u8bfb\uff0c\u628a\u5b83\u60f3\u8c61\u6210\u5e26\u65f6\u95f4\u6233\u7684 MySQL \u5c31\u597d Graphite OpenTSDB InfluxDB MySQL/PostgreSQL Microsoft SQL Server \u7b49\u7b49 1-1 \u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u7528\u5230 Grafana \u5728\u4efb\u4f55\u9700\u8981\u76d1\u63a7\u7cfb\u7edf\u8fd0\u884c\u72b6\u51b5\u7684\u5730\u65b9\u5c31\u5927\u6982\u7387\u4f1a\u7528\u5230\u4eea\u8868\u76d8\uff0c\u800c\u7528\u5230\u4eea\u8868\u76d8\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u7528 Grafana \uff08\u4e0d\u7ba1\u4f60\u7528\u4ec0\u4e48\u8bed\u8a00\uff09 1-2 \u5b89\u88c5\u548c\u914d\u7f6e Grafana \u4e3a\u4e86\u7b80\u5316\u5404\u79cd\u7cfb\u7edf\u4e0d\u4e00\u81f4\u7684\u4e71\u4e03\u516b\u7cdf\u95ee\u9898\uff0c\u6211\u4eec\u7528 Docker \u6765\u5b89\u88c5 Grafana\u3002 Docker \u7684\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff0c\u5c31\u7b97\u4f60\u4ece\u6765\u6ca1\u7528\u8fc7 docker \u4e5f\u4e0d\u7528\u64cd\u5fc3\uff0c\u6211\u4f1a\u5728\u4e0b\u6587\u91cc\u4e00\u884c\u4e00\u884c\u8bb2\u660e\u767d\u3002\u8bf7\u4e0d\u8981\u590d\u5236\u7c98\u8d34\u4ee3\u7801\uff0c\u76f4\u63a5\u5230\u672c\u6587\u7684 GitHub \u9875 clone \u4ee3\u7801\u5373\u53ef\uff0c\u6211\u4f1a\u4fdd\u8bc1 GitHub \u4e0a\u7684\u4ee3\u7801\u5904\u7406\u6700\u65b0\u72b6\u6001\uff1a https://github.com/Kalasearch/grafana-tutorial version: '3.4' services: prometheus: image: prom/prometheus container_name: prometheus hostname: prometheus ports: - 9090:9090 volumes: - ./prometheus.yml:/etc/prometheus/prometheus.yml prometheus-exporter: image: prom/node-exporter container_name: prometheus-exporter hostname: prometheus-exporter ports: - 9100:9100 grafana: image: grafana/grafana container_name: grafana hostname: grafana ports: - 3000:3000 volumes: - ./grafana.ini:/etc/grafana/grafana.ini \u5728\u8fd9\u91cc\u6211\u4eec\u542f\u52a8\u4e86\u4e09\u4e2a\u670d\u52a1 Prometheus \u666e\u7f57\u7c73\u4fee\u65af\u65f6\u5e8f\u6570\u636e\u5e93\uff0c\u7528\u6765\u5b58\u50a8\u548c\u67e5\u8be2\u4f60\u7684\u76d1\u63a7\u6570\u636e Promethues-exporter \u4e00\u4e2a\u6a21\u62df\u6570\u636e\u6e90\uff0c\u7528\u6765\u76d1\u63a7\u4f60\u672c\u673a\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u6709\u51e0\u4e2a CPU\uff0cCPU \u7684\u8d1f\u8f7d\u4e4b\u7c7b Grafana \u672c\u5c0a \u5728 clone \u4e86\u4ee3\u7801\u4e4b\u540e\uff0c\u5728\u4f60\u7684\u672c\u5730\u8fd0\u884c docker-compose up \uff0c\u5e94\u8be5\u4f1a\u770b\u5230\u7c7b\u4f3c\uff1a \u5728\u8dd1\u8d77\u6765\u670d\u52a1\u4e4b\u540e\uff0c\u5230\u4f60\u7684\u6d4f\u89c8\u5668\u4e2d\uff0c\u590d\u5236 http://localhost:3000 \u5e94\u8be5\u5c31\u53ef\u4ee5\u770b\u5230 Grafana \u8dd1\u8d77\u6765\u7684\u521d\u59cb\u767b\u5f55\u754c\u9762\u3002 \u521d\u59cb\u7684\u7528\u6237\u540d\u662f admin\uff0c\u5bc6\u7801\u4e5f\u662f admin\u3002\u8f93\u5165\u4e4b\u540e\uff0c\u4f1a\u8981\u6c42\u4f60\u6539\u5bc6\u7801 \u5230\u8fd9\u91cc\uff0c\u4f60\u7684 Grafana \u5c31\u5df2\u7ecf\u642d\u8d77\u6765\u4e86\u3002\u6ce8\u610f\u5230 Docker \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u6211\u4eec\u521b\u5efa\u4e86\u4e09\u4e2a\u670d\u52a1\uff0c\u8fd9\u4e09\u4e2a\u670d\u52a1\u4e4b\u95f4\u5206\u522b\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f 2 Grfana \u5de5\u4f5c\u539f\u7406 \u4e0a\u9762\u8bf4\u5230\uff0cGrafana \u662f\u4e00\u4e2a\u4eea\u8868\u76d8\uff0c\u800c\u4eea\u8868\u76d8\u5fc5\u7136\u662f\u7528\u6765\u663e\u793a\u6570\u636e\u7684\u3002 Grafana \u672c\u8eab\u5e76\u4e0d\u8d1f\u8d23\u6570\u636e\u5c42\uff0c\u5b83\u53ea\u63d0\u4f9b\u4e86\u901a\u7528\u7684\u63a5\u53e3\uff0c\u8ba9\u5e95\u5c42\u7684\u6570\u636e\u5e93\u53ef\u4ee5\u628a\u6570\u636e\u7ed9\u5b83\u3002\u800c\u6211\u4eec\u8d77\u7684\u53e6\u4e00\u4e2a\u670d\u52a1\uff0c\u53eb Prometheus \uff08\u4e2d\u6587\u540d\u666e\u7f57\u7c73\u4fee\u65af\u6570\u636e\u5e93\uff09\u5219\u662f\u8d1f\u8d23\u5b58\u50a8\u548c\u67e5\u8be2\u6570\u636e\u7684\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0cGrafana \u6bcf\u6b21\u8981\u5c55\u73b0\u4e00\u4e2a\u4eea\u8868\u76d8\u7684\u65f6\u5019\uff0c\u4f1a\u5411 Prometheus \u53d1\u9001\u4e00\u4e2a\u67e5\u8be2\u8bf7\u6c42\u3002 \u90a3\u4e48\u914d\u7f6e\u91cc\u7684\u53e6\u4e00\u4e2a\u670d\u52a1 Prometheus-exporter \u53c8\u662f\u4ec0\u4e48\u5462\uff1f \u8fd9\u4e2a\u5c31\u662f\u4f60\u771f\u6b63\u76d1\u6d4b\u7684\u6570\u636e\u6765\u6e90\u4e86\uff0cPrometheus-exporter \u8fd9\u4e2a\u670d\u52a1\uff0c\u4f1a\u67e5\u8be2\u4f60\u7684\u672c\u5730\u7535\u8111\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u5185\u5b58\u8fd8\u6709\u591a\u5c11\u3001CPU \u8d1f\u8f7d\u4e4b\u7c7b\uff0c\u7136\u540e\u5c06\u6570\u636e\u5bfc\u51fa\u81f3\u666e\u7f57\u7c73\u4fee\u65af\u6570\u636e\u5e93\u3002 \u5728\u771f\u5b9e\u4e16\u754c\u4e2d\uff0c\u4f60\u7684\u76ee\u7684\u662f\u76d1\u63a7\u4f60\u81ea\u5df1\u7684\u670d\u52a1\uff0c\u6bd4\u5982\u4f60\u7684 Web \u670d\u52a1\u5668\uff0c\u4f60\u7684\u6570\u636e\u5e93\u4e4b\u7c7b\u3002 \u90a3\u4e48\u4f60\u5c31\u9700\u8981\u5728\u4f60\u81ea\u5df1\u7684\u670d\u52a1\u5668\u4e2d\u628a\u6570\u636e\u53d1\u9001\u7ed9\u666e\u7f57\u7c73\u4fee\u65af\u6570\u636e\u5e93\u3002\u5f53\u7136\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u628a\u6570\u636e\u53d1\u9001\u7ed9 MySQL (Grafana \u4e5f\u652f\u6301)\uff0c\u4f46\u666e\u7f57\u7c73\u4fee\u65af\u51e0\u4e4e\u662f\u6807\u914d\u7684\u65f6\u5e8f\u6570\u636e\u5e93\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f60\u7528\u3002 \u7528\u4e00\u5f20\u56fe\u6765\u8bf4\u660e\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a \u8fd9\u91cc\uff0c\u6700\u5de6\u8fb9\u7684 Docker \u670d\u52a1\u4f1a\u5c06\u670d\u52a1\u7684\u6570\u636e\u53d1\u9001\u7ed9\u4e2d\u95f4\u7684\u666e\u7f57\u7c73\u4fee\u65af\uff08\u5bf9\u5e94\u4e0a\u6587\u7684 Prometheus-exporter\uff09\uff0c\u800c\u6700\u53f3\u8fb9\u7684 Grafana \u4f1a\u67e5\u8be2\u4e2d\u95f4\u7684\u666e\u7f57\u7c73\u4fee\u65af\uff0c\u6765\u5c55\u793a\u4eea\u8868\u76d8\u3002 2 \u642d\u5efa\u4f60\u7684\u7b2c\u4e00\u4e2a\u4eea\u8868\u76d8 2-1 \u7b2c 1 \u6b65 - \u8bbe\u7f6e\u6570\u636e\u6e90 \u8fdb\u5165 Grafana \u540e\uff0c\u5728\u5de6\u4fa7\u4f60\u4f1a\u53d1\u73b0\u6709\u4e00\u4e2a Data Source \u5373\u6570\u636e\u6e90\u9009\u9879 \u70b9\u51fb\u540e\u8fdb\u5165\uff0c\u70b9 Add Data Source \u5373\u6dfb\u52a0\u6570\u636e\u6e90\uff0c\u9009\u62e9 Prometheus \u4e4b\u540e\u8bbe\u7f6e\u6570\u636e\u6e90 URL\u3002\u8bf7\u6ce8\u610f\uff0cPromethues \u7684\u5de5\u4f5c\u539f\u7406\uff08\u4e0b\u4e00\u4e2a\u6559\u7a0b\u4e2d\u4f1a\u8bb2\uff09\u662f\u901a\u8fc7\u8f6e\u8be2\u4e00\u4e2a HTTP \u8bf7\u6c42\u6765\u83b7\u53d6\u6570\u636e\u7684\uff0c\u800c Grafana \u5728\u83b7\u53d6\u6570\u636e\u6e90\u7684\u65f6\u5019\u4e5f\u662f\u901a\u8fc7\u4e00\u4e2a HTTP \u8bf7\u6c42\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5730\u65b9\u4f60\u9700\u8981\u544a\u8bc9 Grafana \u4f60\u7684 Prometheus \u7684\u6570\u636e\u7aef\u70b9\u662f\u4ec0\u4e48\u3002 \u8fd9\u91cc\u6211\u4eec\u586b\u5165 http://prometheus:9090 \u5c31\u53ef\u4ee5\u4e86\u3002 \u70b9\u786e\u8ba4\u65f6\u4e00\u5b9a\u8981\u786e\u8ba4\u51fa\u73b0 Data source is working \u8fd9\u4e2a\u68c0\u6d4b\uff0c\u8fd9\u65f6\u8868\u660e\u4f60\u7684 Grafana \u5df2\u7ecf\u8ddf\u666e\u7f57\u7c73\u4fee\u65af\u8bf4\u4e0a\u8bdd\u4e86 2-2 \u7b2c 2 \u6b65 - \u5bfc\u5165 Dashboard \u5728 Grafana \u91cc\uff0c\u4eea\u8868\u76d8\u7684\u914d\u7f6e\u53ef\u4ee5\u901a\u8fc7\u56fe\u5f62\u5316\u754c\u9762\u8fdb\u884c\uff0c\u4f46\u914d\u7f6e\u597d\u7684\u4eea\u8868\u76d8\u662f\u4ee5 JSON \u5b58\u50a8\u7684\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u628a\u4f60\u7684 JSON \u6570\u636e\u5206\u4eab\u51fa\u53bb\uff0c\u522b\u4eba\u5bfc\u5165\u5c31\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165\u540c\u6837\u7684\u4eea\u8868\u76d8\uff08\u524d\u63d0\u662f\u4f60\u4eec\u7684\u76d1\u6d4b\u6570\u636e\u4e00\u6837\uff09\u3002 \u5bf9\u4e8e\u6211\u4eec\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\u56de\u5fc6\u4e00\u4e0b\uff0c\u56e0\u4e3a\u6211\u4eec\u7528\u4e86 prometheus-exporter \u4e5f\u5c31\u662f\u672c\u673a\u7684\u7cfb\u7edf\u4fe1\u606f\u76d1\u63a7\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u627e\u4e00\u4e2a\u540c\u6837\u7528\u4e86\u8fd9\u4e2a\u6570\u636e\u6e90\u7684\u4eea\u8868\u76d8\u3002\u5728 Grafana \u7f51\u7ad9\u4e0a\uff0c\u4f60\u5176\u5b9e\u53ef\u4ee5\u627e\u5230\u5f88\u591a\u522b\u4eba\u5df2\u7ecf\u505a\u597d\u7684\u4eea\u8868\uff0c\u53ef\u4ee5\u7528\u6765\u76d1\u6d4b\u975e\u5e38\u591a\u6807\u51c6\u5316\u7684\u670d\u52a1\u3002 Grafana \u7684\u4eea\u8868\u76d8\u5e02\u573a\uff1a https://grafana.com/grafana/dashboards \u6bd4\u5982\u8bf4\u9488\u5bf9\u4ee5\u4e0b\u4e00\u4e9b\u670d\u52a1\u7684\u6807\u51c6\u4eea\u8868\u76d8\u5c31\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230 JVM Spring Boot MySQL \u76d1\u63a7 Laravel \u76d1\u63a7 \u90a3\u4e48\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u7528\u4e00\u4e2a\u6807\u51c6\u7684\u4eea\u8868\u76d8\uff1ahttps://grafana.com/grafana/dashboards/1860 \u5728\u5de6\u4fa7\u7684\u52a0\u53f7\u91cc\uff0c\u70b9 Import \u5373\u5bfc\u5165\uff0c\u5728\u51fa\u73b0\u7684\u754c\u9762\u4e2d\u586b\u5165 1860 \u5373\u6211\u4eec\u8981\u5bfc\u5165\u7684\u4eea\u8868\u76d8\u7f16\u53f7\u5373\u53ef\u3002 \u7136\u540e\u586b\u5165\u4f60\u9700\u8981\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u4eea\u8868\u76d8\u540d\u5b57\u7b49 \u786e\u8ba4\u4e4b\u540e Grafana \u5c31\u4f1a\u6839\u636e\u4f60\u7684\u672c\u673a\u4fe1\u606f\uff0c\u751f\u6210\u7c7b\u4f3c CPU \u8d1f\u8f7d\uff0c\u5185\u5b58\u548c I/O \u4e4b\u7c7b\u7684\u4fe1\u606f\u3002\u6211\u7684\u78c1\u76d8\u72b6\u51b5\u5982\u56fe\uff1a \u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684\u4fe1\u606f\u771f\u6b63\u76d1\u63a7\u7684\u662f\u4f60\u7684 Docker \u4e2d\u7684\u7cfb\u7edf\u4fe1\u606f\u3002\u5982\u679c\u4f60\u53ea\u7ed9\u4f60\u7684 Docker \u5206\u914d 1 \u4e2a\u6838\u548c 2G \u5185\u5b58\uff0c\u90a3\u4e48\u8fd9\u91cc\u5e94\u8be5\u770b\u5230\u7684\u5c31\u662f 1 \u4e2a\u6838\u548c 2G \u5185\u5b58 2-3 \u7b2c 3 \u6b65 - \u751f\u6210\u548c\u521b\u5efa\u65b0\u7684\u4eea\u8868\u76d8 \u5305\u62ec\u5982\u4f55\u7528 Prometheus \u67e5\u8be2\u6570\u636e \u666e\u7f57\u7c73\u4fee\u65af\u672c\u8eab\u4e5f\u662f\u4e2a\u975e\u5e38\u5927\u7684\u8bdd\u9898\uff0c\u6211\u4eec\u4f1a\u5728\u4e4b\u540e\u7684\u535a\u5ba2\u4e2d\u7ee7\u7eed\u8ba8\u8bba\u3002\u666e\u7f57\u7c73\u4fee\u65af\u5305\u62ec\u6240\u6709\u5176\u5b83\u65f6\u5e8f\u6570\u636e\u5e93\u901a\u5e38\u90fd\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u67e5\u8be2\u8bed\u8a00\uff0c\u6bd4\u5982\u8bf4 PromQL\uff0c\u5982\u679c\u9700\u8981\u719f\u7ec3\u5730\u6784\u5efa\u4eea\u8868\u76d8\u7684\u8bdd\uff0c\u9700\u8981\u5bf9\u8fd9\u4e2a\u67e5\u8be2\u8bed\u8a00\u6709\u4e00\u5b9a\u4e86\u89e3\u3002 \u5982\u4f55\u624b\u52a8\u751f\u6210\u4e00\u4e2a\u4eea\u8868\u76d8 \u5047\u8bbe\u4f60\u5df2\u7ecf\u6309\u4e0a\u9762\u7684\u6b65\u9aa4\u751f\u6210\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u4eea\u8868\u76d8\uff0c\u90a3\u4e48\u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u624b\u52a8\u6dfb\u52a0\u4eea\u8868\u76d8\u4e86\u3002\u540c\u6837\u662f\u70b9\u5de6\u4fa7\u7684\u52a0\u53f7\uff0c\u70b9 Dashboard \u5c31\u53ef\u4ee5\u8fdb\u5165\u6dfb\u52a0\u4eea\u8868\u76d8\u7684\u754c\u9762\u3002 \u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u6570\u636e\u53eb scrape_duration_seconds \uff0c\u5148\u4e0d\u7528\u7ba1\u5b83\u7684\u542b\u4e49\u662f\u4ec0\u4e48\uff0c\u5c31\u5f53\u5b83\u662f\u53cc 11 \u7684\u9500\u552e\u989d\u597d\u4e86\uff1a \u6dfb\u52a0\u597d\u540e\u70b9\u53f3\u4e0a\u89d2\u7684 Apply \u6216 Save \u4f60\u7684\u4eea\u8868\u76d8\u5c31\u88ab\u4fdd\u5b58\u4e86\u3002 4 \u4f7f\u7528 Grafana \u521b\u5efa\u53ef\u89c6\u5316\u9762\u677f Grafana \u662f\u4e00\u4e2a\u76d1\u63a7\u4eea\u8868\u7cfb\u7edf\uff0c\u5b83\u662f\u7531 Grafana Labs \u516c\u53f8\u5f00\u6e90\u7684\u7684\u4e00\u4e2a\u7cfb\u7edf\u76d1\u6d4b\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5927\u5927\u5e2e\u52a9\u6211\u4eec\u7b80\u5316\u76d1\u63a7\u7684\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u63d0\u4f9b\u9700\u8981\u76d1\u63a7\u7684\u6570\u636e\uff0c\u5b83\u5c31\u53ef\u4ee5\u5e2e\u52a9\u751f\u6210\u5404\u79cd\u53ef\u89c6\u5316\u4eea\u8868\uff0c\u540c\u65f6\u5b83\u8fd8\u6709\u62a5\u8b66\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u7cfb\u7edf\u51fa\u73b0\u95ee\u9898\u65f6\u53d1\u51fa\u901a\u77e5\u3002 Grafana \u652f\u6301\u8bb8\u591a\u4e0d\u540c\u7684\u6570\u636e\u6e90\uff0c\u6bcf\u4e2a\u6570\u636e\u6e90\u90fd\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u67e5\u8be2\u7f16\u8f91\u5668\uff0c\u6bcf\u4e2a\u6570\u636e\u6e90\u7684\u67e5\u8be2\u8bed\u8a00\u548c\u80fd\u529b\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6765\u81ea\u591a\u4e2a\u6570\u636e\u6e90\u7684\u6570\u636e\u7ec4\u5408\u5230\u4e00\u4e2a\u4eea\u8868\u677f\uff0c\u4f46\u6bcf\u4e00\u4e2a\u9762\u677f\u88ab\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u6570\u636e\u6e90\u3002\u76ee\u524d\u5b98\u65b9\u652f\u6301\u4ee5\u4e0b\u6570\u636e\u6e90\uff1a Alertmanager AWS CloudWatch Azure Monitor Elasticsearch Google Cloud Monitoring Graphite InfluxDB Loki Microsoft SQL Server (MSSQL) MySQL OpenTSDB PostgreSQL Prometheus Jaeger Zipkin Tempo \u6211\u4eec\u8fd9\u91cc\u5f53\u7136\u91cd\u70b9\u9700\u8981\u4ecb\u7ecd\u7684\u5c31\u662f Prometheus \u8fd9\u4e2a\u6570\u636e\u6e90\u4e86\u3002 \u5b89\u88c5 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5b89\u88c5 Grafana\uff0cGrafana \u672c\u8eab\u662f\u975e\u5e38\u8f7b\u91cf\u7ea7\u7684\uff0c\u4e0d\u4f1a\u5360\u7528\u5927\u91cf\u8d44\u6e90\uff0c\u6b64\u5916 Grafana \u9700\u8981\u4e00\u4e2a\u6570\u636e\u5e93\u6765\u5b58\u50a8\u5176\u914d\u7f6e\u6570\u636e\uff0c\u6bd4\u5982\u7528\u6237\u3001\u6570\u636e\u6e90\u548c\u4eea\u8868\u76d8\u7b49\uff0c\u76ee\u524d Grafana \u652f\u6301 SQLite\u3001MySQL\u3001PostgreSQL 3 \u79cd\u6570\u636e\u5e93\uff0c\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f SQLite\uff0c\u8be5\u6570\u636e\u5e93\u6587\u4ef6\u4f1a\u5b58\u50a8\u5728 Grafana \u7684\u5b89\u88c5\u4f4d\u7f6e\uff0c\u6240\u4ee5\u9700\u8981\u5bf9 Grafana \u7684\u5b89\u88c5\u76ee\u5f55\u8fdb\u884c\u6301\u4e45\u5316\u3002 \u8981\u5b89\u88c5 Grafana \u7684\u65b9\u5f0f\u6709\u5f88\u591a\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f CentOS \u7cfb\u7edf\uff0c\u53ef\u4ee5\u5728 Grafana \u5b98\u65b9\u4e0b\u8f7d\u9875\u9762\u7b5b\u9009\u5408\u9002\u7684\u7248\u672c https://grafana.com/grafana/download?edition=oss&platform=linux \u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u6765\u8fdb\u884c\u5b89\u88c5\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528 rpm \u5305\u8fdb\u884c\u5b89\u88c5\uff1a \u279c wget https://dl.grafana.com/oss/release/grafana-8.2.1-1.x86_64.rpm \u279c sudo yum install grafana-8.2.1-1.x86_64.rpm \u5b89\u88c5\u5b8c\u6210\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 systemd \u6765\u7ba1\u7406 Grafana\uff1a \u2638 \u279c sudo systemctl daemon-reload \u2638 \u279c sudo systemctl enable grafana-server \u2638 \u279c sudo systemctl start grafana-server \u2638 \u279c sudo systemctl status grafana-server \u9ed8\u8ba4\u7684\u542f\u52a8\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u4f4d\u4e8e /etc/sysconfig/grafana-server \u6587\u4ef6\u4e2d\uff1a \u2638 \u279c cat /etc/sysconfig/grafana-server GRAFANA_USER=grafana GRAFANA_GROUP=grafana GRAFANA_HOME=/usr/share/grafana LOG_DIR=/var/log/grafana DATA_DIR=/var/lib/grafana MAX_OPEN_FILES=10000 CONF_DIR=/etc/grafana CONF_FILE=/etc/grafana/grafana.ini RESTART_ON_UPGRADE=true PLUGINS_DIR=/var/lib/grafana/plugins PROVISIONING_CFG_DIR=/etc/grafana/provisioning # Only used on systemd systems PID_FILE_DIR=/var/run/grafana \u4ece\u4e0a\u9762\u6587\u4ef6\u4e2d\u53ef\u4ee5\u627e\u5230 Grafana \u7684\u5404\u79cd\u6570\u636e\u914d\u7f6e\u8def\u5f84\uff0c\u6bd4\u5982\u6570\u636e\u76ee\u5f55\u3001\u65e5\u5fd7\u76ee\u5f55\u3001\u63d2\u4ef6\u76ee\u5f55\u7b49\u7b49\uff0c\u6b63\u5e38\u542f\u52a8\u5b8c\u6210\u540e Grafana \u4f1a\u76d1\u542c\u5728 3000 \u7aef\u53e3\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 Grafana \u7684 WebUI\u3002 \u9ed8\u8ba4\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e3a admin\uff0c\u4e5f\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6 /etc/grafana/grafana.ini \u4e2d\u914d\u7f6e admin_user \u548c admin_password \u4e24\u4e2a\u53c2\u6570\u6765\u8fdb\u884c\u8986\u76d6\u3002 \u5f53\u7136\u5982\u679c\u6211\u4eec\u60f3\u8981\u90e8\u7f72\u4e00\u4e2a\u9ad8\u53ef\u7528\u7248\u672c\u7684 Grafana \u7684\u8bdd\uff0c\u90a3\u4e48\u4f7f\u7528 SQLite \u6570\u636e\u5e93\u5c31\u4e0d\u884c\u4e86\uff0c\u9700\u8981\u5207\u6362\u5230 MySQL \u6216\u8005 PostgreSQL\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 Grafana \u914d\u7f6e\u7684 [database] \u90e8\u5206\u627e\u5230\u6570\u636e\u5e93\u7684\u76f8\u5173\u914d\u7f6e\uff0cGrafana \u4f1a\u5c06\u6240\u6709\u957f\u671f\u6570\u636e\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u7136\u540e\u90e8\u7f72\u591a\u4e2a Grafana \u5b9e\u4f8b\u4f7f\u7528\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u5373\u53ef\u5b9e\u73b0\u9ad8\u53ef\u7528\u3002 \u521b\u5efa\u9762\u677f \u9762\u677f\uff08Panel\uff09\u662f Grafana \u4e2d\u57fa\u672c\u53ef\u89c6\u5316\u6784\u5efa\u5757\uff0c\u6bcf\u4e2a\u9762\u677f\u90fd\u6709\u4e00\u4e2a\u7279\u5b9a\u4e8e\u9762\u677f\u4e2d\u9009\u62e9\u6570\u636e\u6e90\u7684\u67e5\u8be2\u7f16\u8f91\u5668\uff0c\u6bcf\u4e2a\u9762\u677f\u90fd\u6709\u5404\u79cd\u5404\u6837\u7684\u6837\u5f0f\u548c\u683c\u5f0f\u9009\u9879\uff0c\u9762\u677f\u53ef\u4ee5\u5728\u4eea\u8868\u677f\u4e0a\u62d6\u653e\u548c\u91cd\u65b0\u6392\u5217\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u8c03\u6574\u5927\u5c0f\uff0c\u6240\u4ee5\u8981\u5728 Grafana \u4e0a\u521b\u5efa\u53ef\u89c6\u5316\u7684\u56fe\u8868\uff0c\u9762\u677f\u662f\u6211\u4eec\u5fc5\u987b\u8981\u638c\u63e1\u7684\u77e5\u8bc6\u70b9\u3002 \u6570\u636e\u6e90 \u5728\u521b\u5efa\u9762\u677f\u4e4b\u524d\u6211\u4eec\u9700\u8981\u6307\u5b9a\u6211\u4eec\u7684\u9762\u677f\u6570\u636e\u6765\u6e90\uff0c\u4e5f\u5c31\u662f\u6570\u636e\u6e90\uff0cGrafana \u652f\u6301\u591a\u79cd\u6570\u636e\u6e90\uff0c\u6211\u4eec\u8fd9\u91cc\u5f53\u7136\u4f7f\u7528 Prometheus \u4f5c\u4e3a\u6570\u636e\u6e90\u6765\u8fdb\u884c\u8bf4\u660e\u3002 \u5728 Grafana \u5de6\u4fa7\u5de5\u5177\u680f\u9009\u62e9 Configuration\uff0c\u70b9\u51fb\u5230\u4e0b\u9762\u7684 Data sources\uff0c\u6253\u5f00\u6dfb\u52a0\u6570\u636e\u6e90\u7684\u9875\u9762 \uff1a \u9009\u62e9\u7b2c\u4e00\u9879 Prometheus \u6570\u636e\u6e90\u8fdb\u884c\u914d\u7f6e\uff1a \u5728 HTTP \u9879\u4e2d\u914d\u7f6e URL \u5730\u5740\u4e3a http://localhost:9090 \uff0c\u5176\u5b9e\u5c31\u662f Prometheus \u7684\u5730\u5740\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc Grafana \u548c Prometheus \u90fd\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u6240\u4ee5\u7528 localhost \u5373\u53ef\u8bbf\u95ee\uff0c\u5f53\u7136\u7528 IP \u4e5f\u53ef\u4ee5\uff0c Access \u9009\u62e9\u9ed8\u8ba4\u7684 Server \u4ee3\u7406\u65b9\u5f0f\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e Grafana \u7a0b\u5e8f\u53bb\u8bbf\u95ee Prometheus \u800c\u4e0d\u662f\u5728\u6d4f\u89c8\u5668\u7aef\u53bb\u8bbf\u95ee\uff0c\u5982\u679c Prometheus \u914d\u7f6e\u6709\u8ba4\u8bc1\uff0c\u5219\u8fd8\u9700\u8981\u5728\u4e0b\u53d1\u914d\u7f6e Auth \u4fe1\u606f\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u62c9\u5230\u6700\u4e0b\u65b9\u70b9\u51fb Save & test\uff0c\u63d0\u793a\u6dfb\u52a0\u6210\u529f\u5373\u8868\u9762\u6570\u636e\u6e90\u6dfb\u52a0\u6210\u529f\u4e86\u3002\u7136\u540e\u5728\u6570\u636e\u6e90\u5217\u8868\u4e2d\u5c31\u4f1a\u51fa\u73b0\u6211\u4eec\u521a\u521a\u6dfb\u52a0\u7684 Prometheus \u8fd9\u4e2a\u6570\u636e\u6e90\u4e86\uff1a \u6dfb\u52a0\u9762\u677f \u9762\u677f\u662f\u5c5e\u4e8e\u67d0\u4e00\u4e2a Dashboard \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u521b\u5efa\u4e00\u4e2a Dashboard\uff0c\u5728\u4fa7\u8fb9\u680f\u70b9\u51fb + \u5207\u6362\u5230 Dashboard \u4e0b\u9762\u5f00\u59cb\u521b\u5efa Dashboard\uff1a \u5728\u9ed8\u8ba4\u521b\u5efa\u7684\u65b0\u7684 Dashboard \u4e2d\u5c31\u6709\u4e00\u4e2a\u7a7a\u7684\u9762\u677f\uff0c\u70b9\u51fb Add an empty panel \u5373\u53ef\u5f00\u59cb\u6dfb\u52a0\u9762\u677f\uff1a \u8fdb\u5165\u9762\u677f\u7f16\u8f91\u5668\u540e\u5373\u53ef\u6dfb\u52a0\u9762\u677f\u4e86\uff0c\u4e2d\u95f4\u4f4d\u7f6e\u662f\u67e5\u8be2\u8bed\u53e5\u7684\u663e\u793a\u7ed3\u679c\uff0c\u4e0b\u65b9\u662f\u7528\u4e8e\u914d\u7f6e\u67e5\u8be2\u8bed\u53e5\u7684\u5730\u65b9\uff0c\u5de6\u4fa7\u53ef\u4ee5\u9009\u62e9\u9762\u677f\u663e\u793a\u7684\u7c7b\u578b\uff0c\u9762\u677f\u5143\u4fe1\u606f\uff0c\u6bd4\u5982\u6807\u9898\u3001\u63cf\u8ff0\u4fe1\u606f\u7b49\u3002 \u6bd4\u5982\u6211\u4eec\u73b0\u5728\u5c31\u8981\u6765\u67e5\u8be2\u8282\u70b9\u7684 CPU \u4f7f\u7528\u7387\uff0c\u524d\u9762\u5728 node_exporter \u7ae0\u8282\u4e2d\u5df2\u7ecf\u5b66\u4e60\u4e86\u8be5\u76d1\u63a7\u6570\u636e\u7684\u67e5\u8be2\u8bed\u53e5\u4e3a (1 - sum(rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) by (instance) / sum(rate(node_cpu_seconds_total[5m])) by (instance) ) * 100 \uff0c\u53ea\u9700\u8981\u5c06\u8be5\u8bed\u53e5\u586b\u5145\u5230\u67e5\u8be2\u7684 PromQL \u8bed\u53e5\u4e2d\u5373\u53ef\u5728\u4e0a\u9762\u663e\u793a\u51fa\u76d1\u63a7\u7684\u7ed3\u679c\uff1a \u7528\u540c\u6837\u7684\u65b9\u5f0f\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u67e5\u8be2\u8282\u70b9\u5185\u5b58\u4f7f\u7528\u7387\u7684\u9762\u677f\uff1a \u6dfb\u52a0\u53c2\u6570 \u73b0\u5728\u6211\u4eec\u5728\u4e00\u4e2a Dashboard \u4e2d\u6dfb\u52a0\u4e86\u4e24\u4e2a Panel\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u660e\u663e\u770b\u5230\u4f1a\u76f4\u63a5\u5c06\u6240\u6709\u7684\u8282\u70b9\u4fe1\u606f\u5c55\u793a\u5728\u540c\u4e00\u4e2a\u9762\u677f\u4e2d\uff0c\u4f46\u662f\u5982\u679c\u6709\u975e\u5e38\u591a\u7684\u8282\u70b9\u7684\u8bdd\u6570\u636e\u91cf\u5c31\u975e\u5e38\u5927\u4e86\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u6700\u597d\u7684\u65b9\u5f0f\u662f\u5c06\u8282\u70b9\u5f53\u6210\u53c2\u6570\uff0c\u53ef\u4ee5\u8ba9\u7528\u6237\u81ea\u5df1\u53bb\u9009\u62e9\u8981\u67e5\u770b\u54ea\u4e00\u4e2a\u8282\u70b9\u7684\u76d1\u63a7\u4fe1\u606f\uff0c\u8981\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u6211\u4eec\u5c31\u9700\u8981\u53bb\u6dfb\u52a0\u4e00\u4e2a\u4ee5\u8282\u70b9\u4e3a\u53c2\u6570\u7684\u53d8\u91cf\u6765\u53bb\u67e5\u8be2\u76d1\u63a7\u6570\u636e\u3002 \u70b9\u51fb Dashboard \u9875\u9762\u53f3\u4e0a\u65b9\u7684 Dashboard settings \u6309\u94ae\uff0c\u8fdb\u5165\u914d\u7f6e\u9875\u9762\uff1a \u5728\u8be5 Settings \u9875\u9762\u53ef\u4ee5\u6765\u5bf9\u6574\u4e2a Dashboard \u8fdb\u884c\u914d\u7f6e\uff0c\u6bd4\u5982\u540d\u79f0\u3001\u6807\u7b7e\u3001\u53d8\u91cf\u7b49\uff1a \u8fd9\u91cc\u6211\u4eec\u70b9\u51fb\u5de6\u8fb9\u7684 Variables \u6dfb\u52a0\u4e00\u4e2a\u53d8\u91cf\uff0c\u53d8\u91cf\u652f\u6301\u66f4\u5177\u4ea4\u4e92\u6027\u548c\u52a8\u6001\u6027\u7684\u4eea\u8868\u677f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5b83\u4eec\u7684\u4f4d\u7f6e\u4f7f\u7528\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u5728\u6307\u6807\u67e5\u8be2\u4e2d\u786c\u7f16\u7801\uff0c\u53d8\u91cf\u663e\u793a\u4e3a Dashboard \u9876\u90e8\u7684\u4e0b\u62c9\u5217\u8868\uff0c\u8fd9\u4e9b\u4e0b\u62c9\u5217\u8868\u53ef\u4ee5\u8f7b\u677e\u66f4\u6539\u4eea\u8868\u677f\u4e2d\u663e\u793a\u7684\u6570\u636e\u3002 \u4e3a\u4e86\u80fd\u591f\u9009\u62e9\u8282\u70b9\u6570\u636e\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a instance \u7684\u53d8\u91cf\u540d\uff0c\u4f46\u662f\u5b9a\u4e49\u7684\u8fd9\u4e2a\u53d8\u91cf\u503c\u4ece\u54ea\u4e2a\u5730\u65b9\u83b7\u53d6\u5462\uff1f \u76d1\u63a7\u8282\u70b9\u7684\u76f8\u5173\u6307\u6807\u662f\u6765\u6e90\u4e8e\u540d\u4e3a node-exporter \u7684\u4efb\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u8be2 up \u6765\u83b7\u53d6\u6240\u6709\u7684\u76d1\u63a7\u5b9e\u4f8b\uff1a \u8981\u60f3\u83b7\u53d6\u5230 instance \u6807\u7b7e\u4e2d\u7684\u503c\uff0c\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f .*instance=\"(.*?)\".* \u6765\u83b7\u53d6\u5b9e\u4f8b\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u6210\u529f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u56de\u5230 Dashboard \u9875\u9762\u5c31\u53ef\u4ee5\u770b\u5230\u591a\u4e86\u4e00\u4e2a\u9009\u62e9\u8282\u70b9\u7684\u4e0b\u62c9\u6846\uff1a \u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u7684\u9762\u677f\u5e76\u4e0d\u4f1a\u968f\u7740\u6211\u4eec\u4e0b\u62c9\u6846\u7684\u9009\u62e9\u800c\u53d8\u5316\uff0c\u6211\u4eec\u9700\u8981\u5c06 instance \u8fd9\u4e2a\u53d8\u91cf\u4f20\u5165\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u6bd4\u5982\u91cd\u65b0\u4fee\u6539CPU\u4f7f\u7528\u7387\u7684\u67e5\u8be2\u8bed\u53e5\uff1a \u7528\u540c\u6837\u7684\u65b9\u5f0f\u7ed9\u5185\u5b58\u4f7f\u7528\u7387\u6dfb\u52a0\u6839\u636e\u8282\u70b9\u8fc7\u6ee4\u7684\u53c2\u6570\uff1a \u56de\u5230 Dashboard \u9875\u9762\u5c31\u53ef\u4ee5\u6839\u636e\u6211\u4eec\u7684\u4e0b\u62c9\u6846\u6765\u9009\u62e9\u9700\u8981\u76d1\u63a7\u7684\u8282\u70b9\u6570\u636e\u4e86\uff0c\u5b9a\u4e49\u53c2\u6570\u7684\u65f6\u5019\u5982\u679c\u9009\u62e9\u4e86\u53ef\u4ee5\u9009\u62e9\u6240\u6709\uff0c\u540c\u6837\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u8282\u70b9\u7684\u6570\u636e\uff1a","title":"1 \u4f7f\u7528 Grafana \u6784\u5efa\u4f60\u7684\u7b2c\u4e00\u4e2a\u4eea\u8868\u76d8"},{"location":"chap10/58grafana_init/#1-grafana","text":"\u65f6\u5e38\u5bf9\u4e00\u4e9b\u5de5\u5177\u7684\u5b58\u5728\u89c9\u5f97\u7406\u6240\u5f53\u7136\u3002\u6bd4\u5982\u8bf4\uff0c\u9700\u8981\u8ba1\u7b97\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u5c31\u53ef\u4ee5\u8981\u6765\u4e24\u767e\u53f0\u865a\u62df\u5316\u597d\u7684\u673a\u5b50\u3002\u9700\u8981\u8bd5\u4e0b\u7f13\u5b58\uff1f\u70b9\u4e0b\u9f20\u6807\u5c31\u53ef\u4ee5\u8981\u5230\u51e0\u5341\u4e2a\u914d\u7f6e\u597d\u7684 Redis \u7ed3\u70b9\u3002\u6700\u7701\u5fc3\u7684\u662f\uff0c\u8fd9\u4e9b\u5de5\u5177\u90fd\u5df2\u7ecf\u6839\u636e\u5de5\u4f5c\u6d41\u914d\u7f6e\u597d\u4e86\uff1a\u9274\u6743\u3001\u4f18\u5316\u3001\u7f51\u7edc\u8fde\u63a5\u7b49\u7b49\u901a\u901a\u4e0d\u7528\u4f60\u64cd\u5fc3\u3002 \u62ff Grafana \u548c\u670d\u52a1\u76d1\u63a7\u6765\u8bf4\uff1a \u670d\u52a1\u76d1\u63a7\u5230\u5e95\u548b\u914d\u7f6e\uff1f\u600e\u6837\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\uff1f \u4fdd\u8bc1\u5065\u5eb7\u7684\u670d\u52a1\u5230\u5e95\u5e94\u8be5\u76d1\u63a7\u4e9b\u4ec0\u4e48\uff1f \u914d\u7f6e\u597d\u540e\u7684\u4eea\u8868\u76d8\u4e3a\u5565\u6d88\u5931\u4e86\uff1f \u67e5\u8be2 Query \u53c8\u8be5\u548b\u5199\uff1f","title":"1 \u4f7f\u7528 Grafana \u6784\u5efa\u4f60\u7684\u7b2c\u4e00\u4e2a\u4eea\u8868\u76d8"},{"location":"chap10/58grafana_init/#1-grafana_1","text":"\u5f00\u59cb\u524d\u9996\u5148\u8981\u95ee\u4e00\u4e2a\u95ee\u9898\uff0cGrafana \u5230\u5e95\u662f\u4ec0\u4e48\u3002 Grafana \u662f\u4e00\u4e2a\u76d1\u63a7\u4eea\u8868\u7cfb\u7edf\uff0c\u5b83\u662f\u7531 Grafana Labs \u516c\u53f8\u5f00\u6e90\u7684\u7684\u4e00\u4e2a\u7cfb\u7edf\u76d1\u6d4b (System Monitoring) \u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u5927\u5927\u5e2e\u52a9\u4f60\u7b80\u5316\u76d1\u63a7\u7684\u590d\u6742\u5ea6\uff0c\u4f60\u53ea\u9700\u8981\u63d0\u4f9b\u4f60\u9700\u8981\u76d1\u63a7\u7684\u6570\u636e\uff0c\u5b83\u5c31\u53ef\u4ee5\u5e2e\u4f60\u751f\u6210\u5404\u79cd\u53ef\u89c6\u5316\u4eea\u8868\u3002\u540c\u65f6\u5b83\u8fd8\u6709\u62a5\u8b66\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u7cfb\u7edf\u51fa\u73b0\u95ee\u9898\u65f6\u901a\u77e5\u4f60\u3002 Grafana \u4e0d\u5bf9\u6570\u636e\u6e90\u4f5c\u5047\u8bbe\uff0c\u5b83\u652f\u6301\u4ee5\u4e0b\u5404\u79cd\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4f60\u7684\u6570\u636e\u6e90\u662f\u4ee5\u4e0b\u4efb\u610f\u4e00\u79cd\uff0c\u5b83\u90fd\u53ef\u4ee5\u5e2e\u52a9\u751f\u6210\u4eea\u8868\u3002\u540c\u65f6\u5728\u5e02\u9762\u4e0a\uff0c\u5982\u679c Grafana \u79f0\u7b2c\u4e8c\uff0c\u90a3\u4e48\u5e94\u8be5\u6ca1\u6709\u6562\u79f0\u7b2c\u4e00\u7684\u4eea\u8868\u53ef\u89c6\u5316\u5de5\u5177\u4e86\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u641e\u5b9a\u4e86 Grafana\uff0c\u5b83\u51e0\u4e4e\u662f\u4e00\u4e2a\u4f1a\u966a\u4f34\u4f60\u5230\u5404\u4e2a\u516c\u53f8\u7684\u4e00\u4ef6\u79f0\u5fc3\u5e94\u624b\u7684\u5175\u5668\u3002 Grafana \u652f\u6301\u7684\u6570\u636e\u6e90 Prometheus \u672c\u6587\u4e2d\u7684\u4f8b\u5b50\uff0c\u4f60\u6ca1\u542c\u8fc7\u4e5f\u6ca1\u5173\u7cfb\u4e0d\u5f71\u54cd\u9605\u8bfb\uff0c\u628a\u5b83\u60f3\u8c61\u6210\u5e26\u65f6\u95f4\u6233\u7684 MySQL \u5c31\u597d Graphite OpenTSDB InfluxDB MySQL/PostgreSQL Microsoft SQL Server \u7b49\u7b49","title":"1 Grafana \u662f\u4ec0\u4e48"},{"location":"chap10/58grafana_init/#1-1-grafana","text":"\u5728\u4efb\u4f55\u9700\u8981\u76d1\u63a7\u7cfb\u7edf\u8fd0\u884c\u72b6\u51b5\u7684\u5730\u65b9\u5c31\u5927\u6982\u7387\u4f1a\u7528\u5230\u4eea\u8868\u76d8\uff0c\u800c\u7528\u5230\u4eea\u8868\u76d8\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u7528 Grafana \uff08\u4e0d\u7ba1\u4f60\u7528\u4ec0\u4e48\u8bed\u8a00\uff09","title":"1-1 \u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u7528\u5230 Grafana"},{"location":"chap10/58grafana_init/#1-2-grafana","text":"\u4e3a\u4e86\u7b80\u5316\u5404\u79cd\u7cfb\u7edf\u4e0d\u4e00\u81f4\u7684\u4e71\u4e03\u516b\u7cdf\u95ee\u9898\uff0c\u6211\u4eec\u7528 Docker \u6765\u5b89\u88c5 Grafana\u3002 Docker \u7684\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff0c\u5c31\u7b97\u4f60\u4ece\u6765\u6ca1\u7528\u8fc7 docker \u4e5f\u4e0d\u7528\u64cd\u5fc3\uff0c\u6211\u4f1a\u5728\u4e0b\u6587\u91cc\u4e00\u884c\u4e00\u884c\u8bb2\u660e\u767d\u3002\u8bf7\u4e0d\u8981\u590d\u5236\u7c98\u8d34\u4ee3\u7801\uff0c\u76f4\u63a5\u5230\u672c\u6587\u7684 GitHub \u9875 clone \u4ee3\u7801\u5373\u53ef\uff0c\u6211\u4f1a\u4fdd\u8bc1 GitHub \u4e0a\u7684\u4ee3\u7801\u5904\u7406\u6700\u65b0\u72b6\u6001\uff1a https://github.com/Kalasearch/grafana-tutorial version: '3.4' services: prometheus: image: prom/prometheus container_name: prometheus hostname: prometheus ports: - 9090:9090 volumes: - ./prometheus.yml:/etc/prometheus/prometheus.yml prometheus-exporter: image: prom/node-exporter container_name: prometheus-exporter hostname: prometheus-exporter ports: - 9100:9100 grafana: image: grafana/grafana container_name: grafana hostname: grafana ports: - 3000:3000 volumes: - ./grafana.ini:/etc/grafana/grafana.ini \u5728\u8fd9\u91cc\u6211\u4eec\u542f\u52a8\u4e86\u4e09\u4e2a\u670d\u52a1 Prometheus \u666e\u7f57\u7c73\u4fee\u65af\u65f6\u5e8f\u6570\u636e\u5e93\uff0c\u7528\u6765\u5b58\u50a8\u548c\u67e5\u8be2\u4f60\u7684\u76d1\u63a7\u6570\u636e Promethues-exporter \u4e00\u4e2a\u6a21\u62df\u6570\u636e\u6e90\uff0c\u7528\u6765\u76d1\u63a7\u4f60\u672c\u673a\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u6709\u51e0\u4e2a CPU\uff0cCPU \u7684\u8d1f\u8f7d\u4e4b\u7c7b Grafana \u672c\u5c0a \u5728 clone \u4e86\u4ee3\u7801\u4e4b\u540e\uff0c\u5728\u4f60\u7684\u672c\u5730\u8fd0\u884c docker-compose up \uff0c\u5e94\u8be5\u4f1a\u770b\u5230\u7c7b\u4f3c\uff1a \u5728\u8dd1\u8d77\u6765\u670d\u52a1\u4e4b\u540e\uff0c\u5230\u4f60\u7684\u6d4f\u89c8\u5668\u4e2d\uff0c\u590d\u5236 http://localhost:3000 \u5e94\u8be5\u5c31\u53ef\u4ee5\u770b\u5230 Grafana \u8dd1\u8d77\u6765\u7684\u521d\u59cb\u767b\u5f55\u754c\u9762\u3002 \u521d\u59cb\u7684\u7528\u6237\u540d\u662f admin\uff0c\u5bc6\u7801\u4e5f\u662f admin\u3002\u8f93\u5165\u4e4b\u540e\uff0c\u4f1a\u8981\u6c42\u4f60\u6539\u5bc6\u7801 \u5230\u8fd9\u91cc\uff0c\u4f60\u7684 Grafana \u5c31\u5df2\u7ecf\u642d\u8d77\u6765\u4e86\u3002\u6ce8\u610f\u5230 Docker \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u6211\u4eec\u521b\u5efa\u4e86\u4e09\u4e2a\u670d\u52a1\uff0c\u8fd9\u4e09\u4e2a\u670d\u52a1\u4e4b\u95f4\u5206\u522b\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f","title":"1-2 \u5b89\u88c5\u548c\u914d\u7f6e Grafana"},{"location":"chap10/58grafana_init/#2-grfana","text":"\u4e0a\u9762\u8bf4\u5230\uff0cGrafana \u662f\u4e00\u4e2a\u4eea\u8868\u76d8\uff0c\u800c\u4eea\u8868\u76d8\u5fc5\u7136\u662f\u7528\u6765\u663e\u793a\u6570\u636e\u7684\u3002 Grafana \u672c\u8eab\u5e76\u4e0d\u8d1f\u8d23\u6570\u636e\u5c42\uff0c\u5b83\u53ea\u63d0\u4f9b\u4e86\u901a\u7528\u7684\u63a5\u53e3\uff0c\u8ba9\u5e95\u5c42\u7684\u6570\u636e\u5e93\u53ef\u4ee5\u628a\u6570\u636e\u7ed9\u5b83\u3002\u800c\u6211\u4eec\u8d77\u7684\u53e6\u4e00\u4e2a\u670d\u52a1\uff0c\u53eb Prometheus \uff08\u4e2d\u6587\u540d\u666e\u7f57\u7c73\u4fee\u65af\u6570\u636e\u5e93\uff09\u5219\u662f\u8d1f\u8d23\u5b58\u50a8\u548c\u67e5\u8be2\u6570\u636e\u7684\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0cGrafana \u6bcf\u6b21\u8981\u5c55\u73b0\u4e00\u4e2a\u4eea\u8868\u76d8\u7684\u65f6\u5019\uff0c\u4f1a\u5411 Prometheus \u53d1\u9001\u4e00\u4e2a\u67e5\u8be2\u8bf7\u6c42\u3002 \u90a3\u4e48\u914d\u7f6e\u91cc\u7684\u53e6\u4e00\u4e2a\u670d\u52a1 Prometheus-exporter \u53c8\u662f\u4ec0\u4e48\u5462\uff1f \u8fd9\u4e2a\u5c31\u662f\u4f60\u771f\u6b63\u76d1\u6d4b\u7684\u6570\u636e\u6765\u6e90\u4e86\uff0cPrometheus-exporter \u8fd9\u4e2a\u670d\u52a1\uff0c\u4f1a\u67e5\u8be2\u4f60\u7684\u672c\u5730\u7535\u8111\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u5185\u5b58\u8fd8\u6709\u591a\u5c11\u3001CPU \u8d1f\u8f7d\u4e4b\u7c7b\uff0c\u7136\u540e\u5c06\u6570\u636e\u5bfc\u51fa\u81f3\u666e\u7f57\u7c73\u4fee\u65af\u6570\u636e\u5e93\u3002 \u5728\u771f\u5b9e\u4e16\u754c\u4e2d\uff0c\u4f60\u7684\u76ee\u7684\u662f\u76d1\u63a7\u4f60\u81ea\u5df1\u7684\u670d\u52a1\uff0c\u6bd4\u5982\u4f60\u7684 Web \u670d\u52a1\u5668\uff0c\u4f60\u7684\u6570\u636e\u5e93\u4e4b\u7c7b\u3002 \u90a3\u4e48\u4f60\u5c31\u9700\u8981\u5728\u4f60\u81ea\u5df1\u7684\u670d\u52a1\u5668\u4e2d\u628a\u6570\u636e\u53d1\u9001\u7ed9\u666e\u7f57\u7c73\u4fee\u65af\u6570\u636e\u5e93\u3002\u5f53\u7136\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u628a\u6570\u636e\u53d1\u9001\u7ed9 MySQL (Grafana \u4e5f\u652f\u6301)\uff0c\u4f46\u666e\u7f57\u7c73\u4fee\u65af\u51e0\u4e4e\u662f\u6807\u914d\u7684\u65f6\u5e8f\u6570\u636e\u5e93\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f60\u7528\u3002 \u7528\u4e00\u5f20\u56fe\u6765\u8bf4\u660e\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a \u8fd9\u91cc\uff0c\u6700\u5de6\u8fb9\u7684 Docker \u670d\u52a1\u4f1a\u5c06\u670d\u52a1\u7684\u6570\u636e\u53d1\u9001\u7ed9\u4e2d\u95f4\u7684\u666e\u7f57\u7c73\u4fee\u65af\uff08\u5bf9\u5e94\u4e0a\u6587\u7684 Prometheus-exporter\uff09\uff0c\u800c\u6700\u53f3\u8fb9\u7684 Grafana \u4f1a\u67e5\u8be2\u4e2d\u95f4\u7684\u666e\u7f57\u7c73\u4fee\u65af\uff0c\u6765\u5c55\u793a\u4eea\u8868\u76d8\u3002","title":"2 Grfana \u5de5\u4f5c\u539f\u7406"},{"location":"chap10/58grafana_init/#2","text":"","title":"2 \u642d\u5efa\u4f60\u7684\u7b2c\u4e00\u4e2a\u4eea\u8868\u76d8"},{"location":"chap10/58grafana_init/#2-1-1-","text":"\u8fdb\u5165 Grafana \u540e\uff0c\u5728\u5de6\u4fa7\u4f60\u4f1a\u53d1\u73b0\u6709\u4e00\u4e2a Data Source \u5373\u6570\u636e\u6e90\u9009\u9879 \u70b9\u51fb\u540e\u8fdb\u5165\uff0c\u70b9 Add Data Source \u5373\u6dfb\u52a0\u6570\u636e\u6e90\uff0c\u9009\u62e9 Prometheus \u4e4b\u540e\u8bbe\u7f6e\u6570\u636e\u6e90 URL\u3002\u8bf7\u6ce8\u610f\uff0cPromethues \u7684\u5de5\u4f5c\u539f\u7406\uff08\u4e0b\u4e00\u4e2a\u6559\u7a0b\u4e2d\u4f1a\u8bb2\uff09\u662f\u901a\u8fc7\u8f6e\u8be2\u4e00\u4e2a HTTP \u8bf7\u6c42\u6765\u83b7\u53d6\u6570\u636e\u7684\uff0c\u800c Grafana \u5728\u83b7\u53d6\u6570\u636e\u6e90\u7684\u65f6\u5019\u4e5f\u662f\u901a\u8fc7\u4e00\u4e2a HTTP \u8bf7\u6c42\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5730\u65b9\u4f60\u9700\u8981\u544a\u8bc9 Grafana \u4f60\u7684 Prometheus \u7684\u6570\u636e\u7aef\u70b9\u662f\u4ec0\u4e48\u3002 \u8fd9\u91cc\u6211\u4eec\u586b\u5165 http://prometheus:9090 \u5c31\u53ef\u4ee5\u4e86\u3002 \u70b9\u786e\u8ba4\u65f6\u4e00\u5b9a\u8981\u786e\u8ba4\u51fa\u73b0 Data source is working \u8fd9\u4e2a\u68c0\u6d4b\uff0c\u8fd9\u65f6\u8868\u660e\u4f60\u7684 Grafana \u5df2\u7ecf\u8ddf\u666e\u7f57\u7c73\u4fee\u65af\u8bf4\u4e0a\u8bdd\u4e86","title":"2-1 \u7b2c 1 \u6b65 - \u8bbe\u7f6e\u6570\u636e\u6e90"},{"location":"chap10/58grafana_init/#2-2-2-dashboard","text":"\u5728 Grafana \u91cc\uff0c\u4eea\u8868\u76d8\u7684\u914d\u7f6e\u53ef\u4ee5\u901a\u8fc7\u56fe\u5f62\u5316\u754c\u9762\u8fdb\u884c\uff0c\u4f46\u914d\u7f6e\u597d\u7684\u4eea\u8868\u76d8\u662f\u4ee5 JSON \u5b58\u50a8\u7684\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u628a\u4f60\u7684 JSON \u6570\u636e\u5206\u4eab\u51fa\u53bb\uff0c\u522b\u4eba\u5bfc\u5165\u5c31\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165\u540c\u6837\u7684\u4eea\u8868\u76d8\uff08\u524d\u63d0\u662f\u4f60\u4eec\u7684\u76d1\u6d4b\u6570\u636e\u4e00\u6837\uff09\u3002 \u5bf9\u4e8e\u6211\u4eec\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\u56de\u5fc6\u4e00\u4e0b\uff0c\u56e0\u4e3a\u6211\u4eec\u7528\u4e86 prometheus-exporter \u4e5f\u5c31\u662f\u672c\u673a\u7684\u7cfb\u7edf\u4fe1\u606f\u76d1\u63a7\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u627e\u4e00\u4e2a\u540c\u6837\u7528\u4e86\u8fd9\u4e2a\u6570\u636e\u6e90\u7684\u4eea\u8868\u76d8\u3002\u5728 Grafana \u7f51\u7ad9\u4e0a\uff0c\u4f60\u5176\u5b9e\u53ef\u4ee5\u627e\u5230\u5f88\u591a\u522b\u4eba\u5df2\u7ecf\u505a\u597d\u7684\u4eea\u8868\uff0c\u53ef\u4ee5\u7528\u6765\u76d1\u6d4b\u975e\u5e38\u591a\u6807\u51c6\u5316\u7684\u670d\u52a1\u3002 Grafana \u7684\u4eea\u8868\u76d8\u5e02\u573a\uff1a https://grafana.com/grafana/dashboards \u6bd4\u5982\u8bf4\u9488\u5bf9\u4ee5\u4e0b\u4e00\u4e9b\u670d\u52a1\u7684\u6807\u51c6\u4eea\u8868\u76d8\u5c31\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230 JVM Spring Boot MySQL \u76d1\u63a7 Laravel \u76d1\u63a7 \u90a3\u4e48\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u7528\u4e00\u4e2a\u6807\u51c6\u7684\u4eea\u8868\u76d8\uff1ahttps://grafana.com/grafana/dashboards/1860 \u5728\u5de6\u4fa7\u7684\u52a0\u53f7\u91cc\uff0c\u70b9 Import \u5373\u5bfc\u5165\uff0c\u5728\u51fa\u73b0\u7684\u754c\u9762\u4e2d\u586b\u5165 1860 \u5373\u6211\u4eec\u8981\u5bfc\u5165\u7684\u4eea\u8868\u76d8\u7f16\u53f7\u5373\u53ef\u3002 \u7136\u540e\u586b\u5165\u4f60\u9700\u8981\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u4eea\u8868\u76d8\u540d\u5b57\u7b49 \u786e\u8ba4\u4e4b\u540e Grafana \u5c31\u4f1a\u6839\u636e\u4f60\u7684\u672c\u673a\u4fe1\u606f\uff0c\u751f\u6210\u7c7b\u4f3c CPU \u8d1f\u8f7d\uff0c\u5185\u5b58\u548c I/O \u4e4b\u7c7b\u7684\u4fe1\u606f\u3002\u6211\u7684\u78c1\u76d8\u72b6\u51b5\u5982\u56fe\uff1a \u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684\u4fe1\u606f\u771f\u6b63\u76d1\u63a7\u7684\u662f\u4f60\u7684 Docker \u4e2d\u7684\u7cfb\u7edf\u4fe1\u606f\u3002\u5982\u679c\u4f60\u53ea\u7ed9\u4f60\u7684 Docker \u5206\u914d 1 \u4e2a\u6838\u548c 2G \u5185\u5b58\uff0c\u90a3\u4e48\u8fd9\u91cc\u5e94\u8be5\u770b\u5230\u7684\u5c31\u662f 1 \u4e2a\u6838\u548c 2G \u5185\u5b58","title":"2-2 \u7b2c 2 \u6b65 - \u5bfc\u5165 Dashboard"},{"location":"chap10/58grafana_init/#2-3-3-","text":"\u5305\u62ec\u5982\u4f55\u7528 Prometheus \u67e5\u8be2\u6570\u636e \u666e\u7f57\u7c73\u4fee\u65af\u672c\u8eab\u4e5f\u662f\u4e2a\u975e\u5e38\u5927\u7684\u8bdd\u9898\uff0c\u6211\u4eec\u4f1a\u5728\u4e4b\u540e\u7684\u535a\u5ba2\u4e2d\u7ee7\u7eed\u8ba8\u8bba\u3002\u666e\u7f57\u7c73\u4fee\u65af\u5305\u62ec\u6240\u6709\u5176\u5b83\u65f6\u5e8f\u6570\u636e\u5e93\u901a\u5e38\u90fd\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u67e5\u8be2\u8bed\u8a00\uff0c\u6bd4\u5982\u8bf4 PromQL\uff0c\u5982\u679c\u9700\u8981\u719f\u7ec3\u5730\u6784\u5efa\u4eea\u8868\u76d8\u7684\u8bdd\uff0c\u9700\u8981\u5bf9\u8fd9\u4e2a\u67e5\u8be2\u8bed\u8a00\u6709\u4e00\u5b9a\u4e86\u89e3\u3002 \u5982\u4f55\u624b\u52a8\u751f\u6210\u4e00\u4e2a\u4eea\u8868\u76d8 \u5047\u8bbe\u4f60\u5df2\u7ecf\u6309\u4e0a\u9762\u7684\u6b65\u9aa4\u751f\u6210\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u4eea\u8868\u76d8\uff0c\u90a3\u4e48\u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u624b\u52a8\u6dfb\u52a0\u4eea\u8868\u76d8\u4e86\u3002\u540c\u6837\u662f\u70b9\u5de6\u4fa7\u7684\u52a0\u53f7\uff0c\u70b9 Dashboard \u5c31\u53ef\u4ee5\u8fdb\u5165\u6dfb\u52a0\u4eea\u8868\u76d8\u7684\u754c\u9762\u3002 \u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u6570\u636e\u53eb scrape_duration_seconds \uff0c\u5148\u4e0d\u7528\u7ba1\u5b83\u7684\u542b\u4e49\u662f\u4ec0\u4e48\uff0c\u5c31\u5f53\u5b83\u662f\u53cc 11 \u7684\u9500\u552e\u989d\u597d\u4e86\uff1a \u6dfb\u52a0\u597d\u540e\u70b9\u53f3\u4e0a\u89d2\u7684 Apply \u6216 Save \u4f60\u7684\u4eea\u8868\u76d8\u5c31\u88ab\u4fdd\u5b58\u4e86\u3002","title":"2-3 \u7b2c 3 \u6b65 - \u751f\u6210\u548c\u521b\u5efa\u65b0\u7684\u4eea\u8868\u76d8"},{"location":"chap10/58grafana_init/#4-grafana","text":"Grafana \u662f\u4e00\u4e2a\u76d1\u63a7\u4eea\u8868\u7cfb\u7edf\uff0c\u5b83\u662f\u7531 Grafana Labs \u516c\u53f8\u5f00\u6e90\u7684\u7684\u4e00\u4e2a\u7cfb\u7edf\u76d1\u6d4b\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5927\u5927\u5e2e\u52a9\u6211\u4eec\u7b80\u5316\u76d1\u63a7\u7684\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u63d0\u4f9b\u9700\u8981\u76d1\u63a7\u7684\u6570\u636e\uff0c\u5b83\u5c31\u53ef\u4ee5\u5e2e\u52a9\u751f\u6210\u5404\u79cd\u53ef\u89c6\u5316\u4eea\u8868\uff0c\u540c\u65f6\u5b83\u8fd8\u6709\u62a5\u8b66\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u7cfb\u7edf\u51fa\u73b0\u95ee\u9898\u65f6\u53d1\u51fa\u901a\u77e5\u3002 Grafana \u652f\u6301\u8bb8\u591a\u4e0d\u540c\u7684\u6570\u636e\u6e90\uff0c\u6bcf\u4e2a\u6570\u636e\u6e90\u90fd\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u67e5\u8be2\u7f16\u8f91\u5668\uff0c\u6bcf\u4e2a\u6570\u636e\u6e90\u7684\u67e5\u8be2\u8bed\u8a00\u548c\u80fd\u529b\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6765\u81ea\u591a\u4e2a\u6570\u636e\u6e90\u7684\u6570\u636e\u7ec4\u5408\u5230\u4e00\u4e2a\u4eea\u8868\u677f\uff0c\u4f46\u6bcf\u4e00\u4e2a\u9762\u677f\u88ab\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u6570\u636e\u6e90\u3002\u76ee\u524d\u5b98\u65b9\u652f\u6301\u4ee5\u4e0b\u6570\u636e\u6e90\uff1a Alertmanager AWS CloudWatch Azure Monitor Elasticsearch Google Cloud Monitoring Graphite InfluxDB Loki Microsoft SQL Server (MSSQL) MySQL OpenTSDB PostgreSQL Prometheus Jaeger Zipkin Tempo \u6211\u4eec\u8fd9\u91cc\u5f53\u7136\u91cd\u70b9\u9700\u8981\u4ecb\u7ecd\u7684\u5c31\u662f Prometheus \u8fd9\u4e2a\u6570\u636e\u6e90\u4e86\u3002","title":"4 \u4f7f\u7528 Grafana \u521b\u5efa\u53ef\u89c6\u5316\u9762\u677f"},{"location":"chap10/58grafana_init/#_1","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5b89\u88c5 Grafana\uff0cGrafana \u672c\u8eab\u662f\u975e\u5e38\u8f7b\u91cf\u7ea7\u7684\uff0c\u4e0d\u4f1a\u5360\u7528\u5927\u91cf\u8d44\u6e90\uff0c\u6b64\u5916 Grafana \u9700\u8981\u4e00\u4e2a\u6570\u636e\u5e93\u6765\u5b58\u50a8\u5176\u914d\u7f6e\u6570\u636e\uff0c\u6bd4\u5982\u7528\u6237\u3001\u6570\u636e\u6e90\u548c\u4eea\u8868\u76d8\u7b49\uff0c\u76ee\u524d Grafana \u652f\u6301 SQLite\u3001MySQL\u3001PostgreSQL 3 \u79cd\u6570\u636e\u5e93\uff0c\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f SQLite\uff0c\u8be5\u6570\u636e\u5e93\u6587\u4ef6\u4f1a\u5b58\u50a8\u5728 Grafana \u7684\u5b89\u88c5\u4f4d\u7f6e\uff0c\u6240\u4ee5\u9700\u8981\u5bf9 Grafana \u7684\u5b89\u88c5\u76ee\u5f55\u8fdb\u884c\u6301\u4e45\u5316\u3002 \u8981\u5b89\u88c5 Grafana \u7684\u65b9\u5f0f\u6709\u5f88\u591a\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f CentOS \u7cfb\u7edf\uff0c\u53ef\u4ee5\u5728 Grafana \u5b98\u65b9\u4e0b\u8f7d\u9875\u9762\u7b5b\u9009\u5408\u9002\u7684\u7248\u672c https://grafana.com/grafana/download?edition=oss&platform=linux \u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u6765\u8fdb\u884c\u5b89\u88c5\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528 rpm \u5305\u8fdb\u884c\u5b89\u88c5\uff1a \u279c wget https://dl.grafana.com/oss/release/grafana-8.2.1-1.x86_64.rpm \u279c sudo yum install grafana-8.2.1-1.x86_64.rpm \u5b89\u88c5\u5b8c\u6210\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 systemd \u6765\u7ba1\u7406 Grafana\uff1a \u2638 \u279c sudo systemctl daemon-reload \u2638 \u279c sudo systemctl enable grafana-server \u2638 \u279c sudo systemctl start grafana-server \u2638 \u279c sudo systemctl status grafana-server \u9ed8\u8ba4\u7684\u542f\u52a8\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u4f4d\u4e8e /etc/sysconfig/grafana-server \u6587\u4ef6\u4e2d\uff1a \u2638 \u279c cat /etc/sysconfig/grafana-server GRAFANA_USER=grafana GRAFANA_GROUP=grafana GRAFANA_HOME=/usr/share/grafana LOG_DIR=/var/log/grafana DATA_DIR=/var/lib/grafana MAX_OPEN_FILES=10000 CONF_DIR=/etc/grafana CONF_FILE=/etc/grafana/grafana.ini RESTART_ON_UPGRADE=true PLUGINS_DIR=/var/lib/grafana/plugins PROVISIONING_CFG_DIR=/etc/grafana/provisioning # Only used on systemd systems PID_FILE_DIR=/var/run/grafana \u4ece\u4e0a\u9762\u6587\u4ef6\u4e2d\u53ef\u4ee5\u627e\u5230 Grafana \u7684\u5404\u79cd\u6570\u636e\u914d\u7f6e\u8def\u5f84\uff0c\u6bd4\u5982\u6570\u636e\u76ee\u5f55\u3001\u65e5\u5fd7\u76ee\u5f55\u3001\u63d2\u4ef6\u76ee\u5f55\u7b49\u7b49\uff0c\u6b63\u5e38\u542f\u52a8\u5b8c\u6210\u540e Grafana \u4f1a\u76d1\u542c\u5728 3000 \u7aef\u53e3\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 Grafana \u7684 WebUI\u3002 \u9ed8\u8ba4\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e3a admin\uff0c\u4e5f\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6 /etc/grafana/grafana.ini \u4e2d\u914d\u7f6e admin_user \u548c admin_password \u4e24\u4e2a\u53c2\u6570\u6765\u8fdb\u884c\u8986\u76d6\u3002 \u5f53\u7136\u5982\u679c\u6211\u4eec\u60f3\u8981\u90e8\u7f72\u4e00\u4e2a\u9ad8\u53ef\u7528\u7248\u672c\u7684 Grafana \u7684\u8bdd\uff0c\u90a3\u4e48\u4f7f\u7528 SQLite \u6570\u636e\u5e93\u5c31\u4e0d\u884c\u4e86\uff0c\u9700\u8981\u5207\u6362\u5230 MySQL \u6216\u8005 PostgreSQL\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 Grafana \u914d\u7f6e\u7684 [database] \u90e8\u5206\u627e\u5230\u6570\u636e\u5e93\u7684\u76f8\u5173\u914d\u7f6e\uff0cGrafana \u4f1a\u5c06\u6240\u6709\u957f\u671f\u6570\u636e\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u7136\u540e\u90e8\u7f72\u591a\u4e2a Grafana \u5b9e\u4f8b\u4f7f\u7528\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u5373\u53ef\u5b9e\u73b0\u9ad8\u53ef\u7528\u3002","title":"\u5b89\u88c5"},{"location":"chap10/58grafana_init/#_2","text":"\u9762\u677f\uff08Panel\uff09\u662f Grafana \u4e2d\u57fa\u672c\u53ef\u89c6\u5316\u6784\u5efa\u5757\uff0c\u6bcf\u4e2a\u9762\u677f\u90fd\u6709\u4e00\u4e2a\u7279\u5b9a\u4e8e\u9762\u677f\u4e2d\u9009\u62e9\u6570\u636e\u6e90\u7684\u67e5\u8be2\u7f16\u8f91\u5668\uff0c\u6bcf\u4e2a\u9762\u677f\u90fd\u6709\u5404\u79cd\u5404\u6837\u7684\u6837\u5f0f\u548c\u683c\u5f0f\u9009\u9879\uff0c\u9762\u677f\u53ef\u4ee5\u5728\u4eea\u8868\u677f\u4e0a\u62d6\u653e\u548c\u91cd\u65b0\u6392\u5217\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u8c03\u6574\u5927\u5c0f\uff0c\u6240\u4ee5\u8981\u5728 Grafana \u4e0a\u521b\u5efa\u53ef\u89c6\u5316\u7684\u56fe\u8868\uff0c\u9762\u677f\u662f\u6211\u4eec\u5fc5\u987b\u8981\u638c\u63e1\u7684\u77e5\u8bc6\u70b9\u3002 \u6570\u636e\u6e90 \u5728\u521b\u5efa\u9762\u677f\u4e4b\u524d\u6211\u4eec\u9700\u8981\u6307\u5b9a\u6211\u4eec\u7684\u9762\u677f\u6570\u636e\u6765\u6e90\uff0c\u4e5f\u5c31\u662f\u6570\u636e\u6e90\uff0cGrafana \u652f\u6301\u591a\u79cd\u6570\u636e\u6e90\uff0c\u6211\u4eec\u8fd9\u91cc\u5f53\u7136\u4f7f\u7528 Prometheus \u4f5c\u4e3a\u6570\u636e\u6e90\u6765\u8fdb\u884c\u8bf4\u660e\u3002 \u5728 Grafana \u5de6\u4fa7\u5de5\u5177\u680f\u9009\u62e9 Configuration\uff0c\u70b9\u51fb\u5230\u4e0b\u9762\u7684 Data sources\uff0c\u6253\u5f00\u6dfb\u52a0\u6570\u636e\u6e90\u7684\u9875\u9762 \uff1a \u9009\u62e9\u7b2c\u4e00\u9879 Prometheus \u6570\u636e\u6e90\u8fdb\u884c\u914d\u7f6e\uff1a \u5728 HTTP \u9879\u4e2d\u914d\u7f6e URL \u5730\u5740\u4e3a http://localhost:9090 \uff0c\u5176\u5b9e\u5c31\u662f Prometheus \u7684\u5730\u5740\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc Grafana \u548c Prometheus \u90fd\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u6240\u4ee5\u7528 localhost \u5373\u53ef\u8bbf\u95ee\uff0c\u5f53\u7136\u7528 IP \u4e5f\u53ef\u4ee5\uff0c Access \u9009\u62e9\u9ed8\u8ba4\u7684 Server \u4ee3\u7406\u65b9\u5f0f\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e Grafana \u7a0b\u5e8f\u53bb\u8bbf\u95ee Prometheus \u800c\u4e0d\u662f\u5728\u6d4f\u89c8\u5668\u7aef\u53bb\u8bbf\u95ee\uff0c\u5982\u679c Prometheus \u914d\u7f6e\u6709\u8ba4\u8bc1\uff0c\u5219\u8fd8\u9700\u8981\u5728\u4e0b\u53d1\u914d\u7f6e Auth \u4fe1\u606f\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u62c9\u5230\u6700\u4e0b\u65b9\u70b9\u51fb Save & test\uff0c\u63d0\u793a\u6dfb\u52a0\u6210\u529f\u5373\u8868\u9762\u6570\u636e\u6e90\u6dfb\u52a0\u6210\u529f\u4e86\u3002\u7136\u540e\u5728\u6570\u636e\u6e90\u5217\u8868\u4e2d\u5c31\u4f1a\u51fa\u73b0\u6211\u4eec\u521a\u521a\u6dfb\u52a0\u7684 Prometheus \u8fd9\u4e2a\u6570\u636e\u6e90\u4e86\uff1a \u6dfb\u52a0\u9762\u677f \u9762\u677f\u662f\u5c5e\u4e8e\u67d0\u4e00\u4e2a Dashboard \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u521b\u5efa\u4e00\u4e2a Dashboard\uff0c\u5728\u4fa7\u8fb9\u680f\u70b9\u51fb + \u5207\u6362\u5230 Dashboard \u4e0b\u9762\u5f00\u59cb\u521b\u5efa Dashboard\uff1a \u5728\u9ed8\u8ba4\u521b\u5efa\u7684\u65b0\u7684 Dashboard \u4e2d\u5c31\u6709\u4e00\u4e2a\u7a7a\u7684\u9762\u677f\uff0c\u70b9\u51fb Add an empty panel \u5373\u53ef\u5f00\u59cb\u6dfb\u52a0\u9762\u677f\uff1a \u8fdb\u5165\u9762\u677f\u7f16\u8f91\u5668\u540e\u5373\u53ef\u6dfb\u52a0\u9762\u677f\u4e86\uff0c\u4e2d\u95f4\u4f4d\u7f6e\u662f\u67e5\u8be2\u8bed\u53e5\u7684\u663e\u793a\u7ed3\u679c\uff0c\u4e0b\u65b9\u662f\u7528\u4e8e\u914d\u7f6e\u67e5\u8be2\u8bed\u53e5\u7684\u5730\u65b9\uff0c\u5de6\u4fa7\u53ef\u4ee5\u9009\u62e9\u9762\u677f\u663e\u793a\u7684\u7c7b\u578b\uff0c\u9762\u677f\u5143\u4fe1\u606f\uff0c\u6bd4\u5982\u6807\u9898\u3001\u63cf\u8ff0\u4fe1\u606f\u7b49\u3002 \u6bd4\u5982\u6211\u4eec\u73b0\u5728\u5c31\u8981\u6765\u67e5\u8be2\u8282\u70b9\u7684 CPU \u4f7f\u7528\u7387\uff0c\u524d\u9762\u5728 node_exporter \u7ae0\u8282\u4e2d\u5df2\u7ecf\u5b66\u4e60\u4e86\u8be5\u76d1\u63a7\u6570\u636e\u7684\u67e5\u8be2\u8bed\u53e5\u4e3a (1 - sum(rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) by (instance) / sum(rate(node_cpu_seconds_total[5m])) by (instance) ) * 100 \uff0c\u53ea\u9700\u8981\u5c06\u8be5\u8bed\u53e5\u586b\u5145\u5230\u67e5\u8be2\u7684 PromQL \u8bed\u53e5\u4e2d\u5373\u53ef\u5728\u4e0a\u9762\u663e\u793a\u51fa\u76d1\u63a7\u7684\u7ed3\u679c\uff1a \u7528\u540c\u6837\u7684\u65b9\u5f0f\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u67e5\u8be2\u8282\u70b9\u5185\u5b58\u4f7f\u7528\u7387\u7684\u9762\u677f\uff1a \u6dfb\u52a0\u53c2\u6570 \u73b0\u5728\u6211\u4eec\u5728\u4e00\u4e2a Dashboard \u4e2d\u6dfb\u52a0\u4e86\u4e24\u4e2a Panel\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u660e\u663e\u770b\u5230\u4f1a\u76f4\u63a5\u5c06\u6240\u6709\u7684\u8282\u70b9\u4fe1\u606f\u5c55\u793a\u5728\u540c\u4e00\u4e2a\u9762\u677f\u4e2d\uff0c\u4f46\u662f\u5982\u679c\u6709\u975e\u5e38\u591a\u7684\u8282\u70b9\u7684\u8bdd\u6570\u636e\u91cf\u5c31\u975e\u5e38\u5927\u4e86\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u6700\u597d\u7684\u65b9\u5f0f\u662f\u5c06\u8282\u70b9\u5f53\u6210\u53c2\u6570\uff0c\u53ef\u4ee5\u8ba9\u7528\u6237\u81ea\u5df1\u53bb\u9009\u62e9\u8981\u67e5\u770b\u54ea\u4e00\u4e2a\u8282\u70b9\u7684\u76d1\u63a7\u4fe1\u606f\uff0c\u8981\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u6211\u4eec\u5c31\u9700\u8981\u53bb\u6dfb\u52a0\u4e00\u4e2a\u4ee5\u8282\u70b9\u4e3a\u53c2\u6570\u7684\u53d8\u91cf\u6765\u53bb\u67e5\u8be2\u76d1\u63a7\u6570\u636e\u3002 \u70b9\u51fb Dashboard \u9875\u9762\u53f3\u4e0a\u65b9\u7684 Dashboard settings \u6309\u94ae\uff0c\u8fdb\u5165\u914d\u7f6e\u9875\u9762\uff1a \u5728\u8be5 Settings \u9875\u9762\u53ef\u4ee5\u6765\u5bf9\u6574\u4e2a Dashboard \u8fdb\u884c\u914d\u7f6e\uff0c\u6bd4\u5982\u540d\u79f0\u3001\u6807\u7b7e\u3001\u53d8\u91cf\u7b49\uff1a \u8fd9\u91cc\u6211\u4eec\u70b9\u51fb\u5de6\u8fb9\u7684 Variables \u6dfb\u52a0\u4e00\u4e2a\u53d8\u91cf\uff0c\u53d8\u91cf\u652f\u6301\u66f4\u5177\u4ea4\u4e92\u6027\u548c\u52a8\u6001\u6027\u7684\u4eea\u8868\u677f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5b83\u4eec\u7684\u4f4d\u7f6e\u4f7f\u7528\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u5728\u6307\u6807\u67e5\u8be2\u4e2d\u786c\u7f16\u7801\uff0c\u53d8\u91cf\u663e\u793a\u4e3a Dashboard \u9876\u90e8\u7684\u4e0b\u62c9\u5217\u8868\uff0c\u8fd9\u4e9b\u4e0b\u62c9\u5217\u8868\u53ef\u4ee5\u8f7b\u677e\u66f4\u6539\u4eea\u8868\u677f\u4e2d\u663e\u793a\u7684\u6570\u636e\u3002 \u4e3a\u4e86\u80fd\u591f\u9009\u62e9\u8282\u70b9\u6570\u636e\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a instance \u7684\u53d8\u91cf\u540d\uff0c\u4f46\u662f\u5b9a\u4e49\u7684\u8fd9\u4e2a\u53d8\u91cf\u503c\u4ece\u54ea\u4e2a\u5730\u65b9\u83b7\u53d6\u5462\uff1f \u76d1\u63a7\u8282\u70b9\u7684\u76f8\u5173\u6307\u6807\u662f\u6765\u6e90\u4e8e\u540d\u4e3a node-exporter \u7684\u4efb\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u8be2 up \u6765\u83b7\u53d6\u6240\u6709\u7684\u76d1\u63a7\u5b9e\u4f8b\uff1a \u8981\u60f3\u83b7\u53d6\u5230 instance \u6807\u7b7e\u4e2d\u7684\u503c\uff0c\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f .*instance=\"(.*?)\".* \u6765\u83b7\u53d6\u5b9e\u4f8b\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u6210\u529f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u56de\u5230 Dashboard \u9875\u9762\u5c31\u53ef\u4ee5\u770b\u5230\u591a\u4e86\u4e00\u4e2a\u9009\u62e9\u8282\u70b9\u7684\u4e0b\u62c9\u6846\uff1a \u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u7684\u9762\u677f\u5e76\u4e0d\u4f1a\u968f\u7740\u6211\u4eec\u4e0b\u62c9\u6846\u7684\u9009\u62e9\u800c\u53d8\u5316\uff0c\u6211\u4eec\u9700\u8981\u5c06 instance \u8fd9\u4e2a\u53d8\u91cf\u4f20\u5165\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u6bd4\u5982\u91cd\u65b0\u4fee\u6539CPU\u4f7f\u7528\u7387\u7684\u67e5\u8be2\u8bed\u53e5\uff1a \u7528\u540c\u6837\u7684\u65b9\u5f0f\u7ed9\u5185\u5b58\u4f7f\u7528\u7387\u6dfb\u52a0\u6839\u636e\u8282\u70b9\u8fc7\u6ee4\u7684\u53c2\u6570\uff1a \u56de\u5230 Dashboard \u9875\u9762\u5c31\u53ef\u4ee5\u6839\u636e\u6211\u4eec\u7684\u4e0b\u62c9\u6846\u6765\u9009\u62e9\u9700\u8981\u76d1\u63a7\u7684\u8282\u70b9\u6570\u636e\u4e86\uff0c\u5b9a\u4e49\u53c2\u6570\u7684\u65f6\u5019\u5982\u679c\u9009\u62e9\u4e86\u53ef\u4ee5\u9009\u62e9\u6240\u6709\uff0c\u540c\u6837\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u8282\u70b9\u7684\u6570\u636e\uff1a","title":"\u521b\u5efa\u9762\u677f"},{"location":"chap10/5Grafana_Loki/","text":"5 \u4f7f\u7528\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\u6269\u5c55 Grafana Loki Loki \u7531\u591a\u4e2a\u5fae\u670d\u52a1\u7ec4\u4ef6\u6784\u5efa\u800c\u6210\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u6c34\u5e73\u6269\u5c55\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u8fd0\u884c\uff0cLoki \u7684\u72ec\u7279\u8bbe\u8ba1\u53ef\u4ee5\u5c06\u6574\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4ee3\u7801\u7f16\u8bd1\u6210\u5355\u4e2a\u4e8c\u8fdb\u5236\u6216 Docker \u6620\u50cf\uff0c\u5355\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u884c\u4e3a\u7531 -target \u547d\u4ee4\u884c\u6807\u5fd7\u63a7\u5236\u3002 \u5355\u4f53\u6a21\u5f0f \u6700\u7b80\u5355\u7684\u64cd\u4f5c\u6a21\u5f0f\u662f\u8bbe\u7f6e -target=all \uff0c\u8fd9\u662f\u9ed8\u8ba4\u7684\u65b9\u5f0f\uff0c \u4e0d\u9700\u8981\u6307\u5b9a\uff0c\u8fd9\u5c31\u662f\u5355\u4f53\u6a21\u5f0f \uff0c\u5b83\u4ee5\u5355\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216 Docker \u6620\u50cf\u7684\u5f62\u5f0f\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c Loki \u7684\u6240\u6709\u5fae\u670d\u52a1\u7ec4\u4ef6\u3002 \u5355\u4f53\u6a21\u5f0f\u5bf9\u4e8e\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Loki \u4ee5\u53ca\u6bcf\u5929\u6570\u636e\u91cf\u7ea6100GB\u7684\u8bfb\u5199\u91cf\u975e\u5e38\u6709\u7528\u3002 \u5c06\u5355\u4f53\u6a21\u5f0f\u90e8\u7f72\u6c34\u5e73\u6269\u5c55\u81f3\u66f4\u591a\u5b9e\u4f8b\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5171\u4eab\u5bf9\u8c61\u5b58\u50a8\uff0c\u914d\u7f6e memberlist_config \u5c5e\u6027\u5728\u6240\u6709\u5b9e\u4f8b\u4e4b\u95f4\u5171\u4eab\u72b6\u6001\u3002 \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 memberlist_config \u914d\u7f6e\u548c\u5171\u4eab\u5bf9\u8c61\u5b58\u50a8\u8fd0\u884c\u4e24\u4e2a Loki \u5b9e\u4f8b\u6765\u914d\u7f6e\u9ad8\u53ef\u7528\u6027 \u3002 \u4ee5\u5faa\u73af\u65b9\u5f0f\u5c06\u6d41\u91cf\u8def\u7531\u5230\u6240\u6709 Loki \u5b9e\u4f8b \u3002\u5e76\u884c\u67e5\u8be2\u53d7\u9650\u4e8e\u5b9e\u4f8b\u6570\u91cf\u548c\u5b9a\u4e49\u7684\u67e5\u8be2\u5e76\u884c\u5ea6\u3002 \u5355\u4f53\u6a21\u5f0f\u7684\u5b89\u88c5\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 grafana/loki-stack \u8fd9\u4e2a Helm Chart \u5305\u5b89\u88c5\u5373\u53ef\u3002 \u8bfb\u5199\u5206\u79bb\u6a21\u5f0f \u5982\u679c\u4f60\u6bcf\u5929\u7684\u65e5\u5fd7\u91cf\u8d85\u8fc7\u51e0\u767e GB\uff0c\u6216\u8005\u4f60\u60f3\u8fdb\u884c\u8bfb\u5199\u5206\u79bb\uff0cLoki \u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u53ef\u6269\u5c55\u90e8\u7f72\u6a21\u5f0f\u3002\u8fd9\u79cd\u90e8\u7f72\u6a21\u5f0f\u53ef\u4ee5\u6269\u5c55\u5230\u6bcf\u5929\u6570 TB \u751a\u81f3\u66f4\u591a\u7684\u65e5\u5fd7\u3002 \u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c Loki \u7684\u7ec4\u4ef6\u5fae\u670d\u52a1\u88ab\u7ed1\u5b9a\u5230\u4e24\u4e2a\u76ee\u6807\u4e2d\uff1a -target=read \u548c -target=write \uff0cBoltDB compactor \u670d\u52a1\u5c06\u4f5c\u4e3a\u8bfb\u53d6\u76ee\u6807\u7684\u4e00\u90e8\u5206\u8fd0\u884c \u3002 \u5206\u79bb\u8bfb\u5199\u8def\u5f84\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a \u901a\u8fc7\u63d0\u4f9b\u4e13\u7528\u8282\u70b9\u63d0\u9ad8\u5199\u5165\u8def\u5f84\u7684\u53ef\u7528\u6027 \u53ef\u5355\u72ec\u6269\u5c55\u8bfb\u53d6\u8def\u5f84\u4ee5\u6309\u9700\u6dfb\u52a0/\u5220\u9664\u67e5\u8be2\u6027\u80fd \u8fd9\u79cd\u8bfb\u5199\u5206\u79bb\u7684\u6a21\u5f0f\u9700\u8981\u5728 Loki \u524d\u9762\u6709\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u5b83\u5c06 /loki/api/v1/push \u6d41\u91cf\u8def\u7531\u5230\u5199\u5165\u8282\u70b9\uff0c\u6240\u6709\u5176\u4ed6\u8bf7\u6c42\u90fd\u8f6c\u5230\u8bfb\u53d6\u8282\u70b9\uff0c\u6d41\u91cf\u5e94\u8be5\u4ee5\u5faa\u73af\u65b9\u5f0f\u53d1\u9001\u3002 \u5b89\u88c5 \u6211\u4eec\u540c\u6837\u4f7f\u7528 Helm Chart \u8fdb\u884c\u5b89\u88c5\uff0c\u9996\u5148\u83b7\u53d6\u8bfb\u5199\u5206\u79bb\u6a21\u578b\u7684 Chart \u5305\uff1a $ helm repo add grafana https://grafana.github.io/helm-charts $ helm pull grafana/loki-simple-scalable --untar --version 1.4.1 $ cd loki-simple-scalable \u8be5 Chart \u5305\u652f\u6301\u4e0b\u8868\u4e2d\u663e\u793a\u7684\u7ec4\u4ef6\uff0cIngester\u3001distributor\u3001querier \u548c query-frontend \u90fd\u4f1a\u5b89\u88c5\uff0c\u5176\u4ed6\u7ec4\u4ef6\u662f\u53ef\u9009\u7684 \u3002 \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 MinIO \u6765\u4f5c\u4e3a\u8fdc\u7a0b\u6570\u636e\u5b58\u50a8\uff0c\u5206\u522b\u914d\u7f6e\u8bfb\u548c\u5199\u7684 Loki \u5b9e\u4f8b\u526f\u672c\u6570\u4e3a2\uff0c\u4e3a\u4e86\u5728 Loki \u524d\u9762\u6dfb\u52a0\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u9700\u8981\u5f00\u542f Gateway\uff0c\u5bf9\u5e94\u7684 Values \u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # ci/minio-values.yaml loki: commonConfig: path_prefix: /var/loki replication_factor: 2 authEnabled: false # Configuration for the write write: # -- Number of replicas for the write replicas: 3 affinity: | podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 podAffinityTerm: labelSelector: matchLabels: {{- include \"loki.writeSelectorLabels\" . | nindent 12 }} topologyKey: kubernetes.io/hostname persistence: size: 1Gi storageClass: local-path # Configuration for the read node(s) read: # -- Number of replicas for the read replicas: 3 affinity: | podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 podAffinityTerm: labelSelector: matchLabels: {{- include \"loki.readSelectorLabels\" . | nindent 12 }} topologyKey: kubernetes.io/hostname persistence: size: 1Gi storageClass: local-path # Configuration for the gateway gateway: # -- Specifies whether the gateway should be enabled enabled: true # ------------------------------------- # Configuration for `minio` child chart # ------------------------------------- minio: enabled: true accessKey: enterprise-logs secretKey: supersecret service: type: NodePort nodePort: 32000 buckets: - name: chunks policy: none purge: false - name: ruler policy: none purge: false - name: admin policy: none purge: false persistence: size: 1Gi storageClass: local-path resources: requests: cpu: 100m memory: 256Mi \u7136\u540e\u4f7f\u7528\u4e0a\u9762\u7684 values \u6587\u4ef6\u6765\u5b89\u88c5\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\u7684 Loki\uff1a $ helm upgrade --install loki -n logging -f ci/minio-values.yaml . Release \"loki\" does not exist. Installing it now. NAME: loki LAST DEPLOYED: Fri Jun 17 14:53:20 2022 NAMESPACE: logging STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: *********************************************************************** Welcome to Grafana Loki Chart version: 1.4.1 Loki version: 2.5.0 *********************************************************************** Installed components: * gateway * read * write This chart requires persistence and object storage to work correctly. Queries will not work unless you provide a `loki.config.common.storage` section with a valid object storage (and the default `filesystem` storage set to `null`), as well as a valid `loki.config.schema_config.configs` with an `object_store` that matches the common storage section. For example, to use MinIO as your object storage backend: loki: config: common: storage: filesystem: null s3: endpoint: minio.minio.svc.cluster.local:9000 insecure: true bucketnames: loki-data access_key_id: loki secret_access_key: supersecret s3forcepathstyle: true schema_config: configs: - from: \"2020-09-07\" store: boltdb-shipper object_store: s3 schema: v11 index: period: 24h prefix: loki_index_ \u5b89\u88c5\u5b8c\u6210\u540e\u67e5\u770b Pod \u72b6\u6001\u662f\u5426\u6b63\u5e38\uff1a $ kubectl get pods -n logging NAME READY STATUS RESTARTS AGE loki-gateway-67f76958d7-bq46l 1/1 Running 0 91m loki-minio-87c9bc6f5-jxdcn 1/1 Running 0 70m loki-read-0 1/1 Running 0 81s loki-read-1 1/1 Running 0 81s loki-read-2 1/1 Running 0 81s loki-write-0 1/1 Running 0 81s loki-write-1 1/1 Running 0 81s loki-write-2 1/1 Running 0 81s \u53ef\u4ee5\u770b\u5230\u5206\u522b\u90e8\u7f72\u4e86\u4e24\u4e2a\u526f\u672c\u7684 write \u548c read \u7684 Loki\uff0c\u53e6\u5916\u8fd8\u6709\u4e00\u4e2a gateway \u7684 Pod\uff0cgateway \u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a nginx \u5e94\u7528\uff0c\u7528\u6765\u5c06 /loki/api/v1/push \u8bf7\u6c42\u8def\u7531\u5230 write \u8282\u70b9\u53bb\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b gateway \u7684\u914d\u7f6e\u6765\u9a8c\u8bc1\uff1a $ kubectl get cm -n logging loki-gateway -o yaml apiVersion: v1 data: nginx.conf: | worker_processes 5; ## Default: 1 error_log /dev/stderr; pid /tmp/nginx.pid; worker_rlimit_nofile 8192; events { worker_connections 4096; ## Default: 1024 } http { client_body_temp_path /tmp/client_temp; proxy_temp_path /tmp/proxy_temp_path; fastcgi_temp_path /tmp/fastcgi_temp; uwsgi_temp_path /tmp/uwsgi_temp; scgi_temp_path /tmp/scgi_temp; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] $status ' '\"$request\" $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log /dev/stderr main; sendfile on; tcp_nopush on; resolver kube-dns.kube-system.svc.cluster.local; server { listen 8080; location = / { return 200 'OK'; auth_basic off; } \\ location = /api/prom/push { proxy_pass http://loki-write.logging.svc.cluster.local:3100$request_uri; } location = /api/prom/tail { proxy_pass http://loki-read.logging.svc.cluster.local:3100$request_uri; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; } location ~ /api/prom/.* { proxy_pass http://loki-read.logging.svc.cluster.local:3100$request_uri; } location = /loki/api/v1/push { proxy_pass http://loki-write.logging.svc.cluster.local:3100$request_uri; } location = /loki/api/v1/tail { proxy_pass http://loki-read.logging.svc.cluster.local:3100$request_uri; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; } location ~ /loki/api/.* { proxy_pass http://loki-read.logging.svc.cluster.local:3100$request_uri; } } } kind: ConfigMap metadata: annotations: meta.helm.sh/release-name: loki meta.helm.sh/release-namespace: logging creationTimestamp: \"2022-06-17T06:53:22Z\" labels: app.kubernetes.io/component: gateway app.kubernetes.io/instance: loki app.kubernetes.io/managed-by: Helm app.kubernetes.io/name: loki app.kubernetes.io/version: 2.5.0 helm.sh/chart: loki-simple-scalable-1.4.1 name: loki-gateway namespace: logging resourceVersion: \"4968787\" uid: ba9ba1c0-8561-41cb-8b55-287f352b5ee8 \u4e0a\u9762\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684 Nginx \u914d\u7f6e\uff0c\u4ece\u914d\u7f6e\u53ef\u4ee5\u770b\u51fa\u4f1a\u628a\u8bf7\u6c42 /api/prom/push \u548c /loki/api/v1/push \u8fd9\u4e24\u4e2a Push API \u4ee3\u7406\u5230 http://loki-write.logging.svc.cluster.local:3100$request_uri ;\uff0c \u4e5f\u5c31\u662f\u4e0a\u9762\u7684\u4e24\u4e2a loki-write \u8282\u70b9\uff0c\u800c\u8bfb\u53d6\u76f8\u5173\u7684\u63a5\u53e3\u88ab\u4ee3\u7406\u5230 loki-read \u8282\u70b9\uff0c\u7136\u540e loki-write \u542f\u52a8\u53c2\u6570\u914d\u7f6e -target=write \uff0c loki-read \u542f\u52a8\u53c2\u6570\u914d\u7f6e -target=read`\uff0c\u8fd9\u6837\u53bb\u5b9e\u73b0\u8bfb\u5199\u5206\u79bb\u3002 \u4e0d\u8fc7\u8bfb\u5199\u7684\u5e94\u7528\u662f\u5171\u4eab\u540c\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\uff0c\u5982\u4e0b\u6240\u793a\uff1a $ kubectl get cm -n logging loki -o yaml apiVersion: v1 data: config.yaml: | auth_enabled: false common: path_prefix: /var/loki replication_factor: 2 storage: s3: access_key_id: enterprise-logs bucketnames: chunks endpoint: loki-minio.logging.svc:9000 insecure: true s3forcepathstyle: true secret_access_key: supersecret limits_config: enforce_metric_name: false max_cache_freshness_per_query: 10m reject_old_samples: true reject_old_samples_max_age: 168h split_queries_by_interval: 15m memberlist: join_members: - loki-memberlist ruler: storage: s3: bucketnames: ruler schema_config: configs: - from: \"2022-06-17\" index: period: 24h prefix: loki_index_ object_store: s3 schema: v12 store: boltdb-shipper server: grpc_listen_port: 9095 http_listen_port: 3100 ...... \u5176\u4e2d common.storage.s3 \u6307\u5b9a\u7684\u662f MinIO \u7684\u76f8\u5173\u914d\u7f6e\uff0c\u901a\u8fc7 memberlist.join_members \u6765\u6307\u5b9a\u6210\u5458\uff0c\u5176\u5b9e\u5c31\u662f\u6240\u6709\u7684\u8bfb\u5199\u8282\u70b9\uff1a $ kubectl get svc loki-memberlist -n logging -o wide NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE SELECTOR loki-memberlist ClusterIP None <none> 7946/TCP 54m app.kubernetes.io/instance=loki,app.kubernetes.io/name=loki,app.kubernetes.io/part-of=memberlist $ kubectl get pods -n logging -l app.kubernetes.io/part-of=memberlist NAME READY STATUS RESTARTS AGE loki-read-0 1/1 Running 0 32s loki-read-1 1/1 Running 0 72s loki-read-2 1/1 Running 0 115s loki-write-0 1/1 Running 0 4s loki-write-1 1/1 Running 0 55s loki-write-2 1/1 Running 0 116s \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5b8c\u6210\u4e86 Loki \u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\u7684\u90e8\u7f72\u3002 Promtail\u5199\u6570\u636e \u4e3a\u4e86\u9a8c\u8bc1\u5e94\u7528\u662f\u5426\u6b63\u5e38\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u5b89\u88c5 Promtail \u548c Grafana \u6765\u8fdb\u884c\u6570\u636e\u7684\u8bfb\u5199\u3002 \u83b7\u53d6 promtail \u7684 Chart \u5305\u5e76\u89e3\u538b\uff1a $ helm pull grafana/promtail --untar $ cd promtail \u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 values \u6587\u4ef6\uff1a # ci/simple-values.yaml rbac: pspEnabled: false config: lokiAddress: http://loki-gateway/loki/api/v1/push \u6ce8\u610f\u6211\u4eec\u9700\u8981\u5c06 Promtail \u4e2d\u914d\u7f6e\u7684 Loki \u5730\u5740\u4e3a http://loki-gateway/loki/api/v1/push \uff0c \u8fd9\u6837\u5c31\u662f Promtail \u5c06\u65e5\u5fd7\u6570\u636e\u9996\u5148\u53d1\u9001\u5230 Gateway \u4e0a\u9762\u53bb\uff0c\u7136\u540e Gateway \u6839\u636e\u6211\u4eec\u7684 Endpoints \u53bb\u8f6c\u53d1\u7ed9 write \u8282\u70b9 \uff0c\u4f7f\u7528\u4e0a\u9762\u7684 values \u6587\u4ef6\u6765\u5b89\u88c5 Promtail\uff1a $ helm upgrade --install promtail -n logging -f ci/simple-values.yaml . Release \"promtail\" does not exist. Installing it now. NAME: promtail LAST DEPLOYED: Fri Jun 17 16:01:08 2022 NAMESPACE: logging STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: *********************************************************************** Welcome to Grafana Promtail Chart version: 5.1.0 Promtail version: 2.5.0 *********************************************************************** Verify the application is working by running these commands: * kubectl --namespace logging port-forward daemonset/promtail 3101 * curl http://127.0.0.1:3101/metrics \u6b63\u5e38\u5b89\u88c5\u5b8c\u6210\u540e\u4f1a\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a promtail\uff1a $ kubectl get pods -n logging -l app.kubernetes.io/name=promtail NAME READY STATUS RESTARTS AGE promtail-5r9hl 1/1 Running 0 2m25s promtail-85mk4 1/1 Running 0 2m25s promtail-qlfnv 1/1 Running 0 2m25s \u6b63\u5e38 promtail \u5c31\u5df2\u7ecf\u5728\u5f00\u59cb\u91c7\u96c6\u6240\u5728\u8282\u70b9\u4e0a\u7684\u6240\u6709\u5bb9\u5668\u65e5\u5fd7\u4e86\uff0c \u7136\u540e\u5c06\u65e5\u5fd7\u6570\u636e Push \u7ed9 gateway\uff0cgateway \u8f6c\u53d1\u7ed9 write \u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b gateway \u7684\u65e5\u5fd7\uff1a $ kubectl logs -f loki-gateway-67f76958d7-bq46l -n logging 10.244.1.170 - - [17/Jun/2022:08:09:03 +0000] 204 \"POST /loki/api/v1/push HTTP/1.1\" 0 \"-\" \"promtail/2.5.0\" \"-\" 10.244.1.170 - - [17/Jun/2022:08:09:04 +0000] 204 \"POST /loki/api/v1/push HTTP/1.1\" 0 \"-\" \"promtail/2.5.0\" \"-\" 10.244.2.205 - - [17/Jun/2022:08:09:05 +0000] 204 \"POST /loki/api/v1/push HTTP/1.1\" 0 \"-\" \"promtail/2.5.0\" \"-\" ...... \u53ef\u4ee5\u770b\u5230 gateway \u73b0\u5728\u5728\u4e00\u76f4\u63a5\u63a5\u6536\u7740 /loki/api/v1/push \u7684\u8bf7\u6c42\uff0c\u4e5f\u5c31\u662f promtail \u53d1\u9001\u8fc7\u6765\u7684\uff0c\u6b63\u5e38\u6765\u8bf4\u73b0\u5728\u65e5\u5fd7\u6570\u636e\u5df2\u7ecf\u5206\u53d1\u7ed9 write \u8282\u70b9\u4e86\uff0c write \u8282\u70b9\u5c06\u6570\u636e\u5b58\u50a8\u5728\u4e86 minio \u4e2d\uff0c\u53ef\u4ee5\u53bb\u67e5\u770b\u4e0b minio \u4e2d\u5df2\u7ecf\u6709\u65e5\u5fd7\u6570\u636e\u4e86\uff0c\u524d\u9762\u5b89\u88c5\u7684\u65f6\u5019\u4e3a minio \u670d\u52a1\u6307\u5b9a\u4e86\u4e00\u4e2a 32000 \u7684 NodePort \u7aef\u53e3\uff1a \u767b\u5f55\u4fe1\u606f\u4e3a\uff1a accessKey: enterprise-logs secretKey: supersecret \u53ef\u4ee5\u770b\u5230 minio \u7684 chunks \u8fd9\u4e2a bucket \u4e2d\u5e76\u6ca1\u6709\u65e5\u5fd7\u6570\u636e\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u7684 bucket \u9ed8\u8ba4\u53ea\u6709\u8bfb\u53d6\u7684\u6743\u9650\uff0c \u6211\u4eec\u53ef\u4ee5\u5c06\u8be5 bucket \u4fee\u6539\u4e3a\u5177\u6709\u8bfb\u5199\u7684\u6743\u9650 \uff1a \u6b63\u5e38\u4fee\u6539\u540e\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a fake \u7684\u76ee\u5f55\u4e86 \uff0c\u8fd9\u662f\u9ed8\u8ba4\u6ca1\u6709\u63d0\u4f9b\u591a\u79df\u6237\u7684\u6570\u636e\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u4e0b\u9762\u5b58\u50a8\u7740\u65e5\u5fd7\u7684 chunk \u6570\u636e\uff1a \u8fd9\u662f Loki \u65e5\u5fd7\u7684\u5199\u5165\u7684\u8def\u5f84\u3002 Grafana\u8bfb\u6570\u636e \u4e0b\u9762\u6211\u4eec\u6765\u9a8c\u8bc1\u4e0b\u8bfb\u53d6\u8def\u5f84\uff0c\u5b89\u88c5 Grafana \u5bf9\u63a5 Loki\uff1a $ helm pull grafana/grafana --untar $ cd grafana \u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684 values \u914d\u7f6e\u6587\u4ef6\uff1a lues \u914d\u7f6e\u6587\u4ef6\uff1a # ci/simple-values.yaml service: type: NodePort nodePort: 32001 rbac: pspEnabled: false persistence: enabled: true storageClassName: local-path accessModes: - ReadWriteOnce size: 1Gi \u76f4\u63a5\u4f7f\u7528\u4e0a\u9762\u7684 values \u6587\u4ef6\u5b89\u88c5 Grafana\uff1a $ helm upgrade --install grafana -n logging -f ci/simple-values.yaml . Release \"grafana\" has been upgraded. Happy Helming! NAME: grafana LAST DEPLOYED: Fri Jun 17 17:00:24 2022 NAMESPACE: logging STATUS: deployed REVISION: 2 NOTES: 1. Get your 'admin' user password by running: kubectl get secret --namespace logging grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo 2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster: grafana.logging.svc.cluster.local Get the Grafana URL to visit by running these commands in the same shell: export NODE_PORT=$(kubectl get --namespace logging -o jsonpath=\"{.spec.ports[0].nodePort}\" services grafana) export NODE_IP=$(kubectl get nodes --namespace logging -o jsonpath=\"{.items[0].status.addresses[0].address}\") echo http://$NODE_IP:$NODE_PORT 3. Login with the password from step 1 and the username: admin \u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u63d0\u793a\u4e2d\u7684\u547d\u4ee4\u83b7\u53d6\u767b\u5f55\u5bc6\u7801\uff1a $ kubectl get secret --namespace logging grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo \u7136\u540e\u4f7f\u7528\u4e0a\u9762\u7684\u5bc6\u7801\u548c admin \u7528\u6237\u540d\u767b\u5f55 Grafana\uff1a \u767b\u5f55\u540e\u8fdb\u5165 Grafana \u6dfb\u52a0\u4e00\u4e2a\u6570\u636e\u6e90\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u8981\u586b\u5199 gateway \u7684\u5730\u5740 http://loki-gateway\uff1a \u4fdd\u5b58\u6570\u636e\u6e90\u540e\uff0c\u53ef\u4ee5\u8fdb\u5165 Explore \u9875\u9762\u8fc7\u6ee4\u65e5\u5fd7\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u6765\u5b9e\u65f6\u67e5\u770b gateway \u8fd9\u4e2a\u5e94\u7528\u7684\u65e5\u5fd7\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5982\u679c\u4f60\u80fd\u770b\u5230\u6700\u65b0\u7684\u65e5\u5fd7\u6570\u636e\u90a3\u8bf4\u660e\u6211\u4eec\u90e8\u7f72\u6210\u529f\u4e86\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\u7684 Loki\uff0c\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8 Loki \u7684\u6027\u80fd\u548c\u5bb9\u91cf\uff0c\u5982\u679c\u8fd9\u79cd\u6a21\u5f0f\u8fd8\u4e0d\u80fd\u6ee1\u8db3\u4f60\u7684\u6570\u636e\u91cf\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u5fae\u670d\u52a1\u6a21\u5f0f\u6765\u90e8\u7f72 Loki \u4e86","title":"5 \u4f7f\u7528\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\u6269\u5c55 Grafana Loki"},{"location":"chap10/5Grafana_Loki/#5-grafana-loki","text":"Loki \u7531\u591a\u4e2a\u5fae\u670d\u52a1\u7ec4\u4ef6\u6784\u5efa\u800c\u6210\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u6c34\u5e73\u6269\u5c55\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u8fd0\u884c\uff0cLoki \u7684\u72ec\u7279\u8bbe\u8ba1\u53ef\u4ee5\u5c06\u6574\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4ee3\u7801\u7f16\u8bd1\u6210\u5355\u4e2a\u4e8c\u8fdb\u5236\u6216 Docker \u6620\u50cf\uff0c\u5355\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u884c\u4e3a\u7531 -target \u547d\u4ee4\u884c\u6807\u5fd7\u63a7\u5236\u3002","title":"5 \u4f7f\u7528\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\u6269\u5c55 Grafana Loki"},{"location":"chap10/5Grafana_Loki/#_1","text":"\u6700\u7b80\u5355\u7684\u64cd\u4f5c\u6a21\u5f0f\u662f\u8bbe\u7f6e -target=all \uff0c\u8fd9\u662f\u9ed8\u8ba4\u7684\u65b9\u5f0f\uff0c \u4e0d\u9700\u8981\u6307\u5b9a\uff0c\u8fd9\u5c31\u662f\u5355\u4f53\u6a21\u5f0f \uff0c\u5b83\u4ee5\u5355\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216 Docker \u6620\u50cf\u7684\u5f62\u5f0f\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c Loki \u7684\u6240\u6709\u5fae\u670d\u52a1\u7ec4\u4ef6\u3002 \u5355\u4f53\u6a21\u5f0f\u5bf9\u4e8e\u5feb\u901f\u5f00\u59cb\u4f7f\u7528 Loki \u4ee5\u53ca\u6bcf\u5929\u6570\u636e\u91cf\u7ea6100GB\u7684\u8bfb\u5199\u91cf\u975e\u5e38\u6709\u7528\u3002 \u5c06\u5355\u4f53\u6a21\u5f0f\u90e8\u7f72\u6c34\u5e73\u6269\u5c55\u81f3\u66f4\u591a\u5b9e\u4f8b\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5171\u4eab\u5bf9\u8c61\u5b58\u50a8\uff0c\u914d\u7f6e memberlist_config \u5c5e\u6027\u5728\u6240\u6709\u5b9e\u4f8b\u4e4b\u95f4\u5171\u4eab\u72b6\u6001\u3002 \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 memberlist_config \u914d\u7f6e\u548c\u5171\u4eab\u5bf9\u8c61\u5b58\u50a8\u8fd0\u884c\u4e24\u4e2a Loki \u5b9e\u4f8b\u6765\u914d\u7f6e\u9ad8\u53ef\u7528\u6027 \u3002 \u4ee5\u5faa\u73af\u65b9\u5f0f\u5c06\u6d41\u91cf\u8def\u7531\u5230\u6240\u6709 Loki \u5b9e\u4f8b \u3002\u5e76\u884c\u67e5\u8be2\u53d7\u9650\u4e8e\u5b9e\u4f8b\u6570\u91cf\u548c\u5b9a\u4e49\u7684\u67e5\u8be2\u5e76\u884c\u5ea6\u3002 \u5355\u4f53\u6a21\u5f0f\u7684\u5b89\u88c5\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 grafana/loki-stack \u8fd9\u4e2a Helm Chart \u5305\u5b89\u88c5\u5373\u53ef\u3002","title":"\u5355\u4f53\u6a21\u5f0f"},{"location":"chap10/5Grafana_Loki/#_2","text":"\u5982\u679c\u4f60\u6bcf\u5929\u7684\u65e5\u5fd7\u91cf\u8d85\u8fc7\u51e0\u767e GB\uff0c\u6216\u8005\u4f60\u60f3\u8fdb\u884c\u8bfb\u5199\u5206\u79bb\uff0cLoki \u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u53ef\u6269\u5c55\u90e8\u7f72\u6a21\u5f0f\u3002\u8fd9\u79cd\u90e8\u7f72\u6a21\u5f0f\u53ef\u4ee5\u6269\u5c55\u5230\u6bcf\u5929\u6570 TB \u751a\u81f3\u66f4\u591a\u7684\u65e5\u5fd7\u3002 \u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c Loki \u7684\u7ec4\u4ef6\u5fae\u670d\u52a1\u88ab\u7ed1\u5b9a\u5230\u4e24\u4e2a\u76ee\u6807\u4e2d\uff1a -target=read \u548c -target=write \uff0cBoltDB compactor \u670d\u52a1\u5c06\u4f5c\u4e3a\u8bfb\u53d6\u76ee\u6807\u7684\u4e00\u90e8\u5206\u8fd0\u884c \u3002 \u5206\u79bb\u8bfb\u5199\u8def\u5f84\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a \u901a\u8fc7\u63d0\u4f9b\u4e13\u7528\u8282\u70b9\u63d0\u9ad8\u5199\u5165\u8def\u5f84\u7684\u53ef\u7528\u6027 \u53ef\u5355\u72ec\u6269\u5c55\u8bfb\u53d6\u8def\u5f84\u4ee5\u6309\u9700\u6dfb\u52a0/\u5220\u9664\u67e5\u8be2\u6027\u80fd \u8fd9\u79cd\u8bfb\u5199\u5206\u79bb\u7684\u6a21\u5f0f\u9700\u8981\u5728 Loki \u524d\u9762\u6709\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u5b83\u5c06 /loki/api/v1/push \u6d41\u91cf\u8def\u7531\u5230\u5199\u5165\u8282\u70b9\uff0c\u6240\u6709\u5176\u4ed6\u8bf7\u6c42\u90fd\u8f6c\u5230\u8bfb\u53d6\u8282\u70b9\uff0c\u6d41\u91cf\u5e94\u8be5\u4ee5\u5faa\u73af\u65b9\u5f0f\u53d1\u9001\u3002","title":"\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f"},{"location":"chap10/5Grafana_Loki/#_3","text":"\u6211\u4eec\u540c\u6837\u4f7f\u7528 Helm Chart \u8fdb\u884c\u5b89\u88c5\uff0c\u9996\u5148\u83b7\u53d6\u8bfb\u5199\u5206\u79bb\u6a21\u578b\u7684 Chart \u5305\uff1a $ helm repo add grafana https://grafana.github.io/helm-charts $ helm pull grafana/loki-simple-scalable --untar --version 1.4.1 $ cd loki-simple-scalable \u8be5 Chart \u5305\u652f\u6301\u4e0b\u8868\u4e2d\u663e\u793a\u7684\u7ec4\u4ef6\uff0cIngester\u3001distributor\u3001querier \u548c query-frontend \u90fd\u4f1a\u5b89\u88c5\uff0c\u5176\u4ed6\u7ec4\u4ef6\u662f\u53ef\u9009\u7684 \u3002 \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 MinIO \u6765\u4f5c\u4e3a\u8fdc\u7a0b\u6570\u636e\u5b58\u50a8\uff0c\u5206\u522b\u914d\u7f6e\u8bfb\u548c\u5199\u7684 Loki \u5b9e\u4f8b\u526f\u672c\u6570\u4e3a2\uff0c\u4e3a\u4e86\u5728 Loki \u524d\u9762\u6dfb\u52a0\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u9700\u8981\u5f00\u542f Gateway\uff0c\u5bf9\u5e94\u7684 Values \u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # ci/minio-values.yaml loki: commonConfig: path_prefix: /var/loki replication_factor: 2 authEnabled: false # Configuration for the write write: # -- Number of replicas for the write replicas: 3 affinity: | podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 podAffinityTerm: labelSelector: matchLabels: {{- include \"loki.writeSelectorLabels\" . | nindent 12 }} topologyKey: kubernetes.io/hostname persistence: size: 1Gi storageClass: local-path # Configuration for the read node(s) read: # -- Number of replicas for the read replicas: 3 affinity: | podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 podAffinityTerm: labelSelector: matchLabels: {{- include \"loki.readSelectorLabels\" . | nindent 12 }} topologyKey: kubernetes.io/hostname persistence: size: 1Gi storageClass: local-path # Configuration for the gateway gateway: # -- Specifies whether the gateway should be enabled enabled: true # ------------------------------------- # Configuration for `minio` child chart # ------------------------------------- minio: enabled: true accessKey: enterprise-logs secretKey: supersecret service: type: NodePort nodePort: 32000 buckets: - name: chunks policy: none purge: false - name: ruler policy: none purge: false - name: admin policy: none purge: false persistence: size: 1Gi storageClass: local-path resources: requests: cpu: 100m memory: 256Mi \u7136\u540e\u4f7f\u7528\u4e0a\u9762\u7684 values \u6587\u4ef6\u6765\u5b89\u88c5\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\u7684 Loki\uff1a $ helm upgrade --install loki -n logging -f ci/minio-values.yaml . Release \"loki\" does not exist. Installing it now. NAME: loki LAST DEPLOYED: Fri Jun 17 14:53:20 2022 NAMESPACE: logging STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: *********************************************************************** Welcome to Grafana Loki Chart version: 1.4.1 Loki version: 2.5.0 *********************************************************************** Installed components: * gateway * read * write This chart requires persistence and object storage to work correctly. Queries will not work unless you provide a `loki.config.common.storage` section with a valid object storage (and the default `filesystem` storage set to `null`), as well as a valid `loki.config.schema_config.configs` with an `object_store` that matches the common storage section. For example, to use MinIO as your object storage backend: loki: config: common: storage: filesystem: null s3: endpoint: minio.minio.svc.cluster.local:9000 insecure: true bucketnames: loki-data access_key_id: loki secret_access_key: supersecret s3forcepathstyle: true schema_config: configs: - from: \"2020-09-07\" store: boltdb-shipper object_store: s3 schema: v11 index: period: 24h prefix: loki_index_ \u5b89\u88c5\u5b8c\u6210\u540e\u67e5\u770b Pod \u72b6\u6001\u662f\u5426\u6b63\u5e38\uff1a $ kubectl get pods -n logging NAME READY STATUS RESTARTS AGE loki-gateway-67f76958d7-bq46l 1/1 Running 0 91m loki-minio-87c9bc6f5-jxdcn 1/1 Running 0 70m loki-read-0 1/1 Running 0 81s loki-read-1 1/1 Running 0 81s loki-read-2 1/1 Running 0 81s loki-write-0 1/1 Running 0 81s loki-write-1 1/1 Running 0 81s loki-write-2 1/1 Running 0 81s \u53ef\u4ee5\u770b\u5230\u5206\u522b\u90e8\u7f72\u4e86\u4e24\u4e2a\u526f\u672c\u7684 write \u548c read \u7684 Loki\uff0c\u53e6\u5916\u8fd8\u6709\u4e00\u4e2a gateway \u7684 Pod\uff0cgateway \u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a nginx \u5e94\u7528\uff0c\u7528\u6765\u5c06 /loki/api/v1/push \u8bf7\u6c42\u8def\u7531\u5230 write \u8282\u70b9\u53bb\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b gateway \u7684\u914d\u7f6e\u6765\u9a8c\u8bc1\uff1a $ kubectl get cm -n logging loki-gateway -o yaml apiVersion: v1 data: nginx.conf: | worker_processes 5; ## Default: 1 error_log /dev/stderr; pid /tmp/nginx.pid; worker_rlimit_nofile 8192; events { worker_connections 4096; ## Default: 1024 } http { client_body_temp_path /tmp/client_temp; proxy_temp_path /tmp/proxy_temp_path; fastcgi_temp_path /tmp/fastcgi_temp; uwsgi_temp_path /tmp/uwsgi_temp; scgi_temp_path /tmp/scgi_temp; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] $status ' '\"$request\" $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log /dev/stderr main; sendfile on; tcp_nopush on; resolver kube-dns.kube-system.svc.cluster.local; server { listen 8080; location = / { return 200 'OK'; auth_basic off; } \\ location = /api/prom/push { proxy_pass http://loki-write.logging.svc.cluster.local:3100$request_uri; } location = /api/prom/tail { proxy_pass http://loki-read.logging.svc.cluster.local:3100$request_uri; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; } location ~ /api/prom/.* { proxy_pass http://loki-read.logging.svc.cluster.local:3100$request_uri; } location = /loki/api/v1/push { proxy_pass http://loki-write.logging.svc.cluster.local:3100$request_uri; } location = /loki/api/v1/tail { proxy_pass http://loki-read.logging.svc.cluster.local:3100$request_uri; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; } location ~ /loki/api/.* { proxy_pass http://loki-read.logging.svc.cluster.local:3100$request_uri; } } } kind: ConfigMap metadata: annotations: meta.helm.sh/release-name: loki meta.helm.sh/release-namespace: logging creationTimestamp: \"2022-06-17T06:53:22Z\" labels: app.kubernetes.io/component: gateway app.kubernetes.io/instance: loki app.kubernetes.io/managed-by: Helm app.kubernetes.io/name: loki app.kubernetes.io/version: 2.5.0 helm.sh/chart: loki-simple-scalable-1.4.1 name: loki-gateway namespace: logging resourceVersion: \"4968787\" uid: ba9ba1c0-8561-41cb-8b55-287f352b5ee8 \u4e0a\u9762\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684 Nginx \u914d\u7f6e\uff0c\u4ece\u914d\u7f6e\u53ef\u4ee5\u770b\u51fa\u4f1a\u628a\u8bf7\u6c42 /api/prom/push \u548c /loki/api/v1/push \u8fd9\u4e24\u4e2a Push API \u4ee3\u7406\u5230 http://loki-write.logging.svc.cluster.local:3100$request_uri ;\uff0c \u4e5f\u5c31\u662f\u4e0a\u9762\u7684\u4e24\u4e2a loki-write \u8282\u70b9\uff0c\u800c\u8bfb\u53d6\u76f8\u5173\u7684\u63a5\u53e3\u88ab\u4ee3\u7406\u5230 loki-read \u8282\u70b9\uff0c\u7136\u540e loki-write \u542f\u52a8\u53c2\u6570\u914d\u7f6e -target=write \uff0c loki-read \u542f\u52a8\u53c2\u6570\u914d\u7f6e -target=read`\uff0c\u8fd9\u6837\u53bb\u5b9e\u73b0\u8bfb\u5199\u5206\u79bb\u3002 \u4e0d\u8fc7\u8bfb\u5199\u7684\u5e94\u7528\u662f\u5171\u4eab\u540c\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\uff0c\u5982\u4e0b\u6240\u793a\uff1a $ kubectl get cm -n logging loki -o yaml apiVersion: v1 data: config.yaml: | auth_enabled: false common: path_prefix: /var/loki replication_factor: 2 storage: s3: access_key_id: enterprise-logs bucketnames: chunks endpoint: loki-minio.logging.svc:9000 insecure: true s3forcepathstyle: true secret_access_key: supersecret limits_config: enforce_metric_name: false max_cache_freshness_per_query: 10m reject_old_samples: true reject_old_samples_max_age: 168h split_queries_by_interval: 15m memberlist: join_members: - loki-memberlist ruler: storage: s3: bucketnames: ruler schema_config: configs: - from: \"2022-06-17\" index: period: 24h prefix: loki_index_ object_store: s3 schema: v12 store: boltdb-shipper server: grpc_listen_port: 9095 http_listen_port: 3100 ...... \u5176\u4e2d common.storage.s3 \u6307\u5b9a\u7684\u662f MinIO \u7684\u76f8\u5173\u914d\u7f6e\uff0c\u901a\u8fc7 memberlist.join_members \u6765\u6307\u5b9a\u6210\u5458\uff0c\u5176\u5b9e\u5c31\u662f\u6240\u6709\u7684\u8bfb\u5199\u8282\u70b9\uff1a $ kubectl get svc loki-memberlist -n logging -o wide NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE SELECTOR loki-memberlist ClusterIP None <none> 7946/TCP 54m app.kubernetes.io/instance=loki,app.kubernetes.io/name=loki,app.kubernetes.io/part-of=memberlist $ kubectl get pods -n logging -l app.kubernetes.io/part-of=memberlist NAME READY STATUS RESTARTS AGE loki-read-0 1/1 Running 0 32s loki-read-1 1/1 Running 0 72s loki-read-2 1/1 Running 0 115s loki-write-0 1/1 Running 0 4s loki-write-1 1/1 Running 0 55s loki-write-2 1/1 Running 0 116s \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5b8c\u6210\u4e86 Loki \u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\u7684\u90e8\u7f72\u3002","title":"\u5b89\u88c5"},{"location":"chap10/5Grafana_Loki/#promtail","text":"\u4e3a\u4e86\u9a8c\u8bc1\u5e94\u7528\u662f\u5426\u6b63\u5e38\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u5b89\u88c5 Promtail \u548c Grafana \u6765\u8fdb\u884c\u6570\u636e\u7684\u8bfb\u5199\u3002 \u83b7\u53d6 promtail \u7684 Chart \u5305\u5e76\u89e3\u538b\uff1a $ helm pull grafana/promtail --untar $ cd promtail \u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 values \u6587\u4ef6\uff1a # ci/simple-values.yaml rbac: pspEnabled: false config: lokiAddress: http://loki-gateway/loki/api/v1/push \u6ce8\u610f\u6211\u4eec\u9700\u8981\u5c06 Promtail \u4e2d\u914d\u7f6e\u7684 Loki \u5730\u5740\u4e3a http://loki-gateway/loki/api/v1/push \uff0c \u8fd9\u6837\u5c31\u662f Promtail \u5c06\u65e5\u5fd7\u6570\u636e\u9996\u5148\u53d1\u9001\u5230 Gateway \u4e0a\u9762\u53bb\uff0c\u7136\u540e Gateway \u6839\u636e\u6211\u4eec\u7684 Endpoints \u53bb\u8f6c\u53d1\u7ed9 write \u8282\u70b9 \uff0c\u4f7f\u7528\u4e0a\u9762\u7684 values \u6587\u4ef6\u6765\u5b89\u88c5 Promtail\uff1a $ helm upgrade --install promtail -n logging -f ci/simple-values.yaml . Release \"promtail\" does not exist. Installing it now. NAME: promtail LAST DEPLOYED: Fri Jun 17 16:01:08 2022 NAMESPACE: logging STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: *********************************************************************** Welcome to Grafana Promtail Chart version: 5.1.0 Promtail version: 2.5.0 *********************************************************************** Verify the application is working by running these commands: * kubectl --namespace logging port-forward daemonset/promtail 3101 * curl http://127.0.0.1:3101/metrics \u6b63\u5e38\u5b89\u88c5\u5b8c\u6210\u540e\u4f1a\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a promtail\uff1a $ kubectl get pods -n logging -l app.kubernetes.io/name=promtail NAME READY STATUS RESTARTS AGE promtail-5r9hl 1/1 Running 0 2m25s promtail-85mk4 1/1 Running 0 2m25s promtail-qlfnv 1/1 Running 0 2m25s \u6b63\u5e38 promtail \u5c31\u5df2\u7ecf\u5728\u5f00\u59cb\u91c7\u96c6\u6240\u5728\u8282\u70b9\u4e0a\u7684\u6240\u6709\u5bb9\u5668\u65e5\u5fd7\u4e86\uff0c \u7136\u540e\u5c06\u65e5\u5fd7\u6570\u636e Push \u7ed9 gateway\uff0cgateway \u8f6c\u53d1\u7ed9 write \u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b gateway \u7684\u65e5\u5fd7\uff1a $ kubectl logs -f loki-gateway-67f76958d7-bq46l -n logging 10.244.1.170 - - [17/Jun/2022:08:09:03 +0000] 204 \"POST /loki/api/v1/push HTTP/1.1\" 0 \"-\" \"promtail/2.5.0\" \"-\" 10.244.1.170 - - [17/Jun/2022:08:09:04 +0000] 204 \"POST /loki/api/v1/push HTTP/1.1\" 0 \"-\" \"promtail/2.5.0\" \"-\" 10.244.2.205 - - [17/Jun/2022:08:09:05 +0000] 204 \"POST /loki/api/v1/push HTTP/1.1\" 0 \"-\" \"promtail/2.5.0\" \"-\" ...... \u53ef\u4ee5\u770b\u5230 gateway \u73b0\u5728\u5728\u4e00\u76f4\u63a5\u63a5\u6536\u7740 /loki/api/v1/push \u7684\u8bf7\u6c42\uff0c\u4e5f\u5c31\u662f promtail \u53d1\u9001\u8fc7\u6765\u7684\uff0c\u6b63\u5e38\u6765\u8bf4\u73b0\u5728\u65e5\u5fd7\u6570\u636e\u5df2\u7ecf\u5206\u53d1\u7ed9 write \u8282\u70b9\u4e86\uff0c write \u8282\u70b9\u5c06\u6570\u636e\u5b58\u50a8\u5728\u4e86 minio \u4e2d\uff0c\u53ef\u4ee5\u53bb\u67e5\u770b\u4e0b minio \u4e2d\u5df2\u7ecf\u6709\u65e5\u5fd7\u6570\u636e\u4e86\uff0c\u524d\u9762\u5b89\u88c5\u7684\u65f6\u5019\u4e3a minio \u670d\u52a1\u6307\u5b9a\u4e86\u4e00\u4e2a 32000 \u7684 NodePort \u7aef\u53e3\uff1a \u767b\u5f55\u4fe1\u606f\u4e3a\uff1a accessKey: enterprise-logs secretKey: supersecret \u53ef\u4ee5\u770b\u5230 minio \u7684 chunks \u8fd9\u4e2a bucket \u4e2d\u5e76\u6ca1\u6709\u65e5\u5fd7\u6570\u636e\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u7684 bucket \u9ed8\u8ba4\u53ea\u6709\u8bfb\u53d6\u7684\u6743\u9650\uff0c \u6211\u4eec\u53ef\u4ee5\u5c06\u8be5 bucket \u4fee\u6539\u4e3a\u5177\u6709\u8bfb\u5199\u7684\u6743\u9650 \uff1a \u6b63\u5e38\u4fee\u6539\u540e\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a fake \u7684\u76ee\u5f55\u4e86 \uff0c\u8fd9\u662f\u9ed8\u8ba4\u6ca1\u6709\u63d0\u4f9b\u591a\u79df\u6237\u7684\u6570\u636e\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u4e0b\u9762\u5b58\u50a8\u7740\u65e5\u5fd7\u7684 chunk \u6570\u636e\uff1a \u8fd9\u662f Loki \u65e5\u5fd7\u7684\u5199\u5165\u7684\u8def\u5f84\u3002","title":"Promtail\u5199\u6570\u636e"},{"location":"chap10/5Grafana_Loki/#grafana","text":"\u4e0b\u9762\u6211\u4eec\u6765\u9a8c\u8bc1\u4e0b\u8bfb\u53d6\u8def\u5f84\uff0c\u5b89\u88c5 Grafana \u5bf9\u63a5 Loki\uff1a $ helm pull grafana/grafana --untar $ cd grafana \u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684 values \u914d\u7f6e\u6587\u4ef6\uff1a lues \u914d\u7f6e\u6587\u4ef6\uff1a # ci/simple-values.yaml service: type: NodePort nodePort: 32001 rbac: pspEnabled: false persistence: enabled: true storageClassName: local-path accessModes: - ReadWriteOnce size: 1Gi \u76f4\u63a5\u4f7f\u7528\u4e0a\u9762\u7684 values \u6587\u4ef6\u5b89\u88c5 Grafana\uff1a $ helm upgrade --install grafana -n logging -f ci/simple-values.yaml . Release \"grafana\" has been upgraded. Happy Helming! NAME: grafana LAST DEPLOYED: Fri Jun 17 17:00:24 2022 NAMESPACE: logging STATUS: deployed REVISION: 2 NOTES: 1. Get your 'admin' user password by running: kubectl get secret --namespace logging grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo 2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster: grafana.logging.svc.cluster.local Get the Grafana URL to visit by running these commands in the same shell: export NODE_PORT=$(kubectl get --namespace logging -o jsonpath=\"{.spec.ports[0].nodePort}\" services grafana) export NODE_IP=$(kubectl get nodes --namespace logging -o jsonpath=\"{.items[0].status.addresses[0].address}\") echo http://$NODE_IP:$NODE_PORT 3. Login with the password from step 1 and the username: admin \u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u63d0\u793a\u4e2d\u7684\u547d\u4ee4\u83b7\u53d6\u767b\u5f55\u5bc6\u7801\uff1a $ kubectl get secret --namespace logging grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo \u7136\u540e\u4f7f\u7528\u4e0a\u9762\u7684\u5bc6\u7801\u548c admin \u7528\u6237\u540d\u767b\u5f55 Grafana\uff1a \u767b\u5f55\u540e\u8fdb\u5165 Grafana \u6dfb\u52a0\u4e00\u4e2a\u6570\u636e\u6e90\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u8981\u586b\u5199 gateway \u7684\u5730\u5740 http://loki-gateway\uff1a \u4fdd\u5b58\u6570\u636e\u6e90\u540e\uff0c\u53ef\u4ee5\u8fdb\u5165 Explore \u9875\u9762\u8fc7\u6ee4\u65e5\u5fd7\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u6765\u5b9e\u65f6\u67e5\u770b gateway \u8fd9\u4e2a\u5e94\u7528\u7684\u65e5\u5fd7\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5982\u679c\u4f60\u80fd\u770b\u5230\u6700\u65b0\u7684\u65e5\u5fd7\u6570\u636e\u90a3\u8bf4\u660e\u6211\u4eec\u90e8\u7f72\u6210\u529f\u4e86\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\u7684 Loki\uff0c\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8 Loki \u7684\u6027\u80fd\u548c\u5bb9\u91cf\uff0c\u5982\u679c\u8fd9\u79cd\u6a21\u5f0f\u8fd8\u4e0d\u80fd\u6ee1\u8db3\u4f60\u7684\u6570\u636e\u91cf\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u5fae\u670d\u52a1\u6a21\u5f0f\u6765\u90e8\u7f72 Loki \u4e86","title":"Grafana\u8bfb\u6570\u636e"},{"location":"chap11/34Thanos_intro/","text":"\u7b2c\u4e8c\u8282 \u4f7f\u7528Thanos\u5b9e\u73b0Prometheus\u7684\u9ad8\u53ef\u7528\u4ecb\u7ecd \u524d\u9762\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86 Prometheus \u7684\u4f7f\u7528\uff0c\u4e86\u89e3\u4e86\u57fa\u672c\u7684 PromQL \u8bed\u53e5\u4ee5\u53ca\u7ed3\u5408 Grafana \u6765\u8fdb\u884c\u76d1\u63a7\u56fe\u8868\u5c55\u793a\uff0c\u901a\u8fc7 AlertManager \u6765\u8fdb\u884c\u62a5\u8b66\uff0c\u8fd9\u4e9b\u5de5\u5177\u7ed3\u5408\u8d77\u6765\u5df2\u7ecf\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u642d\u5efa\u4e00\u5957\u6bd4\u8f83\u5b8c\u6574\u7684\u76d1\u63a7\u62a5\u8b66\u7cfb\u7edf\u4e86\uff0c\u4f46\u662f\u4e5f\u4ec5\u4ec5\u5c40\u9650\u4e8e\u6d4b\u8bd5\u73af\u5883\uff0c\u5bf9\u4e8e\u751f\u4ea7\u73af\u5883\u6765\u8bf4\u5219\u8fd8\u6709\u8bb8\u591a\u9700\u8981\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u5176\u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5c31\u662f Prometheus \u7684\u9ad8\u53ef\u7528\u3002 \u5355\u53f0\u7684 Prometheus \u5b58\u5728\u5355\u70b9\u6545\u969c\u7684\u98ce\u9669\uff0c\u968f\u7740\u76d1\u63a7\u89c4\u6a21\u7684\u6269\u5927\uff0c Prometheus \u4ea7\u751f\u7684\u6570\u636e\u91cf\u4e5f\u4f1a\u975e\u5e38\u5927\uff0c\u6027\u80fd\u548c\u5b58\u50a8\u90fd\u4f1a\u9762\u4e34\u95ee\u9898\u3002\u6bcb\u5eb8\u7f6e\u7591\uff0c\u6211\u4eec\u9700\u8981\u4e00\u5957\u9ad8\u53ef\u7528\u7684 Prometheus \u96c6\u7fa4\u3002 1 \u53ef\u7528\u6027 \u6211\u4eec\u77e5\u9053 Prometheus \u662f\u91c7\u7528\u7684 Pull \u673a\u5236\u83b7\u53d6\u76d1\u63a7\u6570\u636e \uff0c\u5373\u4f7f\u4f7f\u7528 PushGateway \u5bf9\u4e8e Prometheus \u4e5f\u662f Pull \uff0c\u4e3a\u4e86\u786e\u4fdd Prometheus \u670d\u52a1\u7684\u53ef\u7528\u6027\uff0c\u6211\u4eec\u53ea\u9700\u8981\u90e8\u7f72\u591a\u4e2a Prometheus \u5b9e\u4f8b\uff0c\u7136\u540e\u91c7\u96c6\u76f8\u540c\u7684 metrics \u6570\u636e\u5373\u53ef\uff1a \u8fd9\u4e2a\u65b9\u5f0f\u6765\u6ee1\u8db3\u670d\u52a1\u7684\u53ef\u7528\u6027\u5e94\u8be5\u662f\u5e73\u65f6\u6211\u4eec\u4f7f\u7528\u5f97\u6700\u591a\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u5f53\u4e00\u4e2a\u5b9e\u4f8b\u6302\u6389\u540e\u4ece LB \u91cc\u9762\u81ea\u52a8\u5254\u9664\u6389\uff0c\u800c\u4e14\u8fd8\u6709\u8d1f\u8f7d\u5747\u8861\u7684\u4f5c\u7528\uff0c\u53ef\u4ee5\u964d\u4f4e\u4e00\u4e2a Prometheus \u7684\u538b\u529b\uff0c\u4f46 \u8fd9\u79cd\u6a21\u5f0f\u7f3a\u70b9\u4e5f\u662f\u975e\u5e38\u660e\u663e\u7684\uff0c\u5c31\u662f\u4e0d\u6ee1\u8db3\u6570\u636e\u4e00\u81f4\u6027\u4ee5\u53ca\u6301\u4e45\u5316\u95ee\u9898\uff0c\u56e0\u4e3a Prometheus \u662f Pull \u7684\u65b9\u5f0f\uff0c\u5373\u4f7f\u591a\u4e2a\u5b9e\u4f8b\u6293\u53d6\u7684\u662f\u76f8\u540c\u7684\u76d1\u63a7\u6307\u6807\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u6293\u53d6\u8fc7\u6765\u7684\u503c\u5c31\u662f\u4e00\u81f4\u7684\uff0c\u66f4\u4f55\u51b5\u5728\u5b9e\u9645\u7684\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u8fd8\u4f1a\u9047\u5230\u4e00\u4e9b\u7f51\u7edc\u5ef6\u8fdf\u95ee\u9898\uff0c\u6240\u4ee5\u4f1a\u9020\u6210\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u95ee\u9898 \uff0c \u4e0d\u8fc7\u5bf9\u4e8e\u76d1\u63a7\u62a5\u8b66\u8fd9\u4e2a\u573a\u666f\u6765\u8bf4\uff0c\u4e00\u822c\u4e5f\u4e0d\u4f1a\u8981\u6c42\u6570\u636e\u5f3a\u4e00\u81f4\u6027\uff0c\u6240\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4ece\u4e1a\u52a1\u4e0a\u6765\u8bf4\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u8fd9\u79cd\u6570\u636e\u4e0d\u4e00\u81f4\u6027\u5f71\u54cd\u57fa\u672c\u4e0a\u6ca1\u4ec0\u4e48\u5f71\u54cd\u3002\u8fd9\u79cd\u573a\u666f\u9002\u5408\u76d1\u63a7\u89c4\u6a21\u4e0d\u5927\uff0c\u53ea\u9700\u8981\u4fdd\u5b58\u77ed\u5468\u671f\u76d1\u63a7\u6570\u636e\u7684\u573a\u666f\u3002 2 \u6570\u636e\u6301\u4e45\u5316 \u4f7f\u7528\u4e0a\u9762\u7684\u57fa\u672c HA \u7684\u6a21\u5f0f\u57fa\u672c\u4e0a\u662f\u53ef\u4ee5\u6ee1\u8db3\u76d1\u63a7\u8fd9\u4e2a\u573a\u666f\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u6570\u636e\u6301\u4e45\u5316\u7684\u95ee\u9898\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u5b9e\u4f8b\u6570\u636e\u4e22\u4e86\u5c31\u6ca1\u529e\u6cd5\u5462\u6062\u590d\u56de\u6765\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4e3a Prometheus \u6dfb\u52a0\u8fdc\u7a0b\u5b58\u50a8\u6765\u4fdd\u8bc1\u6570\u636e\u6301\u4e45\u5316\u3002 \u5728\u7ed9 Prometheus \u914d\u7f6e\u4e0a\u8fdc\u7a0b\u5b58\u50a8\u8fc7\u540e\uff0c\u6211\u4eec\u5c31\u4e0d\u7528\u62c5\u5fc3\u6570\u636e\u4e22\u5931\u7684\u95ee\u9898\u4e86\uff0c\u5373\u4f7f\u5f53\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u5b95\u673a\u6216\u8005\u6570\u636e\u4e22\u5931\u8fc7\u540e\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fdc\u7a0b\u5b58\u50a8\u7684\u6570\u636e\u8fdb\u884c\u6062\u590d\u3002 3 \u901a\u8fc7\u9501\u83b7\u53d6 Leader \u5176\u5b9e\u4e0a\u9762\u7684\u57fa\u672c HA \u52a0\u4e0a\u8fdc\u7a0b\u5b58\u50a8\u7684\u65b9\u5f0f\u57fa\u672c\u4e0a\u53ef\u4ee5\u6ee1\u8db3 Prometheus \u7684\u9ad8\u53ef\u7528\u4e86\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u591a\u4e2a Prometheus \u5b9e\u4f8b\u90fd\u4f1a\u53bb\u5b9a\u65f6\u62c9\u53d6\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u7136\u540e\u5c06\u70ed\u6570\u636e\u5b58\u50a8\u5728\u672c\u5730\uff0c\u7136\u540e\u51b7\u6570\u636e\u540c\u6b65\u5230\u8fdc\u7a0b\u5b58\u50a8\u4e2d\u53bb\uff0c\u5bf9\u4e8e\u5927\u578b\u96c6\u7fa4\u6765\u8bf4\u9891\u7e41\u7684\u53bb\u62c9\u53d6\u6307\u6807\u6570\u636e\u52bf\u5fc5\u4f1a\u5bf9\u7f51\u7edc\u9020\u6210\u66f4\u5927\u7684\u538b\u529b\u3002\u6240\u4ee5\u6211\u4eec\u4e5f\u901a\u8fc7\u670d\u52a1\u6ce8\u518c\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0 Prometheus \u7684\u9ad8\u53ef\u7528\u6027\uff0c \u96c6\u7fa4\u542f\u52a8\u7684\u65f6\u5019\u6bcf\u4e2a\u8282\u70b9\u90fd\u5c1d\u8bd5\u53bb\u83b7\u53d6\u9501\uff0c\u83b7\u53d6\u6210\u529f\u7684\u8282\u70b9\u6210\u4e3a Leader \u6267\u884c\u4efb\u52a1\uff0c\u82e5\u4e3b\u8282\u70b9\u5b95\u673a\uff0c\u4ece\u8282\u70b9\u83b7\u53d6\u9501\u6210\u4e3a Leader \u5e76\u63a5\u7ba1\u670d\u52a1\u3002 \u4e0d\u8fc7\u8fd9\u79cd\u65b9\u6848\u9700\u8981\u6211\u4eec\u901a\u8fc7\u53bb\u5199\u4ee3\u7801\u8fdb\u884c\u6539\u9020\uff0c\u5982\u679c\u5728 Kubernetes \u4e2d\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528\u81ea\u5e26\u7684 Lease \u5bf9\u8c61\u6765\u83b7\u53d6\u5206\u5e03\u5f0f\u9501\ud83d\udd12\uff0c\u8fd9\u4e0d\u662f\u5f88\u56f0\u96be\uff0c\u53ea\u662f\u4ee5\u540e\u8981\u66f4\u65b0\u7248\u672c\u7a0d\u5fae\u9ebb\u70e6\u70b9\u3002 \u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6848\u57fa\u672c\u4e0a\u90fd\u53ef\u4ee5\u6ee1\u8db3\u57fa\u672c\u7684 Prometheus \u9ad8\u53ef\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e\u5927\u578b\u96c6\u7fa4\u6765\u8bf4\uff0c\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u7684\u538b\u529b\u59cb\u7ec8\u975e\u5e38\u5927\u3002 4 \u8054\u90a6\u96c6\u7fa4 \u5f53\u5355\u4e2a Promthues \u5b9e\u4f8b \u65e0\u6cd5\u5904\u7406\u5927\u91cf\u7684\u91c7\u96c6\u4efb\u52a1\u65f6\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u57fa\u4e8e Prometheus \u8054\u90a6\u96c6\u7fa4\u7684\u65b9\u5f0f\u6765\u5c06\u76d1\u63a7\u4efb\u52a1\u5212\u5206\u5230\u4e0d\u540c\u7684 Prometheus \u5b9e\u4f8b\u4e2d\u53bb\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u91c7\u96c6\u4efb\u52a1\u5212\u5206\u5230\u4e0d\u540c\u7684 Prometheus \u5b9e\u4f8b\u4e2d\u53bb\u6267\u884c\uff0c\u8fdb\u884c\u529f\u80fd\u5206\u7247\uff0c\u6bd4\u5982\u4e00\u4e2a Prometheus \u8d1f\u8d23\u91c7\u96c6\u8282\u70b9\u7684\u6307\u6807\u6570\u636e\uff0c\u53e6\u5916\u4e00\u4e2a Prometheus \u8d1f\u8d23\u91c7\u96c6\u5e94\u7528\u4e1a\u52a1\u76f8\u5173\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u6700\u540e\u5728\u4e0a\u5c42\u901a\u8fc7\u4e00\u4e2a Prometheus \u5bf9\u6570\u636e\u8fdb\u884c\u6c47\u603b\u3002 \u5177\u4f53\u7684\u91c7\u96c6\u4efb\u52a1\u5982\u4f55\u53bb\u8fdb\u884c\u5206\u533a\u4e5f\u6ca1\u6709\u56fa\u5b9a\u7684\u6807\u51c6\uff0c\u9700\u8981\u7ed3\u5408\u5b9e\u9645\u7684\u4e1a\u52a1\u8fdb\u884c\u8003\u8651\uff0c\u9664\u4e86\u4e0a\u9762\u7684\u65b9\u5f0f\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u5355\u4e2a\u7684\u91c7\u96c6\u6570\u636e\u91cf\u5c31\u975e\u5e38\u975e\u5e38\u5927\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u91c7\u96c6\u4e0a\u4e07\u4e2a\u8282\u70b9\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u8fd9\u79cd\u60c5\u51b5\u5373\u4f7f\u6211\u4eec\u5df2\u7ecf\u8fdb\u884c\u4e86\u5206\u533a\uff0c\u4f46\u662f\u5bf9\u4e8e\u5355\u4e2a Prometheus \u6765\u8bf4\u538b\u529b\u4e5f\u662f\u975e\u5e38\u5927\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u6309\u7167\u4efb\u52a1\u7684\u4e0d\u540c\u5b9e\u4f8b\u8fdb\u884c\u5212\u5206\uff0c\u6211\u4eec\u901a\u8fc7 Prometheus \u7684 relabel \u529f\u80fd \uff0c\u901a\u8fc7 hash \u53d6\u6a21\u7684\u65b9\u5f0f\u53ef\u4ee5\u786e\u4fdd\u5f53\u524d Prometheus \u53ea\u91c7\u96c6\u5f53\u524d\u4efb\u52a1\u7684\u4e00\u90e8\u5206\u5b9e\u4f8b\u7684\u76d1\u63a7\u6307\u6807\u3002 # \u7701\u7565\u5176\u4ed6\u914d\u7f6e...... relabel_configs: - source_labels: [__address__] modulus: 4 # \u5c06\u8282\u70b9\u5206\u7247\u6210 4 \u4e2a\u7ec4 target_label\uff1a __tmp_hash action\uff1a hashmod - source_labels\uff1a [__tmp_hash] regex: ^1$ # \u53ea\u6293\u7b2c2\u4e2a\u7ec4\u4e2d\u8282\u70b9\u7684\u6570\u636e(\u5e8f\u53f70\u4e3a\u7b2c1\u4e2a\u7ec4) action: keep \u5230\u8fd9\u91cc\u6211\u4eec\u57fa\u672c\u4e0a\u5c31\u5b8c\u6210\u4e86 Prometheus \u9ad8\u53ef\u7528\u7684\u6539\u9020\u3002\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u96c6\u7fa4\u548c\u5927\u89c4\u6a21\u96c6\u7fa4\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u6848\uff0c\u4f46\u662f\u5176\u4e2d\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u90e8\u5206\u5c31\u662f\u8fdc\u7a0b\u5b58\u50a8\uff0c \u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u6570\u636e\u7684\u6301\u4e45\u5316\u5c31\u5fc5\u987b\u4f7f\u7528\u8fdc\u7a0b\u5b58\u50a8\u3002 \u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u5c06\u91cd\u70b9\u4ecb\u7ecd\u4e0b\u8fdc\u7a0b\u5b58\u50a8\u7684\u65f6\u5019\uff0c\u8fd9\u91cc\u6211\u4eec\u4e3b\u8981\u8bb2\u89e3\u76ee\u524d\u6bd4\u8f83\u6d41\u884c\u7684\u65b9\u6848\uff1a Thanos \uff0c\u5b83\u5b8c\u5168\u517c\u5bb9 P rometheus API \uff0c \u63d0\u4f9b\u7edf\u4e00\u67e5\u8be2\u805a\u5408\u5206\u5e03\u5f0f\u90e8\u7f72 Prometheus \u6570\u636e\u7684\u80fd\u529b\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u6570\u636e\u957f\u671f\u5b58\u50a8\u5230\u5404\u79cd\u5bf9\u8c61\u5b58\u50a8\uff08\u6bd4\u5982 S3\u3001\u963f\u91cc\u4e91 OSS \u7b49 \uff09\u4ee5\u53ca\u964d\u4f4e\u91c7\u6837\u7387\u6765\u52a0\u901f\u5927\u65f6\u95f4\u8303\u56f4\u7684\u6570\u636e\u67e5\u8be2\u3002 5 Thanos Thanos \u662f\u4e00\u4e2a\u57fa\u4e8e Prometheus \u5b9e\u73b0\u7684\u76d1\u63a7\u65b9\u6848\uff0c\u5176\u4e3b\u8981\u8bbe\u8ba1\u76ee\u7684\u662f\u89e3\u51b3\u539f\u751f Prometheus \u4e0a\u7684\u75db\u70b9\uff0c\u5e76\u4e14\u505a\u8fdb\u4e00\u6b65\u7684\u63d0\u5347\uff0c\u4e3b\u8981\u7684\u7279\u6027\u6709\uff1a \u5168\u5c40\u67e5\u8be2\uff0c\u9ad8\u53ef\u7528\uff0c\u52a8\u6001\u62d3\u5c55\uff0c\u957f\u671f\u5b58\u50a8 \u3002\u4e0b\u56fe\u662f Thanos \u5b98\u65b9\u7684\u67b6\u6784\u56fe\uff1a Thanos \u4e3b\u8981\u7531\u5982\u4e0b\u51e0\u4e2a\u7279\u5b9a\u529f\u80fd\u7684\u7ec4\u4ef6\u7ec4\u6210\uff1a \u8fb9\u8f66\u7ec4\u4ef6\uff08 Sidecar \uff09\uff1a\u8fde\u63a5 Prometheus \uff0c\u5e76\u628a Prometheus \u66b4\u9732\u7ed9\u67e5\u8be2\u7f51\u5173\uff08 Querier/Query \uff09\uff0c\u4ee5\u4f9b\u5b9e\u65f6\u67e5\u8be2\uff0c\u5e76\u4e14\u53ef\u4ee5\u4e0a\u4f20 Prometheus \u6570\u636e\u7ed9\u4e91\u5b58\u50a8\uff0c\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58 \u67e5\u8be2\u7f51\u5173\uff08 Querier/Query \uff09\uff1a\u5b9e\u73b0\u4e86 Prometheus API \uff0c\u4e0e\u6c47\u96c6\u5e95\u5c42\u7ec4\u4ef6\uff08\u5982\u8fb9\u8f66\u7ec4\u4ef6 Sidecar\uff0c\u6216\u662f\u5b58\u50a8\u7f51\u5173 Store Gateway\uff09\u7684\u6570\u636e \u5b58\u50a8\u7f51\u5173\uff08 Store Gateway \uff09\uff1a\u5c06\u4e91\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u5185\u5bb9\u66b4\u9732\u51fa\u6765 \u538b\u7f29\u5668\uff08 Compactor \uff09\uff1a\u5c06\u4e91\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\u548c\u4e0b\u91c7\u6837 \u63a5\u6536\u5668\uff08 Receiver \uff09\uff1a\u4ece Prometheus \u7684 remote-write WAL \uff08Prometheus \u8fdc\u7a0b\u9884\u5199\u5f0f\u65e5\u5fd7\uff09\u83b7\u53d6\u6570\u636e\uff0c\u66b4\u9732\u51fa\u53bb\u6216\u8005\u4e0a\u4f20\u5230\u4e91\u5b58\u50a8 \u89c4\u5219\u7ec4\u4ef6\uff08 Ruler \uff09\uff1a\u9488\u5bf9\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u8bc4\u4f30\u548c\u62a5\u8b66 Bucket \uff1a\u4e3b\u8981\u7528\u4e8e\u5c55\u793a\u5bf9\u8c61\u5b58\u50a8\u4e2d\u5386\u53f2\u6570\u636e\u7684\u5b58\u50a8\u60c5\u51b5\uff0c\u67e5\u770b\u6bcf\u4e2a\u6307\u6807\u6e90\u4e2d\u6570\u636e\u5757\u7684\u538b\u7f29\u7ea7\u522b\uff0c\u89e3\u6790\u5ea6\uff0c\u5b58\u50a8\u65f6\u6bb5\u548c\u65f6\u95f4\u957f\u5ea6\u7b49\u4fe1\u606f\u3002 6 \u5de5\u4f5c\u6d41\u7a0b Thanos \u662f\u540c\u65f6\u652f\u6301 Prometheus \u8bfb\u548c\u5199\u7684\u8fdc\u7a0b\u5b58\u50a8\u65b9\u6848\uff0c\u9996\u5148\u6211\u4eec\u5148\u770b\u4e0b\u6307\u6807\u5199\u5165\u7684\u6574\u4e2a\u6d41\u7a0b\uff1a \u9996\u5148 Prometheus \u4ece\u6240\u91c7\u96c6\u670d\u52a1\u7684 metrics \u63a5\u53e3\u6293\u53d6\u6307\u6807\u6570\u636e\uff0c\u540c\u65f6\u6839\u636e\u81ea\u8eab\u6240\u914d\u7f6e\u7684 recording rules \u5b9a\u671f\u5bf9\u6293\u53d6\u5230\u7684\u6307\u6807\u6570\u636e\u8fdb\u884c\u8bc4\u4f30\uff0c\u5c06\u7ed3\u679c\u4ee5 TSDB \u683c\u5f0f\u5206\u5757\u5b58\u50a8\u5230\u672c\u5730\uff0c\u6bcf\u4e2a\u6570\u636e\u5757\u7684\u5b58\u50a8\u65f6\u957f\u4e3a2\u5c0f\u65f6\uff0c\u4e14\u9ed8\u8ba4\u7981\u7528\u4e86\u538b\u7f29\u529f\u80fd\u3002 \u7136\u540e sidecar \u55c5\u63a2\u5230 Prometheus \u7684\u6570\u636e\u5b58\u50a8\u76ee\u5f55\u751f\u6210\u4e86\u65b0\u7684\u53ea\u8bfb\u6570\u636e\u5757\u65f6\uff0c\u4f1a\u5c06\u8be5\u6570\u636e\u5757\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u6876\u4e2d\u505a\u4e3a\u957f\u671f\u5386\u53f2\u6570\u636e\u4fdd\u5b58\uff0c\u5728\u4e0a\u4f20\u65f6\u4f1a\u5c06\u6570\u636e\u5757\u4e2d\u7684 meta.json \u8fdb\u884c\u4fee\u6539\u6dfb\u52a0 thanos \u76f8\u5173\u7684\u5b57\u6bb5\uff0c\u5982 external_labels \u3002 rule \u6839\u636e\u6240\u914d\u7f6e\u7684 recording rules \u5b9a\u671f\u5730\u5411 query \u53d1\u8d77\u67e5\u8be2\u83b7\u53d6\u8bc4\u4f30\u6240\u9700\u7684\u6307\u6807\u503c\uff0c\u5e76\u5c06\u7ed3\u679c\u4ee5 TSDB \u683c\u5f0f\u5206\u5757\u5b58\u50a8\u5230\u672c\u5730\u3002\u6bcf\u4e2a\u6570\u636e\u5757\u7684\u5b58\u50a8\u65f6\u957f\u4e3a 2 \u5c0f\u65f6\uff0c\u4e14\u9ed8\u8ba4\u7981\u7528\u4e86\u538b\u7f29\u529f\u80fd\uff0c\u6bcf\u4e2a\u6570\u636e\u5757\u7684 meta.json \u4e5f\u9644\u5e26\u4e86 thanos \u62d3\u5c55\u7684 external_lables \u5b57\u6bb5\u3002\u5f53\u672c\u5730\u751f\u6210\u4e86\u65b0\u7684\u53ea\u8bfb\u6570\u636e\u5757\u65f6\uff0c\u5176\u81ea\u8eab\u4f1a\u5c06\u8be5\u6570\u636e\u5757\u4e0a\u4f20\u5230\u8fdc\u7aef\u5bf9\u8c61\u5b58\u50a8\u6876\u4e2d\u505a\u4e3a\u957f\u671f\u5386\u53f2\u6570\u636e\u4fdd\u5b58\u3002 compact \u5b9a\u671f\u5c06\u5bf9\u8c61\u5b58\u50a8\u4e2d\u5730\u6570\u636e\u5757\u8fdb\u884c\u538b\u7f29\u548c\u964d\u51c6\u91c7\u6837\uff0c\u8fdb\u884c\u538b\u7f29\u65f6\u6570\u636e\u5757\u4e2d\u7684 truck \u4f1a\u8fdb\u884c\u5408\u5e76\uff0c\u5bf9\u5e94\u7684 meta.json \u4e2d\u7684 level \u4e5f\u4f1a\u4e00\u540c\u589e\u957f\uff0c\u6bcf\u6b21\u538b\u7f29\u7d2f\u52a0 1 \uff0c\u521d\u59cb\u503c\u4e3a 1 \u3002\u5728\u8fdb\u884c\u964d\u51c6\u91c7\u6837\u65f6\u4f1a\u521b\u5efa\u65b0\u7684\u6570\u636e\u5757\uff0c\u6839\u636e\u91c7\u6837\u6b65\u957f\u4ece\u539f\u6709\u7684\u6570\u636e\u5757\u4e2d\u62bd\u53d6\u503c\u5b58\u50a8\u5230\u65b0\u7684\u6570\u636e\u5757\u4e2d\uff0c\u5728 meta.json \u4e2d\u8bb0\u5f55 resolution \u4e3a\u91c7\u6837\u6b65\u957f\u3002 \u8bfb\u53d6\u6307\u6807\u7684\u6d41\u7a0b\u4e3a\uff1a \u9996\u5148\u5ba2\u6237\u7aef\u901a\u8fc7 query API \u5411 query \u53d1\u8d77\u67e5\u8be2\uff0c query \u5c06\u8bf7\u6c42\u8f6c\u6362\u6210 StoreAPI \u53d1\u9001\u5230\u5176\u4ed6\u7684 query \u3001 sidecar \u3001 rule \u548c store \u4e0a\u3002 sidecar \u63a5\u6536\u5230\u6765\u81ea\u4e8e query \u53d1\u8d77\u7684\u67e5\u8be2\u8bf7\u6c42\u540e\u5c06\u5176\u8f6c\u6362\u6210 query API \u8bf7\u6c42\uff0c\u53d1\u9001\u7ed9\u5176\u7ed1\u5b9a\u7684 Prometheus \uff0c\u7531 Prometheus \u4ece\u672c\u5730\u8bfb\u53d6\u6570\u636e\u5e76\u54cd\u5e94\uff0c\u8fd4\u56de\u77ed\u671f\u7684\u672c\u5730\u91c7\u96c6\u548c\u8bc4\u4f30\u6570\u636e\u3002 rule \u63a5\u6536\u5230\u6765\u81ea\u4e8e query \u53d1\u8d77\u7684\u67e5\u8be2\u8bf7\u6c42\u540e\u76f4\u63a5\u4ece\u672c\u5730\u8bfb\u53d6\u6570\u636e\u5e76\u54cd\u5e94\uff0c\u8fd4\u56de\u77ed\u671f\u7684\u672c\u5730\u8bc4\u4f30\u6570\u636e\u3002 store \u63a5\u6536\u5230\u6765\u81ea\u4e8e query \u53d1\u8d77\u7684\u67e5\u8be2\u8bf7\u6c42\u540e\u9996\u5148\u4ece\u5bf9\u8c61\u5b58\u50a8\u6876\u4e2d\u904d\u5386\u6570\u636e\u5757\u7684 meta.json \uff0c\u6839\u636e\u5176\u4e2d\u8bb0\u5f55\u7684\u65f6\u95f4\u8303\u56f4\u548c\u6807\u7b7e\u5148\u8fdb\u884c\u4e00\u6b21\u8fc7\u6ee4\u3002\u63a5\u4e0b\u6765\u4ece\u5bf9\u8c61\u5b58\u50a8\u6876\u4e2d\u8bfb\u53d6\u6570\u636e\u5757\u7684 index \u548c chunks \u8fdb\u884c\u67e5\u8be2\uff0c\u90e8\u5206\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684 index \u4f1a\u88ab\u7f13\u5b58\u4e0b\u6765\uff0c\u4e0b\u6b21\u67e5\u8be2\u4f7f\u7528\u5230\u65f6\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u3002\u6700\u7ec8\u8fd4\u56de\u957f\u671f\u7684\u5386\u53f2\u91c7\u96c6\u548c\u8bc4\u4f30\u6307\u6807\u3002 \u5bf9\u4e8e\u53d1\u9001\u62a5\u8b66\u7684\u6d41\u7a0b\u5982\u4e0b\u6240\u793a\uff1a Prometheus \u6839\u636e\u81ea\u8eab\u914d\u7f6e\u7684 alerting \u89c4\u5219\u5b9a\u671f\u5730\u5bf9\u81ea\u8eab\u91c7\u96c6\u7684\u6307\u6807\u8fdb\u884c\u8bc4\u4f30\uff0c\u5f53\u544a\u8b66\u6761\u4ef6\u6ee1\u8db3\u7684\u60c5\u51b5\u4e0b\u53d1\u8d77\u544a\u8b66\u5230 Alertmanager \u4e0a\u3002 rule \u6839\u636e\u81ea\u8eab\u914d\u7f6e\u7684 alerting \u89c4\u5219\u5b9a\u671f\u7684\u5411 query \u53d1\u8d77\u67e5\u8be2\u8bf7\u6c42\u83b7\u53d6\u8bc4\u4f30\u6240\u9700\u7684\u6307\u6807\uff0c\u5f53\u544a\u8b66\u6761\u4ef6\u6ee1\u8db3\u7684\u60c5\u51b5\u4e0b\u53d1\u8d77\u544a\u8b66\u5230 Alertmanage r \u4e0a\u3002 Alertmanager \u63a5\u6536\u5230\u6765\u81ea\u4e8e Prometheus \u548c rule \u7684\u544a\u8b66\u6d88\u606f\u540e\u8fdb\u884c\u5206\u7ec4\u5408\u5e76\u540e\u53d1\u51fa\u544a\u8b66\u901a\u77e5\u3002","title":"\u7b2c\u4e8c\u8282 \u4f7f\u7528Thanos\u5b9e\u73b0Prometheus\u7684\u9ad8\u53ef\u7528\u4ecb\u7ecd"},{"location":"chap11/34Thanos_intro/#thanosprometheus","text":"\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86 Prometheus \u7684\u4f7f\u7528\uff0c\u4e86\u89e3\u4e86\u57fa\u672c\u7684 PromQL \u8bed\u53e5\u4ee5\u53ca\u7ed3\u5408 Grafana \u6765\u8fdb\u884c\u76d1\u63a7\u56fe\u8868\u5c55\u793a\uff0c\u901a\u8fc7 AlertManager \u6765\u8fdb\u884c\u62a5\u8b66\uff0c\u8fd9\u4e9b\u5de5\u5177\u7ed3\u5408\u8d77\u6765\u5df2\u7ecf\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u642d\u5efa\u4e00\u5957\u6bd4\u8f83\u5b8c\u6574\u7684\u76d1\u63a7\u62a5\u8b66\u7cfb\u7edf\u4e86\uff0c\u4f46\u662f\u4e5f\u4ec5\u4ec5\u5c40\u9650\u4e8e\u6d4b\u8bd5\u73af\u5883\uff0c\u5bf9\u4e8e\u751f\u4ea7\u73af\u5883\u6765\u8bf4\u5219\u8fd8\u6709\u8bb8\u591a\u9700\u8981\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u5176\u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5c31\u662f Prometheus \u7684\u9ad8\u53ef\u7528\u3002 \u5355\u53f0\u7684 Prometheus \u5b58\u5728\u5355\u70b9\u6545\u969c\u7684\u98ce\u9669\uff0c\u968f\u7740\u76d1\u63a7\u89c4\u6a21\u7684\u6269\u5927\uff0c Prometheus \u4ea7\u751f\u7684\u6570\u636e\u91cf\u4e5f\u4f1a\u975e\u5e38\u5927\uff0c\u6027\u80fd\u548c\u5b58\u50a8\u90fd\u4f1a\u9762\u4e34\u95ee\u9898\u3002\u6bcb\u5eb8\u7f6e\u7591\uff0c\u6211\u4eec\u9700\u8981\u4e00\u5957\u9ad8\u53ef\u7528\u7684 Prometheus \u96c6\u7fa4\u3002","title":"\u7b2c\u4e8c\u8282 \u4f7f\u7528Thanos\u5b9e\u73b0Prometheus\u7684\u9ad8\u53ef\u7528\u4ecb\u7ecd"},{"location":"chap11/34Thanos_intro/#1","text":"\u6211\u4eec\u77e5\u9053 Prometheus \u662f\u91c7\u7528\u7684 Pull \u673a\u5236\u83b7\u53d6\u76d1\u63a7\u6570\u636e \uff0c\u5373\u4f7f\u4f7f\u7528 PushGateway \u5bf9\u4e8e Prometheus \u4e5f\u662f Pull \uff0c\u4e3a\u4e86\u786e\u4fdd Prometheus \u670d\u52a1\u7684\u53ef\u7528\u6027\uff0c\u6211\u4eec\u53ea\u9700\u8981\u90e8\u7f72\u591a\u4e2a Prometheus \u5b9e\u4f8b\uff0c\u7136\u540e\u91c7\u96c6\u76f8\u540c\u7684 metrics \u6570\u636e\u5373\u53ef\uff1a \u8fd9\u4e2a\u65b9\u5f0f\u6765\u6ee1\u8db3\u670d\u52a1\u7684\u53ef\u7528\u6027\u5e94\u8be5\u662f\u5e73\u65f6\u6211\u4eec\u4f7f\u7528\u5f97\u6700\u591a\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u5f53\u4e00\u4e2a\u5b9e\u4f8b\u6302\u6389\u540e\u4ece LB \u91cc\u9762\u81ea\u52a8\u5254\u9664\u6389\uff0c\u800c\u4e14\u8fd8\u6709\u8d1f\u8f7d\u5747\u8861\u7684\u4f5c\u7528\uff0c\u53ef\u4ee5\u964d\u4f4e\u4e00\u4e2a Prometheus \u7684\u538b\u529b\uff0c\u4f46 \u8fd9\u79cd\u6a21\u5f0f\u7f3a\u70b9\u4e5f\u662f\u975e\u5e38\u660e\u663e\u7684\uff0c\u5c31\u662f\u4e0d\u6ee1\u8db3\u6570\u636e\u4e00\u81f4\u6027\u4ee5\u53ca\u6301\u4e45\u5316\u95ee\u9898\uff0c\u56e0\u4e3a Prometheus \u662f Pull \u7684\u65b9\u5f0f\uff0c\u5373\u4f7f\u591a\u4e2a\u5b9e\u4f8b\u6293\u53d6\u7684\u662f\u76f8\u540c\u7684\u76d1\u63a7\u6307\u6807\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u6293\u53d6\u8fc7\u6765\u7684\u503c\u5c31\u662f\u4e00\u81f4\u7684\uff0c\u66f4\u4f55\u51b5\u5728\u5b9e\u9645\u7684\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u8fd8\u4f1a\u9047\u5230\u4e00\u4e9b\u7f51\u7edc\u5ef6\u8fdf\u95ee\u9898\uff0c\u6240\u4ee5\u4f1a\u9020\u6210\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u95ee\u9898 \uff0c \u4e0d\u8fc7\u5bf9\u4e8e\u76d1\u63a7\u62a5\u8b66\u8fd9\u4e2a\u573a\u666f\u6765\u8bf4\uff0c\u4e00\u822c\u4e5f\u4e0d\u4f1a\u8981\u6c42\u6570\u636e\u5f3a\u4e00\u81f4\u6027\uff0c\u6240\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4ece\u4e1a\u52a1\u4e0a\u6765\u8bf4\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u8fd9\u79cd\u6570\u636e\u4e0d\u4e00\u81f4\u6027\u5f71\u54cd\u57fa\u672c\u4e0a\u6ca1\u4ec0\u4e48\u5f71\u54cd\u3002\u8fd9\u79cd\u573a\u666f\u9002\u5408\u76d1\u63a7\u89c4\u6a21\u4e0d\u5927\uff0c\u53ea\u9700\u8981\u4fdd\u5b58\u77ed\u5468\u671f\u76d1\u63a7\u6570\u636e\u7684\u573a\u666f\u3002","title":"1 \u53ef\u7528\u6027"},{"location":"chap11/34Thanos_intro/#2","text":"\u4f7f\u7528\u4e0a\u9762\u7684\u57fa\u672c HA \u7684\u6a21\u5f0f\u57fa\u672c\u4e0a\u662f\u53ef\u4ee5\u6ee1\u8db3\u76d1\u63a7\u8fd9\u4e2a\u573a\u666f\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u6570\u636e\u6301\u4e45\u5316\u7684\u95ee\u9898\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u5b9e\u4f8b\u6570\u636e\u4e22\u4e86\u5c31\u6ca1\u529e\u6cd5\u5462\u6062\u590d\u56de\u6765\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4e3a Prometheus \u6dfb\u52a0\u8fdc\u7a0b\u5b58\u50a8\u6765\u4fdd\u8bc1\u6570\u636e\u6301\u4e45\u5316\u3002 \u5728\u7ed9 Prometheus \u914d\u7f6e\u4e0a\u8fdc\u7a0b\u5b58\u50a8\u8fc7\u540e\uff0c\u6211\u4eec\u5c31\u4e0d\u7528\u62c5\u5fc3\u6570\u636e\u4e22\u5931\u7684\u95ee\u9898\u4e86\uff0c\u5373\u4f7f\u5f53\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u5b95\u673a\u6216\u8005\u6570\u636e\u4e22\u5931\u8fc7\u540e\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fdc\u7a0b\u5b58\u50a8\u7684\u6570\u636e\u8fdb\u884c\u6062\u590d\u3002","title":"2 \u6570\u636e\u6301\u4e45\u5316"},{"location":"chap11/34Thanos_intro/#3-leader","text":"\u5176\u5b9e\u4e0a\u9762\u7684\u57fa\u672c HA \u52a0\u4e0a\u8fdc\u7a0b\u5b58\u50a8\u7684\u65b9\u5f0f\u57fa\u672c\u4e0a\u53ef\u4ee5\u6ee1\u8db3 Prometheus \u7684\u9ad8\u53ef\u7528\u4e86\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u591a\u4e2a Prometheus \u5b9e\u4f8b\u90fd\u4f1a\u53bb\u5b9a\u65f6\u62c9\u53d6\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u7136\u540e\u5c06\u70ed\u6570\u636e\u5b58\u50a8\u5728\u672c\u5730\uff0c\u7136\u540e\u51b7\u6570\u636e\u540c\u6b65\u5230\u8fdc\u7a0b\u5b58\u50a8\u4e2d\u53bb\uff0c\u5bf9\u4e8e\u5927\u578b\u96c6\u7fa4\u6765\u8bf4\u9891\u7e41\u7684\u53bb\u62c9\u53d6\u6307\u6807\u6570\u636e\u52bf\u5fc5\u4f1a\u5bf9\u7f51\u7edc\u9020\u6210\u66f4\u5927\u7684\u538b\u529b\u3002\u6240\u4ee5\u6211\u4eec\u4e5f\u901a\u8fc7\u670d\u52a1\u6ce8\u518c\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0 Prometheus \u7684\u9ad8\u53ef\u7528\u6027\uff0c \u96c6\u7fa4\u542f\u52a8\u7684\u65f6\u5019\u6bcf\u4e2a\u8282\u70b9\u90fd\u5c1d\u8bd5\u53bb\u83b7\u53d6\u9501\uff0c\u83b7\u53d6\u6210\u529f\u7684\u8282\u70b9\u6210\u4e3a Leader \u6267\u884c\u4efb\u52a1\uff0c\u82e5\u4e3b\u8282\u70b9\u5b95\u673a\uff0c\u4ece\u8282\u70b9\u83b7\u53d6\u9501\u6210\u4e3a Leader \u5e76\u63a5\u7ba1\u670d\u52a1\u3002 \u4e0d\u8fc7\u8fd9\u79cd\u65b9\u6848\u9700\u8981\u6211\u4eec\u901a\u8fc7\u53bb\u5199\u4ee3\u7801\u8fdb\u884c\u6539\u9020\uff0c\u5982\u679c\u5728 Kubernetes \u4e2d\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528\u81ea\u5e26\u7684 Lease \u5bf9\u8c61\u6765\u83b7\u53d6\u5206\u5e03\u5f0f\u9501\ud83d\udd12\uff0c\u8fd9\u4e0d\u662f\u5f88\u56f0\u96be\uff0c\u53ea\u662f\u4ee5\u540e\u8981\u66f4\u65b0\u7248\u672c\u7a0d\u5fae\u9ebb\u70e6\u70b9\u3002 \u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6848\u57fa\u672c\u4e0a\u90fd\u53ef\u4ee5\u6ee1\u8db3\u57fa\u672c\u7684 Prometheus \u9ad8\u53ef\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e\u5927\u578b\u96c6\u7fa4\u6765\u8bf4\uff0c\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u7684\u538b\u529b\u59cb\u7ec8\u975e\u5e38\u5927\u3002","title":"3 \u901a\u8fc7\u9501\u83b7\u53d6 Leader"},{"location":"chap11/34Thanos_intro/#4","text":"\u5f53\u5355\u4e2a Promthues \u5b9e\u4f8b \u65e0\u6cd5\u5904\u7406\u5927\u91cf\u7684\u91c7\u96c6\u4efb\u52a1\u65f6\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u57fa\u4e8e Prometheus \u8054\u90a6\u96c6\u7fa4\u7684\u65b9\u5f0f\u6765\u5c06\u76d1\u63a7\u4efb\u52a1\u5212\u5206\u5230\u4e0d\u540c\u7684 Prometheus \u5b9e\u4f8b\u4e2d\u53bb\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u91c7\u96c6\u4efb\u52a1\u5212\u5206\u5230\u4e0d\u540c\u7684 Prometheus \u5b9e\u4f8b\u4e2d\u53bb\u6267\u884c\uff0c\u8fdb\u884c\u529f\u80fd\u5206\u7247\uff0c\u6bd4\u5982\u4e00\u4e2a Prometheus \u8d1f\u8d23\u91c7\u96c6\u8282\u70b9\u7684\u6307\u6807\u6570\u636e\uff0c\u53e6\u5916\u4e00\u4e2a Prometheus \u8d1f\u8d23\u91c7\u96c6\u5e94\u7528\u4e1a\u52a1\u76f8\u5173\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u6700\u540e\u5728\u4e0a\u5c42\u901a\u8fc7\u4e00\u4e2a Prometheus \u5bf9\u6570\u636e\u8fdb\u884c\u6c47\u603b\u3002 \u5177\u4f53\u7684\u91c7\u96c6\u4efb\u52a1\u5982\u4f55\u53bb\u8fdb\u884c\u5206\u533a\u4e5f\u6ca1\u6709\u56fa\u5b9a\u7684\u6807\u51c6\uff0c\u9700\u8981\u7ed3\u5408\u5b9e\u9645\u7684\u4e1a\u52a1\u8fdb\u884c\u8003\u8651\uff0c\u9664\u4e86\u4e0a\u9762\u7684\u65b9\u5f0f\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u5355\u4e2a\u7684\u91c7\u96c6\u6570\u636e\u91cf\u5c31\u975e\u5e38\u975e\u5e38\u5927\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u91c7\u96c6\u4e0a\u4e07\u4e2a\u8282\u70b9\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u8fd9\u79cd\u60c5\u51b5\u5373\u4f7f\u6211\u4eec\u5df2\u7ecf\u8fdb\u884c\u4e86\u5206\u533a\uff0c\u4f46\u662f\u5bf9\u4e8e\u5355\u4e2a Prometheus \u6765\u8bf4\u538b\u529b\u4e5f\u662f\u975e\u5e38\u5927\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u6309\u7167\u4efb\u52a1\u7684\u4e0d\u540c\u5b9e\u4f8b\u8fdb\u884c\u5212\u5206\uff0c\u6211\u4eec\u901a\u8fc7 Prometheus \u7684 relabel \u529f\u80fd \uff0c\u901a\u8fc7 hash \u53d6\u6a21\u7684\u65b9\u5f0f\u53ef\u4ee5\u786e\u4fdd\u5f53\u524d Prometheus \u53ea\u91c7\u96c6\u5f53\u524d\u4efb\u52a1\u7684\u4e00\u90e8\u5206\u5b9e\u4f8b\u7684\u76d1\u63a7\u6307\u6807\u3002 # \u7701\u7565\u5176\u4ed6\u914d\u7f6e...... relabel_configs: - source_labels: [__address__] modulus: 4 # \u5c06\u8282\u70b9\u5206\u7247\u6210 4 \u4e2a\u7ec4 target_label\uff1a __tmp_hash action\uff1a hashmod - source_labels\uff1a [__tmp_hash] regex: ^1$ # \u53ea\u6293\u7b2c2\u4e2a\u7ec4\u4e2d\u8282\u70b9\u7684\u6570\u636e(\u5e8f\u53f70\u4e3a\u7b2c1\u4e2a\u7ec4) action: keep \u5230\u8fd9\u91cc\u6211\u4eec\u57fa\u672c\u4e0a\u5c31\u5b8c\u6210\u4e86 Prometheus \u9ad8\u53ef\u7528\u7684\u6539\u9020\u3002\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u96c6\u7fa4\u548c\u5927\u89c4\u6a21\u96c6\u7fa4\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u6848\uff0c\u4f46\u662f\u5176\u4e2d\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u90e8\u5206\u5c31\u662f\u8fdc\u7a0b\u5b58\u50a8\uff0c \u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u6570\u636e\u7684\u6301\u4e45\u5316\u5c31\u5fc5\u987b\u4f7f\u7528\u8fdc\u7a0b\u5b58\u50a8\u3002 \u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u5c06\u91cd\u70b9\u4ecb\u7ecd\u4e0b\u8fdc\u7a0b\u5b58\u50a8\u7684\u65f6\u5019\uff0c\u8fd9\u91cc\u6211\u4eec\u4e3b\u8981\u8bb2\u89e3\u76ee\u524d\u6bd4\u8f83\u6d41\u884c\u7684\u65b9\u6848\uff1a Thanos \uff0c\u5b83\u5b8c\u5168\u517c\u5bb9 P rometheus API \uff0c \u63d0\u4f9b\u7edf\u4e00\u67e5\u8be2\u805a\u5408\u5206\u5e03\u5f0f\u90e8\u7f72 Prometheus \u6570\u636e\u7684\u80fd\u529b\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u6570\u636e\u957f\u671f\u5b58\u50a8\u5230\u5404\u79cd\u5bf9\u8c61\u5b58\u50a8\uff08\u6bd4\u5982 S3\u3001\u963f\u91cc\u4e91 OSS \u7b49 \uff09\u4ee5\u53ca\u964d\u4f4e\u91c7\u6837\u7387\u6765\u52a0\u901f\u5927\u65f6\u95f4\u8303\u56f4\u7684\u6570\u636e\u67e5\u8be2\u3002","title":"4 \u8054\u90a6\u96c6\u7fa4"},{"location":"chap11/34Thanos_intro/#5-thanos","text":"Thanos \u662f\u4e00\u4e2a\u57fa\u4e8e Prometheus \u5b9e\u73b0\u7684\u76d1\u63a7\u65b9\u6848\uff0c\u5176\u4e3b\u8981\u8bbe\u8ba1\u76ee\u7684\u662f\u89e3\u51b3\u539f\u751f Prometheus \u4e0a\u7684\u75db\u70b9\uff0c\u5e76\u4e14\u505a\u8fdb\u4e00\u6b65\u7684\u63d0\u5347\uff0c\u4e3b\u8981\u7684\u7279\u6027\u6709\uff1a \u5168\u5c40\u67e5\u8be2\uff0c\u9ad8\u53ef\u7528\uff0c\u52a8\u6001\u62d3\u5c55\uff0c\u957f\u671f\u5b58\u50a8 \u3002\u4e0b\u56fe\u662f Thanos \u5b98\u65b9\u7684\u67b6\u6784\u56fe\uff1a Thanos \u4e3b\u8981\u7531\u5982\u4e0b\u51e0\u4e2a\u7279\u5b9a\u529f\u80fd\u7684\u7ec4\u4ef6\u7ec4\u6210\uff1a \u8fb9\u8f66\u7ec4\u4ef6\uff08 Sidecar \uff09\uff1a\u8fde\u63a5 Prometheus \uff0c\u5e76\u628a Prometheus \u66b4\u9732\u7ed9\u67e5\u8be2\u7f51\u5173\uff08 Querier/Query \uff09\uff0c\u4ee5\u4f9b\u5b9e\u65f6\u67e5\u8be2\uff0c\u5e76\u4e14\u53ef\u4ee5\u4e0a\u4f20 Prometheus \u6570\u636e\u7ed9\u4e91\u5b58\u50a8\uff0c\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58 \u67e5\u8be2\u7f51\u5173\uff08 Querier/Query \uff09\uff1a\u5b9e\u73b0\u4e86 Prometheus API \uff0c\u4e0e\u6c47\u96c6\u5e95\u5c42\u7ec4\u4ef6\uff08\u5982\u8fb9\u8f66\u7ec4\u4ef6 Sidecar\uff0c\u6216\u662f\u5b58\u50a8\u7f51\u5173 Store Gateway\uff09\u7684\u6570\u636e \u5b58\u50a8\u7f51\u5173\uff08 Store Gateway \uff09\uff1a\u5c06\u4e91\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u5185\u5bb9\u66b4\u9732\u51fa\u6765 \u538b\u7f29\u5668\uff08 Compactor \uff09\uff1a\u5c06\u4e91\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\u548c\u4e0b\u91c7\u6837 \u63a5\u6536\u5668\uff08 Receiver \uff09\uff1a\u4ece Prometheus \u7684 remote-write WAL \uff08Prometheus \u8fdc\u7a0b\u9884\u5199\u5f0f\u65e5\u5fd7\uff09\u83b7\u53d6\u6570\u636e\uff0c\u66b4\u9732\u51fa\u53bb\u6216\u8005\u4e0a\u4f20\u5230\u4e91\u5b58\u50a8 \u89c4\u5219\u7ec4\u4ef6\uff08 Ruler \uff09\uff1a\u9488\u5bf9\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u8bc4\u4f30\u548c\u62a5\u8b66 Bucket \uff1a\u4e3b\u8981\u7528\u4e8e\u5c55\u793a\u5bf9\u8c61\u5b58\u50a8\u4e2d\u5386\u53f2\u6570\u636e\u7684\u5b58\u50a8\u60c5\u51b5\uff0c\u67e5\u770b\u6bcf\u4e2a\u6307\u6807\u6e90\u4e2d\u6570\u636e\u5757\u7684\u538b\u7f29\u7ea7\u522b\uff0c\u89e3\u6790\u5ea6\uff0c\u5b58\u50a8\u65f6\u6bb5\u548c\u65f6\u95f4\u957f\u5ea6\u7b49\u4fe1\u606f\u3002","title":"5 Thanos"},{"location":"chap11/34Thanos_intro/#6","text":"Thanos \u662f\u540c\u65f6\u652f\u6301 Prometheus \u8bfb\u548c\u5199\u7684\u8fdc\u7a0b\u5b58\u50a8\u65b9\u6848\uff0c\u9996\u5148\u6211\u4eec\u5148\u770b\u4e0b\u6307\u6807\u5199\u5165\u7684\u6574\u4e2a\u6d41\u7a0b\uff1a \u9996\u5148 Prometheus \u4ece\u6240\u91c7\u96c6\u670d\u52a1\u7684 metrics \u63a5\u53e3\u6293\u53d6\u6307\u6807\u6570\u636e\uff0c\u540c\u65f6\u6839\u636e\u81ea\u8eab\u6240\u914d\u7f6e\u7684 recording rules \u5b9a\u671f\u5bf9\u6293\u53d6\u5230\u7684\u6307\u6807\u6570\u636e\u8fdb\u884c\u8bc4\u4f30\uff0c\u5c06\u7ed3\u679c\u4ee5 TSDB \u683c\u5f0f\u5206\u5757\u5b58\u50a8\u5230\u672c\u5730\uff0c\u6bcf\u4e2a\u6570\u636e\u5757\u7684\u5b58\u50a8\u65f6\u957f\u4e3a2\u5c0f\u65f6\uff0c\u4e14\u9ed8\u8ba4\u7981\u7528\u4e86\u538b\u7f29\u529f\u80fd\u3002 \u7136\u540e sidecar \u55c5\u63a2\u5230 Prometheus \u7684\u6570\u636e\u5b58\u50a8\u76ee\u5f55\u751f\u6210\u4e86\u65b0\u7684\u53ea\u8bfb\u6570\u636e\u5757\u65f6\uff0c\u4f1a\u5c06\u8be5\u6570\u636e\u5757\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u6876\u4e2d\u505a\u4e3a\u957f\u671f\u5386\u53f2\u6570\u636e\u4fdd\u5b58\uff0c\u5728\u4e0a\u4f20\u65f6\u4f1a\u5c06\u6570\u636e\u5757\u4e2d\u7684 meta.json \u8fdb\u884c\u4fee\u6539\u6dfb\u52a0 thanos \u76f8\u5173\u7684\u5b57\u6bb5\uff0c\u5982 external_labels \u3002 rule \u6839\u636e\u6240\u914d\u7f6e\u7684 recording rules \u5b9a\u671f\u5730\u5411 query \u53d1\u8d77\u67e5\u8be2\u83b7\u53d6\u8bc4\u4f30\u6240\u9700\u7684\u6307\u6807\u503c\uff0c\u5e76\u5c06\u7ed3\u679c\u4ee5 TSDB \u683c\u5f0f\u5206\u5757\u5b58\u50a8\u5230\u672c\u5730\u3002\u6bcf\u4e2a\u6570\u636e\u5757\u7684\u5b58\u50a8\u65f6\u957f\u4e3a 2 \u5c0f\u65f6\uff0c\u4e14\u9ed8\u8ba4\u7981\u7528\u4e86\u538b\u7f29\u529f\u80fd\uff0c\u6bcf\u4e2a\u6570\u636e\u5757\u7684 meta.json \u4e5f\u9644\u5e26\u4e86 thanos \u62d3\u5c55\u7684 external_lables \u5b57\u6bb5\u3002\u5f53\u672c\u5730\u751f\u6210\u4e86\u65b0\u7684\u53ea\u8bfb\u6570\u636e\u5757\u65f6\uff0c\u5176\u81ea\u8eab\u4f1a\u5c06\u8be5\u6570\u636e\u5757\u4e0a\u4f20\u5230\u8fdc\u7aef\u5bf9\u8c61\u5b58\u50a8\u6876\u4e2d\u505a\u4e3a\u957f\u671f\u5386\u53f2\u6570\u636e\u4fdd\u5b58\u3002 compact \u5b9a\u671f\u5c06\u5bf9\u8c61\u5b58\u50a8\u4e2d\u5730\u6570\u636e\u5757\u8fdb\u884c\u538b\u7f29\u548c\u964d\u51c6\u91c7\u6837\uff0c\u8fdb\u884c\u538b\u7f29\u65f6\u6570\u636e\u5757\u4e2d\u7684 truck \u4f1a\u8fdb\u884c\u5408\u5e76\uff0c\u5bf9\u5e94\u7684 meta.json \u4e2d\u7684 level \u4e5f\u4f1a\u4e00\u540c\u589e\u957f\uff0c\u6bcf\u6b21\u538b\u7f29\u7d2f\u52a0 1 \uff0c\u521d\u59cb\u503c\u4e3a 1 \u3002\u5728\u8fdb\u884c\u964d\u51c6\u91c7\u6837\u65f6\u4f1a\u521b\u5efa\u65b0\u7684\u6570\u636e\u5757\uff0c\u6839\u636e\u91c7\u6837\u6b65\u957f\u4ece\u539f\u6709\u7684\u6570\u636e\u5757\u4e2d\u62bd\u53d6\u503c\u5b58\u50a8\u5230\u65b0\u7684\u6570\u636e\u5757\u4e2d\uff0c\u5728 meta.json \u4e2d\u8bb0\u5f55 resolution \u4e3a\u91c7\u6837\u6b65\u957f\u3002 \u8bfb\u53d6\u6307\u6807\u7684\u6d41\u7a0b\u4e3a\uff1a \u9996\u5148\u5ba2\u6237\u7aef\u901a\u8fc7 query API \u5411 query \u53d1\u8d77\u67e5\u8be2\uff0c query \u5c06\u8bf7\u6c42\u8f6c\u6362\u6210 StoreAPI \u53d1\u9001\u5230\u5176\u4ed6\u7684 query \u3001 sidecar \u3001 rule \u548c store \u4e0a\u3002 sidecar \u63a5\u6536\u5230\u6765\u81ea\u4e8e query \u53d1\u8d77\u7684\u67e5\u8be2\u8bf7\u6c42\u540e\u5c06\u5176\u8f6c\u6362\u6210 query API \u8bf7\u6c42\uff0c\u53d1\u9001\u7ed9\u5176\u7ed1\u5b9a\u7684 Prometheus \uff0c\u7531 Prometheus \u4ece\u672c\u5730\u8bfb\u53d6\u6570\u636e\u5e76\u54cd\u5e94\uff0c\u8fd4\u56de\u77ed\u671f\u7684\u672c\u5730\u91c7\u96c6\u548c\u8bc4\u4f30\u6570\u636e\u3002 rule \u63a5\u6536\u5230\u6765\u81ea\u4e8e query \u53d1\u8d77\u7684\u67e5\u8be2\u8bf7\u6c42\u540e\u76f4\u63a5\u4ece\u672c\u5730\u8bfb\u53d6\u6570\u636e\u5e76\u54cd\u5e94\uff0c\u8fd4\u56de\u77ed\u671f\u7684\u672c\u5730\u8bc4\u4f30\u6570\u636e\u3002 store \u63a5\u6536\u5230\u6765\u81ea\u4e8e query \u53d1\u8d77\u7684\u67e5\u8be2\u8bf7\u6c42\u540e\u9996\u5148\u4ece\u5bf9\u8c61\u5b58\u50a8\u6876\u4e2d\u904d\u5386\u6570\u636e\u5757\u7684 meta.json \uff0c\u6839\u636e\u5176\u4e2d\u8bb0\u5f55\u7684\u65f6\u95f4\u8303\u56f4\u548c\u6807\u7b7e\u5148\u8fdb\u884c\u4e00\u6b21\u8fc7\u6ee4\u3002\u63a5\u4e0b\u6765\u4ece\u5bf9\u8c61\u5b58\u50a8\u6876\u4e2d\u8bfb\u53d6\u6570\u636e\u5757\u7684 index \u548c chunks \u8fdb\u884c\u67e5\u8be2\uff0c\u90e8\u5206\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684 index \u4f1a\u88ab\u7f13\u5b58\u4e0b\u6765\uff0c\u4e0b\u6b21\u67e5\u8be2\u4f7f\u7528\u5230\u65f6\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u3002\u6700\u7ec8\u8fd4\u56de\u957f\u671f\u7684\u5386\u53f2\u91c7\u96c6\u548c\u8bc4\u4f30\u6307\u6807\u3002 \u5bf9\u4e8e\u53d1\u9001\u62a5\u8b66\u7684\u6d41\u7a0b\u5982\u4e0b\u6240\u793a\uff1a Prometheus \u6839\u636e\u81ea\u8eab\u914d\u7f6e\u7684 alerting \u89c4\u5219\u5b9a\u671f\u5730\u5bf9\u81ea\u8eab\u91c7\u96c6\u7684\u6307\u6807\u8fdb\u884c\u8bc4\u4f30\uff0c\u5f53\u544a\u8b66\u6761\u4ef6\u6ee1\u8db3\u7684\u60c5\u51b5\u4e0b\u53d1\u8d77\u544a\u8b66\u5230 Alertmanager \u4e0a\u3002 rule \u6839\u636e\u81ea\u8eab\u914d\u7f6e\u7684 alerting \u89c4\u5219\u5b9a\u671f\u7684\u5411 query \u53d1\u8d77\u67e5\u8be2\u8bf7\u6c42\u83b7\u53d6\u8bc4\u4f30\u6240\u9700\u7684\u6307\u6807\uff0c\u5f53\u544a\u8b66\u6761\u4ef6\u6ee1\u8db3\u7684\u60c5\u51b5\u4e0b\u53d1\u8d77\u544a\u8b66\u5230 Alertmanage r \u4e0a\u3002 Alertmanager \u63a5\u6536\u5230\u6765\u81ea\u4e8e Prometheus \u548c rule \u7684\u544a\u8b66\u6d88\u606f\u540e\u8fdb\u884c\u5206\u7ec4\u5408\u5e76\u540e\u53d1\u51fa\u544a\u8b66\u901a\u77e5\u3002","title":"6 \u5de5\u4f5c\u6d41\u7a0b"},{"location":"chap11/35Thanos_install/","text":"\u7b2c\u4e09\u8282 Prometheus\u9ad8\u53ef\u7528Thanos\u5b66\u4e60-sidercar\u548cquery & Thanos\u90e8\u7f72 kubectl create namespace thanos \u6700\u8fd1\u5de5\u4f5c\u4e2d\u7684\u4e3b\u8981\u4efb\u52a1\u90fd\u662f\u5728\u4e1a\u52a1\u7684\u9ad8\u53ef\u7528\u4e0a\uff0c\u7531\u4e8e\u9879\u76ee\u4e2d\u4f7f\u7528\u5230\u4e86Promethues\uff0c\u6240\u4ee5\u4e5f\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\u7814\u7a76\u4e86\u4e00\u4e0bPromethues\u7684\u9ad8\u53ef\u7528\u65b9\u6848\u3002\u53d1\u73b0\u4e5f\u6ca1\u6709blog\u544a\u8bc9\u600e\u4e48\u53bbdeploy\u4e00\u4e2aThanos\u7684\u96c6\u7fa4\uff0c\u6240\u4ee5\u672c\u6587\u4e5f\u4f1a\u7ed9\u51fadeploy\u7684\u65b9\u6cd5\u548c\u6e90\u6587\u4ef6 \u7531\u4e8e Promethues \u672c\u8eab\u4ec5\u662f\u4e00\u4e2a\u91c7\u6837\u7cfb\u7edf\uff0c\u5982\u679c\u505a\u6210 master-slave\u6a21 \u5f0f\uff0c\u5b58\u5728\u5207\u6362\u5f00\u9500\uff0c\u5e76\u4e14\u589e\u52a0\u7cfb\u7edf\u7684\u590d\u6742\u6027\u3002\u56e0\u6b64\u5b98\u65b9\u7ed9\u51fa\u7684\u9ad8\u53ef\u7528\u5efa\u8bae\u65b9\u6848\u5982\u4e0b\u56fe\uff0c\u4f7f\u7528\u591a\u4e2a\u5bf9\u7b49\u7684 Promethues \uff0c\u5bf9\u6240\u6709\u7684 DataSource \u5747\u8fdb\u884c\u91c7\u6837\u3002\u8fd9\u91cc\u7684 Service \u662f K8S \u7684 Service \uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u8bbf\u95ee\u8be5 Service \u4f1a\u968f\u673a\u5730\u8bbf\u95ee\u540e\u7aef\u7684\u4e24\u4e2a Promethues \u3002 \u4e0a\u9762\u65b9\u6848\u4e2d\uff0c\u5f53\u5176\u4e2d\u4e00\u4e2a Promethues pod \u4e2d\u65ad\u65f6\uff0c K8S \u4f1a\u5c06\u6d41\u91cf\u4ec5\u5bfc\u5411\u53e6\u5916\u4e00\u4e2a pod \u3002\u4f46\u662f pod \u4e2d\u65ad\u671f\u95f4\uff0c\u5176\u65e0\u6cd5\u83b7\u53d6\u6570\u636e\uff0c\u56e0\u6b64\u5f53\u4e2d\u65ad\u7684 pod \u6062\u590d\u4e4b\u540e\uff0c\u5728\u5b58\u50a8\u7aef\uff0c\u9700\u8981\u8fdb\u884c sync \u3002\u53ef\u662f\uff0c\u4f55\u65f6 sync \uff0c\u600e\u4e48 sync \u662f\u4e00\u4e2a\u6bd4\u8f83\u590d\u6742\u7684\u95ee\u9898\uff0c\u5c31\u7b97\u80fd\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\u8fdb\u884c\u6587\u4ef6 sync \uff0c\u672c\u8eab\u4e5f\u4f1a\u5b58\u5728\u5404\u5f0f\u5404\u6837\u7684\u98ce\u9669\u3002 \u6240\u4ee5 Thanos \u5c31\u6ca1\u6709\u4f7f\u7528\u5b58\u50a8\u7aef Sync \u7684\u65b9\u6cd5\u6765\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u800c\u662f\u91c7\u7528\u624d query \u7aef\u5bf9\u67e5\u8be2\u5230\u7684\u6570\u636e\u8fdb\u884c\u5408\u5e76 \u3002\u4e0b\u9762\u4f1a\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bThanos\u7684\u539f\u7406\u3002 1. Thanos\u57fa\u672c\u539f\u7406 \u57fa\u4e8e\u5b98\u65b9\u7684\u4ecb\u7ecd\uff0c\u6211\u5c06 Thanos \u7684\u67b6\u6784\u7b80\u5316\uff0c\u4ec5\u4fdd\u5b58\u6700\u57fa\u672c\u7684\uff0c\u6211\u6240\u5173\u5fc3\u7684\u90e8\u5206\u5982\u4e0b\uff0c \u4e3b\u8981\u5305\u542b3\u90e8\u5206\uff1a Thanos Query. \u4e3b\u8981\u662f\u5bf9\u4ece Promethues Pod \u91c7\u96c6\u6765\u7684\u6570\u636e\u8fdb\u884c merge \uff0c\u63d0\u4f9b\u67e5\u8be2\u63a5\u53e3\u7ed9\u5ba2\u6237\u7aef\uff08\u5b98\u65b9\u6587\u6863\u4e0a\u6682\u65f6\u6ca1\u770b\u5230 merge \u7684\u539f\u7406\uff0c\u8fd9\u7bc7\u603b\u7ed3\u4e4b\u540e\u9700\u8981\u82b1\u4e9b\u65f6\u95f4\u770b\u6e90\u7801\u5b66\u4e60\u4e00\u4e0b\uff09\uff1b Thanos SideCar . \u5c06 Promethues container \u7684\u6570\u636e\u8fdb\u884c\u5c01\u88c5\uff0c\u4ee5\u63d0\u4f9b\u63a5\u53e3\u7ed9 Thanos Query \uff08\u5b9e\u9645\u4e0aSideCar\u8fd8\u80fd\u63d0\u4f9b\u66f4\u591a\u7528\u5904\uff0c\u4f46\u662f\u8fd9\u91cc\u6682\u65f6\u6211\u4eec\u4ec5\u5173\u5fc3\u6570\u636e\u67e5\u8be2\uff0c\u540e\u9762\u518d\u8fdb\u4e00\u6b65\u7814\u7a76\uff0c\u6682\u65f6\u4e0d\u8981\u56fe\u591a\uff09 Prometheus Container . \u91c7\u96c6\u6570\u636e\uff0c\u901a\u8fc7 Remote Read API \u63d0\u4f9b\u63a5\u53e3\u7ed9 Thanos SideCar \u3002 2. Thanos\u90e8\u7f72 \u672c\u6587\u805a\u7126 Thanos \u7684\u4e91\u539f\u751f\u90e8\u7f72\u65b9\u5f0f\uff0c\u5145\u5206\u5229\u7528 Kubernetes \u7684\u8d44\u6e90\u8c03\u5ea6\u4e0e\u52a8\u6001\u6269\u5bb9\u80fd\u529b\u3002\u4ece\u5b98\u65b9\u6587\u6863\u91cc\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u524d Thanos \u5728 Kubernetes \u4e0a\u90e8\u7f72\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a prometheus-operator \uff1a\u96c6\u7fa4\u4e2d\u5b89\u88c5\u4e86 prometheus-operator \u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa CRD \u5bf9\u8c61\u6765\u90e8\u7f72 Thanos \u4e86\uff1b \u793e\u533a\u8d21\u732e\u7684\u4e00\u4e9b helm charts \uff1a\u5f88\u591a\u4e2a\u7248\u672c\uff0c\u76ee\u6807\u90fd\u662f\u80fd\u591f\u4f7f\u7528 helm \u6765\u4e00\u952e\u90e8\u7f72 thanos\uff1b kube-thanos\uff1aThanos \u5b98\u65b9\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u5305\u542b\u90e8\u7f72 thanos \u5230 kubernetes \u7684 jsonnet \u6a21\u677f\u4e0e yaml \u793a\u4f8b\u3002 \u672c\u6587\u5c06\u4f7f\u7528\u57fa\u4e8e kube-thanos \u63d0\u4f9b\u7684 yaml \u793a\u4f8b ( examples/all/manifests ) \u6765\u90e8\u7f72\uff0c\u539f\u56e0\u662f prometheus-operator \u4e0e\u793e\u533a\u7684 helm chart \u65b9\u5f0f\u90e8\u7f72\u591a\u4e86\u4e00\u5c42\u5c01\u88c5\uff0c\u5c4f\u853d\u4e86\u8bb8\u591a\u7ec6\u8282\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u5b9e\u73b0\u90fd\u8fd8\u4e0d\u592a\u6210\u719f\u3002 \u76f4\u63a5\u4f7f\u7528 kubernetes \u7684 yaml \u8d44\u6e90\u6587\u4ef6\u90e8\u7f72\u66f4\u76f4\u89c2\uff0c\u4e5f\u66f4\u5bb9\u6613\u505a\u81ea\u5b9a\u4e49\uff0c\u800c\u4e14\u6211\u76f8\u4fe1 Thanos \u7528\u6237\u901a\u5e38\u90fd\u662f\u9ad8\u73a9\uff0c\u6709\u5fc5\u8981\u5bf9 thanos \u7406\u89e3\u900f\u5f7b\uff0c\u65e5\u540e\u624d\u80fd\u66f4\u597d\u5730\u6839\u636e\u5b9e\u9645\u573a\u666f\u505a\u67b6\u6784\u548c\u914d\u7f6e\u7684\u8c03\u6574\uff0c\u76f4\u63a5\u4f7f\u7528 yaml \u90e8\u7f72\u80fd\u591f\u8ba9\u6211\u4eec\u770b\u6e05\u7ec6\u8282\u3002 3 \u65b9\u6848 \u6211\u4eec\u518d\u6765\u770b\u770b\u5982\u4f55\u9009\u578b\u90e8\u7f72\u65b9\u6848\u3002 3-1 Sidecar or Receiver Receiver \u65b9\u6848\u662f\u8ba9 Prometheus \u901a\u8fc7 remote wirte API \u5c06\u6570\u636e push \u5230 Receiver \u96c6\u4e2d\u5b58\u50a8\uff08\u540c\u6837\u4f1a\u6e05\u7406\u8fc7\u671f\u6570\u636e\uff09\uff1a \u90a3\u4e48\u8be5\u9009\u54ea\u79cd\u65b9\u6848\u5462\uff1f\u6211\u7684\u5efa\u8bae\u662f\uff1a \u5982\u679c\u4f60\u7684 Query \u8ddf Sidecar \u79bb\u7684\u6bd4\u8f83\u8fdc\uff0c\u6bd4\u5982 Sidecar \u5206\u5e03\u5728\u591a\u4e2a\u6570\u636e\u4e2d\u5fc3\uff0c Query \u5411\u6240\u6709 Sidecar \u67e5\u6570\u636e\uff0c\u901f\u5ea6\u4f1a\u5f88\u6162\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u8003\u8651\u7528 Receiver \uff0c\u5c06\u6570\u636e\u96c6\u4e2d\u5410\u5230 Receiver \uff0c\u7136\u540e Receiver \u4e0e Query \u90e8\u7f72\u5728\u4e00\u8d77\uff0c Query \u76f4\u63a5\u5411 Receiver \u67e5\u6700\u65b0\u6570\u636e\uff0c\u63d0\u5347\u67e5\u8be2\u6027\u80fd\uff1b \u5982\u679c\u4f60\u7684\u4f7f\u7528\u573a\u666f\u53ea\u5141\u8bb8 Prometheus \u5c06\u6570\u636e push \u5230\u8fdc\u7a0b\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 Receiver \u3002\u6bd4\u5982 IoT \u8bbe\u5907\u6ca1\u6709\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u53ea\u80fd\u5c06\u6570\u636e push \u5230\u8fdc\u7a0b\u3002 \u6b64\u5916\u7684\u573a\u666f\u5e94\u8be5\u90fd\u5c3d\u91cf\u4f7f\u7528 Sidecar \u65b9\u6848\u3002 3-2 \u8bc4\u4f30\u662f\u5426\u9700\u8981 Ruler Ruler \u662f\u4e00\u4e2a\u53ef\u9009\u7ec4\u4ef6\uff0c\u539f\u5219\u4e0a\u63a8\u8350\u5c3d\u91cf\u4f7f\u7528 Prometheus \u81ea\u5e26\u7684 rule \u529f\u80fd\uff08\u751f\u6210\u65b0\u6307\u6807+\u544a\u8b66\uff09\uff0c\u8fd9\u4e2a\u529f\u80fd\u9700\u8981\u4e00\u4e9b Prometheus \u6700\u65b0\u6570\u636e\uff0c\u76f4\u63a5\u4f7f\u7528 Prometheus \u672c\u673a rule \u529f\u80fd\u548c\u6570\u636e\uff0c\u6027\u80fd\u5f00\u9500\u76f8\u6bd4 Thanos Ruler \u8fd9\u79cd\u5206\u5e03\u5f0f\u65b9\u6848\u5c0f\u5f97\u591a\uff0c\u5e76\u4e14\u51e0\u4e4e\u4e0d\u4f1a\u51fa\u9519\uff0c Thanos Ruler \u7531\u4e8e\u662f\u5206\u5e03\u5f0f\uff0c\u6240\u4ee5\u66f4\u5bb9\u6613\u51fa\u9519\u4e00\u4e9b\u3002 \u5982\u679c\u67d0\u4e9b\u6709\u5173\u8054\u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a\u4e0d\u540c Prometheus \u4e0a\uff0c\u6bd4\u5982\u5bf9\u67d0\u4e2a\u5927\u89c4\u6a21\u670d\u52a1\u91c7\u96c6\u505a\u4e86\u5206\u7247\uff0c\u6bcf\u4e2a Prometheus \u4ec5\u91c7\u96c6\u4e00\u90e8\u5206 endpoint \u7684\u6570\u636e\uff0c\u5bf9\u4e8e record \u7c7b\u578b\u7684 rule \uff08\u751f\u6210\u7684\u65b0\u6307\u6807\uff09\uff0c\u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528 Prometheus \u81ea\u5e26\u7684 rule \u529f\u80fd\uff0c\u5728\u67e5\u8be2\u65f6\u518d\u805a\u5408\u4e00\u4e0b\u5c31\u53ef\u4ee5\uff08\u5982\u679c\u53ef\u4ee5\u63a5\u53d7\u7684\u8bdd\uff09\u3002 \u5bf9\u4e8e alert \u7c7b\u578b\u7684 rule \uff0c\u6211\u4eec\u5c31\u9700\u8981\u7528 Thanos Ruler \u6765\u505a\u4e86\uff0c\u56e0\u4e3a\u6709\u5173\u8054\u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a Prometheus \u4e0a\uff0c\u7528\u5355\u673a\u6570\u636e\u53bb\u505a alert \u8ba1\u7b97\u662f\u4e0d\u51c6\u786e\u7684\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u8bef\u544a\u8b66\u6216\u4e0d\u544a\u8b66\u3002 3-3 \u8bc4\u4f30\u662f\u5426\u9700\u8981Store Gateway\u4e0eCompact Store \u4e5f\u662f\u4e00\u4e2a\u53ef\u9009\u7ec4\u4ef6\uff0c\u4e5f\u662f Thanos \u7684\u4e00\u5927\u4eae\u70b9\u7684\u5173\u952e\uff1a \u6570\u636e\u957f\u671f\u4fdd\u5b58 \u3002 \u8bc4\u4f30\u662f\u5426\u9700\u8981 Store \u7ec4\u4ef6\u5b9e\u9645\u5c31\u662f\u8bc4\u4f30\u4e00\u4e0b\u81ea\u5df1\u662f\u5426\u6709\u6570\u636e\u957f\u671f\u5b58\u50a8\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u67e5\u770b\u4e00\u4e24\u4e2a\u6708\u524d\u7684\u76d1\u63a7\u6570\u636e\u3002\u5982\u679c\u6709\uff0c\u90a3\u4e48 Thanos \u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4fdd\u5b58\u3002 Thanos \u652f\u6301\u4ee5\u4e0b\u5bf9\u8c61\u5b58\u50a8\uff1a Google Cloud Storage AWS/S3 Azure Storage Account OpenStack Swift Tencent COS AliYun OSS \u5728\u56fd\u5185\uff0c\u6700\u65b9\u4fbf\u8fd8\u662f\u4f7f\u7528\u56fd\u5185\u4e3b\u6d41\u516c\u6709\u4e91\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\u3002\u5982\u679c\u4f60\u7684\u670d\u52a1\u6ca1\u6709\u8dd1\u5728\u516c\u6709\u4e91\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8ddf\u4e91\u670d\u52a1\u5382\u5546\u62c9\u4e13\u7ebf\u7684\u65b9\u5f0f\u6765\u8d70\u5185\u7f51\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\uff0c\u8fd9\u6837\u901f\u5ea6\u901a\u5e38\u4e5f\u662f\u53ef\u4ee5\u6ee1\u8db3\u9700\u6c42\u7684\uff1b\u5982\u679c\u5b9e\u5728\u7528\u4e0d\u4e86\u516c\u6709\u4e91\u7684\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b89\u88c5 minio \u6765\u642d\u5efa\u517c\u5bb9 AWS \u7684 S3 \u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\u3002 \u641e\u5b9a\u4e86\u5bf9\u8c61\u5b58\u50a8\uff0c\u8fd8\u9700\u8981\u7ed9 Thanos \u591a\u4e2a\u7ec4\u4ef6\u914d\u7f6e\u5bf9\u8c61\u5b58\u50a8\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u80fd\u591f\u4e0a\u4f20\u4e0e\u8bfb\u53d6\u76d1\u63a7\u6570\u636e\u3002\u9664 Query \u4ee5\u5916\u7684\u6240\u6709 Thanos \u7ec4\u4ef6\uff08 Sidecar \u3001 Receiver \u3001 Ruler \u3001 Store Gateway \u3001 Compac t\uff09\u90fd\u9700\u8981\u914d\u7f6e\u5bf9\u8c61\u5b58\u50a8\u4fe1\u606f\uff0c\u4f7f\u7528 --objstore.config \u76f4\u63a5\u914d\u7f6e\u5185\u5bb9\u6216 --objstore.config-file \u5f15\u7528\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u6587\u4ef6\uff0c\u4e0d\u540c\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1ahttps://thanos.io/storage.md \u901a\u5e38\u4f7f\u7528\u4e86\u5bf9\u8c61\u5b58\u50a8\u6765\u957f\u671f\u4fdd\u5b58\u6570\u636e\u4e0d\u6b62\u8981\u5b89\u88c5 Store Gateway \uff0c\u8fd8\u9700\u8981\u5b89\u88c5 Compact \u6765\u5bf9\u5bf9\u8c61\u5b58\u50a8\u91cc\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\u4e0e\u964d\u91c7\u6837\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u5347\u67e5\u8be2\u5927\u65f6\u95f4\u8303\u56f4\u76d1\u63a7\u6570\u636e\u7684\u6027\u80fd\u3002 \u6ce8\u610f\uff1a Compact \u5e76\u4e0d\u4f1a\u51cf\u5c11\u5bf9\u8c61\u5b58\u50a8\u7684\u4f7f\u7528\u7a7a\u95f4\uff0c\u800c\u662f\u4f1a\u589e\u52a0\uff0c\u589e\u52a0\u66f4\u957f\u91c7\u6837\u95f4\u9694\u7684\u76d1\u63a7\u6570\u636e\uff0c\u8fd9\u6837\u5f53\u67e5\u8be2\u5927\u65f6\u95f4\u8303\u56f4\u6570\u636e\u65f6\uff0c\u5c31\u81ea\u52a8\u62c9\u53d6\u66f4\u957f\u65f6\u95f4\u95f4\u9694\u91c7\u6837\u7684\u6570\u636e\u4ee5\u51cf\u5c11\u67e5\u8be2\u6570\u636e\u7684\u603b\u91cf\uff0c \u4ece\u800c\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6 \uff08\u5927\u65f6\u95f4\u8303\u56f4\u7684\u6570\u636e\u4e0d\u9700\u8981\u90a3\u4e48\u7cbe\u7ec6\uff09\uff0c\u5f53\u653e\u5927\u67e5\u770b\u65f6\uff08\u9009\u62e9\u5176\u4e2d\u4e00\u5c0f\u6bb5\u65f6\u95f4\uff09\uff0c\u53c8\u81ea\u52a8\u9009\u62e9\u62c9\u53d6\u66f4\u77ed\u91c7\u6837\u95f4\u9694\u7684\u6570\u636e\uff0c\u4ece\u800c\u4e5f\u80fd\u663e\u793a\u51fa\u5c0f\u65f6\u95f4\u8303\u56f4\u7684\u76d1\u63a7\u7ec6\u8282 \u3002 3-4 \u90e8\u7f72\u5b9e\u8df5 \u8fd9\u91cc\u4ee5 Thanos \u6700\u65b0\u7248\u672c\u4e3a\u4f8b\uff0c\u9009\u62e9 Sidecar \u65b9\u6848\uff0c\u4ecb\u7ecd\u5404\u4e2a\u7ec4\u4ef6\u7684 K8s yaml \u5b9a\u4e49\u65b9\u5f0f\u5e76\u89e3\u91ca\u4e00\u4e9b\u91cd\u8981\u7ec6\u8282\uff08\u6839\u636e\u81ea\u8eab\u9700\u6c42\uff0c\u53c2\u8003\u4e0a\u4e00\u8282\u7684\u65b9\u6848\u9009\u578b\uff0c\u81ea\u884c\u8bc4\u4f30\u9700\u8981\u5b89\u88c5\u54ea\u4e9b\u7ec4\u4ef6\uff09\u3002 \u51c6\u5907\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e \u5982\u679c\u6211\u4eec\u8981\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\u6765\u957f\u671f\u4fdd\u5b58\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u8981\u51c6\u5907\u4e0b\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\u4fe1\u606f \uff08 thanos-objectstorage-secret.yaml \uff09\uff0c\u6bd4\u5982\u4f7f\u7528\u817e\u8baf\u4e91 COS \u6765\u5b58\u50a8\uff1a apiVersion: v1 kind: Secret metadata: name: thanos-objectstorage namespace: thanos type: Opaque stringData: objectstorage.yaml: | type: COS config: bucket: \"thanos\" region: \"ap-singapore\" app_id: \"12*******5\" secret_key: \"tsY***************************Edm\" secret_id: \"AKI******************************gEY\" \u6216\u8005\u4f7f\u7528\u963f\u91cc\u4e91 OSS \u5b58\u50a8\uff1a apiVersion: v1 kind: Secret metadata: name: thanos-objectstorage namespace: thanos type: Opaque stringData: objectstorage.yaml: | type: ALIYUNOSS config: endpoint: \"oss-cn-hangzhou-internal.aliyuncs.com\" bucket: \"thanos\" access_key_id: \"LTA******************KBu\" access_key_secret: \"oki************************2HQ\" \u7ed9 Prometheus \u52a0\u4e0a Sidecar \u5982\u679c\u9009\u7528 Sidecar \u65b9\u6848\uff0c\u5c31\u9700\u8981\u7ed9 Prometheus \u52a0\u4e0a Thanos Sidecar \uff0c\u51c6\u5907 prometheus.yaml \uff1a kind: Service apiVersion: v1 metadata: name: prometheus-headless namespace: thanos labels: app.kubernetes.io/name: prometheus spec: type: ClusterIP clusterIP: None selector: app.kubernetes.io/name: prometheus ports: - name: web protocol: TCP port: 9090 targetPort: web - name: grpc port: 10901 targetPort: grpc --- apiVersion: v1 kind: ServiceAccount metadata: name: prometheus namespace: thanos --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRole metadata: name: prometheus namespace: thanos rules: - apiGroups: [\"\"] resources: - nodes - nodes/proxy - nodes/metrics - services - endpoints - pods verbs: [\"get\", \"list\", \"watch\"] - apiGroups: [\"\"] resources: [\"configmaps\"] verbs: [\"get\"] - nonResourceURLs: [\"/metrics\"] verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: prometheus subjects: - kind: ServiceAccount name: prometheus namespace: thanos roleRef: kind: ClusterRole name: prometheus apiGroup: rbac.authorization.k8s.io --- apiVersion: apps/v1 kind: StatefulSet metadata: name: prometheus namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: serviceName: prometheus-headless podManagementPolicy: Parallel replicas: 2 selector: matchLabels: app.kubernetes.io/name: prometheus template: metadata: labels: app.kubernetes.io/name: prometheus spec: serviceAccountName: prometheus securityContext: fsGroup: 2000 runAsNonRoot: true runAsUser: 1000 affinity: podAntiAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: app.kubernetes.io/name operator: In values: - prometheus topologyKey: kubernetes.io/hostname containers: - name: prometheus image: quay.io/prometheus/prometheus:v2.15.2 args: - --config.file=/etc/prometheus/config_out/prometheus.yaml - --storage.tsdb.path=/prometheus - --storage.tsdb.retention.time=10d - --web.route-prefix=/ - --web.enable-lifecycle - --storage.tsdb.no-lockfile - --storage.tsdb.min-block-duration=2h - --storage.tsdb.max-block-duration=2h - --log.level=debug ports: - containerPort: 9090 name: web protocol: TCP livenessProbe: failureThreshold: 6 httpGet: path: /-/healthy port: web scheme: HTTP periodSeconds: 5 successThreshold: 1 timeoutSeconds: 3 readinessProbe: failureThreshold: 120 httpGet: path: /-/ready port: web scheme: HTTP periodSeconds: 5 successThreshold: 1 timeoutSeconds: 3 volumeMounts: - mountPath: /etc/prometheus/config_out name: prometheus-config-out readOnly: true - mountPath: /prometheus name: prometheus-storage - mountPath: /etc/prometheus/rules name: prometheus-rules - name: thanos image: quay.io/thanos/thanos:v0.11.0 args: - sidecar - --log.level=debug - --tsdb.path=/prometheus - --prometheus.url=http://127.0.0.1:9090 - --objstore.config-file=/etc/thanos/objectstorage.yaml - --reloader.config-file=/etc/prometheus/config/prometheus.yaml.tmpl - --reloader.config-envsubst-file=/etc/prometheus/config_out/prometheus.yaml - --reloader.rule-dir=/etc/prometheus/rules/ env: - name: POD_NAME valueFrom: fieldRef: fieldPath: metadata.name ports: - name: http-sidecar containerPort: 10902 - name: grpc containerPort: 10901 livenessProbe: httpGet: port: 10902 path: /-/healthy readinessProbe: httpGet: port: 10902 path: /-/ready volumeMounts: - name: prometheus-config-tmpl mountPath: /etc/prometheus/config - name: prometheus-config-out mountPath: /etc/prometheus/config_out - name: prometheus-rules mountPath: /etc/prometheus/rules - name: prometheus-storage mountPath: /prometheus - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml volumes: - name: prometheus-config-tmpl configMap: defaultMode: 420 name: prometheus-config-tmpl - name: prometheus-config-out emptyDir: {} - name: prometheus-rules configMap: name: prometheus-rules - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: name: prometheus-storage labels: app.kubernetes.io/name: prometheus spec: accessModes: - ReadWriteOnce resources: requests: storage: 200Gi volumeMode: Filesystem Prometheus \u4f7f\u7528 StatefulSet \u65b9\u5f0f\u90e8\u7f72\uff0c\u6302\u8f7d\u6570\u636e\u76d8\u4ee5\u4fbf\u5b58\u50a8\u6700\u65b0\u76d1\u63a7\u6570\u636e\uff1b \u7531\u4e8e Prometheus \u526f\u672c\u4e4b\u95f4\u6ca1\u6709\u542f\u52a8\u987a\u5e8f\u7684\u4f9d\u8d56\uff0c\u6240\u4ee5 podManagementPolicy \u6307\u5b9a\u4e3a Parallel \uff0c\u52a0\u5feb\u542f\u52a8\u901f\u5ea6\uff1b \u4e3a Prometheus \u7ed1\u5b9a\u8db3\u591f\u7684 RBAC \u6743\u9650\uff0c\u4ee5\u4fbf\u540e\u7eed\u914d\u7f6e\u4f7f\u7528 k8s \u7684\u670d\u52a1\u53d1\u73b0\uff08 kubernetes_sd_configs \uff09\u65f6\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002 \u4e3a Prometheus \u521b\u5efa headless \u7c7b\u578b service \uff0c\u4e3a\u540e\u7eed Thanos Query \u901a\u8fc7 DNS SRV \u8bb0\u5f55\u6765\u52a8\u6001\u53d1\u73b0 Sidecar \u7684 gRPC \u7aef\u70b9\u505a\u51c6\u5907\uff08\u4f7f\u7528 headless service \u624d\u80fd\u8ba9 DNS SRV \u6b63\u786e\u8fd4\u56de\u6240\u6709\u7aef\u70b9\uff09\u3002 \u4f7f\u7528\u4e24\u4e2a Prometheus \u526f\u672c\uff0c\u7528\u4e8e\u5b9e\u73b0\u9ad8\u53ef\u7528\uff1b \u4f7f\u7528\u786c\u53cd\u4eb2\u548c\uff0c\u907f\u514d Prometheus \u90e8\u7f72\u5728\u540c\u4e00\u8282\u70b9\uff0c\u65e2\u53ef\u4ee5\u5206\u6563\u538b\u529b\u4e5f\u53ef\u4ee5\u907f\u514d\u5355\u70b9\u6545\u969c\uff1b Prometheus \u4f7f\u7528 --storage.tsdb.retention.time \u6307\u5b9a\u6570\u636e\u4fdd\u7559\u65f6\u957f\uff0c\u9ed8\u8ba4 15 \u5929\uff0c\u53ef\u4ee5\u6839\u636e\u6570\u636e\u589e\u957f\u901f\u5ea6\u548c\u6570\u636e\u76d8\u5927\u5c0f\u505a\u9002\u5f53\u8c03\u6574\uff08\u6570\u636e\u589e\u957f\u53d6\u51b3\u4e8e\u91c7\u96c6\u7684\u6307\u6807\u548c\u76ee\u6807\u7aef\u70b9\u7684\u6570\u91cf\u548c\u91c7\u96c6\u9891\u7387\uff09\uff1b Sidecar \u4f7f\u7528 --objstore.config-file \u5f15\u7528\u6211\u4eec\u521a\u521a\u521b\u5efa\u5e76\u6302\u8f7d\u7684\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u4e0a\u4f20\u6570\u636e\u5230\u5bf9\u8c61\u5b58\u50a8\uff1b \u901a\u5e38\u4f1a\u7ed9 Prometheus \u9644\u5e26\u4e00\u4e2a quay.io/coreos/prometheus-config-reloader \u6765\u76d1\u542c\u914d\u7f6e\u53d8\u66f4\u5e76\u52a8\u6001\u52a0\u8f7d\uff0c\u4f46 thanos sidecar \u4e5f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u529f\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528 thanos sidecar \u6765\u5b9e\u73b0\u6b64\u529f\u80fd\uff0c\u4e5f\u652f\u6301\u914d\u7f6e\u6587\u4ef6\u6839\u636e\u6a21\u677f\u52a8\u6001\u751f\u6210\uff1a --reloader.config-file \u6307\u5b9a Prometheus \u914d\u7f6e\u6587\u4ef6\u6a21\u677f\uff0c --reloader.config-envsubst-file \u6307\u5b9a\u751f\u6210\u914d\u7f6e\u6587\u4ef6\u7684\u5b58\u653e\u8def\u5f84\uff0c\u5047\u8bbe\u662f /etc/prometheus/config_out/prometheus.yaml \uff0c\u90a3\u4e48 /etc/prometheus/config_out \u8fd9\u4e2a\u8def\u5f84\u4f7f\u7528 emptyDir \u8ba9 Prometheus \u4e0e Sidecar \u5b9e\u73b0\u914d\u7f6e\u6587\u4ef6\u5171\u4eab\u6302\u8f7d\uff0c Prometheus \u518d\u901a\u8fc7 --config.file \u6307\u5b9a\u751f\u6210\u51fa\u6765\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5f53\u914d\u7f6e\u6709\u66f4\u65b0\u65f6\uff0c\u6302\u8f7d\u7684\u914d\u7f6e\u6587\u4ef6\u4e5f\u4f1a\u540c\u6b65\u66f4\u65b0\uff0c Sidecar \u4e5f\u4f1a\u901a\u77e5 Prometheus \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u3002\u53e6\u5916\uff0c Sidecar \u4e0e Prometheus \u4e5f\u6302\u8f7d\u540c\u4e00\u4efd rules \u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u66f4\u65b0\u540e Sidecar \u4ec5\u901a\u77e5 Prometheus \u52a0\u8f7d\u914d\u7f6e\uff0c\u4e0d\u652f\u6301\u6a21\u677f\uff0c\u56e0\u4e3a rules \u914d\u7f6e\u4e0d\u9700\u8981\u6a21\u677f\u6765\u52a8\u6001\u751f\u6210\u3002 \u7136\u540e\u518d\u7ed9 Prometheus \u51c6\u5907\u914d\u7f6e \uff08 prometheus-config.yaml \uff09\uff1a apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config-tmpl namespace: thanos data: prometheus.yaml.tmpl: |- global: scrape_interval: 5s evaluation_interval: 5s external_labels: cluster: prometheus-ha prometheus_replica: $(POD_NAME) rule_files: - /etc/prometheus/rules/*rules.yaml scrape_configs: - job_name: cadvisor metrics_path: /metrics/cadvisor scrape_interval: 10s scrape_timeout: 10s scheme: https tls_config: insecure_skip_verify: true bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) --- apiVersion: v1 kind: ConfigMap metadata: name: prometheus-rules labels: name: prometheus-rules namespace: thanos data: alert-rules.yaml: |- groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate - expr: | sum(container_memory_usage_bytes{job=\"cadvisor\", image!=\"\", container!=\"\"}) by (namespace) record: namespace:container_memory_usage_bytes:sum - expr: | sum by (namespace, pod, container) ( rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m]) ) record: namespace_pod_container:container_cpu_usage_seconds_total:sum_rate \u672c\u6587\u91cd\u70b9\u4e0d\u5728 prometheus \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ec5\u4ee5\u91c7\u96c6 kubelet \u6240\u66b4\u9732\u7684 cadvisor \u5bb9\u5668\u6307\u6807\u7684\u7b80\u5355\u914d\u7f6e\u4e3a\u4f8b\u3002 Prometheus \u5b9e\u4f8b\u91c7\u96c6\u7684\u6240\u6709\u6307\u6807\u6570\u636e\u91cc\u90fd\u4f1a\u989d\u5916\u52a0\u4e0a external_labels \u91cc\u6307\u5b9a\u7684 label \uff0c\u901a\u5e38\u7528 cluster \u533a\u5206\u5f53\u524d Prometheus \u6240\u5728\u96c6\u7fa4\u7684\u540d\u79f0\uff0c\u6211\u4eec\u518d\u52a0\u4e86\u4e2a prometheus_replica \uff0c\u7528\u4e8e\u533a\u5206\u76f8\u540c Prometheus \u526f\u672c\uff08\u8fd9\u4e9b\u526f\u672c\u6240\u91c7\u96c6\u7684\u6570\u636e\u9664\u4e86 prometheus_replica \u7684\u503c\u4e0d\u4e00\u6837\uff0c\u5176\u5b83\u51e0\u4e4e\u4e00\u81f4\uff0c\u8fd9\u4e2a\u503c\u4f1a\u88ab Thanos Sidecar \u66ff\u6362\u6210 Pod \u526f\u672c\u7684\u540d\u79f0\uff0c\u7528\u4e8e Thanos \u5b9e\u73b0 Prometheus \u9ad8\u53ef\u7528\uff09 3-5 \u5b89\u88c5 Query \u51c6\u5907 thanos-query.yaml \uff1a apiVersion: v1 kind: Service metadata: name: thanos-query namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: ports: - name: grpc port: 10901 targetPort: grpc - name: http port: 9090 targetPort: http selector: app.kubernetes.io/name: thanos-query --- apiVersion: apps/v1 kind: Deployment metadata: name: thanos-query namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: replicas: 3 selector: matchLabels: app.kubernetes.io/name: thanos-query template: metadata: labels: app.kubernetes.io/name: thanos-query spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - podAffinityTerm: labelSelector: matchExpressions: - key: app.kubernetes.io/name operator: In values: - thanos-query topologyKey: kubernetes.io/hostname weight: 100 containers: - args: - query - --log.level=debug - --query.auto-downsampling - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:9090 - --query.partial-response - --query.replica-label=prometheus_replica - --query.replica-label=rule_replica - --store=dnssrv+_grpc._tcp.prometheus-headless.thanos.svc.cluster.local - --store=dnssrv+_grpc._tcp.thanos-rule.thanos.svc.cluster.local - --store=dnssrv+_grpc._tcp.thanos-store.thanos.svc.cluster.local image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 9090 scheme: HTTP periodSeconds: 30 name: thanos-query ports: - containerPort: 10901 name: grpc - containerPort: 9090 name: http readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 9090 scheme: HTTP periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError terminationGracePeriodSeconds: 120 \u914d\u7f6e\u5185\u5bb9\u4ec5\u4e3a\u793a\u4f8b\uff0c\u6839\u636e\u81ea\u8eab\u60c5\u51b5\u6765\u914d\u7f6e\uff0c\u683c\u5f0f\u57fa\u672c\u517c\u5bb9 Prometheus \u7684 rule \u914d\u7f6e\u683c\u5f0f\uff0c\u53c2\u8003\uff1ahttps://thanos.io/components/rule.md/#configuring-rules 3-6 \u5b89\u88c5 Compact \u51c6\u5907 Compact \u90e8\u7f72\u914d\u7f6e thanos-compact.yaml \uff1a apiVersion: v1 kind: Service metadata: labels: app.kubernetes.io/name: thanos-compact name: thanos-compact namespace: thanos spec: ports: - name: http port: 10902 targetPort: http selector: app.kubernetes.io/name: thanos-compact --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: app.kubernetes.io/name: thanos-compact name: thanos-compact namespace: thanos spec: replicas: 1 selector: matchLabels: app.kubernetes.io/name: thanos-compact serviceName: thanos-compact template: metadata: labels: app.kubernetes.io/name: thanos-compact spec: containers: - args: - compact - --wait - --objstore.config-file=/etc/thanos/objectstorage.yaml - --data-dir=/var/thanos/compact - --debug.accept-malformed-index - --log.level=debug - --retention.resolution-raw=90d - --retention.resolution-5m=180d - --retention.resolution-1h=360d image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 30 name: thanos-compact ports: - containerPort: 10902 name: http readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 10902 scheme: HTTP periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError volumeMounts: - mountPath: /var/thanos/compact name: data readOnly: false - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml terminationGracePeriodSeconds: 120 volumes: - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-compact name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 100Gi Compact \u53ea\u80fd\u90e8\u7f72\u5355\u4e2a\u526f\u672c\uff0c\u56e0\u4e3a\u5982\u679c\u591a\u4e2a\u526f\u672c\u90fd\u53bb\u5bf9\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\u505a\u538b\u7f29\u548c\u964d\u91c7\u6837\u7684\u8bdd\uff0c\u4f1a\u9020\u6210\u51b2\u7a81\uff1b \u4f7f\u7528 StatefulSet \u90e8\u7f72\uff0c\u65b9\u4fbf\u81ea\u52a8\u521b\u5efa\u548c\u6302\u8f7d\u78c1\u76d8\u3002\u78c1\u76d8\u7528\u4e8e\u5b58\u653e\u4e34\u65f6\u6570\u636e\uff0c\u56e0\u4e3a Compact \u9700\u8981\u4e00\u4e9b\u78c1\u76d8\u7a7a\u95f4\u6765\u5b58\u653e\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u4e2d\u95f4\u6570\u636e\u3002 --wait \u8ba9 Compact \u4e00\u76f4\u8fd0\u884c\uff0c\u8f6e\u8be2\u65b0\u6570\u636e\u6765\u505a\u538b\u7f29\u548c\u964d\u91c7\u6837\uff1b Compact \u4e5f\u9700\u8981\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u7528\u4e8e\u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u6570\u636e\u4ee5\u53ca\u4e0a\u4f20\u538b\u7f29\u548c\u964d\u91c7\u6837\u540e\u7684\u6570\u636e\u5230\u5bf9\u8c61\u5b58\u50a8\uff1b \u521b\u5efa\u4e00\u4e2a\u666e\u901a service \uff0c\u4e3b\u8981\u7528\u4e8e\u88ab Prometheus \u4f7f\u7528 kubernetes \u7684 endpoints \u670d\u52a1\u53d1\u73b0\u6765\u91c7\u96c6\u6307\u6807\uff08\u5176\u5b83\u7ec4\u4ef6\u7684 service \u4e5f\u4e00\u6837\u6709\u8fd9\u4e2a\u7528\u9014\uff09\uff1b --retention.resolution-raw \u6307\u5b9a\u539f\u59cb\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c --retention.resolution-5m \u6307\u5b9a\u964d\u91c7\u6837\u5230\u6570\u636e\u70b9 5 \u5206\u949f\u95f4\u9694\u7684\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c --retention.resolution-1h \u6307\u5b9a\u964d\u91c7\u6837\u5230\u6570\u636e\u70b9 1 \u5c0f\u65f6\u95f4\u9694\u7684\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c\u5b83\u4eec\u7684\u6570\u636e\u7cbe\u7ec6\u7a0b\u5ea6\u9012\u51cf\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u662f\u9012\u51cf\uff0c\u901a\u5e38\u5efa\u8bae\u5b83\u4eec\u7684\u5b58\u653e\u65f6\u95f4\u9012\u589e\u914d\u7f6e\uff08\u4e00\u822c\u53ea\u6709\u6bd4\u8f83\u65b0\u7684\u6570\u636e\u624d\u4f1a\u653e\u5927\u770b\uff0c\u4e45\u8fdc\u7684\u6570\u636e\u901a\u5e38\u53ea\u4f1a\u4f7f\u7528\u5927\u65f6\u95f4\u8303\u56f4\u67e5\u8be2\u6765\u770b\u4e2a\u5927\u81f4\uff0c\u6240\u4ee5\u5efa\u8bae\u5c06\u7cbe\u7ec6\u7a0b\u5ea6\u4f4e\u7684\u6570\u636e\u5b58\u653e\u66f4\u957f\u65f6\u95f4\uff09\u3002 3-7 \u5b89\u88c5 Receiver \u8be5\u7ec4\u4ef6\u5904\u4e8e\u8bd5\u9a8c\u9636\u6bb5\uff0c\u614e\u7528\u3002\u51c6\u5907 Receiver \u90e8\u7f72\u914d\u7f6e thanos-receiver.yaml \uff1a apiVersion: v1 kind: ConfigMap metadata: name: thanos-receive-hashrings namespace: thanos data: thanos-receive-hashrings.json: | [ { \"hashring\": \"soft-tenants\", \"endpoints\": [ \"thanos-receive-0.thanos-receive.kube-system.svc.cluster.local:10901\", \"thanos-receive-1.thanos-receive.kube-system.svc.cluster.local:10901\", \"thanos-receive-2.thanos-receive.kube-system.svc.cluster.local:10901\" ] } ] --- apiVersion: v1 kind: Service metadata: name: thanos-receive namespace: thanos labels: kubernetes.io/name: thanos-receive spec: ports: - name: http port: 10902 protocol: TCP targetPort: 10902 - name: remote-write port: 19291 protocol: TCP targetPort: 19291 - name: grpc port: 10901 protocol: TCP targetPort: 10901 selector: kubernetes.io/name: thanos-receive clusterIP: None --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: kubernetes.io/name: thanos-receive name: thanos-receive namespace: thanos spec: replicas: 3 selector: matchLabels: kubernetes.io/name: thanos-receive serviceName: thanos-receive template: metadata: labels: kubernetes.io/name: thanos-receive spec: containers: - args: - receive - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:10902 - --remote-write.address=0.0.0.0:19291 - --objstore.config-file=/etc/thanos/objectstorage.yaml - --tsdb.path=/var/thanos/receive - --tsdb.retention=12h - --label=receive_replica=\"$(NAME)\" - --label=receive=\"true\" - --receive.hashrings-file=/etc/thanos/thanos-receive-hashrings.json - --receive.local-endpoint=$(NAME).thanos-receive.thanos.svc.cluster.local:10901 env: - name: NAME valueFrom: fieldRef: fieldPath: metadata.name image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 30 name: thanos-receive ports: - containerPort: 10901 name: grpc - containerPort: 10902 name: http - containerPort: 19291 name: remote-write readinessProbe: httpGet: path: /-/ready port: 10902 scheme: HTTP initialDelaySeconds: 10 periodSeconds: 30 resources: limits: cpu: \"4\" memory: 8Gi requests: cpu: \"2\" memory: 4Gi volumeMounts: - mountPath: /var/thanos/receive name: data readOnly: false - mountPath: /etc/thanos/thanos-receive-hashrings.json name: thanos-receive-hashrings subPath: thanos-receive-hashrings.json - mountPath: /etc/thanos/objectstorage.yaml name: thanos-objectstorage subPath: objectstorage.yaml terminationGracePeriodSeconds: 120 volumes: - configMap: defaultMode: 420 name: thanos-receive-hashrings name: thanos-receive-hashrings - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-receive name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 200Gi \u90e8\u7f72 3 \u4e2a\u526f\u672c\uff0c \u914d\u7f6e hashring \uff0c --label=receive_replica \uff1b \u4e3a\u6570\u636e\u6dfb\u52a0 receive_replica \u8fd9\u4e2a label \uff08 Query \u7684 --query.replica-label \u4e5f\u8981\u52a0\u4e0a\u8fd9\u4e2a\uff09\u6765\u5b9e\u73b0 Receiver \u7684\u9ad8\u53ef\u7528\uff1b Query \u8981\u6307\u5b9a Receiver \u540e\u7aef\u5730\u5740\uff1a --store=dnssrv+_grpc._tcp.thanos-receive.thanos.svc.cluster.local \uff1b request \u3001 limit \u6839\u636e\u81ea\u8eab\u89c4\u6a21\u60c5\u51b5\u81ea\u884c\u505a\u9002\u5f53\u8c03\u6574\uff1b --tsdb.retention \u6839\u636e\u81ea\u8eab\u9700\u6c42\u8c03\u6574\u6700\u65b0\u6570\u636e\u7684\u4fdd\u7559\u65f6\u95f4\uff1b \u5982\u679c\u6539\u547d\u540d\u7a7a\u95f4\uff0c\u8bb0\u5f97\u628a Receiver \u7684 --receive.local-endpoint \u53c2\u6570\u4e5f\u6539\u4e0b\uff0c\u4e0d\u7136\u4f1a\u75af\u72c2\u62a5\u9519\u76f4\u81f3 OOMKilled \u3002 \u56e0\u4e3a\u4f7f\u7528\u4e86 Receiver \u6765\u7edf\u4e00\u63a5\u6536 Prometheus \u7684\u6570\u636e\uff0c\u6240\u4ee5 Prometheus \u4e5f\u4e0d\u9700\u8981 Sidecar \u4e86\uff0c\u4f46\u9700\u8981\u7ed9 Prometheus \u914d\u7f6e\u6587\u4ef6\u91cc\u52a0\u4e0b remote_write \uff0c\u8ba9 Prometheus \u5c06\u6570\u636e push \u7ed9 Receiver \uff1a remote_write: - url: http://thanos-receive.thanos.svc.cluster.local:19291/api/v1/receive \u6307\u5b9a Query \u4e3a\u6570\u636e\u6e90 \u67e5\u8be2\u76d1\u63a7\u6570\u636e\u65f6\u9700\u8981\u6307\u5b9a Prometheus \u6570\u636e\u6e90\u5730\u5740\uff0c\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86 Thanos \u6765\u505a\u5206\u5e03\u5f0f\uff0c\u800c Thanos \u5173\u952e\u67e5\u8be2\u5165\u53e3\u5c31\u662f Query \uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u6570\u636e\u6e90\u5730\u5740\u6307\u5b9a\u4e3a Query \u7684\u5730\u5740\uff0c\u5047\u5982\u4f7f\u7528 Grafana \u67e5\u8be2\uff0c\u8fdb\u5165 Configuration-Data Sources-Add data source \uff0c\u9009\u62e9 Prometheus \uff0c\u6307\u5b9a thanos query \u7684\u5730\u5740\uff1ahttp://thanos-query.thanos.svc.cluster.local:9090","title":"\u7b2c\u4e09\u8282 Prometheus\u9ad8\u53ef\u7528Thanos\u5b66\u4e60-sidercar\u548cquery&Thanos\u90e8\u7f72"},{"location":"chap11/35Thanos_install/#prometheusthanos-sidercarquery-thanos","text":"kubectl create namespace thanos \u6700\u8fd1\u5de5\u4f5c\u4e2d\u7684\u4e3b\u8981\u4efb\u52a1\u90fd\u662f\u5728\u4e1a\u52a1\u7684\u9ad8\u53ef\u7528\u4e0a\uff0c\u7531\u4e8e\u9879\u76ee\u4e2d\u4f7f\u7528\u5230\u4e86Promethues\uff0c\u6240\u4ee5\u4e5f\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\u7814\u7a76\u4e86\u4e00\u4e0bPromethues\u7684\u9ad8\u53ef\u7528\u65b9\u6848\u3002\u53d1\u73b0\u4e5f\u6ca1\u6709blog\u544a\u8bc9\u600e\u4e48\u53bbdeploy\u4e00\u4e2aThanos\u7684\u96c6\u7fa4\uff0c\u6240\u4ee5\u672c\u6587\u4e5f\u4f1a\u7ed9\u51fadeploy\u7684\u65b9\u6cd5\u548c\u6e90\u6587\u4ef6 \u7531\u4e8e Promethues \u672c\u8eab\u4ec5\u662f\u4e00\u4e2a\u91c7\u6837\u7cfb\u7edf\uff0c\u5982\u679c\u505a\u6210 master-slave\u6a21 \u5f0f\uff0c\u5b58\u5728\u5207\u6362\u5f00\u9500\uff0c\u5e76\u4e14\u589e\u52a0\u7cfb\u7edf\u7684\u590d\u6742\u6027\u3002\u56e0\u6b64\u5b98\u65b9\u7ed9\u51fa\u7684\u9ad8\u53ef\u7528\u5efa\u8bae\u65b9\u6848\u5982\u4e0b\u56fe\uff0c\u4f7f\u7528\u591a\u4e2a\u5bf9\u7b49\u7684 Promethues \uff0c\u5bf9\u6240\u6709\u7684 DataSource \u5747\u8fdb\u884c\u91c7\u6837\u3002\u8fd9\u91cc\u7684 Service \u662f K8S \u7684 Service \uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u8bbf\u95ee\u8be5 Service \u4f1a\u968f\u673a\u5730\u8bbf\u95ee\u540e\u7aef\u7684\u4e24\u4e2a Promethues \u3002 \u4e0a\u9762\u65b9\u6848\u4e2d\uff0c\u5f53\u5176\u4e2d\u4e00\u4e2a Promethues pod \u4e2d\u65ad\u65f6\uff0c K8S \u4f1a\u5c06\u6d41\u91cf\u4ec5\u5bfc\u5411\u53e6\u5916\u4e00\u4e2a pod \u3002\u4f46\u662f pod \u4e2d\u65ad\u671f\u95f4\uff0c\u5176\u65e0\u6cd5\u83b7\u53d6\u6570\u636e\uff0c\u56e0\u6b64\u5f53\u4e2d\u65ad\u7684 pod \u6062\u590d\u4e4b\u540e\uff0c\u5728\u5b58\u50a8\u7aef\uff0c\u9700\u8981\u8fdb\u884c sync \u3002\u53ef\u662f\uff0c\u4f55\u65f6 sync \uff0c\u600e\u4e48 sync \u662f\u4e00\u4e2a\u6bd4\u8f83\u590d\u6742\u7684\u95ee\u9898\uff0c\u5c31\u7b97\u80fd\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\u8fdb\u884c\u6587\u4ef6 sync \uff0c\u672c\u8eab\u4e5f\u4f1a\u5b58\u5728\u5404\u5f0f\u5404\u6837\u7684\u98ce\u9669\u3002 \u6240\u4ee5 Thanos \u5c31\u6ca1\u6709\u4f7f\u7528\u5b58\u50a8\u7aef Sync \u7684\u65b9\u6cd5\u6765\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u800c\u662f\u91c7\u7528\u624d query \u7aef\u5bf9\u67e5\u8be2\u5230\u7684\u6570\u636e\u8fdb\u884c\u5408\u5e76 \u3002\u4e0b\u9762\u4f1a\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bThanos\u7684\u539f\u7406\u3002","title":"\u7b2c\u4e09\u8282 Prometheus\u9ad8\u53ef\u7528Thanos\u5b66\u4e60-sidercar\u548cquery &amp; Thanos\u90e8\u7f72"},{"location":"chap11/35Thanos_install/#1-thanos","text":"\u57fa\u4e8e\u5b98\u65b9\u7684\u4ecb\u7ecd\uff0c\u6211\u5c06 Thanos \u7684\u67b6\u6784\u7b80\u5316\uff0c\u4ec5\u4fdd\u5b58\u6700\u57fa\u672c\u7684\uff0c\u6211\u6240\u5173\u5fc3\u7684\u90e8\u5206\u5982\u4e0b\uff0c \u4e3b\u8981\u5305\u542b3\u90e8\u5206\uff1a Thanos Query. \u4e3b\u8981\u662f\u5bf9\u4ece Promethues Pod \u91c7\u96c6\u6765\u7684\u6570\u636e\u8fdb\u884c merge \uff0c\u63d0\u4f9b\u67e5\u8be2\u63a5\u53e3\u7ed9\u5ba2\u6237\u7aef\uff08\u5b98\u65b9\u6587\u6863\u4e0a\u6682\u65f6\u6ca1\u770b\u5230 merge \u7684\u539f\u7406\uff0c\u8fd9\u7bc7\u603b\u7ed3\u4e4b\u540e\u9700\u8981\u82b1\u4e9b\u65f6\u95f4\u770b\u6e90\u7801\u5b66\u4e60\u4e00\u4e0b\uff09\uff1b Thanos SideCar . \u5c06 Promethues container \u7684\u6570\u636e\u8fdb\u884c\u5c01\u88c5\uff0c\u4ee5\u63d0\u4f9b\u63a5\u53e3\u7ed9 Thanos Query \uff08\u5b9e\u9645\u4e0aSideCar\u8fd8\u80fd\u63d0\u4f9b\u66f4\u591a\u7528\u5904\uff0c\u4f46\u662f\u8fd9\u91cc\u6682\u65f6\u6211\u4eec\u4ec5\u5173\u5fc3\u6570\u636e\u67e5\u8be2\uff0c\u540e\u9762\u518d\u8fdb\u4e00\u6b65\u7814\u7a76\uff0c\u6682\u65f6\u4e0d\u8981\u56fe\u591a\uff09 Prometheus Container . \u91c7\u96c6\u6570\u636e\uff0c\u901a\u8fc7 Remote Read API \u63d0\u4f9b\u63a5\u53e3\u7ed9 Thanos SideCar \u3002","title":"1. Thanos\u57fa\u672c\u539f\u7406"},{"location":"chap11/35Thanos_install/#2-thanos","text":"\u672c\u6587\u805a\u7126 Thanos \u7684\u4e91\u539f\u751f\u90e8\u7f72\u65b9\u5f0f\uff0c\u5145\u5206\u5229\u7528 Kubernetes \u7684\u8d44\u6e90\u8c03\u5ea6\u4e0e\u52a8\u6001\u6269\u5bb9\u80fd\u529b\u3002\u4ece\u5b98\u65b9\u6587\u6863\u91cc\u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u524d Thanos \u5728 Kubernetes \u4e0a\u90e8\u7f72\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a prometheus-operator \uff1a\u96c6\u7fa4\u4e2d\u5b89\u88c5\u4e86 prometheus-operator \u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa CRD \u5bf9\u8c61\u6765\u90e8\u7f72 Thanos \u4e86\uff1b \u793e\u533a\u8d21\u732e\u7684\u4e00\u4e9b helm charts \uff1a\u5f88\u591a\u4e2a\u7248\u672c\uff0c\u76ee\u6807\u90fd\u662f\u80fd\u591f\u4f7f\u7528 helm \u6765\u4e00\u952e\u90e8\u7f72 thanos\uff1b kube-thanos\uff1aThanos \u5b98\u65b9\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u5305\u542b\u90e8\u7f72 thanos \u5230 kubernetes \u7684 jsonnet \u6a21\u677f\u4e0e yaml \u793a\u4f8b\u3002 \u672c\u6587\u5c06\u4f7f\u7528\u57fa\u4e8e kube-thanos \u63d0\u4f9b\u7684 yaml \u793a\u4f8b ( examples/all/manifests ) \u6765\u90e8\u7f72\uff0c\u539f\u56e0\u662f prometheus-operator \u4e0e\u793e\u533a\u7684 helm chart \u65b9\u5f0f\u90e8\u7f72\u591a\u4e86\u4e00\u5c42\u5c01\u88c5\uff0c\u5c4f\u853d\u4e86\u8bb8\u591a\u7ec6\u8282\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u5b9e\u73b0\u90fd\u8fd8\u4e0d\u592a\u6210\u719f\u3002 \u76f4\u63a5\u4f7f\u7528 kubernetes \u7684 yaml \u8d44\u6e90\u6587\u4ef6\u90e8\u7f72\u66f4\u76f4\u89c2\uff0c\u4e5f\u66f4\u5bb9\u6613\u505a\u81ea\u5b9a\u4e49\uff0c\u800c\u4e14\u6211\u76f8\u4fe1 Thanos \u7528\u6237\u901a\u5e38\u90fd\u662f\u9ad8\u73a9\uff0c\u6709\u5fc5\u8981\u5bf9 thanos \u7406\u89e3\u900f\u5f7b\uff0c\u65e5\u540e\u624d\u80fd\u66f4\u597d\u5730\u6839\u636e\u5b9e\u9645\u573a\u666f\u505a\u67b6\u6784\u548c\u914d\u7f6e\u7684\u8c03\u6574\uff0c\u76f4\u63a5\u4f7f\u7528 yaml \u90e8\u7f72\u80fd\u591f\u8ba9\u6211\u4eec\u770b\u6e05\u7ec6\u8282\u3002","title":"2. Thanos\u90e8\u7f72"},{"location":"chap11/35Thanos_install/#3","text":"\u6211\u4eec\u518d\u6765\u770b\u770b\u5982\u4f55\u9009\u578b\u90e8\u7f72\u65b9\u6848\u3002","title":"3 \u65b9\u6848"},{"location":"chap11/35Thanos_install/#3-1-sidecar-or-receiver","text":"Receiver \u65b9\u6848\u662f\u8ba9 Prometheus \u901a\u8fc7 remote wirte API \u5c06\u6570\u636e push \u5230 Receiver \u96c6\u4e2d\u5b58\u50a8\uff08\u540c\u6837\u4f1a\u6e05\u7406\u8fc7\u671f\u6570\u636e\uff09\uff1a \u90a3\u4e48\u8be5\u9009\u54ea\u79cd\u65b9\u6848\u5462\uff1f\u6211\u7684\u5efa\u8bae\u662f\uff1a \u5982\u679c\u4f60\u7684 Query \u8ddf Sidecar \u79bb\u7684\u6bd4\u8f83\u8fdc\uff0c\u6bd4\u5982 Sidecar \u5206\u5e03\u5728\u591a\u4e2a\u6570\u636e\u4e2d\u5fc3\uff0c Query \u5411\u6240\u6709 Sidecar \u67e5\u6570\u636e\uff0c\u901f\u5ea6\u4f1a\u5f88\u6162\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u8003\u8651\u7528 Receiver \uff0c\u5c06\u6570\u636e\u96c6\u4e2d\u5410\u5230 Receiver \uff0c\u7136\u540e Receiver \u4e0e Query \u90e8\u7f72\u5728\u4e00\u8d77\uff0c Query \u76f4\u63a5\u5411 Receiver \u67e5\u6700\u65b0\u6570\u636e\uff0c\u63d0\u5347\u67e5\u8be2\u6027\u80fd\uff1b \u5982\u679c\u4f60\u7684\u4f7f\u7528\u573a\u666f\u53ea\u5141\u8bb8 Prometheus \u5c06\u6570\u636e push \u5230\u8fdc\u7a0b\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 Receiver \u3002\u6bd4\u5982 IoT \u8bbe\u5907\u6ca1\u6709\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u53ea\u80fd\u5c06\u6570\u636e push \u5230\u8fdc\u7a0b\u3002 \u6b64\u5916\u7684\u573a\u666f\u5e94\u8be5\u90fd\u5c3d\u91cf\u4f7f\u7528 Sidecar \u65b9\u6848\u3002","title":"3-1 Sidecar or Receiver"},{"location":"chap11/35Thanos_install/#3-2-ruler","text":"Ruler \u662f\u4e00\u4e2a\u53ef\u9009\u7ec4\u4ef6\uff0c\u539f\u5219\u4e0a\u63a8\u8350\u5c3d\u91cf\u4f7f\u7528 Prometheus \u81ea\u5e26\u7684 rule \u529f\u80fd\uff08\u751f\u6210\u65b0\u6307\u6807+\u544a\u8b66\uff09\uff0c\u8fd9\u4e2a\u529f\u80fd\u9700\u8981\u4e00\u4e9b Prometheus \u6700\u65b0\u6570\u636e\uff0c\u76f4\u63a5\u4f7f\u7528 Prometheus \u672c\u673a rule \u529f\u80fd\u548c\u6570\u636e\uff0c\u6027\u80fd\u5f00\u9500\u76f8\u6bd4 Thanos Ruler \u8fd9\u79cd\u5206\u5e03\u5f0f\u65b9\u6848\u5c0f\u5f97\u591a\uff0c\u5e76\u4e14\u51e0\u4e4e\u4e0d\u4f1a\u51fa\u9519\uff0c Thanos Ruler \u7531\u4e8e\u662f\u5206\u5e03\u5f0f\uff0c\u6240\u4ee5\u66f4\u5bb9\u6613\u51fa\u9519\u4e00\u4e9b\u3002 \u5982\u679c\u67d0\u4e9b\u6709\u5173\u8054\u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a\u4e0d\u540c Prometheus \u4e0a\uff0c\u6bd4\u5982\u5bf9\u67d0\u4e2a\u5927\u89c4\u6a21\u670d\u52a1\u91c7\u96c6\u505a\u4e86\u5206\u7247\uff0c\u6bcf\u4e2a Prometheus \u4ec5\u91c7\u96c6\u4e00\u90e8\u5206 endpoint \u7684\u6570\u636e\uff0c\u5bf9\u4e8e record \u7c7b\u578b\u7684 rule \uff08\u751f\u6210\u7684\u65b0\u6307\u6807\uff09\uff0c\u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528 Prometheus \u81ea\u5e26\u7684 rule \u529f\u80fd\uff0c\u5728\u67e5\u8be2\u65f6\u518d\u805a\u5408\u4e00\u4e0b\u5c31\u53ef\u4ee5\uff08\u5982\u679c\u53ef\u4ee5\u63a5\u53d7\u7684\u8bdd\uff09\u3002 \u5bf9\u4e8e alert \u7c7b\u578b\u7684 rule \uff0c\u6211\u4eec\u5c31\u9700\u8981\u7528 Thanos Ruler \u6765\u505a\u4e86\uff0c\u56e0\u4e3a\u6709\u5173\u8054\u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a Prometheus \u4e0a\uff0c\u7528\u5355\u673a\u6570\u636e\u53bb\u505a alert \u8ba1\u7b97\u662f\u4e0d\u51c6\u786e\u7684\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u8bef\u544a\u8b66\u6216\u4e0d\u544a\u8b66\u3002","title":"3-2 \u8bc4\u4f30\u662f\u5426\u9700\u8981 Ruler"},{"location":"chap11/35Thanos_install/#3-3-store-gatewaycompact","text":"Store \u4e5f\u662f\u4e00\u4e2a\u53ef\u9009\u7ec4\u4ef6\uff0c\u4e5f\u662f Thanos \u7684\u4e00\u5927\u4eae\u70b9\u7684\u5173\u952e\uff1a \u6570\u636e\u957f\u671f\u4fdd\u5b58 \u3002 \u8bc4\u4f30\u662f\u5426\u9700\u8981 Store \u7ec4\u4ef6\u5b9e\u9645\u5c31\u662f\u8bc4\u4f30\u4e00\u4e0b\u81ea\u5df1\u662f\u5426\u6709\u6570\u636e\u957f\u671f\u5b58\u50a8\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u67e5\u770b\u4e00\u4e24\u4e2a\u6708\u524d\u7684\u76d1\u63a7\u6570\u636e\u3002\u5982\u679c\u6709\uff0c\u90a3\u4e48 Thanos \u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4fdd\u5b58\u3002 Thanos \u652f\u6301\u4ee5\u4e0b\u5bf9\u8c61\u5b58\u50a8\uff1a Google Cloud Storage AWS/S3 Azure Storage Account OpenStack Swift Tencent COS AliYun OSS \u5728\u56fd\u5185\uff0c\u6700\u65b9\u4fbf\u8fd8\u662f\u4f7f\u7528\u56fd\u5185\u4e3b\u6d41\u516c\u6709\u4e91\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\u3002\u5982\u679c\u4f60\u7684\u670d\u52a1\u6ca1\u6709\u8dd1\u5728\u516c\u6709\u4e91\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8ddf\u4e91\u670d\u52a1\u5382\u5546\u62c9\u4e13\u7ebf\u7684\u65b9\u5f0f\u6765\u8d70\u5185\u7f51\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\uff0c\u8fd9\u6837\u901f\u5ea6\u901a\u5e38\u4e5f\u662f\u53ef\u4ee5\u6ee1\u8db3\u9700\u6c42\u7684\uff1b\u5982\u679c\u5b9e\u5728\u7528\u4e0d\u4e86\u516c\u6709\u4e91\u7684\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b89\u88c5 minio \u6765\u642d\u5efa\u517c\u5bb9 AWS \u7684 S3 \u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\u3002 \u641e\u5b9a\u4e86\u5bf9\u8c61\u5b58\u50a8\uff0c\u8fd8\u9700\u8981\u7ed9 Thanos \u591a\u4e2a\u7ec4\u4ef6\u914d\u7f6e\u5bf9\u8c61\u5b58\u50a8\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u80fd\u591f\u4e0a\u4f20\u4e0e\u8bfb\u53d6\u76d1\u63a7\u6570\u636e\u3002\u9664 Query \u4ee5\u5916\u7684\u6240\u6709 Thanos \u7ec4\u4ef6\uff08 Sidecar \u3001 Receiver \u3001 Ruler \u3001 Store Gateway \u3001 Compac t\uff09\u90fd\u9700\u8981\u914d\u7f6e\u5bf9\u8c61\u5b58\u50a8\u4fe1\u606f\uff0c\u4f7f\u7528 --objstore.config \u76f4\u63a5\u914d\u7f6e\u5185\u5bb9\u6216 --objstore.config-file \u5f15\u7528\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u6587\u4ef6\uff0c\u4e0d\u540c\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1ahttps://thanos.io/storage.md \u901a\u5e38\u4f7f\u7528\u4e86\u5bf9\u8c61\u5b58\u50a8\u6765\u957f\u671f\u4fdd\u5b58\u6570\u636e\u4e0d\u6b62\u8981\u5b89\u88c5 Store Gateway \uff0c\u8fd8\u9700\u8981\u5b89\u88c5 Compact \u6765\u5bf9\u5bf9\u8c61\u5b58\u50a8\u91cc\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\u4e0e\u964d\u91c7\u6837\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u5347\u67e5\u8be2\u5927\u65f6\u95f4\u8303\u56f4\u76d1\u63a7\u6570\u636e\u7684\u6027\u80fd\u3002 \u6ce8\u610f\uff1a Compact \u5e76\u4e0d\u4f1a\u51cf\u5c11\u5bf9\u8c61\u5b58\u50a8\u7684\u4f7f\u7528\u7a7a\u95f4\uff0c\u800c\u662f\u4f1a\u589e\u52a0\uff0c\u589e\u52a0\u66f4\u957f\u91c7\u6837\u95f4\u9694\u7684\u76d1\u63a7\u6570\u636e\uff0c\u8fd9\u6837\u5f53\u67e5\u8be2\u5927\u65f6\u95f4\u8303\u56f4\u6570\u636e\u65f6\uff0c\u5c31\u81ea\u52a8\u62c9\u53d6\u66f4\u957f\u65f6\u95f4\u95f4\u9694\u91c7\u6837\u7684\u6570\u636e\u4ee5\u51cf\u5c11\u67e5\u8be2\u6570\u636e\u7684\u603b\u91cf\uff0c \u4ece\u800c\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6 \uff08\u5927\u65f6\u95f4\u8303\u56f4\u7684\u6570\u636e\u4e0d\u9700\u8981\u90a3\u4e48\u7cbe\u7ec6\uff09\uff0c\u5f53\u653e\u5927\u67e5\u770b\u65f6\uff08\u9009\u62e9\u5176\u4e2d\u4e00\u5c0f\u6bb5\u65f6\u95f4\uff09\uff0c\u53c8\u81ea\u52a8\u9009\u62e9\u62c9\u53d6\u66f4\u77ed\u91c7\u6837\u95f4\u9694\u7684\u6570\u636e\uff0c\u4ece\u800c\u4e5f\u80fd\u663e\u793a\u51fa\u5c0f\u65f6\u95f4\u8303\u56f4\u7684\u76d1\u63a7\u7ec6\u8282 \u3002","title":"3-3 \u8bc4\u4f30\u662f\u5426\u9700\u8981Store Gateway\u4e0eCompact"},{"location":"chap11/35Thanos_install/#3-4","text":"\u8fd9\u91cc\u4ee5 Thanos \u6700\u65b0\u7248\u672c\u4e3a\u4f8b\uff0c\u9009\u62e9 Sidecar \u65b9\u6848\uff0c\u4ecb\u7ecd\u5404\u4e2a\u7ec4\u4ef6\u7684 K8s yaml \u5b9a\u4e49\u65b9\u5f0f\u5e76\u89e3\u91ca\u4e00\u4e9b\u91cd\u8981\u7ec6\u8282\uff08\u6839\u636e\u81ea\u8eab\u9700\u6c42\uff0c\u53c2\u8003\u4e0a\u4e00\u8282\u7684\u65b9\u6848\u9009\u578b\uff0c\u81ea\u884c\u8bc4\u4f30\u9700\u8981\u5b89\u88c5\u54ea\u4e9b\u7ec4\u4ef6\uff09\u3002 \u51c6\u5907\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e \u5982\u679c\u6211\u4eec\u8981\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\u6765\u957f\u671f\u4fdd\u5b58\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u8981\u51c6\u5907\u4e0b\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\u4fe1\u606f \uff08 thanos-objectstorage-secret.yaml \uff09\uff0c\u6bd4\u5982\u4f7f\u7528\u817e\u8baf\u4e91 COS \u6765\u5b58\u50a8\uff1a apiVersion: v1 kind: Secret metadata: name: thanos-objectstorage namespace: thanos type: Opaque stringData: objectstorage.yaml: | type: COS config: bucket: \"thanos\" region: \"ap-singapore\" app_id: \"12*******5\" secret_key: \"tsY***************************Edm\" secret_id: \"AKI******************************gEY\" \u6216\u8005\u4f7f\u7528\u963f\u91cc\u4e91 OSS \u5b58\u50a8\uff1a apiVersion: v1 kind: Secret metadata: name: thanos-objectstorage namespace: thanos type: Opaque stringData: objectstorage.yaml: | type: ALIYUNOSS config: endpoint: \"oss-cn-hangzhou-internal.aliyuncs.com\" bucket: \"thanos\" access_key_id: \"LTA******************KBu\" access_key_secret: \"oki************************2HQ\" \u7ed9 Prometheus \u52a0\u4e0a Sidecar \u5982\u679c\u9009\u7528 Sidecar \u65b9\u6848\uff0c\u5c31\u9700\u8981\u7ed9 Prometheus \u52a0\u4e0a Thanos Sidecar \uff0c\u51c6\u5907 prometheus.yaml \uff1a kind: Service apiVersion: v1 metadata: name: prometheus-headless namespace: thanos labels: app.kubernetes.io/name: prometheus spec: type: ClusterIP clusterIP: None selector: app.kubernetes.io/name: prometheus ports: - name: web protocol: TCP port: 9090 targetPort: web - name: grpc port: 10901 targetPort: grpc --- apiVersion: v1 kind: ServiceAccount metadata: name: prometheus namespace: thanos --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRole metadata: name: prometheus namespace: thanos rules: - apiGroups: [\"\"] resources: - nodes - nodes/proxy - nodes/metrics - services - endpoints - pods verbs: [\"get\", \"list\", \"watch\"] - apiGroups: [\"\"] resources: [\"configmaps\"] verbs: [\"get\"] - nonResourceURLs: [\"/metrics\"] verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: prometheus subjects: - kind: ServiceAccount name: prometheus namespace: thanos roleRef: kind: ClusterRole name: prometheus apiGroup: rbac.authorization.k8s.io --- apiVersion: apps/v1 kind: StatefulSet metadata: name: prometheus namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: serviceName: prometheus-headless podManagementPolicy: Parallel replicas: 2 selector: matchLabels: app.kubernetes.io/name: prometheus template: metadata: labels: app.kubernetes.io/name: prometheus spec: serviceAccountName: prometheus securityContext: fsGroup: 2000 runAsNonRoot: true runAsUser: 1000 affinity: podAntiAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: app.kubernetes.io/name operator: In values: - prometheus topologyKey: kubernetes.io/hostname containers: - name: prometheus image: quay.io/prometheus/prometheus:v2.15.2 args: - --config.file=/etc/prometheus/config_out/prometheus.yaml - --storage.tsdb.path=/prometheus - --storage.tsdb.retention.time=10d - --web.route-prefix=/ - --web.enable-lifecycle - --storage.tsdb.no-lockfile - --storage.tsdb.min-block-duration=2h - --storage.tsdb.max-block-duration=2h - --log.level=debug ports: - containerPort: 9090 name: web protocol: TCP livenessProbe: failureThreshold: 6 httpGet: path: /-/healthy port: web scheme: HTTP periodSeconds: 5 successThreshold: 1 timeoutSeconds: 3 readinessProbe: failureThreshold: 120 httpGet: path: /-/ready port: web scheme: HTTP periodSeconds: 5 successThreshold: 1 timeoutSeconds: 3 volumeMounts: - mountPath: /etc/prometheus/config_out name: prometheus-config-out readOnly: true - mountPath: /prometheus name: prometheus-storage - mountPath: /etc/prometheus/rules name: prometheus-rules - name: thanos image: quay.io/thanos/thanos:v0.11.0 args: - sidecar - --log.level=debug - --tsdb.path=/prometheus - --prometheus.url=http://127.0.0.1:9090 - --objstore.config-file=/etc/thanos/objectstorage.yaml - --reloader.config-file=/etc/prometheus/config/prometheus.yaml.tmpl - --reloader.config-envsubst-file=/etc/prometheus/config_out/prometheus.yaml - --reloader.rule-dir=/etc/prometheus/rules/ env: - name: POD_NAME valueFrom: fieldRef: fieldPath: metadata.name ports: - name: http-sidecar containerPort: 10902 - name: grpc containerPort: 10901 livenessProbe: httpGet: port: 10902 path: /-/healthy readinessProbe: httpGet: port: 10902 path: /-/ready volumeMounts: - name: prometheus-config-tmpl mountPath: /etc/prometheus/config - name: prometheus-config-out mountPath: /etc/prometheus/config_out - name: prometheus-rules mountPath: /etc/prometheus/rules - name: prometheus-storage mountPath: /prometheus - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml volumes: - name: prometheus-config-tmpl configMap: defaultMode: 420 name: prometheus-config-tmpl - name: prometheus-config-out emptyDir: {} - name: prometheus-rules configMap: name: prometheus-rules - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: name: prometheus-storage labels: app.kubernetes.io/name: prometheus spec: accessModes: - ReadWriteOnce resources: requests: storage: 200Gi volumeMode: Filesystem Prometheus \u4f7f\u7528 StatefulSet \u65b9\u5f0f\u90e8\u7f72\uff0c\u6302\u8f7d\u6570\u636e\u76d8\u4ee5\u4fbf\u5b58\u50a8\u6700\u65b0\u76d1\u63a7\u6570\u636e\uff1b \u7531\u4e8e Prometheus \u526f\u672c\u4e4b\u95f4\u6ca1\u6709\u542f\u52a8\u987a\u5e8f\u7684\u4f9d\u8d56\uff0c\u6240\u4ee5 podManagementPolicy \u6307\u5b9a\u4e3a Parallel \uff0c\u52a0\u5feb\u542f\u52a8\u901f\u5ea6\uff1b \u4e3a Prometheus \u7ed1\u5b9a\u8db3\u591f\u7684 RBAC \u6743\u9650\uff0c\u4ee5\u4fbf\u540e\u7eed\u914d\u7f6e\u4f7f\u7528 k8s \u7684\u670d\u52a1\u53d1\u73b0\uff08 kubernetes_sd_configs \uff09\u65f6\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002 \u4e3a Prometheus \u521b\u5efa headless \u7c7b\u578b service \uff0c\u4e3a\u540e\u7eed Thanos Query \u901a\u8fc7 DNS SRV \u8bb0\u5f55\u6765\u52a8\u6001\u53d1\u73b0 Sidecar \u7684 gRPC \u7aef\u70b9\u505a\u51c6\u5907\uff08\u4f7f\u7528 headless service \u624d\u80fd\u8ba9 DNS SRV \u6b63\u786e\u8fd4\u56de\u6240\u6709\u7aef\u70b9\uff09\u3002 \u4f7f\u7528\u4e24\u4e2a Prometheus \u526f\u672c\uff0c\u7528\u4e8e\u5b9e\u73b0\u9ad8\u53ef\u7528\uff1b \u4f7f\u7528\u786c\u53cd\u4eb2\u548c\uff0c\u907f\u514d Prometheus \u90e8\u7f72\u5728\u540c\u4e00\u8282\u70b9\uff0c\u65e2\u53ef\u4ee5\u5206\u6563\u538b\u529b\u4e5f\u53ef\u4ee5\u907f\u514d\u5355\u70b9\u6545\u969c\uff1b Prometheus \u4f7f\u7528 --storage.tsdb.retention.time \u6307\u5b9a\u6570\u636e\u4fdd\u7559\u65f6\u957f\uff0c\u9ed8\u8ba4 15 \u5929\uff0c\u53ef\u4ee5\u6839\u636e\u6570\u636e\u589e\u957f\u901f\u5ea6\u548c\u6570\u636e\u76d8\u5927\u5c0f\u505a\u9002\u5f53\u8c03\u6574\uff08\u6570\u636e\u589e\u957f\u53d6\u51b3\u4e8e\u91c7\u96c6\u7684\u6307\u6807\u548c\u76ee\u6807\u7aef\u70b9\u7684\u6570\u91cf\u548c\u91c7\u96c6\u9891\u7387\uff09\uff1b Sidecar \u4f7f\u7528 --objstore.config-file \u5f15\u7528\u6211\u4eec\u521a\u521a\u521b\u5efa\u5e76\u6302\u8f7d\u7684\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u4e0a\u4f20\u6570\u636e\u5230\u5bf9\u8c61\u5b58\u50a8\uff1b \u901a\u5e38\u4f1a\u7ed9 Prometheus \u9644\u5e26\u4e00\u4e2a quay.io/coreos/prometheus-config-reloader \u6765\u76d1\u542c\u914d\u7f6e\u53d8\u66f4\u5e76\u52a8\u6001\u52a0\u8f7d\uff0c\u4f46 thanos sidecar \u4e5f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u529f\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528 thanos sidecar \u6765\u5b9e\u73b0\u6b64\u529f\u80fd\uff0c\u4e5f\u652f\u6301\u914d\u7f6e\u6587\u4ef6\u6839\u636e\u6a21\u677f\u52a8\u6001\u751f\u6210\uff1a --reloader.config-file \u6307\u5b9a Prometheus \u914d\u7f6e\u6587\u4ef6\u6a21\u677f\uff0c --reloader.config-envsubst-file \u6307\u5b9a\u751f\u6210\u914d\u7f6e\u6587\u4ef6\u7684\u5b58\u653e\u8def\u5f84\uff0c\u5047\u8bbe\u662f /etc/prometheus/config_out/prometheus.yaml \uff0c\u90a3\u4e48 /etc/prometheus/config_out \u8fd9\u4e2a\u8def\u5f84\u4f7f\u7528 emptyDir \u8ba9 Prometheus \u4e0e Sidecar \u5b9e\u73b0\u914d\u7f6e\u6587\u4ef6\u5171\u4eab\u6302\u8f7d\uff0c Prometheus \u518d\u901a\u8fc7 --config.file \u6307\u5b9a\u751f\u6210\u51fa\u6765\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5f53\u914d\u7f6e\u6709\u66f4\u65b0\u65f6\uff0c\u6302\u8f7d\u7684\u914d\u7f6e\u6587\u4ef6\u4e5f\u4f1a\u540c\u6b65\u66f4\u65b0\uff0c Sidecar \u4e5f\u4f1a\u901a\u77e5 Prometheus \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u3002\u53e6\u5916\uff0c Sidecar \u4e0e Prometheus \u4e5f\u6302\u8f7d\u540c\u4e00\u4efd rules \u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u66f4\u65b0\u540e Sidecar \u4ec5\u901a\u77e5 Prometheus \u52a0\u8f7d\u914d\u7f6e\uff0c\u4e0d\u652f\u6301\u6a21\u677f\uff0c\u56e0\u4e3a rules \u914d\u7f6e\u4e0d\u9700\u8981\u6a21\u677f\u6765\u52a8\u6001\u751f\u6210\u3002 \u7136\u540e\u518d\u7ed9 Prometheus \u51c6\u5907\u914d\u7f6e \uff08 prometheus-config.yaml \uff09\uff1a apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config-tmpl namespace: thanos data: prometheus.yaml.tmpl: |- global: scrape_interval: 5s evaluation_interval: 5s external_labels: cluster: prometheus-ha prometheus_replica: $(POD_NAME) rule_files: - /etc/prometheus/rules/*rules.yaml scrape_configs: - job_name: cadvisor metrics_path: /metrics/cadvisor scrape_interval: 10s scrape_timeout: 10s scheme: https tls_config: insecure_skip_verify: true bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) --- apiVersion: v1 kind: ConfigMap metadata: name: prometheus-rules labels: name: prometheus-rules namespace: thanos data: alert-rules.yaml: |- groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate - expr: | sum(container_memory_usage_bytes{job=\"cadvisor\", image!=\"\", container!=\"\"}) by (namespace) record: namespace:container_memory_usage_bytes:sum - expr: | sum by (namespace, pod, container) ( rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m]) ) record: namespace_pod_container:container_cpu_usage_seconds_total:sum_rate \u672c\u6587\u91cd\u70b9\u4e0d\u5728 prometheus \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ec5\u4ee5\u91c7\u96c6 kubelet \u6240\u66b4\u9732\u7684 cadvisor \u5bb9\u5668\u6307\u6807\u7684\u7b80\u5355\u914d\u7f6e\u4e3a\u4f8b\u3002 Prometheus \u5b9e\u4f8b\u91c7\u96c6\u7684\u6240\u6709\u6307\u6807\u6570\u636e\u91cc\u90fd\u4f1a\u989d\u5916\u52a0\u4e0a external_labels \u91cc\u6307\u5b9a\u7684 label \uff0c\u901a\u5e38\u7528 cluster \u533a\u5206\u5f53\u524d Prometheus \u6240\u5728\u96c6\u7fa4\u7684\u540d\u79f0\uff0c\u6211\u4eec\u518d\u52a0\u4e86\u4e2a prometheus_replica \uff0c\u7528\u4e8e\u533a\u5206\u76f8\u540c Prometheus \u526f\u672c\uff08\u8fd9\u4e9b\u526f\u672c\u6240\u91c7\u96c6\u7684\u6570\u636e\u9664\u4e86 prometheus_replica \u7684\u503c\u4e0d\u4e00\u6837\uff0c\u5176\u5b83\u51e0\u4e4e\u4e00\u81f4\uff0c\u8fd9\u4e2a\u503c\u4f1a\u88ab Thanos Sidecar \u66ff\u6362\u6210 Pod \u526f\u672c\u7684\u540d\u79f0\uff0c\u7528\u4e8e Thanos \u5b9e\u73b0 Prometheus \u9ad8\u53ef\u7528\uff09","title":"3-4 \u90e8\u7f72\u5b9e\u8df5"},{"location":"chap11/35Thanos_install/#3-5-query","text":"\u51c6\u5907 thanos-query.yaml \uff1a apiVersion: v1 kind: Service metadata: name: thanos-query namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: ports: - name: grpc port: 10901 targetPort: grpc - name: http port: 9090 targetPort: http selector: app.kubernetes.io/name: thanos-query --- apiVersion: apps/v1 kind: Deployment metadata: name: thanos-query namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: replicas: 3 selector: matchLabels: app.kubernetes.io/name: thanos-query template: metadata: labels: app.kubernetes.io/name: thanos-query spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - podAffinityTerm: labelSelector: matchExpressions: - key: app.kubernetes.io/name operator: In values: - thanos-query topologyKey: kubernetes.io/hostname weight: 100 containers: - args: - query - --log.level=debug - --query.auto-downsampling - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:9090 - --query.partial-response - --query.replica-label=prometheus_replica - --query.replica-label=rule_replica - --store=dnssrv+_grpc._tcp.prometheus-headless.thanos.svc.cluster.local - --store=dnssrv+_grpc._tcp.thanos-rule.thanos.svc.cluster.local - --store=dnssrv+_grpc._tcp.thanos-store.thanos.svc.cluster.local image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 9090 scheme: HTTP periodSeconds: 30 name: thanos-query ports: - containerPort: 10901 name: grpc - containerPort: 9090 name: http readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 9090 scheme: HTTP periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError terminationGracePeriodSeconds: 120 \u914d\u7f6e\u5185\u5bb9\u4ec5\u4e3a\u793a\u4f8b\uff0c\u6839\u636e\u81ea\u8eab\u60c5\u51b5\u6765\u914d\u7f6e\uff0c\u683c\u5f0f\u57fa\u672c\u517c\u5bb9 Prometheus \u7684 rule \u914d\u7f6e\u683c\u5f0f\uff0c\u53c2\u8003\uff1ahttps://thanos.io/components/rule.md/#configuring-rules","title":"3-5 \u5b89\u88c5 Query"},{"location":"chap11/35Thanos_install/#3-6-compact","text":"\u51c6\u5907 Compact \u90e8\u7f72\u914d\u7f6e thanos-compact.yaml \uff1a apiVersion: v1 kind: Service metadata: labels: app.kubernetes.io/name: thanos-compact name: thanos-compact namespace: thanos spec: ports: - name: http port: 10902 targetPort: http selector: app.kubernetes.io/name: thanos-compact --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: app.kubernetes.io/name: thanos-compact name: thanos-compact namespace: thanos spec: replicas: 1 selector: matchLabels: app.kubernetes.io/name: thanos-compact serviceName: thanos-compact template: metadata: labels: app.kubernetes.io/name: thanos-compact spec: containers: - args: - compact - --wait - --objstore.config-file=/etc/thanos/objectstorage.yaml - --data-dir=/var/thanos/compact - --debug.accept-malformed-index - --log.level=debug - --retention.resolution-raw=90d - --retention.resolution-5m=180d - --retention.resolution-1h=360d image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 30 name: thanos-compact ports: - containerPort: 10902 name: http readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 10902 scheme: HTTP periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError volumeMounts: - mountPath: /var/thanos/compact name: data readOnly: false - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml terminationGracePeriodSeconds: 120 volumes: - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-compact name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 100Gi Compact \u53ea\u80fd\u90e8\u7f72\u5355\u4e2a\u526f\u672c\uff0c\u56e0\u4e3a\u5982\u679c\u591a\u4e2a\u526f\u672c\u90fd\u53bb\u5bf9\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\u505a\u538b\u7f29\u548c\u964d\u91c7\u6837\u7684\u8bdd\uff0c\u4f1a\u9020\u6210\u51b2\u7a81\uff1b \u4f7f\u7528 StatefulSet \u90e8\u7f72\uff0c\u65b9\u4fbf\u81ea\u52a8\u521b\u5efa\u548c\u6302\u8f7d\u78c1\u76d8\u3002\u78c1\u76d8\u7528\u4e8e\u5b58\u653e\u4e34\u65f6\u6570\u636e\uff0c\u56e0\u4e3a Compact \u9700\u8981\u4e00\u4e9b\u78c1\u76d8\u7a7a\u95f4\u6765\u5b58\u653e\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u4e2d\u95f4\u6570\u636e\u3002 --wait \u8ba9 Compact \u4e00\u76f4\u8fd0\u884c\uff0c\u8f6e\u8be2\u65b0\u6570\u636e\u6765\u505a\u538b\u7f29\u548c\u964d\u91c7\u6837\uff1b Compact \u4e5f\u9700\u8981\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u7528\u4e8e\u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u6570\u636e\u4ee5\u53ca\u4e0a\u4f20\u538b\u7f29\u548c\u964d\u91c7\u6837\u540e\u7684\u6570\u636e\u5230\u5bf9\u8c61\u5b58\u50a8\uff1b \u521b\u5efa\u4e00\u4e2a\u666e\u901a service \uff0c\u4e3b\u8981\u7528\u4e8e\u88ab Prometheus \u4f7f\u7528 kubernetes \u7684 endpoints \u670d\u52a1\u53d1\u73b0\u6765\u91c7\u96c6\u6307\u6807\uff08\u5176\u5b83\u7ec4\u4ef6\u7684 service \u4e5f\u4e00\u6837\u6709\u8fd9\u4e2a\u7528\u9014\uff09\uff1b --retention.resolution-raw \u6307\u5b9a\u539f\u59cb\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c --retention.resolution-5m \u6307\u5b9a\u964d\u91c7\u6837\u5230\u6570\u636e\u70b9 5 \u5206\u949f\u95f4\u9694\u7684\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c --retention.resolution-1h \u6307\u5b9a\u964d\u91c7\u6837\u5230\u6570\u636e\u70b9 1 \u5c0f\u65f6\u95f4\u9694\u7684\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c\u5b83\u4eec\u7684\u6570\u636e\u7cbe\u7ec6\u7a0b\u5ea6\u9012\u51cf\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u662f\u9012\u51cf\uff0c\u901a\u5e38\u5efa\u8bae\u5b83\u4eec\u7684\u5b58\u653e\u65f6\u95f4\u9012\u589e\u914d\u7f6e\uff08\u4e00\u822c\u53ea\u6709\u6bd4\u8f83\u65b0\u7684\u6570\u636e\u624d\u4f1a\u653e\u5927\u770b\uff0c\u4e45\u8fdc\u7684\u6570\u636e\u901a\u5e38\u53ea\u4f1a\u4f7f\u7528\u5927\u65f6\u95f4\u8303\u56f4\u67e5\u8be2\u6765\u770b\u4e2a\u5927\u81f4\uff0c\u6240\u4ee5\u5efa\u8bae\u5c06\u7cbe\u7ec6\u7a0b\u5ea6\u4f4e\u7684\u6570\u636e\u5b58\u653e\u66f4\u957f\u65f6\u95f4\uff09\u3002","title":"3-6 \u5b89\u88c5 Compact"},{"location":"chap11/35Thanos_install/#3-7-receiver","text":"\u8be5\u7ec4\u4ef6\u5904\u4e8e\u8bd5\u9a8c\u9636\u6bb5\uff0c\u614e\u7528\u3002\u51c6\u5907 Receiver \u90e8\u7f72\u914d\u7f6e thanos-receiver.yaml \uff1a apiVersion: v1 kind: ConfigMap metadata: name: thanos-receive-hashrings namespace: thanos data: thanos-receive-hashrings.json: | [ { \"hashring\": \"soft-tenants\", \"endpoints\": [ \"thanos-receive-0.thanos-receive.kube-system.svc.cluster.local:10901\", \"thanos-receive-1.thanos-receive.kube-system.svc.cluster.local:10901\", \"thanos-receive-2.thanos-receive.kube-system.svc.cluster.local:10901\" ] } ] --- apiVersion: v1 kind: Service metadata: name: thanos-receive namespace: thanos labels: kubernetes.io/name: thanos-receive spec: ports: - name: http port: 10902 protocol: TCP targetPort: 10902 - name: remote-write port: 19291 protocol: TCP targetPort: 19291 - name: grpc port: 10901 protocol: TCP targetPort: 10901 selector: kubernetes.io/name: thanos-receive clusterIP: None --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: kubernetes.io/name: thanos-receive name: thanos-receive namespace: thanos spec: replicas: 3 selector: matchLabels: kubernetes.io/name: thanos-receive serviceName: thanos-receive template: metadata: labels: kubernetes.io/name: thanos-receive spec: containers: - args: - receive - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:10902 - --remote-write.address=0.0.0.0:19291 - --objstore.config-file=/etc/thanos/objectstorage.yaml - --tsdb.path=/var/thanos/receive - --tsdb.retention=12h - --label=receive_replica=\"$(NAME)\" - --label=receive=\"true\" - --receive.hashrings-file=/etc/thanos/thanos-receive-hashrings.json - --receive.local-endpoint=$(NAME).thanos-receive.thanos.svc.cluster.local:10901 env: - name: NAME valueFrom: fieldRef: fieldPath: metadata.name image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 30 name: thanos-receive ports: - containerPort: 10901 name: grpc - containerPort: 10902 name: http - containerPort: 19291 name: remote-write readinessProbe: httpGet: path: /-/ready port: 10902 scheme: HTTP initialDelaySeconds: 10 periodSeconds: 30 resources: limits: cpu: \"4\" memory: 8Gi requests: cpu: \"2\" memory: 4Gi volumeMounts: - mountPath: /var/thanos/receive name: data readOnly: false - mountPath: /etc/thanos/thanos-receive-hashrings.json name: thanos-receive-hashrings subPath: thanos-receive-hashrings.json - mountPath: /etc/thanos/objectstorage.yaml name: thanos-objectstorage subPath: objectstorage.yaml terminationGracePeriodSeconds: 120 volumes: - configMap: defaultMode: 420 name: thanos-receive-hashrings name: thanos-receive-hashrings - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-receive name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 200Gi \u90e8\u7f72 3 \u4e2a\u526f\u672c\uff0c \u914d\u7f6e hashring \uff0c --label=receive_replica \uff1b \u4e3a\u6570\u636e\u6dfb\u52a0 receive_replica \u8fd9\u4e2a label \uff08 Query \u7684 --query.replica-label \u4e5f\u8981\u52a0\u4e0a\u8fd9\u4e2a\uff09\u6765\u5b9e\u73b0 Receiver \u7684\u9ad8\u53ef\u7528\uff1b Query \u8981\u6307\u5b9a Receiver \u540e\u7aef\u5730\u5740\uff1a --store=dnssrv+_grpc._tcp.thanos-receive.thanos.svc.cluster.local \uff1b request \u3001 limit \u6839\u636e\u81ea\u8eab\u89c4\u6a21\u60c5\u51b5\u81ea\u884c\u505a\u9002\u5f53\u8c03\u6574\uff1b --tsdb.retention \u6839\u636e\u81ea\u8eab\u9700\u6c42\u8c03\u6574\u6700\u65b0\u6570\u636e\u7684\u4fdd\u7559\u65f6\u95f4\uff1b \u5982\u679c\u6539\u547d\u540d\u7a7a\u95f4\uff0c\u8bb0\u5f97\u628a Receiver \u7684 --receive.local-endpoint \u53c2\u6570\u4e5f\u6539\u4e0b\uff0c\u4e0d\u7136\u4f1a\u75af\u72c2\u62a5\u9519\u76f4\u81f3 OOMKilled \u3002 \u56e0\u4e3a\u4f7f\u7528\u4e86 Receiver \u6765\u7edf\u4e00\u63a5\u6536 Prometheus \u7684\u6570\u636e\uff0c\u6240\u4ee5 Prometheus \u4e5f\u4e0d\u9700\u8981 Sidecar \u4e86\uff0c\u4f46\u9700\u8981\u7ed9 Prometheus \u914d\u7f6e\u6587\u4ef6\u91cc\u52a0\u4e0b remote_write \uff0c\u8ba9 Prometheus \u5c06\u6570\u636e push \u7ed9 Receiver \uff1a remote_write: - url: http://thanos-receive.thanos.svc.cluster.local:19291/api/v1/receive \u6307\u5b9a Query \u4e3a\u6570\u636e\u6e90 \u67e5\u8be2\u76d1\u63a7\u6570\u636e\u65f6\u9700\u8981\u6307\u5b9a Prometheus \u6570\u636e\u6e90\u5730\u5740\uff0c\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86 Thanos \u6765\u505a\u5206\u5e03\u5f0f\uff0c\u800c Thanos \u5173\u952e\u67e5\u8be2\u5165\u53e3\u5c31\u662f Query \uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u6570\u636e\u6e90\u5730\u5740\u6307\u5b9a\u4e3a Query \u7684\u5730\u5740\uff0c\u5047\u5982\u4f7f\u7528 Grafana \u67e5\u8be2\uff0c\u8fdb\u5165 Configuration-Data Sources-Add data source \uff0c\u9009\u62e9 Prometheus \uff0c\u6307\u5b9a thanos query \u7684\u5730\u5740\uff1ahttp://thanos-query.thanos.svc.cluster.local:9090","title":"3-7 \u5b89\u88c5 Receiver"},{"location":"chap11/39Thanos_tutorial/","text":"\u7b2c\u4e00\u8282 \u5927\u89c4\u6a21\u573a\u666f\u4e0b Prometheus \u7684\u4f18\u5316\u624b\u6bb5 & Thanos \u67b6\u6784\u8be6\u89e3 1 \u6982\u8ff0 Prometheus \u51e0\u4e4e\u5df2\u6210\u4e3a\u76d1\u63a7\u9886\u57df\u7684\u4e8b\u5b9e\u6807\u51c6\uff0c\u5b83\u81ea\u5e26\u9ad8\u6548\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u5b58\u50a8\uff0c\u53ef\u4ee5\u8ba9\u5355\u53f0 Prometheus \u80fd\u591f\u9ad8\u6548\u7684\u5904\u7406\u5927\u91cf\u7684\u6570\u636e\uff0c\u8fd8\u6709\u53cb\u597d\u5e76\u4e14\u5f3a\u5927\u7684 PromQL \u8bed\u6cd5\uff0c\u53ef\u4ee5\u7528\u6765\u7075\u6d3b\u7684\u67e5\u8be2\u5404\u79cd\u76d1\u63a7\u6570\u636e\u4ee5\u53ca\u914d\u7f6e\u544a\u8b66\u89c4\u5219\u3002 \u540c\u65f6\u5b83\u7684 pull \u6a21\u578b\u6307\u6807\u91c7\u96c6\u65b9\u5f0f\u88ab\u5e7f\u6cdb\u91c7\u7eb3\uff0c\u975e\u5e38\u591a\u7684\u5e94\u7528\u90fd\u5b9e\u73b0\u4e86 Prometheus \u7684 metrics \u63a5\u53e3\u4ee5\u66b4\u9732\u81ea\u8eab\u5404\u9879\u6570\u636e\u6307\u6807\u8ba9 Prometheus \u53bb\u91c7\u96c6\uff0c\u5f88\u591a\u6ca1\u6709\u9002\u914d\u7684\u5e94\u7528\u4e5f\u4f1a\u6709\u7b2c\u4e09\u65b9 exporter \u5e2e\u5b83\u53bb\u9002\u914d Prometheus\uff0c\u6240\u4ee5\u76d1\u63a7\u7cfb\u7edf\u6211\u4eec\u901a\u5e38\u9996\u9009\u7528 Prometheus\u3002 1-1 \u5927\u89c4\u6a21\u573a\u666f\u4e0bPrometheus\u7684\u75db\u70b9 Prometheus \u672c\u8eab\u53ea\u652f\u6301\u5355\u673a\u90e8\u7f72\uff0c\u6ca1\u6709\u81ea\u5e26\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\uff0c\u4e5f\u5c31\u4e0d\u652f\u6301\u9ad8\u53ef\u7528\u4ee5\u53ca\u6c34\u5e73\u6269\u5bb9\uff0c\u5728\u5927\u89c4\u6a21\u573a\u666f\u4e0b\uff0c\u6700\u8ba9\u4eba\u5173\u5fc3\u7684\u95ee\u9898\u662f\u5b83\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u53d7\u9650\u4e8e\u5355\u673a\u78c1\u76d8\u5bb9\u91cf\u3002 \u78c1\u76d8\u5bb9\u91cf\u51b3\u5b9a\u4e86\u5355\u4e2a Prometheus \u6240\u80fd\u5b58\u50a8\u7684\u6570\u636e\u91cf\uff0c\u6570\u636e\u91cf\u5927\u5c0f\u53c8\u53d6\u51b3\u4e8e\u88ab\u91c7\u96c6\u670d\u52a1\u7684\u6307\u6807\u6570\u91cf\u3001\u670d\u52a1\u6570\u91cf\u3001\u91c7\u96c6\u901f\u7387\u4ee5\u53ca\u6570\u636e\u8fc7\u671f\u65f6\u95f4 \u3002\u5728\u6570\u636e\u91cf\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u80fd\u5c31\u9700\u8981\u505a\u5f88\u591a\u53d6\u820d\uff0c\u6bd4\u5982\u4e22\u5f03\u4e0d\u91cd\u8981\u7684\u6307\u6807\u3001\u964d\u4f4e\u91c7\u96c6\u901f\u7387\u3001\u8bbe\u7f6e\u8f83\u77ed\u7684\u6570\u636e\u8fc7\u671f\u65f6\u95f4\uff08\u9ed8\u8ba4\u53ea\u4fdd\u755915\u5929\u7684\u6570\u636e\uff0c\u770b\u4e0d\u5230\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff09\u3002 \u8fd9\u4e9b\u75db\u70b9\u5b9e\u9645\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u4f18\u5316\u624b\u6bb5\u6765\u6539\u5584\u7684\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u7ec6\u8bb2\u4e00\u4e0b\u3002 1-2 \u4ece\u670d\u52a1\u7ef4\u5ea6\u62c6\u5206 Prometheus Prometheus \u4e3b\u5f20\u6839\u636e\u529f\u80fd\u6216\u670d\u52a1\u7ef4\u5ea6\u8fdb\u884c\u62c6\u5206\uff0c\u5373\u5982\u679c\u8981\u91c7\u96c6\u7684\u670d\u52a1\u6bd4\u8f83\u591a\uff0c\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u5c31\u914d\u7f6e\u6210\u4ec5\u91c7\u96c6\u548c\u5b58\u50a8\u67d0\u4e00\u4e2a\u6216\u67d0\u4e00\u90e8\u5206\u670d\u52a1\u7684\u6307\u6807\uff0c\u8fd9\u6837\u6839\u636e\u8981\u91c7\u96c6\u7684\u670d\u52a1\u5c06 Prometheus \u62c6\u5206\u6210\u591a\u4e2a\u5b9e\u4f8b\u5206\u522b\u53bb\u91c7\u96c6\uff0c\u4e5f\u80fd\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8fbe\u5230\u6c34\u5e73\u6269\u5bb9\u7684\u76ee\u7684\u3002 \u901a\u5e38\u8fd9\u6837\u7684\u6269\u5bb9\u65b9\u5f0f\u5df2\u7ecf\u80fd\u6ee1\u8db3\u5927\u90e8\u5206\u573a\u666f\u7684\u9700\u6c42\u4e86\uff0c\u6bd5\u7adf\u5355\u673a Prometheus \u5c31\u80fd\u91c7\u96c6\u548c\u5904\u7406\u5f88\u591a\u6570\u636e\u4e86\uff0c\u5f88\u5c11\u6709 Prometheus \u6491\u4e0d\u4f4f\u5355\u4e2a\u670d\u52a1\u7684\u573a\u666f\u3002 \u4e0d\u8fc7\u5728\u8d85\u5927\u89c4\u6a21\u96c6\u7fa4\u4e0b\uff0c\u6709\u4e9b\u5355\u4e2a\u670d\u52a1\u7684\u4f53\u91cf\u4e5f\u5f88\u5927\uff0c\u5c31\u9700\u8981\u8fdb\u4e00\u6b65\u62c6\u5206\u4e86\uff0c\u6211\u4eec\u4e0b\u9762\u6765\u7ee7\u7eed\u8bb2\u4e0b\u5982\u4f55\u518d\u62c6\u5206\u3002 1-3 \u5bf9\u8d85\u5927\u89c4\u6a21\u989d\u670d\u52a1\u505a\u5206\u7247 \u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u96c6\u7fa4\u8282\u70b9\u6570\u91cf\u8fbe\u5230\u4e0a\u5343\u751a\u81f3\u51e0\u5343\u7684\u89c4\u6a21\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u8282\u70b9\u7ea7\u670d\u52a1\u66b4\u9732\u7684\u6307\u6807\uff0c\u6bd4\u5982 kubelet \u5185\u7f6e\u7684 cadvisor \u66b4\u9732\u7684\u5bb9\u5668\u76f8\u5173\u7684\u6307\u6807\uff0c\u53c8\u6216\u8005\u90e8\u7f72\u7684 DeamonSet node-exporter \u66b4\u9732\u7684\u8282\u70b9\u76f8\u5173\u7684\u6307\u6807\uff0c \u5728\u96c6\u7fa4\u89c4\u6a21\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u8fd9\u79cd\u5355\u4e2a\u670d\u52a1\u80cc\u540e\u7684\u6307\u6807\u6570\u636e\u4f53\u91cf\u5f80\u5f80\u975e\u5e38\u5927 \u3002 \u5305\u62ec\u4e00\u4e9b\u7528\u6237\u91cf\u8d85\u5927\u7684\u4e1a\u52a1\uff0c\u5355\u4e2a\u670d\u52a1\u7684 Pod \u526f\u672c\u6570\u5c31\u53ef\u80fd\u8fc7\u5343\uff0c\u8fd9\u79cd\u670d\u52a1\u80cc\u540e\u7684\u6307\u6807\u6570\u636e\u4e5f\u975e\u5e38\u5927\u3002\u5f53\u7136\u8fd9\u662f\u6700\u7f55\u89c1\u7684\u573a\u666f\uff0c\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u7684\u4eba\u6765\u8bf4\u8fd9\u79cd\u573a\u666f\u90fd\u53ea\u6562 YY \u4e00\u4e0b\uff0c\u5b9e\u9645\u5f88\u5c11\u6709\u5355\u4e2a\u670d\u52a1\u5c31\u8fbe\u5230\u8fd9\u4e48\u5927\u89c4\u6a21\u7684\u4e1a\u52a1\u3002 \u9488\u5bf9\u4e0a\u9762\u8fd9\u4e9b\u5927\u89c4\u6a21\u573a\u666f\uff0c\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u53ef\u80fd\u8fde\u8fd9\u5355\u4e2a\u670d\u52a1\u7684\u91c7\u96c6\u4efb\u52a1\u90fd\u625b\u4e0d\u4f4f\u3002Prometheus \u9700\u8981\u5411\u8fd9\u4e2a\u670d\u52a1\u6240\u6709\u540e\u7aef\u5b9e\u4f8b\u53d1\u8bf7\u6c42\u91c7\u96c6\u6570\u636e\uff0c\u7531\u4e8e\u540e\u7aef\u5b9e\u4f8b\u6570\u91cf\u89c4\u6a21\u592a\u5927\uff0c\u91c7\u96c6\u5e76\u53d1\u91cf\u5c31\u4f1a\u5f88\u9ad8\uff0c \u4e00\u65b9\u9762\u5bf9\u8282\u70b9\u7684\u5e26\u5bbd\u3001CPU\u3001\u78c1\u76d8 IO \u90fd\u6709\u4e00\u5b9a\u7684\u538b\u529b\uff0c\u53e6\u4e00\u65b9\u9762 Prometheus \u4f7f\u7528\u7684\u78c1\u76d8\u7a7a\u95f4\u6709\u9650\uff0c\u91c7\u96c6\u7684\u6570\u636e\u91cf\u8fc7\u5927\u5f88\u5bb9\u6613\u5c31\u5c06\u78c1\u76d8\u585e\u6ee1\u4e86 \uff0c\u901a\u5e38\u8981\u505a\u4e00\u4e9b\u53d6\u820d\u624d\u80fd\u5c06\u6570\u636e\u91cf\u63a7\u5236\u5728\u4e00\u5b9a\u8303\u56f4\uff0c\u4f46\u8fd9\u79cd\u53d6\u820d\u4e5f\u4f1a\u964d\u4f4e\u6570\u636e\u5b8c\u6574\u548c\u7cbe\u786e\u7a0b\u5ea6\uff0c\u4e0d\u63a8\u8350\u8fd9\u6837\u505a\u3002 \u90a3\u4e48\u5982\u4f55\u4f18\u5316\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u7ed9\u8fd9\u79cd\u5927\u89c4\u6a21\u7c7b\u578b\u7684\u670d\u52a1\u505a\u4e00\u4e0b\u5206\u7247\uff08 Sharding \uff09\uff0c\u5c06\u5176\u62c6\u5206\u6210\u591a\u4e2a group \uff0c\u8ba9\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u4ec5\u91c7\u96c6\u8fd9\u4e2a\u670d\u52a1\u80cc\u540e\u7684\u67d0\u4e00\u4e2a group \u7684\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u5927\u4f53\u91cf\u670d\u52a1\u7684\u76d1\u63a7\u6570\u636e\u62c6\u5206\u5230\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e0a \u3002 \u5982\u4f55\u5c06\u4e00\u4e2a\u670d\u52a1\u62c6\u6210\u591a\u4e2a group \u5462\uff1f\u4e0b\u9762\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6848\uff0c\u4ee5\u5bf9 kubelet cadvisor \u6570\u636e\u505a\u5206\u7247\u4e3a\u4f8b\u3002 \u7b2c\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528 Kubernetes \u7684\u670d\u52a1\u53d1\u73b0\uff0c\u81ea\u884c\u5b9e\u73b0 sharding \u7b97\u6cd5\u3002 \u6bd4\u5982\u9488\u5bf9\u8282\u70b9\u7ea7\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u5c06\u67d0\u4e2a\u8282\u70b9 shard \u5230\u67d0\u4e2a group \u91cc\uff0c\u7136\u540e\u518d\u5c06\u5176\u6ce8\u518c\u5230 Prometheus \u6240\u652f\u6301\u7684\u670d\u52a1\u53d1\u73b0\u6ce8\u518c\u4e2d\u5fc3\uff0c\u63a8\u8350 consul \uff0c\u6700\u540e\u5728 Prometheus \u914d\u7f6e\u6587\u4ef6\u52a0\u4e0a consul_sd_config \u7684\u914d\u7f6e\uff0c\u6307\u5b9a\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u8981\u91c7\u96c6\u7684 group \u3002 - job_name: 'cadvisor-1' consul_sd_configs: - server: 10.0.0.3:8500 services: - cadvisor-1 # This is the 2nd slave \u5728\u672a\u6765\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u5229\u7528 Kubernetes \u7684 EndpointSlice \u7279\u6027\u6765\u505a\u670d\u52a1\u53d1\u73b0\u548c\u5206\u7247\u5904\u7406\uff0c\u5728\u8d85\u5927\u89c4\u6a21\u670d\u52a1\u573a\u666f\u4e0b\u5c31\u53ef\u4ee5\u4e0d\u9700\u8981\u5176\u5b83\u7684\u670d\u52a1\u53d1\u73b0\u548c\u5206\u7247\u673a\u5236\u3002\u4e0d\u8fc7\u6682\u65f6\u6b64\u7279\u6027\u8fd8\u4e0d\u591f\u6210\u719f\uff0c\u6ca1\u6709\u9ed8\u8ba4\u542f\u7528\uff0c\u4e0d\u63a8\u8350\u7528\uff08\u5f53\u524d Kubernentes \u6700\u65b0\u7248\u672c\u4e3a v1.18\uff09\u3002 \u7b2c\u4e8c\uff0c\u7528 Kubernetes \u7684 node \u670d\u52a1\u53d1\u73b0\uff0c\u518d\u5229\u7528 Prometheus relabel \u914d\u7f6e\u7684 hashmod \u6765\u5bf9 node \u505a\u5206\u7247\u3002 \u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u4ec5\u6293\u5176\u4e2d\u4e00\u4e2a\u5206\u7247\u4e2d\u7684\u6570\u636e: - job_name: 'cadvisor-1' metrics_path: /metrics/cadvisor scheme: https # \u8bf7\u6c42 kubelet metrics \u63a5\u53e3\u4e5f\u9700\u8981\u8ba4\u8bc1\u548c\u6388\u6743\uff0c\u901a\u5e38\u4f1a\u7528 webhook \u65b9\u5f0f\u8ba9 apiserver \u4ee3\u7406\u8fdb\u884c RBAC \u6821\u9a8c\uff0c\u6240\u4ee5\u8fd8\u662f\u7528 ServiceAccount \u7684 token bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node # \u901a\u5e38\u4e0d\u6821\u9a8c kubelet \u7684 server \u8bc1\u4e66\uff0c\u907f\u514d\u62a5 x509: certificate signed by unknown authority tls_config: insecure_skip_verify: true relabel_configs: - source_labels: [__address__] modulus: 4 # \u5c06\u8282\u70b9\u5206\u7247\u6210 4 \u4e2a group target_label: __tmp_hash action: hashmod - source_labels: [__tmp_hash] regex: ^1$ # \u53ea\u6293\u7b2c 2 \u4e2a group \u4e2d\u8282\u70b9\u7684\u6570\u636e(\u5e8f\u53f7 0 \u4e3a\u7b2c 1 \u4e2a group) action: keep 2 \u62c6\u5206\u5f15\u5165\u7684\u65b0\u95ee\u9898 \u524d\u9762\u6211\u4eec\u901a\u8fc7\u4e0d\u901a\u5c42\u9762\u5bf9 Prometheus \u8fdb\u884c\u4e86\u62c6\u5206\u90e8\u7f72\uff0c\u4e00\u65b9\u9762\u4f7f\u5f97 Prometheus \u80fd\u591f\u5b9e\u73b0\u6c34\u5e73\u6269\u5bb9\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u52a0\u5267\u4e86\u76d1\u63a7\u6570\u636e\u843d\u76d8\u7684\u5206\u6563\u7a0b\u5ea6\uff0c\u4f7f\u7528 Grafana \u67e5\u8be2\u76d1\u63a7\u6570\u636e\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u6dfb\u52a0\u8bb8\u591a\u6570\u636e\u6e90\uff0c\u800c\u4e14\u4e0d\u540c\u6570\u636e\u6e90\u4e4b\u95f4\u7684\u6570\u636e\u8fd8\u4e0d\u80fd\u805a\u5408\u67e5\u8be2\uff0c\u76d1\u63a7\u9875\u9762\u4e5f\u770b\u4e0d\u5230\u5168\u5c40\u7684\u89c6\u56fe\uff0c\u9020\u6210\u67e5\u8be2\u6df7\u4e71\u7684\u5c40\u9762\u3002 \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u9762\u7684\u4e24\u65b9\u9762\u5165\u624b\uff0c\u4efb\u9009\u5176\u4e2d\u4e00\u79cd\u65b9\u6848\u3002 2-1 \u96c6\u4e2d\u6570\u636e\u5e93\u5b58\u50a8 \u6211\u4eec\u53ef\u4ee5\u8ba9 Prometheus \u4e0d\u8d1f\u8d23\u5b58\u50a8\uff0c\u4ec5\u91c7\u96c6\u6570\u636e\u5e76\u901a\u8fc7 remote write \u65b9\u5f0f\u5199\u5165\u8fdc\u7a0b\u5b58\u50a8\u7684 adapter \uff0c\u8fdc\u7a0b\u5b58\u50a8\u4f7f\u7528 OpenTSDB \u6216 InfluxDB \u8fd9\u4e9b\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\u7684\u65f6\u5e8f\u6570\u636e\u5e93\uff0c Prometheus \u914d\u7f6e: remote_write: - url: http://10.0.0.2:8888/write \u7136\u540e Grafana \u6dfb\u52a0\u6211\u4eec\u4f7f\u7528\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u4f5c\u4e3a\u6570\u636e\u6e90\u6765\u67e5\u8be2\u76d1\u63a7\u6570\u636e\u6765\u5c55\u793a\uff0c\u67b6\u6784\u56fe: \u8fd9\u79cd\u65b9\u5f0f\u76f8\u5f53\u4e8e\u66f4\u6362\u4e86\u5b58\u50a8\u5f15\u64ce\uff0c\u7531\u5176\u5b83\u652f\u6301\u5b58\u50a8\u6c34\u5e73\u6269\u5bb9\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u6765\u5b58\u50a8\u5e9e\u5927\u7684\u6570\u636e\u91cf\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6570\u636e\u96c6\u4e2d\u5230\u4e00\u8d77\u3002 OpenTSDB \u652f\u6301 HBase, BigTable \u4f5c\u4e3a\u5b58\u50a8\u540e\u7aef\uff0c InfluxDB \u4f01\u4e1a\u7248\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\u548c\u6c34\u5e73\u6269\u5bb9\uff08\u5f00\u6e90\u7248\u4e0d\u652f\u6301\uff09\u3002 \u4e0d\u8fc7\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u4f7f\u7528\u53cb\u597d\u4e14\u5f3a\u5927\u7684 PromQL \u6765\u67e5\u8be2\u76d1\u63a7\u6570\u636e\u4e86\uff0c\u5fc5\u987b\u4f7f\u7528\u6211\u4eec\u5b58\u50a8\u6570\u636e\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u6240\u652f\u6301\u7684\u8bed\u6cd5\u6765\u67e5\u8be2 \u3002 2-2 Prometheus \u8054\u90a6 \u9664\u4e86\u4e0a\u9762\u66f4\u6362\u5b58\u50a8\u5f15\u64ce\u7684\u65b9\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u5c06 Prometheus \u8fdb\u884c\u8054\u90a6\u90e8\u7f72\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5c06\u591a\u4e2a Prometheus \u5b9e\u4f8b\u91c7\u96c6\u7684\u6570\u636e\u518d\u7528\u53e6\u4e00\u4e2a Prometheus \u91c7\u96c6\u6c47\u603b\u5230\u4e00\u8d77\uff0c\u8fd9\u6837\u4e5f\u610f\u5473\u7740\u9700\u8981\u6d88\u8017\u66f4\u591a\u7684\u8d44\u6e90\u3002 \u901a\u5e38\u6211\u4eec\u53ea\u628a\u9700\u8981\u805a\u5408\u7684\u6570\u636e\u6216\u8005\u9700\u8981\u5728\u4e00\u4e2a\u5730\u65b9\u5c55\u793a\u7684\u6570\u636e\u7528\u8fd9\u79cd\u65b9\u5f0f\u91c7\u96c6\u6c47\u603b\u5230\u4e00\u8d77\uff0c\u6bd4\u5982 Kubernetes \u8282\u70b9\u6570\u8fc7\u591a\uff0c cadvisor \u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e0a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u5c06 cadvisor \u66b4\u9732\u7684\u5bb9\u5668\u6307\u6807\u6c47\u603b\u8d77\u6765\uff0c\u4ee5\u4fbf\u4e8e\u5728\u4e00\u4e2a\u5730\u65b9\u5c31\u80fd\u67e5\u8be2\u5230\u96c6\u7fa4\u4e2d\u4efb\u610f\u4e00\u4e2a\u5bb9\u5668\u7684\u76d1\u63a7\u6570\u636e\u6216\u8005\u67d0\u4e2a\u670d\u52a1\u80cc\u540e\u6240\u6709\u5bb9\u5668\u7684\u76d1\u63a7\u6570\u636e\u7684\u805a\u5408\u6c47\u603b\u4ee5\u53ca\u914d\u7f6e\u544a\u8b66\u3002 \u53c8\u6216\u8005\u591a\u4e2a\u670d\u52a1\u6709\u5173\u8054\uff0c\u6bd4\u5982\u901a\u5e38\u5e94\u7528\u53ea\u66b4\u9732\u4e86\u5b83\u5e94\u7528\u76f8\u5173\u7684\u6307\u6807\uff0c\u4f46\u5b83\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\uff08\u6bd4\u5982 CPU \u548c \u5185\u5b58\uff09\u7531 cadvisor \u6765\u611f\u77e5\u548c\u66b4\u9732\uff0c\u8fd9\u4e24\u90e8\u5206\u6307\u6807\u7531\u4e0d\u540c\u7684 Prometheus \u5b9e\u4f8b\u6240\u91c7\u96c6\uff0c\u8fd9\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u5c06\u6570\u636e\u6c47\u603b\uff0c\u5728\u4e00\u4e2a\u5730\u65b9\u5c55\u793a\u548c\u914d\u7f6e\u544a\u8b66\u3002 \u66f4\u591a\u8bf4\u660e\u548c\u914d\u7f6e\u793a\u4f8b\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863: https://prometheus.io/docs/prometheus/latest/federation/ 2-3 Prometheus \u9ad8\u53ef\u7528 \u867d\u7136\u4e0a\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u5217\u64cd\u4f5c\u5c06 Prometheus \u8fdb\u884c\u4e86\u5206\u5e03\u5f0f\u6539\u9020\uff0c\u4f46\u5e76\u6ca1\u6709\u89e3\u51b3 Prometheus \u672c\u8eab\u7684\u9ad8\u53ef\u7528\u95ee\u9898\uff0c\u5373\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u5b9e\u4f8b\u6302\u4e86\uff0c\u6570\u636e\u7684\u67e5\u8be2\u548c\u5b8c\u6574\u6027\u90fd\u5c06\u53d7\u5230\u5f71\u54cd\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709 Prometheus \u5b9e\u4f8b\u90fd\u4f7f\u7528\u4e24\u4e2a\u76f8\u540c\u526f\u672c\uff0c\u5206\u522b\u6302\u8f7d\u6570\u636e\u76d8\uff0c\u5b83\u4eec\u90fd\u91c7\u96c6\u76f8\u540c\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\uff0c\u67e5\u8be2\u5b83\u4eec\u4e4b\u4e2d\u4efb\u610f\u4e00\u4e2a\u90fd\u53ef\u4ee5\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u5b83\u4eec\u524d\u9762\u518d\u6302\u4e00\u5c42\u8d1f\u8f7d\u5747\u8861\uff08\u6bd4\u5982 Nginx \u6216 HAProxy \uff09\uff0c\u6240\u6709\u67e5\u8be2\u90fd\u5148\u7ecf\u8fc7\u8fd9\u4e2a\u8d1f\u8f7d\u5747\u8861\u518d\u5230\u5176\u4e2d\u4e00\u53f0 Prometheus \uff0c\u5982\u679c\u5176\u4e2d\u4e00\u53f0\u6302\u6389\u5c31\u4ece\u8d1f\u8f7d\u5217\u8868\u91cc\u8e22\u6389\u4e0d\u518d\u8f6c\u53d1\u3002 \u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86 Prometheus \u7684\u9ad8\u53ef\u7528\uff0c\u7b80\u5355\u8d77\u89c1\uff0c\u4e0a\u9762\u7684\u56fe\u4ec5\u5c55\u793a\u5355\u4e2a Prometheus \u7684\u9ad8\u53ef\u7528\uff0c\u5f53\u4f60\u53ef\u4ee5\u5c06\u5176\u62d3\u5c55\uff0c\u4ee3\u5165\u5e94\u7528\u5230\u4e0a\u9762\u5176\u5b83\u7684\u4f18\u5316\u624b\u6bb5\u4e2d\uff0c\u5b9e\u73b0\u6574\u4f53\u7684\u9ad8\u53ef\u7528\u3002 \u6211\u4eec\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u5355\u673a Prometheus \u5728\u5927\u89c4\u6a21\u573a\u666f\u4e0b\u7684\u75db\u70b9\uff0c \u4f46\u64cd\u4f5c\u548c\u8fd0\u7ef4\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u5e76\u4e14\u4e0d\u80fd\u591f\u5f88\u597d\u7684\u652f\u6301\u6570\u636e\u7684\u957f\u671f\u5b58\u50a8\uff08long term storage\uff09 \u3002 \u5bf9\u4e8e\u4e00\u4e9b\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff0c\u6211\u4eec\u901a\u5e38\u67e5\u770b\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u4f46\u4e5f\u5e0c\u671b\u80fd\u591f\u4f4e\u6210\u672c\u5730\u4fdd\u7559\u8db3\u591f\u957f\u65f6\u95f4\uff0c\u6570\u636e\u5982\u679c\u5168\u90e8\u843d\u76d8\u5230\u78c1\u76d8\u6210\u672c\u662f\u5f88\u9ad8\u7684\uff0c\u5e76\u4e14\u5bb9\u91cf\u6709\u9650\uff0c\u5373\u4fbf\u5229\u7528\u6c34\u5e73\u6269\u5bb9\u53ef\u4ee5\u589e\u52a0\u5b58\u50a8\u5bb9\u91cf\uff0c\u4f46\u8fd9\u5728\u540c\u65f6\u4e5f\u589e\u5927\u4e86\u8d44\u6e90\u6210\u672c\uff0c\u4e0d\u53ef\u80fd\u65e0\u9650\u6269\u5bb9\uff0c \u6240\u4ee5\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u6570\u636e\u8fc7\u671f\u7b56\u7565\uff0c\u4e5f\u5c31\u4f1a\u4e22\u5931\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570 \u636e\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u4e0d\u5e38\u7528\u7684\u51b7\u6570\u636e\uff0c\u6700\u7406\u60f3\u7684\u65b9\u5f0f\u662f\u5b58\u5230\u5ec9\u4ef7\u7684\u5bf9\u8c61\u5b58\u50a8\u4e2d\uff0c\u7b49\u9700\u8981\u67e5\u8be2\u7684\u65f6\u5019\u80fd\u591f\u81ea\u52a8\u52a0\u8f7d\u51fa\u6765\u3002 Thanos \u53ef\u4ee5\u5e2e\u6211\u4eec\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u5b83\u5b8c\u5168\u517c\u5bb9 Prometheus API \uff0c\u63d0\u4f9b\u7edf\u4e00\u67e5\u8be2\u805a\u5408\u5206\u5e03\u5f0f\u90e8\u7f72\u7684 Prometheus \u6570\u636e\u7684\u80fd\u529b\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u6570\u636e\u957f\u671f\u5b58\u50a8\u5230\u5404\u79cd\u5bf9\u8c61\u5b58\u50a8\uff08\u65e0\u9650\u5b58\u50a8\u80fd\u529b\uff09\u4ee5\u53ca\u964d\u4f4e\u91c7\u6837\u7387\u6765\u52a0\u901f\u5927\u65f6\u95f4\u8303\u56f4\u7684\u6570\u636e\u67e5\u8be2\u3002 3 Thanos \u67b6\u6784\u8be6\u89e3 Thanos\uff08\u6ca1\u9519\uff0c\u5c31\u662f\u706d\u9738\uff09\u53ef\u4ee5\u5e2e\u6211\u4eec\u7b80\u5316\u5206\u5e03\u5f0f Prometheus \u7684\u90e8\u7f72\u4e0e\u7ba1\u7406\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7684\u9ad8\u7ea7\u7279\u6027\uff1a\u5168\u5c40\u89c6\u56fe\u3001\u957f\u671f\u5b58\u50a8\u3001\u9ad8\u53ef\u7528\u3002\u4e0b\u9762\u6211\u4eec\u6765\u8be6\u7ec6\u8bb2\u89e3\u4e00\u4e0b\u3002 3-1 Thanos \u673a\u6784 \u7b80\u5355\u4ecb\u7ecd\u4e0b\u56fe\u4e2d\u8fd9\u51e0\u4e2a\u7ec4\u4ef6\u7684\u4f5c\u7528\uff1a Thanos Query \uff1a\u5b9e\u73b0\u4e86 Prometheus API\uff0c\u5c06\u6765\u81ea\u4e0b\u6e38\u7ec4\u4ef6\u63d0\u4f9b\u7684\u6570\u636e\u8fdb\u884c\u805a\u5408\u6700\u7ec8\u8fd4\u56de\u7ed9\u67e5\u8be2\u6570\u636e\u7684 client \uff08\u5982 grafana\uff09\uff0c\u7c7b\u4f3c\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\u3002 Thanos Sidecar \uff1a\u8fde\u63a5 Prometheus\uff0c\u5c06\u5176\u6570\u636e\u63d0\u4f9b\u7ed9 Thanos Query \u67e5\u8be2\uff0c\u5e76\u4e14/\u6216\u8005\u5c06\u5176\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u4ee5\u4f9b\u957f\u671f\u5b58\u50a8\u3002 Thanos Store Gateway \uff1a\u5c06\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\u66b4\u9732\u7ed9 Thanos Query \u53bb\u67e5\u8be2\u3002 Thanos Ruler \uff1a\u5bf9\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u8bc4\u4f30\u548c\u544a\u8b66\uff0c\u8fd8\u53ef\u4ee5\u8ba1\u7b97\u51fa\u65b0\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5c06\u8fd9\u4e9b\u65b0\u6570\u636e\u63d0\u4f9b\u7ed9 Thanos Query \u67e5\u8be2\u5e76\u4e14/\u6216\u8005\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u4ee5\u4f9b\u957f\u671f\u5b58\u50a8\u3002 Thanos Compact \uff1a\u5c06\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\u548c\u964d\u4f4e\u91c7\u6837\u7387\uff0c\u52a0\u901f\u5927\u65f6\u95f4\u533a\u95f4\u76d1\u63a7\u6570\u636e\u67e5\u8be2\u7684\u901f\u5ea6\u3002 3-2 \u673a\u6784\u8bbe\u8ba1\u5256\u6790 \u5982\u4f55\u7406\u89e3 Thanos \u7684\u67b6\u6784\u8bbe\u8ba1\u7684\uff1f\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5148 YY \u4e00\u4e0b\uff0c\u8981\u662f\u81ea\u5df1\u6765\u8bbe\u8ba1\u4e00\u4e2a\u5206\u5e03\u5f0f Prometheus \u7ba1\u7406\u5e94\u7528\uff0c\u4f1a\u600e\u4e48\u505a\uff1f Query \u4e0e Sidecar \u9996\u5148\uff0c\u76d1\u63a7\u6570\u636e\u7684\u67e5\u8be2\u80af\u5b9a\u4e0d\u80fd\u76f4\u63a5\u67e5 Prometheus \u4e86\uff0c\u56e0\u4e3a\u4f1a\u5b58\u5728\u8bb8\u591a\u4e2a Prometheus \u5b9e\u4f8b\uff0c\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u53ea\u80fd\u611f\u77e5\u5b83\u81ea\u5df1\u6240\u91c7\u96c6\u7684\u6570\u636e\u3002 \u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u8054\u60f3\u5230\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\uff0c\u6bcf\u4e2a\u6570\u636e\u5e93\u90fd\u53ea\u5b58\u4e86\u4e00\u90e8\u5206\u6570\u636e\uff0c\u4e2d\u95f4\u4ef6\u80fd\u611f\u77e5\u5230\u6240\u6709\u6570\u636e\u5e93\uff0c\u6570\u636e\u67e5\u8be2\u90fd\u7ecf\u8fc7\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\u6765\u67e5\uff0c\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u6536\u5230\u67e5\u8be2\u8bf7\u6c42\u518d\u53bb\u67e5\u4e0b\u6e38\u5404\u4e2a\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u6570\u636e\u805a\u5408\u6c47\u603b\u8fd4\u56de\u7ed9\u67e5\u8be2\u7684\u5ba2\u6237\u7aef\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5c06\u5206\u5e03\u5f0f\u5b58\u50a8\u7684\u6570\u636e\u96c6\u4e2d\u67e5\u8be2\u3002 \u5b9e\u9645\u4e0a\uff0c Thanos \u4e5f\u662f\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c Thanos Query \u5c31\u662f\u8fd9\u4e2a \u201c\u4e2d\u95f4\u4ef7\u201d \u7684\u5173\u952e\u5165\u53e3\uff0c\u5b83\u5b9e\u73b0\u4e86 Prometheus \u7684 HTTP API \uff0c\u80fd\u591f \u201c\u770b\u61c2\u201d PromQL \u3002 \u8fd9\u6837\uff0c\u67e5\u8be2 Prometheus \u76d1\u63a7\u6570\u636e\u7684 client \u5c31\u4e0d\u76f4\u63a5\u67e5\u8be2 Prometheus \u672c\u8eab\u4e86\uff0c\u800c\u662f\u53bb\u67e5\u8be2 Thanos Query \uff0c Thanos Query \u518d\u53bb\u4e0b\u6e38\u591a\u4e2a\u5b58\u50a8\u4e86\u6570\u636e\u7684\u5730\u65b9\u67e5\u6570\u636e\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u6570\u636e\u805a\u5408\u53bb\u91cd\u540e\u8fd4\u56de\u7ed9 client\uff0c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f Prometheus \u7684\u6570\u636e\u67e5\u8be2\u3002 \u90a3\u4e48 Thanos Query \u53c8\u5982\u4f55\u53bb\u67e5\u4e0b\u6e38\u5206\u6563\u7684\u6570\u636e\u5462\uff1f Thanos \u4e3a\u6b64\u62bd\u8c61\u4e86\u4e00\u5957\u53eb Store API \u7684\u5185\u90e8 gRPC \u63a5\u53e3\uff0c\u5176\u5b83\u4e00\u4e9b\u7ec4\u4ef6\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u6765\u66b4\u9732\u6570\u636e\u7ed9 Thanos Query \uff0c\u5b83\u81ea\u8eab\u4e5f\u5c31\u53ef\u4ee5\u505a\u5230\u5b8c\u5168\u65e0\u72b6\u6001\u90e8\u7f72\uff0c\u5b9e\u73b0\u9ad8\u53ef\u7528\u4e0e\u52a8\u6001\u6269\u5c55\u3002 \u8fd9\u4e9b\u5206\u6563\u7684\u6570\u636e\u53ef\u80fd\u6765\u81ea\u54ea\u4e9b\u5730\u65b9\u5462\uff1f \u9996\u5148\uff0c Prometheus \u4f1a\u5c06\u91c7\u96c6\u7684\u6570\u636e\u5b58\u5230\u672c\u673a\u78c1\u76d8\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u7528\u8fd9\u4e9b\u5206\u6563\u5728\u5404\u4e2a\u78c1\u76d8\u4e0a\u7684\u6570\u636e\uff0c \u53ef\u4ee5\u7ed9\u6bcf\u4e2a Prometheus \u9644\u5e26\u90e8\u7f72\u4e00\u4e2a Sidecar \uff0c\u8fd9\u4e2a Sidecar \u5b9e\u73b0 Thanos Store API \uff0c\u5f53 Thanos Query \u5bf9\u5176\u53d1\u8d77\u67e5\u8be2\u65f6\uff0c Sidecar \u5c31\u8bfb\u53d6\u8ddf\u5b83\u7ed1\u5b9a\u90e8\u7f72\u7684 Prometheus \u5b9e\u4f8b\u4e0a\u7684\u76d1\u63a7\u6570\u636e\u8fd4\u56de\u7ed9 Thanos Query \u3002 \u7531\u4e8e Thanos Query \u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u4e0e\u53bb\u91cd\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f88\u8f7b\u677e\u5b9e\u73b0\u9ad8\u53ef\u7528\uff1a\u76f8\u540c\u7684 Prometheus \u90e8\u7f72\u591a\u4e2a\u526f\u672c\uff08\u90fd\u9644\u5e26 Sidecar \uff09\uff0c \u7136\u540e Thanos Query \u53bb\u6240\u6709 Sidecar \u67e5\u6570\u636e\uff0c\u5373\u4fbf\u6709\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u6302\u6389\u8fc7\u4e00\u6bb5\u65f6\u95f4\uff0c\u6570\u636e\u805a\u5408\u4e0e\u53bb\u91cd\u540e\u4ecd\u7136\u80fd\u5f97\u5230\u5b8c\u6574\u6570\u636e\u3002 \u8fd9\u79cd\u9ad8\u53ef\u7528\u505a\u6cd5\u8fd8\u5f25\u8865\u4e86\u6211\u4eec\u4e0a\u7bc7\u6587\u7ae0\u4e2d\u7528 \u8d1f\u8f7d\u5747\u8861\u53bb\u5b9e\u73b0 Prometheus \u9ad8\u53ef\u7528\u65b9\u6cd5\u7684\u7f3a\u9677 \uff1a\u5982\u679c\u5176\u4e2d\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u6302\u4e86\u4e00\u6bb5\u65f6\u95f4\u7136\u540e\u53c8\u6062\u590d\u4e86\uff0c\u5b83\u7684\u6570\u636e\u5c31\u4e0d\u5b8c\u6574\uff0c\u5f53\u8d1f\u8f7d\u5747\u8861\u8f6c\u53d1\u5230\u5b83\u4e0a\u9762\u53bb\u67e5\u6570\u636e\u65f6\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u5c31\u53ef\u80fd\u4f1a\u6709\u90e8\u5206\u7f3a\u5931\u3002 \u4e0d\u8fc7\u56e0\u4e3a\u78c1\u76d8\u7a7a\u95f4\u6709\u9650\uff0c Prometheus \u5b58\u50a8\u76d1\u63a7\u6570\u636e\u7684\u80fd\u529b\u4e5f\u662f\u6709\u9650\u7684\uff0c\u901a\u5e38\u4f1a\u7ed9 Prometheus \u8bbe\u7f6e\u4e00\u4e2a\u6570\u636e\u8fc7\u671f\u65f6\u95f4\uff08\u9ed8\u8ba4 15 \u5929\uff09\u6216\u8005\u6700\u5927\u6570\u636e\u91cf\u5927\u5c0f\uff0c\u4e0d\u65ad\u6e05\u7406\u65e7\u6570\u636e\u4ee5\u4fdd\u8bc1\u78c1\u76d8\u4e0d\u88ab\u6491\u7206\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u65e0\u6cd5\u770b\u5230\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff0c\u6709\u65f6\u5019\u8fd9\u4e5f\u7ed9\u6211\u4eec\u7684\u95ee\u9898\u6392\u67e5\u548c\u6570\u636e\u7edf\u8ba1\u9020\u6210\u4e00\u4e9b\u56f0\u96be\u3002 \u5bf9\u4e8e\u9700\u8981\u957f\u671f\u5b58\u50a8\u7684\u6570\u636e\uff0c\u5e76\u4e14\u4f7f\u7528\u9891\u7387\u4e0d\u90a3\u4e48\u9ad8\uff0c\u6700\u7406\u60f3\u7684\u65b9\u5f0f\u662f\u5b58\u8fdb\u5bf9\u8c61\u5b58\u50a8\uff0c\u5404\u5927\u4e91\u5382\u5546\u90fd\u6709\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u7279\u70b9\u662f\u4e0d\u9650\u5236\u5bb9\u91cf\uff0c\u4ef7\u683c\u975e\u5e38\u4fbf\u5b9c\u3002 Thanos \u6709\u51e0\u4e2a\u7ec4\u4ef6\u90fd\u652f\u6301\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5404\u79cd\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58\uff08 Prometheus TSDB \u6570\u636e\u683c\u5f0f\uff09\uff0c\u6bd4\u5982\u6211\u4eec\u521a\u521a\u8bf4\u7684 Sidecar: Store Gateway \u90a3\u4e48\u8fd9\u4e9b\u88ab\u4e0a\u4f20\u5230\u4e86\u5bf9\u8c61\u5b58\u50a8\u91cc\u7684\u76d1\u63a7\u6570\u636e\u8be5\u5982\u4f55\u67e5\u8be2\u5462\uff1f\u7406\u8bba\u4e0a Thanos Query \u4e5f\u53ef\u4ee5\u76f4\u63a5\u53bb\u5bf9\u8c61\u5b58\u50a8\u67e5\uff0c\u4f46\u8fd9\u4f1a\u8ba9 Thanos Query \u7684\u903b\u8f91\u53d8\u7684\u5f88\u91cd\u3002 \u6211\u4eec\u521a\u624d\u4e5f\u770b\u5230\u4e86\uff0c Thanos \u62bd\u8c61\u51fa\u4e86 Store API \uff0c\u53ea\u8981\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u4f5c\u4e3a Thanos Query \u67e5\u8be2\u7684\u6570\u636e\u6e90\uff0c Thanos Store Gateway \u8fd9\u4e2a\u7ec4\u4ef6\u4e5f\u5b9e\u73b0\u4e86 Store API \uff0c\u5411 Thanos Query \u66b4\u9732\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e \u3002 Thanos Store Gateway \u5185\u90e8\u8fd8\u505a\u4e86\u4e00\u4e9b\u52a0\u901f\u6570\u636e\u83b7\u53d6\u7684\u4f18\u5316\u903b\u8f91\uff0c\u4e00\u662f\u7f13\u5b58\u4e86 TSDB \u7d22\u5f15\uff0c\u4e8c\u662f\u4f18\u5316\u4e86\u5bf9\u8c61\u5b58\u50a8\u7684\u8bf7\u6c42 (\u7528\u5c3d\u53ef\u80fd\u5c11\u7684\u8bf7\u6c42\u91cf\u62ff\u5230\u6240\u6709\u9700\u8981\u7684\u6570\u636e)\u3002 \u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u76d1\u63a7\u6570\u636e\u7684\u957f\u671f\u50a8\u5b58\uff0c\u7531\u4e8e\u5bf9\u8c61\u5b58\u50a8\u5bb9\u91cf\u65e0\u9650\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u6211\u4eec\u53ef\u4ee5\u5b58\u4efb\u610f\u65f6\u957f\u7684\u6570\u636e\uff0c\u76d1\u63a7\u5386\u53f2\u6570\u636e\u4e5f\u5c31\u53d8\u5f97\u53ef\u8ffd\u6eaf\u67e5\u8be2\uff0c\u4fbf\u4e8e\u95ee\u9898\u6392\u67e5\u4e0e\u7edf\u8ba1\u5206\u6790\u3002 Ruler \u6709\u4e00\u4e2a\u95ee\u9898\uff0c Prometheus \u4e0d\u4ec5\u4ec5\u53ea\u652f\u6301\u5c06\u91c7\u96c6\u7684\u6570\u636e\u8fdb\u884c\u5b58\u50a8\u548c\u67e5\u8be2\u7684\u529f\u80fd\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e9b rules : \u6839\u636e\u914d\u7f6e\u4e0d\u65ad\u8ba1\u7b97\u51fa\u65b0\u6307\u6807\u6570\u636e\u5e76\u5b58\u50a8\uff0c\u540e\u7eed\u67e5\u8be2\u65f6\u76f4\u63a5\u4f7f\u7528\u8ba1\u7b97\u597d\u7684\u65b0\u6307\u6807\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u8f7b\u67e5\u8be2\u65f6\u7684\u8ba1\u7b97\u538b\u529b\uff0c\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\u3002 \u4e0d\u65ad\u8ba1\u7b97\u548c\u8bc4\u4f30\u662f\u5426\u8fbe\u5230\u544a\u8b66\u9600\u503c\uff0c\u5f53\u8fbe\u5230\u9600\u503c\u65f6\u5c31\u901a\u77e5 AlertManager \u6765\u89e6\u53d1\u544a\u8b66\u3002 \u7531\u4e8e\u6211\u4eec\u5c06 Prometheus \u8fdb\u884c\u5206\u5e03\u5f0f\u90e8\u7f72\uff0c\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u672c\u5730\u5e76\u6ca1\u6709\u5b8c\u6574\u6570\u636e\uff0c\u6709\u4e9b\u6709\u5173\u8054\u7684\u6570\u636e\u53ef\u80fd\u5b58\u5728\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e2d\uff0c\u5355\u673a Prometheus \u770b\u4e0d\u5230\u6570\u636e\u7684\u5168\u5c40\u89c6\u56fe\uff0c\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5c31\u4e0d\u80fd\u4f9d\u8d56 Prometheus \u6765\u505a\u8fd9\u4e9b\u5de5\u4f5c\u3002 \u8fd9\u65f6\uff0c Thanos Ruler \u5c31\u80fd\u5927\u663e\u8eab\u624b\u4e86\u3002\u5b83\u901a\u8fc7\u67e5\u8be2 Thanos Query \u83b7\u53d6\u5168\u5c40\u6570\u636e\uff0c\u7136\u540e\u6839\u636e rules \u914d\u7f6e\u8ba1\u7b97\u65b0\u6307\u6807\u5e76\u5b58\u50a8\uff0c\u540c\u65f6\u4e5f\u901a\u8fc7 Store API \u5c06\u6570\u636e\u66b4\u9732\u7ed9 Thanos Query \uff0c\u540c\u6837\u8fd8\u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58 \uff08\u8fd9\u91cc\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u4e00\u6837\u4e5f\u662f\u901a\u8fc7 Thanos Store Gateway \u66b4\u9732\u7ed9 Thanos Query \uff09\u3002 \u770b\u8d77\u6765 Thanos Query \u8ddf Thanos Ruler \u4e4b\u95f4\u4f1a\u76f8\u4e92\u67e5\u8be2\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u4e0d\u51b2\u7a81\uff0c Thanos Ruler \u4e3a Thanos Query \u63d0\u4f9b\u8ba1\u7b97\u51fa\u7684\u65b0\u6307\u6807\u6570\u636e\uff0c\u800c Thanos Query \u4e3a Thanos Ruler \u63d0\u4f9b\u8ba1\u7b97\u65b0\u6307\u6807\u6240\u9700\u8981\u7684\u5168\u5c40\u539f\u59cb\u6307\u6807\u6570\u636e\u3002 \u81f3\u6b64\uff0c Thanos \u7684\u6838\u5fc3\u80fd\u529b\u57fa\u672c\u5b9e\u73b0\u4e86\uff0c\u5b8c\u5168\u517c\u5bb9 Prometheus \u60c5\u51b5\u4e0b\u63d0\u4f9b\u6570\u636e\u67e5\u8be2\u7684\u5168\u5c40\u89c6\u56fe\u3001\u9ad8\u53ef\u7528\u4ee5\u53ca\u6570\u636e\u7684\u957f\u671f\u4fdd\u5b58\u3002 \u90a3\u6211\u4eec\u8fd8\u53ef\u4ee5\u600e\u4e48\u8fdb\u4e00\u6b65\u505a\u4f18\u5316\u5462\uff1f Compact \u7531\u4e8e\u6211\u4eec\u6709\u6570\u636e\u957f\u671f\u5b58\u50a8\u7684\u80fd\u529b\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5b9e\u73b0\u67e5\u8be2\u8f83\u5927\u65f6\u95f4\u8303\u56f4\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5f53\u65f6\u95f4\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u67e5\u8be2\u7684\u6570\u636e\u91cf\u4e5f\u4f1a\u5f88\u5927\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u67e5\u8be2\u901f\u5ea6\u975e\u5e38\u6162\u3002 \u901a\u5e38\u5728\u67e5\u770b\u8f83\u5927\u65f6\u95f4\u8303\u56f4\u7684\u76d1\u63a7\u6570\u636e\u65f6\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u90a3\u4e48\u8be6\u7ec6\u7684\u6570\u636e\uff0c\u53ea\u9700\u8981\u770b\u5230\u5927\u81f4\u5c31\u884c\u3002\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u7528\u5230 Thanos Compact \uff0c\u5b83\u53ef\u4ee5\u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\uff0c\u5bf9\u5176\u8fdb\u884c\u538b\u7f29\u4ee5\u53ca\u964d\u91c7\u6837\u518d\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8 \uff0c\u8fd9\u6837\u5728\u67e5\u8be2\u5927\u65f6\u95f4\u8303\u56f4\u6570\u636e\u65f6\u5c31\u53ef\u4ee5\u53ea\u8bfb\u53d6\u538b\u7f29\u548c\u964d\u91c7\u6837\u540e\u7684\u6570\u636e\uff0c\u6781\u5927\u5730\u51cf\u5c11\u4e86\u67e5\u8be2\u7684\u6570\u636e\u91cf\uff0c\u4ece\u800c\u52a0\u901f\u67e5\u8be2 \u518d\u770b\u67b6\u6784\u56fe \u4e0a\u9762\u6211\u4eec\u5256\u6790\u4e86\u5b98\u65b9\u67b6\u6784\u56fe\u4e2d\u5404\u4e2a\u7ec4\u4ef6\u7684\u8bbe\u8ba1\uff0c\u73b0\u5728\u518d\u6765\u56de\u5473\u4e00\u4e0b\u8fd9\u5f20\u56fe\uff1a \u53e6\u5916\u8fd8\u6709 Thanos Bucket \u548c Thanos Checker \u4e24\u4e2a\u8f85\u52a9\u6027\u7684\u5de5\u5177\u7ec4\u4ef6\u6ca1\u753b\u51fa\u6765\uff0c\u5b83\u4eec\u4e0d\u662f\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8fd9\u91cc\u4e5f\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002 3-3 Sidecae \u548c Receiver \u6a21\u5f0f \u524d\u9762\u6211\u4eec\u7406\u89e3\u4e86\u5b98\u65b9\u7684\u67b6\u6784\u56fe\uff0c\u4f46\u5176\u4e2d\u8fd8\u7f3a\u5931\u4e00\u4e2a\u6838\u5fc3\u7ec4\u4ef6 Thanos Receiver\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u8fd8\u672a\u5b8c\u5168\u53d1\u5e03\u7684\u7ec4\u4ef6\u3002 \u8bbe\u8ba1\u6587\u6863: https://thanos.io/proposals/201812_thanos-remote-receive.md/ \u8fd9\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u5b8c\u5168\u6d88\u9664 Sidecar \uff0c\u6240\u4ee5 Thanos \u5b9e\u9645\u6709\u4e24\u79cd\u67b6\u6784\u56fe\uff0c\u53ea\u662f\u56e0\u4e3a\u6ca1\u6709\u5b8c\u5168\u53d1\u5e03\uff0c\u5b98\u65b9\u7684\u67b6\u6784\u56fe\u53ea\u7ed9\u7684 Sidecar \u6a21\u5f0f\u3002 Receiver \u662f\u505a\u4ec0\u4e48\u7684\u5462\uff1f\u4e3a\u4ec0\u4e48\u9700\u8981 Receiver \uff1f\u5b83\u8ddf Sidecar \u6709\u4ec0\u4e48\u533a\u522b\uff1f \u5b83\u4eec\u90fd\u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58\uff0c\u533a\u522b\u5728\u4e8e\u6700\u65b0\u6570\u636e\u7684\u5b58\u50a8\u3002 \u7531\u4e8e\u6570\u636e\u4e0a\u4f20\u4e0d\u53ef\u80fd\u5b9e\u65f6\uff0c Sidecar \u6a21\u5f0f\u5c06\u6700\u65b0\u7684\u76d1\u63a7\u6570\u636e\u5b58\u5230 Prometheus \u672c\u673a\uff0c Query \u901a\u8fc7\u8c03\u6240\u6709 Sidecar \u7684 Store API \u6765\u83b7\u53d6\u6700\u65b0\u6570\u636e\uff0c\u8fd9\u5c31\u6210\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c Sidecar \u6570\u91cf\u975e\u5e38\u591a\u6216\u8005 Sidecar \u8ddf Query \u79bb\u7684\u6bd4\u8f83\u8fdc\uff0c\u6bcf\u6b21\u67e5\u8be2 Query \u90fd\u8c03\u6240\u6709 Sideca r \u4f1a\u6d88\u8017\u5f88\u591a\u8d44\u6e90\uff0c\u5e76\u4e14\u901f\u5ea6\u5f88\u6162\uff0c\u800c\u6211\u4eec\u67e5\u770b\u76d1\u63a7\u5927\u591a\u6570\u60c5\u51b5\u90fd\u662f\u770b\u7684\u6700\u65b0\u6570\u636e\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c Thanos Receiver \u7ec4\u4ef6\u88ab\u63d0\u51fa\uff0c\u5b83\u9002\u914d\u4e86 Prometheus \u7684 remote write API \uff0c \u4e5f\u5c31\u662f\u6240\u6709 Prometheus \u5b9e\u4f8b\u53ef\u4ee5\u5b9e\u65f6\u5c06\u6570\u636e push \u5230 Thanos Receiver \uff0c\u6700\u65b0\u6570\u636e\u4e5f\u5f97\u4ee5\u96c6\u4e2d\u8d77\u6765\uff0c\u7136\u540e Thanos Query \u4e5f\u4e0d\u7528\u53bb\u6240\u6709 Sidecar \u67e5\u6700\u65b0\u6570\u636e\u4e86\uff0c\u76f4\u63a5\u67e5 Thanos Receiver \u5373\u53ef\u3002 \u53e6\u5916\uff0c Thanos Receiver \u4e5f\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58\uff0c\u5f53\u7136\uff0c\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u540c\u6837\u7531 Thanos Store Gateway \u66b4\u9732\u7ed9 Thanos Query \u3002 \u6709\u540c\u5b66\u53ef\u80fd\u4f1a\u95ee\uff1a \u5982\u679c\u89c4\u6a21\u5f88\u5927\uff0cReceiver \u538b\u529b\u4f1a\u4e0d\u4f1a\u5f88\u5927\uff0c\u6210\u4e3a\u6027\u80fd\u74f6\u9888\uff1f\u5f53\u7136\uff0c\u8bbe\u8ba1\u8005\u5728\u8bbe\u8ba1\u8fd9\u4e2a\u7ec4\u4ef6\u65f6\u80af\u5b9a\u4f1a\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0cReceiver \u5b9e\u73b0\u4e86\u4e00\u81f4\u6027\u54c8\u5e0c\uff0c\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\uff0c\u6240\u4ee5\u5373\u4f7f\u89c4\u6a21\u5f88\u5927\u4e5f\u4e0d\u4f1a\u6210\u4e3a\u6027\u80fd\u74f6\u9888\u3002","title":"\u7b2c\u4e00\u8282 \u5927\u89c4\u6a21\u573a\u666f\u4e0bPrometheus\u7684\u4f18\u5316\u624b\u6bb5&Thanos\u67b6\u6784\u8be6\u89e3"},{"location":"chap11/39Thanos_tutorial/#prometheus-thanos","text":"","title":"\u7b2c\u4e00\u8282 \u5927\u89c4\u6a21\u573a\u666f\u4e0b Prometheus \u7684\u4f18\u5316\u624b\u6bb5 &amp; Thanos \u67b6\u6784\u8be6\u89e3"},{"location":"chap11/39Thanos_tutorial/#1","text":"Prometheus \u51e0\u4e4e\u5df2\u6210\u4e3a\u76d1\u63a7\u9886\u57df\u7684\u4e8b\u5b9e\u6807\u51c6\uff0c\u5b83\u81ea\u5e26\u9ad8\u6548\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u5b58\u50a8\uff0c\u53ef\u4ee5\u8ba9\u5355\u53f0 Prometheus \u80fd\u591f\u9ad8\u6548\u7684\u5904\u7406\u5927\u91cf\u7684\u6570\u636e\uff0c\u8fd8\u6709\u53cb\u597d\u5e76\u4e14\u5f3a\u5927\u7684 PromQL \u8bed\u6cd5\uff0c\u53ef\u4ee5\u7528\u6765\u7075\u6d3b\u7684\u67e5\u8be2\u5404\u79cd\u76d1\u63a7\u6570\u636e\u4ee5\u53ca\u914d\u7f6e\u544a\u8b66\u89c4\u5219\u3002 \u540c\u65f6\u5b83\u7684 pull \u6a21\u578b\u6307\u6807\u91c7\u96c6\u65b9\u5f0f\u88ab\u5e7f\u6cdb\u91c7\u7eb3\uff0c\u975e\u5e38\u591a\u7684\u5e94\u7528\u90fd\u5b9e\u73b0\u4e86 Prometheus \u7684 metrics \u63a5\u53e3\u4ee5\u66b4\u9732\u81ea\u8eab\u5404\u9879\u6570\u636e\u6307\u6807\u8ba9 Prometheus \u53bb\u91c7\u96c6\uff0c\u5f88\u591a\u6ca1\u6709\u9002\u914d\u7684\u5e94\u7528\u4e5f\u4f1a\u6709\u7b2c\u4e09\u65b9 exporter \u5e2e\u5b83\u53bb\u9002\u914d Prometheus\uff0c\u6240\u4ee5\u76d1\u63a7\u7cfb\u7edf\u6211\u4eec\u901a\u5e38\u9996\u9009\u7528 Prometheus\u3002","title":"1 \u6982\u8ff0"},{"location":"chap11/39Thanos_tutorial/#1-1-prometheus","text":"Prometheus \u672c\u8eab\u53ea\u652f\u6301\u5355\u673a\u90e8\u7f72\uff0c\u6ca1\u6709\u81ea\u5e26\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\uff0c\u4e5f\u5c31\u4e0d\u652f\u6301\u9ad8\u53ef\u7528\u4ee5\u53ca\u6c34\u5e73\u6269\u5bb9\uff0c\u5728\u5927\u89c4\u6a21\u573a\u666f\u4e0b\uff0c\u6700\u8ba9\u4eba\u5173\u5fc3\u7684\u95ee\u9898\u662f\u5b83\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u53d7\u9650\u4e8e\u5355\u673a\u78c1\u76d8\u5bb9\u91cf\u3002 \u78c1\u76d8\u5bb9\u91cf\u51b3\u5b9a\u4e86\u5355\u4e2a Prometheus \u6240\u80fd\u5b58\u50a8\u7684\u6570\u636e\u91cf\uff0c\u6570\u636e\u91cf\u5927\u5c0f\u53c8\u53d6\u51b3\u4e8e\u88ab\u91c7\u96c6\u670d\u52a1\u7684\u6307\u6807\u6570\u91cf\u3001\u670d\u52a1\u6570\u91cf\u3001\u91c7\u96c6\u901f\u7387\u4ee5\u53ca\u6570\u636e\u8fc7\u671f\u65f6\u95f4 \u3002\u5728\u6570\u636e\u91cf\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u80fd\u5c31\u9700\u8981\u505a\u5f88\u591a\u53d6\u820d\uff0c\u6bd4\u5982\u4e22\u5f03\u4e0d\u91cd\u8981\u7684\u6307\u6807\u3001\u964d\u4f4e\u91c7\u96c6\u901f\u7387\u3001\u8bbe\u7f6e\u8f83\u77ed\u7684\u6570\u636e\u8fc7\u671f\u65f6\u95f4\uff08\u9ed8\u8ba4\u53ea\u4fdd\u755915\u5929\u7684\u6570\u636e\uff0c\u770b\u4e0d\u5230\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff09\u3002 \u8fd9\u4e9b\u75db\u70b9\u5b9e\u9645\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u4f18\u5316\u624b\u6bb5\u6765\u6539\u5584\u7684\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u7ec6\u8bb2\u4e00\u4e0b\u3002","title":"1-1 \u5927\u89c4\u6a21\u573a\u666f\u4e0bPrometheus\u7684\u75db\u70b9"},{"location":"chap11/39Thanos_tutorial/#1-2-prometheus","text":"Prometheus \u4e3b\u5f20\u6839\u636e\u529f\u80fd\u6216\u670d\u52a1\u7ef4\u5ea6\u8fdb\u884c\u62c6\u5206\uff0c\u5373\u5982\u679c\u8981\u91c7\u96c6\u7684\u670d\u52a1\u6bd4\u8f83\u591a\uff0c\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u5c31\u914d\u7f6e\u6210\u4ec5\u91c7\u96c6\u548c\u5b58\u50a8\u67d0\u4e00\u4e2a\u6216\u67d0\u4e00\u90e8\u5206\u670d\u52a1\u7684\u6307\u6807\uff0c\u8fd9\u6837\u6839\u636e\u8981\u91c7\u96c6\u7684\u670d\u52a1\u5c06 Prometheus \u62c6\u5206\u6210\u591a\u4e2a\u5b9e\u4f8b\u5206\u522b\u53bb\u91c7\u96c6\uff0c\u4e5f\u80fd\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8fbe\u5230\u6c34\u5e73\u6269\u5bb9\u7684\u76ee\u7684\u3002 \u901a\u5e38\u8fd9\u6837\u7684\u6269\u5bb9\u65b9\u5f0f\u5df2\u7ecf\u80fd\u6ee1\u8db3\u5927\u90e8\u5206\u573a\u666f\u7684\u9700\u6c42\u4e86\uff0c\u6bd5\u7adf\u5355\u673a Prometheus \u5c31\u80fd\u91c7\u96c6\u548c\u5904\u7406\u5f88\u591a\u6570\u636e\u4e86\uff0c\u5f88\u5c11\u6709 Prometheus \u6491\u4e0d\u4f4f\u5355\u4e2a\u670d\u52a1\u7684\u573a\u666f\u3002 \u4e0d\u8fc7\u5728\u8d85\u5927\u89c4\u6a21\u96c6\u7fa4\u4e0b\uff0c\u6709\u4e9b\u5355\u4e2a\u670d\u52a1\u7684\u4f53\u91cf\u4e5f\u5f88\u5927\uff0c\u5c31\u9700\u8981\u8fdb\u4e00\u6b65\u62c6\u5206\u4e86\uff0c\u6211\u4eec\u4e0b\u9762\u6765\u7ee7\u7eed\u8bb2\u4e0b\u5982\u4f55\u518d\u62c6\u5206\u3002","title":"1-2 \u4ece\u670d\u52a1\u7ef4\u5ea6\u62c6\u5206Prometheus"},{"location":"chap11/39Thanos_tutorial/#1-3","text":"\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u96c6\u7fa4\u8282\u70b9\u6570\u91cf\u8fbe\u5230\u4e0a\u5343\u751a\u81f3\u51e0\u5343\u7684\u89c4\u6a21\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u8282\u70b9\u7ea7\u670d\u52a1\u66b4\u9732\u7684\u6307\u6807\uff0c\u6bd4\u5982 kubelet \u5185\u7f6e\u7684 cadvisor \u66b4\u9732\u7684\u5bb9\u5668\u76f8\u5173\u7684\u6307\u6807\uff0c\u53c8\u6216\u8005\u90e8\u7f72\u7684 DeamonSet node-exporter \u66b4\u9732\u7684\u8282\u70b9\u76f8\u5173\u7684\u6307\u6807\uff0c \u5728\u96c6\u7fa4\u89c4\u6a21\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u8fd9\u79cd\u5355\u4e2a\u670d\u52a1\u80cc\u540e\u7684\u6307\u6807\u6570\u636e\u4f53\u91cf\u5f80\u5f80\u975e\u5e38\u5927 \u3002 \u5305\u62ec\u4e00\u4e9b\u7528\u6237\u91cf\u8d85\u5927\u7684\u4e1a\u52a1\uff0c\u5355\u4e2a\u670d\u52a1\u7684 Pod \u526f\u672c\u6570\u5c31\u53ef\u80fd\u8fc7\u5343\uff0c\u8fd9\u79cd\u670d\u52a1\u80cc\u540e\u7684\u6307\u6807\u6570\u636e\u4e5f\u975e\u5e38\u5927\u3002\u5f53\u7136\u8fd9\u662f\u6700\u7f55\u89c1\u7684\u573a\u666f\uff0c\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u7684\u4eba\u6765\u8bf4\u8fd9\u79cd\u573a\u666f\u90fd\u53ea\u6562 YY \u4e00\u4e0b\uff0c\u5b9e\u9645\u5f88\u5c11\u6709\u5355\u4e2a\u670d\u52a1\u5c31\u8fbe\u5230\u8fd9\u4e48\u5927\u89c4\u6a21\u7684\u4e1a\u52a1\u3002 \u9488\u5bf9\u4e0a\u9762\u8fd9\u4e9b\u5927\u89c4\u6a21\u573a\u666f\uff0c\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u53ef\u80fd\u8fde\u8fd9\u5355\u4e2a\u670d\u52a1\u7684\u91c7\u96c6\u4efb\u52a1\u90fd\u625b\u4e0d\u4f4f\u3002Prometheus \u9700\u8981\u5411\u8fd9\u4e2a\u670d\u52a1\u6240\u6709\u540e\u7aef\u5b9e\u4f8b\u53d1\u8bf7\u6c42\u91c7\u96c6\u6570\u636e\uff0c\u7531\u4e8e\u540e\u7aef\u5b9e\u4f8b\u6570\u91cf\u89c4\u6a21\u592a\u5927\uff0c\u91c7\u96c6\u5e76\u53d1\u91cf\u5c31\u4f1a\u5f88\u9ad8\uff0c \u4e00\u65b9\u9762\u5bf9\u8282\u70b9\u7684\u5e26\u5bbd\u3001CPU\u3001\u78c1\u76d8 IO \u90fd\u6709\u4e00\u5b9a\u7684\u538b\u529b\uff0c\u53e6\u4e00\u65b9\u9762 Prometheus \u4f7f\u7528\u7684\u78c1\u76d8\u7a7a\u95f4\u6709\u9650\uff0c\u91c7\u96c6\u7684\u6570\u636e\u91cf\u8fc7\u5927\u5f88\u5bb9\u6613\u5c31\u5c06\u78c1\u76d8\u585e\u6ee1\u4e86 \uff0c\u901a\u5e38\u8981\u505a\u4e00\u4e9b\u53d6\u820d\u624d\u80fd\u5c06\u6570\u636e\u91cf\u63a7\u5236\u5728\u4e00\u5b9a\u8303\u56f4\uff0c\u4f46\u8fd9\u79cd\u53d6\u820d\u4e5f\u4f1a\u964d\u4f4e\u6570\u636e\u5b8c\u6574\u548c\u7cbe\u786e\u7a0b\u5ea6\uff0c\u4e0d\u63a8\u8350\u8fd9\u6837\u505a\u3002 \u90a3\u4e48\u5982\u4f55\u4f18\u5316\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u7ed9\u8fd9\u79cd\u5927\u89c4\u6a21\u7c7b\u578b\u7684\u670d\u52a1\u505a\u4e00\u4e0b\u5206\u7247\uff08 Sharding \uff09\uff0c\u5c06\u5176\u62c6\u5206\u6210\u591a\u4e2a group \uff0c\u8ba9\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u4ec5\u91c7\u96c6\u8fd9\u4e2a\u670d\u52a1\u80cc\u540e\u7684\u67d0\u4e00\u4e2a group \u7684\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u5927\u4f53\u91cf\u670d\u52a1\u7684\u76d1\u63a7\u6570\u636e\u62c6\u5206\u5230\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e0a \u3002 \u5982\u4f55\u5c06\u4e00\u4e2a\u670d\u52a1\u62c6\u6210\u591a\u4e2a group \u5462\uff1f\u4e0b\u9762\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6848\uff0c\u4ee5\u5bf9 kubelet cadvisor \u6570\u636e\u505a\u5206\u7247\u4e3a\u4f8b\u3002 \u7b2c\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528 Kubernetes \u7684\u670d\u52a1\u53d1\u73b0\uff0c\u81ea\u884c\u5b9e\u73b0 sharding \u7b97\u6cd5\u3002 \u6bd4\u5982\u9488\u5bf9\u8282\u70b9\u7ea7\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u5c06\u67d0\u4e2a\u8282\u70b9 shard \u5230\u67d0\u4e2a group \u91cc\uff0c\u7136\u540e\u518d\u5c06\u5176\u6ce8\u518c\u5230 Prometheus \u6240\u652f\u6301\u7684\u670d\u52a1\u53d1\u73b0\u6ce8\u518c\u4e2d\u5fc3\uff0c\u63a8\u8350 consul \uff0c\u6700\u540e\u5728 Prometheus \u914d\u7f6e\u6587\u4ef6\u52a0\u4e0a consul_sd_config \u7684\u914d\u7f6e\uff0c\u6307\u5b9a\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u8981\u91c7\u96c6\u7684 group \u3002 - job_name: 'cadvisor-1' consul_sd_configs: - server: 10.0.0.3:8500 services: - cadvisor-1 # This is the 2nd slave \u5728\u672a\u6765\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u5229\u7528 Kubernetes \u7684 EndpointSlice \u7279\u6027\u6765\u505a\u670d\u52a1\u53d1\u73b0\u548c\u5206\u7247\u5904\u7406\uff0c\u5728\u8d85\u5927\u89c4\u6a21\u670d\u52a1\u573a\u666f\u4e0b\u5c31\u53ef\u4ee5\u4e0d\u9700\u8981\u5176\u5b83\u7684\u670d\u52a1\u53d1\u73b0\u548c\u5206\u7247\u673a\u5236\u3002\u4e0d\u8fc7\u6682\u65f6\u6b64\u7279\u6027\u8fd8\u4e0d\u591f\u6210\u719f\uff0c\u6ca1\u6709\u9ed8\u8ba4\u542f\u7528\uff0c\u4e0d\u63a8\u8350\u7528\uff08\u5f53\u524d Kubernentes \u6700\u65b0\u7248\u672c\u4e3a v1.18\uff09\u3002 \u7b2c\u4e8c\uff0c\u7528 Kubernetes \u7684 node \u670d\u52a1\u53d1\u73b0\uff0c\u518d\u5229\u7528 Prometheus relabel \u914d\u7f6e\u7684 hashmod \u6765\u5bf9 node \u505a\u5206\u7247\u3002 \u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u4ec5\u6293\u5176\u4e2d\u4e00\u4e2a\u5206\u7247\u4e2d\u7684\u6570\u636e: - job_name: 'cadvisor-1' metrics_path: /metrics/cadvisor scheme: https # \u8bf7\u6c42 kubelet metrics \u63a5\u53e3\u4e5f\u9700\u8981\u8ba4\u8bc1\u548c\u6388\u6743\uff0c\u901a\u5e38\u4f1a\u7528 webhook \u65b9\u5f0f\u8ba9 apiserver \u4ee3\u7406\u8fdb\u884c RBAC \u6821\u9a8c\uff0c\u6240\u4ee5\u8fd8\u662f\u7528 ServiceAccount \u7684 token bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node # \u901a\u5e38\u4e0d\u6821\u9a8c kubelet \u7684 server \u8bc1\u4e66\uff0c\u907f\u514d\u62a5 x509: certificate signed by unknown authority tls_config: insecure_skip_verify: true relabel_configs: - source_labels: [__address__] modulus: 4 # \u5c06\u8282\u70b9\u5206\u7247\u6210 4 \u4e2a group target_label: __tmp_hash action: hashmod - source_labels: [__tmp_hash] regex: ^1$ # \u53ea\u6293\u7b2c 2 \u4e2a group \u4e2d\u8282\u70b9\u7684\u6570\u636e(\u5e8f\u53f7 0 \u4e3a\u7b2c 1 \u4e2a group) action: keep","title":"1-3 \u5bf9\u8d85\u5927\u89c4\u6a21\u989d\u670d\u52a1\u505a\u5206\u7247"},{"location":"chap11/39Thanos_tutorial/#2","text":"\u524d\u9762\u6211\u4eec\u901a\u8fc7\u4e0d\u901a\u5c42\u9762\u5bf9 Prometheus \u8fdb\u884c\u4e86\u62c6\u5206\u90e8\u7f72\uff0c\u4e00\u65b9\u9762\u4f7f\u5f97 Prometheus \u80fd\u591f\u5b9e\u73b0\u6c34\u5e73\u6269\u5bb9\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u52a0\u5267\u4e86\u76d1\u63a7\u6570\u636e\u843d\u76d8\u7684\u5206\u6563\u7a0b\u5ea6\uff0c\u4f7f\u7528 Grafana \u67e5\u8be2\u76d1\u63a7\u6570\u636e\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u6dfb\u52a0\u8bb8\u591a\u6570\u636e\u6e90\uff0c\u800c\u4e14\u4e0d\u540c\u6570\u636e\u6e90\u4e4b\u95f4\u7684\u6570\u636e\u8fd8\u4e0d\u80fd\u805a\u5408\u67e5\u8be2\uff0c\u76d1\u63a7\u9875\u9762\u4e5f\u770b\u4e0d\u5230\u5168\u5c40\u7684\u89c6\u56fe\uff0c\u9020\u6210\u67e5\u8be2\u6df7\u4e71\u7684\u5c40\u9762\u3002 \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u9762\u7684\u4e24\u65b9\u9762\u5165\u624b\uff0c\u4efb\u9009\u5176\u4e2d\u4e00\u79cd\u65b9\u6848\u3002","title":"2 \u62c6\u5206\u5f15\u5165\u7684\u65b0\u95ee\u9898"},{"location":"chap11/39Thanos_tutorial/#2-1","text":"\u6211\u4eec\u53ef\u4ee5\u8ba9 Prometheus \u4e0d\u8d1f\u8d23\u5b58\u50a8\uff0c\u4ec5\u91c7\u96c6\u6570\u636e\u5e76\u901a\u8fc7 remote write \u65b9\u5f0f\u5199\u5165\u8fdc\u7a0b\u5b58\u50a8\u7684 adapter \uff0c\u8fdc\u7a0b\u5b58\u50a8\u4f7f\u7528 OpenTSDB \u6216 InfluxDB \u8fd9\u4e9b\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\u7684\u65f6\u5e8f\u6570\u636e\u5e93\uff0c Prometheus \u914d\u7f6e: remote_write: - url: http://10.0.0.2:8888/write \u7136\u540e Grafana \u6dfb\u52a0\u6211\u4eec\u4f7f\u7528\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u4f5c\u4e3a\u6570\u636e\u6e90\u6765\u67e5\u8be2\u76d1\u63a7\u6570\u636e\u6765\u5c55\u793a\uff0c\u67b6\u6784\u56fe: \u8fd9\u79cd\u65b9\u5f0f\u76f8\u5f53\u4e8e\u66f4\u6362\u4e86\u5b58\u50a8\u5f15\u64ce\uff0c\u7531\u5176\u5b83\u652f\u6301\u5b58\u50a8\u6c34\u5e73\u6269\u5bb9\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u6765\u5b58\u50a8\u5e9e\u5927\u7684\u6570\u636e\u91cf\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6570\u636e\u96c6\u4e2d\u5230\u4e00\u8d77\u3002 OpenTSDB \u652f\u6301 HBase, BigTable \u4f5c\u4e3a\u5b58\u50a8\u540e\u7aef\uff0c InfluxDB \u4f01\u4e1a\u7248\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\u548c\u6c34\u5e73\u6269\u5bb9\uff08\u5f00\u6e90\u7248\u4e0d\u652f\u6301\uff09\u3002 \u4e0d\u8fc7\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u4f7f\u7528\u53cb\u597d\u4e14\u5f3a\u5927\u7684 PromQL \u6765\u67e5\u8be2\u76d1\u63a7\u6570\u636e\u4e86\uff0c\u5fc5\u987b\u4f7f\u7528\u6211\u4eec\u5b58\u50a8\u6570\u636e\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u6240\u652f\u6301\u7684\u8bed\u6cd5\u6765\u67e5\u8be2 \u3002","title":"2-1 \u96c6\u4e2d\u6570\u636e\u5e93\u5b58\u50a8"},{"location":"chap11/39Thanos_tutorial/#2-2-prometheus","text":"\u9664\u4e86\u4e0a\u9762\u66f4\u6362\u5b58\u50a8\u5f15\u64ce\u7684\u65b9\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u5c06 Prometheus \u8fdb\u884c\u8054\u90a6\u90e8\u7f72\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5c06\u591a\u4e2a Prometheus \u5b9e\u4f8b\u91c7\u96c6\u7684\u6570\u636e\u518d\u7528\u53e6\u4e00\u4e2a Prometheus \u91c7\u96c6\u6c47\u603b\u5230\u4e00\u8d77\uff0c\u8fd9\u6837\u4e5f\u610f\u5473\u7740\u9700\u8981\u6d88\u8017\u66f4\u591a\u7684\u8d44\u6e90\u3002 \u901a\u5e38\u6211\u4eec\u53ea\u628a\u9700\u8981\u805a\u5408\u7684\u6570\u636e\u6216\u8005\u9700\u8981\u5728\u4e00\u4e2a\u5730\u65b9\u5c55\u793a\u7684\u6570\u636e\u7528\u8fd9\u79cd\u65b9\u5f0f\u91c7\u96c6\u6c47\u603b\u5230\u4e00\u8d77\uff0c\u6bd4\u5982 Kubernetes \u8282\u70b9\u6570\u8fc7\u591a\uff0c cadvisor \u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e0a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u5c06 cadvisor \u66b4\u9732\u7684\u5bb9\u5668\u6307\u6807\u6c47\u603b\u8d77\u6765\uff0c\u4ee5\u4fbf\u4e8e\u5728\u4e00\u4e2a\u5730\u65b9\u5c31\u80fd\u67e5\u8be2\u5230\u96c6\u7fa4\u4e2d\u4efb\u610f\u4e00\u4e2a\u5bb9\u5668\u7684\u76d1\u63a7\u6570\u636e\u6216\u8005\u67d0\u4e2a\u670d\u52a1\u80cc\u540e\u6240\u6709\u5bb9\u5668\u7684\u76d1\u63a7\u6570\u636e\u7684\u805a\u5408\u6c47\u603b\u4ee5\u53ca\u914d\u7f6e\u544a\u8b66\u3002 \u53c8\u6216\u8005\u591a\u4e2a\u670d\u52a1\u6709\u5173\u8054\uff0c\u6bd4\u5982\u901a\u5e38\u5e94\u7528\u53ea\u66b4\u9732\u4e86\u5b83\u5e94\u7528\u76f8\u5173\u7684\u6307\u6807\uff0c\u4f46\u5b83\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\uff08\u6bd4\u5982 CPU \u548c \u5185\u5b58\uff09\u7531 cadvisor \u6765\u611f\u77e5\u548c\u66b4\u9732\uff0c\u8fd9\u4e24\u90e8\u5206\u6307\u6807\u7531\u4e0d\u540c\u7684 Prometheus \u5b9e\u4f8b\u6240\u91c7\u96c6\uff0c\u8fd9\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u5c06\u6570\u636e\u6c47\u603b\uff0c\u5728\u4e00\u4e2a\u5730\u65b9\u5c55\u793a\u548c\u914d\u7f6e\u544a\u8b66\u3002 \u66f4\u591a\u8bf4\u660e\u548c\u914d\u7f6e\u793a\u4f8b\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863: https://prometheus.io/docs/prometheus/latest/federation/","title":"2-2 Prometheus \u8054\u90a6"},{"location":"chap11/39Thanos_tutorial/#2-3-prometheus","text":"\u867d\u7136\u4e0a\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u5217\u64cd\u4f5c\u5c06 Prometheus \u8fdb\u884c\u4e86\u5206\u5e03\u5f0f\u6539\u9020\uff0c\u4f46\u5e76\u6ca1\u6709\u89e3\u51b3 Prometheus \u672c\u8eab\u7684\u9ad8\u53ef\u7528\u95ee\u9898\uff0c\u5373\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u5b9e\u4f8b\u6302\u4e86\uff0c\u6570\u636e\u7684\u67e5\u8be2\u548c\u5b8c\u6574\u6027\u90fd\u5c06\u53d7\u5230\u5f71\u54cd\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709 Prometheus \u5b9e\u4f8b\u90fd\u4f7f\u7528\u4e24\u4e2a\u76f8\u540c\u526f\u672c\uff0c\u5206\u522b\u6302\u8f7d\u6570\u636e\u76d8\uff0c\u5b83\u4eec\u90fd\u91c7\u96c6\u76f8\u540c\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\uff0c\u67e5\u8be2\u5b83\u4eec\u4e4b\u4e2d\u4efb\u610f\u4e00\u4e2a\u90fd\u53ef\u4ee5\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u5b83\u4eec\u524d\u9762\u518d\u6302\u4e00\u5c42\u8d1f\u8f7d\u5747\u8861\uff08\u6bd4\u5982 Nginx \u6216 HAProxy \uff09\uff0c\u6240\u6709\u67e5\u8be2\u90fd\u5148\u7ecf\u8fc7\u8fd9\u4e2a\u8d1f\u8f7d\u5747\u8861\u518d\u5230\u5176\u4e2d\u4e00\u53f0 Prometheus \uff0c\u5982\u679c\u5176\u4e2d\u4e00\u53f0\u6302\u6389\u5c31\u4ece\u8d1f\u8f7d\u5217\u8868\u91cc\u8e22\u6389\u4e0d\u518d\u8f6c\u53d1\u3002 \u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86 Prometheus \u7684\u9ad8\u53ef\u7528\uff0c\u7b80\u5355\u8d77\u89c1\uff0c\u4e0a\u9762\u7684\u56fe\u4ec5\u5c55\u793a\u5355\u4e2a Prometheus \u7684\u9ad8\u53ef\u7528\uff0c\u5f53\u4f60\u53ef\u4ee5\u5c06\u5176\u62d3\u5c55\uff0c\u4ee3\u5165\u5e94\u7528\u5230\u4e0a\u9762\u5176\u5b83\u7684\u4f18\u5316\u624b\u6bb5\u4e2d\uff0c\u5b9e\u73b0\u6574\u4f53\u7684\u9ad8\u53ef\u7528\u3002 \u6211\u4eec\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u5355\u673a Prometheus \u5728\u5927\u89c4\u6a21\u573a\u666f\u4e0b\u7684\u75db\u70b9\uff0c \u4f46\u64cd\u4f5c\u548c\u8fd0\u7ef4\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u5e76\u4e14\u4e0d\u80fd\u591f\u5f88\u597d\u7684\u652f\u6301\u6570\u636e\u7684\u957f\u671f\u5b58\u50a8\uff08long term storage\uff09 \u3002 \u5bf9\u4e8e\u4e00\u4e9b\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff0c\u6211\u4eec\u901a\u5e38\u67e5\u770b\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u4f46\u4e5f\u5e0c\u671b\u80fd\u591f\u4f4e\u6210\u672c\u5730\u4fdd\u7559\u8db3\u591f\u957f\u65f6\u95f4\uff0c\u6570\u636e\u5982\u679c\u5168\u90e8\u843d\u76d8\u5230\u78c1\u76d8\u6210\u672c\u662f\u5f88\u9ad8\u7684\uff0c\u5e76\u4e14\u5bb9\u91cf\u6709\u9650\uff0c\u5373\u4fbf\u5229\u7528\u6c34\u5e73\u6269\u5bb9\u53ef\u4ee5\u589e\u52a0\u5b58\u50a8\u5bb9\u91cf\uff0c\u4f46\u8fd9\u5728\u540c\u65f6\u4e5f\u589e\u5927\u4e86\u8d44\u6e90\u6210\u672c\uff0c\u4e0d\u53ef\u80fd\u65e0\u9650\u6269\u5bb9\uff0c \u6240\u4ee5\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u6570\u636e\u8fc7\u671f\u7b56\u7565\uff0c\u4e5f\u5c31\u4f1a\u4e22\u5931\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570 \u636e\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u4e0d\u5e38\u7528\u7684\u51b7\u6570\u636e\uff0c\u6700\u7406\u60f3\u7684\u65b9\u5f0f\u662f\u5b58\u5230\u5ec9\u4ef7\u7684\u5bf9\u8c61\u5b58\u50a8\u4e2d\uff0c\u7b49\u9700\u8981\u67e5\u8be2\u7684\u65f6\u5019\u80fd\u591f\u81ea\u52a8\u52a0\u8f7d\u51fa\u6765\u3002 Thanos \u53ef\u4ee5\u5e2e\u6211\u4eec\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u5b83\u5b8c\u5168\u517c\u5bb9 Prometheus API \uff0c\u63d0\u4f9b\u7edf\u4e00\u67e5\u8be2\u805a\u5408\u5206\u5e03\u5f0f\u90e8\u7f72\u7684 Prometheus \u6570\u636e\u7684\u80fd\u529b\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u6570\u636e\u957f\u671f\u5b58\u50a8\u5230\u5404\u79cd\u5bf9\u8c61\u5b58\u50a8\uff08\u65e0\u9650\u5b58\u50a8\u80fd\u529b\uff09\u4ee5\u53ca\u964d\u4f4e\u91c7\u6837\u7387\u6765\u52a0\u901f\u5927\u65f6\u95f4\u8303\u56f4\u7684\u6570\u636e\u67e5\u8be2\u3002","title":"2-3 Prometheus \u9ad8\u53ef\u7528"},{"location":"chap11/39Thanos_tutorial/#3-thanos","text":"Thanos\uff08\u6ca1\u9519\uff0c\u5c31\u662f\u706d\u9738\uff09\u53ef\u4ee5\u5e2e\u6211\u4eec\u7b80\u5316\u5206\u5e03\u5f0f Prometheus \u7684\u90e8\u7f72\u4e0e\u7ba1\u7406\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7684\u9ad8\u7ea7\u7279\u6027\uff1a\u5168\u5c40\u89c6\u56fe\u3001\u957f\u671f\u5b58\u50a8\u3001\u9ad8\u53ef\u7528\u3002\u4e0b\u9762\u6211\u4eec\u6765\u8be6\u7ec6\u8bb2\u89e3\u4e00\u4e0b\u3002","title":"3 Thanos \u67b6\u6784\u8be6\u89e3"},{"location":"chap11/39Thanos_tutorial/#3-1-thanos","text":"\u7b80\u5355\u4ecb\u7ecd\u4e0b\u56fe\u4e2d\u8fd9\u51e0\u4e2a\u7ec4\u4ef6\u7684\u4f5c\u7528\uff1a Thanos Query \uff1a\u5b9e\u73b0\u4e86 Prometheus API\uff0c\u5c06\u6765\u81ea\u4e0b\u6e38\u7ec4\u4ef6\u63d0\u4f9b\u7684\u6570\u636e\u8fdb\u884c\u805a\u5408\u6700\u7ec8\u8fd4\u56de\u7ed9\u67e5\u8be2\u6570\u636e\u7684 client \uff08\u5982 grafana\uff09\uff0c\u7c7b\u4f3c\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\u3002 Thanos Sidecar \uff1a\u8fde\u63a5 Prometheus\uff0c\u5c06\u5176\u6570\u636e\u63d0\u4f9b\u7ed9 Thanos Query \u67e5\u8be2\uff0c\u5e76\u4e14/\u6216\u8005\u5c06\u5176\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u4ee5\u4f9b\u957f\u671f\u5b58\u50a8\u3002 Thanos Store Gateway \uff1a\u5c06\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\u66b4\u9732\u7ed9 Thanos Query \u53bb\u67e5\u8be2\u3002 Thanos Ruler \uff1a\u5bf9\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u8bc4\u4f30\u548c\u544a\u8b66\uff0c\u8fd8\u53ef\u4ee5\u8ba1\u7b97\u51fa\u65b0\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5c06\u8fd9\u4e9b\u65b0\u6570\u636e\u63d0\u4f9b\u7ed9 Thanos Query \u67e5\u8be2\u5e76\u4e14/\u6216\u8005\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u4ee5\u4f9b\u957f\u671f\u5b58\u50a8\u3002 Thanos Compact \uff1a\u5c06\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\u548c\u964d\u4f4e\u91c7\u6837\u7387\uff0c\u52a0\u901f\u5927\u65f6\u95f4\u533a\u95f4\u76d1\u63a7\u6570\u636e\u67e5\u8be2\u7684\u901f\u5ea6\u3002","title":"3-1 Thanos \u673a\u6784"},{"location":"chap11/39Thanos_tutorial/#3-2","text":"\u5982\u4f55\u7406\u89e3 Thanos \u7684\u67b6\u6784\u8bbe\u8ba1\u7684\uff1f\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5148 YY \u4e00\u4e0b\uff0c\u8981\u662f\u81ea\u5df1\u6765\u8bbe\u8ba1\u4e00\u4e2a\u5206\u5e03\u5f0f Prometheus \u7ba1\u7406\u5e94\u7528\uff0c\u4f1a\u600e\u4e48\u505a\uff1f Query \u4e0e Sidecar \u9996\u5148\uff0c\u76d1\u63a7\u6570\u636e\u7684\u67e5\u8be2\u80af\u5b9a\u4e0d\u80fd\u76f4\u63a5\u67e5 Prometheus \u4e86\uff0c\u56e0\u4e3a\u4f1a\u5b58\u5728\u8bb8\u591a\u4e2a Prometheus \u5b9e\u4f8b\uff0c\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u53ea\u80fd\u611f\u77e5\u5b83\u81ea\u5df1\u6240\u91c7\u96c6\u7684\u6570\u636e\u3002 \u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u8054\u60f3\u5230\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\uff0c\u6bcf\u4e2a\u6570\u636e\u5e93\u90fd\u53ea\u5b58\u4e86\u4e00\u90e8\u5206\u6570\u636e\uff0c\u4e2d\u95f4\u4ef6\u80fd\u611f\u77e5\u5230\u6240\u6709\u6570\u636e\u5e93\uff0c\u6570\u636e\u67e5\u8be2\u90fd\u7ecf\u8fc7\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\u6765\u67e5\uff0c\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u6536\u5230\u67e5\u8be2\u8bf7\u6c42\u518d\u53bb\u67e5\u4e0b\u6e38\u5404\u4e2a\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u6570\u636e\u805a\u5408\u6c47\u603b\u8fd4\u56de\u7ed9\u67e5\u8be2\u7684\u5ba2\u6237\u7aef\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5c06\u5206\u5e03\u5f0f\u5b58\u50a8\u7684\u6570\u636e\u96c6\u4e2d\u67e5\u8be2\u3002 \u5b9e\u9645\u4e0a\uff0c Thanos \u4e5f\u662f\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c Thanos Query \u5c31\u662f\u8fd9\u4e2a \u201c\u4e2d\u95f4\u4ef7\u201d \u7684\u5173\u952e\u5165\u53e3\uff0c\u5b83\u5b9e\u73b0\u4e86 Prometheus \u7684 HTTP API \uff0c\u80fd\u591f \u201c\u770b\u61c2\u201d PromQL \u3002 \u8fd9\u6837\uff0c\u67e5\u8be2 Prometheus \u76d1\u63a7\u6570\u636e\u7684 client \u5c31\u4e0d\u76f4\u63a5\u67e5\u8be2 Prometheus \u672c\u8eab\u4e86\uff0c\u800c\u662f\u53bb\u67e5\u8be2 Thanos Query \uff0c Thanos Query \u518d\u53bb\u4e0b\u6e38\u591a\u4e2a\u5b58\u50a8\u4e86\u6570\u636e\u7684\u5730\u65b9\u67e5\u6570\u636e\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u6570\u636e\u805a\u5408\u53bb\u91cd\u540e\u8fd4\u56de\u7ed9 client\uff0c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f Prometheus \u7684\u6570\u636e\u67e5\u8be2\u3002 \u90a3\u4e48 Thanos Query \u53c8\u5982\u4f55\u53bb\u67e5\u4e0b\u6e38\u5206\u6563\u7684\u6570\u636e\u5462\uff1f Thanos \u4e3a\u6b64\u62bd\u8c61\u4e86\u4e00\u5957\u53eb Store API \u7684\u5185\u90e8 gRPC \u63a5\u53e3\uff0c\u5176\u5b83\u4e00\u4e9b\u7ec4\u4ef6\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u6765\u66b4\u9732\u6570\u636e\u7ed9 Thanos Query \uff0c\u5b83\u81ea\u8eab\u4e5f\u5c31\u53ef\u4ee5\u505a\u5230\u5b8c\u5168\u65e0\u72b6\u6001\u90e8\u7f72\uff0c\u5b9e\u73b0\u9ad8\u53ef\u7528\u4e0e\u52a8\u6001\u6269\u5c55\u3002 \u8fd9\u4e9b\u5206\u6563\u7684\u6570\u636e\u53ef\u80fd\u6765\u81ea\u54ea\u4e9b\u5730\u65b9\u5462\uff1f \u9996\u5148\uff0c Prometheus \u4f1a\u5c06\u91c7\u96c6\u7684\u6570\u636e\u5b58\u5230\u672c\u673a\u78c1\u76d8\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u7528\u8fd9\u4e9b\u5206\u6563\u5728\u5404\u4e2a\u78c1\u76d8\u4e0a\u7684\u6570\u636e\uff0c \u53ef\u4ee5\u7ed9\u6bcf\u4e2a Prometheus \u9644\u5e26\u90e8\u7f72\u4e00\u4e2a Sidecar \uff0c\u8fd9\u4e2a Sidecar \u5b9e\u73b0 Thanos Store API \uff0c\u5f53 Thanos Query \u5bf9\u5176\u53d1\u8d77\u67e5\u8be2\u65f6\uff0c Sidecar \u5c31\u8bfb\u53d6\u8ddf\u5b83\u7ed1\u5b9a\u90e8\u7f72\u7684 Prometheus \u5b9e\u4f8b\u4e0a\u7684\u76d1\u63a7\u6570\u636e\u8fd4\u56de\u7ed9 Thanos Query \u3002 \u7531\u4e8e Thanos Query \u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u4e0e\u53bb\u91cd\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f88\u8f7b\u677e\u5b9e\u73b0\u9ad8\u53ef\u7528\uff1a\u76f8\u540c\u7684 Prometheus \u90e8\u7f72\u591a\u4e2a\u526f\u672c\uff08\u90fd\u9644\u5e26 Sidecar \uff09\uff0c \u7136\u540e Thanos Query \u53bb\u6240\u6709 Sidecar \u67e5\u6570\u636e\uff0c\u5373\u4fbf\u6709\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u6302\u6389\u8fc7\u4e00\u6bb5\u65f6\u95f4\uff0c\u6570\u636e\u805a\u5408\u4e0e\u53bb\u91cd\u540e\u4ecd\u7136\u80fd\u5f97\u5230\u5b8c\u6574\u6570\u636e\u3002 \u8fd9\u79cd\u9ad8\u53ef\u7528\u505a\u6cd5\u8fd8\u5f25\u8865\u4e86\u6211\u4eec\u4e0a\u7bc7\u6587\u7ae0\u4e2d\u7528 \u8d1f\u8f7d\u5747\u8861\u53bb\u5b9e\u73b0 Prometheus \u9ad8\u53ef\u7528\u65b9\u6cd5\u7684\u7f3a\u9677 \uff1a\u5982\u679c\u5176\u4e2d\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u6302\u4e86\u4e00\u6bb5\u65f6\u95f4\u7136\u540e\u53c8\u6062\u590d\u4e86\uff0c\u5b83\u7684\u6570\u636e\u5c31\u4e0d\u5b8c\u6574\uff0c\u5f53\u8d1f\u8f7d\u5747\u8861\u8f6c\u53d1\u5230\u5b83\u4e0a\u9762\u53bb\u67e5\u6570\u636e\u65f6\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u5c31\u53ef\u80fd\u4f1a\u6709\u90e8\u5206\u7f3a\u5931\u3002 \u4e0d\u8fc7\u56e0\u4e3a\u78c1\u76d8\u7a7a\u95f4\u6709\u9650\uff0c Prometheus \u5b58\u50a8\u76d1\u63a7\u6570\u636e\u7684\u80fd\u529b\u4e5f\u662f\u6709\u9650\u7684\uff0c\u901a\u5e38\u4f1a\u7ed9 Prometheus \u8bbe\u7f6e\u4e00\u4e2a\u6570\u636e\u8fc7\u671f\u65f6\u95f4\uff08\u9ed8\u8ba4 15 \u5929\uff09\u6216\u8005\u6700\u5927\u6570\u636e\u91cf\u5927\u5c0f\uff0c\u4e0d\u65ad\u6e05\u7406\u65e7\u6570\u636e\u4ee5\u4fdd\u8bc1\u78c1\u76d8\u4e0d\u88ab\u6491\u7206\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u65e0\u6cd5\u770b\u5230\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff0c\u6709\u65f6\u5019\u8fd9\u4e5f\u7ed9\u6211\u4eec\u7684\u95ee\u9898\u6392\u67e5\u548c\u6570\u636e\u7edf\u8ba1\u9020\u6210\u4e00\u4e9b\u56f0\u96be\u3002 \u5bf9\u4e8e\u9700\u8981\u957f\u671f\u5b58\u50a8\u7684\u6570\u636e\uff0c\u5e76\u4e14\u4f7f\u7528\u9891\u7387\u4e0d\u90a3\u4e48\u9ad8\uff0c\u6700\u7406\u60f3\u7684\u65b9\u5f0f\u662f\u5b58\u8fdb\u5bf9\u8c61\u5b58\u50a8\uff0c\u5404\u5927\u4e91\u5382\u5546\u90fd\u6709\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u7279\u70b9\u662f\u4e0d\u9650\u5236\u5bb9\u91cf\uff0c\u4ef7\u683c\u975e\u5e38\u4fbf\u5b9c\u3002 Thanos \u6709\u51e0\u4e2a\u7ec4\u4ef6\u90fd\u652f\u6301\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5404\u79cd\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58\uff08 Prometheus TSDB \u6570\u636e\u683c\u5f0f\uff09\uff0c\u6bd4\u5982\u6211\u4eec\u521a\u521a\u8bf4\u7684 Sidecar: Store Gateway \u90a3\u4e48\u8fd9\u4e9b\u88ab\u4e0a\u4f20\u5230\u4e86\u5bf9\u8c61\u5b58\u50a8\u91cc\u7684\u76d1\u63a7\u6570\u636e\u8be5\u5982\u4f55\u67e5\u8be2\u5462\uff1f\u7406\u8bba\u4e0a Thanos Query \u4e5f\u53ef\u4ee5\u76f4\u63a5\u53bb\u5bf9\u8c61\u5b58\u50a8\u67e5\uff0c\u4f46\u8fd9\u4f1a\u8ba9 Thanos Query \u7684\u903b\u8f91\u53d8\u7684\u5f88\u91cd\u3002 \u6211\u4eec\u521a\u624d\u4e5f\u770b\u5230\u4e86\uff0c Thanos \u62bd\u8c61\u51fa\u4e86 Store API \uff0c\u53ea\u8981\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u4f5c\u4e3a Thanos Query \u67e5\u8be2\u7684\u6570\u636e\u6e90\uff0c Thanos Store Gateway \u8fd9\u4e2a\u7ec4\u4ef6\u4e5f\u5b9e\u73b0\u4e86 Store API \uff0c\u5411 Thanos Query \u66b4\u9732\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e \u3002 Thanos Store Gateway \u5185\u90e8\u8fd8\u505a\u4e86\u4e00\u4e9b\u52a0\u901f\u6570\u636e\u83b7\u53d6\u7684\u4f18\u5316\u903b\u8f91\uff0c\u4e00\u662f\u7f13\u5b58\u4e86 TSDB \u7d22\u5f15\uff0c\u4e8c\u662f\u4f18\u5316\u4e86\u5bf9\u8c61\u5b58\u50a8\u7684\u8bf7\u6c42 (\u7528\u5c3d\u53ef\u80fd\u5c11\u7684\u8bf7\u6c42\u91cf\u62ff\u5230\u6240\u6709\u9700\u8981\u7684\u6570\u636e)\u3002 \u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u76d1\u63a7\u6570\u636e\u7684\u957f\u671f\u50a8\u5b58\uff0c\u7531\u4e8e\u5bf9\u8c61\u5b58\u50a8\u5bb9\u91cf\u65e0\u9650\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u6211\u4eec\u53ef\u4ee5\u5b58\u4efb\u610f\u65f6\u957f\u7684\u6570\u636e\uff0c\u76d1\u63a7\u5386\u53f2\u6570\u636e\u4e5f\u5c31\u53d8\u5f97\u53ef\u8ffd\u6eaf\u67e5\u8be2\uff0c\u4fbf\u4e8e\u95ee\u9898\u6392\u67e5\u4e0e\u7edf\u8ba1\u5206\u6790\u3002 Ruler \u6709\u4e00\u4e2a\u95ee\u9898\uff0c Prometheus \u4e0d\u4ec5\u4ec5\u53ea\u652f\u6301\u5c06\u91c7\u96c6\u7684\u6570\u636e\u8fdb\u884c\u5b58\u50a8\u548c\u67e5\u8be2\u7684\u529f\u80fd\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e9b rules : \u6839\u636e\u914d\u7f6e\u4e0d\u65ad\u8ba1\u7b97\u51fa\u65b0\u6307\u6807\u6570\u636e\u5e76\u5b58\u50a8\uff0c\u540e\u7eed\u67e5\u8be2\u65f6\u76f4\u63a5\u4f7f\u7528\u8ba1\u7b97\u597d\u7684\u65b0\u6307\u6807\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u8f7b\u67e5\u8be2\u65f6\u7684\u8ba1\u7b97\u538b\u529b\uff0c\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\u3002 \u4e0d\u65ad\u8ba1\u7b97\u548c\u8bc4\u4f30\u662f\u5426\u8fbe\u5230\u544a\u8b66\u9600\u503c\uff0c\u5f53\u8fbe\u5230\u9600\u503c\u65f6\u5c31\u901a\u77e5 AlertManager \u6765\u89e6\u53d1\u544a\u8b66\u3002 \u7531\u4e8e\u6211\u4eec\u5c06 Prometheus \u8fdb\u884c\u5206\u5e03\u5f0f\u90e8\u7f72\uff0c\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u672c\u5730\u5e76\u6ca1\u6709\u5b8c\u6574\u6570\u636e\uff0c\u6709\u4e9b\u6709\u5173\u8054\u7684\u6570\u636e\u53ef\u80fd\u5b58\u5728\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e2d\uff0c\u5355\u673a Prometheus \u770b\u4e0d\u5230\u6570\u636e\u7684\u5168\u5c40\u89c6\u56fe\uff0c\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5c31\u4e0d\u80fd\u4f9d\u8d56 Prometheus \u6765\u505a\u8fd9\u4e9b\u5de5\u4f5c\u3002 \u8fd9\u65f6\uff0c Thanos Ruler \u5c31\u80fd\u5927\u663e\u8eab\u624b\u4e86\u3002\u5b83\u901a\u8fc7\u67e5\u8be2 Thanos Query \u83b7\u53d6\u5168\u5c40\u6570\u636e\uff0c\u7136\u540e\u6839\u636e rules \u914d\u7f6e\u8ba1\u7b97\u65b0\u6307\u6807\u5e76\u5b58\u50a8\uff0c\u540c\u65f6\u4e5f\u901a\u8fc7 Store API \u5c06\u6570\u636e\u66b4\u9732\u7ed9 Thanos Query \uff0c\u540c\u6837\u8fd8\u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58 \uff08\u8fd9\u91cc\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u4e00\u6837\u4e5f\u662f\u901a\u8fc7 Thanos Store Gateway \u66b4\u9732\u7ed9 Thanos Query \uff09\u3002 \u770b\u8d77\u6765 Thanos Query \u8ddf Thanos Ruler \u4e4b\u95f4\u4f1a\u76f8\u4e92\u67e5\u8be2\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u4e0d\u51b2\u7a81\uff0c Thanos Ruler \u4e3a Thanos Query \u63d0\u4f9b\u8ba1\u7b97\u51fa\u7684\u65b0\u6307\u6807\u6570\u636e\uff0c\u800c Thanos Query \u4e3a Thanos Ruler \u63d0\u4f9b\u8ba1\u7b97\u65b0\u6307\u6807\u6240\u9700\u8981\u7684\u5168\u5c40\u539f\u59cb\u6307\u6807\u6570\u636e\u3002 \u81f3\u6b64\uff0c Thanos \u7684\u6838\u5fc3\u80fd\u529b\u57fa\u672c\u5b9e\u73b0\u4e86\uff0c\u5b8c\u5168\u517c\u5bb9 Prometheus \u60c5\u51b5\u4e0b\u63d0\u4f9b\u6570\u636e\u67e5\u8be2\u7684\u5168\u5c40\u89c6\u56fe\u3001\u9ad8\u53ef\u7528\u4ee5\u53ca\u6570\u636e\u7684\u957f\u671f\u4fdd\u5b58\u3002 \u90a3\u6211\u4eec\u8fd8\u53ef\u4ee5\u600e\u4e48\u8fdb\u4e00\u6b65\u505a\u4f18\u5316\u5462\uff1f Compact \u7531\u4e8e\u6211\u4eec\u6709\u6570\u636e\u957f\u671f\u5b58\u50a8\u7684\u80fd\u529b\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5b9e\u73b0\u67e5\u8be2\u8f83\u5927\u65f6\u95f4\u8303\u56f4\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5f53\u65f6\u95f4\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u67e5\u8be2\u7684\u6570\u636e\u91cf\u4e5f\u4f1a\u5f88\u5927\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u67e5\u8be2\u901f\u5ea6\u975e\u5e38\u6162\u3002 \u901a\u5e38\u5728\u67e5\u770b\u8f83\u5927\u65f6\u95f4\u8303\u56f4\u7684\u76d1\u63a7\u6570\u636e\u65f6\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u90a3\u4e48\u8be6\u7ec6\u7684\u6570\u636e\uff0c\u53ea\u9700\u8981\u770b\u5230\u5927\u81f4\u5c31\u884c\u3002\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u7528\u5230 Thanos Compact \uff0c\u5b83\u53ef\u4ee5\u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\uff0c\u5bf9\u5176\u8fdb\u884c\u538b\u7f29\u4ee5\u53ca\u964d\u91c7\u6837\u518d\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8 \uff0c\u8fd9\u6837\u5728\u67e5\u8be2\u5927\u65f6\u95f4\u8303\u56f4\u6570\u636e\u65f6\u5c31\u53ef\u4ee5\u53ea\u8bfb\u53d6\u538b\u7f29\u548c\u964d\u91c7\u6837\u540e\u7684\u6570\u636e\uff0c\u6781\u5927\u5730\u51cf\u5c11\u4e86\u67e5\u8be2\u7684\u6570\u636e\u91cf\uff0c\u4ece\u800c\u52a0\u901f\u67e5\u8be2 \u518d\u770b\u67b6\u6784\u56fe \u4e0a\u9762\u6211\u4eec\u5256\u6790\u4e86\u5b98\u65b9\u67b6\u6784\u56fe\u4e2d\u5404\u4e2a\u7ec4\u4ef6\u7684\u8bbe\u8ba1\uff0c\u73b0\u5728\u518d\u6765\u56de\u5473\u4e00\u4e0b\u8fd9\u5f20\u56fe\uff1a \u53e6\u5916\u8fd8\u6709 Thanos Bucket \u548c Thanos Checker \u4e24\u4e2a\u8f85\u52a9\u6027\u7684\u5de5\u5177\u7ec4\u4ef6\u6ca1\u753b\u51fa\u6765\uff0c\u5b83\u4eec\u4e0d\u662f\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8fd9\u91cc\u4e5f\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002","title":"3-2 \u673a\u6784\u8bbe\u8ba1\u5256\u6790"},{"location":"chap11/39Thanos_tutorial/#3-3-sidecae-receiver","text":"\u524d\u9762\u6211\u4eec\u7406\u89e3\u4e86\u5b98\u65b9\u7684\u67b6\u6784\u56fe\uff0c\u4f46\u5176\u4e2d\u8fd8\u7f3a\u5931\u4e00\u4e2a\u6838\u5fc3\u7ec4\u4ef6 Thanos Receiver\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u8fd8\u672a\u5b8c\u5168\u53d1\u5e03\u7684\u7ec4\u4ef6\u3002 \u8bbe\u8ba1\u6587\u6863: https://thanos.io/proposals/201812_thanos-remote-receive.md/ \u8fd9\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u5b8c\u5168\u6d88\u9664 Sidecar \uff0c\u6240\u4ee5 Thanos \u5b9e\u9645\u6709\u4e24\u79cd\u67b6\u6784\u56fe\uff0c\u53ea\u662f\u56e0\u4e3a\u6ca1\u6709\u5b8c\u5168\u53d1\u5e03\uff0c\u5b98\u65b9\u7684\u67b6\u6784\u56fe\u53ea\u7ed9\u7684 Sidecar \u6a21\u5f0f\u3002 Receiver \u662f\u505a\u4ec0\u4e48\u7684\u5462\uff1f\u4e3a\u4ec0\u4e48\u9700\u8981 Receiver \uff1f\u5b83\u8ddf Sidecar \u6709\u4ec0\u4e48\u533a\u522b\uff1f \u5b83\u4eec\u90fd\u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58\uff0c\u533a\u522b\u5728\u4e8e\u6700\u65b0\u6570\u636e\u7684\u5b58\u50a8\u3002 \u7531\u4e8e\u6570\u636e\u4e0a\u4f20\u4e0d\u53ef\u80fd\u5b9e\u65f6\uff0c Sidecar \u6a21\u5f0f\u5c06\u6700\u65b0\u7684\u76d1\u63a7\u6570\u636e\u5b58\u5230 Prometheus \u672c\u673a\uff0c Query \u901a\u8fc7\u8c03\u6240\u6709 Sidecar \u7684 Store API \u6765\u83b7\u53d6\u6700\u65b0\u6570\u636e\uff0c\u8fd9\u5c31\u6210\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c Sidecar \u6570\u91cf\u975e\u5e38\u591a\u6216\u8005 Sidecar \u8ddf Query \u79bb\u7684\u6bd4\u8f83\u8fdc\uff0c\u6bcf\u6b21\u67e5\u8be2 Query \u90fd\u8c03\u6240\u6709 Sideca r \u4f1a\u6d88\u8017\u5f88\u591a\u8d44\u6e90\uff0c\u5e76\u4e14\u901f\u5ea6\u5f88\u6162\uff0c\u800c\u6211\u4eec\u67e5\u770b\u76d1\u63a7\u5927\u591a\u6570\u60c5\u51b5\u90fd\u662f\u770b\u7684\u6700\u65b0\u6570\u636e\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c Thanos Receiver \u7ec4\u4ef6\u88ab\u63d0\u51fa\uff0c\u5b83\u9002\u914d\u4e86 Prometheus \u7684 remote write API \uff0c \u4e5f\u5c31\u662f\u6240\u6709 Prometheus \u5b9e\u4f8b\u53ef\u4ee5\u5b9e\u65f6\u5c06\u6570\u636e push \u5230 Thanos Receiver \uff0c\u6700\u65b0\u6570\u636e\u4e5f\u5f97\u4ee5\u96c6\u4e2d\u8d77\u6765\uff0c\u7136\u540e Thanos Query \u4e5f\u4e0d\u7528\u53bb\u6240\u6709 Sidecar \u67e5\u6700\u65b0\u6570\u636e\u4e86\uff0c\u76f4\u63a5\u67e5 Thanos Receiver \u5373\u53ef\u3002 \u53e6\u5916\uff0c Thanos Receiver \u4e5f\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58\uff0c\u5f53\u7136\uff0c\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u540c\u6837\u7531 Thanos Store Gateway \u66b4\u9732\u7ed9 Thanos Query \u3002 \u6709\u540c\u5b66\u53ef\u80fd\u4f1a\u95ee\uff1a \u5982\u679c\u89c4\u6a21\u5f88\u5927\uff0cReceiver \u538b\u529b\u4f1a\u4e0d\u4f1a\u5f88\u5927\uff0c\u6210\u4e3a\u6027\u80fd\u74f6\u9888\uff1f\u5f53\u7136\uff0c\u8bbe\u8ba1\u8005\u5728\u8bbe\u8ba1\u8fd9\u4e2a\u7ec4\u4ef6\u65f6\u80af\u5b9a\u4f1a\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0cReceiver \u5b9e\u73b0\u4e86\u4e00\u81f4\u6027\u54c8\u5e0c\uff0c\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\uff0c\u6240\u4ee5\u5373\u4f7f\u89c4\u6a21\u5f88\u5927\u4e5f\u4e0d\u4f1a\u6210\u4e3a\u6027\u80fd\u74f6\u9888\u3002","title":"3-3 Sidecae \u548c Receiver \u6a21\u5f0f"},{"location":"chap11/61thanos_sidecar_receiver/","text":"\u7b2c\u56db\u8282\uff082022\uff09\u5982\u4f55\u9009\u62e9 Thanos \u7684 Sidecar \u548c Receiver \u4e24\u79cd\u6a21\u5f0f\uff1f Prometheus \u65e0\u7591\u662f\u73b0\u5728\u6700\u70ed\u95e8\u7684\u76d1\u63a7\u7cfb\u7edf\uff0c\u5b83\u5df2\u88ab\u8bc1\u660e\u662f Kubernetes \u7cfb\u7edf\u4e2d\u76d1\u63a7\u548c\u62a5\u8b66\u7684\u9996\u9009\u89e3\u51b3\u65b9\u6848\uff0c\u4e0d\u8fc7\u867d\u7136 Prometheus \u6709\u4e00\u4e9b\u65b9\u6848\u6765\u5b9e\u73b0\u81ea\u8eab\u7684\u9ad8\u53ef\u7528\u6027\uff0c\u4f46\u5b83\u5728\u6570\u636e\u4fdd\u7559\u3001\u5386\u53f2\u6570\u636e\u68c0\u7d22\u548c\u591a\u79df\u6237\u65b9\u9762\u4e5f\u6709\u5176\u81ea\u8eab\u7684\u5c40\u9650\u6027\uff0c\u800c\u8fd9\u4e5f\u662f Thanos \u8bd5\u56fe\u53bb\u5f25\u8865 Prometheus \u4e0d\u8db3\u7684\u5730\u65b9\u3002 \u672c\u6587\u6211\u4eec\u5c06\u4ecb\u7ecd\u5728 Kubernetes \u73af\u5883\u4e2d\u96c6\u6210 Thanos \u548c Prometheus \u7684\u4e24\u79cd\u4e0d\u540c\u65b9\u6cd5\uff0c\u5e76\u5c06\u5bf9\u6bd4\u8fd9\u4e24\u79cd\u65b9\u5f0f\u7684\u5f02\u540c\u70b9\u3002 \u9664\u4e86 Thanos \u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a Cortex \u7684\u5f00\u6e90\u9879\u76ee\u4e5f\u662f\u4e00\u79cd\u6bd4\u8f83\u6d41\u884c\u7684\u89e3\u51b3 Prometheus \u4e0d\u8db3\u7684\u89e3\u51b3\u65b9\u6848\uff0cThanos \u6700\u521d\u53ea\u652f\u6301 sidecar \u7684\u5b89\u88c5\u6a21\u5f0f\uff0c\u800c Cortex \u66f4\u559c\u6b22\u57fa\u4e8e push \u6216\u8005\u8fdc\u7a0b\u5199\u7684\u65b9\u5f0f\u6765\u6536\u96c6\u6307\u6807\u6570\u636e\uff0c\u4f46\u65e9\u57282019\u5e74\uff0c\u8fd9\u4e24\u4e2a\u9879\u76ee\u5176\u5b9e\u5c31\u8fdb\u884c\u4e86\u5408\u4f5c\uff0c\u5728\u4e92\u76f8\u5b66\u4e60\u4e4b\u540e\uff0cThanos \u5f15\u5165\u4e86 Receiver \u7ec4\u4ef6\uff0c\u800c Cortex \u7684\u5757\u5b58\u50a8\u5219\u4e5f\u6784\u5efa\u5728\u4e86\u51e0\u4e2a\u6838\u5fc3\u7684 Thanos \u7ec4\u4ef6\u4e4b\u4e0a\u3002 1 Thanos Thanos \u652f\u6301\u4e24\u79cd\u65b9\u5f0f\u4e0e Prometheus \u8fdb\u884c\u96c6\u6210\uff1a sidecar / receiver Thanos \u4e2d\u5177\u6709\u4ee5\u4e0b\u51e0\u4e2a\u901a\u7528\u7684\u7ec4\u4ef6\uff1a Querier / Store / Compactor / Ruler \u53e6\u5916 Sidecar \u548c Receiver \u4e5f\u662f Thanos \u7684\u91cd\u8981\u7ec4\u4ef6\uff0c\u4ed6\u4eec\u6709\u5404\u81ea\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5728\u6bd4\u8f83\u8fd9\u4e24\u79cd\u65b9\u5f0f\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u7b80\u5355\u4e86\u89e3\u4e0b Sidecar \u548c Receiver \u7684\u5de5\u4f5c\u539f\u7406\u3002 1-1 Thanos Sidecar \u5de5\u4f5c\u539f\u7406 Thanos Sidecar \u7ec4\u4ef6\u987e\u540d\u601d\u4e49\u662f\u5728 Prometheus \u670d\u52a1\u7684 Pod \u4e2d\u4f5c\u4e3a sidecar \u8fd0\u884c\u7684\uff0c\u65e0\u8bba\u662f\u666e\u901a Prometheus \u8fd8\u662f\u7531 Prometheus Operator \u7ba1\u7406\u7684 Prometheus\uff0c\u90fd\u662f\u5982\u6b64\uff0c\u8be5\u7ec4\u4ef6\u8d1f\u8d23\u5c06\u6570\u636e\uff08\u4ece Prometheus TSDB\uff09\u4f20\u9012\u5230\u5bf9\u8c61\u5b58\u50a8\u4e2d\u3002 \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4e3a\u4e86\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\uff0c \u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e0e Sidecar \u7ec4\u4ef6\u4e00\u8d77\u8fd0\u884c\uff0c\u8fd9\u4e9b Prometheus \u5b9e\u4f8b\u90fd\u4ece\u76ee\u6807\u4e0a\u72ec\u7acb\u6293\u53d6\u6307\u6807\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6293\u53d6\u7684 TSDB \u5757\u6570\u636e\u5757\u88ab\u5b58\u50a8\u5728 Prometheus \u63d0\u4f9b\u7684\u6301\u4e45\u5316\u5377\u4e2d \u3002 \u6b64\u5916 Sidecar \u5728 Prometheus \u7684\u8fdc\u7a0b\u8bfb API \u4e4b\u4e0a\u5b9e\u73b0\u4e86 Thanos \u7684 Store API \uff0c\u4ece\u800c\u53ef\u4ee5\u4ece Thanos Querier \u7ec4\u4ef6\u4e2d\u53bb\u67e5\u8be2 Prometheus \u4e2d\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e \uff0c \u6b64\u5916\uff0cSidecar \u8fd8\u53ef\u4ee5\u914d\u7f6e\u4e3a\u6bcf\u9694\u4e24\u5c0f\u65f6\u5c06 TSDB \u5757\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u6bcf\u4e24\u5c0f\u65f6\u521b\u5efa\u4e00\u6b21\u5757\uff0c\u5b58\u50a8\u5728 Bucket \u6876\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u4f7f\u7528 Thanos Store \u7ec4\u4ef6\u8fdb\u884c\u67e5\u8be2\uff0c\u8fd9\u540c\u6837\u5b9e\u73b0\u4e86 Store API\uff0c\u90fd\u53ef\u4ee5\u88ab Thanos Querier \u53d1\u73b0\u3002 1-2 Thanos Receiver \u5de5\u4f5c\u539f\u7406 \u4e0e Sidecar \u4e0d\u540c\uff0cReceiver \u662f\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684 StatefulSet \u6765\u8fd0\u884c\u7684\uff0c\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0cThanos \u7684\u6240\u6709\u5176\u4ed6\u7ec4\u4ef6\u90fd\u4ee5\u4e0e Sidecar \u65b9\u5f0f\u76f8\u540c\u7684\u65b9\u5f0f\u5b58\u5728\u548c\u8fd0\u884c\uff0c \u4f46 Receiver \u53d6\u4ee3\u4e86 Sidecar \u7ec4\u4ef6\uff0cTSDB \u7684\u67e5\u8be2\u548c\u4f20\u8f93\u5230\u5bf9\u8c61\u5b58\u50a8\u7684\u65b9\u5f0f\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316 Receiver \u7ec4\u4ef6\u5b9e\u73b0\u4e86 Prometheus \u7684\u8fdc\u7a0b\u5199 API\uff0c\u76f4\u63a5\u63a5\u6536 Prometheus \u7684\u6570\u636e\uff0cReceiver \u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8 Bucket \u4e2d\u53bb\uff0c\u5e76\u4e14\u4e5f\u6709\u81ea\u5df1\u7684\u4fdd\u7559\u671f\uff0cQuerier \u88ab\u914d\u7f6e\u4e3a\u901a\u8fc7 Store \u67e5\u8be2 Receiver \u548c\u5b58\u50a8\u6876\u4e0a\u7684\u6570\u636e\u3002 2 Sidecar \u548c Receiver \u5bf9\u6bd4 \u63a5\u4e0b\u6765\u6211\u4eec\u5728\u9ad8\u53ef\u7528\u6027\u3001\u4e0e Prometheus \u96c6\u6210\u3001\u5b58\u50a8\u548c\u6570\u636e\u91c7\u96c6\u7b49\u65b9\u9762\u6765\u5168\u9762\u6bd4\u8f83\u4e0b Thanos Sidecar \u548c Receiver \u6a21\u5f0f\u7684\u5f02\u540c\u70b9\u3002 \u9ad8\u53ef\u7528\u6027 2-1 Sidecar \u9ad8\u53ef\u7528\u662f\u901a\u8fc7\u5c06 Sidecar \u5bb9\u5668\u4e0e Prometheus \u5b9e\u4f8b\u7684\u6bcf\u4e2a\u526f\u672c\u96c6\u6210\u5728\u4e00\u8d77\u6765\u5b9e\u73b0\u7684\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u5355\u72ec\u7684\u6293\u53d6\u76ee\u6807\uff0cSidecar \u5c06 TSDB \u5757\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u3002 Prometheus \u6bcf\u4e24\u5c0f\u65f6\u5199\u4e00\u4e2a TSDB \u5757\uff0c\u8003\u8651\u5230\u6709\u591a\u4e2a Prometheus \u526f\u672c\uff0c\u5176\u4e2d\u4e00\u4e2a\u53d1\u751f\u6545\u969c\uff0c\u6700\u65b0\u7684\u5757\u5c06\u4e22\u5931\uff0c\u5728\u7279\u5b9a\u7684 Prometheus \u5b9e\u4f8b\u7684\u56fe\u8868\u4e2d\u4f1a\u663e\u793a\u4e00\u4e2a\u7a7a\u767d\u51fa\u6765\uff0c\u4f46\u7531\u4e8e\u6709\u4e24\u4e2a\u526f\u672c\uff0c\u8fd9\u4e2a\u7a7a\u767d\u4f1a\u88ab\u53e6\u4e00\u4e2a\u5b9e\u4f8b\u7684\u5757\u6570\u636e\u586b\u8865\uff0cThanos Querier \u7ec4\u4ef6\u8d1f\u8d23\u586b\u8865\u8fd9\u4e9b\u7a7a\u767d\u548c\u91cd\u590d\u7684\u6570\u636e\u53bb\u91cd\u3002 2-2 Receiver \u4e0e Sidecar \u7c7b\u4f3c\uff0c\u591a\u4e2a Prometheus \u5b9e\u4f8b\u88ab\u90e8\u7f72\u6765\u6293\u53d6\u76f8\u540c\u7684\u76ee\u6807\uff0c \u5e76\u88ab\u914d\u7f6e\u4e3a\u8fdc\u7a0b\u5199\u5165 Receiver StatefulSet \uff0c\u5728\u8fd9\u91cc\uff0c\u4e0d\u4ec5\u662f Prometheus \u526f\u672c\uff0cReceiver \u526f\u672c\u4e5f\u5728 HA \u4e2d\u53d1\u6325\u4e86\u91cd\u8981\u4f5c\u7528\u3002 \u9664\u6b64\u4ee5\u5916\uff0cReceiver \u8fd8\u652f\u6301\u591a\u79df\u6237\uff0c\u6bd4\u5982\u8bbe\u7f6e factor=2\uff0c \u8fd9\u5c06\u786e\u4fdd\u4f20\u5165\u7684\u6570\u636e\u5728\u4e24\u4e2a Receiver pod \u4e4b\u95f4\u8fdb\u884c\u590d\u5236\u3002\u5355\u4e2a Prometheus \u5b9e\u4f8b\u7684\u6545\u969c\u7531\u53e6\u4e00\u4e2a\u5b9e\u4f8b\u8986\u76d6\uff0c\u56e0\u4e3a\u4e24\u8005\u90fd\u662f\u8fdc\u7a0b\u5199\u5165Receiver \u7684\uff0c\u7531\u4e8e\u590d\u5236\u7cfb\u6570\u4e3a2\uff0c\u5355\u4e2a Receiver pod \u7684\u6545\u969c\u4f1a\u7531\u5176\u4ed6\u7684\u6765\u8865\u507f \u3002 \u4e0e Prometheus \u96c6\u6210 Sidecar \u53ea\u9700\u5728 Prometheus \u5b9e\u4f8b pod \u4e2d\u7b80\u5355\u5730\u6dfb\u52a0\u4e00\u4e2a sidecar \u5bb9\u5668\uff0c\u6240\u6709\u5176\u4ed6 Thanos \u7ec4\u4ef6\u5c31\u53ef\u4ee5\u548c\u5b83\u4e00\u8d77\u5de5\u4f5c\u4e86\uff0cSidecar \u53ef\u4ee5\u9009\u62e9\u6bcf\u4e24\u5c0f\u65f6\u5c06\u4e00\u4e2a TSDB \u5757\u5199\u5165\u5bf9\u8c61\u5b58\u50a8\uff0c\u53e6\u5916\u53ea\u9700\u5c06 Sidecar \u4f5c\u4e3a\u670d\u52a1\u66b4\u9732\u7ed9 Thanos Querier \u7ec4\u4ef6\uff0c\u5b58\u50a8\u5728\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u4f1a\u901a\u8fc7 Store \u7ec4\u4ef6\u66b4\u9732\u3002\u56e0\u6b64\uff0c\u96c6\u6210 Sidecar \u975e\u5e38\u7b80\u5355\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u573a\u666f\u3002 Receiver Receiver \u6a21\u5f0f\u9700\u8981\u66f4\u6539 Prometheus \u5b9e\u4f8b\u7684\u914d\u7f6e\uff0c\u5c06 TSDB \u8fdc\u7a0b\u5199\u5165 Receiver\uff0c\u540c\u65f6\u90e8\u7f72\u4e00\u4e2a\u989d\u5916\u7684 Receiver StatefulSet\u3002 Receiver \u5c06 TSDB \u4fdd\u7559\u5728\u672c\u5730\u5b58\u50a8\u4e2d\uff0c\u8981\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u548c\u6570\u636e\u590d\u5236\u9700\u8981\u8fd0\u884c\u591a\u4e2a Receiver \u5b9e\u4f8b\u4f5c\u4e3a\u54c8\u5e0c\u73af\u7684\u4e00\u90e8\u5206\uff0c\u9700\u8981\u5bf9\u54c8\u5e0c\u73af\u8fdb\u884c\u914d\u7f6e\uff0c\u4f7f HTTP \u8bf7\u6c42\u4e2d\u7684\u79df\u6237 Header \u53ef\u4ee5\u5339\u914d\u4e13\u5c5e\u7684 Receiver \u7aef\u70b9\uff0c\u6574\u5408 Receiver \u662f\u4e00\u9879\u590d\u6742\u800c\u7e41\u7410\u7684\u4efb\u52a1\u3002 \u5b58\u50a8 Sidecar Sidecar \u4ece Prometheus \u7684\u672c\u5730\u5b58\u50a8\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u56e0\u6b64 TSDB \u4e0d\u9700\u8981\u989d\u5916\u7684\u672c\u5730\u5b58\u50a8 \u3002 \u6b64\u5916\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5927\u5927\u51cf\u5c11 TSDB \u5728 Prometheus \u672c\u5730\u5b58\u50a8\u4e2d\u7684\u4fdd\u7559\u65f6\u95f4\uff0c\u56e0\u4e3a\u5b83\u6bcf\u4e24\u5c0f\u65f6\u4e0a\u4f20\u4e00\u6b21\uff0c\u540c\u65f6\u5b83\u4eec\u7684\u5386\u53f2\u6570\u636e\u901a\u8fc7\u5bf9\u8c61\u5b58\u50a8\u53d8\u5f97\u6301\u4e45\u548c\u53ef\u67e5\u8be2\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPrometheus \u5b58\u50a8\u7684\u6570\u636e\u4e3a15\u5929\uff0c\u5728\u76d1\u63a7\u4e00\u4e2a\u5927\u89c4\u6a21\u751f\u4ea7\u96c6\u7fa4\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u9700\u8981\u76f8\u5f53\u5927\u7684\u672c\u5730\u5b58\u50a8\uff0c\u800c\u4e14\u672c\u5730\u5b58\u50a8\u6bd4\u5bf9\u8c61\u5b58\u50a8\u8981\u6602\u8d35\u5f97\u591a \u3002\u7531\u4e8e Sidecar \u6bcf2\u5c0f\u65f6\u5c06 Prometheus \u7684\u6307\u6807\u5bfc\u51fa\u5230\u5b58\u50a8\u6876\u4e2d\uff0c\u5b83\u4f7f Prometheus \u66f4\u63a5\u8fd1\u4e8e\u65e0\u72b6\u6001\u3002\u867d\u7136\u5728 Thanos \u6587\u6863\u4e2d\uff0c\u5efa\u8bae Prometheus \u7684\u4fdd\u7559\u65f6\u95f4\u4e0d\u8981\u4f4e\u4e8e\u6700\u5c0f\u5757\u6301\u7eed\u65f6\u95f4\u76843\u500d\uff0c\u6240\u4ee5\u5b83\u53d8\u6210\u4e866\u5c0f\u65f6 \u3002 Receiver Receiver \u662f\u4e00\u4e2a StatefulSet\uff0c\u9700\u8981\u4f7f\u7528 PV\uff0c\u9700\u8981\u7684\u672c\u5730\u5b58\u50a8\u5bb9\u91cf\u53d6\u51b3\u4e8e --receive.replication-factor \u3001 --tsdb.retention \u8fd9\u4e24\u4e2a\u53c2\u6570\u4ee5\u53capod \u526f\u672c\u6570\uff0cTSDB \u4fdd\u7559\u8d8a\u9ad8\uff0c\u5f53\u7136\u5c31\u4f1a\u4f7f\u7528\u66f4\u591a\u7684\u672c\u5730\u5b58\u50a8\uff0c\u7531\u4e8e\u6570\u636e\u88ab\u6301\u7eed\u5199\u5165 Receiver\uff0c\u56e0\u6b64 Prometheus \u672c\u5730\u7684\u6570\u636e\u4fdd\u7559\u53ef\u4ee5\u4fdd\u6301\u5728\u6700\u5c0f\u503c\u3002\u4e0e Sidecar \u76f8\u6bd4\uff0c\u8fd9\u79cd\u65b9\u6848\u9700\u8981\u66f4\u591a\u7684\u672c\u5730\u5b58\u50a8\u3002 \u6570\u636e\u91c7\u96c6 Sidecar \u5728\u8fd9\u91cc\uff0cTSDB \u5757\u662f\u4ece Prometheus \u5b9e\u4f8b\u7684\u672c\u5730\u5b58\u50a8\u4e2d\u8bfb\u53d6\u7684\uff0c\u8981\u4e48\u63d0\u4f9b\u7ed9 Querier \u8fdb\u884c\u67e5\u8be2\uff0c\u8981\u4e48\u5bfc\u51fa\u5230\u5bf9\u8c61\u5b58\u50a8\u4e2d\u3002Sidecar \u4ee5 pull \u7684\u6a21\u5f0f\u4e0a\u8fd0\u884c\uff08Thanos Querier \u5728\u67e5\u8be2\u65f6\u4ece Prometheus \u62c9\u53d6\u5e8f\u5217\u6570\u636e\uff09\uff0c\u6570\u636e\u4e0d\u4f1a\u4e0d\u65ad\u5730\u5199\u5165\u5176\u4ed6\u5b9e\u4f8b\u4e2d\u3002 Receiver Receiver \u5219\u662f\u57fa\u4e8e push \u7684\u6a21\u5f0f\uff0cTSDB \u7531 Prometheus \u5b9e\u4f8b\u672c\u8eab\u8fdc\u7a0b\u5199\u5165\u5230 Receiver\uff0c\u4ece\u800c\u4f7f Prometheus \u6700\u63a5\u8fd1\u65e0\u72b6\u6001\u3002\u7136\u540e\u6570\u636e\u4ece Receiver \u8fdb\u4e00\u6b65\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u3002 3 \u7ed3\u8bba \u9009\u62e9\u54ea\u79cd\u65b9\u6848\u5b8c\u5168\u53d6\u51b3\u4e8e\u8981\u5b9e\u73b0\u7684 Prometheus HA \u548c\u591a\u79df\u6237\u7684\u73af\u5883\u3002\u5728\u9700\u8981\u4e3a\u5355\u4e2a\u96c6\u7fa4\u5b9e\u73b0 Prometheus HA \u6216\u4f7f\u7528 Prometheus Operator \u8fdb\u884c\u7279\u5b9a\u5e94\u7528\u7a0b\u5e8f\u76d1\u63a7\u7684\u60c5\u51b5\u4e0b\uff0cSidecar \u4f3c\u4e4e\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u6613\u4e8e\u64cd\u4f5c\u548c\u96c6\u6210\u8f7b\u91cf\u3002 Sidecar \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5206\u5c42\u7684 Thanos Querier \u65b9\u6cd5\u7528\u4e8e\u591a\u79df\u6237 \u3002 \u800c\u5982\u679c\u9700\u8981\u5bf9\u591a\u79df\u6237\u8fdb\u884c\u66f4\u96c6\u4e2d\u7684\u67e5\u770b\uff0c\u6216\u8005\u5728\u53ea\u6709\u51fa\u6d41\u91cf\u7684\u7f51\u7edc\u73af\u5883\u4e2d\uff0c\u5219\u53ef\u4ee5\u5728\u8003\u8651\u63a8\u9001\u6307\u6807\u65b9\u5f0f\u540e\u4f7f\u7528 Receiver\uff0c\u4e0d\u5efa\u8bae\u901a\u8fc7 Receiver \u5b9e\u73b0\u5355\u79df\u6237\u7684\u5168\u5c40\u89c6\u56fe\u3002\u5f53\u8bd5\u56fe\u5b9e\u73b0\u5177\u6709\u4e0d\u540c\u73af\u5883\u9650\u5236\u7684\u591a\u4e2a\u79df\u6237\u7684\u5168\u5c40\u89c6\u56fe\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528\u540c\u65f6\u4f7f\u7528 Sidecar \u548c Receiver \u7684\u6df7\u5408\u65b9\u6cd5","title":"\u7b2c\u56db\u8282\uff082022\uff09\u5982\u4f55\u9009\u62e9Thanos\u7684Sidecar\u548cReceiver\u4e24\u79cd\u6a21\u5f0f\uff1f"},{"location":"chap11/61thanos_sidecar_receiver/#2022-thanos-sidecar-receiver","text":"Prometheus \u65e0\u7591\u662f\u73b0\u5728\u6700\u70ed\u95e8\u7684\u76d1\u63a7\u7cfb\u7edf\uff0c\u5b83\u5df2\u88ab\u8bc1\u660e\u662f Kubernetes \u7cfb\u7edf\u4e2d\u76d1\u63a7\u548c\u62a5\u8b66\u7684\u9996\u9009\u89e3\u51b3\u65b9\u6848\uff0c\u4e0d\u8fc7\u867d\u7136 Prometheus \u6709\u4e00\u4e9b\u65b9\u6848\u6765\u5b9e\u73b0\u81ea\u8eab\u7684\u9ad8\u53ef\u7528\u6027\uff0c\u4f46\u5b83\u5728\u6570\u636e\u4fdd\u7559\u3001\u5386\u53f2\u6570\u636e\u68c0\u7d22\u548c\u591a\u79df\u6237\u65b9\u9762\u4e5f\u6709\u5176\u81ea\u8eab\u7684\u5c40\u9650\u6027\uff0c\u800c\u8fd9\u4e5f\u662f Thanos \u8bd5\u56fe\u53bb\u5f25\u8865 Prometheus \u4e0d\u8db3\u7684\u5730\u65b9\u3002 \u672c\u6587\u6211\u4eec\u5c06\u4ecb\u7ecd\u5728 Kubernetes \u73af\u5883\u4e2d\u96c6\u6210 Thanos \u548c Prometheus \u7684\u4e24\u79cd\u4e0d\u540c\u65b9\u6cd5\uff0c\u5e76\u5c06\u5bf9\u6bd4\u8fd9\u4e24\u79cd\u65b9\u5f0f\u7684\u5f02\u540c\u70b9\u3002 \u9664\u4e86 Thanos \u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a Cortex \u7684\u5f00\u6e90\u9879\u76ee\u4e5f\u662f\u4e00\u79cd\u6bd4\u8f83\u6d41\u884c\u7684\u89e3\u51b3 Prometheus \u4e0d\u8db3\u7684\u89e3\u51b3\u65b9\u6848\uff0cThanos \u6700\u521d\u53ea\u652f\u6301 sidecar \u7684\u5b89\u88c5\u6a21\u5f0f\uff0c\u800c Cortex \u66f4\u559c\u6b22\u57fa\u4e8e push \u6216\u8005\u8fdc\u7a0b\u5199\u7684\u65b9\u5f0f\u6765\u6536\u96c6\u6307\u6807\u6570\u636e\uff0c\u4f46\u65e9\u57282019\u5e74\uff0c\u8fd9\u4e24\u4e2a\u9879\u76ee\u5176\u5b9e\u5c31\u8fdb\u884c\u4e86\u5408\u4f5c\uff0c\u5728\u4e92\u76f8\u5b66\u4e60\u4e4b\u540e\uff0cThanos \u5f15\u5165\u4e86 Receiver \u7ec4\u4ef6\uff0c\u800c Cortex \u7684\u5757\u5b58\u50a8\u5219\u4e5f\u6784\u5efa\u5728\u4e86\u51e0\u4e2a\u6838\u5fc3\u7684 Thanos \u7ec4\u4ef6\u4e4b\u4e0a\u3002","title":"\u7b2c\u56db\u8282\uff082022\uff09\u5982\u4f55\u9009\u62e9 Thanos \u7684 Sidecar \u548c Receiver \u4e24\u79cd\u6a21\u5f0f\uff1f"},{"location":"chap11/61thanos_sidecar_receiver/#1-thanos","text":"Thanos \u652f\u6301\u4e24\u79cd\u65b9\u5f0f\u4e0e Prometheus \u8fdb\u884c\u96c6\u6210\uff1a sidecar / receiver Thanos \u4e2d\u5177\u6709\u4ee5\u4e0b\u51e0\u4e2a\u901a\u7528\u7684\u7ec4\u4ef6\uff1a Querier / Store / Compactor / Ruler \u53e6\u5916 Sidecar \u548c Receiver \u4e5f\u662f Thanos \u7684\u91cd\u8981\u7ec4\u4ef6\uff0c\u4ed6\u4eec\u6709\u5404\u81ea\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5728\u6bd4\u8f83\u8fd9\u4e24\u79cd\u65b9\u5f0f\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u7b80\u5355\u4e86\u89e3\u4e0b Sidecar \u548c Receiver \u7684\u5de5\u4f5c\u539f\u7406\u3002","title":"1 Thanos"},{"location":"chap11/61thanos_sidecar_receiver/#1-1-thanos-sidecar","text":"Thanos Sidecar \u7ec4\u4ef6\u987e\u540d\u601d\u4e49\u662f\u5728 Prometheus \u670d\u52a1\u7684 Pod \u4e2d\u4f5c\u4e3a sidecar \u8fd0\u884c\u7684\uff0c\u65e0\u8bba\u662f\u666e\u901a Prometheus \u8fd8\u662f\u7531 Prometheus Operator \u7ba1\u7406\u7684 Prometheus\uff0c\u90fd\u662f\u5982\u6b64\uff0c\u8be5\u7ec4\u4ef6\u8d1f\u8d23\u5c06\u6570\u636e\uff08\u4ece Prometheus TSDB\uff09\u4f20\u9012\u5230\u5bf9\u8c61\u5b58\u50a8\u4e2d\u3002 \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4e3a\u4e86\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\uff0c \u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e0e Sidecar \u7ec4\u4ef6\u4e00\u8d77\u8fd0\u884c\uff0c\u8fd9\u4e9b Prometheus \u5b9e\u4f8b\u90fd\u4ece\u76ee\u6807\u4e0a\u72ec\u7acb\u6293\u53d6\u6307\u6807\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6293\u53d6\u7684 TSDB \u5757\u6570\u636e\u5757\u88ab\u5b58\u50a8\u5728 Prometheus \u63d0\u4f9b\u7684\u6301\u4e45\u5316\u5377\u4e2d \u3002 \u6b64\u5916 Sidecar \u5728 Prometheus \u7684\u8fdc\u7a0b\u8bfb API \u4e4b\u4e0a\u5b9e\u73b0\u4e86 Thanos \u7684 Store API \uff0c\u4ece\u800c\u53ef\u4ee5\u4ece Thanos Querier \u7ec4\u4ef6\u4e2d\u53bb\u67e5\u8be2 Prometheus \u4e2d\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e \uff0c \u6b64\u5916\uff0cSidecar \u8fd8\u53ef\u4ee5\u914d\u7f6e\u4e3a\u6bcf\u9694\u4e24\u5c0f\u65f6\u5c06 TSDB \u5757\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u6bcf\u4e24\u5c0f\u65f6\u521b\u5efa\u4e00\u6b21\u5757\uff0c\u5b58\u50a8\u5728 Bucket \u6876\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u4f7f\u7528 Thanos Store \u7ec4\u4ef6\u8fdb\u884c\u67e5\u8be2\uff0c\u8fd9\u540c\u6837\u5b9e\u73b0\u4e86 Store API\uff0c\u90fd\u53ef\u4ee5\u88ab Thanos Querier \u53d1\u73b0\u3002","title":"1-1 Thanos Sidecar \u5de5\u4f5c\u539f\u7406"},{"location":"chap11/61thanos_sidecar_receiver/#1-2-thanos-receiver","text":"\u4e0e Sidecar \u4e0d\u540c\uff0cReceiver \u662f\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684 StatefulSet \u6765\u8fd0\u884c\u7684\uff0c\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0cThanos \u7684\u6240\u6709\u5176\u4ed6\u7ec4\u4ef6\u90fd\u4ee5\u4e0e Sidecar \u65b9\u5f0f\u76f8\u540c\u7684\u65b9\u5f0f\u5b58\u5728\u548c\u8fd0\u884c\uff0c \u4f46 Receiver \u53d6\u4ee3\u4e86 Sidecar \u7ec4\u4ef6\uff0cTSDB \u7684\u67e5\u8be2\u548c\u4f20\u8f93\u5230\u5bf9\u8c61\u5b58\u50a8\u7684\u65b9\u5f0f\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316 Receiver \u7ec4\u4ef6\u5b9e\u73b0\u4e86 Prometheus \u7684\u8fdc\u7a0b\u5199 API\uff0c\u76f4\u63a5\u63a5\u6536 Prometheus \u7684\u6570\u636e\uff0cReceiver \u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8 Bucket \u4e2d\u53bb\uff0c\u5e76\u4e14\u4e5f\u6709\u81ea\u5df1\u7684\u4fdd\u7559\u671f\uff0cQuerier \u88ab\u914d\u7f6e\u4e3a\u901a\u8fc7 Store \u67e5\u8be2 Receiver \u548c\u5b58\u50a8\u6876\u4e0a\u7684\u6570\u636e\u3002","title":"1-2 Thanos Receiver \u5de5\u4f5c\u539f\u7406"},{"location":"chap11/61thanos_sidecar_receiver/#2-sidecar-receiver","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u9ad8\u53ef\u7528\u6027\u3001\u4e0e Prometheus \u96c6\u6210\u3001\u5b58\u50a8\u548c\u6570\u636e\u91c7\u96c6\u7b49\u65b9\u9762\u6765\u5168\u9762\u6bd4\u8f83\u4e0b Thanos Sidecar \u548c Receiver \u6a21\u5f0f\u7684\u5f02\u540c\u70b9\u3002 \u9ad8\u53ef\u7528\u6027","title":"2 Sidecar \u548c Receiver \u5bf9\u6bd4"},{"location":"chap11/61thanos_sidecar_receiver/#2-1-sidecar","text":"\u9ad8\u53ef\u7528\u662f\u901a\u8fc7\u5c06 Sidecar \u5bb9\u5668\u4e0e Prometheus \u5b9e\u4f8b\u7684\u6bcf\u4e2a\u526f\u672c\u96c6\u6210\u5728\u4e00\u8d77\u6765\u5b9e\u73b0\u7684\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u5355\u72ec\u7684\u6293\u53d6\u76ee\u6807\uff0cSidecar \u5c06 TSDB \u5757\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u3002 Prometheus \u6bcf\u4e24\u5c0f\u65f6\u5199\u4e00\u4e2a TSDB \u5757\uff0c\u8003\u8651\u5230\u6709\u591a\u4e2a Prometheus \u526f\u672c\uff0c\u5176\u4e2d\u4e00\u4e2a\u53d1\u751f\u6545\u969c\uff0c\u6700\u65b0\u7684\u5757\u5c06\u4e22\u5931\uff0c\u5728\u7279\u5b9a\u7684 Prometheus \u5b9e\u4f8b\u7684\u56fe\u8868\u4e2d\u4f1a\u663e\u793a\u4e00\u4e2a\u7a7a\u767d\u51fa\u6765\uff0c\u4f46\u7531\u4e8e\u6709\u4e24\u4e2a\u526f\u672c\uff0c\u8fd9\u4e2a\u7a7a\u767d\u4f1a\u88ab\u53e6\u4e00\u4e2a\u5b9e\u4f8b\u7684\u5757\u6570\u636e\u586b\u8865\uff0cThanos Querier \u7ec4\u4ef6\u8d1f\u8d23\u586b\u8865\u8fd9\u4e9b\u7a7a\u767d\u548c\u91cd\u590d\u7684\u6570\u636e\u53bb\u91cd\u3002","title":"2-1 Sidecar"},{"location":"chap11/61thanos_sidecar_receiver/#2-2-receiver","text":"\u4e0e Sidecar \u7c7b\u4f3c\uff0c\u591a\u4e2a Prometheus \u5b9e\u4f8b\u88ab\u90e8\u7f72\u6765\u6293\u53d6\u76f8\u540c\u7684\u76ee\u6807\uff0c \u5e76\u88ab\u914d\u7f6e\u4e3a\u8fdc\u7a0b\u5199\u5165 Receiver StatefulSet \uff0c\u5728\u8fd9\u91cc\uff0c\u4e0d\u4ec5\u662f Prometheus \u526f\u672c\uff0cReceiver \u526f\u672c\u4e5f\u5728 HA \u4e2d\u53d1\u6325\u4e86\u91cd\u8981\u4f5c\u7528\u3002 \u9664\u6b64\u4ee5\u5916\uff0cReceiver \u8fd8\u652f\u6301\u591a\u79df\u6237\uff0c\u6bd4\u5982\u8bbe\u7f6e factor=2\uff0c \u8fd9\u5c06\u786e\u4fdd\u4f20\u5165\u7684\u6570\u636e\u5728\u4e24\u4e2a Receiver pod \u4e4b\u95f4\u8fdb\u884c\u590d\u5236\u3002\u5355\u4e2a Prometheus \u5b9e\u4f8b\u7684\u6545\u969c\u7531\u53e6\u4e00\u4e2a\u5b9e\u4f8b\u8986\u76d6\uff0c\u56e0\u4e3a\u4e24\u8005\u90fd\u662f\u8fdc\u7a0b\u5199\u5165Receiver \u7684\uff0c\u7531\u4e8e\u590d\u5236\u7cfb\u6570\u4e3a2\uff0c\u5355\u4e2a Receiver pod \u7684\u6545\u969c\u4f1a\u7531\u5176\u4ed6\u7684\u6765\u8865\u507f \u3002 \u4e0e Prometheus \u96c6\u6210 Sidecar \u53ea\u9700\u5728 Prometheus \u5b9e\u4f8b pod \u4e2d\u7b80\u5355\u5730\u6dfb\u52a0\u4e00\u4e2a sidecar \u5bb9\u5668\uff0c\u6240\u6709\u5176\u4ed6 Thanos \u7ec4\u4ef6\u5c31\u53ef\u4ee5\u548c\u5b83\u4e00\u8d77\u5de5\u4f5c\u4e86\uff0cSidecar \u53ef\u4ee5\u9009\u62e9\u6bcf\u4e24\u5c0f\u65f6\u5c06\u4e00\u4e2a TSDB \u5757\u5199\u5165\u5bf9\u8c61\u5b58\u50a8\uff0c\u53e6\u5916\u53ea\u9700\u5c06 Sidecar \u4f5c\u4e3a\u670d\u52a1\u66b4\u9732\u7ed9 Thanos Querier \u7ec4\u4ef6\uff0c\u5b58\u50a8\u5728\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u4f1a\u901a\u8fc7 Store \u7ec4\u4ef6\u66b4\u9732\u3002\u56e0\u6b64\uff0c\u96c6\u6210 Sidecar \u975e\u5e38\u7b80\u5355\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u573a\u666f\u3002 Receiver Receiver \u6a21\u5f0f\u9700\u8981\u66f4\u6539 Prometheus \u5b9e\u4f8b\u7684\u914d\u7f6e\uff0c\u5c06 TSDB \u8fdc\u7a0b\u5199\u5165 Receiver\uff0c\u540c\u65f6\u90e8\u7f72\u4e00\u4e2a\u989d\u5916\u7684 Receiver StatefulSet\u3002 Receiver \u5c06 TSDB \u4fdd\u7559\u5728\u672c\u5730\u5b58\u50a8\u4e2d\uff0c\u8981\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u548c\u6570\u636e\u590d\u5236\u9700\u8981\u8fd0\u884c\u591a\u4e2a Receiver \u5b9e\u4f8b\u4f5c\u4e3a\u54c8\u5e0c\u73af\u7684\u4e00\u90e8\u5206\uff0c\u9700\u8981\u5bf9\u54c8\u5e0c\u73af\u8fdb\u884c\u914d\u7f6e\uff0c\u4f7f HTTP \u8bf7\u6c42\u4e2d\u7684\u79df\u6237 Header \u53ef\u4ee5\u5339\u914d\u4e13\u5c5e\u7684 Receiver \u7aef\u70b9\uff0c\u6574\u5408 Receiver \u662f\u4e00\u9879\u590d\u6742\u800c\u7e41\u7410\u7684\u4efb\u52a1\u3002 \u5b58\u50a8 Sidecar Sidecar \u4ece Prometheus \u7684\u672c\u5730\u5b58\u50a8\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u56e0\u6b64 TSDB \u4e0d\u9700\u8981\u989d\u5916\u7684\u672c\u5730\u5b58\u50a8 \u3002 \u6b64\u5916\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5927\u5927\u51cf\u5c11 TSDB \u5728 Prometheus \u672c\u5730\u5b58\u50a8\u4e2d\u7684\u4fdd\u7559\u65f6\u95f4\uff0c\u56e0\u4e3a\u5b83\u6bcf\u4e24\u5c0f\u65f6\u4e0a\u4f20\u4e00\u6b21\uff0c\u540c\u65f6\u5b83\u4eec\u7684\u5386\u53f2\u6570\u636e\u901a\u8fc7\u5bf9\u8c61\u5b58\u50a8\u53d8\u5f97\u6301\u4e45\u548c\u53ef\u67e5\u8be2\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPrometheus \u5b58\u50a8\u7684\u6570\u636e\u4e3a15\u5929\uff0c\u5728\u76d1\u63a7\u4e00\u4e2a\u5927\u89c4\u6a21\u751f\u4ea7\u96c6\u7fa4\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u9700\u8981\u76f8\u5f53\u5927\u7684\u672c\u5730\u5b58\u50a8\uff0c\u800c\u4e14\u672c\u5730\u5b58\u50a8\u6bd4\u5bf9\u8c61\u5b58\u50a8\u8981\u6602\u8d35\u5f97\u591a \u3002\u7531\u4e8e Sidecar \u6bcf2\u5c0f\u65f6\u5c06 Prometheus \u7684\u6307\u6807\u5bfc\u51fa\u5230\u5b58\u50a8\u6876\u4e2d\uff0c\u5b83\u4f7f Prometheus \u66f4\u63a5\u8fd1\u4e8e\u65e0\u72b6\u6001\u3002\u867d\u7136\u5728 Thanos \u6587\u6863\u4e2d\uff0c\u5efa\u8bae Prometheus \u7684\u4fdd\u7559\u65f6\u95f4\u4e0d\u8981\u4f4e\u4e8e\u6700\u5c0f\u5757\u6301\u7eed\u65f6\u95f4\u76843\u500d\uff0c\u6240\u4ee5\u5b83\u53d8\u6210\u4e866\u5c0f\u65f6 \u3002 Receiver Receiver \u662f\u4e00\u4e2a StatefulSet\uff0c\u9700\u8981\u4f7f\u7528 PV\uff0c\u9700\u8981\u7684\u672c\u5730\u5b58\u50a8\u5bb9\u91cf\u53d6\u51b3\u4e8e --receive.replication-factor \u3001 --tsdb.retention \u8fd9\u4e24\u4e2a\u53c2\u6570\u4ee5\u53capod \u526f\u672c\u6570\uff0cTSDB \u4fdd\u7559\u8d8a\u9ad8\uff0c\u5f53\u7136\u5c31\u4f1a\u4f7f\u7528\u66f4\u591a\u7684\u672c\u5730\u5b58\u50a8\uff0c\u7531\u4e8e\u6570\u636e\u88ab\u6301\u7eed\u5199\u5165 Receiver\uff0c\u56e0\u6b64 Prometheus \u672c\u5730\u7684\u6570\u636e\u4fdd\u7559\u53ef\u4ee5\u4fdd\u6301\u5728\u6700\u5c0f\u503c\u3002\u4e0e Sidecar \u76f8\u6bd4\uff0c\u8fd9\u79cd\u65b9\u6848\u9700\u8981\u66f4\u591a\u7684\u672c\u5730\u5b58\u50a8\u3002 \u6570\u636e\u91c7\u96c6 Sidecar \u5728\u8fd9\u91cc\uff0cTSDB \u5757\u662f\u4ece Prometheus \u5b9e\u4f8b\u7684\u672c\u5730\u5b58\u50a8\u4e2d\u8bfb\u53d6\u7684\uff0c\u8981\u4e48\u63d0\u4f9b\u7ed9 Querier \u8fdb\u884c\u67e5\u8be2\uff0c\u8981\u4e48\u5bfc\u51fa\u5230\u5bf9\u8c61\u5b58\u50a8\u4e2d\u3002Sidecar \u4ee5 pull \u7684\u6a21\u5f0f\u4e0a\u8fd0\u884c\uff08Thanos Querier \u5728\u67e5\u8be2\u65f6\u4ece Prometheus \u62c9\u53d6\u5e8f\u5217\u6570\u636e\uff09\uff0c\u6570\u636e\u4e0d\u4f1a\u4e0d\u65ad\u5730\u5199\u5165\u5176\u4ed6\u5b9e\u4f8b\u4e2d\u3002 Receiver Receiver \u5219\u662f\u57fa\u4e8e push \u7684\u6a21\u5f0f\uff0cTSDB \u7531 Prometheus \u5b9e\u4f8b\u672c\u8eab\u8fdc\u7a0b\u5199\u5165\u5230 Receiver\uff0c\u4ece\u800c\u4f7f Prometheus \u6700\u63a5\u8fd1\u65e0\u72b6\u6001\u3002\u7136\u540e\u6570\u636e\u4ece Receiver \u8fdb\u4e00\u6b65\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u3002","title":"2-2 Receiver"},{"location":"chap11/61thanos_sidecar_receiver/#3","text":"\u9009\u62e9\u54ea\u79cd\u65b9\u6848\u5b8c\u5168\u53d6\u51b3\u4e8e\u8981\u5b9e\u73b0\u7684 Prometheus HA \u548c\u591a\u79df\u6237\u7684\u73af\u5883\u3002\u5728\u9700\u8981\u4e3a\u5355\u4e2a\u96c6\u7fa4\u5b9e\u73b0 Prometheus HA \u6216\u4f7f\u7528 Prometheus Operator \u8fdb\u884c\u7279\u5b9a\u5e94\u7528\u7a0b\u5e8f\u76d1\u63a7\u7684\u60c5\u51b5\u4e0b\uff0cSidecar \u4f3c\u4e4e\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u6613\u4e8e\u64cd\u4f5c\u548c\u96c6\u6210\u8f7b\u91cf\u3002 Sidecar \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5206\u5c42\u7684 Thanos Querier \u65b9\u6cd5\u7528\u4e8e\u591a\u79df\u6237 \u3002 \u800c\u5982\u679c\u9700\u8981\u5bf9\u591a\u79df\u6237\u8fdb\u884c\u66f4\u96c6\u4e2d\u7684\u67e5\u770b\uff0c\u6216\u8005\u5728\u53ea\u6709\u51fa\u6d41\u91cf\u7684\u7f51\u7edc\u73af\u5883\u4e2d\uff0c\u5219\u53ef\u4ee5\u5728\u8003\u8651\u63a8\u9001\u6307\u6807\u65b9\u5f0f\u540e\u4f7f\u7528 Receiver\uff0c\u4e0d\u5efa\u8bae\u901a\u8fc7 Receiver \u5b9e\u73b0\u5355\u79df\u6237\u7684\u5168\u5c40\u89c6\u56fe\u3002\u5f53\u8bd5\u56fe\u5b9e\u73b0\u5177\u6709\u4e0d\u540c\u73af\u5883\u9650\u5236\u7684\u591a\u4e2a\u79df\u6237\u7684\u5168\u5c40\u89c6\u56fe\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528\u540c\u65f6\u4f7f\u7528 Sidecar \u548c Receiver \u7684\u6df7\u5408\u65b9\u6cd5","title":"3 \u7ed3\u8bba"},{"location":"chap11/62thanos_query/","text":"\u7b2c\u4e94\u8282\uff082022\uff09\u4f7f\u7528Thanos\u67e5\u8be2\u524d\u7aef\u4f18\u5316\u67e5\u8be2\u6027\u80fd Thanos \u4e2d\u7684 Query \u7ec4\u4ef6\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u67e5\u8be2\u5165\u53e3\uff0c\u4f46\u662f\u5f53\u67e5\u8be2\u7684\u6570\u636e\u89c4\u6a21\u8f83\u5927\u7684\u65f6\u5019\uff0c\u5bf9 querier \u7ec4\u4ef6\u4e5f\u4f1a\u6709\u5f88\u5927\u7684\u538b\u529b\uff0c\u4e3a\u6b64 Thanos \u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a Query Frontend \u7684\u7ec4\u4ef6\u6765\u63d0\u5347\u6027\u80fd\u3002 Thanos Query Frontend \u662f Thanos Query \u7684\u524d\u7aef\uff0c\u5b83\u7684\u76ee\u6807\u662f\u5c06\u5927\u578b\u67e5\u8be2\u62c6\u5206\u4e3a\u591a\u4e2a\u8f83\u5c0f\u7684\u67e5\u8be2\uff0c\u5e76\u7f13\u5b58\u67e5\u8be2\u7ed3\u679c\u6765\u63d0\u5347\u6027\u80fd \u3002 1 \u6982\u8ff0 Thanos Query Frontend \u7ec4\u4ef6\u901a\u8fc7 thanos query-frontend \u547d\u4ee4\u5b9e\u73b0\u4e86\u4e00\u4e2a\u653e\u5728 querier \u524d\u9762\u7684\u670d\u52a1\uff0c\u4ee5\u6539\u8fdb\u8bfb\u53d6\u8def\u5f84\u3002 \u5b83\u57fa\u4e8e Cortex Query Frontend \u7ec4\u4ef6\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u627e\u5230\u4e00\u4e9b Cortex \u5e38\u89c1\u7684\u7279\u6027\uff0c\u5982\u67e5\u8be2\u62c6\u5206\u548c\u7ed3\u679c\u7f13\u5b58\u3002 Thanos Query Frontend \u662f\u65e0\u72b6\u6001\u548c\u6c34\u5e73\u6269\u5c55\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5217\u547d\u4ee4\u6765\u542f\u52a8 Thanos Query Frontend\uff1a thanos query-frontend \\ --http-address \"0.0.0.0:9090\" \\ --query-frontend.downstream-url=\"<thanos-querier>:<querier-http-port>\" \u5728\u63a5\u6536\u5230\u67e5\u8be2\u8bf7\u6c42\u540e query frontend \u4e0d\u4f1a\u7acb\u5373\u54cd\u5e94\uff0c\u800c\u662f\u5c06\u67e5\u8be2\u8bf7\u6c42\u653e\u5165\u4e00\u4e2a\u67e5\u8be2\u961f\u5217\u4e2d\uff0cquerier \u4f1a\u8fde\u63a5\u5230 query frontend \u5e76\u6d88\u8d39\u8fd9\u4e2a\u961f\u5217\uff0c\u6267\u884c\u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u7684\u67e5\u8be2\u8bf7\u6c42\u5e76\u54cd\u5e94\u7ed9 query frontend\uff0cquery frontend \u4f1a\u5bf9\u8fd9\u4e9b\u54cd\u5e94\u7684\u7ed3\u679c\u8fdb\u884c\u805a\u5408\u3002 2 \u7279\u6027 2-1 \u67e5\u8be2\u961f\u5217 query frontend \u7684\u961f\u5217\u673a\u5236\u6709\u4ee5\u4e0b\u7528\u9014\u3002 \u786e\u4fdd\u53ef\u80fd\u5bfc\u81f4 OOM \u7684\u5927\u578b\u67e5\u8be2\u5728\u53d1\u751f\u9519\u8bef\u65f6\u80fd\u591f\u5f97\u5230\u91cd\u8bd5\u3002 \u9632\u6b62\u591a\u4e2a\u5927\u7684\u67e5\u8be2\u8bf7\u6c42\u6253\u5728\u5355\u4e2a querier \u4e0a\u3002 \u53ef\u4ee5\u5206\u914d\u79df\u6237\u6240\u5bf9\u5e94\u7684 querier\uff0c\u907f\u514d\u5355\u4e2a\u79df\u6237\u4f7f\u7528 DOS \u62d2\u7edd\u670d\u52a1\u653b\u51fb\u5176\u4ed6\u79df\u6237 \u3002 2-2 \u67e5\u8be2\u62c6\u5206 query frontend \u4f1a\u5c06\u591a\u5929\u7684\u7684\u67e5\u8be2\u62c6\u5206\u4e3a\u591a\u4e2a\u5355\u5929\u7684\u67e5\u8be2\uff0c\u6e38\u4e0b\u6e38\u7684 querier \u53bb\u5e76\u884c\u5904\u7406\u8fd9\u4e9b\u5df2\u62c6\u5206\u7684\u67e5\u8be2\u3002 \u8fd4\u56de\u7684\u67e5\u8be2\u7ed3\u679c\u7531 query frontend \u8fdb\u884c\u6c47\u805a\u3002\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u5927\u65f6\u95f4\u8de8\u5ea6\u7684\u67e5\u8be2\u5bfc\u81f4 queier \u53d1\u751f OOM\uff0c\u5e76\u4e14\u80fd\u591f\u66f4\u5feb\u7684\u6267\u884c\u67e5\u8be2\u4ee5\u53ca\u66f4\u597d\u7684\u67e5\u8be2\u8d1f\u8f7d\u5747\u8861\u3002 \u67e5\u8be2\u524d\u7aef\u6839\u636e\u914d\u7f6e\u7684 --query-range.split-interval \u6807\u5fd7\u5c06\u957f\u67e5\u8be2\u62c6\u5206\u4e3a\u591a\u4e2a\u77ed\u67e5\u8be2\uff0c --query-range.split-interva l \u7684\u9ed8\u8ba4\u503c\u4e3a 24 \u5c0f\u65f6\uff0c\u542f\u7528\u7f13\u5b58\u65f6\uff0c\u5b83\u5e94\u8be5\u5927\u4e8e 0\u3002 2-3 \u91cd\u8bd5\u673a\u5236 query frontend \u652f\u6301\u5728 HTTP \u8bf7\u6c42\u5931\u8d25\u65f6\u91cd\u8bd5\u67e5\u8be2\u7684\u91cd\u8bd5\u673a\u5236\uff0c\u6709\u4e00\u4e2a --query-range.max-retries-per-request \u6807\u5fd7\u6765\u9650\u5236\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u3002 2-4 \u67e5\u8be2\u7f13\u5b58 query frontend \u652f\u6301\u5c06\u67e5\u8be2\u7ed3\u679c\u8fdb\u884c\u7f13\u5b58\u7528\u4ee5\u52a0\u901f\u540e\u7eed\u7684\u67e5\u8be2\u3002 \u5f53\u7f13\u5b58\u7684\u7ed3\u679c\u4e0d\u591f\u5b8c\u6574\u65f6\uff0c query frontend \u4f1a\u8ba1\u7b97\u51fa\u6240\u9700\u8981\u7684\u5b50\u67e5\u8be2\u5e76\u5206\u914d\u7ed9\u4e0b\u6e38\u7684 querier \u5e76\u884c\u6267\u884c\uff0c\u5b50\u67e5\u8be2\u7684\u6b65\u957f\u4f1a\u5bf9\u9f50\u4ee5\u63d0\u5347\u67e5\u8be2\u7ed3\u679c\u7684\u53ef\u7f13\u5b58\u6027\u3002\u5f53\u524d\u652f\u6301\u7684\u7f13\u5b58\u540e\u7aef\u6709\uff1a memcached \uff0c redis \u548c\u5185\u5b58\uff0c\u4e0b\u9762\u662f\u8fd9\u4e9b\u7f13\u5b58\u540e\u7aef\u7684\u4e00\u4e9b\u914d\u7f6e\u3002 \u5185\u5b58\u7f13\u5b58 type: IN-MEMORY config: max_size: \"\" max_size_items: 0 validity: 0s max_size \u8868\u793a\u5728\u5185\u5b58\u4e2d\u7f13\u5b58\u7684\u6700\u5927\u5c3a\u5bf8\uff0c\u5355\u4f4d\u53ef\u4ee5\u662f KB\u3001MB\u3001GB\u3002\u5982\u679c max_size \u548c max_size_items \u90fd\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5c31\u4e0d\u4f1a\u521b\u5efa\u7f13\u5b58\u3002\u5982\u679c\u53ea\u8bbe\u7f6e max_size \u6216 max_size_items \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u5219\u5bf9\u5176\u4ed6\u5b57\u6bb5\u6ca1\u6709\u9650\u5236\u3002 memcached type: MEMCACHED config: addresses: [your-memcached-addresses] timeout: 500ms max_idle_connections: 100 max_item_size: 1MiB max_async_concurrency: 10 max_async_buffer_size: 10000 max_get_multi_concurrency: 100 max_get_multi_batch_size: 0 dns_provider_update_interval: 10s expiration: 24h expiration \u8868\u793a\u6307\u5b9a memcached \u7f13\u5b58\u6709\u6548\u65f6\u95f4\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a 0\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684 24 \u5c0f\u65f6\u8fc7\u671f\u65f6\u95f4\uff0c\u4e0a\u9762\u7684\u914d\u7f6e\u662f\u9ed8\u8ba4\u7684 memcached \u914d\u7f6e\u3002 Redis type: REDIS config: addr: \"\" username: \"\" password: \"\" db: 0 dial_timeout: 5s read_timeout: 3s write_timeout: 3s pool_size: 100 min_idle_conns: 10 idle_timeout: 5m0s max_conn_age: 0s max_get_multi_concurrency: 100 get_multi_batch_size: 100 max_set_multi_concurrency: 100 set_multi_batch_size: 100 expiration: 24h0m0s expiration \u8868\u793a\u6307\u5b9a Redis \u7f13\u5b58\u6709\u6548\u65f6\u95f4\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a 0\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684 24 \u5c0f\u65f6\u8fc7\u671f\u65f6\u95f4\u3002 2-5 \u6162\u67e5\u8be2\u65e5\u5fd7 query frontend \u8fd8\u652f\u6301\u901a\u8fc7\u914d\u7f6e --query-frontend.log-queries-longer-than \u6807\u5fd7\u6765\u8bb0\u5f55\u8fd0\u884c\u65f6\u95f4\u8d85\u8fc7\u67d0\u4e2a\u6301\u7eed\u65f6\u95f4\u7684\u67e5\u8be2\u3002 \u5b89\u88c5 \u5b89\u88c5 query frontend \u6700\u91cd\u8981\u7684\u5c31\u662f\u901a\u8fc7 -query-frontend.downstream-url \u6307\u5b9a\u4e0b\u6e38\u7684 querier\uff0c\u5982\u4e0b\u6240\u793a\uff1a # thanos-query-frontend.yaml apiVersion: apps/v1 kind: Deployment metadata: name: thanos-query-frontend namespace: kube-mon labels: app: thanos-query-frontend spec: selector: matchLabels: app: thanos-query-frontend template: metadata: labels: app: thanos-query-frontend spec: containers: - name: thanos image: thanosio/thanos:v0.25.1 imagePullPolicy: IfNotPresent ports: - containerPort: 9090 name: http args: - query-frontend - --log.level=info - --log.format=logfmt - --query-frontend.compress-responses - --http-address=0.0.0.0:9090 - --query-frontend.downstream-url=http://thanos-querier.kube-mon.svc.cluster.local:9090 - --query-range.split-interval=12h - --query-range.max-retries-per-request=10 - --query-frontend.log-queries-longer-than=10s - --labels.split-interval=12h - --labels.max-retries-per-request=10 - |- --query-range.response-cache-config=\"config\": max_size: \"200MB\" max_size_items: 0 validity: 0s type: IN-MEMORY - |- --labels.response-cache-config=\"config\": max_size: \"200MB\" max_size_items: 0 validity: 0s type: IN-MEMORY env: - name: HOST_IP_ADDRESS valueFrom: fieldRef: fieldPath: status.hostIP livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 9090 scheme: HTTP periodSeconds: 30 readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 9090 scheme: HTTP periodSeconds: 5 resources: requests: memory: 512Mi cpu: 500m limits: memory: 512Mi cpu: 500m --- apiVersion: v1 kind: Service metadata: name: thanos-query-frontend namespace: kube-mon labels: app: thanos-query-frontend spec: ports: - name: http port: 9090 targetPort: 9090 selector: app: thanos-query-frontend type: NodePort \u8fd9\u91cc\u6211\u4eec\u5f00\u542f\u4e86\u7f13\u5b58\uff0c\u4f7f\u7528\u5185\u5b58\u7f13\u5b58\uff0c\u76f4\u63a5\u901a\u8fc7 -query-range.response-cache-config \u53c2\u6570\u6765\u914d\u7f6e\u7f13\u5b58\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 -query-range.response-cache-config-file \u6307\u5b9a\u7f13\u5b58\u914d\u7f6e\u6587\u4ef6\uff0c\u4e24\u79cd\u65b9\u5f0f\u5747\u53ef\uff0c\u4e3a\u4e86\u9a8c\u8bc1\u7ed3\u679c\uff0c\u8fd9\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a NodePort \u7c7b\u578b\u7684 Service\uff0c\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/thanos/manifests/thanos-query-frontend.yaml \u2638 \u279c kubectl get pods -n kube-mon -l app=thanos-query-frontend NAME READY STATUS RESTARTS AGE thanos-query-frontend-78954bc857-nkxkk 1/1 Running 0 151m \u2638 \u279c kubectl get svc -n kube-mon -l app=thanos-query-frontend NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE thanos-query-frontend NodePort 10.97.182.150 <none> 9090:30514/TCP 152m \u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f\u8282\u70b9\u7684 30514 \u7aef\u53e3\u8bbf\u95ee\u5230\u67e5\u8be2\u524d\u7aef\uff1a \u8be5\u524d\u7aef\u9875\u9762\u548c Query \u7ec4\u4ef6\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u5728 Query \u524d\u9762\u7f13\u5b58\u5305\u88c5\u4e86\u4e00\u5c42\u3002","title":"\u7b2c\u4e94\u8282\uff082022\uff09\u4f7f\u7528Thanos\u67e5\u8be2\u524d\u7aef\u4f18\u5316\u67e5\u8be2\u6027\u80fd"},{"location":"chap11/62thanos_query/#2022thanos","text":"Thanos \u4e2d\u7684 Query \u7ec4\u4ef6\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u67e5\u8be2\u5165\u53e3\uff0c\u4f46\u662f\u5f53\u67e5\u8be2\u7684\u6570\u636e\u89c4\u6a21\u8f83\u5927\u7684\u65f6\u5019\uff0c\u5bf9 querier \u7ec4\u4ef6\u4e5f\u4f1a\u6709\u5f88\u5927\u7684\u538b\u529b\uff0c\u4e3a\u6b64 Thanos \u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a Query Frontend \u7684\u7ec4\u4ef6\u6765\u63d0\u5347\u6027\u80fd\u3002 Thanos Query Frontend \u662f Thanos Query \u7684\u524d\u7aef\uff0c\u5b83\u7684\u76ee\u6807\u662f\u5c06\u5927\u578b\u67e5\u8be2\u62c6\u5206\u4e3a\u591a\u4e2a\u8f83\u5c0f\u7684\u67e5\u8be2\uff0c\u5e76\u7f13\u5b58\u67e5\u8be2\u7ed3\u679c\u6765\u63d0\u5347\u6027\u80fd \u3002","title":"\u7b2c\u4e94\u8282\uff082022\uff09\u4f7f\u7528Thanos\u67e5\u8be2\u524d\u7aef\u4f18\u5316\u67e5\u8be2\u6027\u80fd"},{"location":"chap11/62thanos_query/#1","text":"Thanos Query Frontend \u7ec4\u4ef6\u901a\u8fc7 thanos query-frontend \u547d\u4ee4\u5b9e\u73b0\u4e86\u4e00\u4e2a\u653e\u5728 querier \u524d\u9762\u7684\u670d\u52a1\uff0c\u4ee5\u6539\u8fdb\u8bfb\u53d6\u8def\u5f84\u3002 \u5b83\u57fa\u4e8e Cortex Query Frontend \u7ec4\u4ef6\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u627e\u5230\u4e00\u4e9b Cortex \u5e38\u89c1\u7684\u7279\u6027\uff0c\u5982\u67e5\u8be2\u62c6\u5206\u548c\u7ed3\u679c\u7f13\u5b58\u3002 Thanos Query Frontend \u662f\u65e0\u72b6\u6001\u548c\u6c34\u5e73\u6269\u5c55\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5217\u547d\u4ee4\u6765\u542f\u52a8 Thanos Query Frontend\uff1a thanos query-frontend \\ --http-address \"0.0.0.0:9090\" \\ --query-frontend.downstream-url=\"<thanos-querier>:<querier-http-port>\" \u5728\u63a5\u6536\u5230\u67e5\u8be2\u8bf7\u6c42\u540e query frontend \u4e0d\u4f1a\u7acb\u5373\u54cd\u5e94\uff0c\u800c\u662f\u5c06\u67e5\u8be2\u8bf7\u6c42\u653e\u5165\u4e00\u4e2a\u67e5\u8be2\u961f\u5217\u4e2d\uff0cquerier \u4f1a\u8fde\u63a5\u5230 query frontend \u5e76\u6d88\u8d39\u8fd9\u4e2a\u961f\u5217\uff0c\u6267\u884c\u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u7684\u67e5\u8be2\u8bf7\u6c42\u5e76\u54cd\u5e94\u7ed9 query frontend\uff0cquery frontend \u4f1a\u5bf9\u8fd9\u4e9b\u54cd\u5e94\u7684\u7ed3\u679c\u8fdb\u884c\u805a\u5408\u3002","title":"1 \u6982\u8ff0"},{"location":"chap11/62thanos_query/#2","text":"","title":"2 \u7279\u6027"},{"location":"chap11/62thanos_query/#2-1","text":"query frontend \u7684\u961f\u5217\u673a\u5236\u6709\u4ee5\u4e0b\u7528\u9014\u3002 \u786e\u4fdd\u53ef\u80fd\u5bfc\u81f4 OOM \u7684\u5927\u578b\u67e5\u8be2\u5728\u53d1\u751f\u9519\u8bef\u65f6\u80fd\u591f\u5f97\u5230\u91cd\u8bd5\u3002 \u9632\u6b62\u591a\u4e2a\u5927\u7684\u67e5\u8be2\u8bf7\u6c42\u6253\u5728\u5355\u4e2a querier \u4e0a\u3002 \u53ef\u4ee5\u5206\u914d\u79df\u6237\u6240\u5bf9\u5e94\u7684 querier\uff0c\u907f\u514d\u5355\u4e2a\u79df\u6237\u4f7f\u7528 DOS \u62d2\u7edd\u670d\u52a1\u653b\u51fb\u5176\u4ed6\u79df\u6237 \u3002","title":"2-1 \u67e5\u8be2\u961f\u5217"},{"location":"chap11/62thanos_query/#2-2","text":"query frontend \u4f1a\u5c06\u591a\u5929\u7684\u7684\u67e5\u8be2\u62c6\u5206\u4e3a\u591a\u4e2a\u5355\u5929\u7684\u67e5\u8be2\uff0c\u6e38\u4e0b\u6e38\u7684 querier \u53bb\u5e76\u884c\u5904\u7406\u8fd9\u4e9b\u5df2\u62c6\u5206\u7684\u67e5\u8be2\u3002 \u8fd4\u56de\u7684\u67e5\u8be2\u7ed3\u679c\u7531 query frontend \u8fdb\u884c\u6c47\u805a\u3002\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u5927\u65f6\u95f4\u8de8\u5ea6\u7684\u67e5\u8be2\u5bfc\u81f4 queier \u53d1\u751f OOM\uff0c\u5e76\u4e14\u80fd\u591f\u66f4\u5feb\u7684\u6267\u884c\u67e5\u8be2\u4ee5\u53ca\u66f4\u597d\u7684\u67e5\u8be2\u8d1f\u8f7d\u5747\u8861\u3002 \u67e5\u8be2\u524d\u7aef\u6839\u636e\u914d\u7f6e\u7684 --query-range.split-interval \u6807\u5fd7\u5c06\u957f\u67e5\u8be2\u62c6\u5206\u4e3a\u591a\u4e2a\u77ed\u67e5\u8be2\uff0c --query-range.split-interva l \u7684\u9ed8\u8ba4\u503c\u4e3a 24 \u5c0f\u65f6\uff0c\u542f\u7528\u7f13\u5b58\u65f6\uff0c\u5b83\u5e94\u8be5\u5927\u4e8e 0\u3002","title":"2-2 \u67e5\u8be2\u62c6\u5206"},{"location":"chap11/62thanos_query/#2-3","text":"query frontend \u652f\u6301\u5728 HTTP \u8bf7\u6c42\u5931\u8d25\u65f6\u91cd\u8bd5\u67e5\u8be2\u7684\u91cd\u8bd5\u673a\u5236\uff0c\u6709\u4e00\u4e2a --query-range.max-retries-per-request \u6807\u5fd7\u6765\u9650\u5236\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u3002","title":"2-3 \u91cd\u8bd5\u673a\u5236"},{"location":"chap11/62thanos_query/#2-4","text":"query frontend \u652f\u6301\u5c06\u67e5\u8be2\u7ed3\u679c\u8fdb\u884c\u7f13\u5b58\u7528\u4ee5\u52a0\u901f\u540e\u7eed\u7684\u67e5\u8be2\u3002 \u5f53\u7f13\u5b58\u7684\u7ed3\u679c\u4e0d\u591f\u5b8c\u6574\u65f6\uff0c query frontend \u4f1a\u8ba1\u7b97\u51fa\u6240\u9700\u8981\u7684\u5b50\u67e5\u8be2\u5e76\u5206\u914d\u7ed9\u4e0b\u6e38\u7684 querier \u5e76\u884c\u6267\u884c\uff0c\u5b50\u67e5\u8be2\u7684\u6b65\u957f\u4f1a\u5bf9\u9f50\u4ee5\u63d0\u5347\u67e5\u8be2\u7ed3\u679c\u7684\u53ef\u7f13\u5b58\u6027\u3002\u5f53\u524d\u652f\u6301\u7684\u7f13\u5b58\u540e\u7aef\u6709\uff1a memcached \uff0c redis \u548c\u5185\u5b58\uff0c\u4e0b\u9762\u662f\u8fd9\u4e9b\u7f13\u5b58\u540e\u7aef\u7684\u4e00\u4e9b\u914d\u7f6e\u3002 \u5185\u5b58\u7f13\u5b58 type: IN-MEMORY config: max_size: \"\" max_size_items: 0 validity: 0s max_size \u8868\u793a\u5728\u5185\u5b58\u4e2d\u7f13\u5b58\u7684\u6700\u5927\u5c3a\u5bf8\uff0c\u5355\u4f4d\u53ef\u4ee5\u662f KB\u3001MB\u3001GB\u3002\u5982\u679c max_size \u548c max_size_items \u90fd\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5c31\u4e0d\u4f1a\u521b\u5efa\u7f13\u5b58\u3002\u5982\u679c\u53ea\u8bbe\u7f6e max_size \u6216 max_size_items \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u5219\u5bf9\u5176\u4ed6\u5b57\u6bb5\u6ca1\u6709\u9650\u5236\u3002 memcached type: MEMCACHED config: addresses: [your-memcached-addresses] timeout: 500ms max_idle_connections: 100 max_item_size: 1MiB max_async_concurrency: 10 max_async_buffer_size: 10000 max_get_multi_concurrency: 100 max_get_multi_batch_size: 0 dns_provider_update_interval: 10s expiration: 24h expiration \u8868\u793a\u6307\u5b9a memcached \u7f13\u5b58\u6709\u6548\u65f6\u95f4\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a 0\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684 24 \u5c0f\u65f6\u8fc7\u671f\u65f6\u95f4\uff0c\u4e0a\u9762\u7684\u914d\u7f6e\u662f\u9ed8\u8ba4\u7684 memcached \u914d\u7f6e\u3002 Redis type: REDIS config: addr: \"\" username: \"\" password: \"\" db: 0 dial_timeout: 5s read_timeout: 3s write_timeout: 3s pool_size: 100 min_idle_conns: 10 idle_timeout: 5m0s max_conn_age: 0s max_get_multi_concurrency: 100 get_multi_batch_size: 100 max_set_multi_concurrency: 100 set_multi_batch_size: 100 expiration: 24h0m0s expiration \u8868\u793a\u6307\u5b9a Redis \u7f13\u5b58\u6709\u6548\u65f6\u95f4\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a 0\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684 24 \u5c0f\u65f6\u8fc7\u671f\u65f6\u95f4\u3002","title":"2-4 \u67e5\u8be2\u7f13\u5b58"},{"location":"chap11/62thanos_query/#2-5","text":"query frontend \u8fd8\u652f\u6301\u901a\u8fc7\u914d\u7f6e --query-frontend.log-queries-longer-than \u6807\u5fd7\u6765\u8bb0\u5f55\u8fd0\u884c\u65f6\u95f4\u8d85\u8fc7\u67d0\u4e2a\u6301\u7eed\u65f6\u95f4\u7684\u67e5\u8be2\u3002 \u5b89\u88c5 \u5b89\u88c5 query frontend \u6700\u91cd\u8981\u7684\u5c31\u662f\u901a\u8fc7 -query-frontend.downstream-url \u6307\u5b9a\u4e0b\u6e38\u7684 querier\uff0c\u5982\u4e0b\u6240\u793a\uff1a # thanos-query-frontend.yaml apiVersion: apps/v1 kind: Deployment metadata: name: thanos-query-frontend namespace: kube-mon labels: app: thanos-query-frontend spec: selector: matchLabels: app: thanos-query-frontend template: metadata: labels: app: thanos-query-frontend spec: containers: - name: thanos image: thanosio/thanos:v0.25.1 imagePullPolicy: IfNotPresent ports: - containerPort: 9090 name: http args: - query-frontend - --log.level=info - --log.format=logfmt - --query-frontend.compress-responses - --http-address=0.0.0.0:9090 - --query-frontend.downstream-url=http://thanos-querier.kube-mon.svc.cluster.local:9090 - --query-range.split-interval=12h - --query-range.max-retries-per-request=10 - --query-frontend.log-queries-longer-than=10s - --labels.split-interval=12h - --labels.max-retries-per-request=10 - |- --query-range.response-cache-config=\"config\": max_size: \"200MB\" max_size_items: 0 validity: 0s type: IN-MEMORY - |- --labels.response-cache-config=\"config\": max_size: \"200MB\" max_size_items: 0 validity: 0s type: IN-MEMORY env: - name: HOST_IP_ADDRESS valueFrom: fieldRef: fieldPath: status.hostIP livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 9090 scheme: HTTP periodSeconds: 30 readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 9090 scheme: HTTP periodSeconds: 5 resources: requests: memory: 512Mi cpu: 500m limits: memory: 512Mi cpu: 500m --- apiVersion: v1 kind: Service metadata: name: thanos-query-frontend namespace: kube-mon labels: app: thanos-query-frontend spec: ports: - name: http port: 9090 targetPort: 9090 selector: app: thanos-query-frontend type: NodePort \u8fd9\u91cc\u6211\u4eec\u5f00\u542f\u4e86\u7f13\u5b58\uff0c\u4f7f\u7528\u5185\u5b58\u7f13\u5b58\uff0c\u76f4\u63a5\u901a\u8fc7 -query-range.response-cache-config \u53c2\u6570\u6765\u914d\u7f6e\u7f13\u5b58\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 -query-range.response-cache-config-file \u6307\u5b9a\u7f13\u5b58\u914d\u7f6e\u6587\u4ef6\uff0c\u4e24\u79cd\u65b9\u5f0f\u5747\u53ef\uff0c\u4e3a\u4e86\u9a8c\u8bc1\u7ed3\u679c\uff0c\u8fd9\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a NodePort \u7c7b\u578b\u7684 Service\uff0c\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/thanos/manifests/thanos-query-frontend.yaml \u2638 \u279c kubectl get pods -n kube-mon -l app=thanos-query-frontend NAME READY STATUS RESTARTS AGE thanos-query-frontend-78954bc857-nkxkk 1/1 Running 0 151m \u2638 \u279c kubectl get svc -n kube-mon -l app=thanos-query-frontend NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE thanos-query-frontend NodePort 10.97.182.150 <none> 9090:30514/TCP 152m \u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f\u8282\u70b9\u7684 30514 \u7aef\u53e3\u8bbf\u95ee\u5230\u67e5\u8be2\u524d\u7aef\uff1a \u8be5\u524d\u7aef\u9875\u9762\u548c Query \u7ec4\u4ef6\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u5728 Query \u524d\u9762\u7f13\u5b58\u5305\u88c5\u4e86\u4e00\u5c42\u3002","title":"2-5 \u6162\u67e5\u8be2\u65e5\u5fd7"},{"location":"chap11/63prometheus_optimiztion/","text":"\u7b2c\u516d\u8282 (Thaos1-2022)\u5927\u89c4\u6a21\u573a\u666f\u4e0bPrometheus\u7684\u4f18\u5316\u624b\u6bb5 1 \u6982\u8ff0 Prometheus \u51e0\u4e4e\u5df2\u6210\u4e3a\u76d1\u63a7\u9886\u57df\u7684\u4e8b\u5b9e\u6807\u51c6\uff0c\u5b83\u81ea\u5e26\u9ad8\u6548\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u5b58\u50a8\uff0c\u53ef\u4ee5\u8ba9\u5355\u53f0 Prometheus \u80fd\u591f\u9ad8\u6548\u7684\u5904\u7406\u5927\u91cf\u7684\u6570\u636e\uff0c\u8fd8\u6709\u53cb\u597d\u5e76\u4e14\u5f3a\u5927\u7684 PromQL \u8bed\u6cd5\uff0c\u53ef\u4ee5\u7528\u6765\u7075\u6d3b\u7684\u67e5\u8be2\u5404\u79cd\u76d1\u63a7\u6570\u636e\u4ee5\u53ca\u914d\u7f6e\u544a\u8b66\u89c4\u5219\uff0c\u540c\u65f6\u5b83\u7684 pull \u6a21\u578b\u6307\u6807\u91c7\u96c6\u65b9\u5f0f\u88ab\u5e7f\u6cdb\u91c7\u7eb3\uff0c\u975e\u5e38\u591a\u7684\u5e94\u7528\u90fd\u5b9e\u73b0\u4e86 Prometheus \u7684 metrics \u63a5\u53e3\u4ee5\u66b4\u9732\u81ea\u8eab\u5404\u9879\u6570\u636e\u6307\u6807\u8ba9 Prometheus \u53bb\u91c7\u96c6\uff0c\u5f88\u591a\u6ca1\u6709\u9002\u914d\u7684\u5e94\u7528\u4e5f\u4f1a\u6709\u7b2c\u4e09\u65b9 exporter \u5e2e\u5b83\u53bb\u9002\u914d Prometheus\uff0c\u6240\u4ee5\u76d1\u63a7\u7cfb\u7edf\u6211\u4eec\u901a\u5e38\u9996\u9009\u7528 Prometheus\uff0c\u672c\u7cfb\u5217\u6587\u7ae0\u4e5f\u5c06\u57fa\u4e8e Prometheus \u6765\u6253\u9020\u4e91\u539f\u751f\u73af\u5883\u4e0b\u7684\u5927\u578b\u5206\u5e03\u5f0f\u76d1\u63a7\u7cfb\u7edf\u3002 2 \u5927\u89c4\u6a21\u573a\u666f\u4e0b Prometheus \u7684\u75db\u70b9 Prometheus \u672c\u8eab\u53ea\u652f\u6301\u5355\u673a\u90e8\u7f72\uff0c\u6ca1\u6709\u81ea\u5e26\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\uff0c\u4e5f\u5c31\u4e0d\u652f\u6301\u9ad8\u53ef\u7528\u4ee5\u53ca\u6c34\u5e73\u6269\u5bb9\uff0c\u5728\u5927\u89c4\u6a21\u573a\u666f\u4e0b\uff0c\u6700\u8ba9\u4eba\u5173\u5fc3\u7684\u95ee\u9898\u662f\u5b83\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u53d7\u9650\u4e8e\u5355\u673a\u78c1\u76d8\u5bb9\u91cf\uff0c\u78c1\u76d8\u5bb9\u91cf\u51b3\u5b9a\u4e86\u5355\u4e2a Prometheus \u6240\u80fd\u5b58\u50a8\u7684\u6570\u636e\u91cf\uff0c\u6570\u636e\u91cf\u5927\u5c0f\u53c8\u53d6\u51b3\u4e8e\u88ab\u91c7\u96c6\u670d\u52a1\u7684\u6307\u6807\u6570\u91cf\u3001\u670d\u52a1\u6570\u91cf\u3001\u91c7\u96c6\u901f\u7387\u4ee5\u53ca\u6570\u636e\u8fc7\u671f\u65f6\u95f4\u3002 \u5728\u6570\u636e\u91cf\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u80fd\u5c31\u9700\u8981\u505a\u5f88\u591a\u53d6\u820d\uff0c\u6bd4\u5982\u4e22\u5f03\u4e0d\u91cd\u8981\u7684\u6307\u6807\u3001\u964d\u4f4e\u91c7\u96c6\u901f\u7387\u3001\u8bbe\u7f6e\u8f83\u77ed\u7684\u6570\u636e\u8fc7\u671f\u65f6\u95f4(\u9ed8\u8ba4\u53ea\u4fdd\u755915\u5929\u7684\u6570\u636e\uff0c\u770b\u4e0d\u5230\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e)\u3002 \u8fd9\u4e9b\u75db\u70b9\u5b9e\u9645\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u4f18\u5316\u624b\u6bb5\u6765\u6539\u5584\u7684\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u7ec6\u8bb2\u4e00\u4e0b\u3002 3 \u4ece\u670d\u52a1\u7ef4\u5ea6\u62c6\u5206 Prometheus Prometheus \u4e3b\u5f20\u6839\u636e\u529f\u80fd\u6216\u670d\u52a1\u7ef4\u5ea6\u8fdb\u884c\u62c6\u5206\uff0c\u5373\u5982\u679c\u8981\u91c7\u96c6\u7684\u670d\u52a1\u6bd4\u8f83\u591a\uff0c\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u5c31\u914d\u7f6e\u6210\u4ec5\u91c7\u96c6\u548c\u5b58\u50a8\u67d0\u4e00\u4e2a\u6216\u67d0\u4e00\u90e8\u5206\u670d\u52a1\u7684\u6307\u6807\uff0c \u8fd9\u6837\u6839\u636e\u8981\u91c7\u96c6\u7684\u670d\u52a1\u5c06 Prometheus \u62c6\u5206\u6210\u591a\u4e2a\u5b9e\u4f8b\u5206\u522b\u53bb\u91c7\u96c6\uff0c\u4e5f\u80fd\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8fbe\u5230\u6c34\u5e73\u6269\u5bb9\u7684\u76ee\u7684 \u3002 \u901a\u5e38\u8fd9\u6837\u7684\u6269\u5bb9\u65b9\u5f0f\u5df2\u7ecf\u80fd\u6ee1\u8db3\u5927\u90e8\u5206\u573a\u666f\u7684\u9700\u6c42\u4e86\uff0c\u6bd5\u7adf\u5355\u673a Prometheus \u5c31\u80fd\u91c7\u96c6\u548c\u5904\u7406\u5f88\u591a\u6570\u636e\u4e86\uff0c\u5f88\u5c11\u6709 Prometheus \u6491\u4e0d\u4f4f\u5355\u4e2a\u670d\u52a1\u7684\u573a\u666f\u3002\u4e0d\u8fc7\u5728\u8d85\u5927\u89c4\u6a21\u96c6\u7fa4\u4e0b\uff0c\u6709\u4e9b\u5355\u4e2a\u670d\u52a1\u7684\u4f53\u91cf\u4e5f\u5f88\u5927\uff0c\u5c31\u9700\u8981\u8fdb\u4e00\u6b65\u62c6\u5206\u4e86\uff0c\u6211\u4eec\u4e0b\u9762\u6765\u7ee7\u7eed\u8bb2\u4e0b\u5982\u4f55\u518d\u62c6\u5206\u3002 4 \u5bf9\u8d85\u5927\u89c4\u6a21\u7684\u670d\u52a1\u505a\u5206\u7247 \u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u96c6\u7fa4\u8282\u70b9\u6570\u91cf\u8fbe\u5230\u4e0a\u5343\u751a\u81f3\u51e0\u5343\u7684\u89c4\u6a21\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u8282\u70b9\u7ea7\u670d\u52a1\u66b4\u9732\u7684\u6307\u6807\uff0c\u6bd4\u5982 kubelet \u5185\u7f6e\u7684 cadvisor \u66b4\u9732\u7684\u5bb9\u5668\u76f8\u5173\u7684\u6307\u6807\uff0c\u53c8\u6216\u8005\u90e8\u7f72\u7684 DeamonSet node-exporter \u66b4\u9732\u7684\u8282\u70b9\u76f8\u5173\u7684\u6307\u6807\uff0c\u5728\u96c6\u7fa4\u89c4\u6a21\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u8fd9\u79cd\u5355\u4e2a\u670d\u52a1\u80cc\u540e\u7684\u6307\u6807\u6570\u636e\u4f53\u91cf\u5c31\u975e\u5e38\u5927\uff1b \u8fd8\u6709\u4e00\u4e9b\u7528\u6237\u91cf\u8d85\u5927\u7684\u4e1a\u52a1\uff0c\u5355\u4e2a\u670d\u52a1\u7684 pod \u526f\u672c\u6570\u5c31\u53ef\u80fd\u8fc7\u5343\uff0c\u8fd9\u79cd\u670d\u52a1\u80cc\u540e\u7684\u6307\u6807\u6570\u636e\u4e5f\u975e\u5e38\u5927\uff0c\u5f53\u7136\u8fd9\u662f\u6700\u7f55\u89c1\u7684\u573a\u666f\uff0c\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u7684\u4eba\u6765\u8bf4\u8fd9\u79cd\u573a\u666f\u90fd\u53ea\u6562 YY \u4e00\u4e0b\uff0c\u5b9e\u9645\u5f88\u5c11\u6709\u5355\u4e2a\u670d\u52a1\u5c31\u8fbe\u5230\u8fd9\u4e48\u5927\u89c4\u6a21\u7684\u4e1a\u52a1\u3002 \u90a3\u4e48\u5982\u4f55\u4f18\u5316\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u7ed9\u8fd9\u79cd\u5927\u89c4\u6a21\u7c7b\u578b\u7684\u670d\u52a1\u505a\u4e00\u4e0b\u5206\u7247(Sharding)\uff0c\u5c06\u5176\u62c6\u5206\u6210\u591a\u4e2a group\uff0c\u8ba9\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u4ec5\u91c7\u96c6\u8fd9\u4e2a\u670d\u52a1\u80cc\u540e\u7684\u67d0\u4e00\u4e2a group \u7684\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u5927\u4f53\u91cf\u670d\u52a1\u7684\u76d1\u63a7\u6570\u636e\u62c6\u5206\u5230\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e0a\u3002 \u5982\u4f55\u5c06\u4e00\u4e2a\u670d\u52a1\u62c6\u6210\u591a\u4e2a group \u5462\uff1f\u4e0b\u9762\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6848\uff0c\u4ee5\u5bf9 kubelet cadvisor \u6570\u636e\u505a\u5206\u7247\u4e3a\u4f8b\u3002 \u7b2c\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528 Kubernetes \u7684\u670d\u52a1\u53d1\u73b0\uff0c\u81ea\u884c\u5b9e\u73b0\u4e00\u4e0b sharding \u7b97\u6cd5\uff0c\u6bd4\u5982\u9488\u5bf9\u8282\u70b9\u7ea7\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u5c06\u67d0\u4e2a\u8282\u70b9 shard \u5230\u67d0\u4e2a group \u91cc\uff0c\u7136\u540e\u518d\u5c06\u5176\u6ce8\u518c\u5230 Prometheus \u6240\u652f\u6301\u7684\u670d\u52a1\u53d1\u73b0\u6ce8\u518c\u4e2d\u5fc3\uff0c\u63a8\u8350 consul \uff0c\u6700\u540e\u5728 Prometheus \u914d\u7f6e\u6587\u4ef6\u52a0\u4e0a consul_sd_config \u7684\u914d\u7f6e\uff0c\u6307\u5b9a\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u8981\u91c7\u96c6\u7684 group\u3002 - job_name: 'cadvisor-1' consul_sd_configs: - server: 10.0.0.3:8500 services: - cadvisor-1 # This is the 2nd slave \u5728\u672a\u6765\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u5229\u7528 Kubernetes \u7684 EndpointSlice \u7279\u6027\u6765\u505a\u670d\u52a1\u53d1\u73b0\u548c\u5206\u7247\u5904\u7406\uff0c\u5728\u8d85\u5927\u89c4\u6a21\u670d\u52a1\u573a\u666f\u4e0b\u5c31\u53ef\u4ee5\u4e0d\u9700\u8981\u5176\u5b83\u7684\u670d\u52a1\u53d1\u73b0\u548c\u5206\u7247\u673a\u5236\u3002\u4e0d\u8fc7\u6682\u65f6\u6b64\u7279\u6027\u8fd8\u4e0d\u591f\u6210\u719f\uff0c\u6ca1\u6709\u9ed8\u8ba4\u542f\u7528\uff0c\u4e0d\u63a8\u8350\u7528(\u5f53\u524d Kubernentes \u6700\u65b0\u7248\u672c\u4e3a 1.18)\u3002 \u7b2c\u4e8c\uff0c\u7528 Kubernetes \u7684 node \u670d\u52a1\u53d1\u73b0\uff0c\u518d\u5229\u7528 Prometheus relabel \u914d\u7f6e\u7684 hashmod \u6765\u5bf9 node \u505a\u5206\u7247\uff0c\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u4ec5\u6293\u5176\u4e2d\u4e00\u4e2a\u5206\u7247\u4e2d\u7684\u6570\u636e: - job_name: 'cadvisor-1' metrics_path: /metrics/cadvisor scheme: https # \u8bf7\u6c42 kubelet metrics \u63a5\u53e3\u4e5f\u9700\u8981\u8ba4\u8bc1\u548c\u6388\u6743\uff0c\u901a\u5e38\u4f1a\u7528 webhook \u65b9\u5f0f\u8ba9 apiserver \u4ee3\u7406\u8fdb\u884cRBAC \u6821\u9a8c\uff0c\u6240\u4ee5\u8fd8\u662f\u7528 ServiceAccount \u7684 token bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node # \u901a\u5e38\u4e0d\u6821\u9a8c kubelet \u7684 server \u8bc1\u4e66\uff0c\u907f\u514d\u62a5 x509: certificate signed by unknown authority tls_config: insecure_skip_verify: true relabel_configs: - source_labels: [__address__] modulus: 4 # \u5c06\u8282\u70b9\u5206\u7247\u6210 4 \u4e2a group target_label: __tmp_hash action: hashmod - source_labels: [__tmp_hash] regex: ^1$ # \u53ea\u6293\u7b2c 2 \u4e2a group \u4e2d\u8282\u70b9\u7684\u6570\u636e(\u5e8f\u53f7 0 \u4e3a\u7b2c 1 \u4e2a group) action: keep \u62c6\u5206\u5f15\u5165\u7684\u65b0\u95ee\u9898 \u524d\u9762\u6211\u4eec\u901a\u8fc7\u4e0d\u901a\u5c42\u9762\u5bf9 Prometheus \u8fdb\u884c\u4e86\u62c6\u5206\u90e8\u7f72\uff0c \u4e00\u65b9\u9762\u4f7f\u5f97 Prometheus \u80fd\u591f\u5b9e\u73b0\u6c34\u5e73\u6269\u5bb9\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u52a0\u5267\u4e86\u76d1\u63a7\u6570\u636e\u843d\u76d8\u7684\u5206\u6563\u7a0b\u5ea6 \uff0c\u4f7f\u7528 Grafana \u67e5\u8be2\u76d1\u63a7\u6570\u636e\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u6dfb\u52a0\u8bb8\u591a\u6570\u636e\u6e90\uff0c\u800c\u4e14\u4e0d\u540c\u6570\u636e\u6e90\u4e4b\u95f4\u7684\u6570\u636e\u8fd8\u4e0d\u80fd\u805a\u5408\u67e5\u8be2\uff0c\u76d1\u63a7\u9875\u9762\u4e5f\u770b\u4e0d\u5230\u5168\u5c40\u7684\u89c6\u56fe\uff0c\u9020\u6210\u67e5\u8be2\u6df7\u4e71\u7684\u5c40\u9762\u3002 \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u9762\u7684\u4e24\u65b9\u9762\u5165\u624b\uff0c\u4efb\u9009\u5176\u4e2d\u4e00\u79cd\u65b9\u6848\u3002 4-1 \u96c6\u4e2d\u6570\u636e\u5b58\u50a8 \u6211\u4eec\u53ef\u4ee5\u8ba9 Prometheus \u4e0d\u8d1f\u8d23\u5b58\u50a8\uff0c\u4ec5\u91c7\u96c6\u6570\u636e\u5e76\u901a\u8fc7 remote write \u65b9\u5f0f\u5199\u5165\u8fdc\u7a0b\u5b58\u50a8\u7684 adapter\uff0c\u8fdc\u7a0b\u5b58\u50a8\u4f7f\u7528 OpenTSDB \u6216 InfluxDB \u8fd9\u4e9b\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\u7684\u65f6\u5e8f\u6570\u636e\u5e93\uff0cPrometheus \u914d\u7f6e: remote_write: - url: http://10.0.0.2:8888/write \u7136\u540e Grafana \u6dfb\u52a0\u6211\u4eec\u4f7f\u7528\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u4f5c\u4e3a\u6570\u636e\u6e90\u6765\u67e5\u8be2\u76d1\u63a7\u6570\u636e\u6765\u5c55\u793a\uff0c\u67b6\u6784\u56fe: \u8fd9\u79cd\u65b9\u5f0f\u76f8\u5f53\u4e8e\u66f4\u6362\u4e86\u5b58\u50a8\u5f15\u64ce\uff0c\u7531\u5176\u5b83\u652f\u6301\u5b58\u50a8\u6c34\u5e73\u6269\u5bb9\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u6765\u5b58\u50a8\u5e9e\u5927\u7684\u6570\u636e\u91cf\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6570\u636e\u96c6\u4e2d\u5230\u4e00\u8d77\u3002OpenTSDB \u652f\u6301 HBase, BigTable \u4f5c\u4e3a\u5b58\u50a8\u540e\u7aef\uff0cInfluxDB \u4f01\u4e1a\u7248\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\u548c\u6c34\u5e73\u6269\u5bb9(\u5f00\u6e90\u7248\u4e0d\u652f\u6301)\u3002 \u4e0d\u8fc7\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u4f7f\u7528\u53cb\u597d\u4e14\u5f3a\u5927\u7684 PromQL \u6765\u67e5\u8be2\u76d1\u63a7\u6570\u636e\u4e86\uff0c\u5fc5\u987b\u4f7f\u7528\u6211\u4eec\u5b58\u50a8\u6570\u636e\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u6240\u652f\u6301\u7684\u8bed\u6cd5\u6765\u67e5\u8be2 \u3002 4-2 Prometheus \u8054\u90a6 \u9664\u4e86\u4e0a\u9762\u66f4\u6362\u5b58\u50a8\u5f15\u64ce\u7684\u65b9\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u5c06 Prometheus \u8fdb\u884c\u8054\u90a6\u90e8\u7f72\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5c06\u591a\u4e2a Prometheus \u5b9e\u4f8b\u91c7\u96c6\u7684\u6570\u636e\u518d\u7528\u53e6\u4e00\u4e2a Prometheus \u91c7\u96c6\u6c47\u603b\u5230\u4e00\u8d77\uff0c\u8fd9\u6837\u4e5f\u610f\u5473\u7740\u9700\u8981\u6d88\u8017\u66f4\u591a\u7684\u8d44\u6e90\u3002\u901a\u5e38\u6211\u4eec\u53ea\u628a\u9700\u8981\u805a\u5408\u7684\u6570\u636e\u6216\u8005\u9700\u8981\u5728\u4e00\u4e2a\u5730\u65b9\u5c55\u793a\u7684\u6570\u636e\u7528\u8fd9\u79cd\u65b9\u5f0f\u91c7\u96c6\u6c47\u603b\u5230\u4e00\u8d77\uff0c\u6bd4\u5982 Kubernetes \u8282\u70b9\u6570\u8fc7\u591a\uff0ccadvisor \u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e0a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u5c06 cadvisor \u66b4\u9732\u7684\u5bb9\u5668\u6307\u6807\u6c47\u603b\u8d77\u6765\uff0c\u4ee5\u4fbf\u4e8e\u5728\u4e00\u4e2a\u5730\u65b9\u5c31\u80fd\u67e5\u8be2\u5230\u96c6\u7fa4\u4e2d\u4efb\u610f\u4e00\u4e2a\u5bb9\u5668\u7684\u76d1\u63a7\u6570\u636e\u6216\u8005\u67d0\u4e2a\u670d\u52a1\u80cc\u540e\u6240\u6709\u5bb9\u5668\u7684\u76d1\u63a7\u6570\u636e\u7684\u805a\u5408\u6c47\u603b\u4ee5\u53ca\u914d\u7f6e\u544a\u8b66\uff1b \u53c8\u6216\u8005\u591a\u4e2a\u670d\u52a1\u6709\u5173\u8054\uff0c\u6bd4\u5982\u901a\u5e38\u5e94\u7528\u53ea\u66b4\u9732\u4e86\u5b83\u5e94\u7528\u76f8\u5173\u7684\u6307\u6807\uff0c\u4f46\u5b83\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5(\u6bd4\u5982 cpu \u548c \u5185\u5b58) \u7531 cadvisor \u6765\u611f\u77e5\u548c\u66b4\u9732\uff0c\u8fd9\u4e24\u90e8\u5206\u6307\u6807\u7531\u4e0d\u540c\u7684 Prometheus \u5b9e\u4f8b\u6240\u91c7\u96c6\uff0c\u8fd9\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u5c06\u6570\u636e\u6c47\u603b\uff0c\u5728\u4e00\u4e2a\u5730\u65b9\u5c55\u793a\u548c\u914d\u7f6e\u544a\u8b66\u3002 \u66f4\u591a\u8bf4\u660e\u548c\u914d\u7f6e\u793a\u4f8b\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863: https://prometheus.io/docs/prometheus/latest/federation/ 4-3 Prometheus \u9ad8\u53ef\u7528 \u867d\u7136\u4e0a\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u5217\u64cd\u4f5c\u5c06 Prometheus \u8fdb\u884c\u4e86\u5206\u5e03\u5f0f\u6539\u9020\uff0c\u4f46\u5e76\u6ca1\u6709\u89e3\u51b3 Prometheus \u672c\u8eab\u7684\u9ad8\u53ef\u7528\u95ee\u9898\uff0c\u5373\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u5b9e\u4f8b\u6302\u4e86\uff0c\u6570\u636e\u7684\u67e5\u8be2\u548c\u5b8c\u6574\u6027\u90fd\u5c06\u53d7\u5230\u5f71\u54cd\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709 Prometheus \u5b9e\u4f8b\u90fd\u4f7f\u7528\u4e24\u4e2a\u76f8\u540c\u526f\u672c\uff0c\u5206\u522b\u6302\u8f7d\u6570\u636e\u76d8\uff0c\u5b83\u4eec\u90fd\u91c7\u96c6\u76f8\u540c\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\uff0c\u67e5\u8be2\u5b83\u4eec\u4e4b\u4e2d\u4efb\u610f\u4e00\u4e2a\u90fd\u53ef\u4ee5\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u5b83\u4eec\u524d\u9762\u518d\u6302\u4e00\u5c42\u8d1f\u8f7d\u5747\u8861\uff0c\u6240\u6709\u67e5\u8be2\u90fd\u7ecf\u8fc7\u8fd9\u4e2a\u8d1f\u8f7d\u5747\u8861\u5206\u6d41\u5230\u5176\u4e2d\u4e00\u53f0 Prometheus\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u53f0\u6302\u6389\u5c31\u4ece\u8d1f\u8f7d\u5217\u8868\u91cc\u8e22\u6389\u4e0d\u518d\u8f6c\u53d1\u3002 \u8fd9\u91cc\u7684\u8d1f\u8f7d\u5747\u8861\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u73af\u5883\u9009\u62e9\u5408\u9002\u7684\u65b9\u6848\uff0c\u53ef\u4ee5\u7528 Nginx \u6216 HAProxy\uff0c\u5728 Kubernetes \u73af\u5883\uff0c\u901a\u5e38\u4f7f\u7528 Kubernentes \u7684 Service\uff0c\u7531 kube-proxy \u751f\u6210\u7684 iptables/ipvs \u89c4\u5219\u8f6c\u53d1\uff0c\u5982\u679c\u4f7f\u7528 Istio\uff0c\u8fd8\u53ef\u4ee5\u7528 VirtualService\uff0c\u7531 envoy sidecar \u53bb\u8f6c\u53d1\u3002 \u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86 Prometheus \u7684\u9ad8\u53ef\u7528\uff0c\u7b80\u5355\u8d77\u89c1\uff0c\u4e0a\u9762\u7684\u56fe\u4ec5\u5c55\u793a\u5355\u4e2a Prometheus \u7684\u9ad8\u53ef\u7528\uff0c\u5f53\u4f60\u53ef\u4ee5\u5c06\u5176\u62d3\u5c55\uff0c\u4ee3\u5165\u5e94\u7528\u5230\u4e0a\u9762\u5176\u5b83\u7684\u4f18\u5316\u624b\u6bb5\u4e2d\uff0c\u5b9e\u73b0\u6574\u4f53\u7684\u9ad8\u53ef\u7528\u3002 5 \u603b\u7ed3 \u901a\u8fc7\u672c\u6587\u4e00\u7cfb\u5217\u5bf9 Prometheus \u7684\u4f18\u5316\u624b\u6bb5\uff0c\u6211\u4eec\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u5355\u673a Prometheus \u5728\u5927\u89c4\u6a21\u573a\u666f\u4e0b\u7684\u75db\u70b9\uff0c\u4f46\u64cd\u4f5c\u548c\u8fd0\u7ef4\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u5e76\u4e14\u4e0d\u80fd\u591f\u5f88\u597d\u7684\u652f\u6301\u6570\u636e\u7684\u957f\u671f\u5b58\u50a8(long term storage)\u3002\u5bf9\u4e8e\u4e00\u4e9b\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff0c\u6211\u4eec\u901a\u5e38\u67e5\u770b\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u4f46\u4e5f\u5e0c\u671b\u80fd\u591f\u4f4e\u6210\u672c\u7684\u4fdd\u7559\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u6570\u636e\u5982\u679c\u5168\u90e8\u843d\u76d8\u5230\u78c1\u76d8\u6210\u672c\u662f\u5f88\u9ad8\u7684\uff0c\u5e76\u4e14\u5bb9\u91cf\u6709\u9650\uff0c\u5373\u4fbf\u5229\u7528\u6c34\u5e73\u6269\u5bb9\u53ef\u4ee5\u589e\u52a0\u5b58\u50a8\u5bb9\u91cf\uff0c\u4f46\u540c\u65f6\u4e5f\u589e\u5927\u4e86\u8d44\u6e90\u6210\u672c\uff0c\u4e0d\u53ef\u80fd\u65e0\u9650\u6269\u5bb9\uff0c\u6240\u4ee5\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u6570\u636e\u8fc7\u671f\u7b56\u7565\uff0c\u4e5f\u5c31\u4f1a\u4e22\u5931\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u4e0d\u5e38\u7528\u7684\u51b7\u6570\u636e\uff0c\u6700\u7406\u60f3\u7684\u65b9\u5f0f\u5c31\u662f\u5b58\u5230\u5ec9\u4ef7\u7684\u5bf9\u8c61\u5b58\u50a8\u4e2d\uff0c\u7b49\u9700\u8981\u67e5\u8be2\u7684\u65f6\u5019\u80fd\u591f\u81ea\u52a8\u52a0\u8f7d\u51fa\u6765\u3002Thanos \u53ef\u4ee5\u5e2e\u6211\u4eec\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u5b83\u5b8c\u5168\u517c\u5bb9 Prometheus API\uff0c\u63d0\u4f9b\u7edf\u4e00\u67e5\u8be2\u805a\u5408\u5206\u5e03\u5f0f\u90e8\u7f72\u7684 Prometheus \u6570\u636e\u7684\u80fd\u529b\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u6570\u636e\u957f\u671f\u5b58\u50a8\u5230\u5404\u79cd\u5bf9\u8c61\u5b58\u50a8(\u65e0\u9650\u5b58\u50a8\u80fd\u529b)\u4ee5\u53ca\u964d\u4f4e\u91c7\u6837\u7387\u6765\u52a0\u901f\u5927\u65f6\u95f4\u8303\u56f4\u7684\u6570\u636e\u67e5\u8be2\u3002","title":"\u7b2c\u516d\u8282 (Thaos1-2022)\u5927\u89c4\u6a21\u573a\u666f\u4e0bPrometheus\u7684\u4f18\u5316\u624b\u6bb5"},{"location":"chap11/63prometheus_optimiztion/#thaos1-2022prometheus","text":"","title":"\u7b2c\u516d\u8282 (Thaos1-2022)\u5927\u89c4\u6a21\u573a\u666f\u4e0bPrometheus\u7684\u4f18\u5316\u624b\u6bb5"},{"location":"chap11/63prometheus_optimiztion/#1","text":"Prometheus \u51e0\u4e4e\u5df2\u6210\u4e3a\u76d1\u63a7\u9886\u57df\u7684\u4e8b\u5b9e\u6807\u51c6\uff0c\u5b83\u81ea\u5e26\u9ad8\u6548\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u5b58\u50a8\uff0c\u53ef\u4ee5\u8ba9\u5355\u53f0 Prometheus \u80fd\u591f\u9ad8\u6548\u7684\u5904\u7406\u5927\u91cf\u7684\u6570\u636e\uff0c\u8fd8\u6709\u53cb\u597d\u5e76\u4e14\u5f3a\u5927\u7684 PromQL \u8bed\u6cd5\uff0c\u53ef\u4ee5\u7528\u6765\u7075\u6d3b\u7684\u67e5\u8be2\u5404\u79cd\u76d1\u63a7\u6570\u636e\u4ee5\u53ca\u914d\u7f6e\u544a\u8b66\u89c4\u5219\uff0c\u540c\u65f6\u5b83\u7684 pull \u6a21\u578b\u6307\u6807\u91c7\u96c6\u65b9\u5f0f\u88ab\u5e7f\u6cdb\u91c7\u7eb3\uff0c\u975e\u5e38\u591a\u7684\u5e94\u7528\u90fd\u5b9e\u73b0\u4e86 Prometheus \u7684 metrics \u63a5\u53e3\u4ee5\u66b4\u9732\u81ea\u8eab\u5404\u9879\u6570\u636e\u6307\u6807\u8ba9 Prometheus \u53bb\u91c7\u96c6\uff0c\u5f88\u591a\u6ca1\u6709\u9002\u914d\u7684\u5e94\u7528\u4e5f\u4f1a\u6709\u7b2c\u4e09\u65b9 exporter \u5e2e\u5b83\u53bb\u9002\u914d Prometheus\uff0c\u6240\u4ee5\u76d1\u63a7\u7cfb\u7edf\u6211\u4eec\u901a\u5e38\u9996\u9009\u7528 Prometheus\uff0c\u672c\u7cfb\u5217\u6587\u7ae0\u4e5f\u5c06\u57fa\u4e8e Prometheus \u6765\u6253\u9020\u4e91\u539f\u751f\u73af\u5883\u4e0b\u7684\u5927\u578b\u5206\u5e03\u5f0f\u76d1\u63a7\u7cfb\u7edf\u3002","title":"1 \u6982\u8ff0"},{"location":"chap11/63prometheus_optimiztion/#2-prometheus","text":"Prometheus \u672c\u8eab\u53ea\u652f\u6301\u5355\u673a\u90e8\u7f72\uff0c\u6ca1\u6709\u81ea\u5e26\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\uff0c\u4e5f\u5c31\u4e0d\u652f\u6301\u9ad8\u53ef\u7528\u4ee5\u53ca\u6c34\u5e73\u6269\u5bb9\uff0c\u5728\u5927\u89c4\u6a21\u573a\u666f\u4e0b\uff0c\u6700\u8ba9\u4eba\u5173\u5fc3\u7684\u95ee\u9898\u662f\u5b83\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u53d7\u9650\u4e8e\u5355\u673a\u78c1\u76d8\u5bb9\u91cf\uff0c\u78c1\u76d8\u5bb9\u91cf\u51b3\u5b9a\u4e86\u5355\u4e2a Prometheus \u6240\u80fd\u5b58\u50a8\u7684\u6570\u636e\u91cf\uff0c\u6570\u636e\u91cf\u5927\u5c0f\u53c8\u53d6\u51b3\u4e8e\u88ab\u91c7\u96c6\u670d\u52a1\u7684\u6307\u6807\u6570\u91cf\u3001\u670d\u52a1\u6570\u91cf\u3001\u91c7\u96c6\u901f\u7387\u4ee5\u53ca\u6570\u636e\u8fc7\u671f\u65f6\u95f4\u3002 \u5728\u6570\u636e\u91cf\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u80fd\u5c31\u9700\u8981\u505a\u5f88\u591a\u53d6\u820d\uff0c\u6bd4\u5982\u4e22\u5f03\u4e0d\u91cd\u8981\u7684\u6307\u6807\u3001\u964d\u4f4e\u91c7\u96c6\u901f\u7387\u3001\u8bbe\u7f6e\u8f83\u77ed\u7684\u6570\u636e\u8fc7\u671f\u65f6\u95f4(\u9ed8\u8ba4\u53ea\u4fdd\u755915\u5929\u7684\u6570\u636e\uff0c\u770b\u4e0d\u5230\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e)\u3002 \u8fd9\u4e9b\u75db\u70b9\u5b9e\u9645\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u4f18\u5316\u624b\u6bb5\u6765\u6539\u5584\u7684\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u7ec6\u8bb2\u4e00\u4e0b\u3002","title":"2 \u5927\u89c4\u6a21\u573a\u666f\u4e0b Prometheus \u7684\u75db\u70b9"},{"location":"chap11/63prometheus_optimiztion/#3-prometheus","text":"Prometheus \u4e3b\u5f20\u6839\u636e\u529f\u80fd\u6216\u670d\u52a1\u7ef4\u5ea6\u8fdb\u884c\u62c6\u5206\uff0c\u5373\u5982\u679c\u8981\u91c7\u96c6\u7684\u670d\u52a1\u6bd4\u8f83\u591a\uff0c\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u5c31\u914d\u7f6e\u6210\u4ec5\u91c7\u96c6\u548c\u5b58\u50a8\u67d0\u4e00\u4e2a\u6216\u67d0\u4e00\u90e8\u5206\u670d\u52a1\u7684\u6307\u6807\uff0c \u8fd9\u6837\u6839\u636e\u8981\u91c7\u96c6\u7684\u670d\u52a1\u5c06 Prometheus \u62c6\u5206\u6210\u591a\u4e2a\u5b9e\u4f8b\u5206\u522b\u53bb\u91c7\u96c6\uff0c\u4e5f\u80fd\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8fbe\u5230\u6c34\u5e73\u6269\u5bb9\u7684\u76ee\u7684 \u3002 \u901a\u5e38\u8fd9\u6837\u7684\u6269\u5bb9\u65b9\u5f0f\u5df2\u7ecf\u80fd\u6ee1\u8db3\u5927\u90e8\u5206\u573a\u666f\u7684\u9700\u6c42\u4e86\uff0c\u6bd5\u7adf\u5355\u673a Prometheus \u5c31\u80fd\u91c7\u96c6\u548c\u5904\u7406\u5f88\u591a\u6570\u636e\u4e86\uff0c\u5f88\u5c11\u6709 Prometheus \u6491\u4e0d\u4f4f\u5355\u4e2a\u670d\u52a1\u7684\u573a\u666f\u3002\u4e0d\u8fc7\u5728\u8d85\u5927\u89c4\u6a21\u96c6\u7fa4\u4e0b\uff0c\u6709\u4e9b\u5355\u4e2a\u670d\u52a1\u7684\u4f53\u91cf\u4e5f\u5f88\u5927\uff0c\u5c31\u9700\u8981\u8fdb\u4e00\u6b65\u62c6\u5206\u4e86\uff0c\u6211\u4eec\u4e0b\u9762\u6765\u7ee7\u7eed\u8bb2\u4e0b\u5982\u4f55\u518d\u62c6\u5206\u3002","title":"3 \u4ece\u670d\u52a1\u7ef4\u5ea6\u62c6\u5206 Prometheus"},{"location":"chap11/63prometheus_optimiztion/#4","text":"\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u96c6\u7fa4\u8282\u70b9\u6570\u91cf\u8fbe\u5230\u4e0a\u5343\u751a\u81f3\u51e0\u5343\u7684\u89c4\u6a21\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u8282\u70b9\u7ea7\u670d\u52a1\u66b4\u9732\u7684\u6307\u6807\uff0c\u6bd4\u5982 kubelet \u5185\u7f6e\u7684 cadvisor \u66b4\u9732\u7684\u5bb9\u5668\u76f8\u5173\u7684\u6307\u6807\uff0c\u53c8\u6216\u8005\u90e8\u7f72\u7684 DeamonSet node-exporter \u66b4\u9732\u7684\u8282\u70b9\u76f8\u5173\u7684\u6307\u6807\uff0c\u5728\u96c6\u7fa4\u89c4\u6a21\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u8fd9\u79cd\u5355\u4e2a\u670d\u52a1\u80cc\u540e\u7684\u6307\u6807\u6570\u636e\u4f53\u91cf\u5c31\u975e\u5e38\u5927\uff1b \u8fd8\u6709\u4e00\u4e9b\u7528\u6237\u91cf\u8d85\u5927\u7684\u4e1a\u52a1\uff0c\u5355\u4e2a\u670d\u52a1\u7684 pod \u526f\u672c\u6570\u5c31\u53ef\u80fd\u8fc7\u5343\uff0c\u8fd9\u79cd\u670d\u52a1\u80cc\u540e\u7684\u6307\u6807\u6570\u636e\u4e5f\u975e\u5e38\u5927\uff0c\u5f53\u7136\u8fd9\u662f\u6700\u7f55\u89c1\u7684\u573a\u666f\uff0c\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u7684\u4eba\u6765\u8bf4\u8fd9\u79cd\u573a\u666f\u90fd\u53ea\u6562 YY \u4e00\u4e0b\uff0c\u5b9e\u9645\u5f88\u5c11\u6709\u5355\u4e2a\u670d\u52a1\u5c31\u8fbe\u5230\u8fd9\u4e48\u5927\u89c4\u6a21\u7684\u4e1a\u52a1\u3002 \u90a3\u4e48\u5982\u4f55\u4f18\u5316\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u7ed9\u8fd9\u79cd\u5927\u89c4\u6a21\u7c7b\u578b\u7684\u670d\u52a1\u505a\u4e00\u4e0b\u5206\u7247(Sharding)\uff0c\u5c06\u5176\u62c6\u5206\u6210\u591a\u4e2a group\uff0c\u8ba9\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u4ec5\u91c7\u96c6\u8fd9\u4e2a\u670d\u52a1\u80cc\u540e\u7684\u67d0\u4e00\u4e2a group \u7684\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u5927\u4f53\u91cf\u670d\u52a1\u7684\u76d1\u63a7\u6570\u636e\u62c6\u5206\u5230\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e0a\u3002 \u5982\u4f55\u5c06\u4e00\u4e2a\u670d\u52a1\u62c6\u6210\u591a\u4e2a group \u5462\uff1f\u4e0b\u9762\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6848\uff0c\u4ee5\u5bf9 kubelet cadvisor \u6570\u636e\u505a\u5206\u7247\u4e3a\u4f8b\u3002 \u7b2c\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528 Kubernetes \u7684\u670d\u52a1\u53d1\u73b0\uff0c\u81ea\u884c\u5b9e\u73b0\u4e00\u4e0b sharding \u7b97\u6cd5\uff0c\u6bd4\u5982\u9488\u5bf9\u8282\u70b9\u7ea7\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u5c06\u67d0\u4e2a\u8282\u70b9 shard \u5230\u67d0\u4e2a group \u91cc\uff0c\u7136\u540e\u518d\u5c06\u5176\u6ce8\u518c\u5230 Prometheus \u6240\u652f\u6301\u7684\u670d\u52a1\u53d1\u73b0\u6ce8\u518c\u4e2d\u5fc3\uff0c\u63a8\u8350 consul \uff0c\u6700\u540e\u5728 Prometheus \u914d\u7f6e\u6587\u4ef6\u52a0\u4e0a consul_sd_config \u7684\u914d\u7f6e\uff0c\u6307\u5b9a\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u8981\u91c7\u96c6\u7684 group\u3002 - job_name: 'cadvisor-1' consul_sd_configs: - server: 10.0.0.3:8500 services: - cadvisor-1 # This is the 2nd slave \u5728\u672a\u6765\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u5229\u7528 Kubernetes \u7684 EndpointSlice \u7279\u6027\u6765\u505a\u670d\u52a1\u53d1\u73b0\u548c\u5206\u7247\u5904\u7406\uff0c\u5728\u8d85\u5927\u89c4\u6a21\u670d\u52a1\u573a\u666f\u4e0b\u5c31\u53ef\u4ee5\u4e0d\u9700\u8981\u5176\u5b83\u7684\u670d\u52a1\u53d1\u73b0\u548c\u5206\u7247\u673a\u5236\u3002\u4e0d\u8fc7\u6682\u65f6\u6b64\u7279\u6027\u8fd8\u4e0d\u591f\u6210\u719f\uff0c\u6ca1\u6709\u9ed8\u8ba4\u542f\u7528\uff0c\u4e0d\u63a8\u8350\u7528(\u5f53\u524d Kubernentes \u6700\u65b0\u7248\u672c\u4e3a 1.18)\u3002 \u7b2c\u4e8c\uff0c\u7528 Kubernetes \u7684 node \u670d\u52a1\u53d1\u73b0\uff0c\u518d\u5229\u7528 Prometheus relabel \u914d\u7f6e\u7684 hashmod \u6765\u5bf9 node \u505a\u5206\u7247\uff0c\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u4ec5\u6293\u5176\u4e2d\u4e00\u4e2a\u5206\u7247\u4e2d\u7684\u6570\u636e: - job_name: 'cadvisor-1' metrics_path: /metrics/cadvisor scheme: https # \u8bf7\u6c42 kubelet metrics \u63a5\u53e3\u4e5f\u9700\u8981\u8ba4\u8bc1\u548c\u6388\u6743\uff0c\u901a\u5e38\u4f1a\u7528 webhook \u65b9\u5f0f\u8ba9 apiserver \u4ee3\u7406\u8fdb\u884cRBAC \u6821\u9a8c\uff0c\u6240\u4ee5\u8fd8\u662f\u7528 ServiceAccount \u7684 token bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node # \u901a\u5e38\u4e0d\u6821\u9a8c kubelet \u7684 server \u8bc1\u4e66\uff0c\u907f\u514d\u62a5 x509: certificate signed by unknown authority tls_config: insecure_skip_verify: true relabel_configs: - source_labels: [__address__] modulus: 4 # \u5c06\u8282\u70b9\u5206\u7247\u6210 4 \u4e2a group target_label: __tmp_hash action: hashmod - source_labels: [__tmp_hash] regex: ^1$ # \u53ea\u6293\u7b2c 2 \u4e2a group \u4e2d\u8282\u70b9\u7684\u6570\u636e(\u5e8f\u53f7 0 \u4e3a\u7b2c 1 \u4e2a group) action: keep \u62c6\u5206\u5f15\u5165\u7684\u65b0\u95ee\u9898 \u524d\u9762\u6211\u4eec\u901a\u8fc7\u4e0d\u901a\u5c42\u9762\u5bf9 Prometheus \u8fdb\u884c\u4e86\u62c6\u5206\u90e8\u7f72\uff0c \u4e00\u65b9\u9762\u4f7f\u5f97 Prometheus \u80fd\u591f\u5b9e\u73b0\u6c34\u5e73\u6269\u5bb9\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u52a0\u5267\u4e86\u76d1\u63a7\u6570\u636e\u843d\u76d8\u7684\u5206\u6563\u7a0b\u5ea6 \uff0c\u4f7f\u7528 Grafana \u67e5\u8be2\u76d1\u63a7\u6570\u636e\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u6dfb\u52a0\u8bb8\u591a\u6570\u636e\u6e90\uff0c\u800c\u4e14\u4e0d\u540c\u6570\u636e\u6e90\u4e4b\u95f4\u7684\u6570\u636e\u8fd8\u4e0d\u80fd\u805a\u5408\u67e5\u8be2\uff0c\u76d1\u63a7\u9875\u9762\u4e5f\u770b\u4e0d\u5230\u5168\u5c40\u7684\u89c6\u56fe\uff0c\u9020\u6210\u67e5\u8be2\u6df7\u4e71\u7684\u5c40\u9762\u3002 \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u9762\u7684\u4e24\u65b9\u9762\u5165\u624b\uff0c\u4efb\u9009\u5176\u4e2d\u4e00\u79cd\u65b9\u6848\u3002","title":"4 \u5bf9\u8d85\u5927\u89c4\u6a21\u7684\u670d\u52a1\u505a\u5206\u7247"},{"location":"chap11/63prometheus_optimiztion/#4-1","text":"\u6211\u4eec\u53ef\u4ee5\u8ba9 Prometheus \u4e0d\u8d1f\u8d23\u5b58\u50a8\uff0c\u4ec5\u91c7\u96c6\u6570\u636e\u5e76\u901a\u8fc7 remote write \u65b9\u5f0f\u5199\u5165\u8fdc\u7a0b\u5b58\u50a8\u7684 adapter\uff0c\u8fdc\u7a0b\u5b58\u50a8\u4f7f\u7528 OpenTSDB \u6216 InfluxDB \u8fd9\u4e9b\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\u7684\u65f6\u5e8f\u6570\u636e\u5e93\uff0cPrometheus \u914d\u7f6e: remote_write: - url: http://10.0.0.2:8888/write \u7136\u540e Grafana \u6dfb\u52a0\u6211\u4eec\u4f7f\u7528\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u4f5c\u4e3a\u6570\u636e\u6e90\u6765\u67e5\u8be2\u76d1\u63a7\u6570\u636e\u6765\u5c55\u793a\uff0c\u67b6\u6784\u56fe: \u8fd9\u79cd\u65b9\u5f0f\u76f8\u5f53\u4e8e\u66f4\u6362\u4e86\u5b58\u50a8\u5f15\u64ce\uff0c\u7531\u5176\u5b83\u652f\u6301\u5b58\u50a8\u6c34\u5e73\u6269\u5bb9\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u6765\u5b58\u50a8\u5e9e\u5927\u7684\u6570\u636e\u91cf\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6570\u636e\u96c6\u4e2d\u5230\u4e00\u8d77\u3002OpenTSDB \u652f\u6301 HBase, BigTable \u4f5c\u4e3a\u5b58\u50a8\u540e\u7aef\uff0cInfluxDB \u4f01\u4e1a\u7248\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\u548c\u6c34\u5e73\u6269\u5bb9(\u5f00\u6e90\u7248\u4e0d\u652f\u6301)\u3002 \u4e0d\u8fc7\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u4f7f\u7528\u53cb\u597d\u4e14\u5f3a\u5927\u7684 PromQL \u6765\u67e5\u8be2\u76d1\u63a7\u6570\u636e\u4e86\uff0c\u5fc5\u987b\u4f7f\u7528\u6211\u4eec\u5b58\u50a8\u6570\u636e\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u6240\u652f\u6301\u7684\u8bed\u6cd5\u6765\u67e5\u8be2 \u3002","title":"4-1 \u96c6\u4e2d\u6570\u636e\u5b58\u50a8"},{"location":"chap11/63prometheus_optimiztion/#4-2-prometheus","text":"\u9664\u4e86\u4e0a\u9762\u66f4\u6362\u5b58\u50a8\u5f15\u64ce\u7684\u65b9\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u5c06 Prometheus \u8fdb\u884c\u8054\u90a6\u90e8\u7f72\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5c06\u591a\u4e2a Prometheus \u5b9e\u4f8b\u91c7\u96c6\u7684\u6570\u636e\u518d\u7528\u53e6\u4e00\u4e2a Prometheus \u91c7\u96c6\u6c47\u603b\u5230\u4e00\u8d77\uff0c\u8fd9\u6837\u4e5f\u610f\u5473\u7740\u9700\u8981\u6d88\u8017\u66f4\u591a\u7684\u8d44\u6e90\u3002\u901a\u5e38\u6211\u4eec\u53ea\u628a\u9700\u8981\u805a\u5408\u7684\u6570\u636e\u6216\u8005\u9700\u8981\u5728\u4e00\u4e2a\u5730\u65b9\u5c55\u793a\u7684\u6570\u636e\u7528\u8fd9\u79cd\u65b9\u5f0f\u91c7\u96c6\u6c47\u603b\u5230\u4e00\u8d77\uff0c\u6bd4\u5982 Kubernetes \u8282\u70b9\u6570\u8fc7\u591a\uff0ccadvisor \u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e0a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u5c06 cadvisor \u66b4\u9732\u7684\u5bb9\u5668\u6307\u6807\u6c47\u603b\u8d77\u6765\uff0c\u4ee5\u4fbf\u4e8e\u5728\u4e00\u4e2a\u5730\u65b9\u5c31\u80fd\u67e5\u8be2\u5230\u96c6\u7fa4\u4e2d\u4efb\u610f\u4e00\u4e2a\u5bb9\u5668\u7684\u76d1\u63a7\u6570\u636e\u6216\u8005\u67d0\u4e2a\u670d\u52a1\u80cc\u540e\u6240\u6709\u5bb9\u5668\u7684\u76d1\u63a7\u6570\u636e\u7684\u805a\u5408\u6c47\u603b\u4ee5\u53ca\u914d\u7f6e\u544a\u8b66\uff1b \u53c8\u6216\u8005\u591a\u4e2a\u670d\u52a1\u6709\u5173\u8054\uff0c\u6bd4\u5982\u901a\u5e38\u5e94\u7528\u53ea\u66b4\u9732\u4e86\u5b83\u5e94\u7528\u76f8\u5173\u7684\u6307\u6807\uff0c\u4f46\u5b83\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5(\u6bd4\u5982 cpu \u548c \u5185\u5b58) \u7531 cadvisor \u6765\u611f\u77e5\u548c\u66b4\u9732\uff0c\u8fd9\u4e24\u90e8\u5206\u6307\u6807\u7531\u4e0d\u540c\u7684 Prometheus \u5b9e\u4f8b\u6240\u91c7\u96c6\uff0c\u8fd9\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u5c06\u6570\u636e\u6c47\u603b\uff0c\u5728\u4e00\u4e2a\u5730\u65b9\u5c55\u793a\u548c\u914d\u7f6e\u544a\u8b66\u3002 \u66f4\u591a\u8bf4\u660e\u548c\u914d\u7f6e\u793a\u4f8b\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863: https://prometheus.io/docs/prometheus/latest/federation/","title":"4-2 Prometheus \u8054\u90a6"},{"location":"chap11/63prometheus_optimiztion/#4-3-prometheus","text":"\u867d\u7136\u4e0a\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u5217\u64cd\u4f5c\u5c06 Prometheus \u8fdb\u884c\u4e86\u5206\u5e03\u5f0f\u6539\u9020\uff0c\u4f46\u5e76\u6ca1\u6709\u89e3\u51b3 Prometheus \u672c\u8eab\u7684\u9ad8\u53ef\u7528\u95ee\u9898\uff0c\u5373\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u5b9e\u4f8b\u6302\u4e86\uff0c\u6570\u636e\u7684\u67e5\u8be2\u548c\u5b8c\u6574\u6027\u90fd\u5c06\u53d7\u5230\u5f71\u54cd\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709 Prometheus \u5b9e\u4f8b\u90fd\u4f7f\u7528\u4e24\u4e2a\u76f8\u540c\u526f\u672c\uff0c\u5206\u522b\u6302\u8f7d\u6570\u636e\u76d8\uff0c\u5b83\u4eec\u90fd\u91c7\u96c6\u76f8\u540c\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\uff0c\u67e5\u8be2\u5b83\u4eec\u4e4b\u4e2d\u4efb\u610f\u4e00\u4e2a\u90fd\u53ef\u4ee5\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u5b83\u4eec\u524d\u9762\u518d\u6302\u4e00\u5c42\u8d1f\u8f7d\u5747\u8861\uff0c\u6240\u6709\u67e5\u8be2\u90fd\u7ecf\u8fc7\u8fd9\u4e2a\u8d1f\u8f7d\u5747\u8861\u5206\u6d41\u5230\u5176\u4e2d\u4e00\u53f0 Prometheus\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u53f0\u6302\u6389\u5c31\u4ece\u8d1f\u8f7d\u5217\u8868\u91cc\u8e22\u6389\u4e0d\u518d\u8f6c\u53d1\u3002 \u8fd9\u91cc\u7684\u8d1f\u8f7d\u5747\u8861\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u73af\u5883\u9009\u62e9\u5408\u9002\u7684\u65b9\u6848\uff0c\u53ef\u4ee5\u7528 Nginx \u6216 HAProxy\uff0c\u5728 Kubernetes \u73af\u5883\uff0c\u901a\u5e38\u4f7f\u7528 Kubernentes \u7684 Service\uff0c\u7531 kube-proxy \u751f\u6210\u7684 iptables/ipvs \u89c4\u5219\u8f6c\u53d1\uff0c\u5982\u679c\u4f7f\u7528 Istio\uff0c\u8fd8\u53ef\u4ee5\u7528 VirtualService\uff0c\u7531 envoy sidecar \u53bb\u8f6c\u53d1\u3002 \u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86 Prometheus \u7684\u9ad8\u53ef\u7528\uff0c\u7b80\u5355\u8d77\u89c1\uff0c\u4e0a\u9762\u7684\u56fe\u4ec5\u5c55\u793a\u5355\u4e2a Prometheus \u7684\u9ad8\u53ef\u7528\uff0c\u5f53\u4f60\u53ef\u4ee5\u5c06\u5176\u62d3\u5c55\uff0c\u4ee3\u5165\u5e94\u7528\u5230\u4e0a\u9762\u5176\u5b83\u7684\u4f18\u5316\u624b\u6bb5\u4e2d\uff0c\u5b9e\u73b0\u6574\u4f53\u7684\u9ad8\u53ef\u7528\u3002","title":"4-3 Prometheus \u9ad8\u53ef\u7528"},{"location":"chap11/63prometheus_optimiztion/#5","text":"\u901a\u8fc7\u672c\u6587\u4e00\u7cfb\u5217\u5bf9 Prometheus \u7684\u4f18\u5316\u624b\u6bb5\uff0c\u6211\u4eec\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u5355\u673a Prometheus \u5728\u5927\u89c4\u6a21\u573a\u666f\u4e0b\u7684\u75db\u70b9\uff0c\u4f46\u64cd\u4f5c\u548c\u8fd0\u7ef4\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u5e76\u4e14\u4e0d\u80fd\u591f\u5f88\u597d\u7684\u652f\u6301\u6570\u636e\u7684\u957f\u671f\u5b58\u50a8(long term storage)\u3002\u5bf9\u4e8e\u4e00\u4e9b\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff0c\u6211\u4eec\u901a\u5e38\u67e5\u770b\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u4f46\u4e5f\u5e0c\u671b\u80fd\u591f\u4f4e\u6210\u672c\u7684\u4fdd\u7559\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u6570\u636e\u5982\u679c\u5168\u90e8\u843d\u76d8\u5230\u78c1\u76d8\u6210\u672c\u662f\u5f88\u9ad8\u7684\uff0c\u5e76\u4e14\u5bb9\u91cf\u6709\u9650\uff0c\u5373\u4fbf\u5229\u7528\u6c34\u5e73\u6269\u5bb9\u53ef\u4ee5\u589e\u52a0\u5b58\u50a8\u5bb9\u91cf\uff0c\u4f46\u540c\u65f6\u4e5f\u589e\u5927\u4e86\u8d44\u6e90\u6210\u672c\uff0c\u4e0d\u53ef\u80fd\u65e0\u9650\u6269\u5bb9\uff0c\u6240\u4ee5\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u6570\u636e\u8fc7\u671f\u7b56\u7565\uff0c\u4e5f\u5c31\u4f1a\u4e22\u5931\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u4e0d\u5e38\u7528\u7684\u51b7\u6570\u636e\uff0c\u6700\u7406\u60f3\u7684\u65b9\u5f0f\u5c31\u662f\u5b58\u5230\u5ec9\u4ef7\u7684\u5bf9\u8c61\u5b58\u50a8\u4e2d\uff0c\u7b49\u9700\u8981\u67e5\u8be2\u7684\u65f6\u5019\u80fd\u591f\u81ea\u52a8\u52a0\u8f7d\u51fa\u6765\u3002Thanos \u53ef\u4ee5\u5e2e\u6211\u4eec\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u5b83\u5b8c\u5168\u517c\u5bb9 Prometheus API\uff0c\u63d0\u4f9b\u7edf\u4e00\u67e5\u8be2\u805a\u5408\u5206\u5e03\u5f0f\u90e8\u7f72\u7684 Prometheus \u6570\u636e\u7684\u80fd\u529b\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u6570\u636e\u957f\u671f\u5b58\u50a8\u5230\u5404\u79cd\u5bf9\u8c61\u5b58\u50a8(\u65e0\u9650\u5b58\u50a8\u80fd\u529b)\u4ee5\u53ca\u964d\u4f4e\u91c7\u6837\u7387\u6765\u52a0\u901f\u5927\u65f6\u95f4\u8303\u56f4\u7684\u6570\u636e\u67e5\u8be2\u3002","title":"5 \u603b\u7ed3"},{"location":"chap11/64thanos_detail/","text":"\u7b2c\u4e03\u8282 (Thaos2-2022)Thanos\u67b6\u6784\u8be6\u89e3 Prometheus \u4f18\u5316\u5230\u9002\u914d\u5927\u89c4\u6a21\u573a\u666f\uff0c\u90e8\u7f72\u548c\u540e\u671f\u7ef4\u62a4\u9ebb\u70e6\u4e14\u590d\u6742\u4e0d\u8bf4\uff0c\u8fd8\u6709\u5f88\u591a\u4e0d\u5b8c\u7f8e\u7684\u5730\u65b9\uff0c\u5e76\u4e14\u8fd8\u65e0\u6cd5\u6ee1\u8db3\u4e00\u4e9b\u66f4\u9ad8\u7ea7\u7684\u8bc9\u6c42\uff0c\u6bd4\u5982\u67e5\u770b\u65f6\u95f4\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u65f6\u95f4\u4e45\u8fdc\u4e0d\u5e38\u7528\u7684 \u201c\u51b7\u6570\u636e\u201d\uff0c\u6700\u7406\u60f3\u7684\u65b9\u5f0f\u5c31\u662f\u5b58\u5230\u5ec9\u4ef7\u7684\u5bf9\u8c61\u5b58\u50a8\u4e2d\uff0c\u7b49\u9700\u8981\u67e5\u8be2\u7684\u65f6\u5019\u80fd\u591f\u81ea\u52a8\u52a0\u8f7d\u51fa\u6765\u3002 Thanos (\u6ca1\u9519\uff0c\u5c31\u662f\u706d\u9738) \u53ef\u4ee5\u5e2e\u6211\u4eec\u7b80\u5316\u5206\u5e03\u5f0f Prometheus \u7684\u90e8\u7f72\u4e0e\u7ba1\u7406\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7684\u9ad8\u7ea7\u7279\u6027\uff1a \u5168\u5c40\u89c6\u56fe\uff0c\u957f\u671f\u5b58\u50a8\uff0c\u9ad8\u53ef\u7528\u3002\u4e0b\u9762\u6211\u4eec\u6765\u8be6\u7ec6\u8bb2\u89e3\u4e00\u4e0b \u3002 1 Thanos \u67b6\u6784 \u8fd9\u662f\u5b98\u65b9\u7ed9\u51fa\u7684\u67b6\u6784\u56fe\uff1a \u8fd9\u5f20\u56fe\u4e2d\u5305\u542b\u4e86 Thanos \u7684\u51e0\u4e2a\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4f46\u5e76\u4e0d\u5305\u62ec\u6240\u6709\u7ec4\u4ef6\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u6211\u4eec\u5148\u4e0d\u7ec6\u8bb2\uff0c\u7b80\u5355\u4ecb\u7ecd\u4e0b\u56fe\u4e2d\u8fd9\u51e0\u4e2a\u7ec4\u4ef6\u7684\u4f5c\u7528\uff1a Thanos Query : \u5b9e\u73b0\u4e86 Prometheus API\uff0c \u5c06\u6765\u81ea\u4e0b\u6e38\u7ec4\u4ef6\u63d0\u4f9b\u7684\u6570\u636e\u8fdb\u884c\u805a\u5408\u6700\u7ec8\u8fd4\u56de\u7ed9\u67e5\u8be2\u6570\u636e\u7684 client (\u5982 grafana)\uff0c\u7c7b\u4f3c\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6 \u3002 Thanos Sidecar : \u8fde\u63a5 Prometheus\uff0c\u5c06\u5176\u6570\u636e\u63d0\u4f9b\u7ed9 Thanos Query \u67e5\u8be2\uff0c \u5e76\u4e14/\u6216\u8005\u5c06\u5176\u4e0a\u4f20\u5230 \u5bf9\u8c61\u5b58\u50a8\uff0c\u4ee5\u4f9b\u957f\u671f\u5b58\u50a8 \u3002 Thanos Store Gateway : \u5c06\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\u66b4\u9732\u7ed9 Thanos Query \u53bb\u67e5\u8be2 \u3002 Thanos Ruler : \u5bf9\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u8bc4\u4f30\u548c\u544a\u8b66\uff0c\u8fd8\u53ef\u4ee5\u8ba1\u7b97\u51fa\u65b0\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5c06\u8fd9\u4e9b\u65b0\u6570\u636e\u63d0\u4f9b\u7ed9 Thanos Query \u67e5\u8be2\u5e76\u4e14/\u6216\u8005\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u4ee5\u4f9b\u957f\u671f\u5b58\u50a8 \u3002 Thanos Compact : \u5c06\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\u548c\u964d\u4f4e\u91c7\u6837\u7387\uff0c\u52a0\u901f\u5927\u65f6\u95f4\u533a\u95f4\u76d1\u63a7\u6570\u636e\u67e5\u8be2\u7684\u901f\u5ea6 \u3002 1-1 \u67b6\u6784\u8bbe\u8ba1\u5256\u6790 \u5982\u4f55\u7406\u89e3 Thanos \u7684\u67b6\u6784\u8bbe\u8ba1\u7684\uff1f\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5148 YY \u4e00\u4e0b\uff0c\u8981\u662f\u81ea\u5df1\u6765\u8bbe\u8ba1\u4e00\u4e2a\u5206\u5e03\u5f0f Prometheus \u7ba1\u7406\u5e94\u7528\uff0c\u4f1a\u600e\u4e48\u505a\uff1f Query \u4e0e Sidecar \u9996\u5148\uff0c\u76d1\u63a7\u6570\u636e\u7684\u67e5\u8be2\u80af\u5b9a\u4e0d\u80fd\u76f4\u63a5\u67e5 Prometheus \u4e86\uff0c\u56e0\u4e3a\u4f1a\u5b58\u5728\u8bb8\u591a\u4e2a Prometheus \u5b9e\u4f8b\uff0c\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u53ea\u80fd\u611f\u77e5\u5b83\u81ea\u5df1\u6240\u91c7\u96c6\u7684\u6570\u636e\u3002 \u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u8054\u60f3\u5230\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\uff0c\u6bcf\u4e2a\u6570\u636e\u5e93\u90fd\u53ea\u5b58\u4e86\u4e00\u90e8\u5206\u6570\u636e\uff0c\u4e2d\u95f4\u4ef6\u80fd\u611f\u77e5\u5230\u6240\u6709\u6570\u636e\u5e93\uff0c\u6570\u636e\u67e5\u8be2\u90fd\u7ecf\u8fc7\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\u6765\u67e5\uff0c\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u6536\u5230\u67e5\u8be2\u8bf7\u6c42\u518d\u53bb\u67e5\u4e0b\u6e38\u5404\u4e2a\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u6570\u636e\u805a\u5408\u6c47\u603b\u8fd4\u56de\u7ed9\u67e5\u8be2\u7684\u5ba2\u6237\u7aef\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5c06\u5206\u5e03\u5f0f\u5b58\u50a8\u7684\u6570\u636e\u96c6\u4e2d\u67e5\u8be2\u3002 \u90a3\u4e48 Thanos Query \u53c8\u5982\u4f55\u53bb\u67e5\u4e0b\u6e38\u5206\u6563\u7684\u6570\u636e\u5462 \uff1f Thanos \u4e3a\u6b64\u62bd\u8c61\u4e86\u4e00\u5957\u53eb Store API \u7684\u5185\u90e8 gRPC \u63a5\u53e3\uff0c\u5176\u5b83\u4e00\u4e9b\u7ec4\u4ef6\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u6765\u66b4\u9732\u6570\u636e\u7ed9 Thanos Query\uff0c\u5b83\u81ea\u8eab\u4e5f\u5c31\u53ef\u4ee5\u505a\u5230\u5b8c\u5168\u65e0\u72b6\u6001\u90e8\u7f72\uff0c\u5b9e\u73b0\u9ad8\u53ef\u7528\u4e0e\u52a8\u6001\u6269\u5c55\u3002 \u8fd9\u4e9b\u5206\u6563\u7684\u6570\u636e\u53ef\u80fd\u6765\u81ea\u54ea\u4e9b\u5730\u65b9\u5462\uff1f \u9996\u5148\uff0cPrometheus \u4f1a\u5c06\u91c7\u96c6\u7684\u6570\u636e\u5b58\u5230\u672c\u673a\u78c1\u76d8\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u7528\u8fd9\u4e9b\u5206\u6563\u5728\u5404\u4e2a\u78c1\u76d8\u4e0a\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u7ed9\u6bcf\u4e2a Prometheus \u9644\u5e26\u90e8\u7f72\u4e00\u4e2a Sidecar\uff0c\u8fd9\u4e2a Sidecar \u5b9e\u73b0 Thanos Store API\uff0c\u5f53 Thanos Query \u5bf9\u5176\u53d1\u8d77\u67e5\u8be2\u65f6\uff0cSidecar \u5c31\u8bfb\u53d6\u8ddf\u5b83\u7ed1\u5b9a\u90e8\u7f72\u7684 Prometheus \u5b9e\u4f8b\u4e0a\u7684\u76d1\u63a7\u6570\u636e\u8fd4\u56de\u7ed9 Thanos Query\u3002 \u7531\u4e8e Thanos Query \u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u4e0e\u53bb\u91cd\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f88\u8f7b\u677e\u5b9e\u73b0\u9ad8\u53ef\u7528\uff1a \u76f8\u540c\u7684 Prometheus \u90e8\u7f72\u591a\u4e2a\u526f\u672c(\u90fd\u9644\u5e26 Sidecar)\uff0c\u7136\u540e Thanos Query \u53bb\u6240\u6709 Sidecar \u67e5\u6570\u636e\uff0c\u5373\u4fbf\u6709\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u6302\u6389\u8fc7\u4e00\u6bb5\u65f6\u95f4\uff0c\u6570\u636e\u805a\u5408\u4e0e\u53bb\u91cd\u540e\u4ecd\u7136\u80fd\u5f97\u5230\u5b8c\u6574\u6570\u636e \u3002 \u8fd9\u79cd\u9ad8\u53ef\u7528\u505a\u6cd5\u8fd8\u5f25\u8865\u4e86\u6211\u4eec\u4e0a\u7bc7\u6587\u7ae0\u4e2d\u7528\u8d1f\u8f7d\u5747\u8861\u53bb\u5b9e\u73b0 Prometheus \u9ad8\u53ef\u7528\u65b9\u6cd5\u7684\u7f3a\u9677\uff1a\u5982\u679c\u5176\u4e2d\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u6302\u4e86\u4e00\u6bb5\u65f6\u95f4\u7136\u540e\u53c8\u6062\u590d\u4e86\uff0c\u5b83\u7684\u6570\u636e\u5c31\u4e0d\u5b8c\u6574\uff0c\u5f53\u8d1f\u8f7d\u5747\u8861\u8f6c\u53d1\u5230\u5b83\u4e0a\u9762\u53bb\u67e5\u6570\u636e\u65f6\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u5c31\u53ef\u80fd\u4f1a\u6709\u90e8\u5206\u7f3a\u5931\u3002 \u4e0d\u8fc7\u56e0\u4e3a\u78c1\u76d8\u7a7a\u95f4\u6709\u9650\uff0c\u6240\u4ee5 Prometheus \u5b58\u50a8\u76d1\u63a7\u6570\u636e\u7684\u80fd\u529b\u4e5f\u662f\u6709\u9650\u7684\uff0c\u901a\u5e38\u4f1a\u7ed9 Prometheus \u8bbe\u7f6e\u4e00\u4e2a\u6570\u636e\u8fc7\u671f\u65f6\u95f4 (\u9ed8\u8ba415\u5929) \u6216\u8005\u6700\u5927\u6570\u636e\u91cf\u5927\u5c0f\uff0c\u4e0d\u65ad\u6e05\u7406\u65e7\u6570\u636e\u4ee5\u4fdd\u8bc1\u78c1\u76d8\u4e0d\u88ab\u6491\u7206\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u65e0\u6cd5\u770b\u5230\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff0c\u6709\u65f6\u5019\u8fd9\u4e5f\u7ed9\u6211\u4eec\u7684\u95ee\u9898\u6392\u67e5\u548c\u6570\u636e\u7edf\u8ba1\u9020\u6210\u4e00\u4e9b\u56f0\u96be\u3002 \u5bf9\u4e8e\u9700\u8981\u957f\u671f\u5b58\u50a8\u7684\u6570\u636e\uff0c\u5e76\u4e14\u4f7f\u7528\u9891\u7387\u4e0d\u90a3\u4e48\u9ad8\uff0c\u6700\u7406\u60f3\u7684\u65b9\u5f0f\u662f\u5b58\u8fdb\u5bf9\u8c61\u5b58\u50a8\uff0c\u5404\u5927\u4e91\u5382\u5546\u90fd\u6709\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u7279\u70b9\u662f\u4e0d\u9650\u5236\u5bb9\u91cf\uff0c\u4ef7\u683c\u975e\u5e38\u4fbf\u5b9c\u3002 Thanos \u6709\u51e0\u4e2a\u7ec4\u4ef6\u90fd\u652f\u6301\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5404\u79cd\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58 (Prometheus TSDB \u6570\u636e\u683c\u5f0f)\uff0c\u6bd4\u5982\u6211\u4eec\u521a\u521a\u8bf4\u7684 Sidecar: Store Gateway \u90a3\u4e48\u8fd9\u4e9b\u88ab\u4e0a\u4f20\u5230\u4e86\u5bf9\u8c61\u5b58\u50a8\u91cc\u7684\u76d1\u63a7\u6570\u636e\u8be5\u5982\u4f55\u67e5\u8be2\u5462\uff1f \u7406\u8bba\u4e0a Thanos Query \u4e5f\u53ef\u4ee5\u76f4\u63a5\u53bb\u5bf9\u8c61\u5b58\u50a8\u67e5\uff0c \u4f46\u4f1a\u8ba9 Thanos Query \u7684\u903b\u8f91\u53d8\u7684\u5f88\u91cd \u3002 \u6211\u4eec\u521a\u624d\u4e5f\u770b\u5230\u4e86\uff0c Thanos \u62bd\u8c61\u51fa\u4e86 Store API\uff0c\u53ea\u8981\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u4f5c\u4e3a Thanos Query \u67e5\u8be2\u7684\u6570\u636e\u6e90\uff0cThanos Store Gateway \u8fd9\u4e2a\u7ec4\u4ef6\u4e5f\u5b9e\u73b0\u4e86 Store API\uff0c\u5411 Thanos Query \u66b4\u9732\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e \u3002 Thanos Store Gateway \u5185\u90e8\u8fd8\u505a\u4e86\u4e00\u4e9b\u52a0\u901f\u6570\u636e\u83b7\u53d6\u7684\u4f18\u5316\u903b\u8f91\uff0c \u4e00\u662f\u7f13\u5b58\u4e86 TSDB \u7d22\u5f15\uff0c\u4e8c\u662f\u4f18\u5316\u4e86\u5bf9\u8c61\u5b58\u50a8\u7684\u8bf7\u6c42 (\u7528\u5c3d\u53ef\u80fd\u5c11\u7684\u8bf7\u6c42\u91cf\u62ff\u5230\u6240\u6709\u9700\u8981\u7684\u6570\u636e) \u3002 \u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u76d1\u63a7\u6570\u636e\u7684\u957f\u671f\u50a8\u5b58\uff0c\u7531\u4e8e\u5bf9\u8c61\u5b58\u50a8\u5bb9\u91cf\u65e0\u9650\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u6211\u4eec\u53ef\u4ee5\u5b58\u4efb\u610f\u65f6\u957f\u7684\u6570\u636e\uff0c\u76d1\u63a7\u5386\u53f2\u6570\u636e\u4e5f\u5c31\u53d8\u5f97\u53ef\u8ffd\u6eaf\u67e5\u8be2\uff0c\u4fbf\u4e8e\u95ee\u9898\u6392\u67e5\u4e0e\u7edf\u8ba1\u5206\u6790\u3002 Ruler \u6709\u4e00\u4e2a\u95ee\u9898\uff0cPrometheus \u4e0d\u4ec5\u4ec5\u53ea\u652f\u6301\u5c06\u91c7\u96c6\u7684\u6570\u636e\u8fdb\u884c\u5b58\u50a8\u548c\u67e5\u8be2\u7684\u529f\u80fd\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e9b rules: \u6839\u636e\u914d\u7f6e\u4e0d\u65ad\u8ba1\u7b97\u51fa\u65b0\u6307\u6807\u6570\u636e\u5e76\u5b58\u50a8\uff0c\u540e\u7eed\u67e5\u8be2\u65f6\u76f4\u63a5\u4f7f\u7528\u8ba1\u7b97\u597d\u7684\u65b0\u6307\u6807\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u8f7b\u67e5\u8be2\u65f6\u7684\u8ba1\u7b97\u538b\u529b\uff0c\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\u3002 \u4e0d\u65ad\u8ba1\u7b97\u548c\u8bc4\u4f30\u662f\u5426\u8fbe\u5230\u544a\u8b66\u9600\u503c\uff0c\u5f53\u8fbe\u5230\u9600\u503c\u65f6\u5c31\u901a\u77e5 AlertManager \u6765\u89e6\u53d1\u544a\u8b66\u3002 \u7531\u4e8e\u6211\u4eec\u5c06 Prometheus \u8fdb\u884c\u5206\u5e03\u5f0f\u90e8\u7f72\uff0c\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u672c\u5730\u5e76\u6ca1\u6709\u5b8c\u6574\u6570\u636e\uff0c\u6709\u4e9b\u6709\u5173\u8054\u7684\u6570\u636e\u53ef\u80fd\u5b58\u5728\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e2d\uff0c\u5355\u673a Prometheus \u770b\u4e0d\u5230\u6570\u636e\u7684\u5168\u5c40\u89c6\u56fe\uff0c\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5c31\u4e0d\u80fd\u4f9d\u8d56 Prometheus \u6765\u505a\u8fd9\u4e9b\u5de5\u4f5c\uff0c Thanos Ruler \u5e94\u8fd0\u800c\u751f\uff0c\u5b83\u901a\u8fc7\u67e5\u8be2 Thanos Query \u83b7\u53d6\u5168\u5c40\u6570\u636e\uff0c\u7136\u540e\u6839\u636e rules \u914d\u7f6e\u8ba1\u7b97\u65b0\u6307\u6807\u5e76\u5b58\u50a8\uff0c\u540c\u65f6\u4e5f\u901a\u8fc7 Store API \u5c06\u6570\u636e\u66b4\u9732\u7ed9 Thanos Query\uff0c\u540c\u6837\u8fd8\u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58 (\u8fd9\u91cc\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u4e00\u6837\u4e5f\u662f\u901a\u8fc7 Thanos Store Gateway \u66b4\u9732\u7ed9 Thanos Query)\u3002 \u770b\u8d77\u6765 Thanos Query \u8ddf Thanos Ruler \u4e4b\u95f4\u4f1a\u76f8\u4e92\u67e5\u8be2\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u4e0d\u51b2\u7a81\uff0cThanos Ruler \u4e3a Thanos Query \u63d0\u4f9b\u8ba1\u7b97\u51fa\u7684\u65b0\u6307\u6807\u6570\u636e\uff0c\u800c Thanos Query \u4e3a Thanos Ruler \u63d0\u4f9b\u8ba1\u7b97\u65b0\u6307\u6807\u6240\u9700\u8981\u7684\u5168\u5c40\u539f\u59cb\u6307\u6807\u6570\u636e\u3002 \u81f3\u6b64\uff0cThanos \u7684\u6838\u5fc3\u80fd\u529b\u57fa\u672c\u5b9e\u73b0\u4e86\uff0c\u5b8c\u5168\u517c\u5bb9 Prometheus \u7684\u60c5\u51b5\u4e0b\u63d0\u4f9b\u6570\u636e\u67e5\u8be2\u7684\u5168\u5c40\u89c6\u56fe\uff0c\u9ad8\u53ef\u7528\u4ee5\u53ca\u6570\u636e\u7684\u957f\u671f\u4fdd\u5b58\u3002 \u770b\u4e0b\u8fd8\u53ef\u4ee5\u600e\u4e48\u8fdb\u4e00\u6b65\u505a\u4e0b\u4f18\u5316\u5462\uff1f Compact \u7531\u4e8e\u6211\u4eec\u6709\u6570\u636e\u957f\u671f\u5b58\u50a8\u7684\u80fd\u529b\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5b9e\u73b0\u67e5\u8be2\u8f83\u5927\u65f6\u95f4\u8303\u56f4\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5f53\u65f6\u95f4\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u67e5\u8be2\u7684\u6570\u636e\u91cf\u4e5f\u4f1a\u5f88\u5927\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u67e5\u8be2\u901f\u5ea6\u975e\u5e38\u6162\u3002 \u901a\u5e38\u5728\u67e5\u770b\u8f83\u5927\u65f6\u95f4\u8303\u56f4\u7684\u76d1\u63a7\u6570\u636e\u65f6\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u90a3\u4e48\u8be6\u7ec6\u7684\u6570\u636e\uff0c\u53ea\u9700\u8981\u770b\u5230\u5927\u81f4\u5c31\u884c \u3002Thanos Compact \u8fd9\u4e2a\u7ec4\u4ef6\u5e94\u8fd0\u800c\u751f\uff0c\u5b83\u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\uff0c\u5bf9\u5176\u8fdb\u884c\u538b\u7f29\u4ee5\u53ca\u964d\u91c7\u6837\u518d\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u8fd9\u6837\u5728\u67e5\u8be2\u5927\u65f6\u95f4\u8303\u56f4\u6570\u636e\u65f6\u5c31\u53ef\u4ee5\u53ea\u8bfb\u53d6\u538b\u7f29\u548c\u964d\u91c7\u6837\u540e\u7684\u6570\u636e\uff0c\u6781\u5927\u5730\u51cf\u5c11\u4e86\u67e5\u8be2\u7684\u6570\u636e\u91cf\uff0c\u4ece\u800c\u52a0\u901f\u67e5\u8be2\u3002 \u518d\u770b\u67b6\u6784\u56fe \u4e0a\u9762\u6211\u4eec\u5256\u6790\u4e86\u5b98\u65b9\u67b6\u6784\u56fe\u4e2d\u5404\u4e2a\u7ec4\u4ef6\u7684\u8bbe\u8ba1\uff0c\u73b0\u5728\u518d\u6765\u56de\u5473\u4e00\u4e0b\u8fd9\u5f20\u56fe: \u7406\u89e3\u662f\u5426\u66f4\u52a0\u6df1\u523b\u4e86\uff1f \u53e6\u5916\u8fd8\u6709 Thanos Bucket \u548c Thanos Checker \u4e24\u4e2a\u8f85\u52a9\u6027\u7684\u5de5\u5177\u7ec4\u4ef6\u6ca1\u753b\u51fa\u6765\uff0c\u5b83\u4eec\u4e0d\u662f\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8fd9\u91cc\u4e5f\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002 Sidecar \u6a21\u5f0f\u4e0e Receiver \u6a21\u5f0f \u524d\u9762\u6211\u4eec\u7406\u89e3\u4e86\u5b98\u65b9\u7684\u67b6\u6784\u56fe\uff0c\u4f46\u5176\u4e2d\u8fd8\u7f3a\u5931\u4e00\u4e2a\u6838\u5fc3\u7ec4\u4ef6 Thanos Receiver\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u8fd8\u672a\u5b8c\u5168\u53d1\u5e03\u7684\u7ec4\u4ef6\u3002\u8fd9\u662f\u5b83\u7684\u8bbe\u8ba1\u6587\u6863: https://thanos.io/proposals/201812_thanos-remote-receive.md/ \u8fd9\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u5b8c\u5168\u6d88\u9664 Sidecar\uff0c\u6240\u4ee5 Thanos \u5b9e\u9645\u6709\u4e24\u79cd\u67b6\u6784\u56fe\uff0c\u53ea\u662f\u56e0\u4e3a\u6ca1\u6709\u5b8c\u5168\u53d1\u5e03\uff0c\u5b98\u65b9\u7684\u67b6\u6784\u56fe\u53ea\u7ed9\u7684 Sidecar \u6a21\u5f0f\u3002 Receiver \u662f\u505a\u4ec0\u4e48\u7684\u5462\uff1f\u4e3a\u4ec0\u4e48\u9700\u8981 Receiver\uff1f\u5b83\u8ddf Sidecar \u6709\u4ec0\u4e48\u533a\u522b\uff1f \u5b83\u4eec\u90fd\u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58\uff0c\u533a\u522b\u5728\u4e8e\u6700\u65b0\u6570\u636e\u7684\u5b58\u50a8\u3002 \u7531\u4e8e\u6570\u636e\u4e0a\u4f20\u4e0d\u53ef\u80fd\u5b9e\u65f6\uff0cSidecar \u6a21\u5f0f\u5c06\u6700\u65b0\u7684\u76d1\u63a7\u6570\u636e\u5b58\u5230 Prometheus \u672c\u673a\uff0cQuery \u901a\u8fc7\u8c03\u6240\u6709 Sidecar \u7684 Store API \u6765\u83b7\u53d6\u6700\u65b0\u6570\u636e\uff0c\u8fd9\u5c31\u6210\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c Sidecar \u6570\u91cf\u975e\u5e38\u591a\u6216\u8005 Sidecar \u8ddf Query \u79bb\u7684\u6bd4\u8f83\u8fdc\uff0c\u6bcf\u6b21\u67e5\u8be2 Query \u90fd\u8c03\u6240\u6709 Sidecar \u4f1a\u6d88\u8017\u5f88\u591a\u8d44\u6e90\uff0c\u5e76\u4e14\u901f\u5ea6\u5f88\u6162\uff0c\u800c\u6211\u4eec\u67e5\u770b\u76d1\u63a7\u5927\u591a\u6570\u60c5\u51b5\u90fd\u662f\u770b\u7684\u6700\u65b0\u6570\u636e\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cThanos Receiver \u7ec4\u4ef6\u88ab\u63d0\u51fa\uff0c\u5b83\u9002\u914d\u4e86 Prometheus \u7684 remote write API\uff0c\u4e5f\u5c31\u662f\u6240\u6709 Prometheus \u5b9e\u4f8b\u53ef\u4ee5\u5b9e\u65f6\u5c06\u6570\u636e push \u5230 Thanos Receiver\uff0c\u6700\u65b0\u6570\u636e\u4e5f\u5f97\u4ee5\u96c6\u4e2d\u8d77\u6765\uff0c\u7136\u540e Thanos Query \u4e5f\u4e0d\u7528\u53bb\u6240\u6709 Sidecar \u67e5\u6700\u65b0\u6570\u636e\u4e86\uff0c\u76f4\u63a5\u67e5 Thanos Receiver \u5373\u53ef\u3002\u53e6\u5916\uff0cThanos Receiver \u4e5f\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58\uff0c\u5f53\u7136\uff0c\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u540c\u6837\u7531 Thanos Store Gateway \u66b4\u9732\u7ed9 Thanos Query\u3002 \u5982\u679c\u89c4\u6a21\u5f88\u5927\uff0cReceiver \u538b\u529b\u4f1a\u4e0d\u4f1a\u5f88\u5927\uff0c\u6210\u4e3a\u6027\u80fd\u74f6\u9888\uff1f\u5f53\u7136\u8bbe\u8ba1\u8fd9\u4e2a\u7ec4\u4ef6\u65f6\u80af\u5b9a\u4f1a\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0cReceiver \u5b9e\u73b0\u4e86\u4e00\u81f4\u6027\u54c8\u5e0c\uff0c\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\uff0c\u6240\u4ee5\u5373\u4f7f\u89c4\u6a21\u5f88\u5927\u4e5f\u4e0d\u4f1a\u6210\u4e3a\u6027\u80fd\u74f6\u9888\u3002","title":"\u7b2c\u4e03\u8282 (Thaos2-2022)Thanos\u67b6\u6784\u8be6\u89e3"},{"location":"chap11/64thanos_detail/#thaos2-2022thanos","text":"Prometheus \u4f18\u5316\u5230\u9002\u914d\u5927\u89c4\u6a21\u573a\u666f\uff0c\u90e8\u7f72\u548c\u540e\u671f\u7ef4\u62a4\u9ebb\u70e6\u4e14\u590d\u6742\u4e0d\u8bf4\uff0c\u8fd8\u6709\u5f88\u591a\u4e0d\u5b8c\u7f8e\u7684\u5730\u65b9\uff0c\u5e76\u4e14\u8fd8\u65e0\u6cd5\u6ee1\u8db3\u4e00\u4e9b\u66f4\u9ad8\u7ea7\u7684\u8bc9\u6c42\uff0c\u6bd4\u5982\u67e5\u770b\u65f6\u95f4\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u65f6\u95f4\u4e45\u8fdc\u4e0d\u5e38\u7528\u7684 \u201c\u51b7\u6570\u636e\u201d\uff0c\u6700\u7406\u60f3\u7684\u65b9\u5f0f\u5c31\u662f\u5b58\u5230\u5ec9\u4ef7\u7684\u5bf9\u8c61\u5b58\u50a8\u4e2d\uff0c\u7b49\u9700\u8981\u67e5\u8be2\u7684\u65f6\u5019\u80fd\u591f\u81ea\u52a8\u52a0\u8f7d\u51fa\u6765\u3002 Thanos (\u6ca1\u9519\uff0c\u5c31\u662f\u706d\u9738) \u53ef\u4ee5\u5e2e\u6211\u4eec\u7b80\u5316\u5206\u5e03\u5f0f Prometheus \u7684\u90e8\u7f72\u4e0e\u7ba1\u7406\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7684\u9ad8\u7ea7\u7279\u6027\uff1a \u5168\u5c40\u89c6\u56fe\uff0c\u957f\u671f\u5b58\u50a8\uff0c\u9ad8\u53ef\u7528\u3002\u4e0b\u9762\u6211\u4eec\u6765\u8be6\u7ec6\u8bb2\u89e3\u4e00\u4e0b \u3002","title":"\u7b2c\u4e03\u8282 (Thaos2-2022)Thanos\u67b6\u6784\u8be6\u89e3"},{"location":"chap11/64thanos_detail/#1-thanos","text":"\u8fd9\u662f\u5b98\u65b9\u7ed9\u51fa\u7684\u67b6\u6784\u56fe\uff1a \u8fd9\u5f20\u56fe\u4e2d\u5305\u542b\u4e86 Thanos \u7684\u51e0\u4e2a\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4f46\u5e76\u4e0d\u5305\u62ec\u6240\u6709\u7ec4\u4ef6\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u6211\u4eec\u5148\u4e0d\u7ec6\u8bb2\uff0c\u7b80\u5355\u4ecb\u7ecd\u4e0b\u56fe\u4e2d\u8fd9\u51e0\u4e2a\u7ec4\u4ef6\u7684\u4f5c\u7528\uff1a Thanos Query : \u5b9e\u73b0\u4e86 Prometheus API\uff0c \u5c06\u6765\u81ea\u4e0b\u6e38\u7ec4\u4ef6\u63d0\u4f9b\u7684\u6570\u636e\u8fdb\u884c\u805a\u5408\u6700\u7ec8\u8fd4\u56de\u7ed9\u67e5\u8be2\u6570\u636e\u7684 client (\u5982 grafana)\uff0c\u7c7b\u4f3c\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6 \u3002 Thanos Sidecar : \u8fde\u63a5 Prometheus\uff0c\u5c06\u5176\u6570\u636e\u63d0\u4f9b\u7ed9 Thanos Query \u67e5\u8be2\uff0c \u5e76\u4e14/\u6216\u8005\u5c06\u5176\u4e0a\u4f20\u5230 \u5bf9\u8c61\u5b58\u50a8\uff0c\u4ee5\u4f9b\u957f\u671f\u5b58\u50a8 \u3002 Thanos Store Gateway : \u5c06\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\u66b4\u9732\u7ed9 Thanos Query \u53bb\u67e5\u8be2 \u3002 Thanos Ruler : \u5bf9\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u8bc4\u4f30\u548c\u544a\u8b66\uff0c\u8fd8\u53ef\u4ee5\u8ba1\u7b97\u51fa\u65b0\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5c06\u8fd9\u4e9b\u65b0\u6570\u636e\u63d0\u4f9b\u7ed9 Thanos Query \u67e5\u8be2\u5e76\u4e14/\u6216\u8005\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u4ee5\u4f9b\u957f\u671f\u5b58\u50a8 \u3002 Thanos Compact : \u5c06\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\u548c\u964d\u4f4e\u91c7\u6837\u7387\uff0c\u52a0\u901f\u5927\u65f6\u95f4\u533a\u95f4\u76d1\u63a7\u6570\u636e\u67e5\u8be2\u7684\u901f\u5ea6 \u3002","title":"1 Thanos \u67b6\u6784"},{"location":"chap11/64thanos_detail/#1-1","text":"\u5982\u4f55\u7406\u89e3 Thanos \u7684\u67b6\u6784\u8bbe\u8ba1\u7684\uff1f\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5148 YY \u4e00\u4e0b\uff0c\u8981\u662f\u81ea\u5df1\u6765\u8bbe\u8ba1\u4e00\u4e2a\u5206\u5e03\u5f0f Prometheus \u7ba1\u7406\u5e94\u7528\uff0c\u4f1a\u600e\u4e48\u505a\uff1f Query \u4e0e Sidecar \u9996\u5148\uff0c\u76d1\u63a7\u6570\u636e\u7684\u67e5\u8be2\u80af\u5b9a\u4e0d\u80fd\u76f4\u63a5\u67e5 Prometheus \u4e86\uff0c\u56e0\u4e3a\u4f1a\u5b58\u5728\u8bb8\u591a\u4e2a Prometheus \u5b9e\u4f8b\uff0c\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u53ea\u80fd\u611f\u77e5\u5b83\u81ea\u5df1\u6240\u91c7\u96c6\u7684\u6570\u636e\u3002 \u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u8054\u60f3\u5230\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\uff0c\u6bcf\u4e2a\u6570\u636e\u5e93\u90fd\u53ea\u5b58\u4e86\u4e00\u90e8\u5206\u6570\u636e\uff0c\u4e2d\u95f4\u4ef6\u80fd\u611f\u77e5\u5230\u6240\u6709\u6570\u636e\u5e93\uff0c\u6570\u636e\u67e5\u8be2\u90fd\u7ecf\u8fc7\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\u6765\u67e5\uff0c\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u6536\u5230\u67e5\u8be2\u8bf7\u6c42\u518d\u53bb\u67e5\u4e0b\u6e38\u5404\u4e2a\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u6570\u636e\u805a\u5408\u6c47\u603b\u8fd4\u56de\u7ed9\u67e5\u8be2\u7684\u5ba2\u6237\u7aef\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5c06\u5206\u5e03\u5f0f\u5b58\u50a8\u7684\u6570\u636e\u96c6\u4e2d\u67e5\u8be2\u3002 \u90a3\u4e48 Thanos Query \u53c8\u5982\u4f55\u53bb\u67e5\u4e0b\u6e38\u5206\u6563\u7684\u6570\u636e\u5462 \uff1f Thanos \u4e3a\u6b64\u62bd\u8c61\u4e86\u4e00\u5957\u53eb Store API \u7684\u5185\u90e8 gRPC \u63a5\u53e3\uff0c\u5176\u5b83\u4e00\u4e9b\u7ec4\u4ef6\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u6765\u66b4\u9732\u6570\u636e\u7ed9 Thanos Query\uff0c\u5b83\u81ea\u8eab\u4e5f\u5c31\u53ef\u4ee5\u505a\u5230\u5b8c\u5168\u65e0\u72b6\u6001\u90e8\u7f72\uff0c\u5b9e\u73b0\u9ad8\u53ef\u7528\u4e0e\u52a8\u6001\u6269\u5c55\u3002 \u8fd9\u4e9b\u5206\u6563\u7684\u6570\u636e\u53ef\u80fd\u6765\u81ea\u54ea\u4e9b\u5730\u65b9\u5462\uff1f \u9996\u5148\uff0cPrometheus \u4f1a\u5c06\u91c7\u96c6\u7684\u6570\u636e\u5b58\u5230\u672c\u673a\u78c1\u76d8\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u7528\u8fd9\u4e9b\u5206\u6563\u5728\u5404\u4e2a\u78c1\u76d8\u4e0a\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u7ed9\u6bcf\u4e2a Prometheus \u9644\u5e26\u90e8\u7f72\u4e00\u4e2a Sidecar\uff0c\u8fd9\u4e2a Sidecar \u5b9e\u73b0 Thanos Store API\uff0c\u5f53 Thanos Query \u5bf9\u5176\u53d1\u8d77\u67e5\u8be2\u65f6\uff0cSidecar \u5c31\u8bfb\u53d6\u8ddf\u5b83\u7ed1\u5b9a\u90e8\u7f72\u7684 Prometheus \u5b9e\u4f8b\u4e0a\u7684\u76d1\u63a7\u6570\u636e\u8fd4\u56de\u7ed9 Thanos Query\u3002 \u7531\u4e8e Thanos Query \u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u4e0e\u53bb\u91cd\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f88\u8f7b\u677e\u5b9e\u73b0\u9ad8\u53ef\u7528\uff1a \u76f8\u540c\u7684 Prometheus \u90e8\u7f72\u591a\u4e2a\u526f\u672c(\u90fd\u9644\u5e26 Sidecar)\uff0c\u7136\u540e Thanos Query \u53bb\u6240\u6709 Sidecar \u67e5\u6570\u636e\uff0c\u5373\u4fbf\u6709\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u6302\u6389\u8fc7\u4e00\u6bb5\u65f6\u95f4\uff0c\u6570\u636e\u805a\u5408\u4e0e\u53bb\u91cd\u540e\u4ecd\u7136\u80fd\u5f97\u5230\u5b8c\u6574\u6570\u636e \u3002 \u8fd9\u79cd\u9ad8\u53ef\u7528\u505a\u6cd5\u8fd8\u5f25\u8865\u4e86\u6211\u4eec\u4e0a\u7bc7\u6587\u7ae0\u4e2d\u7528\u8d1f\u8f7d\u5747\u8861\u53bb\u5b9e\u73b0 Prometheus \u9ad8\u53ef\u7528\u65b9\u6cd5\u7684\u7f3a\u9677\uff1a\u5982\u679c\u5176\u4e2d\u4e00\u4e2a Prometheus \u5b9e\u4f8b\u6302\u4e86\u4e00\u6bb5\u65f6\u95f4\u7136\u540e\u53c8\u6062\u590d\u4e86\uff0c\u5b83\u7684\u6570\u636e\u5c31\u4e0d\u5b8c\u6574\uff0c\u5f53\u8d1f\u8f7d\u5747\u8861\u8f6c\u53d1\u5230\u5b83\u4e0a\u9762\u53bb\u67e5\u6570\u636e\u65f6\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u5c31\u53ef\u80fd\u4f1a\u6709\u90e8\u5206\u7f3a\u5931\u3002 \u4e0d\u8fc7\u56e0\u4e3a\u78c1\u76d8\u7a7a\u95f4\u6709\u9650\uff0c\u6240\u4ee5 Prometheus \u5b58\u50a8\u76d1\u63a7\u6570\u636e\u7684\u80fd\u529b\u4e5f\u662f\u6709\u9650\u7684\uff0c\u901a\u5e38\u4f1a\u7ed9 Prometheus \u8bbe\u7f6e\u4e00\u4e2a\u6570\u636e\u8fc7\u671f\u65f6\u95f4 (\u9ed8\u8ba415\u5929) \u6216\u8005\u6700\u5927\u6570\u636e\u91cf\u5927\u5c0f\uff0c\u4e0d\u65ad\u6e05\u7406\u65e7\u6570\u636e\u4ee5\u4fdd\u8bc1\u78c1\u76d8\u4e0d\u88ab\u6491\u7206\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u65e0\u6cd5\u770b\u5230\u65f6\u95f4\u6bd4\u8f83\u4e45\u8fdc\u7684\u76d1\u63a7\u6570\u636e\uff0c\u6709\u65f6\u5019\u8fd9\u4e5f\u7ed9\u6211\u4eec\u7684\u95ee\u9898\u6392\u67e5\u548c\u6570\u636e\u7edf\u8ba1\u9020\u6210\u4e00\u4e9b\u56f0\u96be\u3002 \u5bf9\u4e8e\u9700\u8981\u957f\u671f\u5b58\u50a8\u7684\u6570\u636e\uff0c\u5e76\u4e14\u4f7f\u7528\u9891\u7387\u4e0d\u90a3\u4e48\u9ad8\uff0c\u6700\u7406\u60f3\u7684\u65b9\u5f0f\u662f\u5b58\u8fdb\u5bf9\u8c61\u5b58\u50a8\uff0c\u5404\u5927\u4e91\u5382\u5546\u90fd\u6709\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u7279\u70b9\u662f\u4e0d\u9650\u5236\u5bb9\u91cf\uff0c\u4ef7\u683c\u975e\u5e38\u4fbf\u5b9c\u3002 Thanos \u6709\u51e0\u4e2a\u7ec4\u4ef6\u90fd\u652f\u6301\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5404\u79cd\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58 (Prometheus TSDB \u6570\u636e\u683c\u5f0f)\uff0c\u6bd4\u5982\u6211\u4eec\u521a\u521a\u8bf4\u7684 Sidecar:","title":"1-1 \u67b6\u6784\u8bbe\u8ba1\u5256\u6790"},{"location":"chap11/64thanos_detail/#store-gateway","text":"\u90a3\u4e48\u8fd9\u4e9b\u88ab\u4e0a\u4f20\u5230\u4e86\u5bf9\u8c61\u5b58\u50a8\u91cc\u7684\u76d1\u63a7\u6570\u636e\u8be5\u5982\u4f55\u67e5\u8be2\u5462\uff1f \u7406\u8bba\u4e0a Thanos Query \u4e5f\u53ef\u4ee5\u76f4\u63a5\u53bb\u5bf9\u8c61\u5b58\u50a8\u67e5\uff0c \u4f46\u4f1a\u8ba9 Thanos Query \u7684\u903b\u8f91\u53d8\u7684\u5f88\u91cd \u3002 \u6211\u4eec\u521a\u624d\u4e5f\u770b\u5230\u4e86\uff0c Thanos \u62bd\u8c61\u51fa\u4e86 Store API\uff0c\u53ea\u8981\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u4f5c\u4e3a Thanos Query \u67e5\u8be2\u7684\u6570\u636e\u6e90\uff0cThanos Store Gateway \u8fd9\u4e2a\u7ec4\u4ef6\u4e5f\u5b9e\u73b0\u4e86 Store API\uff0c\u5411 Thanos Query \u66b4\u9732\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e \u3002 Thanos Store Gateway \u5185\u90e8\u8fd8\u505a\u4e86\u4e00\u4e9b\u52a0\u901f\u6570\u636e\u83b7\u53d6\u7684\u4f18\u5316\u903b\u8f91\uff0c \u4e00\u662f\u7f13\u5b58\u4e86 TSDB \u7d22\u5f15\uff0c\u4e8c\u662f\u4f18\u5316\u4e86\u5bf9\u8c61\u5b58\u50a8\u7684\u8bf7\u6c42 (\u7528\u5c3d\u53ef\u80fd\u5c11\u7684\u8bf7\u6c42\u91cf\u62ff\u5230\u6240\u6709\u9700\u8981\u7684\u6570\u636e) \u3002 \u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u76d1\u63a7\u6570\u636e\u7684\u957f\u671f\u50a8\u5b58\uff0c\u7531\u4e8e\u5bf9\u8c61\u5b58\u50a8\u5bb9\u91cf\u65e0\u9650\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u6211\u4eec\u53ef\u4ee5\u5b58\u4efb\u610f\u65f6\u957f\u7684\u6570\u636e\uff0c\u76d1\u63a7\u5386\u53f2\u6570\u636e\u4e5f\u5c31\u53d8\u5f97\u53ef\u8ffd\u6eaf\u67e5\u8be2\uff0c\u4fbf\u4e8e\u95ee\u9898\u6392\u67e5\u4e0e\u7edf\u8ba1\u5206\u6790\u3002","title":"Store Gateway"},{"location":"chap11/64thanos_detail/#ruler","text":"\u6709\u4e00\u4e2a\u95ee\u9898\uff0cPrometheus \u4e0d\u4ec5\u4ec5\u53ea\u652f\u6301\u5c06\u91c7\u96c6\u7684\u6570\u636e\u8fdb\u884c\u5b58\u50a8\u548c\u67e5\u8be2\u7684\u529f\u80fd\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e9b rules: \u6839\u636e\u914d\u7f6e\u4e0d\u65ad\u8ba1\u7b97\u51fa\u65b0\u6307\u6807\u6570\u636e\u5e76\u5b58\u50a8\uff0c\u540e\u7eed\u67e5\u8be2\u65f6\u76f4\u63a5\u4f7f\u7528\u8ba1\u7b97\u597d\u7684\u65b0\u6307\u6807\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u8f7b\u67e5\u8be2\u65f6\u7684\u8ba1\u7b97\u538b\u529b\uff0c\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\u3002 \u4e0d\u65ad\u8ba1\u7b97\u548c\u8bc4\u4f30\u662f\u5426\u8fbe\u5230\u544a\u8b66\u9600\u503c\uff0c\u5f53\u8fbe\u5230\u9600\u503c\u65f6\u5c31\u901a\u77e5 AlertManager \u6765\u89e6\u53d1\u544a\u8b66\u3002 \u7531\u4e8e\u6211\u4eec\u5c06 Prometheus \u8fdb\u884c\u5206\u5e03\u5f0f\u90e8\u7f72\uff0c\u6bcf\u4e2a Prometheus \u5b9e\u4f8b\u672c\u5730\u5e76\u6ca1\u6709\u5b8c\u6574\u6570\u636e\uff0c\u6709\u4e9b\u6709\u5173\u8054\u7684\u6570\u636e\u53ef\u80fd\u5b58\u5728\u591a\u4e2a Prometheus \u5b9e\u4f8b\u4e2d\uff0c\u5355\u673a Prometheus \u770b\u4e0d\u5230\u6570\u636e\u7684\u5168\u5c40\u89c6\u56fe\uff0c\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5c31\u4e0d\u80fd\u4f9d\u8d56 Prometheus \u6765\u505a\u8fd9\u4e9b\u5de5\u4f5c\uff0c Thanos Ruler \u5e94\u8fd0\u800c\u751f\uff0c\u5b83\u901a\u8fc7\u67e5\u8be2 Thanos Query \u83b7\u53d6\u5168\u5c40\u6570\u636e\uff0c\u7136\u540e\u6839\u636e rules \u914d\u7f6e\u8ba1\u7b97\u65b0\u6307\u6807\u5e76\u5b58\u50a8\uff0c\u540c\u65f6\u4e5f\u901a\u8fc7 Store API \u5c06\u6570\u636e\u66b4\u9732\u7ed9 Thanos Query\uff0c\u540c\u6837\u8fd8\u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58 (\u8fd9\u91cc\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u4e00\u6837\u4e5f\u662f\u901a\u8fc7 Thanos Store Gateway \u66b4\u9732\u7ed9 Thanos Query)\u3002 \u770b\u8d77\u6765 Thanos Query \u8ddf Thanos Ruler \u4e4b\u95f4\u4f1a\u76f8\u4e92\u67e5\u8be2\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u4e0d\u51b2\u7a81\uff0cThanos Ruler \u4e3a Thanos Query \u63d0\u4f9b\u8ba1\u7b97\u51fa\u7684\u65b0\u6307\u6807\u6570\u636e\uff0c\u800c Thanos Query \u4e3a Thanos Ruler \u63d0\u4f9b\u8ba1\u7b97\u65b0\u6307\u6807\u6240\u9700\u8981\u7684\u5168\u5c40\u539f\u59cb\u6307\u6807\u6570\u636e\u3002 \u81f3\u6b64\uff0cThanos \u7684\u6838\u5fc3\u80fd\u529b\u57fa\u672c\u5b9e\u73b0\u4e86\uff0c\u5b8c\u5168\u517c\u5bb9 Prometheus \u7684\u60c5\u51b5\u4e0b\u63d0\u4f9b\u6570\u636e\u67e5\u8be2\u7684\u5168\u5c40\u89c6\u56fe\uff0c\u9ad8\u53ef\u7528\u4ee5\u53ca\u6570\u636e\u7684\u957f\u671f\u4fdd\u5b58\u3002 \u770b\u4e0b\u8fd8\u53ef\u4ee5\u600e\u4e48\u8fdb\u4e00\u6b65\u505a\u4e0b\u4f18\u5316\u5462\uff1f","title":"Ruler"},{"location":"chap11/64thanos_detail/#compact","text":"\u7531\u4e8e\u6211\u4eec\u6709\u6570\u636e\u957f\u671f\u5b58\u50a8\u7684\u80fd\u529b\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5b9e\u73b0\u67e5\u8be2\u8f83\u5927\u65f6\u95f4\u8303\u56f4\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5f53\u65f6\u95f4\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u67e5\u8be2\u7684\u6570\u636e\u91cf\u4e5f\u4f1a\u5f88\u5927\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u67e5\u8be2\u901f\u5ea6\u975e\u5e38\u6162\u3002 \u901a\u5e38\u5728\u67e5\u770b\u8f83\u5927\u65f6\u95f4\u8303\u56f4\u7684\u76d1\u63a7\u6570\u636e\u65f6\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u90a3\u4e48\u8be6\u7ec6\u7684\u6570\u636e\uff0c\u53ea\u9700\u8981\u770b\u5230\u5927\u81f4\u5c31\u884c \u3002Thanos Compact \u8fd9\u4e2a\u7ec4\u4ef6\u5e94\u8fd0\u800c\u751f\uff0c\u5b83\u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\uff0c\u5bf9\u5176\u8fdb\u884c\u538b\u7f29\u4ee5\u53ca\u964d\u91c7\u6837\u518d\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u8fd9\u6837\u5728\u67e5\u8be2\u5927\u65f6\u95f4\u8303\u56f4\u6570\u636e\u65f6\u5c31\u53ef\u4ee5\u53ea\u8bfb\u53d6\u538b\u7f29\u548c\u964d\u91c7\u6837\u540e\u7684\u6570\u636e\uff0c\u6781\u5927\u5730\u51cf\u5c11\u4e86\u67e5\u8be2\u7684\u6570\u636e\u91cf\uff0c\u4ece\u800c\u52a0\u901f\u67e5\u8be2\u3002","title":"Compact"},{"location":"chap11/64thanos_detail/#_1","text":"\u4e0a\u9762\u6211\u4eec\u5256\u6790\u4e86\u5b98\u65b9\u67b6\u6784\u56fe\u4e2d\u5404\u4e2a\u7ec4\u4ef6\u7684\u8bbe\u8ba1\uff0c\u73b0\u5728\u518d\u6765\u56de\u5473\u4e00\u4e0b\u8fd9\u5f20\u56fe: \u7406\u89e3\u662f\u5426\u66f4\u52a0\u6df1\u523b\u4e86\uff1f \u53e6\u5916\u8fd8\u6709 Thanos Bucket \u548c Thanos Checker \u4e24\u4e2a\u8f85\u52a9\u6027\u7684\u5de5\u5177\u7ec4\u4ef6\u6ca1\u753b\u51fa\u6765\uff0c\u5b83\u4eec\u4e0d\u662f\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8fd9\u91cc\u4e5f\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002","title":"\u518d\u770b\u67b6\u6784\u56fe"},{"location":"chap11/64thanos_detail/#sidecar-receiver","text":"\u524d\u9762\u6211\u4eec\u7406\u89e3\u4e86\u5b98\u65b9\u7684\u67b6\u6784\u56fe\uff0c\u4f46\u5176\u4e2d\u8fd8\u7f3a\u5931\u4e00\u4e2a\u6838\u5fc3\u7ec4\u4ef6 Thanos Receiver\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u8fd8\u672a\u5b8c\u5168\u53d1\u5e03\u7684\u7ec4\u4ef6\u3002\u8fd9\u662f\u5b83\u7684\u8bbe\u8ba1\u6587\u6863: https://thanos.io/proposals/201812_thanos-remote-receive.md/ \u8fd9\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u5b8c\u5168\u6d88\u9664 Sidecar\uff0c\u6240\u4ee5 Thanos \u5b9e\u9645\u6709\u4e24\u79cd\u67b6\u6784\u56fe\uff0c\u53ea\u662f\u56e0\u4e3a\u6ca1\u6709\u5b8c\u5168\u53d1\u5e03\uff0c\u5b98\u65b9\u7684\u67b6\u6784\u56fe\u53ea\u7ed9\u7684 Sidecar \u6a21\u5f0f\u3002 Receiver \u662f\u505a\u4ec0\u4e48\u7684\u5462\uff1f\u4e3a\u4ec0\u4e48\u9700\u8981 Receiver\uff1f\u5b83\u8ddf Sidecar \u6709\u4ec0\u4e48\u533a\u522b\uff1f \u5b83\u4eec\u90fd\u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58\uff0c\u533a\u522b\u5728\u4e8e\u6700\u65b0\u6570\u636e\u7684\u5b58\u50a8\u3002 \u7531\u4e8e\u6570\u636e\u4e0a\u4f20\u4e0d\u53ef\u80fd\u5b9e\u65f6\uff0cSidecar \u6a21\u5f0f\u5c06\u6700\u65b0\u7684\u76d1\u63a7\u6570\u636e\u5b58\u5230 Prometheus \u672c\u673a\uff0cQuery \u901a\u8fc7\u8c03\u6240\u6709 Sidecar \u7684 Store API \u6765\u83b7\u53d6\u6700\u65b0\u6570\u636e\uff0c\u8fd9\u5c31\u6210\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c Sidecar \u6570\u91cf\u975e\u5e38\u591a\u6216\u8005 Sidecar \u8ddf Query \u79bb\u7684\u6bd4\u8f83\u8fdc\uff0c\u6bcf\u6b21\u67e5\u8be2 Query \u90fd\u8c03\u6240\u6709 Sidecar \u4f1a\u6d88\u8017\u5f88\u591a\u8d44\u6e90\uff0c\u5e76\u4e14\u901f\u5ea6\u5f88\u6162\uff0c\u800c\u6211\u4eec\u67e5\u770b\u76d1\u63a7\u5927\u591a\u6570\u60c5\u51b5\u90fd\u662f\u770b\u7684\u6700\u65b0\u6570\u636e\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cThanos Receiver \u7ec4\u4ef6\u88ab\u63d0\u51fa\uff0c\u5b83\u9002\u914d\u4e86 Prometheus \u7684 remote write API\uff0c\u4e5f\u5c31\u662f\u6240\u6709 Prometheus \u5b9e\u4f8b\u53ef\u4ee5\u5b9e\u65f6\u5c06\u6570\u636e push \u5230 Thanos Receiver\uff0c\u6700\u65b0\u6570\u636e\u4e5f\u5f97\u4ee5\u96c6\u4e2d\u8d77\u6765\uff0c\u7136\u540e Thanos Query \u4e5f\u4e0d\u7528\u53bb\u6240\u6709 Sidecar \u67e5\u6700\u65b0\u6570\u636e\u4e86\uff0c\u76f4\u63a5\u67e5 Thanos Receiver \u5373\u53ef\u3002\u53e6\u5916\uff0cThanos Receiver \u4e5f\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4ee5\u4f9b\u957f\u671f\u4fdd\u5b58\uff0c\u5f53\u7136\uff0c\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u540c\u6837\u7531 Thanos Store Gateway \u66b4\u9732\u7ed9 Thanos Query\u3002 \u5982\u679c\u89c4\u6a21\u5f88\u5927\uff0cReceiver \u538b\u529b\u4f1a\u4e0d\u4f1a\u5f88\u5927\uff0c\u6210\u4e3a\u6027\u80fd\u74f6\u9888\uff1f\u5f53\u7136\u8bbe\u8ba1\u8fd9\u4e2a\u7ec4\u4ef6\u65f6\u80af\u5b9a\u4f1a\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0cReceiver \u5b9e\u73b0\u4e86\u4e00\u81f4\u6027\u54c8\u5e0c\uff0c\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\uff0c\u6240\u4ee5\u5373\u4f7f\u89c4\u6a21\u5f88\u5927\u4e5f\u4e0d\u4f1a\u6210\u4e3a\u6027\u80fd\u74f6\u9888\u3002","title":"Sidecar \u6a21\u5f0f\u4e0e Receiver \u6a21\u5f0f"},{"location":"chap11/65thanos_setup/","text":"\u7b2c\u516b\u8282 (Thaos3-2022)Thanos\u90e8\u7f72\u4e0e\u5b9e\u8df5 1 \u90e8\u7f72\u65b9\u5f0f \u672c\u6587\u805a\u7126 Thanos \u7684\u4e91\u539f\u751f\u90e8\u7f72\u65b9\u5f0f\uff0c\u5145\u5206\u5229\u7528 Kubernetes \u7684\u8d44\u6e90\u8c03\u5ea6\u4e0e\u52a8\u6001\u6269\u5bb9\u80fd\u529b\u3002\u4ece\u5b98\u65b9 \u8fd9\u91cc \u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u524d thanos \u5728 Kubernetes \u4e0a\u90e8\u7f72\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a prometheus-operator : \u96c6\u7fa4\u4e2d\u5b89\u88c5\u4e86 prometheus-operator \u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa CRD \u5bf9\u8c61\u6765\u90e8\u7f72 Thanos \u4e86\u3002 \u793e\u533a\u8d21\u732e\u7684\u4e00\u4e9b helm charts : \u5f88\u591a\u4e2a\u7248\u672c\uff0c\u76ee\u6807\u90fd\u662f\u80fd\u591f\u4f7f\u7528 helm \u6765\u4e00\u952e\u90e8\u7f72 thanos\u3002 kube-thanos : Thanos \u5b98\u65b9\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u5305\u542b\u90e8\u7f72 thanos \u5230 kubernetes \u7684 jsonnet \u6a21\u677f\u4e0e yaml \u793a\u4f8b\u3002 \u672c\u6587\u5c06\u4f7f\u7528\u57fa\u4e8e kube-thanos \u63d0\u4f9b\u7684 yaml \u793a\u4f8b ( examples/all/manifests ) \u6765\u90e8\u7f72\uff0c\u539f\u56e0\u662f prometheus-operator \u4e0e\u793e\u533a\u7684 helm chart \u65b9\u5f0f\u90e8\u7f72\u591a\u4e86\u4e00\u5c42\u5c01\u88c5\uff0c\u5c4f\u853d\u4e86\u8bb8\u591a\u7ec6\u8282\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u5b9e\u73b0\u90fd\u8fd8\u4e0d\u592a\u6210\u719f\uff1b \u76f4\u63a5\u4f7f\u7528 kubernetes \u7684 yaml \u8d44\u6e90\u6587\u4ef6\u90e8\u7f72\u66f4\u76f4\u89c2\uff0c\u4e5f\u66f4\u5bb9\u6613\u505a\u81ea\u5b9a\u4e49\uff0c\u800c\u4e14\u6211\u76f8\u4fe1\u4f7f\u7528 thanos \u7684\u7528\u6237\u901a\u5e38\u90fd\u662f\u9ad8\u73a9\u4e86\uff0c\u4e5f\u6709\u5fc5\u8981\u5bf9 thanos \u7406\u89e3\u900f\u5f7b\uff0c\u65e5\u540e\u624d\u597d\u6839\u636e\u5b9e\u9645\u573a\u666f\u505a\u67b6\u6784\u548c\u914d\u7f6e\u7684\u8c03\u6574\uff0c\u76f4\u63a5\u4f7f\u7528 yaml \u90e8\u7f72\u80fd\u591f\u8ba9\u6211\u4eec\u770b\u6e05\u7ec6\u8282\u3002 2 \u65b9\u6848\u9009\u578b 2-1 Sidecar or Receiver \u76ee\u524d\u5b98\u65b9\u7684\u67b6\u6784\u56fe\u7528\u7684 Sidecar \u65b9\u6848\uff0cReceiver \u662f\u4e00\u4e2a\u6682\u65f6\u8fd8\u6ca1\u6709\u5b8c\u5168\u53d1\u5e03\u7684\u7ec4\u4ef6\u3002\u901a\u5e38\u6765\u8bf4\uff0c Sidecar \u65b9\u6848\u76f8\u5bf9\u6210\u719f\u4e00\u4e9b\uff0c\u6700\u65b0\u7684\u6570\u636e\u5b58\u50a8\u548c\u8ba1\u7b97 (\u6bd4\u5982\u805a\u5408\u51fd\u6570) \u6bd4\u8f83 \u201c\u5206\u5e03\u5f0f\u201d\uff0c\u66f4\u52a0\u9ad8\u6548\u4e5f\u66f4\u5bb9\u6613\u6269\u5c55\u3002 Receiver \u65b9\u6848\u662f\u8ba9 Prometheus \u901a\u8fc7 remote wirte API \u5c06\u6570\u636e push \u5230 Receiver \u96c6\u4e2d\u5b58\u50a8 (\u540c\u6837\u4f1a\u6e05\u7406\u8fc7\u671f\u6570\u636e): \u5982\u679c\u4f60\u7684 Query \u8ddf Sidecar \u79bb\u7684\u6bd4\u8f83\u8fdc\uff0c\u6bd4\u5982 Sidecar \u5206\u5e03\u5728\u591a\u4e2a\u6570\u636e\u4e2d\u5fc3 \uff0cQuery \u5411\u6240\u6709 Sidecar \u67e5\u6570\u636e\uff0c\u901f\u5ea6\u4f1a\u5f88\u6162\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u8003\u8651\u7528 Receiver\uff0c\u5c06\u6570\u636e\u96c6\u4e2d\u5410\u5230 Receiver\uff0c\u7136\u540e Receiver \u4e0e Query \u90e8\u7f72\u5728\u4e00\u8d77\uff0cQuery \u76f4\u63a5\u5411 Receiver \u67e5\u6700\u65b0\u6570\u636e\uff0c\u63d0\u5347\u67e5\u8be2\u6027\u80fd\u3002 \u5982\u679c\u4f60\u7684\u4f7f\u7528\u573a\u666f\u53ea\u5141\u8bb8 Prometheus \u5c06\u6570\u636e push \u5230\u8fdc\u7a0b\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 Receiver\u3002\u6bd4\u5982 IoT \u8bbe\u5907\u6ca1\u6709\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u53ea\u80fd\u5c06\u6570\u636e push \u5230\u8fdc\u7a0b \u3002 \u6b64\u5916\u7684\u573a\u666f\u5e94\u8be5\u90fd\u5c3d\u91cf\u4f7f\u7528 Sidecar \u65b9\u6848\u3002 2-2 \u8bc4\u4f30\u662f\u5426\u9700\u8981 Ruler Ruler \u662f\u4e00\u4e2a\u53ef\u9009\u7ec4\u4ef6\uff0c\u539f\u5219\u4e0a\u63a8\u8350\u5c3d\u91cf\u4f7f\u7528 Prometheus \u81ea\u5e26\u7684 rule \u529f\u80fd (\u751f\u6210\u65b0\u6307\u6807+\u544a\u8b66)\uff0c\u8fd9\u4e2a\u529f\u80fd\u9700\u8981\u4e00\u4e9b Prometheus \u6700\u65b0\u6570\u636e\uff0c\u76f4\u63a5\u4f7f\u7528 Prometheus \u672c\u673a rule \u529f\u80fd\u548c\u6570\u636e\uff0c\u6027\u80fd\u5f00\u9500\u76f8\u6bd4 Thanos Ruler \u8fd9\u79cd\u5206\u5e03\u5f0f\u65b9\u6848\u5c0f\u5f97\u591a\uff0c\u5e76\u4e14\u51e0\u4e4e\u4e0d\u4f1a\u51fa\u9519\uff0cThanos Ruler \u7531\u4e8e\u662f\u5206\u5e03\u5f0f\uff0c\u6240\u4ee5\u66f4\u5bb9\u6613\u51fa\u9519\u4e00\u4e9b\u3002 \u5982\u679c\u67d0\u4e9b\u6709\u5173\u8054\u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a\u4e0d\u540c Prometheus \u4e0a\uff0c\u6bd4\u5982\u5bf9\u67d0\u4e2a\u5927\u89c4\u6a21\u670d\u52a1\u91c7\u96c6\u505a\u4e86\u5206\u7247\uff0c\u6bcf\u4e2a Prometheus \u4ec5\u91c7\u96c6\u4e00\u90e8\u5206 endpoint \u7684\u6570\u636e\uff0c\u5bf9\u4e8e record \u7c7b\u578b\u7684 rule (\u751f\u6210\u7684\u65b0\u6307\u6807)\uff0c\u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528 Prometheus \u81ea\u5e26\u7684 rule \u529f\u80fd\uff0c\u5728\u67e5\u8be2\u65f6\u518d\u805a\u5408\u4e00\u4e0b\u5c31\u53ef\u4ee5(\u5982\u679c\u53ef\u4ee5\u63a5\u53d7\u7684\u8bdd)\uff1b \u5bf9\u4e8e alert \u7c7b\u578b\u7684 rule\uff0c\u5c31\u9700\u8981\u7528 Thanos Ruler \u6765\u505a\u4e86\uff0c\u56e0\u4e3a\u6709\u5173\u8054\u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a Prometheus \u4e0a\uff0c\u7528\u5355\u673a\u6570\u636e\u53bb\u505a alert \u8ba1\u7b97\u662f\u4e0d\u51c6\u786e\u7684\uff0c\u5c31\u53ef\u80fd\u4f1a\u9020\u6210\u8bef\u544a\u8b66\u6216\u4e0d\u544a\u8b66\u3002 2-3 \u8bc4\u4f30\u662f\u5426\u9700\u8981 Store Gateway \u4e0e Compact Store \u4e5f\u662f\u4e00\u4e2a\u53ef\u9009\u7ec4\u4ef6\uff0c\u4e5f\u662f Thanos \u7684\u4e00\u5927\u4eae\u70b9\u7684\u5173\u952e\uff1a\u6570\u636e\u957f\u671f\u4fdd\u5b58\u3002 \u8bc4\u4f30\u662f\u5426\u9700\u8981 Store \u7ec4\u4ef6\u5b9e\u9645\u5c31\u662f\u8bc4\u4f30\u4e00\u4e0b\u81ea\u5df1\u662f\u5426\u6709\u6570\u636e\u957f\u671f\u5b58\u50a8\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u67e5\u770b\u4e00\u4e24\u4e2a\u6708\u524d\u7684\u76d1\u63a7\u6570\u636e\u3002\u5982\u679c\u6709\uff0c\u90a3\u4e48 Thanos \u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4fdd\u5b58\u3002Thanos \u652f\u6301\u4ee5\u4e0b\u5bf9\u8c61\u5b58\u50a8 Google Cloud Storage AWS/S3 Azure Storage Account OpenStack Swift Tencent COS AliYun OSS \u5728\u56fd\u5185\uff0c\u6700\u65b9\u4fbf\u8fd8\u662f\u4f7f\u7528\u817e\u8baf\u4e91 COS \u6216\u8005\u963f\u91cc\u4e91 OSS \u8fd9\u6837\u7684\u516c\u6709\u4e91\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\u3002\u5982\u679c\u4f60\u7684\u670d\u52a1\u6ca1\u6709\u8dd1\u5728\u516c\u6709\u4e91\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8ddf\u4e91\u670d\u52a1\u5382\u5546\u62c9\u4e13\u7ebf\u7684\u65b9\u5f0f\u6765\u8d70\u5185\u7f51\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\uff0c\u8fd9\u6837\u901f\u5ea6\u901a\u5e38\u4e5f\u662f\u53ef\u4ee5\u6ee1\u8db3\u9700\u6c42\u7684\uff1b\u5982\u679c\u5b9e\u5728\u7528\u4e0d\u4e86\u516c\u6709\u4e91\u7684\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1 \u5b89\u88c5 minio & mino \u6765\u642d\u5efa\u517c\u5bb9 AWS \u7684 S3 \u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\u3002 \u641e\u5b9a\u4e86\u5bf9\u8c61\u5b58\u50a8\uff0c\u8fd8\u9700\u8981\u7ed9 Thanos \u591a\u4e2a\u7ec4\u4ef6\u914d\u7f6e\u5bf9\u8c61\u5b58\u50a8\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u80fd\u591f\u4e0a\u4f20\u4e0e\u8bfb\u53d6\u76d1\u63a7\u6570\u636e\u3002\u9664 Query \u4ee5\u5916\u7684\u6240\u6709 Thanos \u7ec4\u4ef6 (Sidecar\u3001Receiver\u3001Ruler\u3001Store Gateway\u3001Compact) \u90fd\u9700\u8981\u914d\u7f6e\u5bf9\u8c61\u5b58\u50a8\u4fe1\u606f\uff0c\u4f7f\u7528 --objstore.config \u76f4\u63a5\u914d\u7f6e\u5185\u5bb9\u6216 --objstore.config-file \u5f15\u7528\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u6587\u4ef6\uff0c\u4e0d\u540c\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u53c2\u8003\u5b98\u65b9\u6587\u6863: https://thanos.io/storage.md 2-4 \u51c6\u5907\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e \u5982\u679c\u6211\u4eec\u8981\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\u6765\u957f\u671f\u4fdd\u5b58\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u8981\u51c6\u5907\u4e0b\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\u4fe1\u606f ( thanos-objectstorage-secret.yaml )\uff0c\u6bd4\u5982\u4f7f\u7528\u817e\u8baf\u4e91 COS \u6765\u5b58\u50a8: apiVersion: v1 kind: Secret metadata: name: thanos-objectstorage namespace: thanos type: Opaque stringData: objectstorage.yaml: | type: COS config: bucket: \"thanos\" region: \"ap-singapore\" app_id: \"12*******5\" secret_key: \"tsY***************************Edm\" secret_id: \"AKI******************************gEY\" \u6216\u8005\u4f7f\u7528\u963f\u91cc\u4e91 OSS \u5b58\u50a8: apiVersion: v1 kind: Secret metadata: name: thanos-objectstorage namespace: thanos type: Opaque stringData: objectstorage.yaml: | type: ALIYUNOSS config: endpoint: \"oss-cn-hangzhou-internal.aliyuncs.com\" bucket: \"thanos\" access_key_id: \"LTA******************KBu\" access_key_secret: \"oki************************2HQ\" $ helm install minio minio/minio --set service.type=NodePort --set defaultBucket.enabled=true --set defaultBucket.name=thanos --set persistence.enabled=false --namespace thanos NAME: minio LAST DEPLOYED: Thu May 12 15:11:03 2022 NAMESPACE: thanos STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: ... 2. Get the ACCESS_KEY=$(kubectl get secret minio -o jsonpath=\"{.data.accesskey}\" | base64 --decode) and the SECRET_KEY=$(kubectl get secret minio -o jsonpath=\"{.data.secretkey}\" | base64 --decode) ... Alternately, you can use your browser or the Minio SDK to access the server - https://docs.minio.io/categories/17 $ kubectl get secret minio -o jsonpath=\"{.data.accesskey}\" -n thanos | base64 --decode 0iqANq2qwU6OJ4KgfuSb $ kubectl get secret minio -o jsonpath=\"{.data.secretkey}\" -n thanos | base64 --decode Sr5Nmc8OV9RvGLywhW6TfA3E2vqM6R7jiOurixAI Localfile system apiVersion: v1 kind: Secret metadata: name: thanos-objectstorage namespace: thanos type: Opaque stringData: objectstorage.yaml: | type: FILESYSTEM config: directory: \"/Users/.../data/thanos\" $ kubectl apply -f thanos-objectstorage-secret.yaml secret/thanos-objectstorage created 2-5 \u7ed9 Prometheus \u52a0\u4e0a Sidecar \u5982\u679c\u9009\u7528 Sidecar \u65b9\u6848\uff0c\u5c31\u9700\u8981\u7ed9 Prometheus \u52a0\u4e0a Thanos Sidecar\uff0c\u51c6\u5907 prometheus.yaml: kind: Service apiVersion: v1 metadata: name: prometheus-headless namespace: thanos labels: app.kubernetes.io/name: prometheus spec: type: ClusterIP clusterIP: None selector: app.kubernetes.io/name: prometheus ports: - name: web protocol: TCP port: 9090 targetPort: web - name: grpc port: 10901 targetPort: grpc --- apiVersion: v1 kind: ServiceAccount metadata: name: prometheus namespace: thanos --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: prometheus namespace: thanos rules: - apiGroups: [\"\"] resources: - nodes - nodes/proxy - nodes/metrics - services - endpoints - pods verbs: [\"get\", \"list\", \"watch\"] - apiGroups: [\"\"] resources: [\"configmaps\"] verbs: [\"get\"] - nonResourceURLs: [\"/metrics\"] verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: prometheus subjects: - kind: ServiceAccount name: prometheus namespace: thanos roleRef: kind: ClusterRole name: prometheus apiGroup: rbac.authorization.k8s.io --- apiVersion: apps/v1 kind: StatefulSet metadata: name: prometheus namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: serviceName: prometheus-headless podManagementPolicy: Parallel replicas: 2 selector: matchLabels: app.kubernetes.io/name: prometheus template: metadata: labels: app.kubernetes.io/name: prometheus spec: serviceAccountName: prometheus securityContext: fsGroup: 2000 runAsNonRoot: true runAsUser: 1000 # affinity: # podAntiAffinity: # requiredDuringSchedulingIgnoredDuringExecution: # - labelSelector: # matchExpressions: # - key: app.kubernetes.io/name # operator: In # values: # - prometheus # topologyKey: kubernetes.io/hostname containers: - name: prometheus image: quay.io/prometheus/prometheus:v2.15.2 args: - --config.file=/etc/prometheus/config_out/prometheus.yaml - --storage.tsdb.path=/prometheus - --storage.tsdb.retention.time=10d - --web.route-prefix=/ - --web.enable-lifecycle - --storage.tsdb.no-lockfile - --storage.tsdb.min-block-duration=2h - --storage.tsdb.max-block-duration=2h - --log.level=debug ports: - containerPort: 9090 name: web protocol: TCP livenessProbe: failureThreshold: 6 httpGet: path: /-/healthy port: web scheme: HTTP periodSeconds: 5 successThreshold: 1 timeoutSeconds: 3 readinessProbe: failureThreshold: 120 httpGet: path: /-/ready port: web scheme: HTTP periodSeconds: 5 successThreshold: 1 timeoutSeconds: 3 volumeMounts: - mountPath: /etc/prometheus/config_out name: prometheus-config-out readOnly: true - mountPath: /prometheus name: prometheus-storage - mountPath: /etc/prometheus/rules name: prometheus-rules - name: thanos image: quay.io/thanos/thanos:v0.11.0 args: - sidecar - --log.level=debug - --tsdb.path=/prometheus - --prometheus.url=http://127.0.0.1:9090 - --objstore.config-file=/etc/thanos/objectstorage.yaml - --reloader.config-file=/etc/prometheus/config/prometheus.yaml.tmpl - --reloader.config-envsubst-file=/etc/prometheus/config_out/prometheus.yaml - --reloader.rule-dir=/etc/prometheus/rules/ env: - name: POD_NAME valueFrom: fieldRef: fieldPath: metadata.name ports: - name: http-sidecar containerPort: 10902 - name: grpc containerPort: 10901 livenessProbe: httpGet: port: 10902 path: /-/healthy readinessProbe: httpGet: port: 10902 path: /-/ready volumeMounts: - name: prometheus-config-tmpl mountPath: /etc/prometheus/config - name: prometheus-config-out mountPath: /etc/prometheus/config_out - name: prometheus-rules mountPath: /etc/prometheus/rules - name: prometheus-storage mountPath: /prometheus - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml volumes: - name: prometheus-config-tmpl configMap: defaultMode: 420 name: prometheus-config-tmpl - name: prometheus-config-out emptyDir: {} - name: prometheus-rules configMap: name: prometheus-rules - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: name: prometheus-storage labels: app.kubernetes.io/name: prometheus spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi volumeMode: hostpath Prometheus \u4f7f\u7528 StatefulSet \u65b9\u5f0f\u90e8\u7f72\uff0c\u6302\u8f7d\u6570\u636e\u76d8\u4ee5\u4fbf\u5b58\u50a8\u6700\u65b0\u76d1\u63a7\u6570\u636e\u3002 \u7531\u4e8e Prometheus \u526f\u672c\u4e4b\u95f4\u6ca1\u6709\u542f\u52a8\u987a\u5e8f\u7684\u4f9d\u8d56\uff0c\u6240\u4ee5 podManagementPolicy \u6307\u5b9a\u4e3a Parallel\uff0c\u52a0\u5feb\u542f\u52a8\u901f\u5ea6 \u3002 \u4e3a Prometheus \u7ed1\u5b9a\u8db3\u591f\u7684 RBAC \u6743\u9650\uff0c\u4ee5\u4fbf\u540e\u7eed\u914d\u7f6e\u4f7f\u7528 k8s \u7684\u670d\u52a1\u53d1\u73b0 ( kubernetes_sd_configs ) \u65f6\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002 \u4e3a Prometheus \u521b\u5efa headless \u7c7b\u578b service\uff0c\u4e3a\u540e\u7eed Thanos Query \u901a\u8fc7 DNS SRV \u8bb0\u5f55\u6765\u52a8\u6001\u53d1\u73b0 Sidecar \u7684 gRPC \u7aef\u70b9\u505a\u51c6\u5907 (\u4f7f\u7528 headless service \u624d\u80fd\u8ba9 DNS SRV \u6b63\u786e\u8fd4\u56de\u6240\u6709\u7aef\u70b9)\u3002 \u4f7f\u7528\u4e24\u4e2a Prometheus \u526f\u672c\uff0c\u7528\u4e8e\u5b9e\u73b0\u9ad8\u53ef\u7528\u3002 \u4f7f\u7528\u786c\u53cd\u4eb2\u548c\uff0c\u907f\u514d Prometheus \u90e8\u7f72\u5728\u540c\u4e00\u8282\u70b9\uff0c\u65e2\u53ef\u4ee5\u5206\u6563\u538b\u529b\u4e5f\u53ef\u4ee5\u907f\u514d\u5355\u70b9\u6545\u969c\u3002 Prometheus \u4f7f\u7528 --storage.tsdb.retention.time \u6307\u5b9a\u6570\u636e\u4fdd\u7559\u65f6\u957f\uff0c\u9ed8\u8ba415\u5929\uff0c\u53ef\u4ee5\u6839\u636e\u6570\u636e\u589e\u957f\u901f\u5ea6\u548c\u6570\u636e\u76d8\u5927\u5c0f\u505a\u9002\u5f53\u8c03\u6574(\u6570\u636e\u589e\u957f\u53d6\u51b3\u4e8e\u91c7\u96c6\u7684\u6307\u6807\u548c\u76ee\u6807\u7aef\u70b9\u7684\u6570\u91cf\u548c\u91c7\u96c6\u9891\u7387)\u3002 Sidecar \u4f7f\u7528 --objstore.config-file \u5f15\u7528\u6211\u4eec\u521a\u521a\u521b\u5efa\u5e76\u6302\u8f7d\u7684\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u4e0a\u4f20\u6570\u636e\u5230\u5bf9\u8c61\u5b58\u50a8\u3002 \u901a\u5e38\u4f1a\u7ed9 Prometheus \u9644\u5e26\u4e00\u4e2a quay.io/coreos/prometheus-config-reloader \u6765\u76d1\u542c\u914d\u7f6e\u53d8\u66f4\u5e76\u52a8\u6001\u52a0\u8f7d\uff0c\u4f46 thanos sidecar \u4e5f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u529f\u80fd\uff0c \u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528 thanos sidecar \u6765\u5b9e\u73b0\u6b64\u529f\u80fd\uff0c\u4e5f\u652f\u6301\u914d\u7f6e\u6587\u4ef6\u6839\u636e\u6a21\u677f\u52a8\u6001\u751f\u6210\uff1a --reloader.config-file \u6307\u5b9a Prometheus \u914d\u7f6e\u6587\u4ef6\u6a21\u677f\uff0c --reloader.config-envsubst-file \u6307\u5b9a\u751f\u6210\u914d\u7f6e\u6587\u4ef6\u7684\u5b58\u653e\u8def\u5f84\uff0c\u5047\u8bbe\u662f /etc/prometheus/config_out/prometheus.yaml \uff0c\u90a3\u4e48 /etc/prometheus/config_out \u8fd9\u4e2a\u8def\u5f84\u4f7f\u7528 emptyDir \u8ba9 Prometheus \u4e0e Sidecar \u5b9e\u73b0\u914d\u7f6e\u6587\u4ef6\u5171\u4eab\u6302\u8f7d\uff0c Prometheus \u518d\u901a\u8fc7 --config.file \u6307\u5b9a\u751f\u6210\u51fa\u6765\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5f53\u914d\u7f6e\u6709\u66f4\u65b0\u65f6\uff0c\u6302\u8f7d\u7684\u914d\u7f6e\u6587\u4ef6\u4e5f\u4f1a\u540c\u6b65\u66f4\u65b0\uff0cSidecar \u4e5f\u4f1a\u901a\u77e5 Prometheus \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u3002 \u53e6\u5916\uff0cSidecar \u4e0e Prometheus \u4e5f\u6302\u8f7d\u540c\u4e00\u4efd rules \u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u66f4\u65b0\u540e Sidecar \u4ec5\u901a\u77e5 Prometheus \u52a0\u8f7d\u914d\u7f6e\uff0c\u4e0d\u652f\u6301\u6a21\u677f\uff0c\u56e0\u4e3a rules \u914d\u7f6e\u4e0d\u9700\u8981\u6a21\u677f\u6765\u52a8\u6001\u751f\u6210\u3002 \u7136\u540e\u518d\u7ed9 Prometheus \u51c6\u5907\u914d\u7f6e (prometheus-config.yaml): apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config-tmpl namespace: thanos data: prometheus.yaml.tmpl: |- global: scrape_interval: 5s evaluation_interval: 5s external_labels: cluster: prometheus-ha prometheus_replica: $(POD_NAME) rule_files: - /etc/prometheus/rules/*rules.yaml scrape_configs: - job_name: cadvisor metrics_path: /metrics/cadvisor scrape_interval: 10s scrape_timeout: 10s scheme: https tls_config: insecure_skip_verify: true bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) --- apiVersion: v1 kind: ConfigMap metadata: name: prometheus-rules labels: name: prometheus-rules namespace: thanos data: alert-rules.yaml: |- groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate - expr: | sum(container_memory_usage_bytes{job=\"cadvisor\", image!=\"\", container!=\"\"}) by (namespace) record: namespace:container_memory_usage_bytes:sum - expr: | sum by (namespace, pod, container) ( rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m]) ) record: namespace_pod_container:container_cpu_usage_seconds_total:sum_rate \u672c\u6587\u91cd\u70b9\u4e0d\u5728 prometheus \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ec5\u4ee5\u91c7\u96c6 kubelet \u6240\u66b4\u9732\u7684 cadvisor \u5bb9\u5668\u6307\u6807\u7684\u7b80\u5355\u914d\u7f6e\u4e3a\u4f8b\u3002 Prometheus \u5b9e\u4f8b\u91c7\u96c6\u7684\u6240\u6709\u6307\u6807\u6570\u636e\u91cc\u90fd\u4f1a\u989d\u5916\u52a0\u4e0a external_labels \u91cc\u6307\u5b9a\u7684 label\uff0c\u901a\u5e38\u7528 cluster \u533a\u5206\u5f53\u524d Prometheus \u6240\u5728\u96c6\u7fa4\u7684\u540d\u79f0\uff0c\u6211\u4eec\u518d\u52a0\u4e86\u4e2a prometheus_replica \uff0c\u7528\u4e8e\u533a\u5206\u76f8\u540c Prometheus \u526f\u672c\uff08\u8fd9\u4e9b\u526f\u672c\u6240\u91c7\u96c6\u7684\u6570\u636e\u9664\u4e86 prometheus_replica \u7684\u503c\u4e0d\u4e00\u6837\uff0c\u5176\u5b83\u51e0\u4e4e\u4e00\u81f4\uff0c\u8fd9\u4e2a\u503c\u4f1a\u88ab Thanos Sidecar \u66ff\u6362\u6210 Pod \u526f\u672c\u7684\u540d\u79f0\uff0c\u7528\u4e8e Thanos \u5b9e\u73b0 Prometheus \u9ad8\u53ef\u7528\uff09 2-6 \u5b89\u88c5 Query \u51c6\u5907 thanos-query.yaml : apiVersion: v1 kind: Service metadata: name: thanos-query namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: ports: - name: grpc port: 10901 targetPort: grpc - name: http port: 9090 targetPort: http selector: app.kubernetes.io/name: thanos-query --- apiVersion: apps/v1 kind: Deployment metadata: name: thanos-query namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: replicas: 1 # replicas: 3 selector: matchLabels: app.kubernetes.io/name: thanos-query template: metadata: labels: app.kubernetes.io/name: thanos-query spec: # affinity: # podAntiAffinity: # preferredDuringSchedulingIgnoredDuringExecution: # - podAffinityTerm: # labelSelector: # matchExpressions: # - key: app.kubernetes.io/name # operator: In # values: # - thanos-query # topologyKey: kubernetes.io/hostname # weight: 100 containers: - args: - query - --log.level=debug - --query.auto-downsampling - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:9090 - --query.partial-response - --query.replica-label=prometheus_replica - --query.replica-label=rule_replica - --store=dnssrv+_grpc._tcp.prometheus-headless.thanos.svc.cluster.local - --store=dnssrv+_grpc._tcp.thanos-rule.thanos.svc.cluster.local - --store=dnssrv+_grpc._tcp.thanos-store.thanos.svc.cluster.local image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 9090 scheme: HTTP periodSeconds: 30 name: thanos-query ports: - containerPort: 10901 name: grpc - containerPort: 9090 name: http readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 9090 scheme: HTTP periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError terminationGracePeriodSeconds: 120 $ kubectl get pod,svc -n thanos | grep query pod/thanos-query-7b47b5c947-lsq7x 1/1 Running 0 45s service/thanos-query ClusterIP 10.96.231.202 <none> 10901/TCP,9090/TCP 45s \u56e0\u4e3a Query \u662f\u65e0\u72b6\u6001\u7684\uff0c\u4f7f\u7528 Deployment \u90e8\u7f72\uff0c\u4e5f\u4e0d\u9700\u8981 headless service\uff0c\u76f4\u63a5\u521b\u5efa\u666e\u901a\u7684 service\u3002 \u4f7f\u7528\u8f6f\u53cd\u4eb2\u548c\uff0c\u5c3d\u91cf\u4e0d\u8ba9 Query \u8c03\u5ea6\u5230\u540c\u4e00\u8282\u70b9 \u3002 \u90e8\u7f72\u591a\u4e2a\u526f\u672c\uff0c\u5b9e\u73b0 Query \u7684\u9ad8\u53ef\u7528\u3002 --query.partial-response \u542f\u7528 Partial Response\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u90e8\u5206\u540e\u7aef Store API \u8fd4\u56de\u9519\u8bef\u6216\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u770b\u5230\u6b63\u786e\u7684\u76d1\u63a7\u6570\u636e(\u5982\u679c\u540e\u7aef Store API \u505a\u4e86\u9ad8\u53ef\u7528\uff0c\u6302\u6389\u4e00\u4e2a\u526f\u672c\uff0cQuery \u8bbf\u95ee\u6302\u6389\u7684\u526f\u672c\u8d85\u65f6\uff0c\u4f46\u7531\u4e8e\u8fd8\u6709\u6ca1\u6302\u6389\u7684\u526f\u672c\uff0c\u8fd8\u662f\u80fd\u6b63\u786e\u8fd4\u56de\u7ed3\u679c\uff1b\u5982\u679c\u6302\u6389\u7684\u67d0\u4e2a\u540e\u7aef\u672c\u8eab\u5c31\u4e0d\u5b58\u5728\u6211\u4eec\u9700\u8981\u7684\u6570\u636e\uff0c\u6302\u6389\u4e5f\u4e0d\u5f71\u54cd\u7ed3\u679c\u7684\u6b63\u786e\u6027\uff1b\u603b\u4e4b\u5982\u679c\u5404\u4e2a\u7ec4\u4ef6\u90fd\u505a\u4e86\u9ad8\u53ef\u7528\uff0c\u60f3\u83b7\u5f97\u9519\u8bef\u7684\u7ed3\u679c\u90fd\u96be\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u4fe1\u5fc3\u542f\u7528 Partial Response \u8fd9\u4e2a\u529f\u80fd)\u3002 --query.auto-downsampling \u67e5\u8be2\u65f6\u81ea\u52a8\u964d\u91c7\u6837\uff0c\u63d0\u5347\u67e5\u8be2\u6548\u7387 \u3002 --query.replica-label \u6307\u5b9a\u6211\u4eec\u521a\u521a\u7ed9 Prometheus \u914d\u7f6e\u7684 prometheus_replica \u8fd9\u4e2a external label\uff0cQuery \u5411 Sidecar \u62c9\u53d6 Prometheus \u6570\u636e\u65f6\u4f1a\u8bc6\u522b\u8fd9\u4e2a label \u5e76\u81ea\u52a8\u53bb\u91cd\uff0c\u8fd9\u6837\u5373\u4f7f\u6302\u6389\u4e00\u4e2a\u526f\u672c\uff0c\u53ea\u8981\u81f3\u5c11\u6709\u4e00\u4e2a\u526f\u672c\u6b63\u5e38\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u67e5\u8be2\u7ed3\u679c\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u5b9e\u73b0 Prometheus \u7684\u9ad8\u53ef\u7528\u3002\u540c\u7406\uff0c\u518d\u6307\u5b9a\u4e00\u4e2a rule_replica \u7528\u4e8e\u7ed9 Ruler \u505a\u9ad8\u53ef\u7528\u3002 --store \u6307\u5b9a\u5b9e\u73b0\u4e86 Store API \u7684\u5730\u5740(Sidecar, Ruler, Store Gateway, Receiver)\uff0c\u901a\u5e38\u4e0d\u5efa\u8bae\u5199\u9759\u6001\u5730\u5740\uff0c\u800c\u662f\u4f7f\u7528\u670d\u52a1\u53d1\u73b0\u673a\u5236\u81ea\u52a8\u53d1\u73b0 Store API \u5730\u5740 \uff0c\u5982\u679c\u662f\u90e8\u7f72\u5728\u540c\u4e00\u4e2a\u96c6\u7fa4\uff0c\u53ef\u4ee5\u7528 DNS SRV \u8bb0\u5f55\u6765\u505a\u670d\u52a1\u53d1\u73b0\uff0c\u6bd4\u5982 dnssrv+_grpc._tcp.prometheus-headless.thanos.svc.cluster.local \uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u521a\u521a\u4e3a\u5305\u542b Sidecar \u7684 Prometheus \u521b\u5efa\u7684 headless service (\u4f7f\u7528 headless service \u624d\u80fd\u6b63\u786e\u5b9e\u73b0\u670d\u52a1\u53d1\u73b0)\uff0c \u5e76\u4e14\u6307\u5b9a\u4e86\u540d\u4e3a grpc \u7684 tcp \u7aef\u53e3\uff0c\u540c\u7406\uff0c\u5176\u5b83\u7ec4\u4ef6\u4e5f\u53ef\u4ee5\u6309\u7167\u8fd9\u6837\u52a0\u5230 --store \u53c2\u6570\u91cc \uff1b \u5982\u679c\u662f\u5176\u5b83\u6709\u4e9b\u7ec4\u4ef6\u90e8\u7f72\u5728\u96c6\u7fa4\u5916\uff0c\u65e0\u6cd5\u901a\u8fc7\u96c6\u7fa4 dns \u89e3\u6790 DNS SRV \u8bb0\u5f55\uff0c\u53ef\u4ee5\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u6765\u505a\u670d\u52a1\u53d1\u73b0\uff0c\u4e5f\u5c31\u662f\u6307\u5b9a --store.sd-files \u53c2\u6570\uff0c\u5c06\u5176\u5b83 Store API \u5730\u5740\u5199\u5728\u914d\u7f6e\u6587\u4ef6\u91cc (\u6302\u8f7d ConfigMap)\uff0c\u9700\u8981\u589e\u52a0\u5730\u5740\u65f6\u76f4\u63a5\u66f4\u65b0 ConfigMap (\u4e0d\u9700\u8981\u91cd\u542f Query)\u3002 2-7 \u5b89\u88c5 Store Gateway \u51c6\u5907 thanos-store.yaml: apiVersion: v1 kind: Service metadata: name: thanos-store namespace: thanos labels: app.kubernetes.io/name: thanos-store spec: clusterIP: None ports: - name: grpc port: 10901 targetPort: 10901 - name: http port: 10902 targetPort: 10902 selector: app.kubernetes.io/name: thanos-store --- apiVersion: apps/v1 kind: StatefulSet metadata: name: thanos-store namespace: thanos labels: app.kubernetes.io/name: thanos-store spec: replicas: 1 selector: matchLabels: app.kubernetes.io/name: thanos-store serviceName: thanos-store podManagementPolicy: Parallel template: metadata: labels: app.kubernetes.io/name: thanos-store spec: containers: - args: - store - --log.level=debug - --data-dir=/var/thanos/store - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:10902 - --objstore.config-file=/etc/thanos/objectstorage.yaml - --experimental.enable-index-header image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 8 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 30 name: thanos-store ports: - containerPort: 10901 name: grpc - containerPort: 10902 name: http readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 10902 scheme: HTTP periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError volumeMounts: - mountPath: /var/thanos/store name: data readOnly: false - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml terminationGracePeriodSeconds: 120 volumes: - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-store name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi storageClassName: hostpath Store Gateway \u5b9e\u9645\u4e5f\u53ef\u4ee5\u505a\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u65e0\u72b6\u6001\uff0c\u5b83\u4f1a\u9700\u8981\u4e00\u70b9\u78c1\u76d8\u7a7a\u95f4\u6765\u5bf9\u5bf9\u8c61\u5b58\u50a8\u505a\u7d22\u5f15\u4ee5\u52a0\u901f\u67e5\u8be2\uff0c\u4f46\u6570\u636e\u4e0d\u90a3\u4e48\u91cd\u8981\uff0c\u662f\u53ef\u4ee5\u5220\u9664\u7684\uff0c\u5220\u9664\u540e\u4f1a\u81ea\u52a8\u53bb\u62c9\u5bf9\u8c61\u5b58\u50a8\u67e5\u6570\u636e\u91cd\u65b0\u5efa\u7acb\u7d22\u5f15 \u3002\u8fd9\u91cc\u6211\u4eec\u907f\u514d\u6bcf\u6b21\u91cd\u542f\u90fd\u91cd\u65b0\u5efa\u7acb\u7d22\u5f15\uff0c\u6240\u4ee5\u7528 StatefulSet \u90e8\u7f72 Store Gateway\uff0c\u6302\u8f7d\u4e00\u5757\u5c0f\u5bb9\u91cf\u7684\u78c1\u76d8(\u7d22\u5f15\u5360\u7528\u4e0d\u5230\u591a\u5927\u7a7a\u95f4)\u3002 \u540c\u6837\u521b\u5efa headless service\uff0c\u7528\u4e8e Query \u5bf9 Store Gateway \u8fdb\u884c\u670d\u52a1\u53d1\u73b0\u3002 \u90e8\u7f72\u4e24\u4e2a\u526f\u672c\uff0c\u5b9e\u73b0 Store Gateway \u7684\u9ad8\u53ef\u7528 \u3002 Store Gateway \u4e5f\u9700\u8981\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u7528\u4e8e\u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\uff0c\u6240\u4ee5\u8981\u6302\u8f7d\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\u6587\u4ef6\u3002 2-8 \u5b89\u88c5 Ruler \u51c6\u5907 Ruler \u90e8\u7f72\u914d\u7f6e thanos-ruler.yaml: apiVersion: v1 kind: Service metadata: labels: app.kubernetes.io/name: thanos-rule name: thanos-rule namespace: thanos spec: clusterIP: None ports: - name: grpc port: 10901 targetPort: grpc - name: http port: 10902 targetPort: http selector: app.kubernetes.io/name: thanos-rule --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: app.kubernetes.io/name: thanos-rule name: thanos-rule namespace: thanos spec: replicas: 2 selector: matchLabels: app.kubernetes.io/name: thanos-rule serviceName: thanos-rule podManagementPolicy: Parallel template: metadata: labels: app.kubernetes.io/name: thanos-rule spec: containers: - args: - rule - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:10902 - --rule-file=/etc/thanos/rules/*rules.yaml - --objstore.config-file=/etc/thanos/objectstorage.yaml - --data-dir=/var/thanos/rule - --label=rule_replica=\"$(NAME)\" - --alert.label-drop=\"rule_replica\" - --query=dnssrv+_http._tcp.thanos-query.thanos.svc.cluster.local env: - name: NAME valueFrom: fieldRef: fieldPath: metadata.name image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 24 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 5 name: thanos-rule ports: - containerPort: 10901 name: grpc - containerPort: 10902 name: http readinessProbe: failureThreshold: 18 httpGet: path: /-/ready port: 10902 scheme: HTTP initialDelaySeconds: 10 periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError volumeMounts: - mountPath: /var/thanos/rule name: data readOnly: false - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml - name: thanos-rules mountPath: /etc/thanos/rules volumes: - name: thanos-objectstorage secret: secretName: thanos-objectstorage - name: thanos-rules configMap: name: thanos-rules volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-rule name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi \u518d\u51c6\u5907 Ruler \u914d\u7f6e\u6587\u4ef6 thanos-ruler-config.yaml : apiVersion: v1 kind: ConfigMap metadata: name: thanos-rules labels: name: thanos-rules namespace: thanos data: record.rules.yaml: |- groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate - expr: | sum(container_memory_usage_bytes{job=\"cadvisor\", image!=\"\", container!=\"\"}) by (namespace) record: namespace:container_memory_usage_bytes:sum - expr: | sum by (namespace, pod, container) ( rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m]) ) record: namespace_pod_container:container_cpu_usage_seconds_total:sum_rate \u914d\u7f6e\u5185\u5bb9\u4ec5\u4e3a\u793a\u4f8b\uff0c\u6839\u636e\u81ea\u8eab\u60c5\u51b5\u6765\u914d\u7f6e\uff0c\u683c\u5f0f\u57fa\u672c\u517c\u5bb9 Prometheus \u7684 rule \u914d\u7f6e\u683c\u5f0f\uff0c\u53c2\u8003: https://thanos.io/components/rule.md/#configuring-rules kubectl apply -f thanos-ruler-config.yaml configmap/thanos-rules created 2-9 \u5b89\u88c5 Compact \u51c6\u5907 Compact \u90e8\u7f72\u914d\u7f6e thanos-compact.yaml: apiVersion: v1 kind: Service metadata: labels: app.kubernetes.io/name: thanos-compact name: thanos-compact namespace: thanos spec: ports: - name: http port: 10902 targetPort: http selector: app.kubernetes.io/name: thanos-compact --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: app.kubernetes.io/name: thanos-compact name: thanos-compact namespace: thanos spec: replicas: 1 selector: matchLabels: app.kubernetes.io/name: thanos-compact serviceName: thanos-compact template: metadata: labels: app.kubernetes.io/name: thanos-compact spec: containers: - args: - compact - --wait - --objstore.config-file=/etc/thanos/objectstorage.yaml - --data-dir=/var/thanos/compact - --debug.accept-malformed-index - --log.level=debug - --retention.resolution-raw=90d - --retention.resolution-5m=180d - --retention.resolution-1h=360d image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 30 name: thanos-compact ports: - containerPort: 10902 name: http readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 10902 scheme: HTTP periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError volumeMounts: - mountPath: /var/thanos/compact name: data readOnly: false - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml terminationGracePeriodSeconds: 120 volumes: - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-compact name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi storageClassName: hostpath Compact \u53ea\u80fd\u90e8\u7f72\u5355\u4e2a\u526f\u672c\uff0c\u56e0\u4e3a\u5982\u679c\u591a\u4e2a\u526f\u672c\u90fd\u53bb\u5bf9\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\u505a\u538b\u7f29\u548c\u964d\u91c7\u6837\u7684\u8bdd\uff0c\u4f1a\u9020\u6210\u51b2\u7a81\u3002 \u4f7f\u7528 StatefulSet \u90e8\u7f72\uff0c\u65b9\u4fbf\u81ea\u52a8\u521b\u5efa\u548c\u6302\u8f7d\u78c1\u76d8\u3002\u78c1\u76d8\u7528\u4e8e\u5b58\u653e\u4e34\u65f6\u6570\u636e\uff0c\u56e0\u4e3a Compact \u9700\u8981\u4e00\u4e9b\u78c1\u76d8\u7a7a\u95f4\u6765\u5b58\u653e\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u4e2d\u95f4\u6570\u636e\u3002 --wait \u8ba9 Compact \u4e00\u76f4\u8fd0\u884c\uff0c\u8f6e\u8be2\u65b0\u6570\u636e\u6765\u505a\u538b\u7f29\u548c\u964d\u91c7\u6837\u3002 Compact \u4e5f\u9700\u8981\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u7528\u4e8e\u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u6570\u636e\u4ee5\u53ca\u4e0a\u4f20\u538b\u7f29\u548c\u964d\u91c7\u6837\u540e\u7684\u6570\u636e\u5230\u5bf9\u8c61\u5b58\u50a8\u3002 \u521b\u5efa\u4e00\u4e2a\u666e\u901a service\uff0c\u4e3b\u8981\u7528\u4e8e\u88ab Prometheus \u4f7f\u7528 kubernetes \u7684 endpoints \u670d\u52a1\u53d1\u73b0\u6765\u91c7\u96c6\u6307\u6807(\u5176\u5b83\u7ec4\u4ef6\u7684 service \u4e5f\u4e00\u6837\u6709\u8fd9\u4e2a\u7528\u9014)\u3002 --retention.resolution-raw \u6307\u5b9a\u539f\u59cb\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c --retention.resolution-5m \u6307\u5b9a\u964d\u91c7\u6837\u5230\u6570\u636e\u70b9 5 \u5206\u949f\u95f4\u9694\u7684\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c --retention.resolution-1h \u6307\u5b9a\u964d\u91c7\u6837\u5230\u6570\u636e\u70b9 1 \u5c0f\u65f6\u95f4\u9694\u7684\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c\u5b83\u4eec\u7684\u6570\u636e\u7cbe\u7ec6\u7a0b\u5ea6\u9012\u51cf\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u662f\u9012\u51cf\uff0c\u901a\u5e38\u5efa\u8bae\u5b83\u4eec\u7684\u5b58\u653e\u65f6\u95f4\u9012\u589e\u914d\u7f6e (\u4e00\u822c\u53ea\u6709\u6bd4\u8f83\u65b0\u7684\u6570\u636e\u624d\u4f1a\u653e\u5927\u770b\uff0c\u4e45\u8fdc\u7684\u6570\u636e\u901a\u5e38\u53ea\u4f1a\u4f7f\u7528\u5927\u65f6\u95f4\u8303\u56f4\u67e5\u8be2\u6765\u770b\u4e2a\u5927\u81f4\uff0c\u6240\u4ee5\u5efa\u8bae\u5c06\u7cbe\u7ec6\u7a0b\u5ea6\u4f4e\u7684\u6570\u636e\u5b58\u653e\u66f4\u957f\u65f6\u95f4) 2-10 Quick install grafana helm repo add bitnami https://charts.bitnami.com/bitnami helm install grafana bitnami/grafana --namespace thanos echo \"User: admin\" echo \"Password: $(kubectl get secret grafana-admin --namespace thanos -o jsonpath=\"{.data.GF_SECURITY_ADMIN_PASSWORD}\" | base64 --decode)\" Password: iW7270HExB kubectl port-forward svc/grafana 8083:3000 -n thanos Add data source: thanos http://thanos-query.thanos.svc.cluster.local:9090 3 \u5b89\u88c5 Receiver \u8be5\u7ec4\u4ef6\u5904\u4e8e\u8bd5\u9a8c\u9636\u6bb5\uff0c\u614e\u7528\u3002\u51c6\u5907 Receiver \u90e8\u7f72\u914d\u7f6e thanos-receiver.yaml : apiVersion: v1 kind: ConfigMap metadata: name: thanos-receive-hashrings namespace: thanos data: thanos-receive-hashrings.json: | [ { \"hashring\": \"soft-tenants\", \"endpoints\": [ \"thanos-receive-0.thanos-receive.kube-system.svc.cluster.local:10901\", \"thanos-receive-1.thanos-receive.kube-system.svc.cluster.local:10901\", \"thanos-receive-2.thanos-receive.kube-system.svc.cluster.local:10901\" ] } ] --- apiVersion: v1 kind: Service metadata: name: thanos-receive namespace: thanos labels: kubernetes.io/name: thanos-receive spec: ports: - name: http port: 10902 protocol: TCP targetPort: 10902 - name: remote-write port: 19291 protocol: TCP targetPort: 19291 - name: grpc port: 10901 protocol: TCP targetPort: 10901 selector: kubernetes.io/name: thanos-receive clusterIP: None --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: kubernetes.io/name: thanos-receive name: thanos-receive namespace: thanos spec: replicas: 3 selector: matchLabels: kubernetes.io/name: thanos-receive serviceName: thanos-receive template: metadata: labels: kubernetes.io/name: thanos-receive spec: containers: - args: - receive - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:10902 - --remote-write.address=0.0.0.0:19291 - --objstore.config-file=/etc/thanos/objectstorage.yaml - --tsdb.path=/var/thanos/receive - --tsdb.retention=12h - --label=receive_replica=\"$(NAME)\" - --label=receive=\"true\" - --receive.hashrings-file=/etc/thanos/thanos-receive-hashrings.json - --receive.local-endpoint=$(NAME).thanos-receive.thanos.svc.cluster.local:10901 env: - name: NAME valueFrom: fieldRef: fieldPath: metadata.name image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 30 name: thanos-receive ports: - containerPort: 10901 name: grpc - containerPort: 10902 name: http - containerPort: 19291 name: remote-write readinessProbe: httpGet: path: /-/ready port: 10902 scheme: HTTP initialDelaySeconds: 10 periodSeconds: 30 resources: limits: cpu: \"4\" memory: 8Gi requests: cpu: \"2\" memory: 4Gi volumeMounts: - mountPath: /var/thanos/receive name: data readOnly: false - mountPath: /etc/thanos/thanos-receive-hashrings.json name: thanos-receive-hashrings subPath: thanos-receive-hashrings.json - mountPath: /etc/thanos/objectstorage.yaml name: thanos-objectstorage subPath: objectstorage.yaml terminationGracePeriodSeconds: 120 volumes: - configMap: defaultMode: 420 name: thanos-receive-hashrings name: thanos-receive-hashrings - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-receive name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 200Gi \u90e8\u7f72 3 \u4e2a\u526f\u672c\uff0c \u914d\u7f6e hashring\uff0c --label=receive_replica \u4e3a\u6570\u636e\u6dfb\u52a0 receive_replica \u8fd9\u4e2a label (Query \u7684 --query.replica-label \u4e5f\u8981\u52a0\u4e0a\u8fd9\u4e2a) \u6765\u5b9e\u73b0 Receiver \u7684\u9ad8\u53ef\u7528\u3002 Query \u8981\u6307\u5b9a Receiver \u540e\u7aef\u5730\u5740: --store=dnssrv+_grpc._tcp.thanos-receive.thanos.svc.cluster.local request, limit \u6839\u636e\u81ea\u8eab\u89c4\u6a21\u60c5\u51b5\u81ea\u884c\u505a\u9002\u5f53\u8c03\u6574\u3002 --tsdb.retention \u6839\u636e\u81ea\u8eab\u9700\u6c42\u8c03\u6574\u6700\u65b0\u6570\u636e\u7684\u4fdd\u7559\u65f6\u95f4\u3002 \u5982\u679c\u6539\u547d\u540d\u7a7a\u95f4\uff0c\u8bb0\u5f97\u628a Receiver \u7684 --receive.local-endpoint \u53c2\u6570\u4e5f\u6539\u4e0b\uff0c\u4e0d\u7136\u4f1a\u75af\u72c2\u62a5\u9519\u76f4\u81f3 OOMKilled \u3002 \u56e0\u4e3a\u4f7f\u7528\u4e86 Receiver \u6765\u7edf\u4e00\u63a5\u6536 Prometheus \u7684\u6570\u636e\uff0c\u6240\u4ee5 Prometheus \u4e5f\u4e0d\u9700\u8981 Sidecar \u4e86\uff0c\u4f46\u9700\u8981\u7ed9 Prometheus \u914d\u7f6e\u6587\u4ef6\u91cc\u52a0\u4e0b remote_write \uff0c\u8ba9 Prometheus \u5c06\u6570\u636e push \u7ed9 Receiver: remote_write: - url: http://thanos-receive.thanos.svc.cluster.local:19291/api/v1/receive 3-1 \u6307\u5b9a Query \u4e3a\u6570\u636e\u6e90 \u67e5\u8be2\u76d1\u63a7\u6570\u636e\u65f6\u9700\u8981\u6307\u5b9a Prometheus \u6570\u636e\u6e90\u5730\u5740\uff0c\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86 Thanos \u6765\u505a\u5206\u5e03\u5f0f\uff0c\u800c Thanos \u5173\u952e\u67e5\u8be2\u5165\u53e3\u5c31\u662f Query\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u6570\u636e\u6e90\u5730\u5740\u6307\u5b9a\u4e3a Query \u7684\u5730\u5740\uff0c\u5047\u5982\u4f7f\u7528 Grafana \u67e5\u8be2\uff0c\u8fdb\u5165 Configuration-Data Sources-Add data source \uff0c\u9009\u62e9 Prometheus\uff0c\u6307\u5b9a thanos query \u7684\u5730\u5740: http://thanos-query.thanos.svc.cluster.local:9090 \u603b\u7ed3 \u672c\u6587\u6559\u4e86\u5927\u5bb6\u5982\u4f55\u9009\u578b Thanos \u90e8\u7f72\u65b9\u6848\u5e76\u8be6\u7ec6\u8bb2\u89e3\u4e86\u5404\u4e2a\u7ec4\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\uff0c\u5982\u679c\u4ed4\u7ec6\u9605\u8bfb\u5b8c\u672c\u7cfb\u5217\u6587\u7ae0\uff0c\u6211\u76f8\u4fe1\u4f60\u5df2\u7ecf\u6709\u80fd\u529b\u642d\u5efa\u5e76\u8fd0\u7ef4\u4e00\u5957\u5927\u578b\u76d1\u63a7\u7cfb\u7edf\u4e86\u3002","title":"\u7b2c\u516b\u8282 (Thaos3-2022)Thanos\u90e8\u7f72\u4e0e\u5b9e\u8df5"},{"location":"chap11/65thanos_setup/#thaos3-2022thanos","text":"","title":"\u7b2c\u516b\u8282 (Thaos3-2022)Thanos\u90e8\u7f72\u4e0e\u5b9e\u8df5"},{"location":"chap11/65thanos_setup/#1","text":"\u672c\u6587\u805a\u7126 Thanos \u7684\u4e91\u539f\u751f\u90e8\u7f72\u65b9\u5f0f\uff0c\u5145\u5206\u5229\u7528 Kubernetes \u7684\u8d44\u6e90\u8c03\u5ea6\u4e0e\u52a8\u6001\u6269\u5bb9\u80fd\u529b\u3002\u4ece\u5b98\u65b9 \u8fd9\u91cc \u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u524d thanos \u5728 Kubernetes \u4e0a\u90e8\u7f72\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a prometheus-operator : \u96c6\u7fa4\u4e2d\u5b89\u88c5\u4e86 prometheus-operator \u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa CRD \u5bf9\u8c61\u6765\u90e8\u7f72 Thanos \u4e86\u3002 \u793e\u533a\u8d21\u732e\u7684\u4e00\u4e9b helm charts : \u5f88\u591a\u4e2a\u7248\u672c\uff0c\u76ee\u6807\u90fd\u662f\u80fd\u591f\u4f7f\u7528 helm \u6765\u4e00\u952e\u90e8\u7f72 thanos\u3002 kube-thanos : Thanos \u5b98\u65b9\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u5305\u542b\u90e8\u7f72 thanos \u5230 kubernetes \u7684 jsonnet \u6a21\u677f\u4e0e yaml \u793a\u4f8b\u3002 \u672c\u6587\u5c06\u4f7f\u7528\u57fa\u4e8e kube-thanos \u63d0\u4f9b\u7684 yaml \u793a\u4f8b ( examples/all/manifests ) \u6765\u90e8\u7f72\uff0c\u539f\u56e0\u662f prometheus-operator \u4e0e\u793e\u533a\u7684 helm chart \u65b9\u5f0f\u90e8\u7f72\u591a\u4e86\u4e00\u5c42\u5c01\u88c5\uff0c\u5c4f\u853d\u4e86\u8bb8\u591a\u7ec6\u8282\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u5b9e\u73b0\u90fd\u8fd8\u4e0d\u592a\u6210\u719f\uff1b \u76f4\u63a5\u4f7f\u7528 kubernetes \u7684 yaml \u8d44\u6e90\u6587\u4ef6\u90e8\u7f72\u66f4\u76f4\u89c2\uff0c\u4e5f\u66f4\u5bb9\u6613\u505a\u81ea\u5b9a\u4e49\uff0c\u800c\u4e14\u6211\u76f8\u4fe1\u4f7f\u7528 thanos \u7684\u7528\u6237\u901a\u5e38\u90fd\u662f\u9ad8\u73a9\u4e86\uff0c\u4e5f\u6709\u5fc5\u8981\u5bf9 thanos \u7406\u89e3\u900f\u5f7b\uff0c\u65e5\u540e\u624d\u597d\u6839\u636e\u5b9e\u9645\u573a\u666f\u505a\u67b6\u6784\u548c\u914d\u7f6e\u7684\u8c03\u6574\uff0c\u76f4\u63a5\u4f7f\u7528 yaml \u90e8\u7f72\u80fd\u591f\u8ba9\u6211\u4eec\u770b\u6e05\u7ec6\u8282\u3002","title":"1 \u90e8\u7f72\u65b9\u5f0f"},{"location":"chap11/65thanos_setup/#2","text":"","title":"2 \u65b9\u6848\u9009\u578b"},{"location":"chap11/65thanos_setup/#2-1-sidecar-or-receiver","text":"\u76ee\u524d\u5b98\u65b9\u7684\u67b6\u6784\u56fe\u7528\u7684 Sidecar \u65b9\u6848\uff0cReceiver \u662f\u4e00\u4e2a\u6682\u65f6\u8fd8\u6ca1\u6709\u5b8c\u5168\u53d1\u5e03\u7684\u7ec4\u4ef6\u3002\u901a\u5e38\u6765\u8bf4\uff0c Sidecar \u65b9\u6848\u76f8\u5bf9\u6210\u719f\u4e00\u4e9b\uff0c\u6700\u65b0\u7684\u6570\u636e\u5b58\u50a8\u548c\u8ba1\u7b97 (\u6bd4\u5982\u805a\u5408\u51fd\u6570) \u6bd4\u8f83 \u201c\u5206\u5e03\u5f0f\u201d\uff0c\u66f4\u52a0\u9ad8\u6548\u4e5f\u66f4\u5bb9\u6613\u6269\u5c55\u3002 Receiver \u65b9\u6848\u662f\u8ba9 Prometheus \u901a\u8fc7 remote wirte API \u5c06\u6570\u636e push \u5230 Receiver \u96c6\u4e2d\u5b58\u50a8 (\u540c\u6837\u4f1a\u6e05\u7406\u8fc7\u671f\u6570\u636e): \u5982\u679c\u4f60\u7684 Query \u8ddf Sidecar \u79bb\u7684\u6bd4\u8f83\u8fdc\uff0c\u6bd4\u5982 Sidecar \u5206\u5e03\u5728\u591a\u4e2a\u6570\u636e\u4e2d\u5fc3 \uff0cQuery \u5411\u6240\u6709 Sidecar \u67e5\u6570\u636e\uff0c\u901f\u5ea6\u4f1a\u5f88\u6162\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u8003\u8651\u7528 Receiver\uff0c\u5c06\u6570\u636e\u96c6\u4e2d\u5410\u5230 Receiver\uff0c\u7136\u540e Receiver \u4e0e Query \u90e8\u7f72\u5728\u4e00\u8d77\uff0cQuery \u76f4\u63a5\u5411 Receiver \u67e5\u6700\u65b0\u6570\u636e\uff0c\u63d0\u5347\u67e5\u8be2\u6027\u80fd\u3002 \u5982\u679c\u4f60\u7684\u4f7f\u7528\u573a\u666f\u53ea\u5141\u8bb8 Prometheus \u5c06\u6570\u636e push \u5230\u8fdc\u7a0b\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 Receiver\u3002\u6bd4\u5982 IoT \u8bbe\u5907\u6ca1\u6709\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u53ea\u80fd\u5c06\u6570\u636e push \u5230\u8fdc\u7a0b \u3002 \u6b64\u5916\u7684\u573a\u666f\u5e94\u8be5\u90fd\u5c3d\u91cf\u4f7f\u7528 Sidecar \u65b9\u6848\u3002","title":"2-1 Sidecar or Receiver"},{"location":"chap11/65thanos_setup/#2-2-ruler","text":"Ruler \u662f\u4e00\u4e2a\u53ef\u9009\u7ec4\u4ef6\uff0c\u539f\u5219\u4e0a\u63a8\u8350\u5c3d\u91cf\u4f7f\u7528 Prometheus \u81ea\u5e26\u7684 rule \u529f\u80fd (\u751f\u6210\u65b0\u6307\u6807+\u544a\u8b66)\uff0c\u8fd9\u4e2a\u529f\u80fd\u9700\u8981\u4e00\u4e9b Prometheus \u6700\u65b0\u6570\u636e\uff0c\u76f4\u63a5\u4f7f\u7528 Prometheus \u672c\u673a rule \u529f\u80fd\u548c\u6570\u636e\uff0c\u6027\u80fd\u5f00\u9500\u76f8\u6bd4 Thanos Ruler \u8fd9\u79cd\u5206\u5e03\u5f0f\u65b9\u6848\u5c0f\u5f97\u591a\uff0c\u5e76\u4e14\u51e0\u4e4e\u4e0d\u4f1a\u51fa\u9519\uff0cThanos Ruler \u7531\u4e8e\u662f\u5206\u5e03\u5f0f\uff0c\u6240\u4ee5\u66f4\u5bb9\u6613\u51fa\u9519\u4e00\u4e9b\u3002 \u5982\u679c\u67d0\u4e9b\u6709\u5173\u8054\u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a\u4e0d\u540c Prometheus \u4e0a\uff0c\u6bd4\u5982\u5bf9\u67d0\u4e2a\u5927\u89c4\u6a21\u670d\u52a1\u91c7\u96c6\u505a\u4e86\u5206\u7247\uff0c\u6bcf\u4e2a Prometheus \u4ec5\u91c7\u96c6\u4e00\u90e8\u5206 endpoint \u7684\u6570\u636e\uff0c\u5bf9\u4e8e record \u7c7b\u578b\u7684 rule (\u751f\u6210\u7684\u65b0\u6307\u6807)\uff0c\u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528 Prometheus \u81ea\u5e26\u7684 rule \u529f\u80fd\uff0c\u5728\u67e5\u8be2\u65f6\u518d\u805a\u5408\u4e00\u4e0b\u5c31\u53ef\u4ee5(\u5982\u679c\u53ef\u4ee5\u63a5\u53d7\u7684\u8bdd)\uff1b \u5bf9\u4e8e alert \u7c7b\u578b\u7684 rule\uff0c\u5c31\u9700\u8981\u7528 Thanos Ruler \u6765\u505a\u4e86\uff0c\u56e0\u4e3a\u6709\u5173\u8054\u7684\u6570\u636e\u5206\u6563\u5728\u591a\u4e2a Prometheus \u4e0a\uff0c\u7528\u5355\u673a\u6570\u636e\u53bb\u505a alert \u8ba1\u7b97\u662f\u4e0d\u51c6\u786e\u7684\uff0c\u5c31\u53ef\u80fd\u4f1a\u9020\u6210\u8bef\u544a\u8b66\u6216\u4e0d\u544a\u8b66\u3002","title":"2-2 \u8bc4\u4f30\u662f\u5426\u9700\u8981 Ruler"},{"location":"chap11/65thanos_setup/#2-3-store-gateway-compact","text":"Store \u4e5f\u662f\u4e00\u4e2a\u53ef\u9009\u7ec4\u4ef6\uff0c\u4e5f\u662f Thanos \u7684\u4e00\u5927\u4eae\u70b9\u7684\u5173\u952e\uff1a\u6570\u636e\u957f\u671f\u4fdd\u5b58\u3002 \u8bc4\u4f30\u662f\u5426\u9700\u8981 Store \u7ec4\u4ef6\u5b9e\u9645\u5c31\u662f\u8bc4\u4f30\u4e00\u4e0b\u81ea\u5df1\u662f\u5426\u6709\u6570\u636e\u957f\u671f\u5b58\u50a8\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u67e5\u770b\u4e00\u4e24\u4e2a\u6708\u524d\u7684\u76d1\u63a7\u6570\u636e\u3002\u5982\u679c\u6709\uff0c\u90a3\u4e48 Thanos \u53ef\u4ee5\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u4fdd\u5b58\u3002Thanos \u652f\u6301\u4ee5\u4e0b\u5bf9\u8c61\u5b58\u50a8 Google Cloud Storage AWS/S3 Azure Storage Account OpenStack Swift Tencent COS AliYun OSS \u5728\u56fd\u5185\uff0c\u6700\u65b9\u4fbf\u8fd8\u662f\u4f7f\u7528\u817e\u8baf\u4e91 COS \u6216\u8005\u963f\u91cc\u4e91 OSS \u8fd9\u6837\u7684\u516c\u6709\u4e91\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\u3002\u5982\u679c\u4f60\u7684\u670d\u52a1\u6ca1\u6709\u8dd1\u5728\u516c\u6709\u4e91\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8ddf\u4e91\u670d\u52a1\u5382\u5546\u62c9\u4e13\u7ebf\u7684\u65b9\u5f0f\u6765\u8d70\u5185\u7f51\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\uff0c\u8fd9\u6837\u901f\u5ea6\u901a\u5e38\u4e5f\u662f\u53ef\u4ee5\u6ee1\u8db3\u9700\u6c42\u7684\uff1b\u5982\u679c\u5b9e\u5728\u7528\u4e0d\u4e86\u516c\u6709\u4e91\u7684\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1 \u5b89\u88c5 minio & mino \u6765\u642d\u5efa\u517c\u5bb9 AWS \u7684 S3 \u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\u3002 \u641e\u5b9a\u4e86\u5bf9\u8c61\u5b58\u50a8\uff0c\u8fd8\u9700\u8981\u7ed9 Thanos \u591a\u4e2a\u7ec4\u4ef6\u914d\u7f6e\u5bf9\u8c61\u5b58\u50a8\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u80fd\u591f\u4e0a\u4f20\u4e0e\u8bfb\u53d6\u76d1\u63a7\u6570\u636e\u3002\u9664 Query \u4ee5\u5916\u7684\u6240\u6709 Thanos \u7ec4\u4ef6 (Sidecar\u3001Receiver\u3001Ruler\u3001Store Gateway\u3001Compact) \u90fd\u9700\u8981\u914d\u7f6e\u5bf9\u8c61\u5b58\u50a8\u4fe1\u606f\uff0c\u4f7f\u7528 --objstore.config \u76f4\u63a5\u914d\u7f6e\u5185\u5bb9\u6216 --objstore.config-file \u5f15\u7528\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u6587\u4ef6\uff0c\u4e0d\u540c\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u53c2\u8003\u5b98\u65b9\u6587\u6863: https://thanos.io/storage.md","title":"2-3 \u8bc4\u4f30\u662f\u5426\u9700\u8981 Store Gateway \u4e0e Compact"},{"location":"chap11/65thanos_setup/#2-4","text":"\u5982\u679c\u6211\u4eec\u8981\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\u6765\u957f\u671f\u4fdd\u5b58\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u8981\u51c6\u5907\u4e0b\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\u4fe1\u606f ( thanos-objectstorage-secret.yaml )\uff0c\u6bd4\u5982\u4f7f\u7528\u817e\u8baf\u4e91 COS \u6765\u5b58\u50a8: apiVersion: v1 kind: Secret metadata: name: thanos-objectstorage namespace: thanos type: Opaque stringData: objectstorage.yaml: | type: COS config: bucket: \"thanos\" region: \"ap-singapore\" app_id: \"12*******5\" secret_key: \"tsY***************************Edm\" secret_id: \"AKI******************************gEY\" \u6216\u8005\u4f7f\u7528\u963f\u91cc\u4e91 OSS \u5b58\u50a8: apiVersion: v1 kind: Secret metadata: name: thanos-objectstorage namespace: thanos type: Opaque stringData: objectstorage.yaml: | type: ALIYUNOSS config: endpoint: \"oss-cn-hangzhou-internal.aliyuncs.com\" bucket: \"thanos\" access_key_id: \"LTA******************KBu\" access_key_secret: \"oki************************2HQ\" $ helm install minio minio/minio --set service.type=NodePort --set defaultBucket.enabled=true --set defaultBucket.name=thanos --set persistence.enabled=false --namespace thanos NAME: minio LAST DEPLOYED: Thu May 12 15:11:03 2022 NAMESPACE: thanos STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: ... 2. Get the ACCESS_KEY=$(kubectl get secret minio -o jsonpath=\"{.data.accesskey}\" | base64 --decode) and the SECRET_KEY=$(kubectl get secret minio -o jsonpath=\"{.data.secretkey}\" | base64 --decode) ... Alternately, you can use your browser or the Minio SDK to access the server - https://docs.minio.io/categories/17 $ kubectl get secret minio -o jsonpath=\"{.data.accesskey}\" -n thanos | base64 --decode 0iqANq2qwU6OJ4KgfuSb $ kubectl get secret minio -o jsonpath=\"{.data.secretkey}\" -n thanos | base64 --decode Sr5Nmc8OV9RvGLywhW6TfA3E2vqM6R7jiOurixAI Localfile system apiVersion: v1 kind: Secret metadata: name: thanos-objectstorage namespace: thanos type: Opaque stringData: objectstorage.yaml: | type: FILESYSTEM config: directory: \"/Users/.../data/thanos\" $ kubectl apply -f thanos-objectstorage-secret.yaml secret/thanos-objectstorage created","title":"2-4 \u51c6\u5907\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e"},{"location":"chap11/65thanos_setup/#2-5-prometheus-sidecar","text":"\u5982\u679c\u9009\u7528 Sidecar \u65b9\u6848\uff0c\u5c31\u9700\u8981\u7ed9 Prometheus \u52a0\u4e0a Thanos Sidecar\uff0c\u51c6\u5907 prometheus.yaml: kind: Service apiVersion: v1 metadata: name: prometheus-headless namespace: thanos labels: app.kubernetes.io/name: prometheus spec: type: ClusterIP clusterIP: None selector: app.kubernetes.io/name: prometheus ports: - name: web protocol: TCP port: 9090 targetPort: web - name: grpc port: 10901 targetPort: grpc --- apiVersion: v1 kind: ServiceAccount metadata: name: prometheus namespace: thanos --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: prometheus namespace: thanos rules: - apiGroups: [\"\"] resources: - nodes - nodes/proxy - nodes/metrics - services - endpoints - pods verbs: [\"get\", \"list\", \"watch\"] - apiGroups: [\"\"] resources: [\"configmaps\"] verbs: [\"get\"] - nonResourceURLs: [\"/metrics\"] verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: prometheus subjects: - kind: ServiceAccount name: prometheus namespace: thanos roleRef: kind: ClusterRole name: prometheus apiGroup: rbac.authorization.k8s.io --- apiVersion: apps/v1 kind: StatefulSet metadata: name: prometheus namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: serviceName: prometheus-headless podManagementPolicy: Parallel replicas: 2 selector: matchLabels: app.kubernetes.io/name: prometheus template: metadata: labels: app.kubernetes.io/name: prometheus spec: serviceAccountName: prometheus securityContext: fsGroup: 2000 runAsNonRoot: true runAsUser: 1000 # affinity: # podAntiAffinity: # requiredDuringSchedulingIgnoredDuringExecution: # - labelSelector: # matchExpressions: # - key: app.kubernetes.io/name # operator: In # values: # - prometheus # topologyKey: kubernetes.io/hostname containers: - name: prometheus image: quay.io/prometheus/prometheus:v2.15.2 args: - --config.file=/etc/prometheus/config_out/prometheus.yaml - --storage.tsdb.path=/prometheus - --storage.tsdb.retention.time=10d - --web.route-prefix=/ - --web.enable-lifecycle - --storage.tsdb.no-lockfile - --storage.tsdb.min-block-duration=2h - --storage.tsdb.max-block-duration=2h - --log.level=debug ports: - containerPort: 9090 name: web protocol: TCP livenessProbe: failureThreshold: 6 httpGet: path: /-/healthy port: web scheme: HTTP periodSeconds: 5 successThreshold: 1 timeoutSeconds: 3 readinessProbe: failureThreshold: 120 httpGet: path: /-/ready port: web scheme: HTTP periodSeconds: 5 successThreshold: 1 timeoutSeconds: 3 volumeMounts: - mountPath: /etc/prometheus/config_out name: prometheus-config-out readOnly: true - mountPath: /prometheus name: prometheus-storage - mountPath: /etc/prometheus/rules name: prometheus-rules - name: thanos image: quay.io/thanos/thanos:v0.11.0 args: - sidecar - --log.level=debug - --tsdb.path=/prometheus - --prometheus.url=http://127.0.0.1:9090 - --objstore.config-file=/etc/thanos/objectstorage.yaml - --reloader.config-file=/etc/prometheus/config/prometheus.yaml.tmpl - --reloader.config-envsubst-file=/etc/prometheus/config_out/prometheus.yaml - --reloader.rule-dir=/etc/prometheus/rules/ env: - name: POD_NAME valueFrom: fieldRef: fieldPath: metadata.name ports: - name: http-sidecar containerPort: 10902 - name: grpc containerPort: 10901 livenessProbe: httpGet: port: 10902 path: /-/healthy readinessProbe: httpGet: port: 10902 path: /-/ready volumeMounts: - name: prometheus-config-tmpl mountPath: /etc/prometheus/config - name: prometheus-config-out mountPath: /etc/prometheus/config_out - name: prometheus-rules mountPath: /etc/prometheus/rules - name: prometheus-storage mountPath: /prometheus - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml volumes: - name: prometheus-config-tmpl configMap: defaultMode: 420 name: prometheus-config-tmpl - name: prometheus-config-out emptyDir: {} - name: prometheus-rules configMap: name: prometheus-rules - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: name: prometheus-storage labels: app.kubernetes.io/name: prometheus spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi volumeMode: hostpath Prometheus \u4f7f\u7528 StatefulSet \u65b9\u5f0f\u90e8\u7f72\uff0c\u6302\u8f7d\u6570\u636e\u76d8\u4ee5\u4fbf\u5b58\u50a8\u6700\u65b0\u76d1\u63a7\u6570\u636e\u3002 \u7531\u4e8e Prometheus \u526f\u672c\u4e4b\u95f4\u6ca1\u6709\u542f\u52a8\u987a\u5e8f\u7684\u4f9d\u8d56\uff0c\u6240\u4ee5 podManagementPolicy \u6307\u5b9a\u4e3a Parallel\uff0c\u52a0\u5feb\u542f\u52a8\u901f\u5ea6 \u3002 \u4e3a Prometheus \u7ed1\u5b9a\u8db3\u591f\u7684 RBAC \u6743\u9650\uff0c\u4ee5\u4fbf\u540e\u7eed\u914d\u7f6e\u4f7f\u7528 k8s \u7684\u670d\u52a1\u53d1\u73b0 ( kubernetes_sd_configs ) \u65f6\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002 \u4e3a Prometheus \u521b\u5efa headless \u7c7b\u578b service\uff0c\u4e3a\u540e\u7eed Thanos Query \u901a\u8fc7 DNS SRV \u8bb0\u5f55\u6765\u52a8\u6001\u53d1\u73b0 Sidecar \u7684 gRPC \u7aef\u70b9\u505a\u51c6\u5907 (\u4f7f\u7528 headless service \u624d\u80fd\u8ba9 DNS SRV \u6b63\u786e\u8fd4\u56de\u6240\u6709\u7aef\u70b9)\u3002 \u4f7f\u7528\u4e24\u4e2a Prometheus \u526f\u672c\uff0c\u7528\u4e8e\u5b9e\u73b0\u9ad8\u53ef\u7528\u3002 \u4f7f\u7528\u786c\u53cd\u4eb2\u548c\uff0c\u907f\u514d Prometheus \u90e8\u7f72\u5728\u540c\u4e00\u8282\u70b9\uff0c\u65e2\u53ef\u4ee5\u5206\u6563\u538b\u529b\u4e5f\u53ef\u4ee5\u907f\u514d\u5355\u70b9\u6545\u969c\u3002 Prometheus \u4f7f\u7528 --storage.tsdb.retention.time \u6307\u5b9a\u6570\u636e\u4fdd\u7559\u65f6\u957f\uff0c\u9ed8\u8ba415\u5929\uff0c\u53ef\u4ee5\u6839\u636e\u6570\u636e\u589e\u957f\u901f\u5ea6\u548c\u6570\u636e\u76d8\u5927\u5c0f\u505a\u9002\u5f53\u8c03\u6574(\u6570\u636e\u589e\u957f\u53d6\u51b3\u4e8e\u91c7\u96c6\u7684\u6307\u6807\u548c\u76ee\u6807\u7aef\u70b9\u7684\u6570\u91cf\u548c\u91c7\u96c6\u9891\u7387)\u3002 Sidecar \u4f7f\u7528 --objstore.config-file \u5f15\u7528\u6211\u4eec\u521a\u521a\u521b\u5efa\u5e76\u6302\u8f7d\u7684\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u4e0a\u4f20\u6570\u636e\u5230\u5bf9\u8c61\u5b58\u50a8\u3002 \u901a\u5e38\u4f1a\u7ed9 Prometheus \u9644\u5e26\u4e00\u4e2a quay.io/coreos/prometheus-config-reloader \u6765\u76d1\u542c\u914d\u7f6e\u53d8\u66f4\u5e76\u52a8\u6001\u52a0\u8f7d\uff0c\u4f46 thanos sidecar \u4e5f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u529f\u80fd\uff0c \u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528 thanos sidecar \u6765\u5b9e\u73b0\u6b64\u529f\u80fd\uff0c\u4e5f\u652f\u6301\u914d\u7f6e\u6587\u4ef6\u6839\u636e\u6a21\u677f\u52a8\u6001\u751f\u6210\uff1a --reloader.config-file \u6307\u5b9a Prometheus \u914d\u7f6e\u6587\u4ef6\u6a21\u677f\uff0c --reloader.config-envsubst-file \u6307\u5b9a\u751f\u6210\u914d\u7f6e\u6587\u4ef6\u7684\u5b58\u653e\u8def\u5f84\uff0c\u5047\u8bbe\u662f /etc/prometheus/config_out/prometheus.yaml \uff0c\u90a3\u4e48 /etc/prometheus/config_out \u8fd9\u4e2a\u8def\u5f84\u4f7f\u7528 emptyDir \u8ba9 Prometheus \u4e0e Sidecar \u5b9e\u73b0\u914d\u7f6e\u6587\u4ef6\u5171\u4eab\u6302\u8f7d\uff0c Prometheus \u518d\u901a\u8fc7 --config.file \u6307\u5b9a\u751f\u6210\u51fa\u6765\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5f53\u914d\u7f6e\u6709\u66f4\u65b0\u65f6\uff0c\u6302\u8f7d\u7684\u914d\u7f6e\u6587\u4ef6\u4e5f\u4f1a\u540c\u6b65\u66f4\u65b0\uff0cSidecar \u4e5f\u4f1a\u901a\u77e5 Prometheus \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u3002 \u53e6\u5916\uff0cSidecar \u4e0e Prometheus \u4e5f\u6302\u8f7d\u540c\u4e00\u4efd rules \u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u66f4\u65b0\u540e Sidecar \u4ec5\u901a\u77e5 Prometheus \u52a0\u8f7d\u914d\u7f6e\uff0c\u4e0d\u652f\u6301\u6a21\u677f\uff0c\u56e0\u4e3a rules \u914d\u7f6e\u4e0d\u9700\u8981\u6a21\u677f\u6765\u52a8\u6001\u751f\u6210\u3002 \u7136\u540e\u518d\u7ed9 Prometheus \u51c6\u5907\u914d\u7f6e (prometheus-config.yaml): apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config-tmpl namespace: thanos data: prometheus.yaml.tmpl: |- global: scrape_interval: 5s evaluation_interval: 5s external_labels: cluster: prometheus-ha prometheus_replica: $(POD_NAME) rule_files: - /etc/prometheus/rules/*rules.yaml scrape_configs: - job_name: cadvisor metrics_path: /metrics/cadvisor scrape_interval: 10s scrape_timeout: 10s scheme: https tls_config: insecure_skip_verify: true bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) --- apiVersion: v1 kind: ConfigMap metadata: name: prometheus-rules labels: name: prometheus-rules namespace: thanos data: alert-rules.yaml: |- groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate - expr: | sum(container_memory_usage_bytes{job=\"cadvisor\", image!=\"\", container!=\"\"}) by (namespace) record: namespace:container_memory_usage_bytes:sum - expr: | sum by (namespace, pod, container) ( rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m]) ) record: namespace_pod_container:container_cpu_usage_seconds_total:sum_rate \u672c\u6587\u91cd\u70b9\u4e0d\u5728 prometheus \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ec5\u4ee5\u91c7\u96c6 kubelet \u6240\u66b4\u9732\u7684 cadvisor \u5bb9\u5668\u6307\u6807\u7684\u7b80\u5355\u914d\u7f6e\u4e3a\u4f8b\u3002 Prometheus \u5b9e\u4f8b\u91c7\u96c6\u7684\u6240\u6709\u6307\u6807\u6570\u636e\u91cc\u90fd\u4f1a\u989d\u5916\u52a0\u4e0a external_labels \u91cc\u6307\u5b9a\u7684 label\uff0c\u901a\u5e38\u7528 cluster \u533a\u5206\u5f53\u524d Prometheus \u6240\u5728\u96c6\u7fa4\u7684\u540d\u79f0\uff0c\u6211\u4eec\u518d\u52a0\u4e86\u4e2a prometheus_replica \uff0c\u7528\u4e8e\u533a\u5206\u76f8\u540c Prometheus \u526f\u672c\uff08\u8fd9\u4e9b\u526f\u672c\u6240\u91c7\u96c6\u7684\u6570\u636e\u9664\u4e86 prometheus_replica \u7684\u503c\u4e0d\u4e00\u6837\uff0c\u5176\u5b83\u51e0\u4e4e\u4e00\u81f4\uff0c\u8fd9\u4e2a\u503c\u4f1a\u88ab Thanos Sidecar \u66ff\u6362\u6210 Pod \u526f\u672c\u7684\u540d\u79f0\uff0c\u7528\u4e8e Thanos \u5b9e\u73b0 Prometheus \u9ad8\u53ef\u7528\uff09","title":"2-5 \u7ed9 Prometheus \u52a0\u4e0a Sidecar"},{"location":"chap11/65thanos_setup/#2-6-query","text":"\u51c6\u5907 thanos-query.yaml : apiVersion: v1 kind: Service metadata: name: thanos-query namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: ports: - name: grpc port: 10901 targetPort: grpc - name: http port: 9090 targetPort: http selector: app.kubernetes.io/name: thanos-query --- apiVersion: apps/v1 kind: Deployment metadata: name: thanos-query namespace: thanos labels: app.kubernetes.io/name: thanos-query spec: replicas: 1 # replicas: 3 selector: matchLabels: app.kubernetes.io/name: thanos-query template: metadata: labels: app.kubernetes.io/name: thanos-query spec: # affinity: # podAntiAffinity: # preferredDuringSchedulingIgnoredDuringExecution: # - podAffinityTerm: # labelSelector: # matchExpressions: # - key: app.kubernetes.io/name # operator: In # values: # - thanos-query # topologyKey: kubernetes.io/hostname # weight: 100 containers: - args: - query - --log.level=debug - --query.auto-downsampling - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:9090 - --query.partial-response - --query.replica-label=prometheus_replica - --query.replica-label=rule_replica - --store=dnssrv+_grpc._tcp.prometheus-headless.thanos.svc.cluster.local - --store=dnssrv+_grpc._tcp.thanos-rule.thanos.svc.cluster.local - --store=dnssrv+_grpc._tcp.thanos-store.thanos.svc.cluster.local image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 9090 scheme: HTTP periodSeconds: 30 name: thanos-query ports: - containerPort: 10901 name: grpc - containerPort: 9090 name: http readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 9090 scheme: HTTP periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError terminationGracePeriodSeconds: 120 $ kubectl get pod,svc -n thanos | grep query pod/thanos-query-7b47b5c947-lsq7x 1/1 Running 0 45s service/thanos-query ClusterIP 10.96.231.202 <none> 10901/TCP,9090/TCP 45s \u56e0\u4e3a Query \u662f\u65e0\u72b6\u6001\u7684\uff0c\u4f7f\u7528 Deployment \u90e8\u7f72\uff0c\u4e5f\u4e0d\u9700\u8981 headless service\uff0c\u76f4\u63a5\u521b\u5efa\u666e\u901a\u7684 service\u3002 \u4f7f\u7528\u8f6f\u53cd\u4eb2\u548c\uff0c\u5c3d\u91cf\u4e0d\u8ba9 Query \u8c03\u5ea6\u5230\u540c\u4e00\u8282\u70b9 \u3002 \u90e8\u7f72\u591a\u4e2a\u526f\u672c\uff0c\u5b9e\u73b0 Query \u7684\u9ad8\u53ef\u7528\u3002 --query.partial-response \u542f\u7528 Partial Response\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u90e8\u5206\u540e\u7aef Store API \u8fd4\u56de\u9519\u8bef\u6216\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u770b\u5230\u6b63\u786e\u7684\u76d1\u63a7\u6570\u636e(\u5982\u679c\u540e\u7aef Store API \u505a\u4e86\u9ad8\u53ef\u7528\uff0c\u6302\u6389\u4e00\u4e2a\u526f\u672c\uff0cQuery \u8bbf\u95ee\u6302\u6389\u7684\u526f\u672c\u8d85\u65f6\uff0c\u4f46\u7531\u4e8e\u8fd8\u6709\u6ca1\u6302\u6389\u7684\u526f\u672c\uff0c\u8fd8\u662f\u80fd\u6b63\u786e\u8fd4\u56de\u7ed3\u679c\uff1b\u5982\u679c\u6302\u6389\u7684\u67d0\u4e2a\u540e\u7aef\u672c\u8eab\u5c31\u4e0d\u5b58\u5728\u6211\u4eec\u9700\u8981\u7684\u6570\u636e\uff0c\u6302\u6389\u4e5f\u4e0d\u5f71\u54cd\u7ed3\u679c\u7684\u6b63\u786e\u6027\uff1b\u603b\u4e4b\u5982\u679c\u5404\u4e2a\u7ec4\u4ef6\u90fd\u505a\u4e86\u9ad8\u53ef\u7528\uff0c\u60f3\u83b7\u5f97\u9519\u8bef\u7684\u7ed3\u679c\u90fd\u96be\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u4fe1\u5fc3\u542f\u7528 Partial Response \u8fd9\u4e2a\u529f\u80fd)\u3002 --query.auto-downsampling \u67e5\u8be2\u65f6\u81ea\u52a8\u964d\u91c7\u6837\uff0c\u63d0\u5347\u67e5\u8be2\u6548\u7387 \u3002 --query.replica-label \u6307\u5b9a\u6211\u4eec\u521a\u521a\u7ed9 Prometheus \u914d\u7f6e\u7684 prometheus_replica \u8fd9\u4e2a external label\uff0cQuery \u5411 Sidecar \u62c9\u53d6 Prometheus \u6570\u636e\u65f6\u4f1a\u8bc6\u522b\u8fd9\u4e2a label \u5e76\u81ea\u52a8\u53bb\u91cd\uff0c\u8fd9\u6837\u5373\u4f7f\u6302\u6389\u4e00\u4e2a\u526f\u672c\uff0c\u53ea\u8981\u81f3\u5c11\u6709\u4e00\u4e2a\u526f\u672c\u6b63\u5e38\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u67e5\u8be2\u7ed3\u679c\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u5b9e\u73b0 Prometheus \u7684\u9ad8\u53ef\u7528\u3002\u540c\u7406\uff0c\u518d\u6307\u5b9a\u4e00\u4e2a rule_replica \u7528\u4e8e\u7ed9 Ruler \u505a\u9ad8\u53ef\u7528\u3002 --store \u6307\u5b9a\u5b9e\u73b0\u4e86 Store API \u7684\u5730\u5740(Sidecar, Ruler, Store Gateway, Receiver)\uff0c\u901a\u5e38\u4e0d\u5efa\u8bae\u5199\u9759\u6001\u5730\u5740\uff0c\u800c\u662f\u4f7f\u7528\u670d\u52a1\u53d1\u73b0\u673a\u5236\u81ea\u52a8\u53d1\u73b0 Store API \u5730\u5740 \uff0c\u5982\u679c\u662f\u90e8\u7f72\u5728\u540c\u4e00\u4e2a\u96c6\u7fa4\uff0c\u53ef\u4ee5\u7528 DNS SRV \u8bb0\u5f55\u6765\u505a\u670d\u52a1\u53d1\u73b0\uff0c\u6bd4\u5982 dnssrv+_grpc._tcp.prometheus-headless.thanos.svc.cluster.local \uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u521a\u521a\u4e3a\u5305\u542b Sidecar \u7684 Prometheus \u521b\u5efa\u7684 headless service (\u4f7f\u7528 headless service \u624d\u80fd\u6b63\u786e\u5b9e\u73b0\u670d\u52a1\u53d1\u73b0)\uff0c \u5e76\u4e14\u6307\u5b9a\u4e86\u540d\u4e3a grpc \u7684 tcp \u7aef\u53e3\uff0c\u540c\u7406\uff0c\u5176\u5b83\u7ec4\u4ef6\u4e5f\u53ef\u4ee5\u6309\u7167\u8fd9\u6837\u52a0\u5230 --store \u53c2\u6570\u91cc \uff1b \u5982\u679c\u662f\u5176\u5b83\u6709\u4e9b\u7ec4\u4ef6\u90e8\u7f72\u5728\u96c6\u7fa4\u5916\uff0c\u65e0\u6cd5\u901a\u8fc7\u96c6\u7fa4 dns \u89e3\u6790 DNS SRV \u8bb0\u5f55\uff0c\u53ef\u4ee5\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u6765\u505a\u670d\u52a1\u53d1\u73b0\uff0c\u4e5f\u5c31\u662f\u6307\u5b9a --store.sd-files \u53c2\u6570\uff0c\u5c06\u5176\u5b83 Store API \u5730\u5740\u5199\u5728\u914d\u7f6e\u6587\u4ef6\u91cc (\u6302\u8f7d ConfigMap)\uff0c\u9700\u8981\u589e\u52a0\u5730\u5740\u65f6\u76f4\u63a5\u66f4\u65b0 ConfigMap (\u4e0d\u9700\u8981\u91cd\u542f Query)\u3002","title":"2-6 \u5b89\u88c5 Query"},{"location":"chap11/65thanos_setup/#2-7-store-gateway","text":"\u51c6\u5907 thanos-store.yaml: apiVersion: v1 kind: Service metadata: name: thanos-store namespace: thanos labels: app.kubernetes.io/name: thanos-store spec: clusterIP: None ports: - name: grpc port: 10901 targetPort: 10901 - name: http port: 10902 targetPort: 10902 selector: app.kubernetes.io/name: thanos-store --- apiVersion: apps/v1 kind: StatefulSet metadata: name: thanos-store namespace: thanos labels: app.kubernetes.io/name: thanos-store spec: replicas: 1 selector: matchLabels: app.kubernetes.io/name: thanos-store serviceName: thanos-store podManagementPolicy: Parallel template: metadata: labels: app.kubernetes.io/name: thanos-store spec: containers: - args: - store - --log.level=debug - --data-dir=/var/thanos/store - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:10902 - --objstore.config-file=/etc/thanos/objectstorage.yaml - --experimental.enable-index-header image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 8 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 30 name: thanos-store ports: - containerPort: 10901 name: grpc - containerPort: 10902 name: http readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 10902 scheme: HTTP periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError volumeMounts: - mountPath: /var/thanos/store name: data readOnly: false - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml terminationGracePeriodSeconds: 120 volumes: - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-store name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi storageClassName: hostpath Store Gateway \u5b9e\u9645\u4e5f\u53ef\u4ee5\u505a\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u65e0\u72b6\u6001\uff0c\u5b83\u4f1a\u9700\u8981\u4e00\u70b9\u78c1\u76d8\u7a7a\u95f4\u6765\u5bf9\u5bf9\u8c61\u5b58\u50a8\u505a\u7d22\u5f15\u4ee5\u52a0\u901f\u67e5\u8be2\uff0c\u4f46\u6570\u636e\u4e0d\u90a3\u4e48\u91cd\u8981\uff0c\u662f\u53ef\u4ee5\u5220\u9664\u7684\uff0c\u5220\u9664\u540e\u4f1a\u81ea\u52a8\u53bb\u62c9\u5bf9\u8c61\u5b58\u50a8\u67e5\u6570\u636e\u91cd\u65b0\u5efa\u7acb\u7d22\u5f15 \u3002\u8fd9\u91cc\u6211\u4eec\u907f\u514d\u6bcf\u6b21\u91cd\u542f\u90fd\u91cd\u65b0\u5efa\u7acb\u7d22\u5f15\uff0c\u6240\u4ee5\u7528 StatefulSet \u90e8\u7f72 Store Gateway\uff0c\u6302\u8f7d\u4e00\u5757\u5c0f\u5bb9\u91cf\u7684\u78c1\u76d8(\u7d22\u5f15\u5360\u7528\u4e0d\u5230\u591a\u5927\u7a7a\u95f4)\u3002 \u540c\u6837\u521b\u5efa headless service\uff0c\u7528\u4e8e Query \u5bf9 Store Gateway \u8fdb\u884c\u670d\u52a1\u53d1\u73b0\u3002 \u90e8\u7f72\u4e24\u4e2a\u526f\u672c\uff0c\u5b9e\u73b0 Store Gateway \u7684\u9ad8\u53ef\u7528 \u3002 Store Gateway \u4e5f\u9700\u8981\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u7528\u4e8e\u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\uff0c\u6240\u4ee5\u8981\u6302\u8f7d\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\u6587\u4ef6\u3002","title":"2-7 \u5b89\u88c5 Store Gateway"},{"location":"chap11/65thanos_setup/#2-8-ruler","text":"\u51c6\u5907 Ruler \u90e8\u7f72\u914d\u7f6e thanos-ruler.yaml: apiVersion: v1 kind: Service metadata: labels: app.kubernetes.io/name: thanos-rule name: thanos-rule namespace: thanos spec: clusterIP: None ports: - name: grpc port: 10901 targetPort: grpc - name: http port: 10902 targetPort: http selector: app.kubernetes.io/name: thanos-rule --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: app.kubernetes.io/name: thanos-rule name: thanos-rule namespace: thanos spec: replicas: 2 selector: matchLabels: app.kubernetes.io/name: thanos-rule serviceName: thanos-rule podManagementPolicy: Parallel template: metadata: labels: app.kubernetes.io/name: thanos-rule spec: containers: - args: - rule - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:10902 - --rule-file=/etc/thanos/rules/*rules.yaml - --objstore.config-file=/etc/thanos/objectstorage.yaml - --data-dir=/var/thanos/rule - --label=rule_replica=\"$(NAME)\" - --alert.label-drop=\"rule_replica\" - --query=dnssrv+_http._tcp.thanos-query.thanos.svc.cluster.local env: - name: NAME valueFrom: fieldRef: fieldPath: metadata.name image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 24 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 5 name: thanos-rule ports: - containerPort: 10901 name: grpc - containerPort: 10902 name: http readinessProbe: failureThreshold: 18 httpGet: path: /-/ready port: 10902 scheme: HTTP initialDelaySeconds: 10 periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError volumeMounts: - mountPath: /var/thanos/rule name: data readOnly: false - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml - name: thanos-rules mountPath: /etc/thanos/rules volumes: - name: thanos-objectstorage secret: secretName: thanos-objectstorage - name: thanos-rules configMap: name: thanos-rules volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-rule name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi \u518d\u51c6\u5907 Ruler \u914d\u7f6e\u6587\u4ef6 thanos-ruler-config.yaml : apiVersion: v1 kind: ConfigMap metadata: name: thanos-rules labels: name: thanos-rules namespace: thanos data: record.rules.yaml: |- groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate - expr: | sum(container_memory_usage_bytes{job=\"cadvisor\", image!=\"\", container!=\"\"}) by (namespace) record: namespace:container_memory_usage_bytes:sum - expr: | sum by (namespace, pod, container) ( rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m]) ) record: namespace_pod_container:container_cpu_usage_seconds_total:sum_rate \u914d\u7f6e\u5185\u5bb9\u4ec5\u4e3a\u793a\u4f8b\uff0c\u6839\u636e\u81ea\u8eab\u60c5\u51b5\u6765\u914d\u7f6e\uff0c\u683c\u5f0f\u57fa\u672c\u517c\u5bb9 Prometheus \u7684 rule \u914d\u7f6e\u683c\u5f0f\uff0c\u53c2\u8003: https://thanos.io/components/rule.md/#configuring-rules kubectl apply -f thanos-ruler-config.yaml configmap/thanos-rules created","title":"2-8 \u5b89\u88c5 Ruler"},{"location":"chap11/65thanos_setup/#2-9-compact","text":"\u51c6\u5907 Compact \u90e8\u7f72\u914d\u7f6e thanos-compact.yaml: apiVersion: v1 kind: Service metadata: labels: app.kubernetes.io/name: thanos-compact name: thanos-compact namespace: thanos spec: ports: - name: http port: 10902 targetPort: http selector: app.kubernetes.io/name: thanos-compact --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: app.kubernetes.io/name: thanos-compact name: thanos-compact namespace: thanos spec: replicas: 1 selector: matchLabels: app.kubernetes.io/name: thanos-compact serviceName: thanos-compact template: metadata: labels: app.kubernetes.io/name: thanos-compact spec: containers: - args: - compact - --wait - --objstore.config-file=/etc/thanos/objectstorage.yaml - --data-dir=/var/thanos/compact - --debug.accept-malformed-index - --log.level=debug - --retention.resolution-raw=90d - --retention.resolution-5m=180d - --retention.resolution-1h=360d image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 30 name: thanos-compact ports: - containerPort: 10902 name: http readinessProbe: failureThreshold: 20 httpGet: path: /-/ready port: 10902 scheme: HTTP periodSeconds: 5 terminationMessagePolicy: FallbackToLogsOnError volumeMounts: - mountPath: /var/thanos/compact name: data readOnly: false - name: thanos-objectstorage subPath: objectstorage.yaml mountPath: /etc/thanos/objectstorage.yaml terminationGracePeriodSeconds: 120 volumes: - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-compact name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi storageClassName: hostpath Compact \u53ea\u80fd\u90e8\u7f72\u5355\u4e2a\u526f\u672c\uff0c\u56e0\u4e3a\u5982\u679c\u591a\u4e2a\u526f\u672c\u90fd\u53bb\u5bf9\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e\u505a\u538b\u7f29\u548c\u964d\u91c7\u6837\u7684\u8bdd\uff0c\u4f1a\u9020\u6210\u51b2\u7a81\u3002 \u4f7f\u7528 StatefulSet \u90e8\u7f72\uff0c\u65b9\u4fbf\u81ea\u52a8\u521b\u5efa\u548c\u6302\u8f7d\u78c1\u76d8\u3002\u78c1\u76d8\u7528\u4e8e\u5b58\u653e\u4e34\u65f6\u6570\u636e\uff0c\u56e0\u4e3a Compact \u9700\u8981\u4e00\u4e9b\u78c1\u76d8\u7a7a\u95f4\u6765\u5b58\u653e\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u4e2d\u95f4\u6570\u636e\u3002 --wait \u8ba9 Compact \u4e00\u76f4\u8fd0\u884c\uff0c\u8f6e\u8be2\u65b0\u6570\u636e\u6765\u505a\u538b\u7f29\u548c\u964d\u91c7\u6837\u3002 Compact \u4e5f\u9700\u8981\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u7528\u4e8e\u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u6570\u636e\u4ee5\u53ca\u4e0a\u4f20\u538b\u7f29\u548c\u964d\u91c7\u6837\u540e\u7684\u6570\u636e\u5230\u5bf9\u8c61\u5b58\u50a8\u3002 \u521b\u5efa\u4e00\u4e2a\u666e\u901a service\uff0c\u4e3b\u8981\u7528\u4e8e\u88ab Prometheus \u4f7f\u7528 kubernetes \u7684 endpoints \u670d\u52a1\u53d1\u73b0\u6765\u91c7\u96c6\u6307\u6807(\u5176\u5b83\u7ec4\u4ef6\u7684 service \u4e5f\u4e00\u6837\u6709\u8fd9\u4e2a\u7528\u9014)\u3002 --retention.resolution-raw \u6307\u5b9a\u539f\u59cb\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c --retention.resolution-5m \u6307\u5b9a\u964d\u91c7\u6837\u5230\u6570\u636e\u70b9 5 \u5206\u949f\u95f4\u9694\u7684\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c --retention.resolution-1h \u6307\u5b9a\u964d\u91c7\u6837\u5230\u6570\u636e\u70b9 1 \u5c0f\u65f6\u95f4\u9694\u7684\u6570\u636e\u5b58\u653e\u65f6\u957f\uff0c\u5b83\u4eec\u7684\u6570\u636e\u7cbe\u7ec6\u7a0b\u5ea6\u9012\u51cf\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u662f\u9012\u51cf\uff0c\u901a\u5e38\u5efa\u8bae\u5b83\u4eec\u7684\u5b58\u653e\u65f6\u95f4\u9012\u589e\u914d\u7f6e (\u4e00\u822c\u53ea\u6709\u6bd4\u8f83\u65b0\u7684\u6570\u636e\u624d\u4f1a\u653e\u5927\u770b\uff0c\u4e45\u8fdc\u7684\u6570\u636e\u901a\u5e38\u53ea\u4f1a\u4f7f\u7528\u5927\u65f6\u95f4\u8303\u56f4\u67e5\u8be2\u6765\u770b\u4e2a\u5927\u81f4\uff0c\u6240\u4ee5\u5efa\u8bae\u5c06\u7cbe\u7ec6\u7a0b\u5ea6\u4f4e\u7684\u6570\u636e\u5b58\u653e\u66f4\u957f\u65f6\u95f4)","title":"2-9 \u5b89\u88c5 Compact"},{"location":"chap11/65thanos_setup/#2-10-quick-install-grafana","text":"helm repo add bitnami https://charts.bitnami.com/bitnami helm install grafana bitnami/grafana --namespace thanos echo \"User: admin\" echo \"Password: $(kubectl get secret grafana-admin --namespace thanos -o jsonpath=\"{.data.GF_SECURITY_ADMIN_PASSWORD}\" | base64 --decode)\" Password: iW7270HExB kubectl port-forward svc/grafana 8083:3000 -n thanos Add data source: thanos http://thanos-query.thanos.svc.cluster.local:9090","title":"2-10 Quick install grafana"},{"location":"chap11/65thanos_setup/#3-receiver","text":"\u8be5\u7ec4\u4ef6\u5904\u4e8e\u8bd5\u9a8c\u9636\u6bb5\uff0c\u614e\u7528\u3002\u51c6\u5907 Receiver \u90e8\u7f72\u914d\u7f6e thanos-receiver.yaml : apiVersion: v1 kind: ConfigMap metadata: name: thanos-receive-hashrings namespace: thanos data: thanos-receive-hashrings.json: | [ { \"hashring\": \"soft-tenants\", \"endpoints\": [ \"thanos-receive-0.thanos-receive.kube-system.svc.cluster.local:10901\", \"thanos-receive-1.thanos-receive.kube-system.svc.cluster.local:10901\", \"thanos-receive-2.thanos-receive.kube-system.svc.cluster.local:10901\" ] } ] --- apiVersion: v1 kind: Service metadata: name: thanos-receive namespace: thanos labels: kubernetes.io/name: thanos-receive spec: ports: - name: http port: 10902 protocol: TCP targetPort: 10902 - name: remote-write port: 19291 protocol: TCP targetPort: 19291 - name: grpc port: 10901 protocol: TCP targetPort: 10901 selector: kubernetes.io/name: thanos-receive clusterIP: None --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: kubernetes.io/name: thanos-receive name: thanos-receive namespace: thanos spec: replicas: 3 selector: matchLabels: kubernetes.io/name: thanos-receive serviceName: thanos-receive template: metadata: labels: kubernetes.io/name: thanos-receive spec: containers: - args: - receive - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:10902 - --remote-write.address=0.0.0.0:19291 - --objstore.config-file=/etc/thanos/objectstorage.yaml - --tsdb.path=/var/thanos/receive - --tsdb.retention=12h - --label=receive_replica=\"$(NAME)\" - --label=receive=\"true\" - --receive.hashrings-file=/etc/thanos/thanos-receive-hashrings.json - --receive.local-endpoint=$(NAME).thanos-receive.thanos.svc.cluster.local:10901 env: - name: NAME valueFrom: fieldRef: fieldPath: metadata.name image: thanosio/thanos:v0.11.0 livenessProbe: failureThreshold: 4 httpGet: path: /-/healthy port: 10902 scheme: HTTP periodSeconds: 30 name: thanos-receive ports: - containerPort: 10901 name: grpc - containerPort: 10902 name: http - containerPort: 19291 name: remote-write readinessProbe: httpGet: path: /-/ready port: 10902 scheme: HTTP initialDelaySeconds: 10 periodSeconds: 30 resources: limits: cpu: \"4\" memory: 8Gi requests: cpu: \"2\" memory: 4Gi volumeMounts: - mountPath: /var/thanos/receive name: data readOnly: false - mountPath: /etc/thanos/thanos-receive-hashrings.json name: thanos-receive-hashrings subPath: thanos-receive-hashrings.json - mountPath: /etc/thanos/objectstorage.yaml name: thanos-objectstorage subPath: objectstorage.yaml terminationGracePeriodSeconds: 120 volumes: - configMap: defaultMode: 420 name: thanos-receive-hashrings name: thanos-receive-hashrings - name: thanos-objectstorage secret: secretName: thanos-objectstorage volumeClaimTemplates: - metadata: labels: app.kubernetes.io/name: thanos-receive name: data spec: accessModes: - ReadWriteOnce resources: requests: storage: 200Gi \u90e8\u7f72 3 \u4e2a\u526f\u672c\uff0c \u914d\u7f6e hashring\uff0c --label=receive_replica \u4e3a\u6570\u636e\u6dfb\u52a0 receive_replica \u8fd9\u4e2a label (Query \u7684 --query.replica-label \u4e5f\u8981\u52a0\u4e0a\u8fd9\u4e2a) \u6765\u5b9e\u73b0 Receiver \u7684\u9ad8\u53ef\u7528\u3002 Query \u8981\u6307\u5b9a Receiver \u540e\u7aef\u5730\u5740: --store=dnssrv+_grpc._tcp.thanos-receive.thanos.svc.cluster.local request, limit \u6839\u636e\u81ea\u8eab\u89c4\u6a21\u60c5\u51b5\u81ea\u884c\u505a\u9002\u5f53\u8c03\u6574\u3002 --tsdb.retention \u6839\u636e\u81ea\u8eab\u9700\u6c42\u8c03\u6574\u6700\u65b0\u6570\u636e\u7684\u4fdd\u7559\u65f6\u95f4\u3002 \u5982\u679c\u6539\u547d\u540d\u7a7a\u95f4\uff0c\u8bb0\u5f97\u628a Receiver \u7684 --receive.local-endpoint \u53c2\u6570\u4e5f\u6539\u4e0b\uff0c\u4e0d\u7136\u4f1a\u75af\u72c2\u62a5\u9519\u76f4\u81f3 OOMKilled \u3002 \u56e0\u4e3a\u4f7f\u7528\u4e86 Receiver \u6765\u7edf\u4e00\u63a5\u6536 Prometheus \u7684\u6570\u636e\uff0c\u6240\u4ee5 Prometheus \u4e5f\u4e0d\u9700\u8981 Sidecar \u4e86\uff0c\u4f46\u9700\u8981\u7ed9 Prometheus \u914d\u7f6e\u6587\u4ef6\u91cc\u52a0\u4e0b remote_write \uff0c\u8ba9 Prometheus \u5c06\u6570\u636e push \u7ed9 Receiver: remote_write: - url: http://thanos-receive.thanos.svc.cluster.local:19291/api/v1/receive","title":"3 \u5b89\u88c5 Receiver"},{"location":"chap11/65thanos_setup/#3-1-query","text":"\u67e5\u8be2\u76d1\u63a7\u6570\u636e\u65f6\u9700\u8981\u6307\u5b9a Prometheus \u6570\u636e\u6e90\u5730\u5740\uff0c\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86 Thanos \u6765\u505a\u5206\u5e03\u5f0f\uff0c\u800c Thanos \u5173\u952e\u67e5\u8be2\u5165\u53e3\u5c31\u662f Query\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u6570\u636e\u6e90\u5730\u5740\u6307\u5b9a\u4e3a Query \u7684\u5730\u5740\uff0c\u5047\u5982\u4f7f\u7528 Grafana \u67e5\u8be2\uff0c\u8fdb\u5165 Configuration-Data Sources-Add data source \uff0c\u9009\u62e9 Prometheus\uff0c\u6307\u5b9a thanos query \u7684\u5730\u5740: http://thanos-query.thanos.svc.cluster.local:9090","title":"3-1 \u6307\u5b9a Query \u4e3a\u6570\u636e\u6e90"},{"location":"chap11/65thanos_setup/#_1","text":"\u672c\u6587\u6559\u4e86\u5927\u5bb6\u5982\u4f55\u9009\u578b Thanos \u90e8\u7f72\u65b9\u6848\u5e76\u8be6\u7ec6\u8bb2\u89e3\u4e86\u5404\u4e2a\u7ec4\u4ef6\u7684\u5b89\u88c5\u65b9\u6cd5\uff0c\u5982\u679c\u4ed4\u7ec6\u9605\u8bfb\u5b8c\u672c\u7cfb\u5217\u6587\u7ae0\uff0c\u6211\u76f8\u4fe1\u4f60\u5df2\u7ecf\u6709\u80fd\u529b\u642d\u5efa\u5e76\u8fd0\u7ef4\u4e00\u5957\u5927\u578b\u76d1\u63a7\u7cfb\u7edf\u4e86\u3002","title":"\u603b\u7ed3"},{"location":"chap11/66thanos_ruler/","text":"\u7b2c\u4e5d\u8282\uff082022\uff09Thanos Ruler\u7ec4\u4ef6\u7684\u4f7f\u7528 Thano Ruler \u7ec4\u4ef6\u662f\u7528\u4e8e\u8bc4\u4f30 Prometheus \u7684\u8bb0\u5f55\u89c4\u5219\u548c\u62a5\u8b66\u89c4\u5219\u7684\u7ec4\u4ef6\uff0c\u5176\u672c\u8eab\u4e0d\u4f1a\u6293\u53d6 metrics \u63a5\u53e3\u6570\u636e\uff0c\u800c\u662f\u901a\u8fc7 Query API \u4ece query \u7ec4\u4ef6\u5b9a\u671f\u5730\u83b7\u53d6\u6307\u6807\u6570\u636e\uff0c\u5982\u679c\u914d\u7f6e\u4e86\u591a\u4e2a query \u5730\u5740\uff0c\u5219\u4f1a\u91c7\u7528\u8f6e\u8be2\u65b9\u5f0f\u83b7\u53d6\u3002 \u5176\u4e2d\u8bb0\u5f55\u89c4\u5219\u8bc4\u4f30\u751f\u6210\u7684\u6570\u636e\u4f1a\u4fdd\u5b58\u5728\u672c\u5730\uff0c\u5e76\u4e14\u5b9a\u671f\u5730\u626b\u63cf\u672c\u5730\u751f\u6210\u7684 TSDB \u6570\u636e\u5757\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u6876\u4e2d\u4f5c\u4e3a\u5386\u53f2\u6570\u636e\u957f\u671f\u4fdd\u5b58\u3002\u540c\u65f6\u4e5f\u5b9e\u73b0\u4e86 Store API \u53ef\u7528\u4e8e\u67e5\u8be2\u672c\u5730\u4fdd\u5b58\u7684\u6570\u636e\u3002\u4e0e Prometheus \u8282\u70b9\u7c7b\u4f3c\uff0c\u6bcf\u4e2a ruler \u8282\u70b9\u90fd\u4f7f\u7528\u72ec\u7acb\u7684\u5b58\u50a8\uff0c\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u526f\u672c\uff0c\u800c\u4e14\u9700\u8981\u4e3a\u6bcf\u4e2a\u526f\u672c\u5b9e\u4f8b\u5206\u914d\u4e0d\u540c\u7684\u6807\u7b7e\u4ee5\u4f5c\u533a\u5206\uff0c\u56e0\u4e3a store \u7ec4\u4ef6\u5728\u67e5\u8be2\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u5386\u53f2\u6570\u636e\u65f6\u662f\u4ee5\u8be5\u6807\u7b7e\u8fdb\u884c\u5206\u7ec4\u67e5\u8be2\u7684\u3002 1 \u5b89\u88c5 \u7531\u4e8e ruler \u7ec4\u4ef6\u4e5f\u5b9e\u73b0\u4e86 Store API\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u7ec4\u4ef6\u5bf9\u63a5\u5230 store \u7ec4\u4ef6\u4e2d\u53bb\uff0c\u53ea\u9700\u8981\u7ed9\u521b\u5efa\u7684 Pod \u5e26\u4e0a thanos-store-api: \"true\" \u8fd9\u4e2a\u6807\u7b7e\u5373\u53ef\uff08Service \u4f1a\u8fdb\u884c\u81ea\u52a8\u5173\u8054\uff09\u88ab query \u7ec4\u4ef6\u670d\u52a1\u53d1\u73b0\u3002 \u6574\u4f53\u4e0a\u6211\u4eec\u53ef\u4ee5\u628a ruler \u8282\u70b9\u7406\u89e3\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684 Prometheus \u8282\u70b9\uff0c\u53ea\u662f\u4e0d\u9700\u8981 thanos sidecar\uff0c\u4e0d\u6293\u53d6\u6307\u6807\u6570\u636e\uff0c\u53ea\u8d1f\u8d23\u6267\u884c PromQL \u67e5\u8be2\uff0c\u7531\u4e8e\u672c\u8eab\u4f1a\u4fdd\u7559\u72ec\u7acb\u7684\u5b58\u50a8\uff0c\u6240\u4ee5\u540c\u6837\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u505a\u6570\u636e\u7684\u6301\u4e45\u5316\u3002 \u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u90e8\u7f72\u4e24\u4e2a\u526f\u672c\u6765\u5b9e\u73b0\u9ad8\u53ef\u7528\uff0c \u8fd9\u91cc\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a --label=rule_replica \u6807\u7b7e\u6765\u7ed9\u6570\u636e\u6dfb\u52a0\u4e00\u4e2a rule_replica \u7684\u6807\u7b7e, \u540c\u65f6\u6307\u5b9a --alert.label-drop \u4e3a rule_replica \uff0c\u8fd9\u6837\u5728\u89e6\u53d1\u544a\u8b66\u53d1\u9001\u901a\u77e5\u7ed9 AlertManager \u65f6\u53ef\u4ee5\u53bb\u6389\u8fd9\u4e2a label\uff0c\u4ee5\u4fbf\u8ba9 AlertManager \u81ea\u52a8\u53bb\u91cd\uff0c\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u544a\u8b66\u3002 \u7136\u540e\u901a\u8fc7 --query \u53c2\u6570\u6307\u5b9a query \u7ec4\u4ef6\u5730\u5740\uff0c\u6211\u4eec\u8fd9\u91cc\u8fd8\u662f\u4f7f\u7528 DNS SRV \u6765\u505a\u670d\u52a1\u53d1\u73b0\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4ece\u67e5\u8be2\u7ec4\u4ef6\u4e2d\u83b7\u53d6\u6307\u6807\u6570\u636e\u4e86\u3002 ruler \u540c\u6837\u4e5f\u9700\u8981\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u7528\u4e8e\u4e0a\u4f20\u8ba1\u7b97\u51fa\u7684\u6570\u636e\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u6240\u4ee5\u8981\u6302\u8f7d\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\u6587\u4ef6\u3002 --rule-file \u53c2\u6570\u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u6302\u8f7d\u7684 rule \u914d\u7f6e\uff0c ruler \u7ec4\u4ef6\u4f1a\u6839\u636e\u914d\u7f6e\u6765\u751f\u6210\u6570\u636e\u548c\u89e6\u53d1\u62a5\u8b66\u3002 \u5b8c\u6574\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # thanos-ruler.yaml apiVersion: apps/v1 kind: StatefulSet metadata: name: thanos-ruler namespace: kube-mon labels: app: thanos-ruler spec: replicas: 2 selector: matchLabels: app: thanos-ruler serviceName: thanos-rule podManagementPolicy: Parallel template: metadata: labels: app: thanos-ruler thanos-store-api: \"true\" spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 100 podAffinityTerm: topologyKey: kubernetes.io/hostname labelSelector: matchExpressions: - key: app operator: In values: - thanos-ruler containers: - name: thanos-ruler image: thanosio/thanos:v0.25.1 args: - rule - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:10902 - --rule-file=/etc/thanos/rules/*rules.yaml - --objstore.config-file=/etc/secret/thanos.yaml - --data-dir=/var/thanos/rule - --label=rule_replica=\"$(NAME)\" - --alert.label-drop=rule_replica - --query=dnssrv+_http._tcp.thanos-querier.kube-mon.svc.cluster.local ports: - containerPort: 10901 name: grpc - containerPort: 10902 name: http env: - name: NAME valueFrom: fieldRef: fieldPath: metadata.name livenessProbe: httpGet: path: /-/healthy port: 10902 scheme: HTTP readinessProbe: httpGet: path: /-/ready port: 10902 scheme: HTTP volumeMounts: - mountPath: /var/thanos/rule name: data readOnly: false - name: object-storage-config mountPath: /etc/secret readOnly: false - name: thanos-rules mountPath: /etc/thanos/rules volumes: - name: object-storage-config secret: secretName: thanos-objectstorage - name: thanos-rules configMap: name: thanos-rules volumeClaimTemplates: - metadata: name: data spec: accessModes: - ReadWriteOnce storageClassName: longhorn resources: requests: storage: 1Gi \u8981\u6ce8\u610f\u4e0a\u9762\u6302\u8f7d\u7684\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u7684 Secret\uff0c\u53e6\u5916\u8fd8\u9700\u8981\u901a\u8fc7\u4e00\u4e2a ConfigMap \u6765\u914d\u7f6e rules \u89c4\u5219\uff1a # thanos-rules-config.yaml apiVersion: v1 kind: ConfigMap metadata: name: thanos-rules namespace: kube-mon data: record.rules.yaml: |- groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate - expr: | sum(container_memory_usage_bytes{job=\"cadvisor\", image!=\"\", container!=\"\"}) by (namespace) record: namespace:container_memory_usage_bytes:sum - expr: | sum by (namespace, pod, container) ( rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m]) ) record: namespace_pod_container:container_cpu_usage_seconds_total:sum_rate \u8fd9\u91cc\u6211\u4eec\u7b80\u5355\u914d\u7f6e\u4e86\u51e0\u4e2a\u8bb0\u5f55\u89c4\u5219\uff0c\u914d\u7f6e\u65b9\u5f0f\u548c\u4e4b\u524d\u7684\u89c4\u5219\u4e00\u6837\u7684\u3002\u7136\u540e\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/thanos/manifests/thanos-rules-config-0.yaml \u2638 \u279c kubectl apply -f https://p8s.io/docs/thanos/manifests/thanos-ruler-0.yaml \u2638 \u279c kubectl get pods -n kube-mon -l app=thanos-ruler NAME READY STATUS RESTARTS AGE thanos-ruler-0 1/1 Running 0 16m thanos-ruler-1 1/1 Running 0 16m \u90e8\u7f72\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u53bb\u67e5\u770b query \u7ec4\u4ef6\u9875\u9762\u7684 store \u4fe1\u606f\u662f\u5426\u5305\u542b\u4e0a\u9762\u7684 ruler \u5b9e\u4f8b\uff1a \u540c\u6837\u5728 rules \u9875\u9762\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5b9a\u4e49\u7684\u8bb0\u5f55\u89c4\u5219\u4fe1\u606f\uff1a \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u53bb\u67e5\u8be2\u4e0b\u4e0a\u9762\u7684\u8bb0\u5f55\u89c4\u5219\uff0c\u6bd4\u5982\u67e5\u8be2 namespace:container_cpu_usage_seconds_total:sum_rate \uff1a \u53ef\u4ee5\u770b\u5230\u53ef\u4ee5\u6b63\u5e38\u83b7\u53d6\u5230\u8fd9\u6761\u8bb0\u5f55\u89c4\u5219\u7684\u6570\u636e\u3002 2 \u5bf9\u63a5\u544a\u8b66 \u5982\u679c\u8981\u8fdb\u884c\u62a5\u8b66\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u901a\u8fc7\u542f\u52a8\u53c2\u6570 --alertmanagers.url \u6765\u6307\u5b9a Alertmanager \u7684\u5730\u5740\uff0c\u5982\u679c\u9700\u8981\u66f4\u9ad8\u7ea7\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u901a\u8fc7\u542f\u52a8\u53c2\u6570 --alertmanagers.config \u6216\u8005 --alertmanagers.config-file \u6765\u6307\u5b9a\u5bf9\u63a5 Alertmanager \u7684\u914d\u7f6e\uff0c\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a alertmanagers: - http_config: basic_auth: username: \"\" password: \"\" password_file: \"\" bearer_token: \"\" bearer_token_file: \"\" proxy_url: \"\" tls_config: ca_file: \"\" cert_file: \"\" key_file: \"\" server_name: \"\" insecure_skip_verify: false static_configs: [] file_sd_configs: - files: [] refresh_interval: 0s scheme: http path_prefix: \"\" timeout: 10s api_version: v1 \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u5bf9\u63a5\u524d\u9762\u7ae0\u8282\u4e2d\u7684 Alertmanager\uff0c\u5219\u76f4\u63a5\u8fd9\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5bb9\u5668\u542f\u52a8\u53c2\u6570\u4e2d\u589e\u52a0 - --alertmanagers.url=http://alertmanager:9093 \u5373\u53ef\u3002\u7136\u540e\u5728\u4e0a\u9762\u7684 thanos-rules \u7684 ConfigMap \u4e2d\u65b0\u589e\u4e00\u4e2a alert.rules.yaml \u7684\u914d\u7f6e\uff0c\u7528\u6765\u914d\u7f6e\u62a5\u8b66\u89c4\u5219\uff0c\u5982\u4e0b\u6240\u793a\uff1a # thanos-rules-config.yaml apiVersion: v1 kind: ConfigMap metadata: name: thanos-rules namespace: kube-mon data: record.rules.yaml: |- # ...... alert.rules.yaml: |- groups: - name: test-node-mem rules: - alert: NodeMemoryUsage expr: (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes * 100 > 30 for: 1m labels: team: node severity: critical annotations: summary: \"{{$labels.instance}}: High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 30% (current value is: {{ $value }})\" \u76f4\u63a5\u66f4\u65b0\u4e0a\u9762\u7684\u4e24\u4e2a\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/thanos/manifests/thanos-rules-config.yaml \u2638 \u279c kubectl apply -f https://p8s.io/docs/thanos/manifests/thanos-ruler.yaml \u66f4\u65b0\u5b8c\u6210\u540e\u8fd9 query \u7684 rules \u9875\u9762\u4e5f\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u65b0\u589e\u7684\u62a5\u8b66\u89c4\u5219\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u90e8\u7f72\u7684\u662f\u4e24\u4e2a\u526f\u672c\uff0c\u6240\u4ee5\u80fd\u770b\u5230\u4e24\u6761\u4e00\u6837\u7684\u89c4\u5219\uff1a \u7531\u4e8e\u6211\u4eec\u8fd9 ruler \u7ec4\u4ef6\u542f\u52a8\u53c2\u6570\u4e2d\u914d\u7f6e\u4e86\u53c2\u6570 - --alert.label-drop=rule_replica \uff0c\u6240\u4ee5 Alertmanager \u4e2d\u4e0d\u4f1a\u6536\u5230\u91cd\u590d\u62a5\u8b66\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u7ecf\u6d4b\u8bd5\u8fd9\u91cc\u7684 rule_replica \u4e0d\u80fd\u52a0\u5f15\u53f7\uff0c\u52a0\u4e0a\u5f15\u53f7\u4f1a\u53bb\u91cd\u5931\u6548\uff0c\u6211\u4eec\u53ef\u4ee5\u524d\u5f80 Alertmanager \u67e5\u770b\u89e6\u53d1\u7684\u62a5\u8b66\u4fe1\u606f\uff1a \u7531\u4e8e ruler \u7ec4\u4ef6\u83b7\u53d6\u8bc4\u4f30\u6570\u636e\u7684\u8def\u5f84\u662f ruler --> query --> sidecar --> prometheus \uff0c\u9700\u8981\u7ecf\u6574\u4e2a\u67e5\u8be2\u94fe\u6761\uff0c\u8fd9\u4e5f\u63d0\u5347\u4e86\u53d1\u751f\u6545\u969c\u7684\u98ce\u9669\uff0c\u800c\u4e14\u8bc4\u4f30\u539f\u672c\u5c31\u53ef\u4ee5\u5728 Prometheus \u4e2d\u8fdb\u884c\uff0c\u6240\u4ee5\u5728\u975e\u5fc5\u8981\u7684\u60c5\u51b5\u4e0b\u66f4\u52a0\u63a8\u8350\u4f7f\u7528\u539f\u672c\u7684 Prometheus \u65b9\u5f0f\u6765\u505a\u62a5\u8b66\u548c\u8bb0\u5f55\u89c4\u5219\u7684\u8bc4\u4f30\u3002","title":"\u7b2c\u4e5d\u8282\uff082022\uff09Thanos Ruler\u7ec4\u4ef6\u7684\u4f7f\u7528"},{"location":"chap11/66thanos_ruler/#2022thanos-ruler","text":"Thano Ruler \u7ec4\u4ef6\u662f\u7528\u4e8e\u8bc4\u4f30 Prometheus \u7684\u8bb0\u5f55\u89c4\u5219\u548c\u62a5\u8b66\u89c4\u5219\u7684\u7ec4\u4ef6\uff0c\u5176\u672c\u8eab\u4e0d\u4f1a\u6293\u53d6 metrics \u63a5\u53e3\u6570\u636e\uff0c\u800c\u662f\u901a\u8fc7 Query API \u4ece query \u7ec4\u4ef6\u5b9a\u671f\u5730\u83b7\u53d6\u6307\u6807\u6570\u636e\uff0c\u5982\u679c\u914d\u7f6e\u4e86\u591a\u4e2a query \u5730\u5740\uff0c\u5219\u4f1a\u91c7\u7528\u8f6e\u8be2\u65b9\u5f0f\u83b7\u53d6\u3002 \u5176\u4e2d\u8bb0\u5f55\u89c4\u5219\u8bc4\u4f30\u751f\u6210\u7684\u6570\u636e\u4f1a\u4fdd\u5b58\u5728\u672c\u5730\uff0c\u5e76\u4e14\u5b9a\u671f\u5730\u626b\u63cf\u672c\u5730\u751f\u6210\u7684 TSDB \u6570\u636e\u5757\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u6876\u4e2d\u4f5c\u4e3a\u5386\u53f2\u6570\u636e\u957f\u671f\u4fdd\u5b58\u3002\u540c\u65f6\u4e5f\u5b9e\u73b0\u4e86 Store API \u53ef\u7528\u4e8e\u67e5\u8be2\u672c\u5730\u4fdd\u5b58\u7684\u6570\u636e\u3002\u4e0e Prometheus \u8282\u70b9\u7c7b\u4f3c\uff0c\u6bcf\u4e2a ruler \u8282\u70b9\u90fd\u4f7f\u7528\u72ec\u7acb\u7684\u5b58\u50a8\uff0c\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u526f\u672c\uff0c\u800c\u4e14\u9700\u8981\u4e3a\u6bcf\u4e2a\u526f\u672c\u5b9e\u4f8b\u5206\u914d\u4e0d\u540c\u7684\u6807\u7b7e\u4ee5\u4f5c\u533a\u5206\uff0c\u56e0\u4e3a store \u7ec4\u4ef6\u5728\u67e5\u8be2\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u5386\u53f2\u6570\u636e\u65f6\u662f\u4ee5\u8be5\u6807\u7b7e\u8fdb\u884c\u5206\u7ec4\u67e5\u8be2\u7684\u3002","title":"\u7b2c\u4e5d\u8282\uff082022\uff09Thanos Ruler\u7ec4\u4ef6\u7684\u4f7f\u7528"},{"location":"chap11/66thanos_ruler/#1","text":"\u7531\u4e8e ruler \u7ec4\u4ef6\u4e5f\u5b9e\u73b0\u4e86 Store API\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u7ec4\u4ef6\u5bf9\u63a5\u5230 store \u7ec4\u4ef6\u4e2d\u53bb\uff0c\u53ea\u9700\u8981\u7ed9\u521b\u5efa\u7684 Pod \u5e26\u4e0a thanos-store-api: \"true\" \u8fd9\u4e2a\u6807\u7b7e\u5373\u53ef\uff08Service \u4f1a\u8fdb\u884c\u81ea\u52a8\u5173\u8054\uff09\u88ab query \u7ec4\u4ef6\u670d\u52a1\u53d1\u73b0\u3002 \u6574\u4f53\u4e0a\u6211\u4eec\u53ef\u4ee5\u628a ruler \u8282\u70b9\u7406\u89e3\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684 Prometheus \u8282\u70b9\uff0c\u53ea\u662f\u4e0d\u9700\u8981 thanos sidecar\uff0c\u4e0d\u6293\u53d6\u6307\u6807\u6570\u636e\uff0c\u53ea\u8d1f\u8d23\u6267\u884c PromQL \u67e5\u8be2\uff0c\u7531\u4e8e\u672c\u8eab\u4f1a\u4fdd\u7559\u72ec\u7acb\u7684\u5b58\u50a8\uff0c\u6240\u4ee5\u540c\u6837\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u505a\u6570\u636e\u7684\u6301\u4e45\u5316\u3002 \u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u90e8\u7f72\u4e24\u4e2a\u526f\u672c\u6765\u5b9e\u73b0\u9ad8\u53ef\u7528\uff0c \u8fd9\u91cc\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a --label=rule_replica \u6807\u7b7e\u6765\u7ed9\u6570\u636e\u6dfb\u52a0\u4e00\u4e2a rule_replica \u7684\u6807\u7b7e, \u540c\u65f6\u6307\u5b9a --alert.label-drop \u4e3a rule_replica \uff0c\u8fd9\u6837\u5728\u89e6\u53d1\u544a\u8b66\u53d1\u9001\u901a\u77e5\u7ed9 AlertManager \u65f6\u53ef\u4ee5\u53bb\u6389\u8fd9\u4e2a label\uff0c\u4ee5\u4fbf\u8ba9 AlertManager \u81ea\u52a8\u53bb\u91cd\uff0c\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u544a\u8b66\u3002 \u7136\u540e\u901a\u8fc7 --query \u53c2\u6570\u6307\u5b9a query \u7ec4\u4ef6\u5730\u5740\uff0c\u6211\u4eec\u8fd9\u91cc\u8fd8\u662f\u4f7f\u7528 DNS SRV \u6765\u505a\u670d\u52a1\u53d1\u73b0\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4ece\u67e5\u8be2\u7ec4\u4ef6\u4e2d\u83b7\u53d6\u6307\u6807\u6570\u636e\u4e86\u3002 ruler \u540c\u6837\u4e5f\u9700\u8981\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u7528\u4e8e\u4e0a\u4f20\u8ba1\u7b97\u51fa\u7684\u6570\u636e\u5230\u5bf9\u8c61\u5b58\u50a8\uff0c\u6240\u4ee5\u8981\u6302\u8f7d\u5bf9\u8c61\u5b58\u50a8\u7684\u914d\u7f6e\u6587\u4ef6\u3002 --rule-file \u53c2\u6570\u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u6302\u8f7d\u7684 rule \u914d\u7f6e\uff0c ruler \u7ec4\u4ef6\u4f1a\u6839\u636e\u914d\u7f6e\u6765\u751f\u6210\u6570\u636e\u548c\u89e6\u53d1\u62a5\u8b66\u3002 \u5b8c\u6574\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # thanos-ruler.yaml apiVersion: apps/v1 kind: StatefulSet metadata: name: thanos-ruler namespace: kube-mon labels: app: thanos-ruler spec: replicas: 2 selector: matchLabels: app: thanos-ruler serviceName: thanos-rule podManagementPolicy: Parallel template: metadata: labels: app: thanos-ruler thanos-store-api: \"true\" spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 100 podAffinityTerm: topologyKey: kubernetes.io/hostname labelSelector: matchExpressions: - key: app operator: In values: - thanos-ruler containers: - name: thanos-ruler image: thanosio/thanos:v0.25.1 args: - rule - --grpc-address=0.0.0.0:10901 - --http-address=0.0.0.0:10902 - --rule-file=/etc/thanos/rules/*rules.yaml - --objstore.config-file=/etc/secret/thanos.yaml - --data-dir=/var/thanos/rule - --label=rule_replica=\"$(NAME)\" - --alert.label-drop=rule_replica - --query=dnssrv+_http._tcp.thanos-querier.kube-mon.svc.cluster.local ports: - containerPort: 10901 name: grpc - containerPort: 10902 name: http env: - name: NAME valueFrom: fieldRef: fieldPath: metadata.name livenessProbe: httpGet: path: /-/healthy port: 10902 scheme: HTTP readinessProbe: httpGet: path: /-/ready port: 10902 scheme: HTTP volumeMounts: - mountPath: /var/thanos/rule name: data readOnly: false - name: object-storage-config mountPath: /etc/secret readOnly: false - name: thanos-rules mountPath: /etc/thanos/rules volumes: - name: object-storage-config secret: secretName: thanos-objectstorage - name: thanos-rules configMap: name: thanos-rules volumeClaimTemplates: - metadata: name: data spec: accessModes: - ReadWriteOnce storageClassName: longhorn resources: requests: storage: 1Gi \u8981\u6ce8\u610f\u4e0a\u9762\u6302\u8f7d\u7684\u5bf9\u8c61\u5b58\u50a8\u914d\u7f6e\u7684 Secret\uff0c\u53e6\u5916\u8fd8\u9700\u8981\u901a\u8fc7\u4e00\u4e2a ConfigMap \u6765\u914d\u7f6e rules \u89c4\u5219\uff1a # thanos-rules-config.yaml apiVersion: v1 kind: ConfigMap metadata: name: thanos-rules namespace: kube-mon data: record.rules.yaml: |- groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate - expr: | sum(container_memory_usage_bytes{job=\"cadvisor\", image!=\"\", container!=\"\"}) by (namespace) record: namespace:container_memory_usage_bytes:sum - expr: | sum by (namespace, pod, container) ( rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"\"}[5m]) ) record: namespace_pod_container:container_cpu_usage_seconds_total:sum_rate \u8fd9\u91cc\u6211\u4eec\u7b80\u5355\u914d\u7f6e\u4e86\u51e0\u4e2a\u8bb0\u5f55\u89c4\u5219\uff0c\u914d\u7f6e\u65b9\u5f0f\u548c\u4e4b\u524d\u7684\u89c4\u5219\u4e00\u6837\u7684\u3002\u7136\u540e\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/thanos/manifests/thanos-rules-config-0.yaml \u2638 \u279c kubectl apply -f https://p8s.io/docs/thanos/manifests/thanos-ruler-0.yaml \u2638 \u279c kubectl get pods -n kube-mon -l app=thanos-ruler NAME READY STATUS RESTARTS AGE thanos-ruler-0 1/1 Running 0 16m thanos-ruler-1 1/1 Running 0 16m \u90e8\u7f72\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u53bb\u67e5\u770b query \u7ec4\u4ef6\u9875\u9762\u7684 store \u4fe1\u606f\u662f\u5426\u5305\u542b\u4e0a\u9762\u7684 ruler \u5b9e\u4f8b\uff1a \u540c\u6837\u5728 rules \u9875\u9762\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5b9a\u4e49\u7684\u8bb0\u5f55\u89c4\u5219\u4fe1\u606f\uff1a \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u53bb\u67e5\u8be2\u4e0b\u4e0a\u9762\u7684\u8bb0\u5f55\u89c4\u5219\uff0c\u6bd4\u5982\u67e5\u8be2 namespace:container_cpu_usage_seconds_total:sum_rate \uff1a \u53ef\u4ee5\u770b\u5230\u53ef\u4ee5\u6b63\u5e38\u83b7\u53d6\u5230\u8fd9\u6761\u8bb0\u5f55\u89c4\u5219\u7684\u6570\u636e\u3002","title":"1 \u5b89\u88c5"},{"location":"chap11/66thanos_ruler/#2","text":"\u5982\u679c\u8981\u8fdb\u884c\u62a5\u8b66\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u901a\u8fc7\u542f\u52a8\u53c2\u6570 --alertmanagers.url \u6765\u6307\u5b9a Alertmanager \u7684\u5730\u5740\uff0c\u5982\u679c\u9700\u8981\u66f4\u9ad8\u7ea7\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u901a\u8fc7\u542f\u52a8\u53c2\u6570 --alertmanagers.config \u6216\u8005 --alertmanagers.config-file \u6765\u6307\u5b9a\u5bf9\u63a5 Alertmanager \u7684\u914d\u7f6e\uff0c\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a alertmanagers: - http_config: basic_auth: username: \"\" password: \"\" password_file: \"\" bearer_token: \"\" bearer_token_file: \"\" proxy_url: \"\" tls_config: ca_file: \"\" cert_file: \"\" key_file: \"\" server_name: \"\" insecure_skip_verify: false static_configs: [] file_sd_configs: - files: [] refresh_interval: 0s scheme: http path_prefix: \"\" timeout: 10s api_version: v1 \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u5bf9\u63a5\u524d\u9762\u7ae0\u8282\u4e2d\u7684 Alertmanager\uff0c\u5219\u76f4\u63a5\u8fd9\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5bb9\u5668\u542f\u52a8\u53c2\u6570\u4e2d\u589e\u52a0 - --alertmanagers.url=http://alertmanager:9093 \u5373\u53ef\u3002\u7136\u540e\u5728\u4e0a\u9762\u7684 thanos-rules \u7684 ConfigMap \u4e2d\u65b0\u589e\u4e00\u4e2a alert.rules.yaml \u7684\u914d\u7f6e\uff0c\u7528\u6765\u914d\u7f6e\u62a5\u8b66\u89c4\u5219\uff0c\u5982\u4e0b\u6240\u793a\uff1a # thanos-rules-config.yaml apiVersion: v1 kind: ConfigMap metadata: name: thanos-rules namespace: kube-mon data: record.rules.yaml: |- # ...... alert.rules.yaml: |- groups: - name: test-node-mem rules: - alert: NodeMemoryUsage expr: (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes * 100 > 30 for: 1m labels: team: node severity: critical annotations: summary: \"{{$labels.instance}}: High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 30% (current value is: {{ $value }})\" \u76f4\u63a5\u66f4\u65b0\u4e0a\u9762\u7684\u4e24\u4e2a\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/thanos/manifests/thanos-rules-config.yaml \u2638 \u279c kubectl apply -f https://p8s.io/docs/thanos/manifests/thanos-ruler.yaml \u66f4\u65b0\u5b8c\u6210\u540e\u8fd9 query \u7684 rules \u9875\u9762\u4e5f\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u65b0\u589e\u7684\u62a5\u8b66\u89c4\u5219\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u90e8\u7f72\u7684\u662f\u4e24\u4e2a\u526f\u672c\uff0c\u6240\u4ee5\u80fd\u770b\u5230\u4e24\u6761\u4e00\u6837\u7684\u89c4\u5219\uff1a \u7531\u4e8e\u6211\u4eec\u8fd9 ruler \u7ec4\u4ef6\u542f\u52a8\u53c2\u6570\u4e2d\u914d\u7f6e\u4e86\u53c2\u6570 - --alert.label-drop=rule_replica \uff0c\u6240\u4ee5 Alertmanager \u4e2d\u4e0d\u4f1a\u6536\u5230\u91cd\u590d\u62a5\u8b66\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u7ecf\u6d4b\u8bd5\u8fd9\u91cc\u7684 rule_replica \u4e0d\u80fd\u52a0\u5f15\u53f7\uff0c\u52a0\u4e0a\u5f15\u53f7\u4f1a\u53bb\u91cd\u5931\u6548\uff0c\u6211\u4eec\u53ef\u4ee5\u524d\u5f80 Alertmanager \u67e5\u770b\u89e6\u53d1\u7684\u62a5\u8b66\u4fe1\u606f\uff1a \u7531\u4e8e ruler \u7ec4\u4ef6\u83b7\u53d6\u8bc4\u4f30\u6570\u636e\u7684\u8def\u5f84\u662f ruler --> query --> sidecar --> prometheus \uff0c\u9700\u8981\u7ecf\u6574\u4e2a\u67e5\u8be2\u94fe\u6761\uff0c\u8fd9\u4e5f\u63d0\u5347\u4e86\u53d1\u751f\u6545\u969c\u7684\u98ce\u9669\uff0c\u800c\u4e14\u8bc4\u4f30\u539f\u672c\u5c31\u53ef\u4ee5\u5728 Prometheus \u4e2d\u8fdb\u884c\uff0c\u6240\u4ee5\u5728\u975e\u5fc5\u8981\u7684\u60c5\u51b5\u4e0b\u66f4\u52a0\u63a8\u8350\u4f7f\u7528\u539f\u672c\u7684 Prometheus \u65b9\u5f0f\u6765\u505a\u62a5\u8b66\u548c\u8bb0\u5f55\u89c4\u5219\u7684\u8bc4\u4f30\u3002","title":"2 \u5bf9\u63a5\u544a\u8b66"},{"location":"chap12/67vm_intro/","text":"\u7b2c\u4e00\u8282 Prometheus\u8fdc\u7a0b\u5b58\u50a8VictoriaMetrics\u7b80\u4ecb VictoriaMetrics \u662f\u4e00\u4e2a\u5feb\u901f\u3001\u7ecf\u6d4e\u9ad8\u6548\u4e14\u53ef\u6269\u5c55\u7684\u76d1\u63a7\u89e3\u51b3\u65b9\u6848\u548c\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u4f5c\u4e3a Prometheus \u7684\u8fdc\u7a0b\u5b58\u50a8\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u7ec4\u4ef6\u5b8c\u5168\u66ff\u6362 Prometheus\u3002 \u5b83\u4e3b\u8981\u6709\u4ee5\u4e0b\u7279\u6027: \u652f\u6301 Prometheus querying API,Graphite API. \u53ef\u4ee5\u5728 Grafana \u4e2d\u76f4\u63a5\u4f7f\u7528 \u5b9e\u73b0\u4e86\u57fa\u4e8e PromQL \u7684\u67e5\u8be2\u8bed\u8a00 - MetricsQL, \u63d0\u4f9b\u4e86\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd \u63d0\u4f9b\u4e86\u5168\u5c40\u89c6\u56fe\uff0c\u652f\u6301\u591a\u4e2a Prometheus \u5b9e\u4f8b\u6216\u4efb\u4f55\u5176\u4ed6\u6570\u636e\u6e90\u540c\u65f6\u5411 VictoriaMetrics \u5199\u5165\u6570\u636e\uff0c\u67e5\u8be2\u65f6\u6570\u636e\u53ef\u4ee5\u4fdd\u8bc1\u552f\u4e00 \u5360\u7528\u8d44\u6e90\u5c11\uff0c\u4e14\u9ad8\u6027\u80fd. \u652f\u6301\u591a\u79cd\u65b9\u5f0f\u83b7\u53d6 metrics. \u5982: file_sd_config kubernetes_sd_config consul_sd_config \u4ece exporter \u76f4\u63a5\u83b7\u53d6\uff0c\u4e0e prometheus \u5b8c\u5168\u517c\u5bb9\u3002 \u9664 static_config \u5916\uff0c\u8fd8\u652f\u6301\u591a\u79cd\u670d\u52a1\u53d1\u73b0\u65b9\u5f0f \uff0c\u5982: \u901a\u8fc7 Prometheus \u8fdc\u7a0b\u5199\u5165 \u901a\u8fc7 Post \u8bf7\u6c42\u5c06\u6307\u5b9a JSON \u683c\u5f0f\u7684\u6570\u636e\u76f4\u63a5\u5199\u5165 2 \u5355\u673a\u6a21\u5f0f \u5355\u673a\u6a21\u5f0f\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6216 Docker \u955c\u50cf \u5e76\u4f7f\u7528\u6307\u5b9a\u7684\u547d\u4ee4\u884c\u542f\u52a8. \u5355\u673a\u6a21\u5f0f\u53ef\u80fd\u7528\u5230\u7684\u7ec4\u4ef6. - victoria-metrics: metrics \u6570\u636e\u6293\u53d6\u6216\u5b58\u50a8 - vmalert: \u6309\u7167\u6307\u5b9a\u7684\u89c4\u5219\u5c06 metrics \u6570\u636e\u805a\u5408\u6216\u5411 alertmanager \u53d1\u9001\u544a\u8b66 - vmauth: \u542f\u7528\u7528\u6237\u8ba4\u8bc1\u529f\u80fd \u4ee5\u4e8c\u8fdb\u5236\u4e3a\u4f8b\uff0c\u53ef\u4ee5\u901a\u8fc7 -storageDataPath \u53c2\u6570\u6307\u5b9a\u6570\u636e\u5b58\u50a8\u7684\u76ee\u5f55\u3002\u9ed8\u8ba4\u4e3a victoria-metrics-data -retentionPeriod \u53c2\u6570\u6307\u5b9a\u6570\u636e\u4fdd\u5b58\u7684\u65f6\u957f\u3002\u9ed8\u8ba4\u4e3a 1 month -httpListenAddr \u53c2\u6570\u6307\u5b9a\u76d1\u542c\u7684 HTTP \u5957\u63a5\u5b57\u3002\u9ed8\u8ba4\u4e3a :8428 -loggerTimezon \u53c2\u6570\u6307\u5b9a\u65e5\u5fd7\u7684\u65f6\u533a\uff0c\u9ed8\u8ba4\u4e3a UTC. \u5efa\u8bae\u8bbe\u7f6e\u4e3a Asia/Shanghai -maxInsertRequestSize \u53c2\u6570\u9650\u5236 Prometheus remote_write API \u7684\u8bf7\u6c42\u5927\u5c0f\u3002\u9ed8\u8ba4\u4e3a 33554432 byte. \u652f\u6301\u53ef\u9009\u7684\u5355\u4f4d\u4e3a KB, MB, GB, KiB, MiB, GiB -promscrape.config \u53c2\u6570\u6307\u5b9a Prometheus \u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u3002\u8be5\u914d\u7f6e\u6587\u4ef6\u53ea\u9700\u8981\u5305\u542b scrape_configs \u90e8\u5206\u914d\u7f6e\u5373\u53ef.(\u7ecf\u6d4b\u8bd5 VictoriaMetrics \u652f\u6301 scrape_configs \u4e2d\u7684 relabel_configs \u548c metric_relabel_configs ) -promscrape.config.strictParse \u53c2\u6570\u8bbe\u7f6e\u662f\u5426\u4f1a\u4e25\u683c\u6821\u9a8c -promscrape.config \u6307\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0d\u652f\u6301\u7684\u5b57\u6bb5\u4f1a\u8df3\u8fc7\uff0c\u517c\u5bb9 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6 -promscrape.configCheckInterval \u53c2\u6570\u8bbe\u7f6e\u68c0\u67e5 Prometheus \u914d\u7f6e\u6587\u4ef6\u662f\u5426\u53d8\u66f4\u7684\u65f6\u95f4\u95f4\u9694\u3002\u82e5\u53d8\u66f4\uff0c\u5219\u91cd\u65b0\u52a0\u8f7d\u3002\u9ed8\u8ba4\u5173\u95ed -relabelConfig \u53c2\u6570\u6307\u5b9a relabel \u7684\u89c4\u5219. -relabelDebug \u53c2\u6570\u6307\u5b9a\u65e5\u5fd7\u4e2d\u662f\u5426\u6307\u5b9a relabel \u524d\u540e\u7684 metrics. \u591a\u7528\u4e8e\u8c03\u8bd5. -selfScrapeInstance \u53c2\u6570\u8bbe\u7f6e\u6293\u53d6\u81ea\u8eab metrics \u65f6\uff0cinstance \u6807\u7b7e\u7684\u503c\u3002\u9ed8\u8ba4 self -selfScrapeInterval \u53c2\u6570\u8bbe\u7f6e\u6293\u53d6\u81ea\u8eab metrics \u7684\u65f6\u95f4\u95f4\u9694 -selfScrapeJob \u53c2\u6570\u8bbe\u7f6e\u8bbe\u7f6e\u6293\u53d6\u81ea\u8eab metrics \u65f6\uff0cinstance \u6807\u7b7e\u7684\u503c\u3002\u9ed8\u8ba4 victoria-metrics \u4ece\u53c2\u6570\u770b\u6765\uff0c\u5355\u673a\u6a21\u5f0f\u4e0b\u7684 VictoriaMetrics \u53ef\u4ee5 \u4f5c\u4e3a Prometheus \u7684\u8fdc\u7a0b\u5b58\u50a8 \u542f\u52a8 VictoriaMetrics \u811a\u672c\u5982\u4e0b: # start_VictoriaMetrics.sh cd ${victoria-metrics-home} ./victoria-metrics \\ -storageDataPath <storageDataPath> \\ -retentionPeriod <dataKeepTime> \\ -maxInsertRequestSize <req_size> \\ -httpListenAddr <IP:port> \\ -loggerTimezon Asia/Shanghai &> victoria-metrics.log & Prometheus \u8fdc\u7a0b\u5199\u5165\u76f8\u5173\u914d\u7f6e\u5982\u4e0b: # prometheus.yml # ... remote_write: - url: http://<victoriametrics-addr>:8428/api/v1/write \u6307\u5b9a promscrape.config \u76f4\u63a5\u6293\u53d6\u5e76\u5b58\u50a8 metrics. \u8fd9\u79cd\u65b9\u5f0f\u542f\u52a8\u4e0e\u4f5c\u4e3a\u8fdc\u7a0b\u5b58\u50a8\u542f\u52a8\u65b9\u5f0f\u57fa\u672c\u4e0e\u5b58\u50a8\u65b9\u5f0f\u5927\u540c\u5c0f\u5f02\uff0c\u53ea\u9700\u8981\u6307\u5b9a\u5bf9\u5e94\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\u3002\u5728\u76f4\u63a5\u6293\u53d6 metrics \u8fc7\u7a0b\u4e2d\uff0c VictoriaMetrics \u9700\u8981\u4e00\u4e9b\u5176\u4ed6\u7684\u7ec4\u4ef6\u53bb\u5b9e\u73b0 Prometheus \u4e2d\u7684\u529f\u80fd\u3002\u6bd4\u5982 Prometheus \u4e2d\u89c4\u5219 (\u5305\u62ec metrics \u805a\u5408\u89c4\u5219\u4e0e\u544a\u8b66\u89c4\u5219) \u9700\u8981 vmalert \u7ec4\u4ef6\u6765\u5b9e\u73b0\u3002\u4e14 vmalert \u53ea\u662f\u53d1\u9001\u544a\u8b66\u5230 Alertmanager.vmalert \u652f\u6301\u7684\u89c4\u5219\u4e0e Prometheus \u7684\u89c4\u5219\u4e00\u81f4\u3002\u6709\u5173 vmalert \u7684\u4f7f\u7528\uff0c\u53c2\u89c1\u5b98\u65b9\u6587\u6863 Prometheus \u4e2d\u8ba4\u8bc1\u76f8\u914d\u7f6e \u9700\u8981 vmauth \u7ec4\u4ef6\u6765\u5b9e\u73b0\uff0c\u53c2\u89c1\u5b98\u65b9\u6587\u6863 cd ${victoria-metrics-home} ./victoria-metrics \\ -storageDataPath <storageDataPath> \\ -retentionPeriod <dataKeepTime> \\ -maxInsertRequestSize <req_size> \\ -httpListenAddr <metrics_IP:port> \\ -promscrape.config <prometheus.yml> \\ -promscrape.configCheckInterval 1m \\ -loggerTimezon Asia/Shanghai &> victoria-metrics.log & ./vmalert \\ -httpListenAddr \":8880\" \\ -rule <record_rule_file or alert_rule_file> \\ -datasource.url <metrics_IP:port> \\ -notifier.url <AlertManager URL> \\ # AlertManager URL -remoteWrite.url <metrics_IP:port> \\ # \u805a\u5408\u540e\u7684 metrics \u5199\u5165\u7684\u4f4d\u7f6e,\u4e00\u822c\u4e3a victoria-metrics \u7684\u7aef\u53e3 -remoteRead.url <metrics_IP:port> \\ -external.label <key=value> # \u4e3a\u805a\u5408\u540e\u7684 metrics \u6dfb\u52a0\u6807\u7b7e ./vmauth \\ -httpListenAddr \":8427\" \\ -auth.config <auth_config> \u4e3a\u4e86\u52a0\u5f3a\u6570\u636e\u7684\u5b89\u5168\u6027\uff0c\u53ef\u4ee5\u5c06 victoria-metrics \u5b58\u50a8\u76d1\u542c\u5728 localhost. \u542f\u7528 auth. \u914d\u7f6e\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7528\u6237\u4fe1\u606f. vmauth \u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\u5982\u4e0b. Grafana \u53ef\u4f7f\u7528\u8be5\u7528\u6237\u83b7\u53d6\u6570\u636e. 3 \u96c6\u7fa4\u6a21\u5f0f VictoriaMetrics \u96c6\u7fa4\u6a21\u5f0f\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u590d\u6742\u3002\u4e3b\u8981\u7531 vmstorage ,vminsert,vmselect \u4e09\u90e8\u5206\u7ec4\u6210\uff0c\u8fd9\u4e09\u4e2a\u7ec4\u4ef6\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u5355\u72ec\u8fdb\u884c\u6269\u5c55\u3002\u5176\u4e2d: vmstorage \u8d1f\u8d23\u63d0\u4f9b\u6570\u636e\u5b58\u50a8\u670d\u52a1 vminsert \u662f\u6570\u636e\u5b58\u50a8 vmstorage \u7684\u4ee3\u7406\uff0c\u4f7f\u7528\u4e00\u81f4\u6027 hash \u7b97\u6cd5\u8fdb\u884c\u5199\u5165\u5206\u7247 vmselect \u8d1f\u8d23\u6570\u636e\u67e5\u8be2\uff0c\u6839\u636e\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u4ece vmstorage \u4e2d\u67e5\u8be2\u6570\u636e vmstorage \u91c7\u7528 shared-nothing \u67b6\u6784\uff0c\u4f18\u70b9\u662f vmstorage \u7684\u8282\u70b9\u76f8\u4e92\u4e4b\u95f4\u65e0\u611f\u77e5\uff0c\u76f8\u4e92\u4e4b\u95f4\u65e0\u9700\u901a\u4fe1\uff0c\u4e0d\u5171\u4eab\u4efb\u4f55\u6570\u636e\uff0c\u589e\u52a0\u4e86\u96c6\u7fa4\u7684\u53ef\u7528\u6027\uff0c\u7b80\u5316\u4e86\u96c6\u7fa4\u7684\u6269\u5c55\u7684\u96be\u5ea6\u4e0e\u8fd0\u7ef4\u5de5\u4f5c. 3-1 \u7279\u6027 VictoriaMetrics \u96c6\u7fa4\u6a21\u5f0f\u652f\u6301 1 \u6027\u80fd\u548c\u5bb9\u91cf\u6c34\u5e73\u6269\u5c55 vminsert \u548c vmselect \u662f\u65e0\u72b6\u6001\u7684\u3002\u53ef\u4ee5\u968f\u65f6\u6dfb\u52a0 / \u5220\u9664\u3002\u6dfb\u52a0\u66f4\u591a\u7684 vminsert \u548c vmselect \u8282\u70b9\u53ef\u4ee5\u6269\u5c55\u6570\u636e\u5199\u5165\u4e0e\u67e5\u8be2\u7684\u6548\u7387 vmstorage \u8282\u70b9\u4fdd\u5b58\u6293\u53d6\u7684\u6570\u636e\uff0c\u56e0\u6b64\u65e0\u6cd5\u5728\u4e0d\u4e22\u5931\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u5220\u9664\u5b83\u4eec\u3002\u6dfb\u52a0\u66f4\u591a vmstorage \u8282\u70b9\u53ef\u6269\u5c55\u96c6\u7fa4\u5bb9\u91cf\u3002\u6dfb\u52a0 vmstorage \u7684\u6b65\u9aa4\u5982\u4e0b: \u4f7f\u7528\u4e0e\u96c6\u7fa4\u4e2d\u73b0\u6709\u8282\u70b9\u76f8\u540c\u7684 -retentionPeriod \u542f\u52a8\u65b0\u7684 vmstorage \u8282\u70b9 \u4f7f\u7528\u5305\u542b <new_vmstorage_host> \u7684\u65b0 -storageNode \u53c2\u6570\u9010\u6e10\u91cd\u65b0\u542f\u52a8\u6240\u6709 vmselect \u8282\u70b9 \u4f7f\u7528\u5305\u542b <new_vmstorage_host> \u7684\u65b0 -storageNode \u53c2\u6570\u9010\u6e10\u91cd\u65b0\u542f\u52a8\u6240\u6709 vminsert \u8282\u70b9 \u652f\u6301\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u591a\u4e2a\u540d\u79f0\u7a7a\u95f4 (\u79df\u6237). \u591a\u4e2a\u79df\u6237\u4e4b\u95f4\u76f8\u4e92\u9694\u79bb VictoriaMetrics \u96c6\u7fa4\u652f\u6301\u591a\u4e2a\u72ec\u7acb\u7684\u79df\u6237\u3002\u79df\u6237\u7531 accountID \u6216 accountID:projectID \u6807\u8bc6\uff0c\u4ed6\u4eec\u653e\u5728 url \u4e2d\u3002\u5982 http://<vminsert>:8480/insert/<accountID>/<suffix>,http://<vmselect>:8481/select/<accountID>/prometheus/<suffix> . \u7b49. \u6bcf\u4e2a accountID \u548c projectID \u7531\u8303\u56f4 [0 .. 2^32) \u4e2d\u7684\u4efb\u610f 32 \u4f4d\u6574\u6570\u6807\u8bc6\u3002\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u5219\u9ed8\u81ea\u52a8\u5206\u914d\u4e3a 0. \u5f53\u7b2c\u4e00\u4e2a\u6570\u636e\u70b9\u5199\u5165\u7ed9\u5b9a\u79df\u6237\u65f6\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u79df\u6237 \u6240\u6709\u79df\u6237\u7684\u6570\u636e\u5747\u5300\u5206\u5e03\u5728\u53ef\u7528\u7684 vmstorage \u8282\u70b9\u4e2d\u3002\u8fd9\u4fdd\u8bc1\u4e86\u5f53\u4e0d\u540c\u79df\u6237\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u91cf\u548c\u4e0d\u540c\u7684\u67e5\u8be2\u8d1f\u8f7d\u65f6\uff0cvmstorage \u8282\u70b9\u4e4b\u95f4\u7684\u8d1f\u8f7d\u5747\u5300 \u6570\u636e\u5e93\u6027\u80fd\u4f9d\u8d56\u4e8e\u79df\u6237\u7684\u6570\u91cf\uff0c\u4e3b\u8981\u53d6\u51b3\u4e8e\u6240\u6709\u79df\u6237\u4e2d\u6d3b\u52a8\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u603b\u6570. VictoriaMetrics \u4e0d\u652f\u6301\u5728\u5355\u4e2a\u8bf7\u6c42\u4e2d\u67e5\u8be2\u591a\u4e2a\u79df\u6237 \u652f\u6301\u6570\u636e\u526f\u672c \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cVictoriaMetrics \u5c06\u526f\u672c\u5199\u5165\u5230 -storageDataPath \u6307\u5411\u7684\u5e95\u5c42\u5b58\u50a8. \u53ef\u4ee5\u901a\u8fc7 vminsert \u6307\u5b9a -replicationFactor=N \u6807\u5fd7\u4f4d\u6765\u542f\u7528\u6570\u636e\u526f\u672c\u3002\u8fd9\u4fdd\u8bc1\u5728\u6700\u591a N-1 \u4e2a vmstorage \u8282\u70b9\u4e0d\u53ef\u7528\u65f6\uff0c\u6240\u6709\u6570\u636e\u6254\u53ef\u7528\u4e8e\u67e5\u8be2\u3002\u96c6\u7fa4\u5fc5\u987b\u81f3\u5c11\u5305\u542b 2*N-1 \u4e2a vmstorage \u8282\u70b9. \u542f\u7528\u590d\u5236\u540e\uff0cvmselect \u5fc5\u987b\u6307\u5b9a -dedup.minScrapeInterval=1ms \u547d\u4ee4\u884c\u6807\u5fd7. 3-2 \u5feb\u901f\u90e8\u7f72 \u4f7f\u7528 3 \u4e2a\u8282\u70b9\u90e8\u7f72\u76f8\u5173\u670d\u52a1\u3002\u8282\u70b9 IP \u5206\u522b\u4e3a IP1, IP2, IP3 \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u5982\u4e0b\u811a\u672c\u6765\u542f\u52a8 vmstroage,vminsert,vmselect #!/bin/bash victoria_home=\"/data1/victoria-metrics\" bin=${victoria_home}/bin conf=${victoria_home}/conf data=${victoria_home}/data log=${victoria_home}/log LOG_LEVEL=INFO TIMEZONE=\"Asia/Shanghai\" cd ${victoria_home} ${bin}/vmstorage-prod \\ -httpListenAddr \"nodeIP:8482\" \\ -storageDataPath ${data} \\ -retentionPeriod 30d \\ -vminsertAddr \"nodeIP:8400\" \\ # insert \u7aef\u53e3,\u7531 vminsert \u8fde\u63a5 -vmselectAddr \"nodeIP:8401\" \\ # select \u7aef\u53e3,\u7531 vmselect \u8fde\u63a5 -loggerTimezone ${TIMEZONE} \\ -loggerLevel ${LOG_LEVEL} &> ${log}/storage.log & ${bin}/vminsert-prod \\ -httpListenAddr \"nodeIP:8480\" \\ -storageNode IP1:8400,IP2:8400,IP3:8400 \\ -loggerTimezone ${TIMEZONE} \\ -loggerLevel ${LOG_LEVEL} &> ${log}/insert.log & ${bin}/vmselect-prod \\ -httpListenAddr \"nodeIP:8481\" \\ -selectNode IP1:8481,IP2:8481,IP3:8481 \\ -storageNode IP1:8401,IP2:8401,IP3:8401 \\ -loggerTimezone ${TIMEZONE} \\ -loggerLevel ${LOG_LEVEL} &> ${log}/select.log & \u542f\u52a8\u540e\uff0c\u53ef\u4ee5\u5206\u522b\u914d\u7f6e Prometheus \u548c Grafana \u5bf9 metrics \u6570\u636e\u5199\u5165\u8bfb\u53d6\u3002\u8be6\u89c1\u5b98\u65b9\u6587\u6863 # prometheus.yml remote_write: - url: \"http://<vminsert>:8480/insert/<accountID>/<suffix>\" # accountID \u9ed8\u8ba4\u4e3a 0 # suffix \u53ef\u4ee5\u4e3a `prometheus` \u6216 `prometheus/api/v1/write` write_relabel_configs: - source_labels: [__name__] regex: 'go_.*' action: drop Grafana \u6570\u636e\u6e90\u5730\u5740\u53ef\u914d\u7f6e\u4e3a http://<vmselect>:8481/select/<accountID>/prometheus . \u6b64\u65f6 accountID \u5fc5\u987b\u4e0e prometheus.yml \u4e2d\u914d\u7f6e\u7684 accountID \u4e00\u81f4. \u6700\u540e\u53ef\u4f7f\u7528 vmauth \u5bf9\u6570\u636e\u8bfb\u53d6\u65f6\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\u6027.","title":"\u7b2c\u4e00\u8282 Prometheus\u8fdc\u7a0b\u5b58\u50a8VictoriaMetrics\u7b80\u4ecb"},{"location":"chap12/67vm_intro/#prometheusvictoriametrics","text":"VictoriaMetrics \u662f\u4e00\u4e2a\u5feb\u901f\u3001\u7ecf\u6d4e\u9ad8\u6548\u4e14\u53ef\u6269\u5c55\u7684\u76d1\u63a7\u89e3\u51b3\u65b9\u6848\u548c\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u4f5c\u4e3a Prometheus \u7684\u8fdc\u7a0b\u5b58\u50a8\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u7ec4\u4ef6\u5b8c\u5168\u66ff\u6362 Prometheus\u3002 \u5b83\u4e3b\u8981\u6709\u4ee5\u4e0b\u7279\u6027: \u652f\u6301 Prometheus querying API,Graphite API. \u53ef\u4ee5\u5728 Grafana \u4e2d\u76f4\u63a5\u4f7f\u7528 \u5b9e\u73b0\u4e86\u57fa\u4e8e PromQL \u7684\u67e5\u8be2\u8bed\u8a00 - MetricsQL, \u63d0\u4f9b\u4e86\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd \u63d0\u4f9b\u4e86\u5168\u5c40\u89c6\u56fe\uff0c\u652f\u6301\u591a\u4e2a Prometheus \u5b9e\u4f8b\u6216\u4efb\u4f55\u5176\u4ed6\u6570\u636e\u6e90\u540c\u65f6\u5411 VictoriaMetrics \u5199\u5165\u6570\u636e\uff0c\u67e5\u8be2\u65f6\u6570\u636e\u53ef\u4ee5\u4fdd\u8bc1\u552f\u4e00 \u5360\u7528\u8d44\u6e90\u5c11\uff0c\u4e14\u9ad8\u6027\u80fd. \u652f\u6301\u591a\u79cd\u65b9\u5f0f\u83b7\u53d6 metrics. \u5982: file_sd_config kubernetes_sd_config consul_sd_config \u4ece exporter \u76f4\u63a5\u83b7\u53d6\uff0c\u4e0e prometheus \u5b8c\u5168\u517c\u5bb9\u3002 \u9664 static_config \u5916\uff0c\u8fd8\u652f\u6301\u591a\u79cd\u670d\u52a1\u53d1\u73b0\u65b9\u5f0f \uff0c\u5982: \u901a\u8fc7 Prometheus \u8fdc\u7a0b\u5199\u5165 \u901a\u8fc7 Post \u8bf7\u6c42\u5c06\u6307\u5b9a JSON \u683c\u5f0f\u7684\u6570\u636e\u76f4\u63a5\u5199\u5165","title":"\u7b2c\u4e00\u8282 Prometheus\u8fdc\u7a0b\u5b58\u50a8VictoriaMetrics\u7b80\u4ecb"},{"location":"chap12/67vm_intro/#2","text":"\u5355\u673a\u6a21\u5f0f\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6216 Docker \u955c\u50cf \u5e76\u4f7f\u7528\u6307\u5b9a\u7684\u547d\u4ee4\u884c\u542f\u52a8. \u5355\u673a\u6a21\u5f0f\u53ef\u80fd\u7528\u5230\u7684\u7ec4\u4ef6. - victoria-metrics: metrics \u6570\u636e\u6293\u53d6\u6216\u5b58\u50a8 - vmalert: \u6309\u7167\u6307\u5b9a\u7684\u89c4\u5219\u5c06 metrics \u6570\u636e\u805a\u5408\u6216\u5411 alertmanager \u53d1\u9001\u544a\u8b66 - vmauth: \u542f\u7528\u7528\u6237\u8ba4\u8bc1\u529f\u80fd \u4ee5\u4e8c\u8fdb\u5236\u4e3a\u4f8b\uff0c\u53ef\u4ee5\u901a\u8fc7 -storageDataPath \u53c2\u6570\u6307\u5b9a\u6570\u636e\u5b58\u50a8\u7684\u76ee\u5f55\u3002\u9ed8\u8ba4\u4e3a victoria-metrics-data -retentionPeriod \u53c2\u6570\u6307\u5b9a\u6570\u636e\u4fdd\u5b58\u7684\u65f6\u957f\u3002\u9ed8\u8ba4\u4e3a 1 month -httpListenAddr \u53c2\u6570\u6307\u5b9a\u76d1\u542c\u7684 HTTP \u5957\u63a5\u5b57\u3002\u9ed8\u8ba4\u4e3a :8428 -loggerTimezon \u53c2\u6570\u6307\u5b9a\u65e5\u5fd7\u7684\u65f6\u533a\uff0c\u9ed8\u8ba4\u4e3a UTC. \u5efa\u8bae\u8bbe\u7f6e\u4e3a Asia/Shanghai -maxInsertRequestSize \u53c2\u6570\u9650\u5236 Prometheus remote_write API \u7684\u8bf7\u6c42\u5927\u5c0f\u3002\u9ed8\u8ba4\u4e3a 33554432 byte. \u652f\u6301\u53ef\u9009\u7684\u5355\u4f4d\u4e3a KB, MB, GB, KiB, MiB, GiB -promscrape.config \u53c2\u6570\u6307\u5b9a Prometheus \u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u3002\u8be5\u914d\u7f6e\u6587\u4ef6\u53ea\u9700\u8981\u5305\u542b scrape_configs \u90e8\u5206\u914d\u7f6e\u5373\u53ef.(\u7ecf\u6d4b\u8bd5 VictoriaMetrics \u652f\u6301 scrape_configs \u4e2d\u7684 relabel_configs \u548c metric_relabel_configs ) -promscrape.config.strictParse \u53c2\u6570\u8bbe\u7f6e\u662f\u5426\u4f1a\u4e25\u683c\u6821\u9a8c -promscrape.config \u6307\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0d\u652f\u6301\u7684\u5b57\u6bb5\u4f1a\u8df3\u8fc7\uff0c\u517c\u5bb9 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6 -promscrape.configCheckInterval \u53c2\u6570\u8bbe\u7f6e\u68c0\u67e5 Prometheus \u914d\u7f6e\u6587\u4ef6\u662f\u5426\u53d8\u66f4\u7684\u65f6\u95f4\u95f4\u9694\u3002\u82e5\u53d8\u66f4\uff0c\u5219\u91cd\u65b0\u52a0\u8f7d\u3002\u9ed8\u8ba4\u5173\u95ed -relabelConfig \u53c2\u6570\u6307\u5b9a relabel \u7684\u89c4\u5219. -relabelDebug \u53c2\u6570\u6307\u5b9a\u65e5\u5fd7\u4e2d\u662f\u5426\u6307\u5b9a relabel \u524d\u540e\u7684 metrics. \u591a\u7528\u4e8e\u8c03\u8bd5. -selfScrapeInstance \u53c2\u6570\u8bbe\u7f6e\u6293\u53d6\u81ea\u8eab metrics \u65f6\uff0cinstance \u6807\u7b7e\u7684\u503c\u3002\u9ed8\u8ba4 self -selfScrapeInterval \u53c2\u6570\u8bbe\u7f6e\u6293\u53d6\u81ea\u8eab metrics \u7684\u65f6\u95f4\u95f4\u9694 -selfScrapeJob \u53c2\u6570\u8bbe\u7f6e\u8bbe\u7f6e\u6293\u53d6\u81ea\u8eab metrics \u65f6\uff0cinstance \u6807\u7b7e\u7684\u503c\u3002\u9ed8\u8ba4 victoria-metrics \u4ece\u53c2\u6570\u770b\u6765\uff0c\u5355\u673a\u6a21\u5f0f\u4e0b\u7684 VictoriaMetrics \u53ef\u4ee5 \u4f5c\u4e3a Prometheus \u7684\u8fdc\u7a0b\u5b58\u50a8 \u542f\u52a8 VictoriaMetrics \u811a\u672c\u5982\u4e0b: # start_VictoriaMetrics.sh cd ${victoria-metrics-home} ./victoria-metrics \\ -storageDataPath <storageDataPath> \\ -retentionPeriod <dataKeepTime> \\ -maxInsertRequestSize <req_size> \\ -httpListenAddr <IP:port> \\ -loggerTimezon Asia/Shanghai &> victoria-metrics.log & Prometheus \u8fdc\u7a0b\u5199\u5165\u76f8\u5173\u914d\u7f6e\u5982\u4e0b: # prometheus.yml # ... remote_write: - url: http://<victoriametrics-addr>:8428/api/v1/write \u6307\u5b9a promscrape.config \u76f4\u63a5\u6293\u53d6\u5e76\u5b58\u50a8 metrics. \u8fd9\u79cd\u65b9\u5f0f\u542f\u52a8\u4e0e\u4f5c\u4e3a\u8fdc\u7a0b\u5b58\u50a8\u542f\u52a8\u65b9\u5f0f\u57fa\u672c\u4e0e\u5b58\u50a8\u65b9\u5f0f\u5927\u540c\u5c0f\u5f02\uff0c\u53ea\u9700\u8981\u6307\u5b9a\u5bf9\u5e94\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\u3002\u5728\u76f4\u63a5\u6293\u53d6 metrics \u8fc7\u7a0b\u4e2d\uff0c VictoriaMetrics \u9700\u8981\u4e00\u4e9b\u5176\u4ed6\u7684\u7ec4\u4ef6\u53bb\u5b9e\u73b0 Prometheus \u4e2d\u7684\u529f\u80fd\u3002\u6bd4\u5982 Prometheus \u4e2d\u89c4\u5219 (\u5305\u62ec metrics \u805a\u5408\u89c4\u5219\u4e0e\u544a\u8b66\u89c4\u5219) \u9700\u8981 vmalert \u7ec4\u4ef6\u6765\u5b9e\u73b0\u3002\u4e14 vmalert \u53ea\u662f\u53d1\u9001\u544a\u8b66\u5230 Alertmanager.vmalert \u652f\u6301\u7684\u89c4\u5219\u4e0e Prometheus \u7684\u89c4\u5219\u4e00\u81f4\u3002\u6709\u5173 vmalert \u7684\u4f7f\u7528\uff0c\u53c2\u89c1\u5b98\u65b9\u6587\u6863 Prometheus \u4e2d\u8ba4\u8bc1\u76f8\u914d\u7f6e \u9700\u8981 vmauth \u7ec4\u4ef6\u6765\u5b9e\u73b0\uff0c\u53c2\u89c1\u5b98\u65b9\u6587\u6863 cd ${victoria-metrics-home} ./victoria-metrics \\ -storageDataPath <storageDataPath> \\ -retentionPeriod <dataKeepTime> \\ -maxInsertRequestSize <req_size> \\ -httpListenAddr <metrics_IP:port> \\ -promscrape.config <prometheus.yml> \\ -promscrape.configCheckInterval 1m \\ -loggerTimezon Asia/Shanghai &> victoria-metrics.log & ./vmalert \\ -httpListenAddr \":8880\" \\ -rule <record_rule_file or alert_rule_file> \\ -datasource.url <metrics_IP:port> \\ -notifier.url <AlertManager URL> \\ # AlertManager URL -remoteWrite.url <metrics_IP:port> \\ # \u805a\u5408\u540e\u7684 metrics \u5199\u5165\u7684\u4f4d\u7f6e,\u4e00\u822c\u4e3a victoria-metrics \u7684\u7aef\u53e3 -remoteRead.url <metrics_IP:port> \\ -external.label <key=value> # \u4e3a\u805a\u5408\u540e\u7684 metrics \u6dfb\u52a0\u6807\u7b7e ./vmauth \\ -httpListenAddr \":8427\" \\ -auth.config <auth_config> \u4e3a\u4e86\u52a0\u5f3a\u6570\u636e\u7684\u5b89\u5168\u6027\uff0c\u53ef\u4ee5\u5c06 victoria-metrics \u5b58\u50a8\u76d1\u542c\u5728 localhost. \u542f\u7528 auth. \u914d\u7f6e\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7528\u6237\u4fe1\u606f. vmauth \u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\u5982\u4e0b. Grafana \u53ef\u4f7f\u7528\u8be5\u7528\u6237\u83b7\u53d6\u6570\u636e.","title":"2 \u5355\u673a\u6a21\u5f0f"},{"location":"chap12/67vm_intro/#3","text":"VictoriaMetrics \u96c6\u7fa4\u6a21\u5f0f\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u590d\u6742\u3002\u4e3b\u8981\u7531 vmstorage ,vminsert,vmselect \u4e09\u90e8\u5206\u7ec4\u6210\uff0c\u8fd9\u4e09\u4e2a\u7ec4\u4ef6\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u5355\u72ec\u8fdb\u884c\u6269\u5c55\u3002\u5176\u4e2d: vmstorage \u8d1f\u8d23\u63d0\u4f9b\u6570\u636e\u5b58\u50a8\u670d\u52a1 vminsert \u662f\u6570\u636e\u5b58\u50a8 vmstorage \u7684\u4ee3\u7406\uff0c\u4f7f\u7528\u4e00\u81f4\u6027 hash \u7b97\u6cd5\u8fdb\u884c\u5199\u5165\u5206\u7247 vmselect \u8d1f\u8d23\u6570\u636e\u67e5\u8be2\uff0c\u6839\u636e\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u4ece vmstorage \u4e2d\u67e5\u8be2\u6570\u636e vmstorage \u91c7\u7528 shared-nothing \u67b6\u6784\uff0c\u4f18\u70b9\u662f vmstorage \u7684\u8282\u70b9\u76f8\u4e92\u4e4b\u95f4\u65e0\u611f\u77e5\uff0c\u76f8\u4e92\u4e4b\u95f4\u65e0\u9700\u901a\u4fe1\uff0c\u4e0d\u5171\u4eab\u4efb\u4f55\u6570\u636e\uff0c\u589e\u52a0\u4e86\u96c6\u7fa4\u7684\u53ef\u7528\u6027\uff0c\u7b80\u5316\u4e86\u96c6\u7fa4\u7684\u6269\u5c55\u7684\u96be\u5ea6\u4e0e\u8fd0\u7ef4\u5de5\u4f5c.","title":"3 \u96c6\u7fa4\u6a21\u5f0f"},{"location":"chap12/67vm_intro/#3-1","text":"VictoriaMetrics \u96c6\u7fa4\u6a21\u5f0f\u652f\u6301 1 \u6027\u80fd\u548c\u5bb9\u91cf\u6c34\u5e73\u6269\u5c55 vminsert \u548c vmselect \u662f\u65e0\u72b6\u6001\u7684\u3002\u53ef\u4ee5\u968f\u65f6\u6dfb\u52a0 / \u5220\u9664\u3002\u6dfb\u52a0\u66f4\u591a\u7684 vminsert \u548c vmselect \u8282\u70b9\u53ef\u4ee5\u6269\u5c55\u6570\u636e\u5199\u5165\u4e0e\u67e5\u8be2\u7684\u6548\u7387 vmstorage \u8282\u70b9\u4fdd\u5b58\u6293\u53d6\u7684\u6570\u636e\uff0c\u56e0\u6b64\u65e0\u6cd5\u5728\u4e0d\u4e22\u5931\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u5220\u9664\u5b83\u4eec\u3002\u6dfb\u52a0\u66f4\u591a vmstorage \u8282\u70b9\u53ef\u6269\u5c55\u96c6\u7fa4\u5bb9\u91cf\u3002\u6dfb\u52a0 vmstorage \u7684\u6b65\u9aa4\u5982\u4e0b: \u4f7f\u7528\u4e0e\u96c6\u7fa4\u4e2d\u73b0\u6709\u8282\u70b9\u76f8\u540c\u7684 -retentionPeriod \u542f\u52a8\u65b0\u7684 vmstorage \u8282\u70b9 \u4f7f\u7528\u5305\u542b <new_vmstorage_host> \u7684\u65b0 -storageNode \u53c2\u6570\u9010\u6e10\u91cd\u65b0\u542f\u52a8\u6240\u6709 vmselect \u8282\u70b9 \u4f7f\u7528\u5305\u542b <new_vmstorage_host> \u7684\u65b0 -storageNode \u53c2\u6570\u9010\u6e10\u91cd\u65b0\u542f\u52a8\u6240\u6709 vminsert \u8282\u70b9 \u652f\u6301\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u591a\u4e2a\u540d\u79f0\u7a7a\u95f4 (\u79df\u6237). \u591a\u4e2a\u79df\u6237\u4e4b\u95f4\u76f8\u4e92\u9694\u79bb VictoriaMetrics \u96c6\u7fa4\u652f\u6301\u591a\u4e2a\u72ec\u7acb\u7684\u79df\u6237\u3002\u79df\u6237\u7531 accountID \u6216 accountID:projectID \u6807\u8bc6\uff0c\u4ed6\u4eec\u653e\u5728 url \u4e2d\u3002\u5982 http://<vminsert>:8480/insert/<accountID>/<suffix>,http://<vmselect>:8481/select/<accountID>/prometheus/<suffix> . \u7b49. \u6bcf\u4e2a accountID \u548c projectID \u7531\u8303\u56f4 [0 .. 2^32) \u4e2d\u7684\u4efb\u610f 32 \u4f4d\u6574\u6570\u6807\u8bc6\u3002\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u5219\u9ed8\u81ea\u52a8\u5206\u914d\u4e3a 0. \u5f53\u7b2c\u4e00\u4e2a\u6570\u636e\u70b9\u5199\u5165\u7ed9\u5b9a\u79df\u6237\u65f6\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u79df\u6237 \u6240\u6709\u79df\u6237\u7684\u6570\u636e\u5747\u5300\u5206\u5e03\u5728\u53ef\u7528\u7684 vmstorage \u8282\u70b9\u4e2d\u3002\u8fd9\u4fdd\u8bc1\u4e86\u5f53\u4e0d\u540c\u79df\u6237\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u91cf\u548c\u4e0d\u540c\u7684\u67e5\u8be2\u8d1f\u8f7d\u65f6\uff0cvmstorage \u8282\u70b9\u4e4b\u95f4\u7684\u8d1f\u8f7d\u5747\u5300 \u6570\u636e\u5e93\u6027\u80fd\u4f9d\u8d56\u4e8e\u79df\u6237\u7684\u6570\u91cf\uff0c\u4e3b\u8981\u53d6\u51b3\u4e8e\u6240\u6709\u79df\u6237\u4e2d\u6d3b\u52a8\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u603b\u6570. VictoriaMetrics \u4e0d\u652f\u6301\u5728\u5355\u4e2a\u8bf7\u6c42\u4e2d\u67e5\u8be2\u591a\u4e2a\u79df\u6237 \u652f\u6301\u6570\u636e\u526f\u672c \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cVictoriaMetrics \u5c06\u526f\u672c\u5199\u5165\u5230 -storageDataPath \u6307\u5411\u7684\u5e95\u5c42\u5b58\u50a8. \u53ef\u4ee5\u901a\u8fc7 vminsert \u6307\u5b9a -replicationFactor=N \u6807\u5fd7\u4f4d\u6765\u542f\u7528\u6570\u636e\u526f\u672c\u3002\u8fd9\u4fdd\u8bc1\u5728\u6700\u591a N-1 \u4e2a vmstorage \u8282\u70b9\u4e0d\u53ef\u7528\u65f6\uff0c\u6240\u6709\u6570\u636e\u6254\u53ef\u7528\u4e8e\u67e5\u8be2\u3002\u96c6\u7fa4\u5fc5\u987b\u81f3\u5c11\u5305\u542b 2*N-1 \u4e2a vmstorage \u8282\u70b9. \u542f\u7528\u590d\u5236\u540e\uff0cvmselect \u5fc5\u987b\u6307\u5b9a -dedup.minScrapeInterval=1ms \u547d\u4ee4\u884c\u6807\u5fd7.","title":"3-1 \u7279\u6027"},{"location":"chap12/67vm_intro/#3-2","text":"\u4f7f\u7528 3 \u4e2a\u8282\u70b9\u90e8\u7f72\u76f8\u5173\u670d\u52a1\u3002\u8282\u70b9 IP \u5206\u522b\u4e3a IP1, IP2, IP3 \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u5982\u4e0b\u811a\u672c\u6765\u542f\u52a8 vmstroage,vminsert,vmselect #!/bin/bash victoria_home=\"/data1/victoria-metrics\" bin=${victoria_home}/bin conf=${victoria_home}/conf data=${victoria_home}/data log=${victoria_home}/log LOG_LEVEL=INFO TIMEZONE=\"Asia/Shanghai\" cd ${victoria_home} ${bin}/vmstorage-prod \\ -httpListenAddr \"nodeIP:8482\" \\ -storageDataPath ${data} \\ -retentionPeriod 30d \\ -vminsertAddr \"nodeIP:8400\" \\ # insert \u7aef\u53e3,\u7531 vminsert \u8fde\u63a5 -vmselectAddr \"nodeIP:8401\" \\ # select \u7aef\u53e3,\u7531 vmselect \u8fde\u63a5 -loggerTimezone ${TIMEZONE} \\ -loggerLevel ${LOG_LEVEL} &> ${log}/storage.log & ${bin}/vminsert-prod \\ -httpListenAddr \"nodeIP:8480\" \\ -storageNode IP1:8400,IP2:8400,IP3:8400 \\ -loggerTimezone ${TIMEZONE} \\ -loggerLevel ${LOG_LEVEL} &> ${log}/insert.log & ${bin}/vmselect-prod \\ -httpListenAddr \"nodeIP:8481\" \\ -selectNode IP1:8481,IP2:8481,IP3:8481 \\ -storageNode IP1:8401,IP2:8401,IP3:8401 \\ -loggerTimezone ${TIMEZONE} \\ -loggerLevel ${LOG_LEVEL} &> ${log}/select.log & \u542f\u52a8\u540e\uff0c\u53ef\u4ee5\u5206\u522b\u914d\u7f6e Prometheus \u548c Grafana \u5bf9 metrics \u6570\u636e\u5199\u5165\u8bfb\u53d6\u3002\u8be6\u89c1\u5b98\u65b9\u6587\u6863 # prometheus.yml remote_write: - url: \"http://<vminsert>:8480/insert/<accountID>/<suffix>\" # accountID \u9ed8\u8ba4\u4e3a 0 # suffix \u53ef\u4ee5\u4e3a `prometheus` \u6216 `prometheus/api/v1/write` write_relabel_configs: - source_labels: [__name__] regex: 'go_.*' action: drop Grafana \u6570\u636e\u6e90\u5730\u5740\u53ef\u914d\u7f6e\u4e3a http://<vmselect>:8481/select/<accountID>/prometheus . \u6b64\u65f6 accountID \u5fc5\u987b\u4e0e prometheus.yml \u4e2d\u914d\u7f6e\u7684 accountID \u4e00\u81f4. \u6700\u540e\u53ef\u4f7f\u7528 vmauth \u5bf9\u6570\u636e\u8bfb\u53d6\u65f6\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\u6027.","title":"3-2 \u5feb\u901f\u90e8\u7f72"},{"location":"chap12/68vm_setup/","text":"\u7b2c\u4e8c\u8282 Prometheus\u957f\u671f\u8fdc\u7a0b\u5b58\u50a8\u65b9\u6848VictoriaMetrics\u5165\u95e8\u5b9e\u8df5 VictoriaMetrics(\u7b80\u79f0VM) \u662f\u4e00\u4e2a\u652f\u6301\u9ad8\u53ef\u7528\u3001\u7ecf\u6d4e\u9ad8\u6548\u4e14\u53ef\u6269\u5c55\u7684\u76d1\u63a7\u89e3\u51b3\u65b9\u6848\u548c\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\uff0c\u53ef\u7528\u4e8e Prometheus \u76d1\u63a7\u6570\u636e\u505a\u957f\u671f\u8fdc\u7a0b\u5b58\u50a8\u3002 \u524d\u9762\u7ae0\u8282\u6211\u4eec\u4ecb\u7ecd\u4e86 Thanos \u65b9\u6848\u4e5f\u53ef\u4ee5\u7528\u6765\u89e3\u51b3 Prometheus \u7684\u9ad8\u53ef\u7528\u548c\u8fdc\u7a0b\u5b58\u50a8\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u8981\u4f7f\u7528 VictoriaMetrics \u5462\uff1f \u76f8\u5bf9\u4e8e Thanos\uff0cVictoriaMetrics \u4e3b\u8981\u662f\u4e00\u4e2a\u53ef\u6c34\u5e73\u6269\u5bb9\u7684\u672c\u5730\u5168\u91cf\u6301\u4e45\u5316\u5b58\u50a8\u65b9\u6848 \uff0cVictoriaMetrics \u4e0d\u4ec5\u4ec5\u662f\u65f6\u5e8f\u6570\u636e\u5e93\uff0c\u5b83\u7684\u4f18\u52bf\u4e3b\u8981\u4f53\u73b0\u5728\u4ee5\u4e0b\u51e0\u70b9\u3002 \u524d\u9762\u7ae0\u8282\u6211\u4eec\u4ecb\u7ecd\u4e86 Thanos \u65b9\u6848\u4e5f\u53ef\u4ee5\u7528\u6765\u89e3\u51b3 Prometheus \u7684\u9ad8\u53ef\u7528\u548c\u8fdc\u7a0b\u5b58\u50a8\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u8981\u4f7f\u7528 VictoriaMetrics \u5462\uff1f \u76f8\u5bf9\u4e8e Thanos\uff0c VictoriaMetrics \u4e3b\u8981\u662f\u4e00\u4e2a\u53ef\u6c34\u5e73\u6269\u5bb9\u7684\u672c\u5730\u5168\u91cf\u6301\u4e45\u5316\u5b58\u50a8\u65b9\u6848\uff0cVictoriaMetrics \u4e0d\u4ec5\u4ec5\u662f\u65f6\u5e8f\u6570\u636e\u5e93 \uff0c\u5b83\u7684\u4f18\u52bf\u4e3b\u8981\u4f53\u73b0\u5728\u4ee5\u4e0b\u51e0\u70b9\u3002 \u5bf9\u5916\u652f\u6301 Prometheus \u76f8\u5173\u7684 API\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e Grafana \u4f5c\u4e3a Prometheus \u6570\u636e\u6e90\u4f7f\u7528 \u6307\u6807\u6570\u636e\u6444\u53d6\u548c\u67e5\u8be2\u5177\u5907\u9ad8\u6027\u80fd\u548c\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\uff0c\u6027\u80fd\u6bd4 InfluxDB \u548c TimescaleDB \u9ad8\u51fa 20 \u500d \u8fd9\u5904\u7406\u9ad8\u57fa\u6570\u65f6\u95f4\u5e8f\u5217\u65f6\uff0c\u5185\u5b58\u65b9\u9762\u4e5f\u505a\u4e86\u4f18\u5316\uff0c\u6bd4 InfluxDB \u5c11 10x \u500d\uff0c\u6bd4 Prometheus\u3001Thanos \u6216 Cortex \u5c11 7 \u500d \u9ad8\u6027\u80fd\u7684\u6570\u636e\u538b\u7f29\u65b9\u5f0f\uff0c\u4e0e TimescaleDB \u76f8\u6bd4\uff0c\u53ef\u4ee5\u5c06\u591a\u8fbe 70 \u500d\u7684\u6570\u636e\u70b9\u5b58\u5165\u6709\u9650\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e0e Prometheus\u3001Thanos \u6216 Cortex \u76f8\u6bd4\uff0c\u6240\u9700\u7684\u5b58\u50a8\u7a7a\u95f4\u51cf\u5c11 7 \u500d \u5b83\u9488\u5bf9\u5177\u6709\u9ad8\u5ef6\u8fdf IO \u548c\u4f4e IOPS \u7684\u5b58\u50a8\u8fdb\u884c\u4e86\u4f18\u5316 \u63d0 \u4f9b\u5168\u5c40\u7684\u67e5\u8be2\u89c6\u56fe\uff0c\u591a\u4e2a Prometheus \u5b9e\u4f8b\u6216\u4efb\u4f55\u5176\u4ed6\u6570\u636e\u6e90\u53ef\u80fd\u4f1a\u5c06\u6570\u636e\u6444\u53d6\u5230 VictoriaMetrics \u64cd\u4f5c\u7b80\u5355 VictoriaMetrics \u7531\u4e00\u4e2a\u6ca1\u6709\u5916\u90e8\u4f9d\u8d56\u7684\u5c0f\u578b\u53ef\u6267\u884c\u6587\u4ef6\u7ec4\u6210 \u6240\u6709\u7684\u914d\u7f6e\u90fd\u662f\u901a\u8fc7\u660e\u786e\u7684\u547d\u4ee4\u884c\u6807\u5fd7\u548c\u5408\u7406\u7684\u9ed8\u8ba4\u503c\u5b8c\u6210\u7684 \u6240\u6709\u6570\u636e\u90fd\u5b58\u50a8\u5728 - storageDataPath \u547d\u4ee4\u884c\u53c2\u6570\u6307\u5411\u7684\u76ee\u5f55\u4e2d \u53ef\u4ee5\u4f7f\u7528 vmbackup/vmrestore \u5de5\u5177\u8f7b\u677e\u5feb\u901f\u5730\u4ece\u5b9e\u65f6\u5feb\u7167\u5907\u4efd\u5230 S3 \u6216 GCS \u5bf9\u8c61\u5b58\u50a8\u4e2d \u652f\u6301\u4ece\u7b2c\u4e09\u65b9\u65f6\u5e8f\u6570\u636e\u5e93\u83b7\u53d6\u6570\u636e\u6e90 \u7531\u4e8e\u5b58\u50a8\u67b6\u6784\uff0c\u5b83\u53ef\u4ee5\u4fdd\u62a4\u5b58\u50a8\u5728\u975e\u6b63\u5e38\u5173\u673a\uff08\u5373 OOM\u3001\u786c\u4ef6\u91cd\u7f6e\u6216 kill -9\uff09\u65f6\u514d\u53d7\u6570\u636e\u635f\u574f \u540c\u6837\u652f\u6301\u6307\u6807\u7684 relabel \u64cd\u4f5c 1 \u67b6\u6784 VM \u5206\u4e3a\u5355\u8282\u70b9\u548c\u96c6\u7fa4\u4e24\u4e2a\u65b9\u6848\uff0c\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u9009\u62e9\u5373\u53ef\u3002\u5355\u8282\u70b9\u7248\u76f4\u63a5\u8fd0\u884c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u65e2\uff0c\u5b98\u65b9\u5efa\u8bae\u91c7\u96c6\u6570\u636e\u70b9(data points)\u4f4e\u4e8e 100w/s\uff0c \u63a8\u8350 VM \u5355\u8282\u70b9\u7248\uff0c\u7b80\u5355\u597d\u7ef4\u62a4\uff0c\u4f46\u4e0d\u652f\u6301\u544a\u8b66 \u3002\u96c6\u7fa4\u7248\u652f\u6301\u6570\u636e\u6c34\u5e73\u62c6\u5206\u3002\u4e0b\u56fe\u662f VictoriaMetrics \u96c6\u7fa4\u7248\u5b98\u65b9\u7684\u67b6\u6784\u56fe\u3002 \u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u7ec4\u4ef6\uff1a vmstorage\uff1a\u6570\u636e\u5b58\u50a8 \u4ee5\u53ca\u67e5\u8be2\u7ed3\u679c\u8fd4\u56de\uff0c\u9ed8\u8ba4\u7aef\u53e3\u4e3a 8482 vminsert\uff1a\u6570\u636e\u5f55\u5165\uff0c\u53ef\u5b9e\u73b0\u7c7b\u4f3c\u5206\u7247 \u3001\u526f\u672c\u529f\u80fd\uff0c\u9ed8\u8ba4\u7aef\u53e3 8480 vmselect\uff1a\u6570\u636e\u67e5\u8be2\uff0c\u6c47\u603b\u548c\u6570\u636e\u53bb\u91cd \uff0c\u9ed8\u8ba4\u7aef\u53e3 8481 vmagent\uff1a\u6570\u636e\u6307\u6807\u6293\u53d6\uff0c\u652f\u6301\u591a\u79cd\u540e\u7aef\u5b58\u50a8 \uff0c\u4f1a\u5360\u7528\u672c\u5730\u78c1\u76d8\u7f13\u5b58\uff0c\u9ed8\u8ba4\u7aef\u53e3 8429 vmalert\uff1a\u62a5\u8b66\u76f8\u5173\u7ec4\u4ef6 \uff0c\u4e0d\u5982\u679c\u4e0d\u9700\u8981\u544a\u8b66\u529f\u80fd\u53ef\u4ee5\u4e0d\u4f7f\u7528\u8be5\u7ec4\u4ef6\uff0c\u9ed8\u8ba4\u7aef\u53e3\u4e3a 8880 \u96c6\u7fa4\u65b9\u6848\u628a\u529f\u80fd\u62c6\u5206\u4e3a vmstorage\u3001 vminsert\u3001vmselect \u7ec4\u4ef6\uff0c\u5982\u679c\u8981\u66ff\u6362 Prometheus\uff0c\u8fd8\u9700\u8981\u4f7f\u7528 vmagent\u3001vmalert \u3002 \u4ece\u4e0a\u56fe\u4e5f\u53ef\u4ee5\u770b\u51fa vminsert \u4ee5\u53ca vmselect \u90fd\u662f\u65e0\u72b6\u6001\u7684\uff0c\u6240\u4ee5\u6269\u5c55\u5f88\u7b80\u5355\uff0c\u53ea\u6709 vmstorage \u662f\u6709\u72b6\u6001\u7684\u3002 vmagent \u7684\u4e3b\u8981\u76ee\u7684\u662f\u7528\u6765\u6536\u96c6\u6307\u6807\u6570\u636e\u7136\u540e\u5b58\u50a8\u5230 VM \u4ee5\u53ca Prometheus \u517c\u5bb9\u7684\u5b58\u50a8\u7cfb\u7edf\u4e2d\uff08\u652f\u6301 remote_write \u534f\u8bae\u5373\u53ef\uff09\u3002 \u4e0b\u56fe\u662f vmagent \u7684\u4e00\u4e2a\u7b80\u5355\u67b6\u6784\u56fe\uff0c\u53ef\u4ee5\u770b\u51fa\u8be5\u7ec4\u4ef6\u4e5f\u5b9e\u73b0\u4e86 metrics \u7684 push \u529f\u80fd\uff0c\u6b64\u5916\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7279\u6027\uff1a \u66ff\u6362 prometheus \u7684 scraping target \u652f\u6301\u57fa\u4e8e prometheus relabeling \u7684\u6a21\u5f0f\u6dfb\u52a0\u3001\u79fb\u9664\u3001\u4fee\u6539 labels\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5728\u6570\u636e\u53d1\u9001\u5230\u8fdc\u7aef\u5b58\u50a8\u4e4b\u524d\u8fdb\u884c\u6570\u636e\u7684\u8fc7\u6ee4 \u652f\u6301\u591a\u79cd\u6570\u636e\u534f\u8bae\uff0cinflux line \u534f\u8bae\uff0cgraphite \u6587\u672c\u534f\u8bae\uff0copentsdb \u534f\u8bae\uff0cprometheus remote write \u534f\u8bae\uff0cjson lines \u534f\u8bae\uff0ccsv \u6570\u636e \u652f\u6301\u6536\u96c6\u6570\u636e\u7684\u540c\u65f6\uff0c\u5e76\u590d\u5236\u5230\u591a\u79cd\u8fdc\u7aef\u5b58\u50a8\u7cfb\u7edf \u652f\u6301\u4e0d\u53ef\u9760\u8fdc\u7aef\u5b58\u50a8\uff08\u901a\u8fc7\u672c\u5730\u5b58\u50a8 ~remoteWrite.tmpDataPath )\uff0c\u540c\u65f6\u652f\u6301\u6700\u5927\u78c1\u76d8\u5360\u7528 \u76f8\u6bd4 prometheus \u4f7f\u7528\u8f83\u5c11\u7684\u5185\u5b58\u3001cpu\u3001\u78c1\u76d8 io \u4ee5\u53ca\u7f51\u7edc\u5e26\u5bbd \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u5206\u522b\u6765\u4ecb\u7ecd\u4e86 VM \u7684\u5355\u8282\u70b9\u548c\u96c6\u7fa4\u4e24\u4e2a\u65b9\u6848\u7684\u4f7f\u7528\u3002 2 \u5355\u8282\u70b9 \u8fd9\u91cc\u6211\u4eec\u91c7\u96c6 node-exporter \u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e \uff0c \u9996\u5148\u4f7f\u7528 Prometheus \u91c7\u96c6\u6570\u636e\uff0c\u7136\u540e\u5c06 Prometheus \u6570\u636e\u8fdc\u7a0b\u5199\u5165 VM \u8fdc\u7a0b\u5b58\u50a8\uff0c\u7531\u4e8e VM \u63d0\u4f9b\u4e86 vmagent \u7ec4\u4ef6\uff0c\u6700\u540e\u6211\u4eec\u4f7f\u7528 VM \u6765\u5b8c\u5168\u66ff\u6362 Prometheus\uff0c\u53ef\u4ee5\u4f7f\u67b6\u6784\u66f4\u7b80\u5355\u3001\u66f4\u4f4e\u7684\u8d44\u6e90\u5360\u7528 \u3002 \u8fd9\u91cc\u6211\u4eec\u5c06\u6240\u6709\u8d44\u6e90\u8fd0\u884c\u5728 kube-vm \u547d\u540d\u7a7a\u95f4\u4e4b\u4e0b\uff1a kubectl create ns kube-vm \u9996\u5148\u6211\u4eec\u8fd9 kube-vm \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u4f7f\u7528 DaemonSet \u63a7\u5236\u5668\u8fd0\u884c node-exporter \uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # vm-node-exporter.yaml apiVersion: apps/v1 kind: DaemonSet metadata: name: node-exporter namespace: kube-vm spec: selector: matchLabels: app: node-exporter template: metadata: labels: app: node-exporter spec: hostPID: true hostIPC: true hostNetwork: true nodeSelector: kubernetes.io/os: linux containers: - name: node-exporter image: prom/node-exporter:v1.3.1 args: - --web.listen-address=$(HOSTIP):9111 - --path.procfs=/host/proc - --path.sysfs=/host/sys - --path.rootfs=/host/root - --no-collector.hwmon # \u7981\u7528\u4e0d\u9700\u8981\u7684\u4e00\u4e9b\u91c7\u96c6\u5668 - --no-collector.nfs - --no-collector.nfsd - --no-collector.nvme - --no-collector.dmi - --no-collector.arp - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/containerd/.+|/var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/) - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$ ports: - containerPort: 9111 env: - name: HOSTIP valueFrom: fieldRef: fieldPath: status.hostIP resources: requests: cpu: 150m memory: 180Mi limits: cpu: 150m memory: 180Mi securityContext: runAsNonRoot: true runAsUser: 65534 volumeMounts: - name: proc mountPath: /host/proc - name: sys mountPath: /host/sys - name: root mountPath: /host/root mountPropagation: HostToContainer readOnly: true tolerations: # \u6dfb\u52a0\u5bb9\u5fcd - operator: \"Exists\" volumes: - name: proc hostPath: path: /proc - name: dev hostPath: path: /dev - name: sys hostPath: path: /sys - name: root hostPath: path: / \u7531\u4e8e\u524d\u9762\u7ae0\u8282\u4e2d\u6211\u4eec\u4e5f\u521b\u5efa\u4e86 node-exporter \uff0c\u4e3a\u4e86\u9632\u6b62\u7aef\u53e3\u51b2\u7a81\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u53c2\u6570 --web.listen-address=$(HOSTIP):9111 \u914d\u7f6e\u7aef\u53e3\u4e3a 9111 \u3002\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\u3002 kubectl apply -f vm-node-exporter.yaml \u2638 \u279c kubectl get pods -n kube-vm -owide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES node-exporter-c4d76 1/1 Running 0 118s 192.168.0.109 node2 <none> <none> node-exporter-hzt8s 1/1 Running 0 118s 192.168.0.111 master1 <none> <none> node-exporter-zlxwb 1/1 Running 0 118s 192.168.0.110 node1 <none> <none> \u7136\u540e\u91cd\u65b0\u90e8\u7f72\u4e00\u5957\u72ec\u7acb\u7684 Prometheus\uff0c\u4e3a\u4e86\u7b80\u5355\u6211\u4eec\u76f4\u63a5\u4f7f\u7528 static_configs \u9759\u6001\u914d\u7f6e\u65b9\u5f0f\u6765\u6293\u53d6 node-exporter \u7684\u6307\u6807\uff0c\u914d\u7f6e\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # vm-prom-config.yaml apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-vm data: prometheus.yaml: | global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: \"nodes\" static_configs: - targets: ['192.168.0.109:9111', '192.168.0.110:9111', '192.168.0.111:9111'] relabel_configs: # \u901a\u8fc7 relabeling \u4ece __address__ \u4e2d\u63d0\u53d6 IP \u4fe1\u606f\uff0c\u4e3a\u4e86\u540e\u9762\u9a8c\u8bc1 VM \u662f\u5426\u517c\u5bb9 relabeling - source_labels: [__address__] regex: \"(.*):(.*)\" replacement: \"${1}\" target_label: 'ip' action: replace \u4e0a\u9762\u914d\u7f6e\u4e2d\u901a\u8fc7 relabel \u64cd\u4f5c\u4ece __address__ \u4e2d\u5c06 IP \u4fe1\u606f\u63d0\u53d6\u51fa\u6765\uff0c\u540e\u9762\u53ef\u4ee5\u7528\u6765\u9a8c\u8bc1 VM \u662f\u5426\u517c\u5bb9 relabel \u64cd\u4f5c\u3002 \u540c\u6837\u8981\u7ed9 Prometheus \u6570\u636e\u505a\u6301\u4e45\u5316\uff0c\u6240\u4ee5\u4e5f\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 PVC \u8d44\u6e90\u5bf9\u8c61\uff1a # apiVersion: storage.k8s.io/v1 # kind: StorageClass # metadata: # name: local-storage # provisioner: kubernetes.io/no-provisioner # volumeBindingMode: WaitForFirstConsumer --- apiVersion: v1 kind: PersistentVolume metadata: name: prometheus-data spec: accessModes: - ReadWriteOnce capacity: storage: 20Gi storageClassName: local-storage local: path: /data/k8s/prometheus persistentVolumeReclaimPolicy: Retain nodeAffinity: required: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/hostname operator: In values: - node2 --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: prometheus-data namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 20Gi storageClassName: local-storage \u7136\u540e\u76f4\u63a5\u521b\u5efa Prometheus \u5373\u53ef\uff0c\u5c06\u4e0a\u9762\u7684 PVC \u548c ConfigMap \u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\uff0c\u901a\u8fc7 --config.file \u53c2\u6570\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u6587\u4ef6\u8def\u5f84\uff0c\u6307\u5b9a TSDB \u6570\u636e\u8def\u5f84\u7b49\uff0c\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # vm-prom-deploy.yaml apiVersion: apps/v1 kind: Deployment metadata: name: prometheus namespace: kube-vm spec: selector: matchLabels: app: prometheus template: metadata: labels: app: prometheus spec: volumes: - name: data persistentVolumeClaim: claimName: prometheus-data - name: config-volume configMap: name: prometheus-config containers: - image: prom/prometheus:v2.35.0 name: prometheus args: - \"--config.file=/etc/prometheus/prometheus.yaml\" - \"--storage.tsdb.path=/prometheus\" # \u6307\u5b9atsdb\u6570\u636e\u8def\u5f84 - \"--storage.tsdb.retention.time=2d\" - \"--web.enable-lifecycle\" # \u652f\u6301\u70ed\u66f4\u65b0\uff0c\u76f4\u63a5\u6267\u884clocalhost:9090/-/reload\u7acb\u5373\u751f\u6548 ports: - containerPort: 9090 name: http securityContext: runAsUser: 0 volumeMounts: - mountPath: \"/etc/prometheus\" name: config-volume - mountPath: \"/prometheus\" name: data --- apiVersion: v1 kind: Service metadata: name: prometheus namespace: kube-vm spec: selector: app: prometheus type: NodePort ports: - name: web port: 9090 targetPort: http \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\u3002 \u2638 \u279c kubectl apply -f vm-prom-config.yaml \u2638 \u279c kubectl apply -f vm-prom-pvc.yaml \u2638 \u279c kubectl apply -f vm-prom-deploy.yaml \u2638 \u279c kubectl get pods -n kube-vm -owide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES node-exporter-c4d76 1/1 Running 0 27m 192.168.0.109 node2 <none> <none> node-exporter-hzt8s 1/1 Running 0 27m 192.168.0.111 master1 <none> <none> node-exporter-zlxwb 1/1 Running 0 27m 192.168.0.110 node1 <none> <none> prometheus-dfc9f6-2w2vf 1/1 Running 0 4m58s 10.244.2.102 node2 <none> <none> \u2638 \u279c kubectl get svc -n kube-vm NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.103.38.114 <none> 9090:31890/TCP 4m10s \u90e8\u7f72\u5b8c\u6210\u540e\u53ef\u4ee5\u901a\u8fc7 http://<node-ip>:31890 \u8bbf\u95ee Prometheus\uff0c\u6b63\u5e38\u53ef\u4ee5\u770b\u5230\u91c7\u96c6\u7684 3 \u4e2a node \u8282\u70b9\u7684\u6307\u6807\u4efb\u52a1\u3002 \u540c\u6837\u7684\u65b9\u5f0f\u91cd\u65b0\u90e8\u7f72 Grafana\uff0c\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # vm-grafana.yaml apiVersion: apps/v1 kind: Deployment metadata: name: grafana namespace: kube-vm spec: selector: matchLabels: app: grafana template: metadata: labels: app: grafana spec: volumes: - name: storage persistentVolumeClaim: claimName: grafana-data containers: - name: grafana image: grafana/grafana:main imagePullPolicy: IfNotPresent ports: - containerPort: 3000 name: grafana securityContext: runAsUser: 0 env: - name: GF_SECURITY_ADMIN_USER value: admin - name: GF_SECURITY_ADMIN_PASSWORD value: admin321 volumeMounts: - mountPath: /var/lib/grafana name: storage --- apiVersion: v1 kind: Service metadata: name: grafana namespace: kube-vm spec: type: NodePort ports: - port: 3000 selector: app: grafana --- apiVersion: v1 kind: PersistentVolume metadata: name: grafana-data spec: accessModes: - ReadWriteOnce capacity: storage: 1Gi storageClassName: local-storage local: path: /data/k8s/grafana persistentVolumeReclaimPolicy: Retain nodeAffinity: required: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/hostname operator: In values: - node2 --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: grafana-data namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi storageClassName: local-storage \u2638 \u279c kubectl apply -f vm-grafana.yaml \u2638 \u279c kubectl get svc -n kube-vm |grep grafana grafana NodePort 10.97.111.153 <none> 3000:31800/TCP 62s \u540c\u6837\u901a\u8fc7 http://<node-ip>:31800 \u5c31\u53ef\u4ee5\u8bbf\u95ee Grafana \u4e86\uff0c\u8fdb\u5165 Grafana \u914d\u7f6e Prometheus \u6570\u636e\u6e90\u3002 \u7136\u540e\u5bfc\u5165 16098 \u8fd9\u4e2a Dashboard\uff0c\u5bfc\u5165\u540e\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5230\u8fd9\u91cc\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528 Prometheus \u6536\u96c6\u8282\u70b9\u76d1\u63a7\u6307\u6807\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u4f7f\u7528 VM \u6765\u6539\u9020\u73b0\u6709\u65b9\u6848\u3002 3 \u8fdc\u7a0b\u5b58\u50a8 VictoriaMetrics \u9996\u5148\u9700\u8981\u4e00\u4e2a\u5355\u8282\u70b9\u6a21\u5f0f\u7684 VM\uff0c\u8fd0\u884c VM \u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u542f\u52a8\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 docker \u955c\u50cf\u4e00\u952e\u542f\u52a8\uff0c\u6211\u4eec\u8fd9\u91cc\u540c\u6837\u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa4\u4e2d\u3002\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\u3002 # vm-grafana.yaml apiVersion: apps/v1 kind: Deployment metadata: name: victoria-metrics namespace: kube-vm spec: selector: matchLabels: app: victoria-metrics template: metadata: labels: app: victoria-metrics spec: volumes: - name: storage persistentVolumeClaim: claimName: victoria-metrics-data containers: - name: vm image: victoriametrics/victoria-metrics:v1.76.1 imagePullPolicy: IfNotPresent args: - -storageDataPath=/var/lib/victoria-metrics-data - -retentionPeriod=1w ports: - containerPort: 8428 name: http volumeMounts: - mountPath: /var/lib/victoria-metrics-data name: storage --- apiVersion: v1 kind: Service metadata: name: victoria-metrics namespace: kube-vm spec: type: NodePort ports: - port: 8428 selector: app: victoria-metrics --- apiVersion: v1 kind: PersistentVolume metadata: name: victoria-metrics-data spec: accessModes: - ReadWriteOnce capacity: storage: 20Gi storageClassName: local-storage local: path: /data/k8s/vm persistentVolumeReclaimPolicy: Retain nodeAffinity: required: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/hostname operator: In values: - node2 --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: victoria-metrics-data namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 20Gi storageClassName: local-storage \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 -storageDataPath \u53c2\u6570\u6307\u5b9a\u4e86\u6570\u636e\u5b58\u50a8\u76ee\u5f55\uff0c\u7136\u540e\u540c\u6837\u5c06\u8be5\u76ee\u5f55\u8fdb\u884c\u4e86\u6301\u4e45\u5316\uff0c- retentionPeriod \u53c2\u6570\u53ef\u4ee5\u7528\u6765\u914d\u7f6e\u6570\u636e\u7684\u4fdd\u6301\u5468\u671f\u3002\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\u3002 \u2638 \u279c kubectl apply -f vm-single-node-deploy.yaml \u2638 \u279c kubectl get svc victoria-metrics -n kube-vm NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE victoria-metrics NodePort 10.106.216.248 <none> 8428:31953/TCP 75m \u2638 \u279c kubectl get pods -n kube-vm -l app=victoria-metrics NAME READY STATUS RESTARTS AGE victoria-metrics-57d47f4587-htb88 1/1 Running 0 3m12s \u2638 \u279c kubectl logs -f victoria-metrics-57d47f4587-htb88 -n kube-vm 2022-04-22T08:59:14.431Z info VictoriaMetrics/lib/logger/flag.go:12 build version: victoria-metrics-20220412-134346-tags-v1.76.1-0-gf8de318bf 2022-04-22T08:59:14.431Z info VictoriaMetrics/lib/logger/flag.go:13 command line flags 2022-04-22T08:59:14.431Z info VictoriaMetrics/lib/logger/flag.go:20 flag \"retentionPeriod\"=\"1w\" 2022-04-22T08:59:14.431Z info VictoriaMetrics/lib/logger/flag.go:20 flag \"storageDataPath\"=\"/var/lib/victoria-metrics-data\" 2022-04-22T08:59:14.431Z info VictoriaMetrics/app/victoria-metrics/main.go:52 starting VictoriaMetrics at \":8428\"... 2022-04-22T08:59:14.432Z info VictoriaMetrics/app/vmstorage/main.go:97 opening storage at \"/var/lib/victoria-metrics-data\" with -retentionPeriod=1w ...... 2022-04-22T08:59:14.449Z info VictoriaMetrics/app/victoria-metrics/main.go:61 started VictoriaMetrics in 0.017 seconds 2022-04-22T08:59:14.449Z info VictoriaMetrics/lib/httpserver/httpserver.go:91 starting http server at http://127.0.0.1:8428/ \u5230\u8fd9\u91cc\u6211\u4eec\u5355\u8282\u70b9\u7684 VictoriaMetrics \u5c31\u90e8\u7f72\u6210\u529f\u4e86\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u5728 Prometheus \u4e2d\u914d\u7f6e\u8fdc\u7a0b\u5199\u5165\u6211\u4eec\u7684 VM \u5373\u53ef\uff0c\u66f4\u6539 Prometheus \u914d\u7f6e\uff1a # vm-prom-config2.yaml apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-vm data: prometheus.yaml: | global: scrape_interval: 15s scrape_timeout: 15s remote_write: # \u8fdc\u7a0b\u5199\u5165\u5230\u8fdc\u7a0b VM \u5b58\u50a8 - url: http://victoria-metrics:8428/api/v1/write scrape_configs: - job_name: \"nodes\" static_configs: - targets: ['192.168.0.109:9111', '192.168.0.110:9111', '192.168.0.111:9111'] relabel_configs: # \u901a\u8fc7 relabeling \u4ece __address__ \u4e2d\u63d0\u53d6 IP \u4fe1\u606f\uff0c\u4e3a\u4e86\u540e\u9762\u9a8c\u8bc1 VM \u662f\u5426\u517c\u5bb9 relabeling - source_labels: [__address__] regex: \"(.*):(.*)\" replacement: \"${1}\" target_label: 'ip' action: replace \u91cd\u65b0\u66f4\u65b0 Prometheus \u7684\u914d\u7f6e\u8d44\u6e90\u5bf9\u8c61\uff1a \u2638 \u279c kubectl apply -f vm-prom-config2.yaml # \u66f4\u65b0\u540e\u6267\u884c reload \u64cd\u4f5c\u91cd\u65b0\u52a0\u8f7d prometheus \u914d\u7f6e \u2638 \u279c curl -X POST \"http://192.168.0.111:31890/-/reload\" \u914d\u7f6e\u751f\u6548\u540e Prometheus \u5c31\u4f1a\u5f00\u59cb\u5c06\u6570\u636e\u8fdc\u7a0b\u5199\u5165 VM \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b VM \u7684\u6301\u4e45\u5316\u6570\u636e\u76ee\u5f55\u662f\u5426\u6709\u6570\u636e\u4ea7\u751f\u6765\u9a8c\u8bc1\uff1a \u2638 \u279c ll /data/k8s/vm/data/ total 0 drwxr-xr-x 4 root root 38 Apr 22 17:15 big -rw-r--r-- 1 root root 0 Apr 22 16:59 flock.lock drwxr-xr-x 4 root root 38 Apr 22 17:15 small \u73b0\u5728\u6211\u4eec\u53bb\u76f4\u63a5\u5c06 Grafana \u4e2d\u7684\u6570\u636e\u6e90\u5730\u5740\u4fee\u6539\u6210 VM \u7684\u5730\u5740\uff1a \u4fee\u6539\u5b8c\u6210\u540e\u91cd\u65b0\u8bbf\u95ee node-exporter \u7684 dashboard\uff0c\u6b63\u5e38\u53ef\u4ee5\u663e\u793a\uff0c\u8bc1\u660e VM \u662f\u517c\u5bb9\u7684\u3002 \u66ff\u6362 Prometheus \u4e0a\u9762\u6211\u4eec\u5c06 Prometheus \u6570\u636e\u8fdc\u7a0b\u5199\u5165\u5230\u4e86 VM\uff0c\u4f46\u662f Prometheus \u5f00\u542f remote write \u529f\u80fd\u540e\u4f1a\u589e\u52a0\u5176\u672c\u8eab\u7684\u8d44\u6e90\u5360\u7528\uff0c\u7406\u8bba\u4e0a\u5176\u5b9e\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b8c\u5168\u7528 VM \u6765\u66ff\u6362\u6389 Prometheus\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u8fdc\u7a0b\u5199\u5165\u4e86\uff0c\u800c\u4e14\u672c\u8eab VM \u5c31\u6bd4 Prometheus \u5360\u7528\u66f4\u5c11\u7684\u8d44\u6e90\u3002 \u73b0\u5728\u6211\u4eec\u5148\u505c\u6389 Prometheus \u7684\u670d\u52a1\uff1a \u2638 \u279c kubectl scale deploy prometheus --replicas=0 -n kube-vm \u7136\u540e\u5c06 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u6302\u8f7d\u5230 VM \u5bb9\u5668\u4e2d\uff0c\u4f7f\u7528\u53c2\u6570 -promscrape.config \u6765\u6307\u5b9a Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u5982\u4e0b\u6240\u793a\uff1a # vm-single-node-deploy2.yaml apiVersion: apps/v1 kind: Deployment metadata: name: victoria-metrics namespace: kube-vm spec: selector: matchLabels: app: victoria-metrics template: metadata: labels: app: victoria-metrics spec: volumes: - name: storage persistentVolumeClaim: claimName: victoria-metrics-data - name: prometheus-config configMap: name: prometheus-config containers: - name: vm image: victoriametrics/victoria-metrics:v1.76.1 imagePullPolicy: IfNotPresent args: - -storageDataPath=/var/lib/victoria-metrics-data - -retentionPeriod=1w - -promscrape.config=/etc/prometheus/prometheus.yaml ports: - containerPort: 8428 name: http volumeMounts: - mountPath: /var/lib/victoria-metrics-data name: storage - mountPath: /etc/prometheus name: prometheus-config \u8bb0\u5f97\u5148\u5c06 Prometheus \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 remote_write \u6a21\u5757\u53bb\u6389\uff0c\u7136\u540e\u91cd\u65b0\u66f4\u65b0 VM \u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f vm-prom-config.yaml \u2638 \u279c kubectl apply -f vm-single-node-deploy2.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=victoria-metrics NAME READY STATUS RESTARTS AGE victoria-metrics-8466844968-ncfnp 1/1 Running 2 (3m3s ago) 3m45s \u2638 \u279c kubectl logs -f victoria-metrics-8466844968-ncfnp -n kube-vm ...... 2022-04-22T10:01:59.837Z info VictoriaMetrics/app/victoria-metrics/main.go:61 started VictoriaMetrics in 0.022 seconds 2022-04-22T10:01:59.837Z info VictoriaMetrics/lib/httpserver/httpserver.go:91 starting http server at http://127.0.0.1:8428/ 2022-04-22T10:01:59.837Z info VictoriaMetrics/lib/httpserver/httpserver.go:92 pprof handlers are exposed at http://127.0.0.1:8428/debug/pprof/ 2022-04-22T10:01:59.838Z info VictoriaMetrics/lib/promscrape/scraper.go:103 reading Prometheus configs from \"/etc/prometheus/prometheus.yaml\" 2022-04-22T10:01:59.838Z info VictoriaMetrics/lib/promscrape/config.go:96 starting service discovery routines... 2022-04-22T10:01:59.839Z info VictoriaMetrics/lib/promscrape/config.go:102 started service discovery routines in 0.000 seconds 2022-04-22T10:01:59.840Z info VictoriaMetrics/lib/promscrape/scraper.go:395 static_configs: added targets: 3, removed targets: 0; total targets: 3 \u4ece VM \u65e5\u5fd7\u4e2d\u53ef\u4ee5\u770b\u51fa\u6210\u529f\u8bfb\u53d6\u4e86 Prometheus \u7684\u914d\u7f6e\uff0c\u5e76\u6293\u53d6\u4e86 3 \u4e2a\u6307\u6807\uff08node-exporter\uff09\u3002\u73b0\u5728\u6211\u4eec\u518d\u53bb Grafana \u67e5\u770b node-exporter \u7684 Dashboard \u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u663e\u793a\u3002\u5148\u4fdd\u8bc1\u6570\u636e\u6e90\u662f VM \u7684\u5730\u5740\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u4f7f\u7528 VM \u66ff\u6362\u6389\u4e86 Prometheus\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd9 Grafana \u7684 Explore \u9875\u9762\u53bb\u63a2\u7d22\u91c7\u96c6\u5230\u7684\u6307\u6807\u3002 4 UI \u754c\u9762 VM \u5355\u8282\u70b9\u7248\u672c\u672c\u8eab\u81ea\u5e26\u4e86\u4e00\u4e2a Web UI \u754c\u9762 - vmui\uff0c\u4e0d\u8fc7\u76ee\u524d\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 VM \u7684 NodePort \u7aef\u53e3\u8fdb\u884c\u8bbf\u95ee\u3002 \u2638 \u279c kubectl get svc victoria-metrics -n kube-vm NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE victoria-metrics NodePort 10.106.216.248 <none> 8428:31953/TCP 75m \u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7 http:// :31953 \u8bbf\u95ee\u5230 vmui\uff1a \u53ef\u4ee5\u901a\u8fc7 /vmui \u8fd9\u4e2a endpoint \u8bbf\u95ee UI \u754c\u9762\uff1a \u5982\u679c\u4f60\u60f3\u67e5\u770b\u91c7\u96c6\u5230\u7684\u6307\u6807 targets\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7 /targets \u8fd9\u4e2a endpoint \u6765\u83b7\u53d6\uff1a \u8fd9\u4e9b\u529f\u80fd\u57fa\u672c\u4e0a\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u4e00\u4e9b\u9700\u6c42\uff0c\u4f46\u662f\u8fd8\u662f\u592a\u8fc7\u7b80\u5355\uff0c\u5982\u679c\u4f60\u4e60\u60ef\u4e86 Prometheus \u7684 UI \u754c\u9762\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 promxy \u6765\u4ee3\u66ff vmui\uff0c\u800c\u4e14 promxy \u8fd8\u53ef\u4ee5\u8fdb\u884c\u591a\u4e2a VM \u5355\u8282\u70b9\u7684\u6570\u636e\u805a\u5408\uff0c\u4ee5\u53ca targets \u67e5\u770b\u7b49\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # vm-promxy.yaml apiVersion: v1 kind: ConfigMap metadata: name: promxy-config namespace: kube-vm data: config.yaml: | promxy: server_groups: - static_configs: - targets: [victoria-metrics:8428] # \u6307\u5b9avm\u5730\u5740\uff0c\u6709\u591a\u4e2a\u5219\u5f80\u540e\u8ffd\u52a0\u5373\u53ef path_prefix: /prometheus # \u914d\u7f6e\u524d\u7f00 --- apiVersion: apps/v1 kind: Deployment metadata: name: promxy namespace: kube-vm spec: selector: matchLabels: app: promxy template: metadata: labels: app: promxy spec: containers: - args: - \"--config=/etc/promxy/config.yaml\" - \"--web.enable-lifecycle\" - \"--log-level=trace\" env: - name: ROLE value: \"1\" command: - \"/bin/promxy\" image: quay.io/jacksontj/promxy imagePullPolicy: Always name: promxy ports: - containerPort: 8082 name: web volumeMounts: - mountPath: \"/etc/promxy/\" name: promxy-config readOnly: true - args: # container to reload configs on configmap change - \"--volume-dir=/etc/promxy\" - \"--webhook-url=http://localhost:8082/-/reload\" image: jimmidyson/configmap-reload:v0.1 name: promxy-server-configmap-reload volumeMounts: - mountPath: \"/etc/promxy/\" name: promxy-config readOnly: true volumes: - configMap: name: promxy-config name: promxy-config --- apiVersion: v1 kind: Service metadata: name: promxy namespace: kube-vm spec: type: NodePort ports: - port: 8082 selector: app: promxy \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f vm-promxy.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=promxy NAME READY STATUS RESTARTS AGE promxy-5f7dfdbc64-l4kjq 2/2 Running 0 6m45s \u2638 \u279c kubectl get svc promxy -n kube-vm NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE promxy NodePort 10.110.19.254 <none> 8082:30618/TCP 6m12s \u8bbf\u95ee Promxy \u7684\u9875\u9762\u6548\u679c\u548c Prometheus \u81ea\u5e26\u7684 Web UI \u57fa\u672c\u4e00\u81f4\u7684\u3002","title":"\u7b2c\u4e8c\u8282 Prometheus\u957f\u671f\u8fdc\u7a0b\u5b58\u50a8\u65b9\u6848VictoriaMetrics\u5165\u95e8\u5b9e\u8df5"},{"location":"chap12/68vm_setup/#prometheusvictoriametrics","text":"VictoriaMetrics(\u7b80\u79f0VM) \u662f\u4e00\u4e2a\u652f\u6301\u9ad8\u53ef\u7528\u3001\u7ecf\u6d4e\u9ad8\u6548\u4e14\u53ef\u6269\u5c55\u7684\u76d1\u63a7\u89e3\u51b3\u65b9\u6848\u548c\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\uff0c\u53ef\u7528\u4e8e Prometheus \u76d1\u63a7\u6570\u636e\u505a\u957f\u671f\u8fdc\u7a0b\u5b58\u50a8\u3002 \u524d\u9762\u7ae0\u8282\u6211\u4eec\u4ecb\u7ecd\u4e86 Thanos \u65b9\u6848\u4e5f\u53ef\u4ee5\u7528\u6765\u89e3\u51b3 Prometheus \u7684\u9ad8\u53ef\u7528\u548c\u8fdc\u7a0b\u5b58\u50a8\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u8981\u4f7f\u7528 VictoriaMetrics \u5462\uff1f \u76f8\u5bf9\u4e8e Thanos\uff0cVictoriaMetrics \u4e3b\u8981\u662f\u4e00\u4e2a\u53ef\u6c34\u5e73\u6269\u5bb9\u7684\u672c\u5730\u5168\u91cf\u6301\u4e45\u5316\u5b58\u50a8\u65b9\u6848 \uff0cVictoriaMetrics \u4e0d\u4ec5\u4ec5\u662f\u65f6\u5e8f\u6570\u636e\u5e93\uff0c\u5b83\u7684\u4f18\u52bf\u4e3b\u8981\u4f53\u73b0\u5728\u4ee5\u4e0b\u51e0\u70b9\u3002 \u524d\u9762\u7ae0\u8282\u6211\u4eec\u4ecb\u7ecd\u4e86 Thanos \u65b9\u6848\u4e5f\u53ef\u4ee5\u7528\u6765\u89e3\u51b3 Prometheus \u7684\u9ad8\u53ef\u7528\u548c\u8fdc\u7a0b\u5b58\u50a8\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u8981\u4f7f\u7528 VictoriaMetrics \u5462\uff1f \u76f8\u5bf9\u4e8e Thanos\uff0c VictoriaMetrics \u4e3b\u8981\u662f\u4e00\u4e2a\u53ef\u6c34\u5e73\u6269\u5bb9\u7684\u672c\u5730\u5168\u91cf\u6301\u4e45\u5316\u5b58\u50a8\u65b9\u6848\uff0cVictoriaMetrics \u4e0d\u4ec5\u4ec5\u662f\u65f6\u5e8f\u6570\u636e\u5e93 \uff0c\u5b83\u7684\u4f18\u52bf\u4e3b\u8981\u4f53\u73b0\u5728\u4ee5\u4e0b\u51e0\u70b9\u3002 \u5bf9\u5916\u652f\u6301 Prometheus \u76f8\u5173\u7684 API\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e Grafana \u4f5c\u4e3a Prometheus \u6570\u636e\u6e90\u4f7f\u7528 \u6307\u6807\u6570\u636e\u6444\u53d6\u548c\u67e5\u8be2\u5177\u5907\u9ad8\u6027\u80fd\u548c\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\uff0c\u6027\u80fd\u6bd4 InfluxDB \u548c TimescaleDB \u9ad8\u51fa 20 \u500d \u8fd9\u5904\u7406\u9ad8\u57fa\u6570\u65f6\u95f4\u5e8f\u5217\u65f6\uff0c\u5185\u5b58\u65b9\u9762\u4e5f\u505a\u4e86\u4f18\u5316\uff0c\u6bd4 InfluxDB \u5c11 10x \u500d\uff0c\u6bd4 Prometheus\u3001Thanos \u6216 Cortex \u5c11 7 \u500d \u9ad8\u6027\u80fd\u7684\u6570\u636e\u538b\u7f29\u65b9\u5f0f\uff0c\u4e0e TimescaleDB \u76f8\u6bd4\uff0c\u53ef\u4ee5\u5c06\u591a\u8fbe 70 \u500d\u7684\u6570\u636e\u70b9\u5b58\u5165\u6709\u9650\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e0e Prometheus\u3001Thanos \u6216 Cortex \u76f8\u6bd4\uff0c\u6240\u9700\u7684\u5b58\u50a8\u7a7a\u95f4\u51cf\u5c11 7 \u500d \u5b83\u9488\u5bf9\u5177\u6709\u9ad8\u5ef6\u8fdf IO \u548c\u4f4e IOPS \u7684\u5b58\u50a8\u8fdb\u884c\u4e86\u4f18\u5316 \u63d0 \u4f9b\u5168\u5c40\u7684\u67e5\u8be2\u89c6\u56fe\uff0c\u591a\u4e2a Prometheus \u5b9e\u4f8b\u6216\u4efb\u4f55\u5176\u4ed6\u6570\u636e\u6e90\u53ef\u80fd\u4f1a\u5c06\u6570\u636e\u6444\u53d6\u5230 VictoriaMetrics \u64cd\u4f5c\u7b80\u5355 VictoriaMetrics \u7531\u4e00\u4e2a\u6ca1\u6709\u5916\u90e8\u4f9d\u8d56\u7684\u5c0f\u578b\u53ef\u6267\u884c\u6587\u4ef6\u7ec4\u6210 \u6240\u6709\u7684\u914d\u7f6e\u90fd\u662f\u901a\u8fc7\u660e\u786e\u7684\u547d\u4ee4\u884c\u6807\u5fd7\u548c\u5408\u7406\u7684\u9ed8\u8ba4\u503c\u5b8c\u6210\u7684 \u6240\u6709\u6570\u636e\u90fd\u5b58\u50a8\u5728 - storageDataPath \u547d\u4ee4\u884c\u53c2\u6570\u6307\u5411\u7684\u76ee\u5f55\u4e2d \u53ef\u4ee5\u4f7f\u7528 vmbackup/vmrestore \u5de5\u5177\u8f7b\u677e\u5feb\u901f\u5730\u4ece\u5b9e\u65f6\u5feb\u7167\u5907\u4efd\u5230 S3 \u6216 GCS \u5bf9\u8c61\u5b58\u50a8\u4e2d \u652f\u6301\u4ece\u7b2c\u4e09\u65b9\u65f6\u5e8f\u6570\u636e\u5e93\u83b7\u53d6\u6570\u636e\u6e90 \u7531\u4e8e\u5b58\u50a8\u67b6\u6784\uff0c\u5b83\u53ef\u4ee5\u4fdd\u62a4\u5b58\u50a8\u5728\u975e\u6b63\u5e38\u5173\u673a\uff08\u5373 OOM\u3001\u786c\u4ef6\u91cd\u7f6e\u6216 kill -9\uff09\u65f6\u514d\u53d7\u6570\u636e\u635f\u574f \u540c\u6837\u652f\u6301\u6307\u6807\u7684 relabel \u64cd\u4f5c","title":"\u7b2c\u4e8c\u8282 Prometheus\u957f\u671f\u8fdc\u7a0b\u5b58\u50a8\u65b9\u6848VictoriaMetrics\u5165\u95e8\u5b9e\u8df5"},{"location":"chap12/68vm_setup/#1","text":"VM \u5206\u4e3a\u5355\u8282\u70b9\u548c\u96c6\u7fa4\u4e24\u4e2a\u65b9\u6848\uff0c\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u9009\u62e9\u5373\u53ef\u3002\u5355\u8282\u70b9\u7248\u76f4\u63a5\u8fd0\u884c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u65e2\uff0c\u5b98\u65b9\u5efa\u8bae\u91c7\u96c6\u6570\u636e\u70b9(data points)\u4f4e\u4e8e 100w/s\uff0c \u63a8\u8350 VM \u5355\u8282\u70b9\u7248\uff0c\u7b80\u5355\u597d\u7ef4\u62a4\uff0c\u4f46\u4e0d\u652f\u6301\u544a\u8b66 \u3002\u96c6\u7fa4\u7248\u652f\u6301\u6570\u636e\u6c34\u5e73\u62c6\u5206\u3002\u4e0b\u56fe\u662f VictoriaMetrics \u96c6\u7fa4\u7248\u5b98\u65b9\u7684\u67b6\u6784\u56fe\u3002 \u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u7ec4\u4ef6\uff1a vmstorage\uff1a\u6570\u636e\u5b58\u50a8 \u4ee5\u53ca\u67e5\u8be2\u7ed3\u679c\u8fd4\u56de\uff0c\u9ed8\u8ba4\u7aef\u53e3\u4e3a 8482 vminsert\uff1a\u6570\u636e\u5f55\u5165\uff0c\u53ef\u5b9e\u73b0\u7c7b\u4f3c\u5206\u7247 \u3001\u526f\u672c\u529f\u80fd\uff0c\u9ed8\u8ba4\u7aef\u53e3 8480 vmselect\uff1a\u6570\u636e\u67e5\u8be2\uff0c\u6c47\u603b\u548c\u6570\u636e\u53bb\u91cd \uff0c\u9ed8\u8ba4\u7aef\u53e3 8481 vmagent\uff1a\u6570\u636e\u6307\u6807\u6293\u53d6\uff0c\u652f\u6301\u591a\u79cd\u540e\u7aef\u5b58\u50a8 \uff0c\u4f1a\u5360\u7528\u672c\u5730\u78c1\u76d8\u7f13\u5b58\uff0c\u9ed8\u8ba4\u7aef\u53e3 8429 vmalert\uff1a\u62a5\u8b66\u76f8\u5173\u7ec4\u4ef6 \uff0c\u4e0d\u5982\u679c\u4e0d\u9700\u8981\u544a\u8b66\u529f\u80fd\u53ef\u4ee5\u4e0d\u4f7f\u7528\u8be5\u7ec4\u4ef6\uff0c\u9ed8\u8ba4\u7aef\u53e3\u4e3a 8880 \u96c6\u7fa4\u65b9\u6848\u628a\u529f\u80fd\u62c6\u5206\u4e3a vmstorage\u3001 vminsert\u3001vmselect \u7ec4\u4ef6\uff0c\u5982\u679c\u8981\u66ff\u6362 Prometheus\uff0c\u8fd8\u9700\u8981\u4f7f\u7528 vmagent\u3001vmalert \u3002 \u4ece\u4e0a\u56fe\u4e5f\u53ef\u4ee5\u770b\u51fa vminsert \u4ee5\u53ca vmselect \u90fd\u662f\u65e0\u72b6\u6001\u7684\uff0c\u6240\u4ee5\u6269\u5c55\u5f88\u7b80\u5355\uff0c\u53ea\u6709 vmstorage \u662f\u6709\u72b6\u6001\u7684\u3002 vmagent \u7684\u4e3b\u8981\u76ee\u7684\u662f\u7528\u6765\u6536\u96c6\u6307\u6807\u6570\u636e\u7136\u540e\u5b58\u50a8\u5230 VM \u4ee5\u53ca Prometheus \u517c\u5bb9\u7684\u5b58\u50a8\u7cfb\u7edf\u4e2d\uff08\u652f\u6301 remote_write \u534f\u8bae\u5373\u53ef\uff09\u3002 \u4e0b\u56fe\u662f vmagent \u7684\u4e00\u4e2a\u7b80\u5355\u67b6\u6784\u56fe\uff0c\u53ef\u4ee5\u770b\u51fa\u8be5\u7ec4\u4ef6\u4e5f\u5b9e\u73b0\u4e86 metrics \u7684 push \u529f\u80fd\uff0c\u6b64\u5916\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7279\u6027\uff1a \u66ff\u6362 prometheus \u7684 scraping target \u652f\u6301\u57fa\u4e8e prometheus relabeling \u7684\u6a21\u5f0f\u6dfb\u52a0\u3001\u79fb\u9664\u3001\u4fee\u6539 labels\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5728\u6570\u636e\u53d1\u9001\u5230\u8fdc\u7aef\u5b58\u50a8\u4e4b\u524d\u8fdb\u884c\u6570\u636e\u7684\u8fc7\u6ee4 \u652f\u6301\u591a\u79cd\u6570\u636e\u534f\u8bae\uff0cinflux line \u534f\u8bae\uff0cgraphite \u6587\u672c\u534f\u8bae\uff0copentsdb \u534f\u8bae\uff0cprometheus remote write \u534f\u8bae\uff0cjson lines \u534f\u8bae\uff0ccsv \u6570\u636e \u652f\u6301\u6536\u96c6\u6570\u636e\u7684\u540c\u65f6\uff0c\u5e76\u590d\u5236\u5230\u591a\u79cd\u8fdc\u7aef\u5b58\u50a8\u7cfb\u7edf \u652f\u6301\u4e0d\u53ef\u9760\u8fdc\u7aef\u5b58\u50a8\uff08\u901a\u8fc7\u672c\u5730\u5b58\u50a8 ~remoteWrite.tmpDataPath )\uff0c\u540c\u65f6\u652f\u6301\u6700\u5927\u78c1\u76d8\u5360\u7528 \u76f8\u6bd4 prometheus \u4f7f\u7528\u8f83\u5c11\u7684\u5185\u5b58\u3001cpu\u3001\u78c1\u76d8 io \u4ee5\u53ca\u7f51\u7edc\u5e26\u5bbd \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u5206\u522b\u6765\u4ecb\u7ecd\u4e86 VM \u7684\u5355\u8282\u70b9\u548c\u96c6\u7fa4\u4e24\u4e2a\u65b9\u6848\u7684\u4f7f\u7528\u3002","title":"1 \u67b6\u6784"},{"location":"chap12/68vm_setup/#2","text":"\u8fd9\u91cc\u6211\u4eec\u91c7\u96c6 node-exporter \u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e \uff0c \u9996\u5148\u4f7f\u7528 Prometheus \u91c7\u96c6\u6570\u636e\uff0c\u7136\u540e\u5c06 Prometheus \u6570\u636e\u8fdc\u7a0b\u5199\u5165 VM \u8fdc\u7a0b\u5b58\u50a8\uff0c\u7531\u4e8e VM \u63d0\u4f9b\u4e86 vmagent \u7ec4\u4ef6\uff0c\u6700\u540e\u6211\u4eec\u4f7f\u7528 VM \u6765\u5b8c\u5168\u66ff\u6362 Prometheus\uff0c\u53ef\u4ee5\u4f7f\u67b6\u6784\u66f4\u7b80\u5355\u3001\u66f4\u4f4e\u7684\u8d44\u6e90\u5360\u7528 \u3002 \u8fd9\u91cc\u6211\u4eec\u5c06\u6240\u6709\u8d44\u6e90\u8fd0\u884c\u5728 kube-vm \u547d\u540d\u7a7a\u95f4\u4e4b\u4e0b\uff1a kubectl create ns kube-vm \u9996\u5148\u6211\u4eec\u8fd9 kube-vm \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u4f7f\u7528 DaemonSet \u63a7\u5236\u5668\u8fd0\u884c node-exporter \uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # vm-node-exporter.yaml apiVersion: apps/v1 kind: DaemonSet metadata: name: node-exporter namespace: kube-vm spec: selector: matchLabels: app: node-exporter template: metadata: labels: app: node-exporter spec: hostPID: true hostIPC: true hostNetwork: true nodeSelector: kubernetes.io/os: linux containers: - name: node-exporter image: prom/node-exporter:v1.3.1 args: - --web.listen-address=$(HOSTIP):9111 - --path.procfs=/host/proc - --path.sysfs=/host/sys - --path.rootfs=/host/root - --no-collector.hwmon # \u7981\u7528\u4e0d\u9700\u8981\u7684\u4e00\u4e9b\u91c7\u96c6\u5668 - --no-collector.nfs - --no-collector.nfsd - --no-collector.nvme - --no-collector.dmi - --no-collector.arp - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/containerd/.+|/var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/) - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$ ports: - containerPort: 9111 env: - name: HOSTIP valueFrom: fieldRef: fieldPath: status.hostIP resources: requests: cpu: 150m memory: 180Mi limits: cpu: 150m memory: 180Mi securityContext: runAsNonRoot: true runAsUser: 65534 volumeMounts: - name: proc mountPath: /host/proc - name: sys mountPath: /host/sys - name: root mountPath: /host/root mountPropagation: HostToContainer readOnly: true tolerations: # \u6dfb\u52a0\u5bb9\u5fcd - operator: \"Exists\" volumes: - name: proc hostPath: path: /proc - name: dev hostPath: path: /dev - name: sys hostPath: path: /sys - name: root hostPath: path: / \u7531\u4e8e\u524d\u9762\u7ae0\u8282\u4e2d\u6211\u4eec\u4e5f\u521b\u5efa\u4e86 node-exporter \uff0c\u4e3a\u4e86\u9632\u6b62\u7aef\u53e3\u51b2\u7a81\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u53c2\u6570 --web.listen-address=$(HOSTIP):9111 \u914d\u7f6e\u7aef\u53e3\u4e3a 9111 \u3002\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\u3002 kubectl apply -f vm-node-exporter.yaml \u2638 \u279c kubectl get pods -n kube-vm -owide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES node-exporter-c4d76 1/1 Running 0 118s 192.168.0.109 node2 <none> <none> node-exporter-hzt8s 1/1 Running 0 118s 192.168.0.111 master1 <none> <none> node-exporter-zlxwb 1/1 Running 0 118s 192.168.0.110 node1 <none> <none> \u7136\u540e\u91cd\u65b0\u90e8\u7f72\u4e00\u5957\u72ec\u7acb\u7684 Prometheus\uff0c\u4e3a\u4e86\u7b80\u5355\u6211\u4eec\u76f4\u63a5\u4f7f\u7528 static_configs \u9759\u6001\u914d\u7f6e\u65b9\u5f0f\u6765\u6293\u53d6 node-exporter \u7684\u6307\u6807\uff0c\u914d\u7f6e\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # vm-prom-config.yaml apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-vm data: prometheus.yaml: | global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: \"nodes\" static_configs: - targets: ['192.168.0.109:9111', '192.168.0.110:9111', '192.168.0.111:9111'] relabel_configs: # \u901a\u8fc7 relabeling \u4ece __address__ \u4e2d\u63d0\u53d6 IP \u4fe1\u606f\uff0c\u4e3a\u4e86\u540e\u9762\u9a8c\u8bc1 VM \u662f\u5426\u517c\u5bb9 relabeling - source_labels: [__address__] regex: \"(.*):(.*)\" replacement: \"${1}\" target_label: 'ip' action: replace \u4e0a\u9762\u914d\u7f6e\u4e2d\u901a\u8fc7 relabel \u64cd\u4f5c\u4ece __address__ \u4e2d\u5c06 IP \u4fe1\u606f\u63d0\u53d6\u51fa\u6765\uff0c\u540e\u9762\u53ef\u4ee5\u7528\u6765\u9a8c\u8bc1 VM \u662f\u5426\u517c\u5bb9 relabel \u64cd\u4f5c\u3002 \u540c\u6837\u8981\u7ed9 Prometheus \u6570\u636e\u505a\u6301\u4e45\u5316\uff0c\u6240\u4ee5\u4e5f\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 PVC \u8d44\u6e90\u5bf9\u8c61\uff1a # apiVersion: storage.k8s.io/v1 # kind: StorageClass # metadata: # name: local-storage # provisioner: kubernetes.io/no-provisioner # volumeBindingMode: WaitForFirstConsumer --- apiVersion: v1 kind: PersistentVolume metadata: name: prometheus-data spec: accessModes: - ReadWriteOnce capacity: storage: 20Gi storageClassName: local-storage local: path: /data/k8s/prometheus persistentVolumeReclaimPolicy: Retain nodeAffinity: required: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/hostname operator: In values: - node2 --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: prometheus-data namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 20Gi storageClassName: local-storage \u7136\u540e\u76f4\u63a5\u521b\u5efa Prometheus \u5373\u53ef\uff0c\u5c06\u4e0a\u9762\u7684 PVC \u548c ConfigMap \u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\uff0c\u901a\u8fc7 --config.file \u53c2\u6570\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u6587\u4ef6\u8def\u5f84\uff0c\u6307\u5b9a TSDB \u6570\u636e\u8def\u5f84\u7b49\uff0c\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # vm-prom-deploy.yaml apiVersion: apps/v1 kind: Deployment metadata: name: prometheus namespace: kube-vm spec: selector: matchLabels: app: prometheus template: metadata: labels: app: prometheus spec: volumes: - name: data persistentVolumeClaim: claimName: prometheus-data - name: config-volume configMap: name: prometheus-config containers: - image: prom/prometheus:v2.35.0 name: prometheus args: - \"--config.file=/etc/prometheus/prometheus.yaml\" - \"--storage.tsdb.path=/prometheus\" # \u6307\u5b9atsdb\u6570\u636e\u8def\u5f84 - \"--storage.tsdb.retention.time=2d\" - \"--web.enable-lifecycle\" # \u652f\u6301\u70ed\u66f4\u65b0\uff0c\u76f4\u63a5\u6267\u884clocalhost:9090/-/reload\u7acb\u5373\u751f\u6548 ports: - containerPort: 9090 name: http securityContext: runAsUser: 0 volumeMounts: - mountPath: \"/etc/prometheus\" name: config-volume - mountPath: \"/prometheus\" name: data --- apiVersion: v1 kind: Service metadata: name: prometheus namespace: kube-vm spec: selector: app: prometheus type: NodePort ports: - name: web port: 9090 targetPort: http \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\u3002 \u2638 \u279c kubectl apply -f vm-prom-config.yaml \u2638 \u279c kubectl apply -f vm-prom-pvc.yaml \u2638 \u279c kubectl apply -f vm-prom-deploy.yaml \u2638 \u279c kubectl get pods -n kube-vm -owide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES node-exporter-c4d76 1/1 Running 0 27m 192.168.0.109 node2 <none> <none> node-exporter-hzt8s 1/1 Running 0 27m 192.168.0.111 master1 <none> <none> node-exporter-zlxwb 1/1 Running 0 27m 192.168.0.110 node1 <none> <none> prometheus-dfc9f6-2w2vf 1/1 Running 0 4m58s 10.244.2.102 node2 <none> <none> \u2638 \u279c kubectl get svc -n kube-vm NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.103.38.114 <none> 9090:31890/TCP 4m10s \u90e8\u7f72\u5b8c\u6210\u540e\u53ef\u4ee5\u901a\u8fc7 http://<node-ip>:31890 \u8bbf\u95ee Prometheus\uff0c\u6b63\u5e38\u53ef\u4ee5\u770b\u5230\u91c7\u96c6\u7684 3 \u4e2a node \u8282\u70b9\u7684\u6307\u6807\u4efb\u52a1\u3002 \u540c\u6837\u7684\u65b9\u5f0f\u91cd\u65b0\u90e8\u7f72 Grafana\uff0c\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # vm-grafana.yaml apiVersion: apps/v1 kind: Deployment metadata: name: grafana namespace: kube-vm spec: selector: matchLabels: app: grafana template: metadata: labels: app: grafana spec: volumes: - name: storage persistentVolumeClaim: claimName: grafana-data containers: - name: grafana image: grafana/grafana:main imagePullPolicy: IfNotPresent ports: - containerPort: 3000 name: grafana securityContext: runAsUser: 0 env: - name: GF_SECURITY_ADMIN_USER value: admin - name: GF_SECURITY_ADMIN_PASSWORD value: admin321 volumeMounts: - mountPath: /var/lib/grafana name: storage --- apiVersion: v1 kind: Service metadata: name: grafana namespace: kube-vm spec: type: NodePort ports: - port: 3000 selector: app: grafana --- apiVersion: v1 kind: PersistentVolume metadata: name: grafana-data spec: accessModes: - ReadWriteOnce capacity: storage: 1Gi storageClassName: local-storage local: path: /data/k8s/grafana persistentVolumeReclaimPolicy: Retain nodeAffinity: required: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/hostname operator: In values: - node2 --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: grafana-data namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi storageClassName: local-storage \u2638 \u279c kubectl apply -f vm-grafana.yaml \u2638 \u279c kubectl get svc -n kube-vm |grep grafana grafana NodePort 10.97.111.153 <none> 3000:31800/TCP 62s \u540c\u6837\u901a\u8fc7 http://<node-ip>:31800 \u5c31\u53ef\u4ee5\u8bbf\u95ee Grafana \u4e86\uff0c\u8fdb\u5165 Grafana \u914d\u7f6e Prometheus \u6570\u636e\u6e90\u3002 \u7136\u540e\u5bfc\u5165 16098 \u8fd9\u4e2a Dashboard\uff0c\u5bfc\u5165\u540e\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5230\u8fd9\u91cc\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528 Prometheus \u6536\u96c6\u8282\u70b9\u76d1\u63a7\u6307\u6807\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u4f7f\u7528 VM \u6765\u6539\u9020\u73b0\u6709\u65b9\u6848\u3002","title":"2 \u5355\u8282\u70b9"},{"location":"chap12/68vm_setup/#3-victoriametrics","text":"\u9996\u5148\u9700\u8981\u4e00\u4e2a\u5355\u8282\u70b9\u6a21\u5f0f\u7684 VM\uff0c\u8fd0\u884c VM \u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u542f\u52a8\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 docker \u955c\u50cf\u4e00\u952e\u542f\u52a8\uff0c\u6211\u4eec\u8fd9\u91cc\u540c\u6837\u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa4\u4e2d\u3002\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\u3002 # vm-grafana.yaml apiVersion: apps/v1 kind: Deployment metadata: name: victoria-metrics namespace: kube-vm spec: selector: matchLabels: app: victoria-metrics template: metadata: labels: app: victoria-metrics spec: volumes: - name: storage persistentVolumeClaim: claimName: victoria-metrics-data containers: - name: vm image: victoriametrics/victoria-metrics:v1.76.1 imagePullPolicy: IfNotPresent args: - -storageDataPath=/var/lib/victoria-metrics-data - -retentionPeriod=1w ports: - containerPort: 8428 name: http volumeMounts: - mountPath: /var/lib/victoria-metrics-data name: storage --- apiVersion: v1 kind: Service metadata: name: victoria-metrics namespace: kube-vm spec: type: NodePort ports: - port: 8428 selector: app: victoria-metrics --- apiVersion: v1 kind: PersistentVolume metadata: name: victoria-metrics-data spec: accessModes: - ReadWriteOnce capacity: storage: 20Gi storageClassName: local-storage local: path: /data/k8s/vm persistentVolumeReclaimPolicy: Retain nodeAffinity: required: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/hostname operator: In values: - node2 --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: victoria-metrics-data namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 20Gi storageClassName: local-storage \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 -storageDataPath \u53c2\u6570\u6307\u5b9a\u4e86\u6570\u636e\u5b58\u50a8\u76ee\u5f55\uff0c\u7136\u540e\u540c\u6837\u5c06\u8be5\u76ee\u5f55\u8fdb\u884c\u4e86\u6301\u4e45\u5316\uff0c- retentionPeriod \u53c2\u6570\u53ef\u4ee5\u7528\u6765\u914d\u7f6e\u6570\u636e\u7684\u4fdd\u6301\u5468\u671f\u3002\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\u3002 \u2638 \u279c kubectl apply -f vm-single-node-deploy.yaml \u2638 \u279c kubectl get svc victoria-metrics -n kube-vm NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE victoria-metrics NodePort 10.106.216.248 <none> 8428:31953/TCP 75m \u2638 \u279c kubectl get pods -n kube-vm -l app=victoria-metrics NAME READY STATUS RESTARTS AGE victoria-metrics-57d47f4587-htb88 1/1 Running 0 3m12s \u2638 \u279c kubectl logs -f victoria-metrics-57d47f4587-htb88 -n kube-vm 2022-04-22T08:59:14.431Z info VictoriaMetrics/lib/logger/flag.go:12 build version: victoria-metrics-20220412-134346-tags-v1.76.1-0-gf8de318bf 2022-04-22T08:59:14.431Z info VictoriaMetrics/lib/logger/flag.go:13 command line flags 2022-04-22T08:59:14.431Z info VictoriaMetrics/lib/logger/flag.go:20 flag \"retentionPeriod\"=\"1w\" 2022-04-22T08:59:14.431Z info VictoriaMetrics/lib/logger/flag.go:20 flag \"storageDataPath\"=\"/var/lib/victoria-metrics-data\" 2022-04-22T08:59:14.431Z info VictoriaMetrics/app/victoria-metrics/main.go:52 starting VictoriaMetrics at \":8428\"... 2022-04-22T08:59:14.432Z info VictoriaMetrics/app/vmstorage/main.go:97 opening storage at \"/var/lib/victoria-metrics-data\" with -retentionPeriod=1w ...... 2022-04-22T08:59:14.449Z info VictoriaMetrics/app/victoria-metrics/main.go:61 started VictoriaMetrics in 0.017 seconds 2022-04-22T08:59:14.449Z info VictoriaMetrics/lib/httpserver/httpserver.go:91 starting http server at http://127.0.0.1:8428/ \u5230\u8fd9\u91cc\u6211\u4eec\u5355\u8282\u70b9\u7684 VictoriaMetrics \u5c31\u90e8\u7f72\u6210\u529f\u4e86\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u5728 Prometheus \u4e2d\u914d\u7f6e\u8fdc\u7a0b\u5199\u5165\u6211\u4eec\u7684 VM \u5373\u53ef\uff0c\u66f4\u6539 Prometheus \u914d\u7f6e\uff1a # vm-prom-config2.yaml apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-vm data: prometheus.yaml: | global: scrape_interval: 15s scrape_timeout: 15s remote_write: # \u8fdc\u7a0b\u5199\u5165\u5230\u8fdc\u7a0b VM \u5b58\u50a8 - url: http://victoria-metrics:8428/api/v1/write scrape_configs: - job_name: \"nodes\" static_configs: - targets: ['192.168.0.109:9111', '192.168.0.110:9111', '192.168.0.111:9111'] relabel_configs: # \u901a\u8fc7 relabeling \u4ece __address__ \u4e2d\u63d0\u53d6 IP \u4fe1\u606f\uff0c\u4e3a\u4e86\u540e\u9762\u9a8c\u8bc1 VM \u662f\u5426\u517c\u5bb9 relabeling - source_labels: [__address__] regex: \"(.*):(.*)\" replacement: \"${1}\" target_label: 'ip' action: replace \u91cd\u65b0\u66f4\u65b0 Prometheus \u7684\u914d\u7f6e\u8d44\u6e90\u5bf9\u8c61\uff1a \u2638 \u279c kubectl apply -f vm-prom-config2.yaml # \u66f4\u65b0\u540e\u6267\u884c reload \u64cd\u4f5c\u91cd\u65b0\u52a0\u8f7d prometheus \u914d\u7f6e \u2638 \u279c curl -X POST \"http://192.168.0.111:31890/-/reload\" \u914d\u7f6e\u751f\u6548\u540e Prometheus \u5c31\u4f1a\u5f00\u59cb\u5c06\u6570\u636e\u8fdc\u7a0b\u5199\u5165 VM \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b VM \u7684\u6301\u4e45\u5316\u6570\u636e\u76ee\u5f55\u662f\u5426\u6709\u6570\u636e\u4ea7\u751f\u6765\u9a8c\u8bc1\uff1a \u2638 \u279c ll /data/k8s/vm/data/ total 0 drwxr-xr-x 4 root root 38 Apr 22 17:15 big -rw-r--r-- 1 root root 0 Apr 22 16:59 flock.lock drwxr-xr-x 4 root root 38 Apr 22 17:15 small \u73b0\u5728\u6211\u4eec\u53bb\u76f4\u63a5\u5c06 Grafana \u4e2d\u7684\u6570\u636e\u6e90\u5730\u5740\u4fee\u6539\u6210 VM \u7684\u5730\u5740\uff1a \u4fee\u6539\u5b8c\u6210\u540e\u91cd\u65b0\u8bbf\u95ee node-exporter \u7684 dashboard\uff0c\u6b63\u5e38\u53ef\u4ee5\u663e\u793a\uff0c\u8bc1\u660e VM \u662f\u517c\u5bb9\u7684\u3002","title":"3 \u8fdc\u7a0b\u5b58\u50a8 VictoriaMetrics"},{"location":"chap12/68vm_setup/#prometheus","text":"\u4e0a\u9762\u6211\u4eec\u5c06 Prometheus \u6570\u636e\u8fdc\u7a0b\u5199\u5165\u5230\u4e86 VM\uff0c\u4f46\u662f Prometheus \u5f00\u542f remote write \u529f\u80fd\u540e\u4f1a\u589e\u52a0\u5176\u672c\u8eab\u7684\u8d44\u6e90\u5360\u7528\uff0c\u7406\u8bba\u4e0a\u5176\u5b9e\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b8c\u5168\u7528 VM \u6765\u66ff\u6362\u6389 Prometheus\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u8fdc\u7a0b\u5199\u5165\u4e86\uff0c\u800c\u4e14\u672c\u8eab VM \u5c31\u6bd4 Prometheus \u5360\u7528\u66f4\u5c11\u7684\u8d44\u6e90\u3002 \u73b0\u5728\u6211\u4eec\u5148\u505c\u6389 Prometheus \u7684\u670d\u52a1\uff1a \u2638 \u279c kubectl scale deploy prometheus --replicas=0 -n kube-vm \u7136\u540e\u5c06 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u6302\u8f7d\u5230 VM \u5bb9\u5668\u4e2d\uff0c\u4f7f\u7528\u53c2\u6570 -promscrape.config \u6765\u6307\u5b9a Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u5982\u4e0b\u6240\u793a\uff1a # vm-single-node-deploy2.yaml apiVersion: apps/v1 kind: Deployment metadata: name: victoria-metrics namespace: kube-vm spec: selector: matchLabels: app: victoria-metrics template: metadata: labels: app: victoria-metrics spec: volumes: - name: storage persistentVolumeClaim: claimName: victoria-metrics-data - name: prometheus-config configMap: name: prometheus-config containers: - name: vm image: victoriametrics/victoria-metrics:v1.76.1 imagePullPolicy: IfNotPresent args: - -storageDataPath=/var/lib/victoria-metrics-data - -retentionPeriod=1w - -promscrape.config=/etc/prometheus/prometheus.yaml ports: - containerPort: 8428 name: http volumeMounts: - mountPath: /var/lib/victoria-metrics-data name: storage - mountPath: /etc/prometheus name: prometheus-config \u8bb0\u5f97\u5148\u5c06 Prometheus \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 remote_write \u6a21\u5757\u53bb\u6389\uff0c\u7136\u540e\u91cd\u65b0\u66f4\u65b0 VM \u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f vm-prom-config.yaml \u2638 \u279c kubectl apply -f vm-single-node-deploy2.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=victoria-metrics NAME READY STATUS RESTARTS AGE victoria-metrics-8466844968-ncfnp 1/1 Running 2 (3m3s ago) 3m45s \u2638 \u279c kubectl logs -f victoria-metrics-8466844968-ncfnp -n kube-vm ...... 2022-04-22T10:01:59.837Z info VictoriaMetrics/app/victoria-metrics/main.go:61 started VictoriaMetrics in 0.022 seconds 2022-04-22T10:01:59.837Z info VictoriaMetrics/lib/httpserver/httpserver.go:91 starting http server at http://127.0.0.1:8428/ 2022-04-22T10:01:59.837Z info VictoriaMetrics/lib/httpserver/httpserver.go:92 pprof handlers are exposed at http://127.0.0.1:8428/debug/pprof/ 2022-04-22T10:01:59.838Z info VictoriaMetrics/lib/promscrape/scraper.go:103 reading Prometheus configs from \"/etc/prometheus/prometheus.yaml\" 2022-04-22T10:01:59.838Z info VictoriaMetrics/lib/promscrape/config.go:96 starting service discovery routines... 2022-04-22T10:01:59.839Z info VictoriaMetrics/lib/promscrape/config.go:102 started service discovery routines in 0.000 seconds 2022-04-22T10:01:59.840Z info VictoriaMetrics/lib/promscrape/scraper.go:395 static_configs: added targets: 3, removed targets: 0; total targets: 3 \u4ece VM \u65e5\u5fd7\u4e2d\u53ef\u4ee5\u770b\u51fa\u6210\u529f\u8bfb\u53d6\u4e86 Prometheus \u7684\u914d\u7f6e\uff0c\u5e76\u6293\u53d6\u4e86 3 \u4e2a\u6307\u6807\uff08node-exporter\uff09\u3002\u73b0\u5728\u6211\u4eec\u518d\u53bb Grafana \u67e5\u770b node-exporter \u7684 Dashboard \u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u663e\u793a\u3002\u5148\u4fdd\u8bc1\u6570\u636e\u6e90\u662f VM \u7684\u5730\u5740\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u4f7f\u7528 VM \u66ff\u6362\u6389\u4e86 Prometheus\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd9 Grafana \u7684 Explore \u9875\u9762\u53bb\u63a2\u7d22\u91c7\u96c6\u5230\u7684\u6307\u6807\u3002","title":"\u66ff\u6362 Prometheus"},{"location":"chap12/68vm_setup/#4-ui","text":"VM \u5355\u8282\u70b9\u7248\u672c\u672c\u8eab\u81ea\u5e26\u4e86\u4e00\u4e2a Web UI \u754c\u9762 - vmui\uff0c\u4e0d\u8fc7\u76ee\u524d\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 VM \u7684 NodePort \u7aef\u53e3\u8fdb\u884c\u8bbf\u95ee\u3002 \u2638 \u279c kubectl get svc victoria-metrics -n kube-vm NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE victoria-metrics NodePort 10.106.216.248 <none> 8428:31953/TCP 75m \u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7 http:// :31953 \u8bbf\u95ee\u5230 vmui\uff1a \u53ef\u4ee5\u901a\u8fc7 /vmui \u8fd9\u4e2a endpoint \u8bbf\u95ee UI \u754c\u9762\uff1a \u5982\u679c\u4f60\u60f3\u67e5\u770b\u91c7\u96c6\u5230\u7684\u6307\u6807 targets\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7 /targets \u8fd9\u4e2a endpoint \u6765\u83b7\u53d6\uff1a \u8fd9\u4e9b\u529f\u80fd\u57fa\u672c\u4e0a\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u4e00\u4e9b\u9700\u6c42\uff0c\u4f46\u662f\u8fd8\u662f\u592a\u8fc7\u7b80\u5355\uff0c\u5982\u679c\u4f60\u4e60\u60ef\u4e86 Prometheus \u7684 UI \u754c\u9762\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 promxy \u6765\u4ee3\u66ff vmui\uff0c\u800c\u4e14 promxy \u8fd8\u53ef\u4ee5\u8fdb\u884c\u591a\u4e2a VM \u5355\u8282\u70b9\u7684\u6570\u636e\u805a\u5408\uff0c\u4ee5\u53ca targets \u67e5\u770b\u7b49\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # vm-promxy.yaml apiVersion: v1 kind: ConfigMap metadata: name: promxy-config namespace: kube-vm data: config.yaml: | promxy: server_groups: - static_configs: - targets: [victoria-metrics:8428] # \u6307\u5b9avm\u5730\u5740\uff0c\u6709\u591a\u4e2a\u5219\u5f80\u540e\u8ffd\u52a0\u5373\u53ef path_prefix: /prometheus # \u914d\u7f6e\u524d\u7f00 --- apiVersion: apps/v1 kind: Deployment metadata: name: promxy namespace: kube-vm spec: selector: matchLabels: app: promxy template: metadata: labels: app: promxy spec: containers: - args: - \"--config=/etc/promxy/config.yaml\" - \"--web.enable-lifecycle\" - \"--log-level=trace\" env: - name: ROLE value: \"1\" command: - \"/bin/promxy\" image: quay.io/jacksontj/promxy imagePullPolicy: Always name: promxy ports: - containerPort: 8082 name: web volumeMounts: - mountPath: \"/etc/promxy/\" name: promxy-config readOnly: true - args: # container to reload configs on configmap change - \"--volume-dir=/etc/promxy\" - \"--webhook-url=http://localhost:8082/-/reload\" image: jimmidyson/configmap-reload:v0.1 name: promxy-server-configmap-reload volumeMounts: - mountPath: \"/etc/promxy/\" name: promxy-config readOnly: true volumes: - configMap: name: promxy-config name: promxy-config --- apiVersion: v1 kind: Service metadata: name: promxy namespace: kube-vm spec: type: NodePort ports: - port: 8082 selector: app: promxy \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f vm-promxy.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=promxy NAME READY STATUS RESTARTS AGE promxy-5f7dfdbc64-l4kjq 2/2 Running 0 6m45s \u2638 \u279c kubectl get svc promxy -n kube-vm NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE promxy NodePort 10.110.19.254 <none> 8082:30618/TCP 6m12s \u8bbf\u95ee Promxy \u7684\u9875\u9762\u6548\u679c\u548c Prometheus \u81ea\u5e26\u7684 Web UI \u57fa\u672c\u4e00\u81f4\u7684\u3002","title":"4 UI \u754c\u9762"},{"location":"chap12/69vm_cluster/","text":"\u7b2c\u4e09\u8282 VictorialMetrics \u96c6\u7fa4\u6a21\u5f0f\u7684\u4f7f\u7528 \u5355\u8282\u70b9\u7248\u672c\u53ef\u6839\u636e CPU \u5185\u6838\u3001RAM \u548c\u53ef\u7528\u5b58\u50a8\u7a7a\u95f4\u7684\u6570\u91cf\u8fdb\u884c\u6269\u5c55\u3002\u5355\u8282\u70b9\u7248\u672c\u6bd4\u96c6\u7fa4\u7248\u672c\u66f4\u5bb9\u6613\u914d\u7f6e\u548c\u64cd\u4f5c\uff0c\u6240\u4ee5\u5728\u4f7f\u7528\u96c6\u7fa4\u7248\u672c\u4e4b\u524d\u8981\u4e09\u601d\u800c\u540e\u884c\u3002\u4e0a\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 VM \u7684\u5355\u8282\u70b9\u7248\u672c\u7684\u57fa\u672c\u4f7f\u7528\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u4ecb\u7ecd\u4e0b\u5982\u4f55\u4f7f\u7528\u96c6\u7fa4\u7248\u3002 \u96c6\u7fa4\u7248\u4e3b\u8981\u7279\u70b9\uff1a \u652f\u6301\u5355\u8282\u70b9\u7248\u672c\u7684\u6240\u6709\u529f\u80fd\u3002 \u6027\u80fd\u548c\u5bb9\u91cf\u6c34\u5e73\u6269\u5c55\u3002 \u652f\u6301\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u591a\u4e2a\u72ec\u7acb\u547d\u540d\u7a7a\u95f4\uff08\u591a\u79df\u6237\uff09\u3002 \u652f\u6301\u591a\u526f\u672c\u3002 1 Node-Exporter --- apiVersion: apps/v1 kind: DaemonSet metadata: name: node-exporter namespace: kube-vm labels: k8s-app: node-exporter spec: selector: matchLabels: k8s-app: node-exporter template: metadata: labels: k8s-app: node-exporter spec: containers: - image: prom/node-exporter name: node-exporter ports: - containerPort: 9100 protocol: TCP name: http --- apiVersion: v1 kind: Service metadata: labels: k8s-app: node-exporter name: node-exporter namespace: kube-vm spec: ports: - name: http port: 9100 targetPort: 9100 protocol: TCP selector: k8s-app: node-exporter $ kubectl apply -f cluster-prom-nodexpo.yaml daemonset.apps/node-exporter created service/node-exporter created 2 \u7ec4\u4ef6 \u524d\u9762\u6211\u4eec\u4e86\u89e3\u4e86 VM \u7684\u57fa\u672c\u67b6\u6784\uff0c\u5bf9\u4e8e\u96c6\u7fa4\u6a21\u5f0f\u4e0b\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u670d\u52a1\uff1a vmstorage\uff1a\u5b58\u50a8\u539f\u59cb\u6570\u636e\u5e76\u8fd4\u56de\u6307\u5b9a\u6807\u7b7e\u8fc7\u6ee4\u5668\u5728\u7ed9\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u67e5\u8be2\u6570\u636e\uff0c\u5f53 -storageDataPath \u6307\u5411\u7684\u76ee\u5f55\u5305\u542b\u7684\u53ef\u7528\u7a7a\u95f4\u5c11\u4e8e -storage.minFreeDiskSpaceBytes \u65f6\uff0c vmstorage \u8282\u70b9\u4f1a\u81ea\u52a8\u5207\u6362\u5230\u53ea\u8bfb\u6a21\u5f0f\uff0c vminsert \u8282\u70b9\u4e5f\u4f1a\u505c\u6b62\u5411\u6b64\u7c7b\u8282\u70b9\u53d1\u9001\u6570\u636e\u5e76\u5f00\u59cb\u5c06\u6570\u636e\u91cd\u65b0\u8def\u7531\u5230\u5269\u4f59\u7684 vmstorage \u8282\u70b9\u3002 vminsert \uff1a\u63a5\u53d7\u6444\u53d6\u7684\u6570\u636e\u5e76\u6839\u636e\u6307\u6807\u540d\u79f0\u53ca\u5176\u6240\u6709\u6807\u7b7e\u7684\u4e00\u81f4\u6027\u54c8\u5e0c\u5c06\u5176\u5206\u6563\u5b58\u50a8\u5230 vmstorage \u8282\u70b9\u3002 vmselect\uff1a\u901a\u8fc7\u4ece\u6240\u6709\u914d\u7f6e\u7684 vmstorage \u8282\u70b9\u83b7\u53d6\u6240\u9700\u6570\u636e\u6765\u6267\u884c\u67e5\u8be2 \u3002 \u6bcf\u4e2a\u670d\u52a1\u90fd\u53ef\u4ee5\u8fdb\u884c\u72ec\u7acb\u6269\u5c55\uff0cvmstorage \u8282\u70b9\u4e4b\u95f4\u4e92\u4e0d\u4e86\u89e3\u3001\u4e92\u4e0d\u901a\u4fe1\uff0c\u5e76\u4e14\u4e0d\u5171\u4eab\u4efb\u4f55\u6570\u636e\u3002\u8fd9\u6837\u53ef\u4ee5\u589e\u52a0\u96c6\u7fa4\u7684\u53ef\u7528\u6027\uff0c\u5e76\u4e14\u7b80\u5316\u4e86\u96c6\u7fa4\u7684\u7ef4\u62a4\u548c\u6269\u5c55\u3002\u6700\u5c0f\u7684\u96c6\u7fa4\u5fc5\u987b\u5305\u542b\u4ee5\u4e0b\u8282\u70b9\uff1a \u5e26\u6709 -retentionPeriod \u548c -storageDataPath \u53c2\u6570\u7684\u5355 vmstorage \u8282\u70b9 \u5e26\u6709 -storageNode=<vmstorage_host> \u7684\u5355 vminsert \u8282\u70b9 \u5e26\u6709 -storageNode=<vmstorage_host> \u7684\u5355 vmselect \u8282\u70b9 \u4f46\u662f\u6211\u4eec\u5efa\u8bae\u4e3a\u6bcf\u4e2a\u670d\u52a1\u7ec4\u4ef6\u8fd0\u884c\u81f3\u5c11\u4e24\u4e2a\u8282\u70b9\u4ee5\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\uff0c\u8fd9\u6837\u5f53\u5355\u4e2a\u8282\u70b9\u6682\u65f6\u4e0d\u53ef\u7528\u65f6\uff0c\u96c6\u7fa4\u4f1a\u7ee7\u7eed\u5de5\u4f5c\uff0c\u800c\u4e14\u5176\u4f59\u8282\u70b9\u8fd8\u53ef\u4ee5\u5904\u7406\u589e\u52a0\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002 \u5982\u679c\u4f60\u7684\u96c6\u7fa4\u89c4\u6a21\u8f83\u5927\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a\u5c0f\u578b\u7684 vmstorage \u8282\u70b9\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u5728\u67d0\u4e9b vmstorage \u8282\u70b9\u6682\u65f6\u4e0d\u53ef\u7528\u65f6\u51cf\u5c11\u5269\u4f59 vmstorage \u8282\u70b9\u4e0a\u7684\u5de5\u4f5c\u8d1f\u8f7d\u589e\u52a0\u3002 \u5404\u4e2a\u670d\u52a1\u9664\u4e86\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u6807\u5fd7\u8fdb\u884c\u914d\u7f6e\u4e4b\u5916\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a -envflag.enable \u6807\u5fd7\u5fc5\u987b\u8bbe\u7f6e \u6bcf\u4e2a\u6807\u5fd7\u4e2d\u7684 . \u5fc5\u987b\u66ff\u6362\u4e3a _ \uff0c\u4f8b\u5982 -insert.maxQueueDuration <duration> \u53ef\u4ee5\u8f6c\u6362\u4e3a insert_maxQueueDuration=<duration> \u5bf9\u4e8e\u91cd\u590d\u7684\u6807\u5fd7\uff0c\u53ef\u4ee5\u4f7f\u7528\u53e6\u4e00\u79cd\u8bed\u6cd5\uff0c\u901a\u8fc7\u4f7f\u7528 , \u4f5c\u4e3a\u5206\u9694\u7b26\u5c06\u4e0d\u540c\u7684\u503c\u8fde\u63a5\u6210\u4e00\u4e2a\uff0c\u4f8b\u5982 -storageNode <nodeA> -storageNode <nodeB> \u5c06\u8f6c\u6362\u4e3a -storageNode=<nodeA>,<nodeB> \u53ef\u4ee5\u4f7f\u7528 -envflag.prefix \u4e3a\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u524d\u7f00\uff0c\u4f8b\u5982\u8bbe\u7f6e\u4e86 -envflag.prefix=VM* \uff0c\u5219\u73af\u5883\u53d8\u91cf\u53c2\u6570\u5fc5\u987b\u4ee5 VM* \u5f00\u5934 2-1 \u591a\u79df\u6237 VM \u96c6\u7fa4\u4e5f\u652f\u6301\u591a\u4e2a\u72ec\u7acb\u7684\u79df\u6237\uff08\u4e5f\u53eb\u547d\u540d\u7a7a\u95f4\uff09\uff0c\u79df\u6237\u7531 accountID \u6216 accountID:projectID \u6765\u6807\u8bc6\uff0c\u5b83\u4eec\u88ab\u653e\u5728\u8bf7\u6c42\u7684 urls \u4e2d \u3002 \u6bcf\u4e2a accountID \u548c projectID \u90fd\u7531\u4e00\u4e2a [0 .. 2^32] \u8303\u56f4\u5185\u7684\u4efb\u610f 32 \u4f4d\u6574\u6570\u6807\u8bc6\uff0c\u5982\u679c\u7f3a\u5c11 projectID\uff0c\u5219\u81ea\u52a8\u5c06\u5176\u5206\u914d\u4e3a 0\u3002\u6709\u5173\u79df\u6237\u7684\u5176\u4ed6\u4fe1\u606f\uff0c\u4f8b\u5982\u8eab\u4efd\u9a8c\u8bc1\u4ee4\u724c\u3001\u79df\u6237\u540d\u79f0\u3001\u9650\u989d\u3001\u8ba1\u8d39\u7b49\uff0c\u5c06\u5b58\u50a8\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u3002\u6b64\u6570\u636e\u5e93\u5fc5\u987b\u7531\u4f4d\u4e8e VictoriaMetrics \u96c6\u7fa4\u524d\u9762\u7684\u5355\u72ec\u670d\u52a1\u7ba1\u7406\uff0c\u4f8b\u5982 vmauth \u6216 vmgateway \u3002 \u5f53\u7b2c\u4e00\u4e2a\u6570\u636e\u70b9\u5199\u5165\u6307\u5b9a\u79df\u6237\u65f6\uff0c\u79df\u6237\u88ab\u81ea\u52a8\u521b\u5efa\u3002 \u6240 \u6709\u79df\u6237\u7684\u6570\u636e\u5747\u5300\u5206\u5e03\u5728\u53ef\u7528\u7684 vmstorage \u8282\u70b9\u4e2d\uff0c\u5f53\u4e0d\u540c\u79df\u6237\u6709\u4e0d\u540c\u7684\u6570\u636e\u91cf\u548c\u4e0d\u540c\u7684\u67e5\u8be2\u8d1f\u8f7d\u65f6\uff0c\u8fd9\u4fdd\u8bc1\u4e86 vmstorage \u8282\u70b9\u4e4b\u95f4\u7684\u5747\u5300\u8d1f\u8f7d \u3002 \u6570\u636e\u5e93\u6027\u80fd\u548c\u8d44\u6e90\u4f7f\u7528\u4e0d\u4f9d\u8d56\u4e8e\u79df\u6237\u7684\u6570\u91cf\uff0c\u5b83\u4e3b\u8981\u53d6\u51b3\u4e8e\u6240\u6709\u79df\u6237\u4e2d\u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u7684\u603b\u6570\u3002\u5982\u679c\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u5728\u8fc7\u53bb\u4e00\u5c0f\u65f6\u5185\u81f3\u5c11\u6536\u5230\u4e00\u4e2a\u6837\u672c\uff0c\u6216\u8005\u5728\u8fc7\u53bb\u4e00\u5c0f\u65f6\u5185\u88ab\u67e5\u8be2\uff0c\u5219\u8ba4\u4e3a\u65f6\u95f4\u5e8f\u5217\u662f\u6d3b\u8dc3\u7684\u3002 VictoriaMetrics \u4e0d\u652f\u6301\u5728\u5355\u4e2a\u8bf7\u6c42\u4e2d\u67e5\u8be2\u591a\u4e2a\u79df\u6237 \u3002 2-2 \u96c6\u7fa4\u6269\u5c55 VM \u96c6\u7fa4\u7684\u6027\u80fd\u548c\u5bb9\u91cf\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u6269\u5c55\uff1a \u901a\u8fc7\u5411\u96c6\u7fa4\u4e2d\u7684\u73b0\u6709\u8282\u70b9\u6dfb\u52a0\u66f4\u591a\u8d44\u6e90\uff08CPU\u3001RAM\u3001\u78c1\u76d8 IO\u3001\u78c1\u76d8\u7a7a\u95f4\u3001\u7f51\u7edc\u5e26\u5bbd\uff09\uff0c\u4e5f\u53eb\u5782\u76f4\u53ef\u6269\u5c55\u6027\u3002 \u901a\u8fc7\u5411\u96c6\u7fa4\u6dfb\u52a0\u66f4\u591a\u8282\u70b9\uff0c\u53c8\u53eb\u6c34\u5e73\u6269\u5c55\u6027\u3002 \u5bf9\u4e8e\u96c6\u7fa4\u6269\u5c55\u6709\u4e00\u4e9b\u901a\u7528\u7684\u5efa\u8bae\uff1a \u5411\u73b0\u6709 vmselect \u8282\u70b9\u6dfb\u52a0 \u66f4\u591a CPU \u548c\u5185\u5b58 \uff0c\u53ef\u4ee5\u63d0\u9ad8\u590d\u6742\u67e5\u8be2\u7684\u6027\u80fd\uff0c\u8fd9\u4e9b\u67e5\u8be2\u53ef\u4ee5\u5904\u7406\u5927\u91cf\u7684\u65f6\u95f4\u5e8f\u5217\u548c\u5927\u91cf\u7684\u539f\u59cb\u6837\u672c\u3002 \u6dfb\u52a0\u66f4\u591a vmstorage \u8282\u70b9\u53ef\u4ee5\u589e\u52a0\u96c6\u7fa4\u53ef\u4ee5\u5904\u7406\u7684\u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u91cf \uff0c\u8fd9\u4e5f\u63d0\u9ad8\u4e86\u5bf9\u9ad8\u6d41\u5931\u7387(churn rate)\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u67e5\u8be2\u6027\u80fd\u3002\u96c6\u7fa4\u7a33\u5b9a\u6027\u4e5f\u4f1a\u968f\u7740 vmstorage \u8282\u70b9\u6570\u91cf\u7684\u589e\u52a0\u800c\u63d0\u9ad8\uff0c\u5f53\u4e00\u4e9b vmstorage \u8282\u70b9\u4e0d\u53ef\u7528\u65f6\uff0c\u6d3b\u8dc3\u7684 vmstorage \u8282\u70b9\u9700\u8981\u5904\u7406\u8f83\u4f4e\u7684\u989d\u5916\u5de5\u4f5c\u8d1f\u8f7d\u3002 \u5411\u73b0\u6709 vmstorage \u8282\u70b9\u6dfb\u52a0\u66f4\u591a CPU \u548c\u5185\u5b58\uff0c\u53ef\u4ee5\u589e\u52a0\u96c6\u7fa4\u53ef\u4ee5\u5904\u7406\u7684\u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u91cf \u3002\u4e0e\u5411\u73b0\u6709 vmstorage \u8282\u70b9\u6dfb\u52a0\u66f4\u591a CPU \u548c\u5185\u5b58\u76f8\u6bd4\uff0c\u6700\u597d\u6dfb\u52a0\u66f4\u591a vmstorage \u8282\u70b9\uff0c\u56e0\u4e3a\u66f4\u591a\u7684 vmstorage \u8282\u70b9\u53ef\u4ee5\u63d0\u9ad8\u96c6\u7fa4\u7a33\u5b9a\u6027\uff0c\u5e76\u63d0\u9ad8\u5bf9\u9ad8\u6d41\u5931\u7387\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u67e5\u8be2\u6027\u80fd\u3002 \u6dfb\u52a0\u66f4\u591a\u7684 vminsert \u8282\u70b9\u4f1a\u63d0\u9ad8\u6570\u636e\u6444\u53d6\u7684\u6700\u5927\u901f\u5ea6\uff0c\u56e0\u4e3a\u6444\u53d6\u7684\u6570\u636e\u53ef\u4ee5\u5728\u66f4\u591a\u7684 vminsert \u8282\u70b9\u4e4b\u95f4\u8fdb\u884c\u62c6\u5206 \u3002 \u96c6\u7fa4\u53ef\u7528\u6027 HTTP \u8d1f\u8f7d\u5747\u8861\u5668\u9700\u8981\u505c\u6b62\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u4e0d\u53ef\u7528\u7684 vminsert \u548c vmselect \u8282\u70b9 \u3002 \u5982\u679c\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a vmstorage \u8282\u70b9\uff0c\u5219\u96c6\u7fa4\u4ecd\u7136\u53ef\u7528\uff1a vminsert \u5c06\u4f20\u5165\u6570\u636e\u4ece\u4e0d\u53ef\u7528\u7684 vmstorage \u8282\u70b9\u91cd\u65b0\u8def\u7531\u5230\u5065\u5eb7\u7684 vmstorage \u8282\u70b9 \u5982\u679c\u81f3\u5c11\u6709\u4e00\u4e2a vmstorage \u8282\u70b9\u53ef\u7528\uff0c\u5219 vmselect \u4f1a\u7ee7\u7eed\u63d0\u4f9b\u90e8\u5206\u54cd\u5e94 \u3002\u5982\u679c\u4f18\u5148\u8003\u8651\u53ef\u7528\u6027\u7684\u4e00\u81f4\u6027\uff0c\u5219\u5c06 -search.denyPartialResponse \u6807\u5fd7\u4f20\u9012\u7ed9 vmselect \u6216\u5c06\u8bf7\u6c42\u4e2d\u7684 deny_partial_response=1 \u67e5\u8be2\u53c2\u6570\u4f20\u9012\u7ed9 vmselect\u3002 2-3 \u53bb\u91cd \u5982\u679c -dedup.minScrapeInterval \u547d\u4ee4\u884c\u6807\u5fd7\u8bbe\u7f6e\u4e3a\u5927\u4e8e 0 \u7684\u65f6\u95f4\uff0c VictoriaMetrics \u4f1a\u53bb\u9664\u91cd\u590d\u6570\u636e\u70b9\u3002\u4f8b\u5982\uff0c -dedup.minScrapeInterval=60s \u5c06\u5bf9\u540c\u4e00\u65f6\u95f4\u5e8f\u5217\u4e0a\u7684\u6570\u636e\u70b9\u8fdb\u884c\u91cd\u590d\u6570\u636e\u5220\u9664\uff0c\u5982\u679c\u5b83\u4eec\u4f4d\u4e8e\u540c\u4e00\u79bb\u6563\u7684 60 \u79d2\u5b58\u50a8\u6876\u5185\uff0c\u6700\u65e9\u7684\u6570\u636e\u70b9\u5c06\u88ab\u4fdd\u7559\u3002\u5728\u65f6\u95f4\u6233\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u4fdd\u7559\u4efb\u610f\u6570\u636e\u70b9\u3002 -dedup.minScrapeInterval \u7684\u63a8\u8350\u503c\u662f\u7b49\u4e8e Prometheus \u914d\u7f6e\u4e2d\u7684 scrape_interval \u7684\u503c\uff0c\u5efa\u8bae\u5728\u6240\u6709\u6293\u53d6\u76ee\u6807\u4e2d\u4f7f\u7528\u4e00\u4e2a scrape_interval \u914d\u7f6e\u3002 \u5982\u679c HA \u4e2d\u591a\u4e2a\u76f8\u540c\u914d\u7f6e\u7684 vmagent \u6216 Prometheus \u5b9e\u4f8b\u5c06\u6570\u636e\u5199\u5165\u540c\u4e00\u4e2a VictoriaMetrics \u5b9e\u4f8b\uff0c\u5219\u91cd\u590d\u6570\u636e\u5220\u9664\u4f1a\u51cf\u5c11\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u3002\u8fd9\u4e9b vmagent \u6216 Prometheus \u5b9e\u4f8b\u5728\u5176\u914d\u7f6e\u4e2d\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684 external_labels \u90e8\u5206\uff0c\u56e0\u6b64\u5b83\u4eec\u5c06\u6570\u636e\u5199\u5165\u76f8\u540c\u7684\u65f6\u95f4\u5e8f\u5217\u3002 \u5bb9\u91cf\u89c4\u5212 \u96c6\u7fa4\u5bb9\u91cf\u968f\u7740\u53ef\u7528\u8d44\u6e90\u7684\u589e\u52a0\u800c\u7ebf\u6027\u6269\u5c55\uff0c\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u6240\u9700\u7684 CPU \u548c\u5185\u5b58\u6570\u91cf\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u5de5\u4f5c\u8d1f\u8f7d - \u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u91cf\u3001\u5e8f\u5217\u6d41\u5931\u7387\u3001\u67e5\u8be2\u7c7b\u578b\u3001\u67e5\u8be2 QPS \u7b49\u3002\u5efa\u8bae\u4e3a\u4f60\u7684\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u90e8\u7f72\u4e00\u4e2a\u6d4b\u8bd5\u7684 VictoriaMetrics \u96c6\u7fa4\uff0c\u5e76\u53cd\u590d\u8c03\u6574\u6bcf\u4e2a\u8282\u70b9\u7684\u8d44\u6e90\u548c\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u6570\u91cf\uff0c\u76f4\u5230\u96c6\u7fa4\u53d8\u5f97\u7a33\u5b9a\u3002\u540c\u6837\u4e5f\u5efa\u8bae\u4e3a\u96c6\u7fa4\u8bbe\u7f6e\u76d1\u63a7\uff0c\u6709\u52a9\u4e8e\u786e\u5b9a\u96c6\u7fa4\u8bbe\u7f6e\u4e2d\u7684\u74f6\u9888\u95ee\u9898\u3002 \u6307\u5b9a\u4fdd\u7559\u6240\u9700\u7684\u5b58\u50a8\u7a7a\u95f4\uff08\u53ef\u4ee5\u901a\u8fc7 vmstorage \u4e2d\u7684 -retentionPeriod \u547d\u4ee4\u884c\u6807\u5fd7\u8bbe\u7f6e\uff09\u53ef\u4ee5\u4ece\u6d4b\u8bd5\u8fd0\u884c\u4e2d\u7684\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u60c5\u51b5\u63a8\u65ad\u51fa\u6765\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5728\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u4e0a\u8fd0\u884c\u4e00\u5929\u540e\u7684\u5b58\u50a8\u7a7a\u95f4\u4f7f\u7528\u91cf\u4e3a 10GB\uff0c\u90a3\u4e48\u5bf9\u4e8e -retentionPeriod=100d \uff08100 \u5929\u4fdd\u7559\u671f\uff09\u6765\u8bf4\uff0c\u5b83\u81f3\u5c11\u9700\u8981 10GB*100=1TB \u7684\u78c1\u76d8\u7a7a\u95f4\u3002\u53ef\u4ee5\u4f7f\u7528 VictoriaMetrics \u96c6\u7fa4\u7684\u5b98\u65b9 Grafana \u4eea\u8868\u677f( https://grafana.com/grafana/dashboards/11176 )\u76d1\u63a7\u5b58\u50a8\u7a7a\u95f4\u4f7f\u7528\u60c5\u51b5\u3002 \u5efa\u8bae\u7559\u51fa\u4ee5\u4e0b\u6570\u91cf\u7684\u5907\u7528\u8d44\u6e90\u3002 \u6240\u6709\u8282\u70b9\u7c7b\u578b\u4e2d 50% \u7684\u7a7a\u95f2\u5185\u5b58\uff0c\u4ee5\u51cf\u5c11\u5de5\u4f5c\u8d1f\u8f7d\u4e34\u65f6\u6fc0\u589e\u65f6\u56e0\u4e3a OOM \u5d29\u6e83\u7684\u53ef\u80fd\u6027\u3002 \u6240\u6709\u8282\u70b9\u7c7b\u578b\u4e2d 50% \u7684\u7a7a\u95f2 CPU\uff0c\u4ee5\u51cf\u5c11\u5de5\u4f5c\u8d1f\u8f7d\u4e34\u65f6\u9ad8\u5cf0\u671f\u95f4\u7684\u6162\u901f\u6982\u7387\u3002 vmstorage \u8282\u70b9\u4e0a -storageDataPath \u547d\u4ee4\u884c\u6807\u5fd7\u6307\u5411\u7684\u76ee\u5f55\u4e2d\u81f3\u5c11\u6709 30% \u7684\u53ef\u7528\u5b58\u50a8\u7a7a\u95f4\u3002 VictoriaMetrics \u96c6\u7fa4\u7684\u4e00\u4e9b\u5bb9\u91cf\u89c4\u5212\u6280\u5de7\uff1a \u526f\u672c\u96c6\u5c06\u96c6\u7fa4\u6240\u9700\u7684\u8d44\u6e90\u91cf\u6700\u591a\u589e\u52a0 N \u500d\uff0c\u5176\u4e2d N \u662f\u590d\u5236\u56e0\u5b50\u3002 \u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u66f4\u591a vmstorage \u8282\u70b9\u548c/\u6216\u901a\u8fc7\u589e\u52a0\u6bcf\u4e2a vmstorage \u8282\u70b9\u7684\u5185\u5b58\u548c CPU \u8d44\u6e90\u6765\u589e\u52a0\u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u7684\u96c6\u7fa4\u5bb9\u91cf\u3002 \u53ef\u4ee5\u901a\u8fc7\u589e\u52a0 vmstorage \u8282\u70b9\u7684\u6570\u91cf\u548c/\u6216\u901a\u8fc7\u589e\u52a0\u6bcf\u4e2a vmselect \u8282\u70b9\u7684\u5185\u5b58\u548c CPU \u8d44\u6e90\u6765\u51cf\u5c11\u67e5\u8be2\u5ef6\u8fdf\u3002 \u6240\u6709 vminsert \u8282\u70b9\u6240\u9700\u7684 CPU \u5185\u6838\u603b\u6570\u53ef\u4ee5\u901a\u8fc7\u6444\u53d6\u7387\u8ba1\u7b97\uff1a CPUs = ingestion_rate / 100K \u3002 vminsert \u8282\u70b9\u4e0a\u7684 -rpc.disableCompression \u547d\u4ee4\u884c\u6807\u5fd7\u53ef\u4ee5\u589e\u52a0\u6444\u53d6\u5bb9\u91cf\uff0c\u4f46\u4ee3\u4ef7\u662f vminsert \u548c vmstorage \u4e4b\u95f4\u7684\u7f51\u7edc\u5e26\u5bbd\u4f7f\u7528\u7387\u4f1a\u66f4\u9ad8\u3002 2-4 \u526f\u672c\u548c\u6570\u636e\u5b89\u5168 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cVictoriaMetrics \u7684\u6570\u636e\u590d\u5236\u4f9d\u8d56 -storageDataPath \u6307\u5411\u7684\u5e95\u5c42\u5b58\u50a8\u6765\u5b8c\u6210\u3002 \u4f46\u662f\u6211\u4eec\u4e5f\u53ef\u4ee5\u624b\u52a8\u901a\u8fc7\u5c06 -replicationFactor=N \u547d\u4ee4\u53c2\u6570\u4f20\u9012\u7ed9 vminsert \u6765\u542f\u7528\u590d\u5236\uff0c\u8fd9\u4fdd\u8bc1\u4e86\u5982\u679c\u591a\u8fbe N-1 \u4e2a vmstorage \u8282\u70b9\u4e0d\u53ef\u7528\uff0c\u6240\u6709\u6570\u636e\u4ecd\u53ef\u7528\u4e8e\u67e5\u8be2\u3002\u96c6\u7fa4\u5fc5\u987b\u81f3\u5c11\u5305\u542b 2*N-1 \u4e2a vmstorage \u8282\u70b9\uff0c\u5176\u4e2d N \u662f\u590d\u5236\u56e0\u5b50\uff0c\u4ee5\u4fbf\u5728 N-1 \u4e2a\u5b58\u50a8\u8282\u70b9\u4e22\u5931\u65f6\u4e3a\u65b0\u6444\u53d6\u7684\u6570\u636e\u7ef4\u6301\u6307\u5b9a\u7684\u590d\u5236\u56e0\u5b50\u3002 \u4f8b\u5982\uff0c\u5f53 -replicationFactor=3 \u4f20\u9012\u7ed9 vminsert \u65f6\uff0c\u5b83\u5c06\u6240\u6709\u6444\u53d6\u7684\u6570\u636e\u590d\u5236\u5230 3 \u4e2a\u4e0d\u540c\u7684 vmstorage \u8282\u70b9\uff0c\u56e0\u6b64\u6700\u591a\u53ef\u4ee5\u4e22\u5931 2 \u4e2a vmstorage \u8282\u70b9\u800c\u4e0d\u4f1a\u4e22\u5931\u6570\u636e\u3002 vmstorage \u8282\u70b9\u7684\u6700\u5c0f\u6570\u91cf\u5e94\u8be5\u7b49\u4e8e 2*3-1 = 5 \uff0c\u56e0\u6b64\u5f53 2 \u4e2a vmstorage \u8282\u70b9\u4e22\u5931\u65f6\uff0c\u5269\u4f59\u7684 3 \u4e2a vmstorage \u8282\u70b9\u53ef\u4ee5\u4e3a\u65b0\u6444\u53d6\u7684\u6570\u636e\u63d0\u4f9b\u670d\u52a1\u3002 \u542f\u7528\u590d\u5236\u540e\uff0c\u5fc5\u987b\u5c06 -dedup.minScrapeInterval=1ms \u547d\u4ee4\u884c\u6807\u5fd7\u4f20\u9012\u7ed9 vmselect \u8282\u70b9\uff0c\u5f53\u591a\u8fbe N-1 \u4e2a vmstorage \u8282\u70b9\u54cd\u5e94\u7f13\u6162\u548c/\u6216\u6682\u65f6\u4e0d\u53ef\u7528\u65f6\uff0c\u53ef\u4ee5\u5c06\u53ef\u9009\u7684 -replicationFactor=N \u53c2\u6570\u4f20\u9012\u7ed9 vmselect \u4ee5\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\uff0c\u56e0\u4e3a vmselect \u4e0d\u7b49\u5f85\u6765\u81ea\u591a\u8fbe N-1 \u4e2a vmstorage \u8282\u70b9\u7684\u54cd\u5e94\u3002\u6709\u65f6\uff0cvmselect \u8282\u70b9\u4e0a\u7684 -replicationFactor \u53ef\u80fd\u4f1a\u5bfc\u81f4\u90e8\u5206\u54cd\u5e94\u3002 -dedup.minScrapeInterval=1ms \u5728\u67e5\u8be2\u671f\u95f4\u5bf9\u590d\u5236\u7684\u6570\u636e\u8fdb\u884c\u91cd\u590d\u6570\u636e\u5220\u9664\uff0c\u5982\u679c\u91cd\u590d\u6570\u636e\u4ece\u914d\u7f6e\u76f8\u540c\u7684 vmagent \u5b9e\u4f8b\u6216 Prometheus \u5b9e\u4f8b\u63a8\u9001\u5230 VictoriaMetrics\uff0c\u5219\u5fc5\u987b\u6839\u636e\u91cd\u590d\u6570\u636e\u5220\u9664\u6587\u6863\u5c06 -dedup.minScrapeInterval \u8bbe\u7f6e\u4e3a\u66f4\u5927\u7684\u503c\u3002 \u8bf7\u6ce8\u610f\uff0c\u590d\u5236\u4e0d\u4f1a\u4ece\u707e\u96be\u4e2d\u4fdd\u5b58\uff0c\u56e0\u6b64\u5efa\u8bae\u6267\u884c\u5b9a\u671f\u5907\u4efd\u3002\u53e6\u5916 \u590d\u5236\u4f1a\u589e\u52a0\u8d44\u6e90\u4f7f\u7528\u7387 - CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u7a7a\u95f4\u3001\u7f51\u7edc\u5e26\u5bbd - \u6700\u591a -replicationFactor \u500d\u3002\u6240\u4ee5\u53ef\u4ee5\u5c06\u590d\u5236\u8f6c\u79fb -storageDataPath \u6307\u5411\u7684\u5e95\u5c42\u5b58\u50a8\u6765\u505a\u4fdd\u8bc1\uff0c\u4f8b\u5982 Google Compute Engine \u6c38\u4e45\u78c1\u76d8\uff0c\u8be5\u78c1\u76d8\u53ef\u4ee5\u9632\u6b62\u6570\u636e\u4e22\u5931\u548c\u6570\u636e\u635f\u574f\uff0c\u5b83\u8fd8\u63d0\u4f9b\u59cb\u7ec8\u5982\u4e00\u7684\u9ad8\u6027\u80fd\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u4e0d\u505c\u673a\u7684\u60c5\u51b5\u4e0b\u8c03\u6574\u5927\u5c0f\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u4f8b\u6765\u8bf4\uff0c\u57fa\u4e8e HDD \u7684\u6c38\u4e45\u6027\u78c1\u76d8\u5e94\u8be5\u8db3\u591f\u4e86\u3002 2-5 \u5907\u4efd \u5efa\u8bae\u4ece\u5373\u65f6\u5feb\u7167\u6267\u884c\u5b9a\u671f\u5907\u4efd\uff0c\u4ee5\u9632\u6b62\u610f\u5916\u6570\u636e\u5220\u9664\u7b49\u9519\u8bef\u3002\u5fc5\u987b\u4e3a\u6bcf\u4e2a vmstorage \u8282\u70b9\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\u6765\u521b\u5efa\u5907\u4efd\uff1a \u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee /snapshot/create \u8fd9\u4e2a HTTP handler \u6765\u521b\u5efa\u5373\u65f6\u5feb\u7167\uff0c\u5b83\u5c06\u521b\u5efa\u5feb\u7167\u5e76\u8fd4\u56de\u5176\u540d\u79f0\u3002 \u4f7f\u7528 vmbackup \u7ec4\u4ef6\u4ece <-storageDataPath>/snapshots/<snapshot_name> \u6587\u4ef6\u5939\u5f52\u6863\u521b\u5efa\u7684\u5feb\u7167\u3002\u5f52\u6863\u8fc7\u7a0b\u4e0d\u4f1a\u5e72\u6270 vmstorage \u5de5\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u4efb\u4f55\u5408\u9002\u7684\u65f6\u95f4\u6267\u884c\u3002 \u901a\u8fc7 /snapshot/delete?snapshot=<snapshot_name> \u6216 /snapshot/delete_all \u5220\u9664\u672a\u4f7f\u7528\u7684\u5feb\u7167\uff0c\u4ee5\u91ca\u653e\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u3002 \u65e0\u9700\u5728\u6240\u6709 vmstorage \u8282\u70b9\u4e4b\u95f4\u540c\u6b65\u5907\u4efd\u3002 \u4ece\u5907\u4efd\u6062\u590d\uff1a \u4f7f\u7528 kill -INT \u505c\u6b62 vmstorage \u8282\u70b9\u3002 \u4f7f\u7528 vmrestore \u7ec4\u4ef6\u5c06\u5907\u4efd\u4e2d\u7684\u6570\u636e\u8fd8\u539f\u5230 -storageDataPath \u76ee\u5f55\u3002 \u542f\u52a8 vmstorage \u8282\u70b9\u3002 \u5728\u4e86\u89e3\u4e86 VM \u96c6\u7fa4\u7684\u4e00\u4e9b\u914d\u7f6e\u7ec6\u8282\u540e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5f00\u59cb\u90e8\u7f72 VM \u96c6\u7fa4\u3002 3 \u90e8\u7f72 \u5982\u679c\u4f60\u5df2\u7ecf\u5bf9 VM \u7ec4\u4ef6\u975e\u5e38\u4e86\u89e3\u4e86\uff0c\u90a3\u4e48\u63a8\u8350\u4f7f\u7528 Helm Chart \u7684\u65b9\u5f0f\u8fdb\u884c\u4e00\u952e\u5b89\u88c5\u3002 \u2638 \u279c helm repo add vm https://victoriametrics.github.io/helm-charts/ \u2638 \u279c helm repo update # \u5bfc\u51fa\u9ed8\u8ba4\u7684 values \u503c\u5230 values.yaml \u6587\u4ef6\u4e2d \u2638 \u279c helm show values vm/victoria-metrics-cluster > values.yaml # \u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4fee\u6539 values.yaml \u6587\u4ef6\u914d\u7f6e # \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u8fdb\u884c\u4e00\u952e\u5b89\u88c5 \u2638 \u279c helm install victoria-metrics vm/victoria-metrics-cluster -f values.yaml -n NAMESPACE # \u83b7\u53d6 vm \u8fd0\u884c\u7684 pods \u5217\u8868 \u2638 \u279c kubectl get pods -A | grep 'victoria-metrics' \u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u624b\u52a8\u65b9\u5f0f\u8fdb\u884c\u90e8\u7f72\uff0c\u4e4b\u6240\u4ee5\u9009\u62e9\u624b\u52a8\u90e8\u7f72\u7684\u65b9\u5f0f\u662f\u4e3a\u4e86\u80fd\u591f\u4e86\u89e3\u5404\u4e2a\u7ec4\u4ef6\u7684\u66f4\u591a\u7ec6\u8282\u3002 \u7531\u4e8e vmstorage \u7ec4\u4ef6\u662f\u65e0\u72b6\u6001\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u4f7f\u7528 StatefulSet \u8fdb\u884c\u90e8\u7f72\uff0c\u7531\u4e8e\u8be5\u7ec4\u4ef6\u4e5f\u662f\u53ef\u4ee5\u8fdb\u884c\u6269\u5c55\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u9996\u5148\u90e8\u7f72\u4e24\u4e2a\u526f\u672c\uff0c \u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # cluster-vmstorage.yaml apiVersion: v1 kind: Service metadata: name: cluster-vmstorage namespace: kube-vm labels: app: vmstorage spec: clusterIP: None ports: - port: 8482 targetPort: http name: http - port: 8401 targetPort: vmselect name: vmselect - port: 8400 targetPort: vminsert name: vminsert selector: app: vmstorage --- apiVersion: apps/v1 kind: StatefulSet metadata: name: vmstorage namespace: kube-vm labels: app: vmstorage spec: serviceName: cluster-vmstorage selector: matchLabels: app: vmstorage replicas: 2 podManagementPolicy: OrderedReady template: metadata: labels: app: vmstorage spec: containers: - name: vmstorage image: \"victoriametrics/vmstorage:v1.77.0-cluster\" imagePullPolicy: \"IfNotPresent\" args: - \"--retentionPeriod=1\" - \"--storageDataPath=/storage\" - --envflag.enable=true - --envflag.prefix=VM_ - --loggerFormat=json ports: - name: http containerPort: 8482 - name: vminsert containerPort: 8400 - name: vmselect containerPort: 8401 livenessProbe: failureThreshold: 10 initialDelaySeconds: 30 periodSeconds: 30 tcpSocket: port: http timeoutSeconds: 5 readinessProbe: failureThreshold: 3 initialDelaySeconds: 5 periodSeconds: 15 timeoutSeconds: 5 httpGet: path: /health port: http volumeMounts: - name: storage mountPath: /storage volumeClaimTemplates: - metadata: name: storage spec: storageClassName: hostpath accessModes: - ReadWriteOnce resources: requests: storage: \"1Gi\" ``` \u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a Headless \u7684 Service\uff0c\u56e0\u4e3a\u540e\u9762\u7684\u7ec4\u4ef6\u9700\u8981\u8bbf\u95ee\u5230\u6bcf\u4e00\u4e2a\u5177\u4f53\u7684 Pod\uff0c\u5728 vmstorage \u542f\u52a8\u53c2\u6570\u4e2d\u901a\u8fc7 `--retentionPeriod` \u53c2\u6570\u6307\u5b9a\u6307\u6807\u6570\u636e\u4fdd\u7559\u65f6\u957f\uff0c1 \u8868\u793a\u4e00\u4e2a\u6708\uff0c\u8fd9\u4e5f\u662f\u9ed8\u8ba4\u7684\u65f6\u957f\uff0c\u7136\u540e\u901a\u8fc7 `--storageDataPath` \u53c2\u6570\u6307\u5b9a\u4e86\u6570\u636e\u5b58\u50a8\u8def\u5f84\uff0c\u8bb0\u5f97\u8981\u5c06\u8be5\u76ee\u5f55\u8fdb\u884c\u6301\u4e45\u5316\u3002 ``` $ kubectl apply -f cluster-vmstorage.yaml service/cluster-vmstorage created statefulset.apps/vmstorage created $ kubectl get pod -n kube-vm NAME READY STATUS RESTARTS AGE vmstorage-0 1/1 Running 0 31s \u540c\u6837\u76f4\u63a5\u5e94\u7528\u8be5\u8d44\u6e90\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/cluster-vmstorage.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=vmstorage NAME READY STATUS RESTARTS AGE vmstorage-0 1/1 Running 0 5m40s vmstorage-1 1/1 Running 0 3m31s \u2638 \u279c kubectl get svc -n kube-vm -l app=vmstorage NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE cluster-vmstorage ClusterIP None <none> 8482/TCP,8401/TCP,8400/TCP 5m46s \u63a5\u7740\u53ef\u4ee5\u90e8\u7f72 vmselect \u7ec4\u4ef6\uff0c\u7531\u4e8e\u8be5\u7ec4\u4ef6\u662f\u65e0\u72b6\u6001\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 Deployment \u6765\u8fdb\u884c\u7ba1\u7406\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # cluster-vmselect.yaml apiVersion: v1 kind: Service metadata: name: vmselect namespace: kube-vm labels: app: vmselect spec: ports: - name: http port: 8481 targetPort: http selector: app: vmselect --- apiVersion: apps/v1 kind: Deployment metadata: name: vmselect namespace: kube-vm labels: app: vmselect spec: selector: matchLabels: app: vmselect template: metadata: labels: app: vmselect spec: containers: - name: vmselect image: \"victoriametrics/vmselect:v1.77.0-cluster\" imagePullPolicy: \"IfNotPresent\" args: - \"--cacheDataPath=/cache\" - --storageNode=vmstorage-0.cluster-vmstorage.kube-vm.svc.cluster.local:8401 - --storageNode=vmstorage-1.cluster-vmstorage.kube-vm.svc.cluster.local:8401 - --envflag.enable=true - --envflag.prefix=VM_ - --loggerFormat=json ports: - name: http containerPort: 8481 readinessProbe: httpGet: path: /health port: http initialDelaySeconds: 5 periodSeconds: 15 timeoutSeconds: 5 failureThreshold: 3 livenessProbe: tcpSocket: port: http initialDelaySeconds: 5 periodSeconds: 15 timeoutSeconds: 5 failureThreshold: 3 volumeMounts: - mountPath: /cache name: cache-volume volumes: - name: cache-volume emptyDir: {} $ kubectl apply -f cluster-vmselect.yaml service/vmselect created deployment.apps/vmselect created $ kubectl get pod -n kube-vm NAME READY STATUS RESTARTS AGE vmselect-bcb54965f-sfrcw 1/1 Running 0 39s vmstorage-0 1/1 Running 0 4m11s \u5176\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\u662f\u901a\u8fc7 --storageNode \u53c2\u6570\u6307\u5b9a\u6240\u6709\u7684 vmstorage \u8282\u70b9\u5730\u5740\uff0c\u4e0a\u9762\u6211\u4eec\u4f7f\u7528\u7684 StatefulSet \u90e8\u7f72\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 FQDN \u7684\u5f62\u5f0f\u8fdb\u884c\u8bbf\u95ee\u3002\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u5bf9\u8c61\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/cluster-vmselect.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=vmselect NAME READY STATUS RESTARTS AGE vmselect-bcb54965f-5rkml 1/1 Running 0 2m4s \u2638 \u279c kubectl get svc -n kube-vm -l app=vmselect NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE vmselect ClusterIP 10.107.227.214 <none> 8481/TCP 2m17s \u5982\u679c\u8981\u8fdb\u884c\u67e5\u8be2\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5916\u66b4\u9732 vmselect \u8fd9\u4e2a Service \u670d\u52a1\u5373\u53ef\uff0c\u4fee\u6539 Grafana \u6570\u636e\u6e90\u5730\u5740\u4e3a http://<select-service>/select/0/prometheus/ \u3002 vm-grafana.yaml # vm-grafana.yaml apiVersion: apps/v1 kind: Deployment metadata: name: grafana namespace: kube-vm spec: selector: matchLabels: app: grafana template: metadata: labels: app: grafana spec: volumes: - name: storage persistentVolumeClaim: claimName: grafana-data containers: - name: grafana image: grafana/grafana:main imagePullPolicy: IfNotPresent ports: - containerPort: 3000 name: grafana securityContext: runAsUser: 0 env: - name: GF_SECURITY_ADMIN_USER value: admin - name: GF_SECURITY_ADMIN_PASSWORD value: admin321 volumeMounts: - mountPath: /var/lib/grafana name: storage --- apiVersion: v1 kind: Service metadata: name: grafana namespace: kube-vm spec: type: NodePort ports: - port: 3000 selector: app: grafana # --- # apiVersion: v1 # kind: PersistentVolume # metadata: # name: grafana-data # spec: # accessModes: # - ReadWriteOnce # capacity: # storage: 500Mi # storageClassName: hostpath # local: # path: /data/k8s/grafana # persistentVolumeReclaimPolicy: Retain --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: grafana-data namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 500Mi storageClassName: hostpath \u5982\u679c\u8981\u8fdb\u884c\u67e5\u8be2\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5916\u66b4\u9732 vmselect \u8fd9\u4e2a Service \u670d\u52a1\u5373\u53ef\uff0c\u4fee\u6539 Grafana \u6570\u636e\u6e90\u5730\u5740\u4e3a http://<select-service>/select/0/prometheus/ \u3002 http://vmselect:8481/select/0/prometheus/ \u63a5\u7740\u5c31\u9700\u8981\u90e8\u7f72\u7528\u6765\u63a5\u6536\u6307\u6807\u6570\u636e\u63d2\u5165\u7684 vminsert \u7ec4\u4ef6\uff0c\u540c\u6837\u8be5\u7ec4\u4ef6\u662f\u65e0\u72b6\u6001\u7684\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u4e5f\u662f\u9700\u8981\u901a\u8fc7 --storageNode \u53c2\u6570\u6307\u5b9a\u6240\u6709\u7684 vmstorage \u8282\u70b9\uff1a # cluster-vminsert.yaml apiVersion: v1 kind: Service metadata: name: vminsert namespace: kube-vm labels: app: vminsert spec: ports: - name: http port: 8480 targetPort: http selector: app: vminsert --- apiVersion: apps/v1 kind: Deployment metadata: name: vminsert namespace: kube-vm labels: app: vminsert spec: selector: matchLabels: app: vminsert template: metadata: labels: app: vminsert spec: containers: - name: vminsert image: \"victoriametrics/vminsert:v1.77.0-cluster\" imagePullPolicy: \"IfNotPresent\" args: # - -replicationFactor=2 # \u53ef\u4ee5\u5f00\u542f\u6570\u636e\u526f\u672c - --storageNode=vmstorage-0.cluster-vmstorage.kube-vm.svc.cluster.local:8400 - --storageNode=vmstorage-1.cluster-vmstorage.kube-vm.svc.cluster.local:8400 - --envflag.enable=true - --envflag.prefix=VM_ - --loggerFormat=json ports: - name: http containerPort: 8480 readinessProbe: httpGet: path: /health port: http initialDelaySeconds: 5 periodSeconds: 15 timeoutSeconds: 5 failureThreshold: 3 livenessProbe: tcpSocket: port: http initialDelaySeconds: 5 periodSeconds: 15 timeoutSeconds: 5 failureThreshold: 3 \u7531\u4e8e\u672c\u8eab\u662f\u65e0\u72b6\u6001\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u6839\u636e\u9700\u8981\u589e\u52a0\u526f\u672c\u6570\u91cf\uff0c\u4e5f\u53ef\u4ee5\u914d\u7f6e HPA \u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\uff1a $ kubectl apply -f cluster-vminsert.yaml service/vminsert created deployment.apps/vminsert created \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/cluster-vminsert.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=vminsert NAME READY STATUS RESTARTS AGE vminsert-66c88cd497-l64ps 1/1 Running 0 2m27s \u2638 \u279c kubectl get svc -n kube-vm -l app=vminsert NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE vminsert ClusterIP 10.96.125.134 <none> 8480/TCP 70s $ ifconfig | grep 192.168 inet 192.168.1.6 netmask 0xffffff00 broadcast 192.168.1.255 \u96c6\u7fa4\u6a21\u5f0f\u7684\u76f8\u5173\u7ec4\u4ef6\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u5148\u53bb\u914d\u7f6e\u524d\u9762\u7684 Prometheus\uff0c\u5c06\u5176\u6570\u636e\u8fdc\u7a0b\u5199\u5165\u5230 VM \u4e2d\u6765\uff0c\u4fee\u6539 remote_write \u7684\u5730\u5740\u4e3a http://vminsert:8480/insert/0/prometheus/ \uff0c\u6ce8\u610f\u548c\u5355\u8282\u70b9\u6a21\u5f0f\u7684 API \u8def\u5f84\u4e0d\u4e00\u6837\uff0c\u5982\u4e0b\u6240\u793a\uff1a # vm-prom-config3.yaml apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-vm data: prometheus.yaml: | global: scrape_interval: 15s scrape_timeout: 15s remote_write: # \u5199\u5165\u5230\u8fdc\u7a0b VM \u5b58\u50a8\uff0curl \u662f\u8fdc\u7a0b\u5199\u5165\u63a5\u53e3\u5730\u5740 - url: http://vminsert:8480/insert/0/prometheus/ # queue_config: # \u5982\u679c Prometheus \u6293\u53d6\u6307\u6807\u5f88\u5927\uff0c\u53ef\u4ee5\u52a0\u8c03\u6574 queue\uff0c\u4f46\u662f\u4f1a\u63d0\u9ad8\u5185\u5b58\u5360\u7528 # max_samples_per_send: 10000 # \u6bcf\u6b21\u53d1\u9001\u7684\u6700\u5927\u6837\u672c\u6570 # capacity: 20000 # max_shards: 30 # \u6700\u5927\u5206\u7247\u6570\uff0c\u5373\u5e76\u53d1\u91cf\u3002 scrape_configs: - job_name: \"nodes\" static_configs: # - targets: ['192.168.0.109:9111', '192.168.0.110:9111', '192.168.0.111:9111'] - targets: ['192.168.1.6:9100'] relabel_configs: # \u901a\u8fc7 relabeling \u4ece __address__ \u4e2d\u63d0\u53d6 IP \u4fe1\u606f\uff0c\u4e3a\u4e86\u540e\u9762\u9a8c\u8bc1 VM \u662f\u5426\u517c\u5bb9 relabeling - source_labels: [__address__] regex: \"(.*):(.*)\" replacement: \"${1}\" target_label: 'ip' action: replace $ kubectl get pod -n kube-vm NAME READY STATUS RESTARTS AGE grafana-bbd99dc7-gv59q 1/1 Running 0 11m vminsert-66c88cd497-9k6fx 1/1 Running 0 88s vmselect-bcb54965f-sfrcw 1/1 Running 0 22m vmstorage-0 1/1 Running 0 26m $ kubectl apply -f vm-prom-config3.yaml configmap/prometheus-config created \u66f4\u65b0 Prometheus \u914d\u7f6e\uff0c\u7136\u540e\u542f\u52a8 Prometheus\uff0c\u524d\u9762\u7684\u5355\u673a\u6a21\u5f0f\u7684 VM \u53ef\u4ee5\u5148\u505c\u6389\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/vm-prom-config3.yaml \u2638 \u279c kubectl scale deploy victoria-metrics --replicas=0 -n kube-vm \u2638 \u279c kubectl scale deploy prometheus --replicas=1 -n kube-vm # vm-prom-deploy.yaml apiVersion: apps/v1 kind: Deployment metadata: name: prometheus namespace: kube-vm spec: selector: matchLabels: app: prometheus template: metadata: labels: app: prometheus spec: volumes: - name: data persistentVolumeClaim: claimName: prometheus-data - name: config-volume configMap: name: prometheus-config containers: - image: prom/prometheus:v2.35.0 name: prometheus args: - \"--config.file=/etc/prometheus/prometheus.yaml\" - \"--storage.tsdb.path=/prometheus\" # \u6307\u5b9atsdb\u6570\u636e\u8def\u5f84 - \"--storage.tsdb.retention.time=2d\" - \"--web.enable-lifecycle\" # \u652f\u6301\u70ed\u66f4\u65b0\uff0c\u76f4\u63a5\u6267\u884clocalhost:9090/-/reload\u7acb\u5373\u751f\u6548 ports: - containerPort: 9090 name: http securityContext: runAsUser: 0 volumeMounts: - mountPath: \"/etc/prometheus\" name: config-volume - mountPath: \"/prometheus\" name: data --- apiVersion: v1 kind: Service metadata: name: prometheus namespace: kube-vm spec: selector: app: prometheus type: NodePort ports: - name: web port: 9090 targetPort: http --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: prometheus-data namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 500Mi storageClassName: hostpath \u914d\u7f6e\u6210\u529f\u540e\u6b63\u5e38\u6570\u636e\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u5165\u5230 vmstorage \u4e86\uff0c\u67e5\u770b vmstorage \u65e5\u5fd7\u53ef\u4ee5\u770b\u5230\u6210\u529f\u521b\u5efa\u4e86 partition\uff0c\u8bc1\u660e\u73b0\u5728\u5df2\u7ecf\u5728\u5f00\u59cb\u63a5\u6536\u6570\u636e\u4e86\uff1a \u2638 \u279c kubectl logs -f vmstorage-0 -n kube-vm ...... {\"ts\":\"2022-05-06T08:35:15.786Z\",\"level\":\"info\",\"caller\":\"VictoriaMetrics/lib/storage/partition.go:206\",\"msg\":\"creating a partition \\\"2022_05\\\" with smallPartsPath=\\\"/storage/data/small/2022_05\\\", bigPartsPath=\\\"/storage/data/big/2022_05\\\"\"} {\"ts\":\"2022-05-06T08:35:15.802Z\",\"level\":\"info\",\"caller\":\"VictoriaMetrics/lib/storage/partition.go:222\",\"msg\":\"partition \\\"2022_05\\\" has been created\"} \u7136\u540e\u5bfc\u5165 16098 \u8fd9\u4e2a Dashboard\uff0c\u5bfc\u5165\u540e\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u7136\u540e\u53ef\u4ee5\u53bb Grafana \u91cd\u65b0\u67e5\u770b Dashboard \u662f\u5426\u6b63\u5e38\uff1a \u5982\u679c\u73b0\u5728\u9700\u8981\u65b0\u589e vmstorage \u8282\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u6309\u7167\u4e0b\u9762\u7684\u6b65\u9aa4\u8fdb\u884c\u64cd\u4f5c\uff1a \u4f7f\u7528\u4e0e\u96c6\u7fa4\u4e2d\u73b0\u6709\u8282\u70b9\u76f8\u540c\u7684 -retentionPeriod \u914d\u7f6e\u542f\u52a8\u65b0\u7684 vmstorage \u8282\u70b9\u3002 \u9010\u6b65\u91cd\u65b0\u542f\u52a8\u6240\u6709\u7684 vmselect \u8282\u70b9\uff0c\u6dfb\u52a0\u65b0\u7684 -storageNode \u53c2\u6570\u5305\u542b <new_vmstorage_host> \u3002 \u9010\u6b65\u91cd\u65b0\u542f\u52a8\u6240\u6709\u7684 vminsert \u8282\u70b9\uff0c\u6dfb\u52a0\u65b0\u7684 -storageNode \u53c2\u6570\u5305\u542b <new_vmstorage_host> \u3002","title":"\u7b2c\u4e09\u8282 VictorialMetrics \u96c6\u7fa4\u6a21\u5f0f\u7684\u4f7f\u7528"},{"location":"chap12/69vm_cluster/#victorialmetrics","text":"\u5355\u8282\u70b9\u7248\u672c\u53ef\u6839\u636e CPU \u5185\u6838\u3001RAM \u548c\u53ef\u7528\u5b58\u50a8\u7a7a\u95f4\u7684\u6570\u91cf\u8fdb\u884c\u6269\u5c55\u3002\u5355\u8282\u70b9\u7248\u672c\u6bd4\u96c6\u7fa4\u7248\u672c\u66f4\u5bb9\u6613\u914d\u7f6e\u548c\u64cd\u4f5c\uff0c\u6240\u4ee5\u5728\u4f7f\u7528\u96c6\u7fa4\u7248\u672c\u4e4b\u524d\u8981\u4e09\u601d\u800c\u540e\u884c\u3002\u4e0a\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 VM \u7684\u5355\u8282\u70b9\u7248\u672c\u7684\u57fa\u672c\u4f7f\u7528\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u4ecb\u7ecd\u4e0b\u5982\u4f55\u4f7f\u7528\u96c6\u7fa4\u7248\u3002 \u96c6\u7fa4\u7248\u4e3b\u8981\u7279\u70b9\uff1a \u652f\u6301\u5355\u8282\u70b9\u7248\u672c\u7684\u6240\u6709\u529f\u80fd\u3002 \u6027\u80fd\u548c\u5bb9\u91cf\u6c34\u5e73\u6269\u5c55\u3002 \u652f\u6301\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u591a\u4e2a\u72ec\u7acb\u547d\u540d\u7a7a\u95f4\uff08\u591a\u79df\u6237\uff09\u3002 \u652f\u6301\u591a\u526f\u672c\u3002","title":"\u7b2c\u4e09\u8282 VictorialMetrics \u96c6\u7fa4\u6a21\u5f0f\u7684\u4f7f\u7528"},{"location":"chap12/69vm_cluster/#1-node-exporter","text":"--- apiVersion: apps/v1 kind: DaemonSet metadata: name: node-exporter namespace: kube-vm labels: k8s-app: node-exporter spec: selector: matchLabels: k8s-app: node-exporter template: metadata: labels: k8s-app: node-exporter spec: containers: - image: prom/node-exporter name: node-exporter ports: - containerPort: 9100 protocol: TCP name: http --- apiVersion: v1 kind: Service metadata: labels: k8s-app: node-exporter name: node-exporter namespace: kube-vm spec: ports: - name: http port: 9100 targetPort: 9100 protocol: TCP selector: k8s-app: node-exporter $ kubectl apply -f cluster-prom-nodexpo.yaml daemonset.apps/node-exporter created service/node-exporter created","title":"1 Node-Exporter"},{"location":"chap12/69vm_cluster/#2","text":"\u524d\u9762\u6211\u4eec\u4e86\u89e3\u4e86 VM \u7684\u57fa\u672c\u67b6\u6784\uff0c\u5bf9\u4e8e\u96c6\u7fa4\u6a21\u5f0f\u4e0b\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u670d\u52a1\uff1a vmstorage\uff1a\u5b58\u50a8\u539f\u59cb\u6570\u636e\u5e76\u8fd4\u56de\u6307\u5b9a\u6807\u7b7e\u8fc7\u6ee4\u5668\u5728\u7ed9\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u67e5\u8be2\u6570\u636e\uff0c\u5f53 -storageDataPath \u6307\u5411\u7684\u76ee\u5f55\u5305\u542b\u7684\u53ef\u7528\u7a7a\u95f4\u5c11\u4e8e -storage.minFreeDiskSpaceBytes \u65f6\uff0c vmstorage \u8282\u70b9\u4f1a\u81ea\u52a8\u5207\u6362\u5230\u53ea\u8bfb\u6a21\u5f0f\uff0c vminsert \u8282\u70b9\u4e5f\u4f1a\u505c\u6b62\u5411\u6b64\u7c7b\u8282\u70b9\u53d1\u9001\u6570\u636e\u5e76\u5f00\u59cb\u5c06\u6570\u636e\u91cd\u65b0\u8def\u7531\u5230\u5269\u4f59\u7684 vmstorage \u8282\u70b9\u3002 vminsert \uff1a\u63a5\u53d7\u6444\u53d6\u7684\u6570\u636e\u5e76\u6839\u636e\u6307\u6807\u540d\u79f0\u53ca\u5176\u6240\u6709\u6807\u7b7e\u7684\u4e00\u81f4\u6027\u54c8\u5e0c\u5c06\u5176\u5206\u6563\u5b58\u50a8\u5230 vmstorage \u8282\u70b9\u3002 vmselect\uff1a\u901a\u8fc7\u4ece\u6240\u6709\u914d\u7f6e\u7684 vmstorage \u8282\u70b9\u83b7\u53d6\u6240\u9700\u6570\u636e\u6765\u6267\u884c\u67e5\u8be2 \u3002 \u6bcf\u4e2a\u670d\u52a1\u90fd\u53ef\u4ee5\u8fdb\u884c\u72ec\u7acb\u6269\u5c55\uff0cvmstorage \u8282\u70b9\u4e4b\u95f4\u4e92\u4e0d\u4e86\u89e3\u3001\u4e92\u4e0d\u901a\u4fe1\uff0c\u5e76\u4e14\u4e0d\u5171\u4eab\u4efb\u4f55\u6570\u636e\u3002\u8fd9\u6837\u53ef\u4ee5\u589e\u52a0\u96c6\u7fa4\u7684\u53ef\u7528\u6027\uff0c\u5e76\u4e14\u7b80\u5316\u4e86\u96c6\u7fa4\u7684\u7ef4\u62a4\u548c\u6269\u5c55\u3002\u6700\u5c0f\u7684\u96c6\u7fa4\u5fc5\u987b\u5305\u542b\u4ee5\u4e0b\u8282\u70b9\uff1a \u5e26\u6709 -retentionPeriod \u548c -storageDataPath \u53c2\u6570\u7684\u5355 vmstorage \u8282\u70b9 \u5e26\u6709 -storageNode=<vmstorage_host> \u7684\u5355 vminsert \u8282\u70b9 \u5e26\u6709 -storageNode=<vmstorage_host> \u7684\u5355 vmselect \u8282\u70b9 \u4f46\u662f\u6211\u4eec\u5efa\u8bae\u4e3a\u6bcf\u4e2a\u670d\u52a1\u7ec4\u4ef6\u8fd0\u884c\u81f3\u5c11\u4e24\u4e2a\u8282\u70b9\u4ee5\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\uff0c\u8fd9\u6837\u5f53\u5355\u4e2a\u8282\u70b9\u6682\u65f6\u4e0d\u53ef\u7528\u65f6\uff0c\u96c6\u7fa4\u4f1a\u7ee7\u7eed\u5de5\u4f5c\uff0c\u800c\u4e14\u5176\u4f59\u8282\u70b9\u8fd8\u53ef\u4ee5\u5904\u7406\u589e\u52a0\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002 \u5982\u679c\u4f60\u7684\u96c6\u7fa4\u89c4\u6a21\u8f83\u5927\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a\u5c0f\u578b\u7684 vmstorage \u8282\u70b9\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u5728\u67d0\u4e9b vmstorage \u8282\u70b9\u6682\u65f6\u4e0d\u53ef\u7528\u65f6\u51cf\u5c11\u5269\u4f59 vmstorage \u8282\u70b9\u4e0a\u7684\u5de5\u4f5c\u8d1f\u8f7d\u589e\u52a0\u3002 \u5404\u4e2a\u670d\u52a1\u9664\u4e86\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u6807\u5fd7\u8fdb\u884c\u914d\u7f6e\u4e4b\u5916\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a -envflag.enable \u6807\u5fd7\u5fc5\u987b\u8bbe\u7f6e \u6bcf\u4e2a\u6807\u5fd7\u4e2d\u7684 . \u5fc5\u987b\u66ff\u6362\u4e3a _ \uff0c\u4f8b\u5982 -insert.maxQueueDuration <duration> \u53ef\u4ee5\u8f6c\u6362\u4e3a insert_maxQueueDuration=<duration> \u5bf9\u4e8e\u91cd\u590d\u7684\u6807\u5fd7\uff0c\u53ef\u4ee5\u4f7f\u7528\u53e6\u4e00\u79cd\u8bed\u6cd5\uff0c\u901a\u8fc7\u4f7f\u7528 , \u4f5c\u4e3a\u5206\u9694\u7b26\u5c06\u4e0d\u540c\u7684\u503c\u8fde\u63a5\u6210\u4e00\u4e2a\uff0c\u4f8b\u5982 -storageNode <nodeA> -storageNode <nodeB> \u5c06\u8f6c\u6362\u4e3a -storageNode=<nodeA>,<nodeB> \u53ef\u4ee5\u4f7f\u7528 -envflag.prefix \u4e3a\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u524d\u7f00\uff0c\u4f8b\u5982\u8bbe\u7f6e\u4e86 -envflag.prefix=VM* \uff0c\u5219\u73af\u5883\u53d8\u91cf\u53c2\u6570\u5fc5\u987b\u4ee5 VM* \u5f00\u5934","title":"2 \u7ec4\u4ef6"},{"location":"chap12/69vm_cluster/#2-1","text":"VM \u96c6\u7fa4\u4e5f\u652f\u6301\u591a\u4e2a\u72ec\u7acb\u7684\u79df\u6237\uff08\u4e5f\u53eb\u547d\u540d\u7a7a\u95f4\uff09\uff0c\u79df\u6237\u7531 accountID \u6216 accountID:projectID \u6765\u6807\u8bc6\uff0c\u5b83\u4eec\u88ab\u653e\u5728\u8bf7\u6c42\u7684 urls \u4e2d \u3002 \u6bcf\u4e2a accountID \u548c projectID \u90fd\u7531\u4e00\u4e2a [0 .. 2^32] \u8303\u56f4\u5185\u7684\u4efb\u610f 32 \u4f4d\u6574\u6570\u6807\u8bc6\uff0c\u5982\u679c\u7f3a\u5c11 projectID\uff0c\u5219\u81ea\u52a8\u5c06\u5176\u5206\u914d\u4e3a 0\u3002\u6709\u5173\u79df\u6237\u7684\u5176\u4ed6\u4fe1\u606f\uff0c\u4f8b\u5982\u8eab\u4efd\u9a8c\u8bc1\u4ee4\u724c\u3001\u79df\u6237\u540d\u79f0\u3001\u9650\u989d\u3001\u8ba1\u8d39\u7b49\uff0c\u5c06\u5b58\u50a8\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u3002\u6b64\u6570\u636e\u5e93\u5fc5\u987b\u7531\u4f4d\u4e8e VictoriaMetrics \u96c6\u7fa4\u524d\u9762\u7684\u5355\u72ec\u670d\u52a1\u7ba1\u7406\uff0c\u4f8b\u5982 vmauth \u6216 vmgateway \u3002 \u5f53\u7b2c\u4e00\u4e2a\u6570\u636e\u70b9\u5199\u5165\u6307\u5b9a\u79df\u6237\u65f6\uff0c\u79df\u6237\u88ab\u81ea\u52a8\u521b\u5efa\u3002 \u6240 \u6709\u79df\u6237\u7684\u6570\u636e\u5747\u5300\u5206\u5e03\u5728\u53ef\u7528\u7684 vmstorage \u8282\u70b9\u4e2d\uff0c\u5f53\u4e0d\u540c\u79df\u6237\u6709\u4e0d\u540c\u7684\u6570\u636e\u91cf\u548c\u4e0d\u540c\u7684\u67e5\u8be2\u8d1f\u8f7d\u65f6\uff0c\u8fd9\u4fdd\u8bc1\u4e86 vmstorage \u8282\u70b9\u4e4b\u95f4\u7684\u5747\u5300\u8d1f\u8f7d \u3002 \u6570\u636e\u5e93\u6027\u80fd\u548c\u8d44\u6e90\u4f7f\u7528\u4e0d\u4f9d\u8d56\u4e8e\u79df\u6237\u7684\u6570\u91cf\uff0c\u5b83\u4e3b\u8981\u53d6\u51b3\u4e8e\u6240\u6709\u79df\u6237\u4e2d\u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u7684\u603b\u6570\u3002\u5982\u679c\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u5728\u8fc7\u53bb\u4e00\u5c0f\u65f6\u5185\u81f3\u5c11\u6536\u5230\u4e00\u4e2a\u6837\u672c\uff0c\u6216\u8005\u5728\u8fc7\u53bb\u4e00\u5c0f\u65f6\u5185\u88ab\u67e5\u8be2\uff0c\u5219\u8ba4\u4e3a\u65f6\u95f4\u5e8f\u5217\u662f\u6d3b\u8dc3\u7684\u3002 VictoriaMetrics \u4e0d\u652f\u6301\u5728\u5355\u4e2a\u8bf7\u6c42\u4e2d\u67e5\u8be2\u591a\u4e2a\u79df\u6237 \u3002","title":"2-1 \u591a\u79df\u6237"},{"location":"chap12/69vm_cluster/#2-2","text":"VM \u96c6\u7fa4\u7684\u6027\u80fd\u548c\u5bb9\u91cf\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u6269\u5c55\uff1a \u901a\u8fc7\u5411\u96c6\u7fa4\u4e2d\u7684\u73b0\u6709\u8282\u70b9\u6dfb\u52a0\u66f4\u591a\u8d44\u6e90\uff08CPU\u3001RAM\u3001\u78c1\u76d8 IO\u3001\u78c1\u76d8\u7a7a\u95f4\u3001\u7f51\u7edc\u5e26\u5bbd\uff09\uff0c\u4e5f\u53eb\u5782\u76f4\u53ef\u6269\u5c55\u6027\u3002 \u901a\u8fc7\u5411\u96c6\u7fa4\u6dfb\u52a0\u66f4\u591a\u8282\u70b9\uff0c\u53c8\u53eb\u6c34\u5e73\u6269\u5c55\u6027\u3002 \u5bf9\u4e8e\u96c6\u7fa4\u6269\u5c55\u6709\u4e00\u4e9b\u901a\u7528\u7684\u5efa\u8bae\uff1a \u5411\u73b0\u6709 vmselect \u8282\u70b9\u6dfb\u52a0 \u66f4\u591a CPU \u548c\u5185\u5b58 \uff0c\u53ef\u4ee5\u63d0\u9ad8\u590d\u6742\u67e5\u8be2\u7684\u6027\u80fd\uff0c\u8fd9\u4e9b\u67e5\u8be2\u53ef\u4ee5\u5904\u7406\u5927\u91cf\u7684\u65f6\u95f4\u5e8f\u5217\u548c\u5927\u91cf\u7684\u539f\u59cb\u6837\u672c\u3002 \u6dfb\u52a0\u66f4\u591a vmstorage \u8282\u70b9\u53ef\u4ee5\u589e\u52a0\u96c6\u7fa4\u53ef\u4ee5\u5904\u7406\u7684\u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u91cf \uff0c\u8fd9\u4e5f\u63d0\u9ad8\u4e86\u5bf9\u9ad8\u6d41\u5931\u7387(churn rate)\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u67e5\u8be2\u6027\u80fd\u3002\u96c6\u7fa4\u7a33\u5b9a\u6027\u4e5f\u4f1a\u968f\u7740 vmstorage \u8282\u70b9\u6570\u91cf\u7684\u589e\u52a0\u800c\u63d0\u9ad8\uff0c\u5f53\u4e00\u4e9b vmstorage \u8282\u70b9\u4e0d\u53ef\u7528\u65f6\uff0c\u6d3b\u8dc3\u7684 vmstorage \u8282\u70b9\u9700\u8981\u5904\u7406\u8f83\u4f4e\u7684\u989d\u5916\u5de5\u4f5c\u8d1f\u8f7d\u3002 \u5411\u73b0\u6709 vmstorage \u8282\u70b9\u6dfb\u52a0\u66f4\u591a CPU \u548c\u5185\u5b58\uff0c\u53ef\u4ee5\u589e\u52a0\u96c6\u7fa4\u53ef\u4ee5\u5904\u7406\u7684\u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u91cf \u3002\u4e0e\u5411\u73b0\u6709 vmstorage \u8282\u70b9\u6dfb\u52a0\u66f4\u591a CPU \u548c\u5185\u5b58\u76f8\u6bd4\uff0c\u6700\u597d\u6dfb\u52a0\u66f4\u591a vmstorage \u8282\u70b9\uff0c\u56e0\u4e3a\u66f4\u591a\u7684 vmstorage \u8282\u70b9\u53ef\u4ee5\u63d0\u9ad8\u96c6\u7fa4\u7a33\u5b9a\u6027\uff0c\u5e76\u63d0\u9ad8\u5bf9\u9ad8\u6d41\u5931\u7387\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u67e5\u8be2\u6027\u80fd\u3002 \u6dfb\u52a0\u66f4\u591a\u7684 vminsert \u8282\u70b9\u4f1a\u63d0\u9ad8\u6570\u636e\u6444\u53d6\u7684\u6700\u5927\u901f\u5ea6\uff0c\u56e0\u4e3a\u6444\u53d6\u7684\u6570\u636e\u53ef\u4ee5\u5728\u66f4\u591a\u7684 vminsert \u8282\u70b9\u4e4b\u95f4\u8fdb\u884c\u62c6\u5206 \u3002","title":"2-2 \u96c6\u7fa4\u6269\u5c55"},{"location":"chap12/69vm_cluster/#_1","text":"HTTP \u8d1f\u8f7d\u5747\u8861\u5668\u9700\u8981\u505c\u6b62\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u4e0d\u53ef\u7528\u7684 vminsert \u548c vmselect \u8282\u70b9 \u3002 \u5982\u679c\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a vmstorage \u8282\u70b9\uff0c\u5219\u96c6\u7fa4\u4ecd\u7136\u53ef\u7528\uff1a vminsert \u5c06\u4f20\u5165\u6570\u636e\u4ece\u4e0d\u53ef\u7528\u7684 vmstorage \u8282\u70b9\u91cd\u65b0\u8def\u7531\u5230\u5065\u5eb7\u7684 vmstorage \u8282\u70b9 \u5982\u679c\u81f3\u5c11\u6709\u4e00\u4e2a vmstorage \u8282\u70b9\u53ef\u7528\uff0c\u5219 vmselect \u4f1a\u7ee7\u7eed\u63d0\u4f9b\u90e8\u5206\u54cd\u5e94 \u3002\u5982\u679c\u4f18\u5148\u8003\u8651\u53ef\u7528\u6027\u7684\u4e00\u81f4\u6027\uff0c\u5219\u5c06 -search.denyPartialResponse \u6807\u5fd7\u4f20\u9012\u7ed9 vmselect \u6216\u5c06\u8bf7\u6c42\u4e2d\u7684 deny_partial_response=1 \u67e5\u8be2\u53c2\u6570\u4f20\u9012\u7ed9 vmselect\u3002","title":"\u96c6\u7fa4\u53ef\u7528\u6027"},{"location":"chap12/69vm_cluster/#2-3","text":"\u5982\u679c -dedup.minScrapeInterval \u547d\u4ee4\u884c\u6807\u5fd7\u8bbe\u7f6e\u4e3a\u5927\u4e8e 0 \u7684\u65f6\u95f4\uff0c VictoriaMetrics \u4f1a\u53bb\u9664\u91cd\u590d\u6570\u636e\u70b9\u3002\u4f8b\u5982\uff0c -dedup.minScrapeInterval=60s \u5c06\u5bf9\u540c\u4e00\u65f6\u95f4\u5e8f\u5217\u4e0a\u7684\u6570\u636e\u70b9\u8fdb\u884c\u91cd\u590d\u6570\u636e\u5220\u9664\uff0c\u5982\u679c\u5b83\u4eec\u4f4d\u4e8e\u540c\u4e00\u79bb\u6563\u7684 60 \u79d2\u5b58\u50a8\u6876\u5185\uff0c\u6700\u65e9\u7684\u6570\u636e\u70b9\u5c06\u88ab\u4fdd\u7559\u3002\u5728\u65f6\u95f4\u6233\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u4fdd\u7559\u4efb\u610f\u6570\u636e\u70b9\u3002 -dedup.minScrapeInterval \u7684\u63a8\u8350\u503c\u662f\u7b49\u4e8e Prometheus \u914d\u7f6e\u4e2d\u7684 scrape_interval \u7684\u503c\uff0c\u5efa\u8bae\u5728\u6240\u6709\u6293\u53d6\u76ee\u6807\u4e2d\u4f7f\u7528\u4e00\u4e2a scrape_interval \u914d\u7f6e\u3002 \u5982\u679c HA \u4e2d\u591a\u4e2a\u76f8\u540c\u914d\u7f6e\u7684 vmagent \u6216 Prometheus \u5b9e\u4f8b\u5c06\u6570\u636e\u5199\u5165\u540c\u4e00\u4e2a VictoriaMetrics \u5b9e\u4f8b\uff0c\u5219\u91cd\u590d\u6570\u636e\u5220\u9664\u4f1a\u51cf\u5c11\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u3002\u8fd9\u4e9b vmagent \u6216 Prometheus \u5b9e\u4f8b\u5728\u5176\u914d\u7f6e\u4e2d\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684 external_labels \u90e8\u5206\uff0c\u56e0\u6b64\u5b83\u4eec\u5c06\u6570\u636e\u5199\u5165\u76f8\u540c\u7684\u65f6\u95f4\u5e8f\u5217\u3002","title":"2-3 \u53bb\u91cd"},{"location":"chap12/69vm_cluster/#_2","text":"\u96c6\u7fa4\u5bb9\u91cf\u968f\u7740\u53ef\u7528\u8d44\u6e90\u7684\u589e\u52a0\u800c\u7ebf\u6027\u6269\u5c55\uff0c\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u6240\u9700\u7684 CPU \u548c\u5185\u5b58\u6570\u91cf\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u5de5\u4f5c\u8d1f\u8f7d - \u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u91cf\u3001\u5e8f\u5217\u6d41\u5931\u7387\u3001\u67e5\u8be2\u7c7b\u578b\u3001\u67e5\u8be2 QPS \u7b49\u3002\u5efa\u8bae\u4e3a\u4f60\u7684\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u90e8\u7f72\u4e00\u4e2a\u6d4b\u8bd5\u7684 VictoriaMetrics \u96c6\u7fa4\uff0c\u5e76\u53cd\u590d\u8c03\u6574\u6bcf\u4e2a\u8282\u70b9\u7684\u8d44\u6e90\u548c\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u6570\u91cf\uff0c\u76f4\u5230\u96c6\u7fa4\u53d8\u5f97\u7a33\u5b9a\u3002\u540c\u6837\u4e5f\u5efa\u8bae\u4e3a\u96c6\u7fa4\u8bbe\u7f6e\u76d1\u63a7\uff0c\u6709\u52a9\u4e8e\u786e\u5b9a\u96c6\u7fa4\u8bbe\u7f6e\u4e2d\u7684\u74f6\u9888\u95ee\u9898\u3002 \u6307\u5b9a\u4fdd\u7559\u6240\u9700\u7684\u5b58\u50a8\u7a7a\u95f4\uff08\u53ef\u4ee5\u901a\u8fc7 vmstorage \u4e2d\u7684 -retentionPeriod \u547d\u4ee4\u884c\u6807\u5fd7\u8bbe\u7f6e\uff09\u53ef\u4ee5\u4ece\u6d4b\u8bd5\u8fd0\u884c\u4e2d\u7684\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u60c5\u51b5\u63a8\u65ad\u51fa\u6765\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5728\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u4e0a\u8fd0\u884c\u4e00\u5929\u540e\u7684\u5b58\u50a8\u7a7a\u95f4\u4f7f\u7528\u91cf\u4e3a 10GB\uff0c\u90a3\u4e48\u5bf9\u4e8e -retentionPeriod=100d \uff08100 \u5929\u4fdd\u7559\u671f\uff09\u6765\u8bf4\uff0c\u5b83\u81f3\u5c11\u9700\u8981 10GB*100=1TB \u7684\u78c1\u76d8\u7a7a\u95f4\u3002\u53ef\u4ee5\u4f7f\u7528 VictoriaMetrics \u96c6\u7fa4\u7684\u5b98\u65b9 Grafana \u4eea\u8868\u677f( https://grafana.com/grafana/dashboards/11176 )\u76d1\u63a7\u5b58\u50a8\u7a7a\u95f4\u4f7f\u7528\u60c5\u51b5\u3002 \u5efa\u8bae\u7559\u51fa\u4ee5\u4e0b\u6570\u91cf\u7684\u5907\u7528\u8d44\u6e90\u3002 \u6240\u6709\u8282\u70b9\u7c7b\u578b\u4e2d 50% \u7684\u7a7a\u95f2\u5185\u5b58\uff0c\u4ee5\u51cf\u5c11\u5de5\u4f5c\u8d1f\u8f7d\u4e34\u65f6\u6fc0\u589e\u65f6\u56e0\u4e3a OOM \u5d29\u6e83\u7684\u53ef\u80fd\u6027\u3002 \u6240\u6709\u8282\u70b9\u7c7b\u578b\u4e2d 50% \u7684\u7a7a\u95f2 CPU\uff0c\u4ee5\u51cf\u5c11\u5de5\u4f5c\u8d1f\u8f7d\u4e34\u65f6\u9ad8\u5cf0\u671f\u95f4\u7684\u6162\u901f\u6982\u7387\u3002 vmstorage \u8282\u70b9\u4e0a -storageDataPath \u547d\u4ee4\u884c\u6807\u5fd7\u6307\u5411\u7684\u76ee\u5f55\u4e2d\u81f3\u5c11\u6709 30% \u7684\u53ef\u7528\u5b58\u50a8\u7a7a\u95f4\u3002 VictoriaMetrics \u96c6\u7fa4\u7684\u4e00\u4e9b\u5bb9\u91cf\u89c4\u5212\u6280\u5de7\uff1a \u526f\u672c\u96c6\u5c06\u96c6\u7fa4\u6240\u9700\u7684\u8d44\u6e90\u91cf\u6700\u591a\u589e\u52a0 N \u500d\uff0c\u5176\u4e2d N \u662f\u590d\u5236\u56e0\u5b50\u3002 \u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u66f4\u591a vmstorage \u8282\u70b9\u548c/\u6216\u901a\u8fc7\u589e\u52a0\u6bcf\u4e2a vmstorage \u8282\u70b9\u7684\u5185\u5b58\u548c CPU \u8d44\u6e90\u6765\u589e\u52a0\u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u7684\u96c6\u7fa4\u5bb9\u91cf\u3002 \u53ef\u4ee5\u901a\u8fc7\u589e\u52a0 vmstorage \u8282\u70b9\u7684\u6570\u91cf\u548c/\u6216\u901a\u8fc7\u589e\u52a0\u6bcf\u4e2a vmselect \u8282\u70b9\u7684\u5185\u5b58\u548c CPU \u8d44\u6e90\u6765\u51cf\u5c11\u67e5\u8be2\u5ef6\u8fdf\u3002 \u6240\u6709 vminsert \u8282\u70b9\u6240\u9700\u7684 CPU \u5185\u6838\u603b\u6570\u53ef\u4ee5\u901a\u8fc7\u6444\u53d6\u7387\u8ba1\u7b97\uff1a CPUs = ingestion_rate / 100K \u3002 vminsert \u8282\u70b9\u4e0a\u7684 -rpc.disableCompression \u547d\u4ee4\u884c\u6807\u5fd7\u53ef\u4ee5\u589e\u52a0\u6444\u53d6\u5bb9\u91cf\uff0c\u4f46\u4ee3\u4ef7\u662f vminsert \u548c vmstorage \u4e4b\u95f4\u7684\u7f51\u7edc\u5e26\u5bbd\u4f7f\u7528\u7387\u4f1a\u66f4\u9ad8\u3002","title":"\u5bb9\u91cf\u89c4\u5212"},{"location":"chap12/69vm_cluster/#2-4","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cVictoriaMetrics \u7684\u6570\u636e\u590d\u5236\u4f9d\u8d56 -storageDataPath \u6307\u5411\u7684\u5e95\u5c42\u5b58\u50a8\u6765\u5b8c\u6210\u3002 \u4f46\u662f\u6211\u4eec\u4e5f\u53ef\u4ee5\u624b\u52a8\u901a\u8fc7\u5c06 -replicationFactor=N \u547d\u4ee4\u53c2\u6570\u4f20\u9012\u7ed9 vminsert \u6765\u542f\u7528\u590d\u5236\uff0c\u8fd9\u4fdd\u8bc1\u4e86\u5982\u679c\u591a\u8fbe N-1 \u4e2a vmstorage \u8282\u70b9\u4e0d\u53ef\u7528\uff0c\u6240\u6709\u6570\u636e\u4ecd\u53ef\u7528\u4e8e\u67e5\u8be2\u3002\u96c6\u7fa4\u5fc5\u987b\u81f3\u5c11\u5305\u542b 2*N-1 \u4e2a vmstorage \u8282\u70b9\uff0c\u5176\u4e2d N \u662f\u590d\u5236\u56e0\u5b50\uff0c\u4ee5\u4fbf\u5728 N-1 \u4e2a\u5b58\u50a8\u8282\u70b9\u4e22\u5931\u65f6\u4e3a\u65b0\u6444\u53d6\u7684\u6570\u636e\u7ef4\u6301\u6307\u5b9a\u7684\u590d\u5236\u56e0\u5b50\u3002 \u4f8b\u5982\uff0c\u5f53 -replicationFactor=3 \u4f20\u9012\u7ed9 vminsert \u65f6\uff0c\u5b83\u5c06\u6240\u6709\u6444\u53d6\u7684\u6570\u636e\u590d\u5236\u5230 3 \u4e2a\u4e0d\u540c\u7684 vmstorage \u8282\u70b9\uff0c\u56e0\u6b64\u6700\u591a\u53ef\u4ee5\u4e22\u5931 2 \u4e2a vmstorage \u8282\u70b9\u800c\u4e0d\u4f1a\u4e22\u5931\u6570\u636e\u3002 vmstorage \u8282\u70b9\u7684\u6700\u5c0f\u6570\u91cf\u5e94\u8be5\u7b49\u4e8e 2*3-1 = 5 \uff0c\u56e0\u6b64\u5f53 2 \u4e2a vmstorage \u8282\u70b9\u4e22\u5931\u65f6\uff0c\u5269\u4f59\u7684 3 \u4e2a vmstorage \u8282\u70b9\u53ef\u4ee5\u4e3a\u65b0\u6444\u53d6\u7684\u6570\u636e\u63d0\u4f9b\u670d\u52a1\u3002 \u542f\u7528\u590d\u5236\u540e\uff0c\u5fc5\u987b\u5c06 -dedup.minScrapeInterval=1ms \u547d\u4ee4\u884c\u6807\u5fd7\u4f20\u9012\u7ed9 vmselect \u8282\u70b9\uff0c\u5f53\u591a\u8fbe N-1 \u4e2a vmstorage \u8282\u70b9\u54cd\u5e94\u7f13\u6162\u548c/\u6216\u6682\u65f6\u4e0d\u53ef\u7528\u65f6\uff0c\u53ef\u4ee5\u5c06\u53ef\u9009\u7684 -replicationFactor=N \u53c2\u6570\u4f20\u9012\u7ed9 vmselect \u4ee5\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\uff0c\u56e0\u4e3a vmselect \u4e0d\u7b49\u5f85\u6765\u81ea\u591a\u8fbe N-1 \u4e2a vmstorage \u8282\u70b9\u7684\u54cd\u5e94\u3002\u6709\u65f6\uff0cvmselect \u8282\u70b9\u4e0a\u7684 -replicationFactor \u53ef\u80fd\u4f1a\u5bfc\u81f4\u90e8\u5206\u54cd\u5e94\u3002 -dedup.minScrapeInterval=1ms \u5728\u67e5\u8be2\u671f\u95f4\u5bf9\u590d\u5236\u7684\u6570\u636e\u8fdb\u884c\u91cd\u590d\u6570\u636e\u5220\u9664\uff0c\u5982\u679c\u91cd\u590d\u6570\u636e\u4ece\u914d\u7f6e\u76f8\u540c\u7684 vmagent \u5b9e\u4f8b\u6216 Prometheus \u5b9e\u4f8b\u63a8\u9001\u5230 VictoriaMetrics\uff0c\u5219\u5fc5\u987b\u6839\u636e\u91cd\u590d\u6570\u636e\u5220\u9664\u6587\u6863\u5c06 -dedup.minScrapeInterval \u8bbe\u7f6e\u4e3a\u66f4\u5927\u7684\u503c\u3002 \u8bf7\u6ce8\u610f\uff0c\u590d\u5236\u4e0d\u4f1a\u4ece\u707e\u96be\u4e2d\u4fdd\u5b58\uff0c\u56e0\u6b64\u5efa\u8bae\u6267\u884c\u5b9a\u671f\u5907\u4efd\u3002\u53e6\u5916 \u590d\u5236\u4f1a\u589e\u52a0\u8d44\u6e90\u4f7f\u7528\u7387 - CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u7a7a\u95f4\u3001\u7f51\u7edc\u5e26\u5bbd - \u6700\u591a -replicationFactor \u500d\u3002\u6240\u4ee5\u53ef\u4ee5\u5c06\u590d\u5236\u8f6c\u79fb -storageDataPath \u6307\u5411\u7684\u5e95\u5c42\u5b58\u50a8\u6765\u505a\u4fdd\u8bc1\uff0c\u4f8b\u5982 Google Compute Engine \u6c38\u4e45\u78c1\u76d8\uff0c\u8be5\u78c1\u76d8\u53ef\u4ee5\u9632\u6b62\u6570\u636e\u4e22\u5931\u548c\u6570\u636e\u635f\u574f\uff0c\u5b83\u8fd8\u63d0\u4f9b\u59cb\u7ec8\u5982\u4e00\u7684\u9ad8\u6027\u80fd\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u4e0d\u505c\u673a\u7684\u60c5\u51b5\u4e0b\u8c03\u6574\u5927\u5c0f\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u4f8b\u6765\u8bf4\uff0c\u57fa\u4e8e HDD \u7684\u6c38\u4e45\u6027\u78c1\u76d8\u5e94\u8be5\u8db3\u591f\u4e86\u3002","title":"2-4 \u526f\u672c\u548c\u6570\u636e\u5b89\u5168"},{"location":"chap12/69vm_cluster/#2-5","text":"\u5efa\u8bae\u4ece\u5373\u65f6\u5feb\u7167\u6267\u884c\u5b9a\u671f\u5907\u4efd\uff0c\u4ee5\u9632\u6b62\u610f\u5916\u6570\u636e\u5220\u9664\u7b49\u9519\u8bef\u3002\u5fc5\u987b\u4e3a\u6bcf\u4e2a vmstorage \u8282\u70b9\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\u6765\u521b\u5efa\u5907\u4efd\uff1a \u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee /snapshot/create \u8fd9\u4e2a HTTP handler \u6765\u521b\u5efa\u5373\u65f6\u5feb\u7167\uff0c\u5b83\u5c06\u521b\u5efa\u5feb\u7167\u5e76\u8fd4\u56de\u5176\u540d\u79f0\u3002 \u4f7f\u7528 vmbackup \u7ec4\u4ef6\u4ece <-storageDataPath>/snapshots/<snapshot_name> \u6587\u4ef6\u5939\u5f52\u6863\u521b\u5efa\u7684\u5feb\u7167\u3002\u5f52\u6863\u8fc7\u7a0b\u4e0d\u4f1a\u5e72\u6270 vmstorage \u5de5\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u4efb\u4f55\u5408\u9002\u7684\u65f6\u95f4\u6267\u884c\u3002 \u901a\u8fc7 /snapshot/delete?snapshot=<snapshot_name> \u6216 /snapshot/delete_all \u5220\u9664\u672a\u4f7f\u7528\u7684\u5feb\u7167\uff0c\u4ee5\u91ca\u653e\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u3002 \u65e0\u9700\u5728\u6240\u6709 vmstorage \u8282\u70b9\u4e4b\u95f4\u540c\u6b65\u5907\u4efd\u3002 \u4ece\u5907\u4efd\u6062\u590d\uff1a \u4f7f\u7528 kill -INT \u505c\u6b62 vmstorage \u8282\u70b9\u3002 \u4f7f\u7528 vmrestore \u7ec4\u4ef6\u5c06\u5907\u4efd\u4e2d\u7684\u6570\u636e\u8fd8\u539f\u5230 -storageDataPath \u76ee\u5f55\u3002 \u542f\u52a8 vmstorage \u8282\u70b9\u3002 \u5728\u4e86\u89e3\u4e86 VM \u96c6\u7fa4\u7684\u4e00\u4e9b\u914d\u7f6e\u7ec6\u8282\u540e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5f00\u59cb\u90e8\u7f72 VM \u96c6\u7fa4\u3002","title":"2-5 \u5907\u4efd"},{"location":"chap12/69vm_cluster/#3","text":"\u5982\u679c\u4f60\u5df2\u7ecf\u5bf9 VM \u7ec4\u4ef6\u975e\u5e38\u4e86\u89e3\u4e86\uff0c\u90a3\u4e48\u63a8\u8350\u4f7f\u7528 Helm Chart \u7684\u65b9\u5f0f\u8fdb\u884c\u4e00\u952e\u5b89\u88c5\u3002 \u2638 \u279c helm repo add vm https://victoriametrics.github.io/helm-charts/ \u2638 \u279c helm repo update # \u5bfc\u51fa\u9ed8\u8ba4\u7684 values \u503c\u5230 values.yaml \u6587\u4ef6\u4e2d \u2638 \u279c helm show values vm/victoria-metrics-cluster > values.yaml # \u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4fee\u6539 values.yaml \u6587\u4ef6\u914d\u7f6e # \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u8fdb\u884c\u4e00\u952e\u5b89\u88c5 \u2638 \u279c helm install victoria-metrics vm/victoria-metrics-cluster -f values.yaml -n NAMESPACE # \u83b7\u53d6 vm \u8fd0\u884c\u7684 pods \u5217\u8868 \u2638 \u279c kubectl get pods -A | grep 'victoria-metrics' \u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u624b\u52a8\u65b9\u5f0f\u8fdb\u884c\u90e8\u7f72\uff0c\u4e4b\u6240\u4ee5\u9009\u62e9\u624b\u52a8\u90e8\u7f72\u7684\u65b9\u5f0f\u662f\u4e3a\u4e86\u80fd\u591f\u4e86\u89e3\u5404\u4e2a\u7ec4\u4ef6\u7684\u66f4\u591a\u7ec6\u8282\u3002 \u7531\u4e8e vmstorage \u7ec4\u4ef6\u662f\u65e0\u72b6\u6001\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u4f7f\u7528 StatefulSet \u8fdb\u884c\u90e8\u7f72\uff0c\u7531\u4e8e\u8be5\u7ec4\u4ef6\u4e5f\u662f\u53ef\u4ee5\u8fdb\u884c\u6269\u5c55\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u9996\u5148\u90e8\u7f72\u4e24\u4e2a\u526f\u672c\uff0c \u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # cluster-vmstorage.yaml apiVersion: v1 kind: Service metadata: name: cluster-vmstorage namespace: kube-vm labels: app: vmstorage spec: clusterIP: None ports: - port: 8482 targetPort: http name: http - port: 8401 targetPort: vmselect name: vmselect - port: 8400 targetPort: vminsert name: vminsert selector: app: vmstorage --- apiVersion: apps/v1 kind: StatefulSet metadata: name: vmstorage namespace: kube-vm labels: app: vmstorage spec: serviceName: cluster-vmstorage selector: matchLabels: app: vmstorage replicas: 2 podManagementPolicy: OrderedReady template: metadata: labels: app: vmstorage spec: containers: - name: vmstorage image: \"victoriametrics/vmstorage:v1.77.0-cluster\" imagePullPolicy: \"IfNotPresent\" args: - \"--retentionPeriod=1\" - \"--storageDataPath=/storage\" - --envflag.enable=true - --envflag.prefix=VM_ - --loggerFormat=json ports: - name: http containerPort: 8482 - name: vminsert containerPort: 8400 - name: vmselect containerPort: 8401 livenessProbe: failureThreshold: 10 initialDelaySeconds: 30 periodSeconds: 30 tcpSocket: port: http timeoutSeconds: 5 readinessProbe: failureThreshold: 3 initialDelaySeconds: 5 periodSeconds: 15 timeoutSeconds: 5 httpGet: path: /health port: http volumeMounts: - name: storage mountPath: /storage volumeClaimTemplates: - metadata: name: storage spec: storageClassName: hostpath accessModes: - ReadWriteOnce resources: requests: storage: \"1Gi\" ``` \u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a Headless \u7684 Service\uff0c\u56e0\u4e3a\u540e\u9762\u7684\u7ec4\u4ef6\u9700\u8981\u8bbf\u95ee\u5230\u6bcf\u4e00\u4e2a\u5177\u4f53\u7684 Pod\uff0c\u5728 vmstorage \u542f\u52a8\u53c2\u6570\u4e2d\u901a\u8fc7 `--retentionPeriod` \u53c2\u6570\u6307\u5b9a\u6307\u6807\u6570\u636e\u4fdd\u7559\u65f6\u957f\uff0c1 \u8868\u793a\u4e00\u4e2a\u6708\uff0c\u8fd9\u4e5f\u662f\u9ed8\u8ba4\u7684\u65f6\u957f\uff0c\u7136\u540e\u901a\u8fc7 `--storageDataPath` \u53c2\u6570\u6307\u5b9a\u4e86\u6570\u636e\u5b58\u50a8\u8def\u5f84\uff0c\u8bb0\u5f97\u8981\u5c06\u8be5\u76ee\u5f55\u8fdb\u884c\u6301\u4e45\u5316\u3002 ``` $ kubectl apply -f cluster-vmstorage.yaml service/cluster-vmstorage created statefulset.apps/vmstorage created $ kubectl get pod -n kube-vm NAME READY STATUS RESTARTS AGE vmstorage-0 1/1 Running 0 31s \u540c\u6837\u76f4\u63a5\u5e94\u7528\u8be5\u8d44\u6e90\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/cluster-vmstorage.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=vmstorage NAME READY STATUS RESTARTS AGE vmstorage-0 1/1 Running 0 5m40s vmstorage-1 1/1 Running 0 3m31s \u2638 \u279c kubectl get svc -n kube-vm -l app=vmstorage NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE cluster-vmstorage ClusterIP None <none> 8482/TCP,8401/TCP,8400/TCP 5m46s \u63a5\u7740\u53ef\u4ee5\u90e8\u7f72 vmselect \u7ec4\u4ef6\uff0c\u7531\u4e8e\u8be5\u7ec4\u4ef6\u662f\u65e0\u72b6\u6001\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 Deployment \u6765\u8fdb\u884c\u7ba1\u7406\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # cluster-vmselect.yaml apiVersion: v1 kind: Service metadata: name: vmselect namespace: kube-vm labels: app: vmselect spec: ports: - name: http port: 8481 targetPort: http selector: app: vmselect --- apiVersion: apps/v1 kind: Deployment metadata: name: vmselect namespace: kube-vm labels: app: vmselect spec: selector: matchLabels: app: vmselect template: metadata: labels: app: vmselect spec: containers: - name: vmselect image: \"victoriametrics/vmselect:v1.77.0-cluster\" imagePullPolicy: \"IfNotPresent\" args: - \"--cacheDataPath=/cache\" - --storageNode=vmstorage-0.cluster-vmstorage.kube-vm.svc.cluster.local:8401 - --storageNode=vmstorage-1.cluster-vmstorage.kube-vm.svc.cluster.local:8401 - --envflag.enable=true - --envflag.prefix=VM_ - --loggerFormat=json ports: - name: http containerPort: 8481 readinessProbe: httpGet: path: /health port: http initialDelaySeconds: 5 periodSeconds: 15 timeoutSeconds: 5 failureThreshold: 3 livenessProbe: tcpSocket: port: http initialDelaySeconds: 5 periodSeconds: 15 timeoutSeconds: 5 failureThreshold: 3 volumeMounts: - mountPath: /cache name: cache-volume volumes: - name: cache-volume emptyDir: {} $ kubectl apply -f cluster-vmselect.yaml service/vmselect created deployment.apps/vmselect created $ kubectl get pod -n kube-vm NAME READY STATUS RESTARTS AGE vmselect-bcb54965f-sfrcw 1/1 Running 0 39s vmstorage-0 1/1 Running 0 4m11s \u5176\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\u662f\u901a\u8fc7 --storageNode \u53c2\u6570\u6307\u5b9a\u6240\u6709\u7684 vmstorage \u8282\u70b9\u5730\u5740\uff0c\u4e0a\u9762\u6211\u4eec\u4f7f\u7528\u7684 StatefulSet \u90e8\u7f72\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 FQDN \u7684\u5f62\u5f0f\u8fdb\u884c\u8bbf\u95ee\u3002\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u5bf9\u8c61\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/cluster-vmselect.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=vmselect NAME READY STATUS RESTARTS AGE vmselect-bcb54965f-5rkml 1/1 Running 0 2m4s \u2638 \u279c kubectl get svc -n kube-vm -l app=vmselect NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE vmselect ClusterIP 10.107.227.214 <none> 8481/TCP 2m17s \u5982\u679c\u8981\u8fdb\u884c\u67e5\u8be2\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5916\u66b4\u9732 vmselect \u8fd9\u4e2a Service \u670d\u52a1\u5373\u53ef\uff0c\u4fee\u6539 Grafana \u6570\u636e\u6e90\u5730\u5740\u4e3a http://<select-service>/select/0/prometheus/ \u3002 vm-grafana.yaml # vm-grafana.yaml apiVersion: apps/v1 kind: Deployment metadata: name: grafana namespace: kube-vm spec: selector: matchLabels: app: grafana template: metadata: labels: app: grafana spec: volumes: - name: storage persistentVolumeClaim: claimName: grafana-data containers: - name: grafana image: grafana/grafana:main imagePullPolicy: IfNotPresent ports: - containerPort: 3000 name: grafana securityContext: runAsUser: 0 env: - name: GF_SECURITY_ADMIN_USER value: admin - name: GF_SECURITY_ADMIN_PASSWORD value: admin321 volumeMounts: - mountPath: /var/lib/grafana name: storage --- apiVersion: v1 kind: Service metadata: name: grafana namespace: kube-vm spec: type: NodePort ports: - port: 3000 selector: app: grafana # --- # apiVersion: v1 # kind: PersistentVolume # metadata: # name: grafana-data # spec: # accessModes: # - ReadWriteOnce # capacity: # storage: 500Mi # storageClassName: hostpath # local: # path: /data/k8s/grafana # persistentVolumeReclaimPolicy: Retain --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: grafana-data namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 500Mi storageClassName: hostpath \u5982\u679c\u8981\u8fdb\u884c\u67e5\u8be2\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5916\u66b4\u9732 vmselect \u8fd9\u4e2a Service \u670d\u52a1\u5373\u53ef\uff0c\u4fee\u6539 Grafana \u6570\u636e\u6e90\u5730\u5740\u4e3a http://<select-service>/select/0/prometheus/ \u3002 http://vmselect:8481/select/0/prometheus/ \u63a5\u7740\u5c31\u9700\u8981\u90e8\u7f72\u7528\u6765\u63a5\u6536\u6307\u6807\u6570\u636e\u63d2\u5165\u7684 vminsert \u7ec4\u4ef6\uff0c\u540c\u6837\u8be5\u7ec4\u4ef6\u662f\u65e0\u72b6\u6001\u7684\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u4e5f\u662f\u9700\u8981\u901a\u8fc7 --storageNode \u53c2\u6570\u6307\u5b9a\u6240\u6709\u7684 vmstorage \u8282\u70b9\uff1a # cluster-vminsert.yaml apiVersion: v1 kind: Service metadata: name: vminsert namespace: kube-vm labels: app: vminsert spec: ports: - name: http port: 8480 targetPort: http selector: app: vminsert --- apiVersion: apps/v1 kind: Deployment metadata: name: vminsert namespace: kube-vm labels: app: vminsert spec: selector: matchLabels: app: vminsert template: metadata: labels: app: vminsert spec: containers: - name: vminsert image: \"victoriametrics/vminsert:v1.77.0-cluster\" imagePullPolicy: \"IfNotPresent\" args: # - -replicationFactor=2 # \u53ef\u4ee5\u5f00\u542f\u6570\u636e\u526f\u672c - --storageNode=vmstorage-0.cluster-vmstorage.kube-vm.svc.cluster.local:8400 - --storageNode=vmstorage-1.cluster-vmstorage.kube-vm.svc.cluster.local:8400 - --envflag.enable=true - --envflag.prefix=VM_ - --loggerFormat=json ports: - name: http containerPort: 8480 readinessProbe: httpGet: path: /health port: http initialDelaySeconds: 5 periodSeconds: 15 timeoutSeconds: 5 failureThreshold: 3 livenessProbe: tcpSocket: port: http initialDelaySeconds: 5 periodSeconds: 15 timeoutSeconds: 5 failureThreshold: 3 \u7531\u4e8e\u672c\u8eab\u662f\u65e0\u72b6\u6001\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u6839\u636e\u9700\u8981\u589e\u52a0\u526f\u672c\u6570\u91cf\uff0c\u4e5f\u53ef\u4ee5\u914d\u7f6e HPA \u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\uff1a $ kubectl apply -f cluster-vminsert.yaml service/vminsert created deployment.apps/vminsert created \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/cluster-vminsert.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=vminsert NAME READY STATUS RESTARTS AGE vminsert-66c88cd497-l64ps 1/1 Running 0 2m27s \u2638 \u279c kubectl get svc -n kube-vm -l app=vminsert NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE vminsert ClusterIP 10.96.125.134 <none> 8480/TCP 70s $ ifconfig | grep 192.168 inet 192.168.1.6 netmask 0xffffff00 broadcast 192.168.1.255 \u96c6\u7fa4\u6a21\u5f0f\u7684\u76f8\u5173\u7ec4\u4ef6\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u5148\u53bb\u914d\u7f6e\u524d\u9762\u7684 Prometheus\uff0c\u5c06\u5176\u6570\u636e\u8fdc\u7a0b\u5199\u5165\u5230 VM \u4e2d\u6765\uff0c\u4fee\u6539 remote_write \u7684\u5730\u5740\u4e3a http://vminsert:8480/insert/0/prometheus/ \uff0c\u6ce8\u610f\u548c\u5355\u8282\u70b9\u6a21\u5f0f\u7684 API \u8def\u5f84\u4e0d\u4e00\u6837\uff0c\u5982\u4e0b\u6240\u793a\uff1a # vm-prom-config3.yaml apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-vm data: prometheus.yaml: | global: scrape_interval: 15s scrape_timeout: 15s remote_write: # \u5199\u5165\u5230\u8fdc\u7a0b VM \u5b58\u50a8\uff0curl \u662f\u8fdc\u7a0b\u5199\u5165\u63a5\u53e3\u5730\u5740 - url: http://vminsert:8480/insert/0/prometheus/ # queue_config: # \u5982\u679c Prometheus \u6293\u53d6\u6307\u6807\u5f88\u5927\uff0c\u53ef\u4ee5\u52a0\u8c03\u6574 queue\uff0c\u4f46\u662f\u4f1a\u63d0\u9ad8\u5185\u5b58\u5360\u7528 # max_samples_per_send: 10000 # \u6bcf\u6b21\u53d1\u9001\u7684\u6700\u5927\u6837\u672c\u6570 # capacity: 20000 # max_shards: 30 # \u6700\u5927\u5206\u7247\u6570\uff0c\u5373\u5e76\u53d1\u91cf\u3002 scrape_configs: - job_name: \"nodes\" static_configs: # - targets: ['192.168.0.109:9111', '192.168.0.110:9111', '192.168.0.111:9111'] - targets: ['192.168.1.6:9100'] relabel_configs: # \u901a\u8fc7 relabeling \u4ece __address__ \u4e2d\u63d0\u53d6 IP \u4fe1\u606f\uff0c\u4e3a\u4e86\u540e\u9762\u9a8c\u8bc1 VM \u662f\u5426\u517c\u5bb9 relabeling - source_labels: [__address__] regex: \"(.*):(.*)\" replacement: \"${1}\" target_label: 'ip' action: replace $ kubectl get pod -n kube-vm NAME READY STATUS RESTARTS AGE grafana-bbd99dc7-gv59q 1/1 Running 0 11m vminsert-66c88cd497-9k6fx 1/1 Running 0 88s vmselect-bcb54965f-sfrcw 1/1 Running 0 22m vmstorage-0 1/1 Running 0 26m $ kubectl apply -f vm-prom-config3.yaml configmap/prometheus-config created \u66f4\u65b0 Prometheus \u914d\u7f6e\uff0c\u7136\u540e\u542f\u52a8 Prometheus\uff0c\u524d\u9762\u7684\u5355\u673a\u6a21\u5f0f\u7684 VM \u53ef\u4ee5\u5148\u505c\u6389\uff1a \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/vm-prom-config3.yaml \u2638 \u279c kubectl scale deploy victoria-metrics --replicas=0 -n kube-vm \u2638 \u279c kubectl scale deploy prometheus --replicas=1 -n kube-vm # vm-prom-deploy.yaml apiVersion: apps/v1 kind: Deployment metadata: name: prometheus namespace: kube-vm spec: selector: matchLabels: app: prometheus template: metadata: labels: app: prometheus spec: volumes: - name: data persistentVolumeClaim: claimName: prometheus-data - name: config-volume configMap: name: prometheus-config containers: - image: prom/prometheus:v2.35.0 name: prometheus args: - \"--config.file=/etc/prometheus/prometheus.yaml\" - \"--storage.tsdb.path=/prometheus\" # \u6307\u5b9atsdb\u6570\u636e\u8def\u5f84 - \"--storage.tsdb.retention.time=2d\" - \"--web.enable-lifecycle\" # \u652f\u6301\u70ed\u66f4\u65b0\uff0c\u76f4\u63a5\u6267\u884clocalhost:9090/-/reload\u7acb\u5373\u751f\u6548 ports: - containerPort: 9090 name: http securityContext: runAsUser: 0 volumeMounts: - mountPath: \"/etc/prometheus\" name: config-volume - mountPath: \"/prometheus\" name: data --- apiVersion: v1 kind: Service metadata: name: prometheus namespace: kube-vm spec: selector: app: prometheus type: NodePort ports: - name: web port: 9090 targetPort: http --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: prometheus-data namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 500Mi storageClassName: hostpath \u914d\u7f6e\u6210\u529f\u540e\u6b63\u5e38\u6570\u636e\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u5165\u5230 vmstorage \u4e86\uff0c\u67e5\u770b vmstorage \u65e5\u5fd7\u53ef\u4ee5\u770b\u5230\u6210\u529f\u521b\u5efa\u4e86 partition\uff0c\u8bc1\u660e\u73b0\u5728\u5df2\u7ecf\u5728\u5f00\u59cb\u63a5\u6536\u6570\u636e\u4e86\uff1a \u2638 \u279c kubectl logs -f vmstorage-0 -n kube-vm ...... {\"ts\":\"2022-05-06T08:35:15.786Z\",\"level\":\"info\",\"caller\":\"VictoriaMetrics/lib/storage/partition.go:206\",\"msg\":\"creating a partition \\\"2022_05\\\" with smallPartsPath=\\\"/storage/data/small/2022_05\\\", bigPartsPath=\\\"/storage/data/big/2022_05\\\"\"} {\"ts\":\"2022-05-06T08:35:15.802Z\",\"level\":\"info\",\"caller\":\"VictoriaMetrics/lib/storage/partition.go:222\",\"msg\":\"partition \\\"2022_05\\\" has been created\"} \u7136\u540e\u5bfc\u5165 16098 \u8fd9\u4e2a Dashboard\uff0c\u5bfc\u5165\u540e\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u7136\u540e\u53ef\u4ee5\u53bb Grafana \u91cd\u65b0\u67e5\u770b Dashboard \u662f\u5426\u6b63\u5e38\uff1a \u5982\u679c\u73b0\u5728\u9700\u8981\u65b0\u589e vmstorage \u8282\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u6309\u7167\u4e0b\u9762\u7684\u6b65\u9aa4\u8fdb\u884c\u64cd\u4f5c\uff1a \u4f7f\u7528\u4e0e\u96c6\u7fa4\u4e2d\u73b0\u6709\u8282\u70b9\u76f8\u540c\u7684 -retentionPeriod \u914d\u7f6e\u542f\u52a8\u65b0\u7684 vmstorage \u8282\u70b9\u3002 \u9010\u6b65\u91cd\u65b0\u542f\u52a8\u6240\u6709\u7684 vmselect \u8282\u70b9\uff0c\u6dfb\u52a0\u65b0\u7684 -storageNode \u53c2\u6570\u5305\u542b <new_vmstorage_host> \u3002 \u9010\u6b65\u91cd\u65b0\u542f\u52a8\u6240\u6709\u7684 vminsert \u8282\u70b9\uff0c\u6dfb\u52a0\u65b0\u7684 -storageNode \u53c2\u6570\u5305\u542b <new_vmstorage_host> \u3002","title":"3 \u90e8\u7f72"},{"location":"chap12/70vm_vmagent/","text":"\u7b2c\u56db\u8282 \u4f7f\u7528vmagent\u4ee3\u66ffPrometheus\u91c7\u96c6\u76d1\u63a7\u6307\u6807 vmagent \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4ece\u5404\u79cd\u6765\u6e90\u6536\u96c6\u6307\u6807\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728 VM \u6216\u8005\u4efb\u4f55\u5176\u4ed6\u652f\u6301 remote write \u534f\u8bae\u7684 Prometheus \u517c\u5bb9\u7684\u5b58\u50a8\u7cfb\u7edf\u4e2d\u3002 1 \u7279\u6027 vmagent \u76f8\u6bd4\u4e8e Prometheus \u6293\u53d6\u6307\u6807\u6765\u8bf4\u5177\u6709\u66f4\u591a\u7684\u7075\u6d3b\u6027\uff0c\u6bd4\u5982\u9664\u4e86\u62c9\u53d6\uff08pull\uff09\u6307\u6807\u8fd8\u53ef\u4ee5\u63a8\u9001\uff08push\uff09\u6307\u6807\uff0c\u6b64\u5916\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7279\u6027\uff1a \u53ef\u4ee5\u66ff\u6362 prometheus \u7684 scraping target \u652f\u6301\u4ece Kafka \u8bfb\u5199\u6570\u636e \u652f\u6301\u57fa\u4e8e prometheus relabeling \u7684\u6a21\u5f0f\u6dfb\u52a0\u3001\u79fb\u9664\u3001\u4fee\u6539 labels\uff0c\u53ef\u4ee5\u5728\u6570\u636e\u53d1\u9001\u5230\u8fdc\u7aef\u5b58\u50a8\u4e4b\u524d\u8fdb\u884c\u6570\u636e\u7684\u8fc7\u6ee4 \u652f\u6301\u591a\u79cd\u6570\u636e\u534f\u8bae\uff0cinflux line \u534f\u8bae\uff0cgraphite \u6587\u672c\u534f\u8bae\uff0copentsdb \u534f\u8bae\uff0cprometheus remote write \u534f\u8bae\uff0cjson lines \u534f\u8bae\uff0ccsv \u6570\u636e\u7b49 \u652f\u6301\u6536\u96c6\u6570\u636e\u7684\u540c\u65f6\uff0c\u5e76\u590d\u5236\u5230\u591a\u79cd\u8fdc\u7aef\u5b58\u50a8\u7cfb\u7edf \u652f\u6301\u4e0d\u53ef\u9760\u8fdc\u7aef\u5b58\u50a8\uff0c\u5982\u679c\u8fdc\u7a0b\u5b58\u50a8\u4e0d\u53ef\u7528\uff0c\u6536\u96c6\u7684\u6307\u6807\u4f1a\u5728 -remoteWrite.tmpDataPath \u7f13\u51b2\uff0c\u4e00\u65e6\u4e0e\u8fdc\u7a0b\u5b58\u50a8\u7684\u8fde\u63a5\u88ab\u4fee\u590d\uff0c\u7f13\u51b2\u7684\u6307\u6807\u5c31\u4f1a\u88ab\u53d1\u9001\u5230\u8fdc\u7a0b\u5b58\u50a8\uff0c\u7f13\u51b2\u533a\u7684\u6700\u5927\u78c1\u76d8\u7528\u91cf\u53ef\u4ee5\u7528 -remoteWrite.maxDiskUsagePerURL \u6765\u9650\u5236 \u3002 \u76f8\u6bd4 prometheus \u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58\u3001cpu\u3001\u78c1\u76d8 io \u4ee5\u53ca\u7f51\u7edc\u5e26\u5bbd \u5f53\u9700\u8981\u6293\u53d6\u5927\u91cf\u76ee\u6807\u65f6\uff0c\u6293\u53d6\u76ee\u6807\u53ef\u4ee5\u5206\u6563\u5230\u591a\u4e2a vmagent \u5b9e\u4f8b\u4e2d \u53ef\u4ee5\u901a\u8fc7\u5728\u6293\u53d6\u65f6\u95f4\u548c\u5c06\u5176\u53d1\u9001\u5230\u8fdc\u7a0b\u5b58\u50a8\u7cfb\u7edf\u4e4b\u524d\u9650\u5236\u552f\u4e00\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u91cf\u6765\u5904\u7406\u9ad8\u57fa\u6570\u548c\u9ad8\u6d41\u5931\u7387\u95ee\u9898 \u53ef\u4ee5\u4ece\u591a\u4e2a\u6587\u4ef6\u4e2d\u52a0\u8f7d scrape \u914d\u7f6e 1 \u90e8\u7f72 \u63a5\u4e0b\u6765\u6211\u4eec\u4ee5\u6293\u53d6 Kubernetes \u96c6\u7fa4\u6307\u6807\u4e3a\u4f8b\u8bf4\u660e\u5982\u4f55\u4f7f\u7528 vmagent\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u81ea\u52a8\u53d1\u73b0\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u914d\u7f6e\u3002vmagent \u662f\u517c\u5bb9 prometheus \u4e2d\u7684 kubernetes_sd_configs \u914d\u7f6e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u3002 \u8981\u8ba9 vmagent \u81ea\u52a8\u53d1\u73b0\u76d1\u63a7\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u9700\u8981\u8bbf\u95ee APIServer \u83b7\u53d6\u8d44\u6e90\u5bf9\u8c61\uff0c\u6240\u4ee5\u9996\u5148\u9700\u8981\u914d\u7f6e rbac \u6743\u9650\uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u6e05\u5355\u3002 # vmagent-rbac.yaml apiVersion: v1 kind: ServiceAccount metadata: name: vmagent namespace: kube-vm --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: vmagent rules: - apiGroups: [\"\", \"networking.k8s.io\", \"extensions\"] resources: - nodes - nodes/metrics - services - endpoints - endpointslices - pods - app - ingresses verbs: [\"get\", \"list\", \"watch\"] - apiGroups: [\"\"] resources: - namespaces - configmaps verbs: [\"get\"] - nonResourceURLs: [\"/metrics\", \"/metrics/resources\"] verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: vmagent roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: vmagent subjects: - kind: ServiceAccount name: vmagent namespace: kube-vm \u7136\u540e\u6dfb\u52a0 vmagent \u914d\u7f6e\uff0c\u6211\u4eec\u5148\u53ea\u914d\u7f6e\u81ea\u52a8\u53d1\u73b0 Kubernetes \u8282\u70b9\u7684\u4efb\u52a1\uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684 ConfigMap \u5bf9\u8c61\uff1a # vmagent-config.yaml apiVersion: v1 kind: ConfigMap metadata: name: vmagent-config namespace: kube-vm data: scrape.yml: | global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: nodes kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: \"(.*):10250\" replacement: \"${1}:9111\" target_label: __address__ action: replace - action: labelmap regex: __meta_kubernetes_node_label_(.+) \u8fd9\u91cc\u6211\u4eec\u901a\u8fc7\u81ea\u52a8\u53d1\u73b0 Kubernetes \u8282\u70b9\u83b7\u53d6\u8282\u70b9\u76d1\u63a7\u6307\u6807\uff0c\u9700\u8981\u6ce8\u610f node \u8fd9\u79cd role \u7684\u81ea\u52a8\u53d1\u73b0\u9ed8\u8ba4\u83b7\u53d6\u7684\u662f\u8282\u70b9\u7684 10250 \u7aef\u53e3\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u901a\u8fc7 relabel \u5c06\u5176 replace \u4e3a 9111\u3002 \u7136\u540e\u6dfb\u52a0 vmagent \u90e8\u7f72\u8d44\u6e90\u6e05\u5355\uff0c\u5982\u4e0b\u6240\u793a\uff1a # vmagent-deploy.yaml apiVersion: v1 kind: PersistentVolumeClaim metadata: name: vmagent-pvc namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi storageClassName: nfs-client --- apiVersion: apps/v1 kind: Deployment metadata: name: vmagent namespace: kube-vm labels: app: vmagent spec: selector: matchLabels: app: vmagent template: metadata: labels: app: vmagent spec: serviceAccountName: vmagent containers: - name: agent image: \"victoriametrics/vmagent:v1.77.0\" imagePullPolicy: IfNotPresent args: - -promscrape.config=/config/scrape.yml - -remoteWrite.tmpDataPath=/tmpData - -remoteWrite.url=http://vminsert:8480/insert/0/prometheus - -envflag.enable=true - -envflag.prefix=VM_ - -loggerFormat=json ports: - name: http containerPort: 8429 volumeMounts: - name: tmpdata mountPath: /tmpData - name: config mountPath: /config volumes: - name: tmpdata persistentVolumeClaim: claimName: vmagent-pvc - name: config configMap: name: vmagent-config \u6211\u4eec\u5c06 vmagent \u914d\u7f6e\u901a\u8fc7 ConfigMap \u6302\u8f7d\u5230\u5bb9\u5668 /config/scrape.yml \uff0c\u53e6\u5916\u901a\u8fc7 -remoteWrite.url=http://vminsert:8480/insert/0/prometheus \u6307\u5b9a\u8fdc\u7a0b\u5199\u5165\u7684\u5730\u5740\uff0c\u8fd9\u91cc\u6211\u4eec\u5199\u5165\u524d\u9762\u7684 vminsert \u670d\u52a1\uff0c\u53e6\u5916\u6709\u4e00\u4e2a\u53c2\u6570 -remoteWrite.tmpDataPath \uff0c\u8be5\u8def\u5f84\u4f1a\u5728\u8fdc\u7a0b\u5b58\u50a8\u4e0d\u53ef\u7528\u7684\u65f6\u5019\u7528\u6765\u7f13\u5b58\u6536\u96c6\u7684\u6307\u6807\uff0c\u5f53\u8fdc\u7a0b\u5b58\u50a8\u4fee\u590d\u540e\uff0c\u7f13\u5b58\u7684\u6307\u6807\u5c31\u4f1a\u88ab\u6b63\u5e38\u53d1\u9001\u5230\u8fdc\u7a0b\u5199\u5165\uff0c\u6240\u4ee5\u6700\u597d\u6301\u4e45\u5316\u8be5\u76ee\u5f55\u3002 2 \u96c6\u7fa4\u6a21\u5f0f \u5355\u4e2a vmagent \u5b9e\u4f8b\u53ef\u4ee5\u6293\u53d6\u6570\u4e07\u4e2a\u6293\u53d6\u76ee\u6807\uff0c\u4f46\u662f\u6709\u65f6\u7531\u4e8e CPU\u3001\u7f51\u7edc\u3001\u5185\u5b58\u7b49\u65b9\u9762\u7684\u9650\u5236\uff0c\u8fd9\u8fd8\u4e0d\u591f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6293\u53d6\u76ee\u6807\u53ef\u4ee5\u5728\u591a\u4e2a vmagent \u5b9e\u4f8b\u4e4b\u95f4\u8fdb\u884c\u62c6\u5206\u3002\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a vmagent \u5b9e\u4f8b\u5fc5\u987b\u4f7f\u7528\u5177\u6709\u4e0d\u540c -promscrape.cluster.memberNum \u503c\u7684\u76f8\u540c -promscrape.config \u914d\u7f6e\u6587\u4ef6\uff0c\u8be5\u53c2\u6570\u503c\u5fc5\u987b\u5728 0 ... N-1 \u8303\u56f4\u5185\uff0c\u5176\u4e2d N \u662f\u96c6\u7fa4\u4e2d vmagent \u5b9e\u4f8b\u7684\u6570\u91cf\u3002\u96c6\u7fa4\u4e2d vmagent \u5b9e\u4f8b\u7684\u6570\u91cf\u5fc5\u987b\u4f20\u9012\u7ed9 -promscrape.cluster.membersCount \u547d\u4ee4\u884c\u6807\u5fd7\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5728\u4e24\u4e2a vmagent \u5b9e\u4f8b\u7684\u96c6\u7fa4\u4e2d\u4f20\u64ad\u6293\u53d6\u76ee\u6807\uff1a vmagent -promscrape.cluster.membersCount=2 -promscrape.cluster.memberNum=0 -promscrape.config=/path/config.yml ... vmagent -promscrape.cluster.membersCount=2 -promscrape.cluster.memberNum=1 -promscrape.config=/path/config.yml ... \u5f53 vmagent \u5728 Kubernetes \u4e2d\u8fd0\u884c\u65f6\uff0c\u53ef\u4ee5\u5c06 -promscrape.cluster.memberNum \u8bbe\u7f6e\u4e3a StatefulSet pod \u540d\u79f0\uff0cpod \u540d\u79f0\u5fc5\u987b\u4ee5 0 ... promscrape.cluster.memberNum-1 \u8303\u56f4\u5185\u7684\u6570\u5b57\u7ed3\u5c3e\uff0c\u4f8b\u5982\uff0c -promscrape.cluster.memberNum=vmagent-0 \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u6293\u53d6\u76ee\u6807\u4ec5\u7531\u96c6\u7fa4\u4e2d\u7684\u5355\u4e2a vmagent \u5b9e\u4f8b\u6293\u53d6\u3002\u5982\u679c\u9700\u8981\u5728\u591a\u4e2a vmagent \u5b9e\u4f8b\u4e4b\u95f4\u590d\u5236\u6293\u53d6\u76ee\u6807\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 -promscrape.cluster.replicationFactor \u53c2\u6570\u8bbe\u7f6e\u4e3a\u6240\u9700\u7684\u526f\u672c\u6570\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8\u4e00\u4e2a\u5305\u542b\u4e09\u4e2a vmagent \u5b9e\u4f8b\u7684\u96c6\u7fa4\uff0c\u5176\u4e2d\u6bcf\u4e2a\u76ee\u6807\u7531\u4e24\u4e2a vmagent \u5b9e\u4f8b\u6293\u53d6\uff1a vmagent -promscrape.cluster.membersCount=3 -promscrape.cluster.replicationFactor=2 -promscrape.cluster.memberNum=0 -promscrape.config=/path/to/config.yml ... vmagent -promscrape.cluster.membersCount=3 -promscrape.cluster.replicationFactor=2 -promscrape.cluster.memberNum=1 -promscrape.config=/path/to/config.yml ... vmagent -promscrape.cluster.membersCount=3 -promscrape.cluster.replicationFactor=2 -promscrape.cluster.memberNum=2 -promscrape.config=/path/to/config.yml ... \u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u6bcf\u4e2a\u76ee\u6807\u88ab\u591a\u4e2a vmagent \u5b9e\u4f8b\u6293\u53d6\uff0c\u5219\u5fc5\u987b\u5728 -remoteWrite.url \u6307\u5411\u7684\u8fdc\u7a0b\u5b58\u50a8\u4e0a\u542f\u7528\u91cd\u590d\u6570\u636e\u5220\u9664\u3002 \u6240\u4ee5\u5982\u679c\u4f60\u6293\u53d6\u7684\u76d1\u63a7\u76ee\u6807\u975e\u5e38\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5efa\u8bae\u4f7f\u7528 vmagent \u96c6\u7fa4\u6a21\u5f0f\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 StatefulSet \u65b9\u5f0f\u8fdb\u884c\u90e8\u7f72 # vmagent-sts.yaml apiVersion: v1 kind: Service metadata: name: vmagent namespace: kube-vm annotations: prometheus.io/scrape: \"true\" prometheus.io/port: \"8429\" spec: selector: app: vmagent clusterIP: None ports: - name: http port: 8429 targetPort: http --- apiVersion: apps/v1 kind: StatefulSet metadata: name: vmagent namespace: kube-vm labels: app: vmagent spec: replicas: 2 serviceName: vmagent selector: matchLabels: app: vmagent template: metadata: labels: app: vmagent spec: serviceAccountName: vmagent containers: - name: agent image: victoriametrics/vmagent:v1.77.0 imagePullPolicy: IfNotPresent args: - -promscrape.config=/config/scrape.yml - -remoteWrite.tmpDataPath=/tmpData - -promscrape.cluster.membersCount=2 # - -promscrape.cluster.replicationFactor=2 # \u53ef\u4ee5\u914d\u7f6e\u526f\u672c\u6570 - -promscrape.cluster.memberNum=$(POD_NAME) - -remoteWrite.url=http://vminsert:8480/insert/0/prometheus - -envflag.enable=true - -envflag.prefix=VM_ - -loggerFormat=json ports: - name: http containerPort: 8429 env: - name: POD_NAME valueFrom: fieldRef: fieldPath: metadata.name volumeMounts: - name: tmpdata mountPath: /tmpData - name: config mountPath: /config volumes: - name: config configMap: name: vmagent-config volumeClaimTemplates: - metadata: name: tmpdata spec: accessModes: - ReadWriteOnce storageClassName: nfs-client resources: requests: storage: 1Gi \u6211\u4eec\u8fd9\u91cc\u5c31\u4f7f\u7528 StatefulSet \u7684\u5f62\u5f0f\u6765\u7ba1\u7406 vmagent\uff0c\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u5373\u53ef\uff1a # \u5148\u5c06\u524d\u9762\u793a\u4f8b\u4e2d\u7684 prometheus \u505c\u6389 \u2638 \u279c kubectl scale deploy prometheus --replicas=0 -n kube-vm \u2638 \u279c kubectl apply -f vmagent-rbac.yaml \u2638 \u279c kubectl apply -f vmagent-config.yaml \u2638 \u279c kubectl apply -f vmagent-sts.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=vmagent NAME READY STATUS RESTARTS AGE vmagent-0 1/1 Running 0 3m43s vmagent-1 1/1 Running 0 2m9s \u8fd9\u91cc\u6211\u4eec\u90e8\u7f72\u4e86\u4e24\u4e2a vmagent \u5b9e\u4f8b\u6765\u6293\u53d6\u76d1\u63a7\u6307\u6807\uff0c\u6211\u4eec\u8fd9\u91cc\u4e00\u5171 3 \u4e2a\u8282\u70b9\u3002 \u2638 \u279c kubectl get nodes NAME STATUS ROLES AGE VERSION master1 Ready control-plane,master 44d v1.22.8 node1 Ready <none> 44d v1.22.8 node2 Ready <none> 44d v1.22.8 \u6240\u4ee5\u4e24\u4e2a vmagent \u5b9e\u4f8b\u4f1a\u5206\u522b\u91c7\u96c6\u90e8\u5206\u6307\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u65e5\u5fd7\u6765\u8fdb\u884c\u9a8c\u8bc1\uff1a \u2638 \u279c kubectl logs -f vmagent-0 -n kube-vm # ...... {\"ts\":\"2022-05-10T04:44:44.004Z\",\"level\":\"info\",\"caller\":\"VictoriaMetrics/lib/promscrape/scraper.go:393\",\"msg\":\"static_configs: added targets: 1, removed targets: 0; total targets: 1\"} {\"ts\":\"2022-05-10T04:44:44.006Z\",\"level\":\"info\",\"caller\":\"VictoriaMetrics/lib/promscrape/scraper.go:393\",\"msg\":\"kubernetes_sd_configs: added targets: 2, removed targets: 0; total targets: 2\"} \u2638 \u279c kubectl logs -f vmagent-1 -n kube-vm # ...... {\"ts\":\"2022-05-10T04:46:17.893Z\",\"level\":\"info\",\"caller\":\"VictoriaMetrics/lib/promscrape/scraper.go:393\",\"msg\":\"kubernetes_sd_configs: added targets: 1, removed targets: 0; total targets: 1\"} \u4ece\u65e5\u5fd7\u53ef\u4ee5\u770b\u51fa vmagent-0 \u5b9e\u4f8b\u53d1\u73b0\u4e86 2 \u4e2a targets\uff0c vmagent-1 \u5b9e\u4f8b\u53d1\u73b0\u4e86 1 \u4e2a targets\uff0c\u8fd9\u4e5f\u7b26\u5408\u6211\u4eec\u9884\u671f\u7684\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u518d\u65b0\u589e\u5176\u4ed6\u5185\u5bb9\u7684\u76d1\u63a7\uff0c\u6bd4\u5982 APIServer\u3001\u5bb9\u5668\u7b49\u7b49\uff0c\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a # vmagent-config2.yaml apiVersion: v1 kind: ConfigMap metadata: name: vmagent-config namespace: kube-vm data: scrape.yml: | global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: nodes kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: \"(.*):10250\" replacement: \"${1}:9111\" target_label: __address__ action: replace - action: labelmap regex: __meta_kubernetes_node_label_(.+) - job_name: apiserver scheme: https bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt insecure_skip_verify: true kubernetes_sd_configs: - role: endpoints relabel_configs: - action: keep regex: default;kubernetes;https source_labels: - __meta_kubernetes_namespace - __meta_kubernetes_service_name - __meta_kubernetes_endpoint_port_name - job_name: cadvisor bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt insecure_skip_verify: true kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - replacement: /metrics/cadvisor target_label: __metrics_path__ - job_name: endpoints kubernetes_sd_configs: - role: endpoints relabel_configs: - action: drop regex: true source_labels: - __meta_kubernetes_pod_container_init - action: keep_if_equal source_labels: - __meta_kubernetes_service_annotation_prometheus_io_port - __meta_kubernetes_pod_container_port_number - action: keep regex: true source_labels: - __meta_kubernetes_service_annotation_prometheus_io_scrape - action: replace regex: (https?) source_labels: - __meta_kubernetes_service_annotation_prometheus_io_scheme target_label: __scheme__ - action: replace regex: (.+) source_labels: - __meta_kubernetes_service_annotation_prometheus_io_path target_label: __metrics_path__ - action: replace regex: ([^:]+)(?::\\d+)?;(\\d+) replacement: $1:$2 source_labels: - __address__ - __meta_kubernetes_service_annotation_prometheus_io_port target_label: __address__ - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: - __meta_kubernetes_pod_name target_label: pod - source_labels: - __meta_kubernetes_namespace target_label: namespace - source_labels: - __meta_kubernetes_service_name target_label: service - replacement: ${1} source_labels: - __meta_kubernetes_service_name target_label: job - action: replace source_labels: - __meta_kubernetes_pod_node_name target_label: node \u5927\u90e8\u5206\u7684\u914d\u7f6e\u5728\u524d\u9762 Prometheus \u7ae0\u8282\u90fd\u4ecb\u7ecd\u8fc7\u4e86\uff0c\u6838\u5fc3\u5c31\u662f\u901a\u8fc7 relabel_configs \u6765\u63a7\u5236\u6293\u53d6\u7684\u4efb\u52a1\uff0cvmagent \u662f\u517c\u5bb9\u4f20\u7edf\u7684 prometheus \u91cd\u65b0\u6807\u8bb0\u89c4\u5219\u7684\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u72ec\u7279\u7684 action\uff0c\u6bd4\u5982\u4e0a\u9762\u914d\u7f6e\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a keep_if_equal \u7684\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u7684\u610f\u601d\u662f\u5982\u679c\u6307\u5b9a\u7684\u6807\u7b7e\u503c\u76f8\u7b49\u5219\u5c06\u8be5\u6761\u6570\u636e\u4fdd\u7559\u4e0b\u6765\u3002 \u6709\u65f6\uff0c\u5982\u679c\u67d0\u4e2a\u6307\u6807\u5305\u542b\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u503c\u7684\u6807\u7b7e\uff0c\u5219\u9700\u8981\u5220\u9664\u5b83\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7 vmagent \u652f\u6301\u7684 drop_if_equal \u64cd\u4f5c\u6765\u5b8c\u6210\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4ee5\u4e0b relabel \u89c4\u5219\u5305\u542b real_port \u548c required_port \u7684\u76f8\u540c\u6807\u7b7e\u503c\uff0c\u5219\u5b83\u4f1a\u5220\u9664\u6307\u6807\uff1a - action: drop_if_equal source_labels: [real_port, needed_port] \u8be5\u89c4\u5219\u5c06\u5220\u9664\u4ee5\u4e0b\u6307\u6807\uff1a foo{real_port=\"123\",needed_port=\"123\"} \uff0c\u4f46\u4f1a\u4fdd\u7559\u4ee5\u4e0b\u6307\u6807\uff1a foo{real_port=\"123\",needed_port=\"456\"} \u3002 \u6709\u65f6\u53ef\u80fd\u9700\u8981\u53ea\u5bf9\u6307\u6807\u5b50\u96c6\u5e94\u7528 relabel\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06 if \u9009\u9879\u6dfb\u52a0\u5230 relabel_configs \u89c4\u5219\u4e2d\uff0c\u4f8b\u5982\u4ee5\u4e0b\u89c4\u5219\u4ec5\u5c06 {foo=\"bar\"} \u6807\u7b7e\u6dfb\u52a0\u5230\u4e0e metric{label=~\"x|y\"} \u5e8f\u5217\u9009\u62e9\u5668\u5339\u914d\u7684\u6307\u6807\uff1a - if: 'metric{label=~\"x|y\"}' target_label: \"foo\" replacement: \"bar\" if \u9009\u9879\u53ef\u4ee5\u7b80\u5316\u4f20\u7edf\u7684 relabel_configs \u89c4\u5219\uff0c\u4f8b\u5982\uff0c\u4ee5\u4e0b\u89c4\u5219\u53ef\u4ee5\u5220\u9664\u4e0e foo{bar=\"baz\"} \u5e8f\u5217\u9009\u62e9\u5668\u5339\u914d\u7684\u6307\u6807\uff1a - if: 'foo{bar=\"baz\"}' action: drop \u8fd9\u76f8\u5f53\u4e8e\u4ee5\u4e0b\u4f20\u7edf\u7684\u89c4\u5219\uff1a - action: drop source_labels: [__name__, bar] regex: \"foo;baz\" \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f Prometheus \u8fd8\u4e0d\u652f\u6301 if \u9009\u9879\uff0c\u73b0\u5728\u53ea\u652f\u6301 VictoriaMetrics \u3002 \u73b0\u5728\u66f4\u65b0 vmagent \u7684\u914d\u7f6e\u3002 \u2638 \u279c kubectl apply -f vmagent-config2.yaml \u914d\u7f6e\u5237\u65b0\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u53d1\u9001 SUGHUP \u4fe1\u53f7\u7ed9 vmagent \u8fdb\u7a0b \u5411 http://vmagent:8429/-/reload \u53d1\u9001\u4e00\u4e2a http \u8bf7\u6c42 \u5237\u65b0\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u91c7\u96c6\u4e0a\u9762\u7684\u6307\u6807\u4e86\uff0c\u540c\u6837\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 http://vmselect/select/0/vmui/ \u6765\u8bbf\u95ee vmui\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6765\u67e5\u8be2 pod \u7684\u5185\u5b58\u4f7f\u7528\u7387\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u67e5\u8be2\u8bed\u53e5\uff1a sum(container_memory_working_set_bytes{image!=\"\"}) by(namespace, pod) / sum(container_spec_memory_limit_bytes{image!=\"\"}) by(namespace, pod) * 100 != +inf vmagent \u4f5c\u4e3a\u91c7\u96c6\u6307\u6807\u91cd\u8981\u7684\u4e00\u73af\uff0c\u5f53\u7136\u5bf9\u5b83\u7684\u76d1\u63a7\u4e5f\u4e0d\u53ef\u5c11\u3002vmagent \u901a\u8fc7 http://vmagent:8429/metrics \u66b4\u9732\u4e86\u5f88\u591a\u6307\u6807\uff0c\u5982 vmagent_remotewrite_conns \u8fdc\u7a0b\u5b58\u50a8\u8fde\u63a5\uff0c vm_allowed_memory_bytes \u53ef\u4f7f\u7528\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u6211\u4eec\u628a\u4e00\u4e9b\u91cd\u8981\u7684\u6307\u6807\u6536\u96c6\u8d77\u6765\uff0c\u901a\u8fc7 Grafana \u8fdb\u884c\u5c55\u793a\uff0c\u80fd\u591f\u66f4\u597d\u7684\u5e2e\u52a9\u6211\u4eec\u5206\u6790 vmagent \u7684\u72b6\u6001\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 https://grafana.com/grafana/dashboards/12683 \u6765\u5c55\u793a vmagent \u7684\u72b6\u6001\u3002","title":"\u7b2c\u56db\u8282 \u4f7f\u7528vmagent\u4ee3\u66ffPrometheus\u91c7\u96c6\u76d1\u63a7\u6307\u6807"},{"location":"chap12/70vm_vmagent/#vmagentprometheus","text":"vmagent \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4ece\u5404\u79cd\u6765\u6e90\u6536\u96c6\u6307\u6807\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728 VM \u6216\u8005\u4efb\u4f55\u5176\u4ed6\u652f\u6301 remote write \u534f\u8bae\u7684 Prometheus \u517c\u5bb9\u7684\u5b58\u50a8\u7cfb\u7edf\u4e2d\u3002","title":"\u7b2c\u56db\u8282 \u4f7f\u7528vmagent\u4ee3\u66ffPrometheus\u91c7\u96c6\u76d1\u63a7\u6307\u6807"},{"location":"chap12/70vm_vmagent/#1","text":"vmagent \u76f8\u6bd4\u4e8e Prometheus \u6293\u53d6\u6307\u6807\u6765\u8bf4\u5177\u6709\u66f4\u591a\u7684\u7075\u6d3b\u6027\uff0c\u6bd4\u5982\u9664\u4e86\u62c9\u53d6\uff08pull\uff09\u6307\u6807\u8fd8\u53ef\u4ee5\u63a8\u9001\uff08push\uff09\u6307\u6807\uff0c\u6b64\u5916\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7279\u6027\uff1a \u53ef\u4ee5\u66ff\u6362 prometheus \u7684 scraping target \u652f\u6301\u4ece Kafka \u8bfb\u5199\u6570\u636e \u652f\u6301\u57fa\u4e8e prometheus relabeling \u7684\u6a21\u5f0f\u6dfb\u52a0\u3001\u79fb\u9664\u3001\u4fee\u6539 labels\uff0c\u53ef\u4ee5\u5728\u6570\u636e\u53d1\u9001\u5230\u8fdc\u7aef\u5b58\u50a8\u4e4b\u524d\u8fdb\u884c\u6570\u636e\u7684\u8fc7\u6ee4 \u652f\u6301\u591a\u79cd\u6570\u636e\u534f\u8bae\uff0cinflux line \u534f\u8bae\uff0cgraphite \u6587\u672c\u534f\u8bae\uff0copentsdb \u534f\u8bae\uff0cprometheus remote write \u534f\u8bae\uff0cjson lines \u534f\u8bae\uff0ccsv \u6570\u636e\u7b49 \u652f\u6301\u6536\u96c6\u6570\u636e\u7684\u540c\u65f6\uff0c\u5e76\u590d\u5236\u5230\u591a\u79cd\u8fdc\u7aef\u5b58\u50a8\u7cfb\u7edf \u652f\u6301\u4e0d\u53ef\u9760\u8fdc\u7aef\u5b58\u50a8\uff0c\u5982\u679c\u8fdc\u7a0b\u5b58\u50a8\u4e0d\u53ef\u7528\uff0c\u6536\u96c6\u7684\u6307\u6807\u4f1a\u5728 -remoteWrite.tmpDataPath \u7f13\u51b2\uff0c\u4e00\u65e6\u4e0e\u8fdc\u7a0b\u5b58\u50a8\u7684\u8fde\u63a5\u88ab\u4fee\u590d\uff0c\u7f13\u51b2\u7684\u6307\u6807\u5c31\u4f1a\u88ab\u53d1\u9001\u5230\u8fdc\u7a0b\u5b58\u50a8\uff0c\u7f13\u51b2\u533a\u7684\u6700\u5927\u78c1\u76d8\u7528\u91cf\u53ef\u4ee5\u7528 -remoteWrite.maxDiskUsagePerURL \u6765\u9650\u5236 \u3002 \u76f8\u6bd4 prometheus \u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58\u3001cpu\u3001\u78c1\u76d8 io \u4ee5\u53ca\u7f51\u7edc\u5e26\u5bbd \u5f53\u9700\u8981\u6293\u53d6\u5927\u91cf\u76ee\u6807\u65f6\uff0c\u6293\u53d6\u76ee\u6807\u53ef\u4ee5\u5206\u6563\u5230\u591a\u4e2a vmagent \u5b9e\u4f8b\u4e2d \u53ef\u4ee5\u901a\u8fc7\u5728\u6293\u53d6\u65f6\u95f4\u548c\u5c06\u5176\u53d1\u9001\u5230\u8fdc\u7a0b\u5b58\u50a8\u7cfb\u7edf\u4e4b\u524d\u9650\u5236\u552f\u4e00\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u91cf\u6765\u5904\u7406\u9ad8\u57fa\u6570\u548c\u9ad8\u6d41\u5931\u7387\u95ee\u9898 \u53ef\u4ee5\u4ece\u591a\u4e2a\u6587\u4ef6\u4e2d\u52a0\u8f7d scrape \u914d\u7f6e","title":"1 \u7279\u6027"},{"location":"chap12/70vm_vmagent/#1_1","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u4ee5\u6293\u53d6 Kubernetes \u96c6\u7fa4\u6307\u6807\u4e3a\u4f8b\u8bf4\u660e\u5982\u4f55\u4f7f\u7528 vmagent\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u81ea\u52a8\u53d1\u73b0\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u914d\u7f6e\u3002vmagent \u662f\u517c\u5bb9 prometheus \u4e2d\u7684 kubernetes_sd_configs \u914d\u7f6e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u3002 \u8981\u8ba9 vmagent \u81ea\u52a8\u53d1\u73b0\u76d1\u63a7\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u9700\u8981\u8bbf\u95ee APIServer \u83b7\u53d6\u8d44\u6e90\u5bf9\u8c61\uff0c\u6240\u4ee5\u9996\u5148\u9700\u8981\u914d\u7f6e rbac \u6743\u9650\uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u6e05\u5355\u3002 # vmagent-rbac.yaml apiVersion: v1 kind: ServiceAccount metadata: name: vmagent namespace: kube-vm --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: vmagent rules: - apiGroups: [\"\", \"networking.k8s.io\", \"extensions\"] resources: - nodes - nodes/metrics - services - endpoints - endpointslices - pods - app - ingresses verbs: [\"get\", \"list\", \"watch\"] - apiGroups: [\"\"] resources: - namespaces - configmaps verbs: [\"get\"] - nonResourceURLs: [\"/metrics\", \"/metrics/resources\"] verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: vmagent roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: vmagent subjects: - kind: ServiceAccount name: vmagent namespace: kube-vm \u7136\u540e\u6dfb\u52a0 vmagent \u914d\u7f6e\uff0c\u6211\u4eec\u5148\u53ea\u914d\u7f6e\u81ea\u52a8\u53d1\u73b0 Kubernetes \u8282\u70b9\u7684\u4efb\u52a1\uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684 ConfigMap \u5bf9\u8c61\uff1a # vmagent-config.yaml apiVersion: v1 kind: ConfigMap metadata: name: vmagent-config namespace: kube-vm data: scrape.yml: | global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: nodes kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: \"(.*):10250\" replacement: \"${1}:9111\" target_label: __address__ action: replace - action: labelmap regex: __meta_kubernetes_node_label_(.+) \u8fd9\u91cc\u6211\u4eec\u901a\u8fc7\u81ea\u52a8\u53d1\u73b0 Kubernetes \u8282\u70b9\u83b7\u53d6\u8282\u70b9\u76d1\u63a7\u6307\u6807\uff0c\u9700\u8981\u6ce8\u610f node \u8fd9\u79cd role \u7684\u81ea\u52a8\u53d1\u73b0\u9ed8\u8ba4\u83b7\u53d6\u7684\u662f\u8282\u70b9\u7684 10250 \u7aef\u53e3\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u901a\u8fc7 relabel \u5c06\u5176 replace \u4e3a 9111\u3002 \u7136\u540e\u6dfb\u52a0 vmagent \u90e8\u7f72\u8d44\u6e90\u6e05\u5355\uff0c\u5982\u4e0b\u6240\u793a\uff1a # vmagent-deploy.yaml apiVersion: v1 kind: PersistentVolumeClaim metadata: name: vmagent-pvc namespace: kube-vm spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi storageClassName: nfs-client --- apiVersion: apps/v1 kind: Deployment metadata: name: vmagent namespace: kube-vm labels: app: vmagent spec: selector: matchLabels: app: vmagent template: metadata: labels: app: vmagent spec: serviceAccountName: vmagent containers: - name: agent image: \"victoriametrics/vmagent:v1.77.0\" imagePullPolicy: IfNotPresent args: - -promscrape.config=/config/scrape.yml - -remoteWrite.tmpDataPath=/tmpData - -remoteWrite.url=http://vminsert:8480/insert/0/prometheus - -envflag.enable=true - -envflag.prefix=VM_ - -loggerFormat=json ports: - name: http containerPort: 8429 volumeMounts: - name: tmpdata mountPath: /tmpData - name: config mountPath: /config volumes: - name: tmpdata persistentVolumeClaim: claimName: vmagent-pvc - name: config configMap: name: vmagent-config \u6211\u4eec\u5c06 vmagent \u914d\u7f6e\u901a\u8fc7 ConfigMap \u6302\u8f7d\u5230\u5bb9\u5668 /config/scrape.yml \uff0c\u53e6\u5916\u901a\u8fc7 -remoteWrite.url=http://vminsert:8480/insert/0/prometheus \u6307\u5b9a\u8fdc\u7a0b\u5199\u5165\u7684\u5730\u5740\uff0c\u8fd9\u91cc\u6211\u4eec\u5199\u5165\u524d\u9762\u7684 vminsert \u670d\u52a1\uff0c\u53e6\u5916\u6709\u4e00\u4e2a\u53c2\u6570 -remoteWrite.tmpDataPath \uff0c\u8be5\u8def\u5f84\u4f1a\u5728\u8fdc\u7a0b\u5b58\u50a8\u4e0d\u53ef\u7528\u7684\u65f6\u5019\u7528\u6765\u7f13\u5b58\u6536\u96c6\u7684\u6307\u6807\uff0c\u5f53\u8fdc\u7a0b\u5b58\u50a8\u4fee\u590d\u540e\uff0c\u7f13\u5b58\u7684\u6307\u6807\u5c31\u4f1a\u88ab\u6b63\u5e38\u53d1\u9001\u5230\u8fdc\u7a0b\u5199\u5165\uff0c\u6240\u4ee5\u6700\u597d\u6301\u4e45\u5316\u8be5\u76ee\u5f55\u3002","title":"1 \u90e8\u7f72"},{"location":"chap12/70vm_vmagent/#2","text":"\u5355\u4e2a vmagent \u5b9e\u4f8b\u53ef\u4ee5\u6293\u53d6\u6570\u4e07\u4e2a\u6293\u53d6\u76ee\u6807\uff0c\u4f46\u662f\u6709\u65f6\u7531\u4e8e CPU\u3001\u7f51\u7edc\u3001\u5185\u5b58\u7b49\u65b9\u9762\u7684\u9650\u5236\uff0c\u8fd9\u8fd8\u4e0d\u591f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6293\u53d6\u76ee\u6807\u53ef\u4ee5\u5728\u591a\u4e2a vmagent \u5b9e\u4f8b\u4e4b\u95f4\u8fdb\u884c\u62c6\u5206\u3002\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a vmagent \u5b9e\u4f8b\u5fc5\u987b\u4f7f\u7528\u5177\u6709\u4e0d\u540c -promscrape.cluster.memberNum \u503c\u7684\u76f8\u540c -promscrape.config \u914d\u7f6e\u6587\u4ef6\uff0c\u8be5\u53c2\u6570\u503c\u5fc5\u987b\u5728 0 ... N-1 \u8303\u56f4\u5185\uff0c\u5176\u4e2d N \u662f\u96c6\u7fa4\u4e2d vmagent \u5b9e\u4f8b\u7684\u6570\u91cf\u3002\u96c6\u7fa4\u4e2d vmagent \u5b9e\u4f8b\u7684\u6570\u91cf\u5fc5\u987b\u4f20\u9012\u7ed9 -promscrape.cluster.membersCount \u547d\u4ee4\u884c\u6807\u5fd7\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5728\u4e24\u4e2a vmagent \u5b9e\u4f8b\u7684\u96c6\u7fa4\u4e2d\u4f20\u64ad\u6293\u53d6\u76ee\u6807\uff1a vmagent -promscrape.cluster.membersCount=2 -promscrape.cluster.memberNum=0 -promscrape.config=/path/config.yml ... vmagent -promscrape.cluster.membersCount=2 -promscrape.cluster.memberNum=1 -promscrape.config=/path/config.yml ... \u5f53 vmagent \u5728 Kubernetes \u4e2d\u8fd0\u884c\u65f6\uff0c\u53ef\u4ee5\u5c06 -promscrape.cluster.memberNum \u8bbe\u7f6e\u4e3a StatefulSet pod \u540d\u79f0\uff0cpod \u540d\u79f0\u5fc5\u987b\u4ee5 0 ... promscrape.cluster.memberNum-1 \u8303\u56f4\u5185\u7684\u6570\u5b57\u7ed3\u5c3e\uff0c\u4f8b\u5982\uff0c -promscrape.cluster.memberNum=vmagent-0 \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u6293\u53d6\u76ee\u6807\u4ec5\u7531\u96c6\u7fa4\u4e2d\u7684\u5355\u4e2a vmagent \u5b9e\u4f8b\u6293\u53d6\u3002\u5982\u679c\u9700\u8981\u5728\u591a\u4e2a vmagent \u5b9e\u4f8b\u4e4b\u95f4\u590d\u5236\u6293\u53d6\u76ee\u6807\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 -promscrape.cluster.replicationFactor \u53c2\u6570\u8bbe\u7f6e\u4e3a\u6240\u9700\u7684\u526f\u672c\u6570\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8\u4e00\u4e2a\u5305\u542b\u4e09\u4e2a vmagent \u5b9e\u4f8b\u7684\u96c6\u7fa4\uff0c\u5176\u4e2d\u6bcf\u4e2a\u76ee\u6807\u7531\u4e24\u4e2a vmagent \u5b9e\u4f8b\u6293\u53d6\uff1a vmagent -promscrape.cluster.membersCount=3 -promscrape.cluster.replicationFactor=2 -promscrape.cluster.memberNum=0 -promscrape.config=/path/to/config.yml ... vmagent -promscrape.cluster.membersCount=3 -promscrape.cluster.replicationFactor=2 -promscrape.cluster.memberNum=1 -promscrape.config=/path/to/config.yml ... vmagent -promscrape.cluster.membersCount=3 -promscrape.cluster.replicationFactor=2 -promscrape.cluster.memberNum=2 -promscrape.config=/path/to/config.yml ... \u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u6bcf\u4e2a\u76ee\u6807\u88ab\u591a\u4e2a vmagent \u5b9e\u4f8b\u6293\u53d6\uff0c\u5219\u5fc5\u987b\u5728 -remoteWrite.url \u6307\u5411\u7684\u8fdc\u7a0b\u5b58\u50a8\u4e0a\u542f\u7528\u91cd\u590d\u6570\u636e\u5220\u9664\u3002 \u6240\u4ee5\u5982\u679c\u4f60\u6293\u53d6\u7684\u76d1\u63a7\u76ee\u6807\u975e\u5e38\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5efa\u8bae\u4f7f\u7528 vmagent \u96c6\u7fa4\u6a21\u5f0f\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 StatefulSet \u65b9\u5f0f\u8fdb\u884c\u90e8\u7f72 # vmagent-sts.yaml apiVersion: v1 kind: Service metadata: name: vmagent namespace: kube-vm annotations: prometheus.io/scrape: \"true\" prometheus.io/port: \"8429\" spec: selector: app: vmagent clusterIP: None ports: - name: http port: 8429 targetPort: http --- apiVersion: apps/v1 kind: StatefulSet metadata: name: vmagent namespace: kube-vm labels: app: vmagent spec: replicas: 2 serviceName: vmagent selector: matchLabels: app: vmagent template: metadata: labels: app: vmagent spec: serviceAccountName: vmagent containers: - name: agent image: victoriametrics/vmagent:v1.77.0 imagePullPolicy: IfNotPresent args: - -promscrape.config=/config/scrape.yml - -remoteWrite.tmpDataPath=/tmpData - -promscrape.cluster.membersCount=2 # - -promscrape.cluster.replicationFactor=2 # \u53ef\u4ee5\u914d\u7f6e\u526f\u672c\u6570 - -promscrape.cluster.memberNum=$(POD_NAME) - -remoteWrite.url=http://vminsert:8480/insert/0/prometheus - -envflag.enable=true - -envflag.prefix=VM_ - -loggerFormat=json ports: - name: http containerPort: 8429 env: - name: POD_NAME valueFrom: fieldRef: fieldPath: metadata.name volumeMounts: - name: tmpdata mountPath: /tmpData - name: config mountPath: /config volumes: - name: config configMap: name: vmagent-config volumeClaimTemplates: - metadata: name: tmpdata spec: accessModes: - ReadWriteOnce storageClassName: nfs-client resources: requests: storage: 1Gi \u6211\u4eec\u8fd9\u91cc\u5c31\u4f7f\u7528 StatefulSet \u7684\u5f62\u5f0f\u6765\u7ba1\u7406 vmagent\uff0c\u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u8d44\u6e90\u5373\u53ef\uff1a # \u5148\u5c06\u524d\u9762\u793a\u4f8b\u4e2d\u7684 prometheus \u505c\u6389 \u2638 \u279c kubectl scale deploy prometheus --replicas=0 -n kube-vm \u2638 \u279c kubectl apply -f vmagent-rbac.yaml \u2638 \u279c kubectl apply -f vmagent-config.yaml \u2638 \u279c kubectl apply -f vmagent-sts.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=vmagent NAME READY STATUS RESTARTS AGE vmagent-0 1/1 Running 0 3m43s vmagent-1 1/1 Running 0 2m9s \u8fd9\u91cc\u6211\u4eec\u90e8\u7f72\u4e86\u4e24\u4e2a vmagent \u5b9e\u4f8b\u6765\u6293\u53d6\u76d1\u63a7\u6307\u6807\uff0c\u6211\u4eec\u8fd9\u91cc\u4e00\u5171 3 \u4e2a\u8282\u70b9\u3002 \u2638 \u279c kubectl get nodes NAME STATUS ROLES AGE VERSION master1 Ready control-plane,master 44d v1.22.8 node1 Ready <none> 44d v1.22.8 node2 Ready <none> 44d v1.22.8 \u6240\u4ee5\u4e24\u4e2a vmagent \u5b9e\u4f8b\u4f1a\u5206\u522b\u91c7\u96c6\u90e8\u5206\u6307\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u65e5\u5fd7\u6765\u8fdb\u884c\u9a8c\u8bc1\uff1a \u2638 \u279c kubectl logs -f vmagent-0 -n kube-vm # ...... {\"ts\":\"2022-05-10T04:44:44.004Z\",\"level\":\"info\",\"caller\":\"VictoriaMetrics/lib/promscrape/scraper.go:393\",\"msg\":\"static_configs: added targets: 1, removed targets: 0; total targets: 1\"} {\"ts\":\"2022-05-10T04:44:44.006Z\",\"level\":\"info\",\"caller\":\"VictoriaMetrics/lib/promscrape/scraper.go:393\",\"msg\":\"kubernetes_sd_configs: added targets: 2, removed targets: 0; total targets: 2\"} \u2638 \u279c kubectl logs -f vmagent-1 -n kube-vm # ...... {\"ts\":\"2022-05-10T04:46:17.893Z\",\"level\":\"info\",\"caller\":\"VictoriaMetrics/lib/promscrape/scraper.go:393\",\"msg\":\"kubernetes_sd_configs: added targets: 1, removed targets: 0; total targets: 1\"} \u4ece\u65e5\u5fd7\u53ef\u4ee5\u770b\u51fa vmagent-0 \u5b9e\u4f8b\u53d1\u73b0\u4e86 2 \u4e2a targets\uff0c vmagent-1 \u5b9e\u4f8b\u53d1\u73b0\u4e86 1 \u4e2a targets\uff0c\u8fd9\u4e5f\u7b26\u5408\u6211\u4eec\u9884\u671f\u7684\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u518d\u65b0\u589e\u5176\u4ed6\u5185\u5bb9\u7684\u76d1\u63a7\uff0c\u6bd4\u5982 APIServer\u3001\u5bb9\u5668\u7b49\u7b49\uff0c\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a # vmagent-config2.yaml apiVersion: v1 kind: ConfigMap metadata: name: vmagent-config namespace: kube-vm data: scrape.yml: | global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: nodes kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: \"(.*):10250\" replacement: \"${1}:9111\" target_label: __address__ action: replace - action: labelmap regex: __meta_kubernetes_node_label_(.+) - job_name: apiserver scheme: https bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt insecure_skip_verify: true kubernetes_sd_configs: - role: endpoints relabel_configs: - action: keep regex: default;kubernetes;https source_labels: - __meta_kubernetes_namespace - __meta_kubernetes_service_name - __meta_kubernetes_endpoint_port_name - job_name: cadvisor bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt insecure_skip_verify: true kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - replacement: /metrics/cadvisor target_label: __metrics_path__ - job_name: endpoints kubernetes_sd_configs: - role: endpoints relabel_configs: - action: drop regex: true source_labels: - __meta_kubernetes_pod_container_init - action: keep_if_equal source_labels: - __meta_kubernetes_service_annotation_prometheus_io_port - __meta_kubernetes_pod_container_port_number - action: keep regex: true source_labels: - __meta_kubernetes_service_annotation_prometheus_io_scrape - action: replace regex: (https?) source_labels: - __meta_kubernetes_service_annotation_prometheus_io_scheme target_label: __scheme__ - action: replace regex: (.+) source_labels: - __meta_kubernetes_service_annotation_prometheus_io_path target_label: __metrics_path__ - action: replace regex: ([^:]+)(?::\\d+)?;(\\d+) replacement: $1:$2 source_labels: - __address__ - __meta_kubernetes_service_annotation_prometheus_io_port target_label: __address__ - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: - __meta_kubernetes_pod_name target_label: pod - source_labels: - __meta_kubernetes_namespace target_label: namespace - source_labels: - __meta_kubernetes_service_name target_label: service - replacement: ${1} source_labels: - __meta_kubernetes_service_name target_label: job - action: replace source_labels: - __meta_kubernetes_pod_node_name target_label: node \u5927\u90e8\u5206\u7684\u914d\u7f6e\u5728\u524d\u9762 Prometheus \u7ae0\u8282\u90fd\u4ecb\u7ecd\u8fc7\u4e86\uff0c\u6838\u5fc3\u5c31\u662f\u901a\u8fc7 relabel_configs \u6765\u63a7\u5236\u6293\u53d6\u7684\u4efb\u52a1\uff0cvmagent \u662f\u517c\u5bb9\u4f20\u7edf\u7684 prometheus \u91cd\u65b0\u6807\u8bb0\u89c4\u5219\u7684\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u72ec\u7279\u7684 action\uff0c\u6bd4\u5982\u4e0a\u9762\u914d\u7f6e\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a keep_if_equal \u7684\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u7684\u610f\u601d\u662f\u5982\u679c\u6307\u5b9a\u7684\u6807\u7b7e\u503c\u76f8\u7b49\u5219\u5c06\u8be5\u6761\u6570\u636e\u4fdd\u7559\u4e0b\u6765\u3002 \u6709\u65f6\uff0c\u5982\u679c\u67d0\u4e2a\u6307\u6807\u5305\u542b\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u503c\u7684\u6807\u7b7e\uff0c\u5219\u9700\u8981\u5220\u9664\u5b83\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7 vmagent \u652f\u6301\u7684 drop_if_equal \u64cd\u4f5c\u6765\u5b8c\u6210\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4ee5\u4e0b relabel \u89c4\u5219\u5305\u542b real_port \u548c required_port \u7684\u76f8\u540c\u6807\u7b7e\u503c\uff0c\u5219\u5b83\u4f1a\u5220\u9664\u6307\u6807\uff1a - action: drop_if_equal source_labels: [real_port, needed_port] \u8be5\u89c4\u5219\u5c06\u5220\u9664\u4ee5\u4e0b\u6307\u6807\uff1a foo{real_port=\"123\",needed_port=\"123\"} \uff0c\u4f46\u4f1a\u4fdd\u7559\u4ee5\u4e0b\u6307\u6807\uff1a foo{real_port=\"123\",needed_port=\"456\"} \u3002 \u6709\u65f6\u53ef\u80fd\u9700\u8981\u53ea\u5bf9\u6307\u6807\u5b50\u96c6\u5e94\u7528 relabel\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06 if \u9009\u9879\u6dfb\u52a0\u5230 relabel_configs \u89c4\u5219\u4e2d\uff0c\u4f8b\u5982\u4ee5\u4e0b\u89c4\u5219\u4ec5\u5c06 {foo=\"bar\"} \u6807\u7b7e\u6dfb\u52a0\u5230\u4e0e metric{label=~\"x|y\"} \u5e8f\u5217\u9009\u62e9\u5668\u5339\u914d\u7684\u6307\u6807\uff1a - if: 'metric{label=~\"x|y\"}' target_label: \"foo\" replacement: \"bar\" if \u9009\u9879\u53ef\u4ee5\u7b80\u5316\u4f20\u7edf\u7684 relabel_configs \u89c4\u5219\uff0c\u4f8b\u5982\uff0c\u4ee5\u4e0b\u89c4\u5219\u53ef\u4ee5\u5220\u9664\u4e0e foo{bar=\"baz\"} \u5e8f\u5217\u9009\u62e9\u5668\u5339\u914d\u7684\u6307\u6807\uff1a - if: 'foo{bar=\"baz\"}' action: drop \u8fd9\u76f8\u5f53\u4e8e\u4ee5\u4e0b\u4f20\u7edf\u7684\u89c4\u5219\uff1a - action: drop source_labels: [__name__, bar] regex: \"foo;baz\" \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f Prometheus \u8fd8\u4e0d\u652f\u6301 if \u9009\u9879\uff0c\u73b0\u5728\u53ea\u652f\u6301 VictoriaMetrics \u3002 \u73b0\u5728\u66f4\u65b0 vmagent \u7684\u914d\u7f6e\u3002 \u2638 \u279c kubectl apply -f vmagent-config2.yaml \u914d\u7f6e\u5237\u65b0\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u53d1\u9001 SUGHUP \u4fe1\u53f7\u7ed9 vmagent \u8fdb\u7a0b \u5411 http://vmagent:8429/-/reload \u53d1\u9001\u4e00\u4e2a http \u8bf7\u6c42 \u5237\u65b0\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u91c7\u96c6\u4e0a\u9762\u7684\u6307\u6807\u4e86\uff0c\u540c\u6837\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 http://vmselect/select/0/vmui/ \u6765\u8bbf\u95ee vmui\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6765\u67e5\u8be2 pod \u7684\u5185\u5b58\u4f7f\u7528\u7387\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u67e5\u8be2\u8bed\u53e5\uff1a sum(container_memory_working_set_bytes{image!=\"\"}) by(namespace, pod) / sum(container_spec_memory_limit_bytes{image!=\"\"}) by(namespace, pod) * 100 != +inf vmagent \u4f5c\u4e3a\u91c7\u96c6\u6307\u6807\u91cd\u8981\u7684\u4e00\u73af\uff0c\u5f53\u7136\u5bf9\u5b83\u7684\u76d1\u63a7\u4e5f\u4e0d\u53ef\u5c11\u3002vmagent \u901a\u8fc7 http://vmagent:8429/metrics \u66b4\u9732\u4e86\u5f88\u591a\u6307\u6807\uff0c\u5982 vmagent_remotewrite_conns \u8fdc\u7a0b\u5b58\u50a8\u8fde\u63a5\uff0c vm_allowed_memory_bytes \u53ef\u4f7f\u7528\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u6211\u4eec\u628a\u4e00\u4e9b\u91cd\u8981\u7684\u6307\u6807\u6536\u96c6\u8d77\u6765\uff0c\u901a\u8fc7 Grafana \u8fdb\u884c\u5c55\u793a\uff0c\u80fd\u591f\u66f4\u597d\u7684\u5e2e\u52a9\u6211\u4eec\u5206\u6790 vmagent \u7684\u72b6\u6001\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 https://grafana.com/grafana/dashboards/12683 \u6765\u5c55\u793a vmagent \u7684\u72b6\u6001\u3002","title":"2 \u96c6\u7fa4\u6a21\u5f0f"},{"location":"chap12/71vm_operator/","text":"\u7b2c\u4e94\u8282 \u4f7f\u7528Victoria Metrics Operator\u7ba1\u7406VM\u96c6\u7fa4 Operator \u6211\u4eec\u77e5\u9053\u662f Kubernetes \u7684\u4e00\u5927\u6740\u5668\uff0c\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u5e94\u7528\u7684\u5b89\u88c5\u3001\u914d\u7f6e\u548c\u7ba1\u7406\uff0c\u540c\u6837\u5bf9\u4e8e VictoriaMetrics \u5b98\u65b9\u4e5f\u5f00\u53d1\u4e86\u4e00\u4e2a\u5bf9\u5e94\u7684 Operator \u6765\u8fdb\u884c\u7ba1\u7406 - vm-operator \uff0c\u5b83\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u7075\u611f\u6765\u81ea prometheus-operator \uff0c\u5b83\u662f\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u76d1\u63a7\u914d\u7f6e\u7684\u7edd\u4f73\u5de5\u5177\u3002 vm-operator \u5b9a\u4e49\u4e86\u5982\u4e0b\u4e00\u4e9b CRD\uff1a VMCluster \uff1a\u5b9a\u4e49 VM \u96c6\u7fa4 VMAgent \uff1a\u5b9a\u4e49 vmagent \u5b9e\u4f8b VMServiceScrape \uff1a\u5b9a\u4e49\u4ece Service \u652f\u6301\u7684 Pod \u4e2d\u6293\u53d6\u6307\u6807\u914d\u7f6e VMPodScrape \uff1a\u5b9a\u4e49\u4ece Pod \u4e2d\u6293\u53d6\u6307\u6807\u914d\u7f6e VMRule \uff1a\u5b9a\u4e49\u62a5\u8b66\u548c\u8bb0\u5f55\u89c4\u5219 VMProbe \uff1a\u4f7f\u7528 blackbox exporter \u4e3a\u76ee\u6807\u5b9a\u4e49\u63a2\u6d4b\u914d\u7f6e \u6b64\u5916\u8be5 Operator \u9ed8\u8ba4\u8fd8\u53ef\u4ee5\u8bc6\u522b prometheus-operator \u4e2d\u7684 ServiceMonitor \u3001 PodMonitor \u3001 PrometheusRule \u548c Probe \u5bf9\u8c61\uff0c\u8fd8\u5141\u8bb8\u4f60\u4f7f\u7528 CRD \u5bf9\u8c61\u6765\u7ba1\u7406 Kubernetes \u96c6\u7fa4\u5185\u7684 VM \u5e94\u7528\u3002 1 \u5b89\u88c5 vm-operator \u63d0\u4f9b\u4e86 Helm Charts \u5305\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 Helm \u6765\u8fdb\u884c\u4e00\u952e\u5b89\u88c5\uff1a \u2638 \u279c helm repo add vm https://victoriametrics.github.io/helm-charts/ \u2638 \u279c helm repo update \u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u5b9a\u5236 values \u503c\uff0c\u9ed8\u8ba4\u7684 values.yaml \u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u83b7\u5f97\uff1a \u2638 \u279c helm show values vm/victoria-metrics-operator > values.yaml \u6211\u4eec\u8fd9\u91cc\u53ea\u5bf9\u4e0b\u9762\u7684\u5185\u5bb9\u505a\u4e86\u4fee\u6539\uff1a # values.yaml rbac: create: true pspEnabled: false # \u4e0d\u521b\u5efapsp operator: # -- \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cvm-operator\u4f1a\u8f6c\u6362prometheus-operator\u5bf9\u8c61 disable_prometheus_converter: false # -- \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cvm-operator\u4f1a\u4e3a\u5b83\u7684\u5bf9\u8c61\u521b\u5efapsp psp_auto_creation_enabled: false # -- \u542f\u7528\u8f6c\u6362\u540e\u7684 prometheus-operator \u5bf9\u8c61\u7684\u6240\u6709\u6743\u5f15\u7528\uff0c\u5982\u679c\u5220\u9664 prometheus \u5bf9\u8c61\uff0c\u5b83\u5c06\u5220\u9664\u76f8\u5e94\u7684 victoria-metrics \u5bf9\u8c61\u3002 enable_converter_ownership: false # -- Enables custom config-reloader, bundled with operator. # It should reduce vmagent and vmauth config sync-time and make it predictable. useCustomConfigReloader: true # -- \u662f\u5426\u5f00\u542f\u8d44\u6e90\u6821\u9a8c\u7684\u51c6\u5165\u63a7\u5236\u5668(\u751f\u4ea7\u73af\u5883\u5efa\u8bae\u5f00\u542f) # admissionWebhooks: # # -- Enables validation webhook. # enabled: false # # -- What to do in case, when operator not available to validate request. # policy: Fail # # -- Enables custom ca bundle, if you are not using cert-manager. # # -- in case of custom ca, you have to create secret - {{chart-name}}-validation # # -- with keys: tls.key, tls.crt, ca.crt # caBundle: \"\" # certManager: # # -- Enables cert creation and injection by cert-manager. # enabled: false # # --If needed, provide own issuer. Operator will create self-signed if empty. # issuer: {} \u7136\u540e\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\u4e00\u952e\u5b89\u88c5 vm-operator\uff1a \u2638 \u279c helm upgrade --install victoria-metrics-operator vm/victoria-metrics-operator -f values.yaml -n vm-operator --create-namespace NAME: victoria-metrics-operator LAST DEPLOYED: Tue May 17 15:51:40 2022 NAMESPACE: vm-operator STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: victoria-metrics-operator has been installed. Check its status by running: kubectl --namespace vm-operator get pods -l \"app.kubernetes.io/instance=victoria-metrics-operator\" Get more information on https://github.com/VictoriaMetrics/helm-charts/tree/master/charts/victoria-metrics-operator. See \"Getting started guide for VM Operator\" on https://docs.victoriametrics.com/guides/getting-started-w \u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u67e5\u770b vm-operator \u7684\u72b6\u6001\u6765\u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a \u2638 \u279c helm ls -n vm-operator NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION victoria-metrics-operator vm-operator 1 2022-05-17 15:53:14.60667 +0800 CST deployed victoria-metrics-operator-0.9.0 0.24.0 \u2638 \u279c kubectl --namespace vm-operator get pods -l \"app.kubernetes.io/instance=victoria-metrics-operator\" NAME READY STATUS RESTARTS AGE victoria-metrics-operator-d467cf69c-glh6v 1/1 Running 0 2m58s 2 \u90e8\u7f72 VM \u96c6\u7fa4 Operator \u5b89\u88c5\u5b8c\u6210\u540e\u4f1a\u5305\u542b\u5982\u4e0b\u6240\u793a\u7684\u4e00\u4e9b CRD\uff1a \u2638 \u279c kubectl get crd |grep victoriametrics vmagents.operator.victoriametrics.com 2022-05-17T07:51:42Z vmalertmanagerconfigs.operator.victoriametrics.com 2022-05-17T07:51:42Z vmalertmanagers.operator.victoriametrics.com 2022-05-17T07:51:42Z vmalerts.operator.victoriametrics.com 2022-05-17T07:51:42Z vmauths.operator.victoriametrics.com 2022-05-17T07:51:42Z vmclusters.operator.victoriametrics.com 2022-05-17T07:51:42Z vmnodescrapes.operator.victoriametrics.com 2022-05-17T07:51:42Z vmpodscrapes.operator.victoriametrics.com 2022-05-17T07:51:42Z vmprobes.operator.victoriametrics.com 2022-05-17T07:51:42Z vmrules.operator.victoriametrics.com 2022-05-17T07:51:42Z vmservicescrapes.operator.victoriametrics.com 2022-05-17T07:51:42Z vmsingles.operator.victoriametrics.com 2022-05-17T07:51:42Z vmstaticscrapes.operator.victoriametrics.com 2022-05-17T07:51:42Z vmusers.operator.victoriametrics.com 2022-05-17T07:51:42Z \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u8981\u6765\u90e8\u7f72 VM\uff0c \u5982\u679c\u53ea\u662f\u60f3\u8981\u5355\u8282\u70b9\u6a21\u5f0f\u5219\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 VMSingle \u5bf9\u8c61 \uff0c\u5982\u679c\u8981\u90e8\u7f72\u4e00\u5957 VM \u7684\u96c6\u7fa4\u5219\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 VMCluster \u6765\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u5373\u53ef\uff0c\u5b8c\u5168\u4e0d\u9700\u8981\u6211\u4eec\u53bb\u624b\u52a8\u521b\u5efa\u5404\u4e2a\u7ec4\u4ef6\uff0cOperator \u4f1a\u6839\u636e\u6211\u4eec\u7684\u5b9a\u4e49\u53bb\u5e2e\u6211\u4eec\u62c9\u8d77\u4e00\u5957\u96c6\u7fa4\u8d77\u6765\u3002 \u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 VMCluster \u5bf9\u8c61\uff1a # vmcluster-demo.yaml apiVersion: operator.victoriametrics.com/v1beta1 kind: VMCluster metadata: name: vmcluster-demo spec: replicationFactor: 1 retentionPeriod: \"1w\" vmstorage: replicaCount: 2 storage: volumeClaimTemplate: spec: accessModes: - ReadWriteOnce resources: requests: storage: 10G storageClassName: nfs-client storageDataPath: /vm-data vmselect: replicaCount: 2 cacheMountPath: /cache storage: volumeClaimTemplate: spec: storageClassName: nfs-client accessModes: - ReadWriteOnce resources: requests: storage: 1G vminsert: replicaCount: 2 \u8fd9\u91cc\u6211\u4eec\u901a\u8fc7 spec.retentionPeriod \u6307\u5b9a\u4e86\u6570\u636e\u4fdd\u7559\u7684\u65f6\u957f\u4e3a 1 \u5468\uff0c replicaCount \u7528\u6765\u6307\u5b9a\u5404\u4e2a\u7ec4\u4ef6\u7684\u526f\u672c\u6570\u4e3a 2\uff0c\u901a\u8fc7 storage.volumeClaimTemplate \u6307\u5b9a\u4e86\u6570\u636e\u6301\u4e45\u5316\u7684 PVC \u6a21\u677f\uff0c\u6574\u4e2a\u5bf9\u8c61\u53ef\u914d\u7f6e\u7684\u5c5e\u6027\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl explain \u6765\u83b7\u53d6\uff1a \u2638 \u279c kubectl explain VMCluster.spec KIND: VMCluster VERSION: operator.victoriametrics.com/v1beta1 RESOURCE: spec <Object> DESCRIPTION: VMClusterSpec defines the desired state of VMCluster FIELDS: clusterVersion <string> ClusterVersion defines default images tag for all components. it can be overwritten with component specific image.tag value. imagePullSecrets <[]Object> ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod podSecurityPolicyName <string> PodSecurityPolicyName - defines name for podSecurityPolicy in case of empty value, prefixedName will be used. replicationFactor <integer> ReplicationFactor defines how many copies of data make among distinct storage nodes retentionPeriod <string> -required- RetentionPeriod for the stored metrics Note VictoriaMetrics has data/ and indexdb/ folders metrics from data/ removed eventually as soon as partition leaves retention period reverse index data at indexdb rotates once at the half of configured retention period https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#retention serviceAccountName <string> ServiceAccountName is the name of the ServiceAccount to use to run the VMSelect Pods. vminsert <Object> vmselect <Object> vmstorage <Object> \u540c\u6837\u8981\u60f3\u83b7\u53d6\u7ec4\u4ef6\u53ef\u4ee5\u5b9a\u4e49\u7684\u5c5e\u6027\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8be5\u65b9\u5f0f\u6765\u83b7\u53d6\uff0c\u6bd4\u5982\u67e5\u770b vmstorage \u5bf9\u8c61\u53ef\u4ee5\u914d\u7f6e\u7684\u5c5e\u6027\uff1a \u2638 \u279c kubectl explain VMCluster.spec.vmstorage KIND: VMCluster VERSION: operator.victoriametrics.com/v1beta1 RESOURCE: vmstorage <Object> DESCRIPTION: <empty> FIELDS: affinity <> Affinity If specified, the pod's scheduling constraints. configMaps <[]string> ConfigMaps is a list of ConfigMaps in the same namespace as the VMSelect object, which shall be mounted into the VMSelect Pods. The ConfigMaps are mounted into /etc/vm/configs/<configmap-name>. containers <[]> Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc. dnsConfig <Object> Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. dnsPolicy <string> DNSPolicy sets DNS policy for the pod extraArgs <map[string]string> extraEnvs <[]> ExtraEnvs that will be added to VMSelect pod hostNetwork <boolean> HostNetwork controls whether the pod may use the node network namespace image <Object> Image - docker image settings for VMStorage initContainers <[]> InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the VMSelect configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice. livenessProbe <> LivenessProbe that will be added CRD pod logFormat <string> LogFormat for VMSelect to be configured with. default or json logLevel <string> LogLevel for VMSelect to be configured with. maintenanceInsertNodeIDs <[]integer> MaintenanceInsertNodeIDs - excludes given node ids from insert requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc. lets say, you have pod-0, pod-1, pod-2, pod-3. to exclude pod-0 and pod-3 from insert routing, define nodeIDs: [0,3]. Useful at storage expanding, when you want to rebalance some data at cluster. maintenanceSelectNodeIDs <[]integer> MaintenanceInsertNodeIDs - excludes given node ids from select requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc. name <string> Name is deprecated and will be removed at 0.22.0 release nodeSelector <map[string]string> NodeSelector Define which Nodes the Pods are scheduled on. podDisruptionBudget <Object> PodDisruptionBudget created by operator podMetadata <Object> PodMetadata configures Labels and Annotations which are propagated to the VMSelect pods. port <string> Port for health check connetions priorityClassName <string> Priority class assigned to the Pods readinessProbe <> ReadinessProbe that will be added CRD pod replicaCount <integer> -required- ReplicaCount is the expected size of the VMStorage cluster. The controller will eventually make the size of the running cluster equal to the expected size. resources <Object> Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ rollingUpdateStrategy <string> RollingUpdateStrategy defines strategy for application updates Default is OnDelete, in this case operator handles update process Can be changed for RollingUpdate runtimeClassName <string> RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/ schedulerName <string> SchedulerName - defines kubernetes scheduler name secrets <[]string> Secrets is a list of Secrets in the same namespace as the VMSelect object, which shall be mounted into the VMSelect Pods. The Secrets are mounted into /etc/vm/secrets/<secret-name>. securityContext <> SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext. serviceScrapeSpec <> ServiceScrapeSpec that will be added to vmselect VMServiceScrape spec serviceSpec <Object> ServiceSpec that will be create additional service for vmstorage startupProbe <> StartupProbe that will be added to CRD pod storage <Object> Storage - add persistent volume for StorageDataPath its useful for persistent cache storageDataPath <string> StorageDataPath - path to storage data terminationGracePeriodSeconds <integer> TerminationGracePeriodSeconds period for container graceful termination tolerations <[]Object> Tolerations If specified, the pod's tolerations. topologySpreadConstraints <[]> TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/ vmBackup <Object> VMBackup configuration for backup vmInsertPort <string> VMInsertPort for VMInsert connections vmSelectPort <string> VMSelectPort for VMSelect connections volumeMounts <[]Object> VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition. VolumeMounts specified will be appended to other VolumeMounts in the VMSelect container, that are generated as a result of StorageSpec objects. volumes <[]> Volumes allows configuration of additional volumes on the output Deployment definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects. \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u5b9a\u4e49\u7684\u5bf9\u8c61\uff1a \u2638 \u279c kubectl apply -f vmcluster-demo.yaml \u2638 \u279c kubectl get vmcluster NAME INSERT COUNT STORAGE COUNT SELECT COUNT AGE STATUS vmcluster-demo 2 2 2 7m21s expanding \u5e94\u7528\u540e vm-operator \u4f1a watch \u5230\u6211\u4eec\u521b\u5efa\u4e86\u8be5 CRD \u5bf9\u8c61\uff0c\u7136\u540e\u4f1a\u6839\u636e\u6211\u4eec\u7684\u5b9a\u4e49\u53bb\u81ea\u52a8\u521b\u5efa\u5bf9\u5e94\u7684 VM \u96c6\u7fa4\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u63d0\u5230\u7684\u51e0\u4e2a\u7ec4\u4ef6\u670d\u52a1\uff1a \u2638 \u279c kubectl get pods NAME READY STATUS RESTARTS AGE vminsert-vmcluster-demo-84956d98b5-5ckft 1/1 Running 0 93s vminsert-vmcluster-demo-84956d98b5-kpcj6 1/1 Running 0 93s vmselect-vmcluster-demo-0 1/1 Running 0 3m7s vmselect-vmcluster-demo-1 1/1 Running 0 3m7s vmstorage-vmcluster-demo-0 1/1 Running 0 4m54s vmstorage-vmcluster-demo-1 1/1 Running 0 4m54s \u2638 \u279c kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE vminsert-vmcluster-demo ClusterIP 10.102.145.24 <none> 8480/TCP 4m57s vmselect-vmcluster-demo ClusterIP None <none> 8481/TCP 6m31s vmstorage-vmcluster-demo ClusterIP None <none> 8482/TCP,8400/TCP,8401/TCP 8m18s \u6211\u4eec\u53ea\u901a\u8fc7\u5b9a\u4e49\u7b80\u5355\u7684 VMCluster \u5bf9\u8c61\u5c31\u53ef\u4ee5\u6765\u7ba1\u7406 VM \u96c6\u7fa4\u4e86\uff0c\u662f\u4e0d\u662f\u975e\u5e38\u65b9\u4fbf\uff0c\u7279\u522b\u662f\u5f53\u4f60\u7ec4\u4ef6\u526f\u672c\u6570\u91cf\u975e\u5e38\u591a\u7684\u65f6\u5019\u4e0d\u9700\u8981\u6211\u4eec\u53bb\u624b\u52a8\u914d\u7f6e -storageNode \u53c2\u6570\u4e86\u3002 \u73b0\u5728 VM \u96c6\u7fa4\u5b89\u88c5\u6210\u529f\u4e86\uff0c\u4f46\u662f\u73b0\u5728\u8fd8\u6ca1\u6709\u4efb\u4f55\u6570\u636e\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u53bb\u914d\u7f6e\u76d1\u63a7\u6307\u6807\u7684\u6293\u53d6\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u53bb\u521b\u5efa\u4e00\u4e2a VMAgent \u5bf9\u8c61\u5373\u53ef\uff0c\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u8c61\uff1a # vmagent-demo.yaml apiVersion: operator.victoriametrics.com/v1beta1 kind: VMAgent metadata: name: vmagent-demo spec: serviceScrapeNamespaceSelector: {} podScrapeNamespaceSelector: {} podScrapeSelector: {} serviceScrapeSelector: {} nodeScrapeSelector: {} nodeScrapeNamespaceSelector: {} staticScrapeSelector: {} staticScrapeNamespaceSelector: {} replicaCount: 1 remoteWrite: - url: \"http://vminsert-vmcluster-demo.default.svc.cluster.local:8480/insert/0/prometheus/api/v1/write\" \u540c\u6837\u8981\u83b7\u53d6 VMAgent \u7684\u6240\u6709\u53ef\u914d\u7f6e\u7684\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7 kubectl explain VMAgent.spec \u6765\u83b7\u53d6\uff0c\u8fd9\u91cc\u6700\u4e3b\u8981\u7684\u914d\u7f6e\u5c31\u662f\u901a\u8fc7 remoteWrite.url \u6765\u6307\u5b9a\u8fdc\u7a0b\u5199\u5165\u7684 URL \u5730\u5740\uff0c\u4e5f\u5c31\u662f vminsert \u7ec4\u4ef6\u7684\u670d\u52a1\u5730\u5740\uff0c\u5176\u4ed6\u51e0\u4e2a\u5c5e\u6027\u53ef\u4ee5\u7528\u6765\u5bf9\u8981\u6293\u53d6\u7684\u6307\u6807\u8fdb\u884c\u8fc7\u6ee4\u3002 \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684 VMAgent \u5bf9\u8c61\u5373\u53ef\u5f00\u59cb\u6293\u53d6\u76d1\u63a7\u6570\u636e\uff1a \u2638 \u279c kubectl apply -f vmagent-demo.yaml \u2638 \u279c kubectl get vmagent NAME AGE vmagent-demo 6s \u521b\u5efa\u540e vm-operator \u4f1a\u6839\u636e\u5bf9\u5e94\u7684\u63cf\u8ff0\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 vmagent \u5b9e\u4f8b\uff1a \u2638 \u279c kubectl get pods -l app.kubernetes.io/name=vmagent NAME READY STATUS RESTARTS AGE vmagent-vmagent-demo-6dcc7f9dfd-hxsff 2/2 Running 0 4m24s \u53ef\u4ee5\u770b\u5230 vmagent \u6709\u4e24\u4e2a\u5bb9\u5668\uff0c\u4e00\u4e2a\u662f vmagent \u5e94\u7528\u5bb9\u5668\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u7528\u4e8e\u6302\u8f7d Secret \u5bf9\u8c61\u7684 config-reloader \u5bb9\u5668\uff0c\u5b83\u4f1a watch \u914d\u7f6e\u7684\u53d8\u5316\uff0c\u5e76\u53d1\u9001\u4fe1\u53f7\u4e3a vmagent \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\uff0c\u8be5 Secret \u5bf9\u8c61\u4e2d\u5c31\u662f\u5b9a\u4e49\u7684 vmagent \u6293\u53d6\u6307\u6807\u7684\u914d\u7f6e\u5185\u5bb9\u3002 \u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4f7f vmagent \u7684\u7aef\u53e3\u53ef\u4ee5\u4ece\u672c\u5730\u673a\u5668\u4e0a\u8bbf\u95ee\u3002 \u2638 \u279c kubectl port-forward svc/vmagent-vmagent-demo 8429:8429 Forwarding from 127.0.0.1:8429 -> 8429 Forwarding from [::1]:8429 -> 8429 \u6211\u4eec\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8429/targets \u6765\u68c0\u67e5 vmagent \u91c7\u96c6\u7684\u96c6\u7fa4\u6307\u6807\uff1a vmagent \u4f1a\u901a\u8fc7 Kubernetes \u670d\u52a1\u53d1\u73b0\u53bb\u83b7\u53d6\u9700\u8981\u6293\u53d6\u7684\u76ee\u6807\uff0c\u6b64\u670d\u52a1\u53d1\u73b0\u7531 vm-operator \u63a7\u5236 3 \u9a8c\u8bc1 VM \u96c6\u7fa4 \u63a5\u4e0b\u6765\u6211\u4eec\u5b89\u88c5 Grafana \u6765\u9a8c\u8bc1 VM \u96c6\u7fa4\uff0c\u8fd9\u91cc\u4e3a\u4e86\u7b80\u5355\u6211\u4eec\u5c31\u76f4\u63a5\u4f7f\u7528 Helm Chart \u8fdb\u884c\u5b89\u88c5\uff1a \u2638 \u279c helm repo add grafana https://grafana.github.io/helm-charts \u2638 \u279c helm repo update \u6211\u4eec\u53ef\u4ee5\u5728 values \u4e2d\u63d0\u524d\u5b9a\u4e49\u6570\u636e\u6e90\u548c\u5185\u7f6e\u4e00\u4e9b dashboard\uff0c\u5982\u4e0b\u6240\u793a\uff1a cat <<EOF | helm install grafana grafana/grafana -f - datasources: datasources.yaml: apiVersion: 1 datasources: - name: victoriametrics type: prometheus orgId: 1 url: http://vmselect-vmcluster-demo.default.svc.cluster.local:8481/select/0/prometheus/ access: proxy isDefault: true updateIntervalSeconds: 10 editable: true dashboardProviders: dashboardproviders.yaml: apiVersion: 1 providers: - name: 'default' orgId: 1 folder: '' type: file disableDeletion: true editable: true options: path: /var/lib/grafana/dashboards/default dashboards: default: victoriametrics: gnetId: 11176 revision: 18 datasource: victoriametrics vmagent: gnetId: 12683 revision: 7 datasource: victoriametrics kubernetes: gnetId: 14205 revision: 1 datasource: victoriametrics EOF NAME: grafana LAST DEPLOYED: Tue May 17 17:13:14 2022 NAMESPACE: default STATUS: deployed REVISION: 1 NOTES: 1. Get your 'admin' user password by running: kubectl get secret --namespace default grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo 2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster: grafana.default.svc.cluster.local Get the Grafana URL to visit by running these commands in the same shell: export POD_NAME=$(kubectl get pods --namespace default -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana\" -o jsonpath=\"{.items[0].metadata.name}\") kubectl --namespace default port-forward $POD_NAME 3000 3. Login with the password from step 1 and the username: admin ################################################################################# ###### WARNING: Persistence is disabled!!! You will lose your data when ##### ###### the Grafana pod is terminated. ##### ################################################################################# \u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u63d0\u793a\u7684\u547d\u4ee4\u5728\u672c\u5730\u66b4\u9732 Grafana \u670d\u52a1\uff1a \u2638 \u279c export POD_NAME=$(kubectl get pods --namespace default -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana\" -o jsonpath=\"{.items[0].metadata.name}\") kubectl --namespace default port-forward $POD_NAME 3000 Forwarding from 127.0.0.1:3000 -> 3000 Forwarding from [::1]:3000 -> 3000 \u767b\u5f55\u7684\u7528\u6237\u540d\u4e3a admin\uff0c\u5bc6\u7801\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u83b7\u53d6\uff1a \u2638 \u279c kubectl get secret --namespace default grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo \u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b victoriametrics cluster \u7684 dashboard\uff1a \u6b63\u5e38\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u9875\u9762\uff1a \u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b VMAgent \u4f1a\u91c7\u96c6 VM \u96c6\u7fa4\u76f8\u5173\u7ec4\u4ef6\u7684\u6307\u6807\uff0c\u5305\u62ec vmagent \u672c\u8eab\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6b63\u5e38\u770b\u5230 VM \u96c6\u7fa4\u7684 Dashboard\uff0c\u4f46\u662f\u6ca1\u6709\u91c7\u96c6\u5176\u4ed6\u7684\u6307\u6807\uff0c\u6bd4\u5982 node-exporter \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 Grafana \u4e2d\u5bfc\u5165 16098 \u8fd9\u4e2a dashboard\uff1a \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 VMNodeScrape \u8fd9\u4e2a CRD \u5bf9\u8c61\u6765\u8fdb\u884c\u5b9a\u4e49\uff0cVMNodeScrape \u5bf9\u8c61\u53ef\u4ee5\u7528\u6765\u81ea\u52a8\u53d1\u73b0 Kubernetes \u8282\u70b9\uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u5bf9\u8c61\u6765\u91c7\u96c6 node-exporter \u6307\u6807\uff1a # vmnode-exporter-scrape.yaml apiVersion: operator.victoriametrics.com/v1beta1 kind: VMNodeScrape metadata: name: node-exporter spec: path: /metrics port: \"9111\" # \u6307\u5b9a node-exporter \u7684\u7aef\u53e3 scrape_interval: 15s # relabelConfigs\uff1a # relabel\u914d\u7f6e # selector: # \u8fc7\u6ee4\u8282\u70b9 \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u5bf9\u8c61\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f vmnode-exporter-scrape.yaml \u2638 \u279c kubectl get vmnodescrape NAME AGE node-exporter 19s \u521b\u5efa\u540e vmagent \u5c31\u4f1a\u81ea\u52a8\u53bb\u8bc6\u522b\u8be5\u5bf9\u8c61\u53bb\u5bf9 node-exporter \u8fdb\u884c\u6293\u53d6\u4e86\uff1a \u8fd9\u4e2a\u65f6\u5019\u518d\u53bb\u67e5\u770b node-exporter \u7684 dashboard \u5c31\u6b63\u5e38\u4e86\uff1a \u6b64\u5916\u8fd8\u53ef\u4ee5\u901a\u8fc7 VMServiceScrape \u53bb\u5b9a\u4e49\u8981\u6293\u53d6\u7684 Service \u670d\u52a1\uff08Endpoints\uff09\uff0c\u5b83\u57fa\u4e8e\u9009\u62e9\u5668\u4e3a vmagent \u751f\u6210\u6293\u53d6\u914d\u7f6e\uff0c\u5982\u679c\u60f3\u8981\u6293\u53d6\u6ca1\u6709\u5b9a\u4e49 Service \u7684 Pod \u7684\u6307\u6807\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 VMPodScrape \u6765\u8fdb\u884c\u5b9a\u4e49\uff0c\u540c\u6837\u8fd8\u6709\u62a5\u8b66\u76f8\u5173\u7684\u4e5f\u90fd\u6709\u76f8\u5e94\u7684 CRD \u6765\u8fdb\u884c\u7ba1\u7406\u3002vm-operator \u5927\u5927\u964d\u4f4e\u4e86\u6211\u4eec\u5bf9 VM \u96c6\u7fa4\u7684\u7ba1\u7406\uff0c\u975e\u5e38\u63a8\u8350\u4f7f\u7528\u3002","title":"\u7b2c\u4e94\u8282 \u4f7f\u7528Victoria Metrics Operator\u7ba1\u7406VM\u96c6\u7fa4"},{"location":"chap12/71vm_operator/#victoria-metrics-operatorvm","text":"Operator \u6211\u4eec\u77e5\u9053\u662f Kubernetes \u7684\u4e00\u5927\u6740\u5668\uff0c\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u5e94\u7528\u7684\u5b89\u88c5\u3001\u914d\u7f6e\u548c\u7ba1\u7406\uff0c\u540c\u6837\u5bf9\u4e8e VictoriaMetrics \u5b98\u65b9\u4e5f\u5f00\u53d1\u4e86\u4e00\u4e2a\u5bf9\u5e94\u7684 Operator \u6765\u8fdb\u884c\u7ba1\u7406 - vm-operator \uff0c\u5b83\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u7075\u611f\u6765\u81ea prometheus-operator \uff0c\u5b83\u662f\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u76d1\u63a7\u914d\u7f6e\u7684\u7edd\u4f73\u5de5\u5177\u3002 vm-operator \u5b9a\u4e49\u4e86\u5982\u4e0b\u4e00\u4e9b CRD\uff1a VMCluster \uff1a\u5b9a\u4e49 VM \u96c6\u7fa4 VMAgent \uff1a\u5b9a\u4e49 vmagent \u5b9e\u4f8b VMServiceScrape \uff1a\u5b9a\u4e49\u4ece Service \u652f\u6301\u7684 Pod \u4e2d\u6293\u53d6\u6307\u6807\u914d\u7f6e VMPodScrape \uff1a\u5b9a\u4e49\u4ece Pod \u4e2d\u6293\u53d6\u6307\u6807\u914d\u7f6e VMRule \uff1a\u5b9a\u4e49\u62a5\u8b66\u548c\u8bb0\u5f55\u89c4\u5219 VMProbe \uff1a\u4f7f\u7528 blackbox exporter \u4e3a\u76ee\u6807\u5b9a\u4e49\u63a2\u6d4b\u914d\u7f6e \u6b64\u5916\u8be5 Operator \u9ed8\u8ba4\u8fd8\u53ef\u4ee5\u8bc6\u522b prometheus-operator \u4e2d\u7684 ServiceMonitor \u3001 PodMonitor \u3001 PrometheusRule \u548c Probe \u5bf9\u8c61\uff0c\u8fd8\u5141\u8bb8\u4f60\u4f7f\u7528 CRD \u5bf9\u8c61\u6765\u7ba1\u7406 Kubernetes \u96c6\u7fa4\u5185\u7684 VM \u5e94\u7528\u3002","title":"\u7b2c\u4e94\u8282 \u4f7f\u7528Victoria Metrics Operator\u7ba1\u7406VM\u96c6\u7fa4"},{"location":"chap12/71vm_operator/#1","text":"vm-operator \u63d0\u4f9b\u4e86 Helm Charts \u5305\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 Helm \u6765\u8fdb\u884c\u4e00\u952e\u5b89\u88c5\uff1a \u2638 \u279c helm repo add vm https://victoriametrics.github.io/helm-charts/ \u2638 \u279c helm repo update \u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u5b9a\u5236 values \u503c\uff0c\u9ed8\u8ba4\u7684 values.yaml \u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u83b7\u5f97\uff1a \u2638 \u279c helm show values vm/victoria-metrics-operator > values.yaml \u6211\u4eec\u8fd9\u91cc\u53ea\u5bf9\u4e0b\u9762\u7684\u5185\u5bb9\u505a\u4e86\u4fee\u6539\uff1a # values.yaml rbac: create: true pspEnabled: false # \u4e0d\u521b\u5efapsp operator: # -- \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cvm-operator\u4f1a\u8f6c\u6362prometheus-operator\u5bf9\u8c61 disable_prometheus_converter: false # -- \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cvm-operator\u4f1a\u4e3a\u5b83\u7684\u5bf9\u8c61\u521b\u5efapsp psp_auto_creation_enabled: false # -- \u542f\u7528\u8f6c\u6362\u540e\u7684 prometheus-operator \u5bf9\u8c61\u7684\u6240\u6709\u6743\u5f15\u7528\uff0c\u5982\u679c\u5220\u9664 prometheus \u5bf9\u8c61\uff0c\u5b83\u5c06\u5220\u9664\u76f8\u5e94\u7684 victoria-metrics \u5bf9\u8c61\u3002 enable_converter_ownership: false # -- Enables custom config-reloader, bundled with operator. # It should reduce vmagent and vmauth config sync-time and make it predictable. useCustomConfigReloader: true # -- \u662f\u5426\u5f00\u542f\u8d44\u6e90\u6821\u9a8c\u7684\u51c6\u5165\u63a7\u5236\u5668(\u751f\u4ea7\u73af\u5883\u5efa\u8bae\u5f00\u542f) # admissionWebhooks: # # -- Enables validation webhook. # enabled: false # # -- What to do in case, when operator not available to validate request. # policy: Fail # # -- Enables custom ca bundle, if you are not using cert-manager. # # -- in case of custom ca, you have to create secret - {{chart-name}}-validation # # -- with keys: tls.key, tls.crt, ca.crt # caBundle: \"\" # certManager: # # -- Enables cert creation and injection by cert-manager. # enabled: false # # --If needed, provide own issuer. Operator will create self-signed if empty. # issuer: {} \u7136\u540e\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\u4e00\u952e\u5b89\u88c5 vm-operator\uff1a \u2638 \u279c helm upgrade --install victoria-metrics-operator vm/victoria-metrics-operator -f values.yaml -n vm-operator --create-namespace NAME: victoria-metrics-operator LAST DEPLOYED: Tue May 17 15:51:40 2022 NAMESPACE: vm-operator STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: victoria-metrics-operator has been installed. Check its status by running: kubectl --namespace vm-operator get pods -l \"app.kubernetes.io/instance=victoria-metrics-operator\" Get more information on https://github.com/VictoriaMetrics/helm-charts/tree/master/charts/victoria-metrics-operator. See \"Getting started guide for VM Operator\" on https://docs.victoriametrics.com/guides/getting-started-w \u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u67e5\u770b vm-operator \u7684\u72b6\u6001\u6765\u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a \u2638 \u279c helm ls -n vm-operator NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION victoria-metrics-operator vm-operator 1 2022-05-17 15:53:14.60667 +0800 CST deployed victoria-metrics-operator-0.9.0 0.24.0 \u2638 \u279c kubectl --namespace vm-operator get pods -l \"app.kubernetes.io/instance=victoria-metrics-operator\" NAME READY STATUS RESTARTS AGE victoria-metrics-operator-d467cf69c-glh6v 1/1 Running 0 2m58s","title":"1 \u5b89\u88c5"},{"location":"chap12/71vm_operator/#2-vm","text":"Operator \u5b89\u88c5\u5b8c\u6210\u540e\u4f1a\u5305\u542b\u5982\u4e0b\u6240\u793a\u7684\u4e00\u4e9b CRD\uff1a \u2638 \u279c kubectl get crd |grep victoriametrics vmagents.operator.victoriametrics.com 2022-05-17T07:51:42Z vmalertmanagerconfigs.operator.victoriametrics.com 2022-05-17T07:51:42Z vmalertmanagers.operator.victoriametrics.com 2022-05-17T07:51:42Z vmalerts.operator.victoriametrics.com 2022-05-17T07:51:42Z vmauths.operator.victoriametrics.com 2022-05-17T07:51:42Z vmclusters.operator.victoriametrics.com 2022-05-17T07:51:42Z vmnodescrapes.operator.victoriametrics.com 2022-05-17T07:51:42Z vmpodscrapes.operator.victoriametrics.com 2022-05-17T07:51:42Z vmprobes.operator.victoriametrics.com 2022-05-17T07:51:42Z vmrules.operator.victoriametrics.com 2022-05-17T07:51:42Z vmservicescrapes.operator.victoriametrics.com 2022-05-17T07:51:42Z vmsingles.operator.victoriametrics.com 2022-05-17T07:51:42Z vmstaticscrapes.operator.victoriametrics.com 2022-05-17T07:51:42Z vmusers.operator.victoriametrics.com 2022-05-17T07:51:42Z \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u8981\u6765\u90e8\u7f72 VM\uff0c \u5982\u679c\u53ea\u662f\u60f3\u8981\u5355\u8282\u70b9\u6a21\u5f0f\u5219\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 VMSingle \u5bf9\u8c61 \uff0c\u5982\u679c\u8981\u90e8\u7f72\u4e00\u5957 VM \u7684\u96c6\u7fa4\u5219\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 VMCluster \u6765\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u5373\u53ef\uff0c\u5b8c\u5168\u4e0d\u9700\u8981\u6211\u4eec\u53bb\u624b\u52a8\u521b\u5efa\u5404\u4e2a\u7ec4\u4ef6\uff0cOperator \u4f1a\u6839\u636e\u6211\u4eec\u7684\u5b9a\u4e49\u53bb\u5e2e\u6211\u4eec\u62c9\u8d77\u4e00\u5957\u96c6\u7fa4\u8d77\u6765\u3002 \u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 VMCluster \u5bf9\u8c61\uff1a # vmcluster-demo.yaml apiVersion: operator.victoriametrics.com/v1beta1 kind: VMCluster metadata: name: vmcluster-demo spec: replicationFactor: 1 retentionPeriod: \"1w\" vmstorage: replicaCount: 2 storage: volumeClaimTemplate: spec: accessModes: - ReadWriteOnce resources: requests: storage: 10G storageClassName: nfs-client storageDataPath: /vm-data vmselect: replicaCount: 2 cacheMountPath: /cache storage: volumeClaimTemplate: spec: storageClassName: nfs-client accessModes: - ReadWriteOnce resources: requests: storage: 1G vminsert: replicaCount: 2 \u8fd9\u91cc\u6211\u4eec\u901a\u8fc7 spec.retentionPeriod \u6307\u5b9a\u4e86\u6570\u636e\u4fdd\u7559\u7684\u65f6\u957f\u4e3a 1 \u5468\uff0c replicaCount \u7528\u6765\u6307\u5b9a\u5404\u4e2a\u7ec4\u4ef6\u7684\u526f\u672c\u6570\u4e3a 2\uff0c\u901a\u8fc7 storage.volumeClaimTemplate \u6307\u5b9a\u4e86\u6570\u636e\u6301\u4e45\u5316\u7684 PVC \u6a21\u677f\uff0c\u6574\u4e2a\u5bf9\u8c61\u53ef\u914d\u7f6e\u7684\u5c5e\u6027\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 kubectl explain \u6765\u83b7\u53d6\uff1a \u2638 \u279c kubectl explain VMCluster.spec KIND: VMCluster VERSION: operator.victoriametrics.com/v1beta1 RESOURCE: spec <Object> DESCRIPTION: VMClusterSpec defines the desired state of VMCluster FIELDS: clusterVersion <string> ClusterVersion defines default images tag for all components. it can be overwritten with component specific image.tag value. imagePullSecrets <[]Object> ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod podSecurityPolicyName <string> PodSecurityPolicyName - defines name for podSecurityPolicy in case of empty value, prefixedName will be used. replicationFactor <integer> ReplicationFactor defines how many copies of data make among distinct storage nodes retentionPeriod <string> -required- RetentionPeriod for the stored metrics Note VictoriaMetrics has data/ and indexdb/ folders metrics from data/ removed eventually as soon as partition leaves retention period reverse index data at indexdb rotates once at the half of configured retention period https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#retention serviceAccountName <string> ServiceAccountName is the name of the ServiceAccount to use to run the VMSelect Pods. vminsert <Object> vmselect <Object> vmstorage <Object> \u540c\u6837\u8981\u60f3\u83b7\u53d6\u7ec4\u4ef6\u53ef\u4ee5\u5b9a\u4e49\u7684\u5c5e\u6027\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8be5\u65b9\u5f0f\u6765\u83b7\u53d6\uff0c\u6bd4\u5982\u67e5\u770b vmstorage \u5bf9\u8c61\u53ef\u4ee5\u914d\u7f6e\u7684\u5c5e\u6027\uff1a \u2638 \u279c kubectl explain VMCluster.spec.vmstorage KIND: VMCluster VERSION: operator.victoriametrics.com/v1beta1 RESOURCE: vmstorage <Object> DESCRIPTION: <empty> FIELDS: affinity <> Affinity If specified, the pod's scheduling constraints. configMaps <[]string> ConfigMaps is a list of ConfigMaps in the same namespace as the VMSelect object, which shall be mounted into the VMSelect Pods. The ConfigMaps are mounted into /etc/vm/configs/<configmap-name>. containers <[]> Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc. dnsConfig <Object> Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. dnsPolicy <string> DNSPolicy sets DNS policy for the pod extraArgs <map[string]string> extraEnvs <[]> ExtraEnvs that will be added to VMSelect pod hostNetwork <boolean> HostNetwork controls whether the pod may use the node network namespace image <Object> Image - docker image settings for VMStorage initContainers <[]> InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the VMSelect configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice. livenessProbe <> LivenessProbe that will be added CRD pod logFormat <string> LogFormat for VMSelect to be configured with. default or json logLevel <string> LogLevel for VMSelect to be configured with. maintenanceInsertNodeIDs <[]integer> MaintenanceInsertNodeIDs - excludes given node ids from insert requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc. lets say, you have pod-0, pod-1, pod-2, pod-3. to exclude pod-0 and pod-3 from insert routing, define nodeIDs: [0,3]. Useful at storage expanding, when you want to rebalance some data at cluster. maintenanceSelectNodeIDs <[]integer> MaintenanceInsertNodeIDs - excludes given node ids from select requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc. name <string> Name is deprecated and will be removed at 0.22.0 release nodeSelector <map[string]string> NodeSelector Define which Nodes the Pods are scheduled on. podDisruptionBudget <Object> PodDisruptionBudget created by operator podMetadata <Object> PodMetadata configures Labels and Annotations which are propagated to the VMSelect pods. port <string> Port for health check connetions priorityClassName <string> Priority class assigned to the Pods readinessProbe <> ReadinessProbe that will be added CRD pod replicaCount <integer> -required- ReplicaCount is the expected size of the VMStorage cluster. The controller will eventually make the size of the running cluster equal to the expected size. resources <Object> Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ rollingUpdateStrategy <string> RollingUpdateStrategy defines strategy for application updates Default is OnDelete, in this case operator handles update process Can be changed for RollingUpdate runtimeClassName <string> RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/ schedulerName <string> SchedulerName - defines kubernetes scheduler name secrets <[]string> Secrets is a list of Secrets in the same namespace as the VMSelect object, which shall be mounted into the VMSelect Pods. The Secrets are mounted into /etc/vm/secrets/<secret-name>. securityContext <> SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext. serviceScrapeSpec <> ServiceScrapeSpec that will be added to vmselect VMServiceScrape spec serviceSpec <Object> ServiceSpec that will be create additional service for vmstorage startupProbe <> StartupProbe that will be added to CRD pod storage <Object> Storage - add persistent volume for StorageDataPath its useful for persistent cache storageDataPath <string> StorageDataPath - path to storage data terminationGracePeriodSeconds <integer> TerminationGracePeriodSeconds period for container graceful termination tolerations <[]Object> Tolerations If specified, the pod's tolerations. topologySpreadConstraints <[]> TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/ vmBackup <Object> VMBackup configuration for backup vmInsertPort <string> VMInsertPort for VMInsert connections vmSelectPort <string> VMSelectPort for VMSelect connections volumeMounts <[]Object> VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition. VolumeMounts specified will be appended to other VolumeMounts in the VMSelect container, that are generated as a result of StorageSpec objects. volumes <[]> Volumes allows configuration of additional volumes on the output Deployment definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects. \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u5b9a\u4e49\u7684\u5bf9\u8c61\uff1a \u2638 \u279c kubectl apply -f vmcluster-demo.yaml \u2638 \u279c kubectl get vmcluster NAME INSERT COUNT STORAGE COUNT SELECT COUNT AGE STATUS vmcluster-demo 2 2 2 7m21s expanding \u5e94\u7528\u540e vm-operator \u4f1a watch \u5230\u6211\u4eec\u521b\u5efa\u4e86\u8be5 CRD \u5bf9\u8c61\uff0c\u7136\u540e\u4f1a\u6839\u636e\u6211\u4eec\u7684\u5b9a\u4e49\u53bb\u81ea\u52a8\u521b\u5efa\u5bf9\u5e94\u7684 VM \u96c6\u7fa4\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u63d0\u5230\u7684\u51e0\u4e2a\u7ec4\u4ef6\u670d\u52a1\uff1a \u2638 \u279c kubectl get pods NAME READY STATUS RESTARTS AGE vminsert-vmcluster-demo-84956d98b5-5ckft 1/1 Running 0 93s vminsert-vmcluster-demo-84956d98b5-kpcj6 1/1 Running 0 93s vmselect-vmcluster-demo-0 1/1 Running 0 3m7s vmselect-vmcluster-demo-1 1/1 Running 0 3m7s vmstorage-vmcluster-demo-0 1/1 Running 0 4m54s vmstorage-vmcluster-demo-1 1/1 Running 0 4m54s \u2638 \u279c kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE vminsert-vmcluster-demo ClusterIP 10.102.145.24 <none> 8480/TCP 4m57s vmselect-vmcluster-demo ClusterIP None <none> 8481/TCP 6m31s vmstorage-vmcluster-demo ClusterIP None <none> 8482/TCP,8400/TCP,8401/TCP 8m18s \u6211\u4eec\u53ea\u901a\u8fc7\u5b9a\u4e49\u7b80\u5355\u7684 VMCluster \u5bf9\u8c61\u5c31\u53ef\u4ee5\u6765\u7ba1\u7406 VM \u96c6\u7fa4\u4e86\uff0c\u662f\u4e0d\u662f\u975e\u5e38\u65b9\u4fbf\uff0c\u7279\u522b\u662f\u5f53\u4f60\u7ec4\u4ef6\u526f\u672c\u6570\u91cf\u975e\u5e38\u591a\u7684\u65f6\u5019\u4e0d\u9700\u8981\u6211\u4eec\u53bb\u624b\u52a8\u914d\u7f6e -storageNode \u53c2\u6570\u4e86\u3002 \u73b0\u5728 VM \u96c6\u7fa4\u5b89\u88c5\u6210\u529f\u4e86\uff0c\u4f46\u662f\u73b0\u5728\u8fd8\u6ca1\u6709\u4efb\u4f55\u6570\u636e\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u53bb\u914d\u7f6e\u76d1\u63a7\u6307\u6807\u7684\u6293\u53d6\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u53bb\u521b\u5efa\u4e00\u4e2a VMAgent \u5bf9\u8c61\u5373\u53ef\uff0c\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u8c61\uff1a # vmagent-demo.yaml apiVersion: operator.victoriametrics.com/v1beta1 kind: VMAgent metadata: name: vmagent-demo spec: serviceScrapeNamespaceSelector: {} podScrapeNamespaceSelector: {} podScrapeSelector: {} serviceScrapeSelector: {} nodeScrapeSelector: {} nodeScrapeNamespaceSelector: {} staticScrapeSelector: {} staticScrapeNamespaceSelector: {} replicaCount: 1 remoteWrite: - url: \"http://vminsert-vmcluster-demo.default.svc.cluster.local:8480/insert/0/prometheus/api/v1/write\" \u540c\u6837\u8981\u83b7\u53d6 VMAgent \u7684\u6240\u6709\u53ef\u914d\u7f6e\u7684\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7 kubectl explain VMAgent.spec \u6765\u83b7\u53d6\uff0c\u8fd9\u91cc\u6700\u4e3b\u8981\u7684\u914d\u7f6e\u5c31\u662f\u901a\u8fc7 remoteWrite.url \u6765\u6307\u5b9a\u8fdc\u7a0b\u5199\u5165\u7684 URL \u5730\u5740\uff0c\u4e5f\u5c31\u662f vminsert \u7ec4\u4ef6\u7684\u670d\u52a1\u5730\u5740\uff0c\u5176\u4ed6\u51e0\u4e2a\u5c5e\u6027\u53ef\u4ee5\u7528\u6765\u5bf9\u8981\u6293\u53d6\u7684\u6307\u6807\u8fdb\u884c\u8fc7\u6ee4\u3002 \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684 VMAgent \u5bf9\u8c61\u5373\u53ef\u5f00\u59cb\u6293\u53d6\u76d1\u63a7\u6570\u636e\uff1a \u2638 \u279c kubectl apply -f vmagent-demo.yaml \u2638 \u279c kubectl get vmagent NAME AGE vmagent-demo 6s \u521b\u5efa\u540e vm-operator \u4f1a\u6839\u636e\u5bf9\u5e94\u7684\u63cf\u8ff0\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 vmagent \u5b9e\u4f8b\uff1a \u2638 \u279c kubectl get pods -l app.kubernetes.io/name=vmagent NAME READY STATUS RESTARTS AGE vmagent-vmagent-demo-6dcc7f9dfd-hxsff 2/2 Running 0 4m24s \u53ef\u4ee5\u770b\u5230 vmagent \u6709\u4e24\u4e2a\u5bb9\u5668\uff0c\u4e00\u4e2a\u662f vmagent \u5e94\u7528\u5bb9\u5668\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u7528\u4e8e\u6302\u8f7d Secret \u5bf9\u8c61\u7684 config-reloader \u5bb9\u5668\uff0c\u5b83\u4f1a watch \u914d\u7f6e\u7684\u53d8\u5316\uff0c\u5e76\u53d1\u9001\u4fe1\u53f7\u4e3a vmagent \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\uff0c\u8be5 Secret \u5bf9\u8c61\u4e2d\u5c31\u662f\u5b9a\u4e49\u7684 vmagent \u6293\u53d6\u6307\u6807\u7684\u914d\u7f6e\u5185\u5bb9\u3002 \u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4f7f vmagent \u7684\u7aef\u53e3\u53ef\u4ee5\u4ece\u672c\u5730\u673a\u5668\u4e0a\u8bbf\u95ee\u3002 \u2638 \u279c kubectl port-forward svc/vmagent-vmagent-demo 8429:8429 Forwarding from 127.0.0.1:8429 -> 8429 Forwarding from [::1]:8429 -> 8429 \u6211\u4eec\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8429/targets \u6765\u68c0\u67e5 vmagent \u91c7\u96c6\u7684\u96c6\u7fa4\u6307\u6807\uff1a vmagent \u4f1a\u901a\u8fc7 Kubernetes \u670d\u52a1\u53d1\u73b0\u53bb\u83b7\u53d6\u9700\u8981\u6293\u53d6\u7684\u76ee\u6807\uff0c\u6b64\u670d\u52a1\u53d1\u73b0\u7531 vm-operator \u63a7\u5236","title":"2 \u90e8\u7f72 VM \u96c6\u7fa4"},{"location":"chap12/71vm_operator/#3-vm","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u5b89\u88c5 Grafana \u6765\u9a8c\u8bc1 VM \u96c6\u7fa4\uff0c\u8fd9\u91cc\u4e3a\u4e86\u7b80\u5355\u6211\u4eec\u5c31\u76f4\u63a5\u4f7f\u7528 Helm Chart \u8fdb\u884c\u5b89\u88c5\uff1a \u2638 \u279c helm repo add grafana https://grafana.github.io/helm-charts \u2638 \u279c helm repo update \u6211\u4eec\u53ef\u4ee5\u5728 values \u4e2d\u63d0\u524d\u5b9a\u4e49\u6570\u636e\u6e90\u548c\u5185\u7f6e\u4e00\u4e9b dashboard\uff0c\u5982\u4e0b\u6240\u793a\uff1a cat <<EOF | helm install grafana grafana/grafana -f - datasources: datasources.yaml: apiVersion: 1 datasources: - name: victoriametrics type: prometheus orgId: 1 url: http://vmselect-vmcluster-demo.default.svc.cluster.local:8481/select/0/prometheus/ access: proxy isDefault: true updateIntervalSeconds: 10 editable: true dashboardProviders: dashboardproviders.yaml: apiVersion: 1 providers: - name: 'default' orgId: 1 folder: '' type: file disableDeletion: true editable: true options: path: /var/lib/grafana/dashboards/default dashboards: default: victoriametrics: gnetId: 11176 revision: 18 datasource: victoriametrics vmagent: gnetId: 12683 revision: 7 datasource: victoriametrics kubernetes: gnetId: 14205 revision: 1 datasource: victoriametrics EOF NAME: grafana LAST DEPLOYED: Tue May 17 17:13:14 2022 NAMESPACE: default STATUS: deployed REVISION: 1 NOTES: 1. Get your 'admin' user password by running: kubectl get secret --namespace default grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo 2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster: grafana.default.svc.cluster.local Get the Grafana URL to visit by running these commands in the same shell: export POD_NAME=$(kubectl get pods --namespace default -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana\" -o jsonpath=\"{.items[0].metadata.name}\") kubectl --namespace default port-forward $POD_NAME 3000 3. Login with the password from step 1 and the username: admin ################################################################################# ###### WARNING: Persistence is disabled!!! You will lose your data when ##### ###### the Grafana pod is terminated. ##### ################################################################################# \u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u63d0\u793a\u7684\u547d\u4ee4\u5728\u672c\u5730\u66b4\u9732 Grafana \u670d\u52a1\uff1a \u2638 \u279c export POD_NAME=$(kubectl get pods --namespace default -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana\" -o jsonpath=\"{.items[0].metadata.name}\") kubectl --namespace default port-forward $POD_NAME 3000 Forwarding from 127.0.0.1:3000 -> 3000 Forwarding from [::1]:3000 -> 3000 \u767b\u5f55\u7684\u7528\u6237\u540d\u4e3a admin\uff0c\u5bc6\u7801\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u83b7\u53d6\uff1a \u2638 \u279c kubectl get secret --namespace default grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo \u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b victoriametrics cluster \u7684 dashboard\uff1a \u6b63\u5e38\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u9875\u9762\uff1a \u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b VMAgent \u4f1a\u91c7\u96c6 VM \u96c6\u7fa4\u76f8\u5173\u7ec4\u4ef6\u7684\u6307\u6807\uff0c\u5305\u62ec vmagent \u672c\u8eab\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6b63\u5e38\u770b\u5230 VM \u96c6\u7fa4\u7684 Dashboard\uff0c\u4f46\u662f\u6ca1\u6709\u91c7\u96c6\u5176\u4ed6\u7684\u6307\u6807\uff0c\u6bd4\u5982 node-exporter \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 Grafana \u4e2d\u5bfc\u5165 16098 \u8fd9\u4e2a dashboard\uff1a \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 VMNodeScrape \u8fd9\u4e2a CRD \u5bf9\u8c61\u6765\u8fdb\u884c\u5b9a\u4e49\uff0cVMNodeScrape \u5bf9\u8c61\u53ef\u4ee5\u7528\u6765\u81ea\u52a8\u53d1\u73b0 Kubernetes \u8282\u70b9\uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684\u8d44\u6e90\u5bf9\u8c61\u6765\u91c7\u96c6 node-exporter \u6307\u6807\uff1a # vmnode-exporter-scrape.yaml apiVersion: operator.victoriametrics.com/v1beta1 kind: VMNodeScrape metadata: name: node-exporter spec: path: /metrics port: \"9111\" # \u6307\u5b9a node-exporter \u7684\u7aef\u53e3 scrape_interval: 15s # relabelConfigs\uff1a # relabel\u914d\u7f6e # selector: # \u8fc7\u6ee4\u8282\u70b9 \u76f4\u63a5\u5e94\u7528\u4e0a\u9762\u7684\u5bf9\u8c61\u5373\u53ef\uff1a \u2638 \u279c kubectl apply -f vmnode-exporter-scrape.yaml \u2638 \u279c kubectl get vmnodescrape NAME AGE node-exporter 19s \u521b\u5efa\u540e vmagent \u5c31\u4f1a\u81ea\u52a8\u53bb\u8bc6\u522b\u8be5\u5bf9\u8c61\u53bb\u5bf9 node-exporter \u8fdb\u884c\u6293\u53d6\u4e86\uff1a \u8fd9\u4e2a\u65f6\u5019\u518d\u53bb\u67e5\u770b node-exporter \u7684 dashboard \u5c31\u6b63\u5e38\u4e86\uff1a \u6b64\u5916\u8fd8\u53ef\u4ee5\u901a\u8fc7 VMServiceScrape \u53bb\u5b9a\u4e49\u8981\u6293\u53d6\u7684 Service \u670d\u52a1\uff08Endpoints\uff09\uff0c\u5b83\u57fa\u4e8e\u9009\u62e9\u5668\u4e3a vmagent \u751f\u6210\u6293\u53d6\u914d\u7f6e\uff0c\u5982\u679c\u60f3\u8981\u6293\u53d6\u6ca1\u6709\u5b9a\u4e49 Service \u7684 Pod \u7684\u6307\u6807\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 VMPodScrape \u6765\u8fdb\u884c\u5b9a\u4e49\uff0c\u540c\u6837\u8fd8\u6709\u62a5\u8b66\u76f8\u5173\u7684\u4e5f\u90fd\u6709\u76f8\u5e94\u7684 CRD \u6765\u8fdb\u884c\u7ba1\u7406\u3002vm-operator \u5927\u5927\u964d\u4f4e\u4e86\u6211\u4eec\u5bf9 VM \u96c6\u7fa4\u7684\u7ba1\u7406\uff0c\u975e\u5e38\u63a8\u8350\u4f7f\u7528\u3002","title":"3 \u9a8c\u8bc1 VM \u96c6\u7fa4"},{"location":"chap12/72vm_vmalert/","text":"\u7b2c\u516d\u8282 \u4f7f\u7528 vmalert \u4ee3\u66ff Prometheus \u76d1\u63a7\u62a5\u8b66 \u524d\u9762\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u4f7f\u7528 vmagent \u4ee3\u66ff prometheus \u6293\u53d6\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u8981\u60f3\u5b8c\u5168\u66ff\u6362 prometheus \u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u90e8\u5206\u5c31\u662f\u62a5\u8b66\u6a21\u5757\uff0c\u4e4b\u524d\u6211\u4eec\u90fd\u662f\u5728 prometheus \u4e2d\u5b9a\u4e49\u62a5\u8b66\u89c4\u5219\u8bc4\u4f30\u540e\u53d1\u9001\u7ed9 alertmanager \u7684\uff0c\u540c\u6837\u5bf9\u5e94\u5230 vm \u4e2d\u4e5f\u6709\u4e00\u4e2a\u4e13\u95e8\u6765\u5904\u7406\u62a5\u8b66\u7684\u6a21\u5757\uff1avmalert\u3002 vmalert \u4f1a\u9488\u5bf9 -datasource.url \u5730\u5740\u6267\u884c\u914d\u7f6e\u7684\u62a5\u8b66\u6216\u8bb0\u5f55\u89c4\u5219\uff0c\u7136\u540e\u53ef\u4ee5\u5c06\u62a5\u8b66\u53d1\u9001\u7ed9 -notifier.url \u914d\u7f6e\u7684 Alertmanager\uff0c\u8bb0\u5f55\u89c4\u5219\u7ed3\u679c\u4f1a\u901a\u8fc7\u8fdc\u7a0b\u5199\u5165\u7684\u534f\u8bae\u8fdb\u884c\u4fdd\u5b58\uff0c\u6240\u4ee5\u9700\u8981\u914d\u7f6e -remoteWrite.url \u3002 1 \u7279\u6027 \u4e0e VictoriaMetrics TSDB \u96c6\u6210 VictoriaMetrics MetricsQL \u652f\u6301\u548c\u8868\u8fbe\u5f0f\u9a8c\u8bc1 Prometheus \u544a\u8b66\u89c4\u5219\u5b9a\u4e49\u683c\u5f0f\u652f\u6301 \u4e0e Alertmanager \u96c6\u6210 \u5728\u91cd\u542f\u65f6\u53ef\u4ee5\u4fdd\u6301\u62a5\u8b66\u72b6\u6001 Graphite \u6570\u636e\u6e90\u53ef\u7528\u4e8e\u8b66\u62a5\u548c\u8bb0\u5f55\u89c4\u5219 \u652f\u6301\u8bb0\u5f55\u548c\u62a5\u8b66\u89c4\u5219\u91cd\u653e \u975e\u5e38\u8f7b\u91cf\u7ea7\uff0c\u6ca1\u6709\u989d\u5916\u7684\u4f9d\u8d56 \u8981\u5f00\u59cb\u4f7f\u7528 vmalert\uff0c\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a \u62a5\u8b66\u89c4\u5219\u5217\u8868\uff1a\u8981\u6267\u884c\u7684 PromQL/MetricsQL \u8868\u8fbe\u5f0f \u6570\u636e\u6e90\u5730\u5740\uff1a\u53ef\u8bbf\u95ee\u7684 VictoriaMetrics \u5b9e\u4f8b\uff0c\u7528\u4e8e\u89c4\u5219\u6267\u884c \u901a\u77e5\u7a0b\u5e8f\u5730\u5740\uff1a\u53ef\u8bbf\u95ee\u7684 Alertmanager \u5b9e\u4f8b\uff0c\u7528\u4e8e\u5904\u7406\uff0c\u6c47\u603b\u8b66\u62a5\u548c\u53d1\u9001\u901a\u77e5 2 \u5b89\u88c5 \u9996\u5148\u9700\u8981\u5b89\u88c5\u4e00\u4e2a Alertmanager \u7528\u6765\u63a5\u6536\u62a5\u8b66\u4fe1\u606f\uff0c\u524d\u9762\u7ae0\u8282\u4e2d\u6211\u4eec\u5df2\u7ecf\u8be6\u7ec6\u8bb2\u89e3\u8fc7\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u4e86\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # alertmanager.yaml apiVersion: v1 kind: ConfigMap metadata: name: alert-config namespace: kube-vm data: config.yml: |- global: resolve_timeout: 5m smtp_smarthost: 'smtp.163.com:465' smtp_from: 'xxx@163.com' smtp_auth_username: 'xxx@163.com' smtp_auth_password: '<auth code>' # \u4f7f\u7528\u7f51\u6613\u90ae\u7bb1\u7684\u6388\u6743\u7801 smtp_hello: '163.com' smtp_require_tls: false route: group_by: ['severity', 'source'] group_wait: 30s group_interval: 5m repeat_interval: 24h receiver: email receivers: - name: 'email' email_configs: - to: 'xxxxxx@qq.com' send_resolved: true --- apiVersion: v1 kind: Service metadata: name: alertmanager namespace: kube-vm labels: app: alertmanager spec: selector: app: alertmanager type: NodePort ports: - name: web port: 9093 targetPort: http --- apiVersion: apps/v1 kind: Deployment metadata: name: alertmanager namespace: kube-vm labels: app: alertmanager spec: selector: matchLabels: app: alertmanager template: metadata: labels: app: alertmanager spec: volumes: - name: cfg configMap: name: alert-config containers: - name: alertmanager image: prom/alertmanager:v0.21.0 imagePullPolicy: IfNotPresent args: - \"--config.file=/etc/alertmanager/config.yml\" ports: - containerPort: 9093 name: http volumeMounts: - mountPath: \"/etc/alertmanager\" name: cfg Alertmanager \u8fd9\u91cc\u6211\u4eec\u53ea\u914d\u7f6e\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u7684\u8def\u7531\u89c4\u5219\uff0c\u6839\u636e severity\u3001source \u4e24\u4e2a\u6807\u7b7e\u8fdb\u884c\u5206\u7ec4\uff0c\u7136\u540e\u5c06\u89e6\u53d1\u7684\u62a5\u8b66\u53d1\u9001\u5230 email \u63a5\u6536\u5668\u4e2d\u53bb\u3002 \u63a5\u4e0b\u6765\u9700\u8981\u6dfb\u52a0\u7528\u4e8e\u62a5\u8b66\u7684\u89c4\u5219\u914d\u7f6e\uff0c\u914d\u7f6e\u65b9\u5f0f\u548c Prometheus \u4e00\u6837\u7684\uff1a # vmalert-config.yaml apiVersion: v1 kind: ConfigMap metadata: name: vmalert-config namespace: kube-vm data: record.yaml: | groups: - name: record rules: - record: job:node_memory_MemFree_bytes:percent # \u8bb0\u5f55\u89c4\u5219\u540d\u79f0 expr: 100 - (100 * node_memory_MemFree_bytes / node_memory_MemTotal_bytes) pod.yaml: | groups: - name: pod rules: - alert: PodMemoryUsage expr: sum(container_memory_working_set_bytes{pod!=\"\"}) BY (instance, pod) / sum(container_spec_memory_limit_bytes{pod!=\"\"} > 0) BY (instance, pod) * 100 > 60 for: 2m labels: severity: warning source: pod annotations: summary: \"Pod {{ $labels.pod }} High Memory usage detected\" description: \"{{$labels.instance}}: Pod {{ $labels.pod }} Memory usage is above 60% (current value is: {{ $value }})\" node.yaml: | groups: - name: node rules: # \u5177\u4f53\u7684\u62a5\u8b66\u89c4\u5219 - alert: NodeMemoryUsage # \u62a5\u8b66\u89c4\u5219\u7684\u540d\u79f0 expr: (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes * 100 > 30 for: 1m labels: source: node severity: critical annotations: summary: \"Node {{$labels.instance}} High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 30% (current value is: {{ $value }})\" \u8fd9\u91cc\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u6761\u8bb0\u5f55\u89c4\u5219\uff0c\u4e24\u6761\u62a5\u8b66\u89c4\u5219\uff0c\u66f4\u591a\u62a5\u8b66\u89c4\u5219\u914d\u7f6e\u53ef\u53c2\u8003 https://awesome-prometheus-alerts.grep.to/\u3002 \u7136\u540e\u5c31\u53ef\u4ee5\u90e8\u7f72 vmalert \u7ec4\u4ef6\u670d\u52a1\u4e86\uff1a # vmalert.yaml apiVersion: v1 kind: Service metadata: name: vmalert namespace: kube-vm labels: app: vmalert spec: ports: - name: vmalert port: 8080 targetPort: 8080 type: NodePort selector: app: vmalert --- apiVersion: apps/v1 kind: Deployment metadata: name: vmalert namespace: kube-vm labels: app: vmalert spec: selector: matchLabels: app: vmalert template: metadata: labels: app: vmalert spec: containers: - name: vmalert image: victoriametrics/vmalert:v1.77.0 imagePullPolicy: IfNotPresent args: - -rule=/etc/ruler/*.yaml - -datasource.url=http://vmselect.kube-vm.svc.cluster.local:8481/select/0/prometheus - -notifier.url=http://alertmanager.kube-vm.svc.cluster.local:9093 - -remoteWrite.url=http://vminsert.kube-vm.svc.cluster.local:8480/insert/0/prometheus - -evaluationInterval=15s - -httpListenAddr=0.0.0.0:8080 volumeMounts: - mountPath: /etc/ruler/ name: ruler readOnly: true volumes: - configMap: name: vmalert-config name: ruler \u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u5c06\u62a5\u8b66\u89c4\u5219\u4ee5 volumes \u7684\u5f62\u5f0f\u6302\u8f7d\u5230\u4e86\u5bb9\u5668\u4e2d\uff0c\u901a\u8fc7 -rule \u6307\u5b9a\u4e86\u89c4\u5219\u6587\u4ef6\u8def\u5f84\uff0c -datasource.url \u6307\u5b9a\u4e86 vmselect \u7684\u8def\u5f84\uff0c -notifier.url \u6307\u5b9a\u4e86 Alertmanager \u7684\u5730\u5740\uff0c\u5176\u4e2d -evaluationInterval \u53c2\u6570\u7528\u6765\u6307\u5b9a\u8bc4\u4f30\u7684\u9891\u7387\u7684\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u6dfb\u52a0\u4e86\u8bb0\u5f55\u89c4\u5219\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u901a\u8fc7 -remoteWrite.url \u6307\u5b9a\u4e00\u4e2a\u8fdc\u7a0b\u5199\u5165\u7684\u5730\u5740\u3002 \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\u5b8c\u6210\u90e8\u7f72\u3002 \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/alertmanager.yaml \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/vmalert-config.yaml \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/vmalert.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=alertmanager NAME READY STATUS RESTARTS AGE alertmanager-d88d95b4f-z2j8g 1/1 Running 0 30m \u2638 \u279c kubectl get svc -n kube-vm -l app=alertmanager NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager NodePort 10.100.230.2 <none> 9093:31282/TCP 31m \u2638 \u279c kubectl get pods -n kube-vm -l app=vmalert NAME READY STATUS RESTARTS AGE vmalert-866674b966-675nb 1/1 Running 0 7m17s \u2638 \u279c kubectl get svc -n kube-vm -l app=vmalert NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE vmalert NodePort 10.104.193.183 <none> 8080:30376/TCP 22m \u90e8\u7f72\u6210\u529f\u540e\uff0c\u5982\u679c\u6709\u62a5\u8b66\u89c4\u5219\u8fbe\u5230\u4e86\u9608\u503c\u5c31\u4f1a\u89e6\u53d1\u62a5\u8b66\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 Alertmanager \u9875\u9762\u67e5\u770b\u89e6\u53d1\u7684\u62a5\u8b66\u89c4\u5219\uff1a \u540c\u6837 vmalert \u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u9875\u9762\uff0c\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7684 Groups\uff1a \u4e5f\u53ef\u4ee5\u67e5\u770b\u5230\u62a5\u8b66\u89c4\u5219\u5217\u8868\u7684\u72b6\u6001\uff1a \u8fd8\u53ef\u4ee5\u67e5\u770b\u5230\u5177\u4f53\u7684\u4e00\u6761\u62a5\u8b66\u89c4\u5219\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u62a5\u8b66\u89c4\u5219\u89e6\u53d1\u540e\u600e\u4e48\u53d1\u9001\uff0c\u53d1\u9001\u5230\u54ea\u4e2a\u63a5\u6536\u5668\u5c31\u662f Alertmanager \u51b3\u5b9a\u7684\u4e86\u3002 \u540c\u6837\u7684\u4e0a\u9762\u6211\u4eec\u6dfb\u52a0\u7684\u8bb0\u5f55\u89c4\u5219\u4f1a\u901a\u8fc7 remote write \u4f20\u9012\u7ed9 vminsert \u4fdd\u7559\u4e0b\u6765\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 vmselect \u67e5\u8be2\u5230\u3002 \u5230\u8fd9\u91cc\u57fa\u672c\u4e0a\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528 vm \u4ee3\u66ff prometheus \u6765\u8fdb\u884c\u76d1\u63a7\u62a5\u8b66\u4e86\uff0cvmagent \u91c7\u96c6\u76d1\u63a7\u6307\u6807\uff0cvmalert \u7528\u4e8e\u62a5\u8b66\u76d1\u63a7\uff0cvmstorage \u5b58\u50a8\u6307\u6807\u6570\u636e\uff0cvminsert \u63a5\u6536\u6307\u6807\u6570\u636e\uff0cvmselect \u67e5\u8be2\u6307\u6807\u6570\u636e\uff0c\u5df2\u7ecf\u5b8c\u5168\u53ef\u4ee5\u4e0d\u4f7f\u7528 prometheus \u4e86\uff0c\u800c\u4e14\u6027\u80fd\u975e\u5e38\u9ad8\uff0c\u6240\u9700\u8d44\u6e90\u4e5f\u6bd4 prometheus \u4f4e\u5f88\u591a\u3002","title":"\u7b2c\u516d\u8282 \u4f7f\u7528 vmalert \u4ee3\u66ff Prometheus \u76d1\u63a7\u62a5\u8b66"},{"location":"chap12/72vm_vmalert/#vmalert-prometheus","text":"\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u4f7f\u7528 vmagent \u4ee3\u66ff prometheus \u6293\u53d6\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u8981\u60f3\u5b8c\u5168\u66ff\u6362 prometheus \u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u90e8\u5206\u5c31\u662f\u62a5\u8b66\u6a21\u5757\uff0c\u4e4b\u524d\u6211\u4eec\u90fd\u662f\u5728 prometheus \u4e2d\u5b9a\u4e49\u62a5\u8b66\u89c4\u5219\u8bc4\u4f30\u540e\u53d1\u9001\u7ed9 alertmanager \u7684\uff0c\u540c\u6837\u5bf9\u5e94\u5230 vm \u4e2d\u4e5f\u6709\u4e00\u4e2a\u4e13\u95e8\u6765\u5904\u7406\u62a5\u8b66\u7684\u6a21\u5757\uff1avmalert\u3002 vmalert \u4f1a\u9488\u5bf9 -datasource.url \u5730\u5740\u6267\u884c\u914d\u7f6e\u7684\u62a5\u8b66\u6216\u8bb0\u5f55\u89c4\u5219\uff0c\u7136\u540e\u53ef\u4ee5\u5c06\u62a5\u8b66\u53d1\u9001\u7ed9 -notifier.url \u914d\u7f6e\u7684 Alertmanager\uff0c\u8bb0\u5f55\u89c4\u5219\u7ed3\u679c\u4f1a\u901a\u8fc7\u8fdc\u7a0b\u5199\u5165\u7684\u534f\u8bae\u8fdb\u884c\u4fdd\u5b58\uff0c\u6240\u4ee5\u9700\u8981\u914d\u7f6e -remoteWrite.url \u3002","title":"\u7b2c\u516d\u8282 \u4f7f\u7528 vmalert \u4ee3\u66ff Prometheus \u76d1\u63a7\u62a5\u8b66"},{"location":"chap12/72vm_vmalert/#1","text":"\u4e0e VictoriaMetrics TSDB \u96c6\u6210 VictoriaMetrics MetricsQL \u652f\u6301\u548c\u8868\u8fbe\u5f0f\u9a8c\u8bc1 Prometheus \u544a\u8b66\u89c4\u5219\u5b9a\u4e49\u683c\u5f0f\u652f\u6301 \u4e0e Alertmanager \u96c6\u6210 \u5728\u91cd\u542f\u65f6\u53ef\u4ee5\u4fdd\u6301\u62a5\u8b66\u72b6\u6001 Graphite \u6570\u636e\u6e90\u53ef\u7528\u4e8e\u8b66\u62a5\u548c\u8bb0\u5f55\u89c4\u5219 \u652f\u6301\u8bb0\u5f55\u548c\u62a5\u8b66\u89c4\u5219\u91cd\u653e \u975e\u5e38\u8f7b\u91cf\u7ea7\uff0c\u6ca1\u6709\u989d\u5916\u7684\u4f9d\u8d56 \u8981\u5f00\u59cb\u4f7f\u7528 vmalert\uff0c\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a \u62a5\u8b66\u89c4\u5219\u5217\u8868\uff1a\u8981\u6267\u884c\u7684 PromQL/MetricsQL \u8868\u8fbe\u5f0f \u6570\u636e\u6e90\u5730\u5740\uff1a\u53ef\u8bbf\u95ee\u7684 VictoriaMetrics \u5b9e\u4f8b\uff0c\u7528\u4e8e\u89c4\u5219\u6267\u884c \u901a\u77e5\u7a0b\u5e8f\u5730\u5740\uff1a\u53ef\u8bbf\u95ee\u7684 Alertmanager \u5b9e\u4f8b\uff0c\u7528\u4e8e\u5904\u7406\uff0c\u6c47\u603b\u8b66\u62a5\u548c\u53d1\u9001\u901a\u77e5","title":"1 \u7279\u6027"},{"location":"chap12/72vm_vmalert/#2","text":"\u9996\u5148\u9700\u8981\u5b89\u88c5\u4e00\u4e2a Alertmanager \u7528\u6765\u63a5\u6536\u62a5\u8b66\u4fe1\u606f\uff0c\u524d\u9762\u7ae0\u8282\u4e2d\u6211\u4eec\u5df2\u7ecf\u8be6\u7ec6\u8bb2\u89e3\u8fc7\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u4e86\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a # alertmanager.yaml apiVersion: v1 kind: ConfigMap metadata: name: alert-config namespace: kube-vm data: config.yml: |- global: resolve_timeout: 5m smtp_smarthost: 'smtp.163.com:465' smtp_from: 'xxx@163.com' smtp_auth_username: 'xxx@163.com' smtp_auth_password: '<auth code>' # \u4f7f\u7528\u7f51\u6613\u90ae\u7bb1\u7684\u6388\u6743\u7801 smtp_hello: '163.com' smtp_require_tls: false route: group_by: ['severity', 'source'] group_wait: 30s group_interval: 5m repeat_interval: 24h receiver: email receivers: - name: 'email' email_configs: - to: 'xxxxxx@qq.com' send_resolved: true --- apiVersion: v1 kind: Service metadata: name: alertmanager namespace: kube-vm labels: app: alertmanager spec: selector: app: alertmanager type: NodePort ports: - name: web port: 9093 targetPort: http --- apiVersion: apps/v1 kind: Deployment metadata: name: alertmanager namespace: kube-vm labels: app: alertmanager spec: selector: matchLabels: app: alertmanager template: metadata: labels: app: alertmanager spec: volumes: - name: cfg configMap: name: alert-config containers: - name: alertmanager image: prom/alertmanager:v0.21.0 imagePullPolicy: IfNotPresent args: - \"--config.file=/etc/alertmanager/config.yml\" ports: - containerPort: 9093 name: http volumeMounts: - mountPath: \"/etc/alertmanager\" name: cfg Alertmanager \u8fd9\u91cc\u6211\u4eec\u53ea\u914d\u7f6e\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u7684\u8def\u7531\u89c4\u5219\uff0c\u6839\u636e severity\u3001source \u4e24\u4e2a\u6807\u7b7e\u8fdb\u884c\u5206\u7ec4\uff0c\u7136\u540e\u5c06\u89e6\u53d1\u7684\u62a5\u8b66\u53d1\u9001\u5230 email \u63a5\u6536\u5668\u4e2d\u53bb\u3002 \u63a5\u4e0b\u6765\u9700\u8981\u6dfb\u52a0\u7528\u4e8e\u62a5\u8b66\u7684\u89c4\u5219\u914d\u7f6e\uff0c\u914d\u7f6e\u65b9\u5f0f\u548c Prometheus \u4e00\u6837\u7684\uff1a # vmalert-config.yaml apiVersion: v1 kind: ConfigMap metadata: name: vmalert-config namespace: kube-vm data: record.yaml: | groups: - name: record rules: - record: job:node_memory_MemFree_bytes:percent # \u8bb0\u5f55\u89c4\u5219\u540d\u79f0 expr: 100 - (100 * node_memory_MemFree_bytes / node_memory_MemTotal_bytes) pod.yaml: | groups: - name: pod rules: - alert: PodMemoryUsage expr: sum(container_memory_working_set_bytes{pod!=\"\"}) BY (instance, pod) / sum(container_spec_memory_limit_bytes{pod!=\"\"} > 0) BY (instance, pod) * 100 > 60 for: 2m labels: severity: warning source: pod annotations: summary: \"Pod {{ $labels.pod }} High Memory usage detected\" description: \"{{$labels.instance}}: Pod {{ $labels.pod }} Memory usage is above 60% (current value is: {{ $value }})\" node.yaml: | groups: - name: node rules: # \u5177\u4f53\u7684\u62a5\u8b66\u89c4\u5219 - alert: NodeMemoryUsage # \u62a5\u8b66\u89c4\u5219\u7684\u540d\u79f0 expr: (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes * 100 > 30 for: 1m labels: source: node severity: critical annotations: summary: \"Node {{$labels.instance}} High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 30% (current value is: {{ $value }})\" \u8fd9\u91cc\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u6761\u8bb0\u5f55\u89c4\u5219\uff0c\u4e24\u6761\u62a5\u8b66\u89c4\u5219\uff0c\u66f4\u591a\u62a5\u8b66\u89c4\u5219\u914d\u7f6e\u53ef\u53c2\u8003 https://awesome-prometheus-alerts.grep.to/\u3002 \u7136\u540e\u5c31\u53ef\u4ee5\u90e8\u7f72 vmalert \u7ec4\u4ef6\u670d\u52a1\u4e86\uff1a # vmalert.yaml apiVersion: v1 kind: Service metadata: name: vmalert namespace: kube-vm labels: app: vmalert spec: ports: - name: vmalert port: 8080 targetPort: 8080 type: NodePort selector: app: vmalert --- apiVersion: apps/v1 kind: Deployment metadata: name: vmalert namespace: kube-vm labels: app: vmalert spec: selector: matchLabels: app: vmalert template: metadata: labels: app: vmalert spec: containers: - name: vmalert image: victoriametrics/vmalert:v1.77.0 imagePullPolicy: IfNotPresent args: - -rule=/etc/ruler/*.yaml - -datasource.url=http://vmselect.kube-vm.svc.cluster.local:8481/select/0/prometheus - -notifier.url=http://alertmanager.kube-vm.svc.cluster.local:9093 - -remoteWrite.url=http://vminsert.kube-vm.svc.cluster.local:8480/insert/0/prometheus - -evaluationInterval=15s - -httpListenAddr=0.0.0.0:8080 volumeMounts: - mountPath: /etc/ruler/ name: ruler readOnly: true volumes: - configMap: name: vmalert-config name: ruler \u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u4e2d\u5c06\u62a5\u8b66\u89c4\u5219\u4ee5 volumes \u7684\u5f62\u5f0f\u6302\u8f7d\u5230\u4e86\u5bb9\u5668\u4e2d\uff0c\u901a\u8fc7 -rule \u6307\u5b9a\u4e86\u89c4\u5219\u6587\u4ef6\u8def\u5f84\uff0c -datasource.url \u6307\u5b9a\u4e86 vmselect \u7684\u8def\u5f84\uff0c -notifier.url \u6307\u5b9a\u4e86 Alertmanager \u7684\u5730\u5740\uff0c\u5176\u4e2d -evaluationInterval \u53c2\u6570\u7528\u6765\u6307\u5b9a\u8bc4\u4f30\u7684\u9891\u7387\u7684\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u6dfb\u52a0\u4e86\u8bb0\u5f55\u89c4\u5219\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u901a\u8fc7 -remoteWrite.url \u6307\u5b9a\u4e00\u4e2a\u8fdc\u7a0b\u5199\u5165\u7684\u5730\u5740\u3002 \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\u5b8c\u6210\u90e8\u7f72\u3002 \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/alertmanager.yaml \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/vmalert-config.yaml \u2638 \u279c kubectl apply -f https://p8s.io/docs/victoriametrics/manifests/vmalert.yaml \u2638 \u279c kubectl get pods -n kube-vm -l app=alertmanager NAME READY STATUS RESTARTS AGE alertmanager-d88d95b4f-z2j8g 1/1 Running 0 30m \u2638 \u279c kubectl get svc -n kube-vm -l app=alertmanager NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager NodePort 10.100.230.2 <none> 9093:31282/TCP 31m \u2638 \u279c kubectl get pods -n kube-vm -l app=vmalert NAME READY STATUS RESTARTS AGE vmalert-866674b966-675nb 1/1 Running 0 7m17s \u2638 \u279c kubectl get svc -n kube-vm -l app=vmalert NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE vmalert NodePort 10.104.193.183 <none> 8080:30376/TCP 22m \u90e8\u7f72\u6210\u529f\u540e\uff0c\u5982\u679c\u6709\u62a5\u8b66\u89c4\u5219\u8fbe\u5230\u4e86\u9608\u503c\u5c31\u4f1a\u89e6\u53d1\u62a5\u8b66\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 Alertmanager \u9875\u9762\u67e5\u770b\u89e6\u53d1\u7684\u62a5\u8b66\u89c4\u5219\uff1a \u540c\u6837 vmalert \u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u9875\u9762\uff0c\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7684 Groups\uff1a \u4e5f\u53ef\u4ee5\u67e5\u770b\u5230\u62a5\u8b66\u89c4\u5219\u5217\u8868\u7684\u72b6\u6001\uff1a \u8fd8\u53ef\u4ee5\u67e5\u770b\u5230\u5177\u4f53\u7684\u4e00\u6761\u62a5\u8b66\u89c4\u5219\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u62a5\u8b66\u89c4\u5219\u89e6\u53d1\u540e\u600e\u4e48\u53d1\u9001\uff0c\u53d1\u9001\u5230\u54ea\u4e2a\u63a5\u6536\u5668\u5c31\u662f Alertmanager \u51b3\u5b9a\u7684\u4e86\u3002 \u540c\u6837\u7684\u4e0a\u9762\u6211\u4eec\u6dfb\u52a0\u7684\u8bb0\u5f55\u89c4\u5219\u4f1a\u901a\u8fc7 remote write \u4f20\u9012\u7ed9 vminsert \u4fdd\u7559\u4e0b\u6765\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 vmselect \u67e5\u8be2\u5230\u3002 \u5230\u8fd9\u91cc\u57fa\u672c\u4e0a\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528 vm \u4ee3\u66ff prometheus \u6765\u8fdb\u884c\u76d1\u63a7\u62a5\u8b66\u4e86\uff0cvmagent \u91c7\u96c6\u76d1\u63a7\u6307\u6807\uff0cvmalert \u7528\u4e8e\u62a5\u8b66\u76d1\u63a7\uff0cvmstorage \u5b58\u50a8\u6307\u6807\u6570\u636e\uff0cvminsert \u63a5\u6536\u6307\u6807\u6570\u636e\uff0cvmselect \u67e5\u8be2\u6307\u6807\u6570\u636e\uff0c\u5df2\u7ecf\u5b8c\u5168\u53ef\u4ee5\u4e0d\u4f7f\u7528 prometheus \u4e86\uff0c\u800c\u4e14\u6027\u80fd\u975e\u5e38\u9ad8\uff0c\u6240\u9700\u8d44\u6e90\u4e5f\u6bd4 prometheus \u4f4e\u5f88\u591a\u3002","title":"2 \u5b89\u88c5"},{"location":"chap12/73vm_pressure/","text":"\u7b2c\u4e03\u8282 \u5bf9Prometheus\u517c\u5bb9\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5 \u4e3a\u4e86\u5728\u4e0d\u540c VictoriaMetrics \u7248\u672c\u4e4b\u95f4\u6216 VictoriaMetrics \u4e0e\u5176\u4ed6\u652f\u6301 Prometheus remote_write \u534f\u8bae\u7684\u89e3\u51b3\u65b9\u6848\u4e4b\u95f4\u8fdb\u884c\u6bd4\u8f83\uff0cVictoriaMetrics \u4e13\u95e8\u63d0\u4f9b\u4e86\u4e00\u4e2a Prometheus-benchmark \u7684\u9879\u76ee\u3002 1 \u5b9e\u73b0\u539f\u7406 \u8be5\u9879\u76ee\u7684\u5b9e\u73b0\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff1a \u4f7f\u7528 node_exporter \u7528\u4f5c\u7c7b\u4f3c\u751f\u4ea7\u73af\u5883\u6307\u6807\u7684\u6765\u6e90 \u5728 node_exporter \u524d\u9762\u6302\u4e86\u4e00\u4e2a nginx \u7528\u4f5c\u7f13\u5b58\u4ee3\u7406\uff0c\u5f53\u6293\u53d6\u592a\u591a\u7684\u6307\u6807\u65f6\uff0c\u8fd9\u53ef\u4ee5\u51cf\u5c11 node_exporter \u7684\u8d1f\u8f7d \u4f7f\u7528 vmagent \u6765\u6293\u53d6 node_exporter \u6307\u6807\u5e76\u901a\u8fc7 Prometheus remote_write \u534f\u8bae\u5c06\u5b83\u4eec\u8f6c\u53d1\u5230\u914d\u7f6e\u7684\u76ee\u6807\u3002\u5982\u679c\u8bbe\u7f6e\u4e86\u591a\u4e2a\u76ee\u6807\uff0c\u5219\u591a\u4e2a vmagent \u5b9e\u4f8b\u72ec\u7acb\u5730\u5c06\u6293\u53d6\u7684\u6570\u636e\u63a8\u9001\u5230\u8fd9\u4e9b\u76ee\u6807\u53bb \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\uff0c \u8be5\u6d4b\u8bd5\u5e76\u4e0d\u4f1a\u4ece\u914d\u7f6e\u7684 remote_write \u76ee\u6807\u6536\u96c6\u6307\u6807 \uff0c\u5b83\u53ea\u4f1a\u91c7\u96c6\u5185\u90e8\u7ec4\u4ef6 vmagent \u548c vmalert \u7684\u6307\u6807\uff0c\u4ed6\u4f1a\u5047\u8bbe\u5bf9\u6d4b\u8bd5\u7684 Prometheus \u5b58\u50a8\u7cfb\u7edf\u7684\u76d1\u63a7\u662f\u5355\u72ec\u8fdb\u884c\u7684\uff0c\u6bd4\u5982\u4e0b\u9762\u6211\u4eec\u4ee5\u5355\u8282\u70b9\u7684 VictoriaMetrics \u6765\u4f5c\u4e3a remote_write \u7684\u76ee\u6807\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u81ea\u884c\u5bf9\u5176\u8fdb\u884c\u76d1\u63a7\u3002 \u8be5\u9879\u76ee\u7684\u6838\u5fc3\u5b9e\u73b0\u5c31\u662f\u6839\u636e\u4f20\u5165\u7684\u4e00\u7cfb\u5217\u53c2\u6570\u4e0d\u65ad\u53bb\u66f4\u65b0\u6293\u53d6\u6307\u6807\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e vmagent \u6839\u636e\u8be5\u9879\u76ee\u66b4\u9732\u7684\u63a5\u53e3\u83b7\u53d6\u5176\u914d\u7f6e -promscrape.config \u53bb\u6293\u53d6\u6307\u6807\uff0c\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a package main import ( \"flag\" \"fmt\" \"log\" \"math/rand\" \"net/http\" \"sync\" \"time\" \"gopkg.in/yaml.v2\" ) var ( listenAddr = flag.String(\"httpListenAddr\", \":8436\", \"TCP address for incoming HTTP requests\") targetsCount = flag.Int(\"targetsCount\", 100, \"The number of scrape targets to return from -httpListenAddr. Each target has the same address defined by -targetAddr\") targetAddr = flag.String(\"targetAddr\", \"demo.robustperception.io:9090\", \"Address with port to use as target address the scrape config returned from -httpListenAddr\") scrapeInterval = flag.Duration(\"scrapeInterval\", time.Second*5, \"The scrape_interval to set at the scrape config returned from -httpListenAddr\") scrapeConfigUpdateInterval = flag.Duration(\"scrapeConfigUpdateInterval\", time.Minute*10, \"The -scrapeConfigUpdatePercent scrape targets are updated in the scrape config returned from -httpListenAddr every -scrapeConfigUpdateInterval\") scrapeConfigUpdatePercent = flag.Float64(\"scrapeConfigUpdatePercent\", 1, \"The -scrapeConfigUpdatePercent scrape targets are updated in the scrape config returned from -httpListenAddr ever -scrapeConfigUpdateInterval\") ) func main() { flag.Parse() flag.VisitAll(func(f *flag.Flag) { log.Printf(\"-%s=%s\", f.Name, f.Value) }) c := newConfig(*targetsCount, *scrapeInterval, *targetAddr) var cLock sync.Mutex p := *scrapeConfigUpdatePercent / 100 r := rand.New(rand.NewSource(time.Now().UnixNano())) go func() { rev := 0 for range time.Tick(*scrapeConfigUpdateInterval) { rev++ revStr := fmt.Sprintf(\"r%d\", rev) cLock.Lock() for _, sc := range c.ScrapeConfigs { for _, stc := range sc.StaticConfigs { if r.Float64() >= p { continue } stc.Labels[\"revision\"] = revStr } } cLock.Unlock() } }() rh := func(w http.ResponseWriter, r *http.Request) { cLock.Lock() data := c.marshalYAML() cLock.Unlock() w.Header().Set(\"Content-Type\", \"text/yaml\") w.Write(data) } hf := http.HandlerFunc(rh) log.Printf(\"starting scrape config updater at http://%s/\", *listenAddr) if err := http.ListenAndServe(*listenAddr, hf); err != nil { log.Fatalf(\"unexpected error when running the http server: %s\", err) } } func (c *config) marshalYAML() []byte { data, err := yaml.Marshal(c) if err != nil { log.Fatalf(\"BUG: unexpected error when marshaling config: %s\", err) } return data } func newConfig(targetsCount int, scrapeInterval time.Duration, targetAddr string) *config { scs := make([]*staticConfig, 0, targetsCount) for i := 0; i < targetsCount; i++ { scs = append(scs, &staticConfig{ Targets: []string{targetAddr}, Labels: map[string]string{ \"instance\": fmt.Sprintf(\"host-%d\", i), \"revision\": \"r0\", }, }) } return &config{ Global: globalConfig{ ScrapeInterval: scrapeInterval, }, ScrapeConfigs: []*scrapeConfig{ { JobName: \"node_exporter\", StaticConfigs: scs, }, }, } } // config represents essential parts from Prometheus config defined at https://prometheus.io/docs/prometheus/latest/configuration/configuration/ type config struct { Global globalConfig `yaml:\"global\"` ScrapeConfigs []*scrapeConfig `yaml:\"scrape_configs\"` } // globalConfig represents essential parts for `global` section of Prometheus config. // // See https://prometheus.io/docs/prometheus/latest/configuration/configuration/ type globalConfig struct { ScrapeInterval time.Duration `yaml:\"scrape_interval\"` } // rapeConfig represents essential parts for `scrape_config` section of Prometheus config. // // See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config type scrapeConfig struct { JobName string `yaml:\"job_name\"` StaticConfigs []*staticConfig `yaml:\"static_configs\"` } // staticConfig represents essential parts for `static_config` section of Prometheus config. // // See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config type staticConfig struct { Targets []string `yaml:\"targets\"` Labels map[string]string `yaml:\"labels\"` } \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u4e0b\u9762\u7684\u4e00\u4e9b\u53c2\u6570\u6765\u63a7\u5236\u538b\u529b\u6d4b\u8bd5\uff1a targetsCount targetsCount \u5b9a\u4e49\u6709\u591a\u5c11 node_exporter \u6293\u53d6\u76ee\u6807\u88ab\u6dfb\u52a0\u5230 vmagent \u7684\u6293\u53d6\u914d\u7f6e\u4e2d\uff0c\u6bcf\u4e2a\u90fd\u5305\u542b\u4e00\u4e2a\u552f\u4e00\u7684 instance \u6807\u7b7e\uff0c\u8be5\u53c2\u6570\u4f1a\u5f71\u54cd\u6293\u53d6\u6307\u6807\u7684\u6570\u91cf\u548c\u57fa\u6570\u3002\u901a\u5e38\uff0c\u4e00\u4e2a node_exporter \u4f1a\u4ea7\u751f\u5927\u7ea6 815 \u4e2a\u552f\u4e00\u6307\u6807\uff0c\u56e0\u6b64\u5f53 targetsCount \u8bbe\u7f6e\u4e3a1000\u65f6\uff0c\u6d4b\u8bd5\u4f1a\u751f\u6210\u5927\u7ea6 815*100=815K \u7684\u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u3002 scrapeInterval scrapeInterval \u5b9a\u4e49\u4e86\u6293\u53d6\u6bcf\u4e2a\u76ee\u6807\u7684\u9891\u7387\uff0c\u6b64\u53c2\u6570\u4f1a\u5f71\u54cd\u6570\u636e\u6444\u53d6\u7387\uff0c\u95f4\u9694\u8d8a\u5c0f\uff0c\u6570\u636e\u6444\u53d6\u7387\u8d8a\u9ad8\u3002 \u8fdc\u7a0b\u5b58\u50a8 remoteStorages \u5305\u542b\u4e00\u4e2a\u6d4b\u8bd5\u7684\u7cfb\u7edf\u5217\u8868\uff0c\u5c06\u6293\u53d6\u7684\u6307\u6807\u63a8\u9001\u8fc7\u53bb\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u591a\u4e2a\u76ee\u6807\uff0c\u5219\u591a\u4e2a vmagent \u5b9e\u4f8b\u4f1a\u5206\u522b\u5c06\u76f8\u540c\u7684\u6570\u636e\u63a8\u9001\u5230\u591a\u4e2a\u76ee\u6807\u3002 Churn rate scrapeConfigUpdatePercent \u548c scrapeConfigUpdateInterval \u53ef\u7528\u4e8e\u751f\u6210\u975e\u96f6\u7684\u65f6\u95f4\u5e8f\u5217\u6d41\u5931\u7387\uff0c\u8fd9\u5728 Kubernetes \u76d1\u63a7\u4e2d\u662f\u975e\u5e38\u5178\u578b\u7684\u573a\u666f\u3002 2 \u5982\u4f55\u4f7f\u7528 \u4e00\u4e2a\u5178\u578b\u7684\u573a\u666f\u662f\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a VictoriaMetrics\uff0c\u7136\u540e\u5728 remoteStorages \u90e8\u5206\u5217\u51fa\u5b83\u4eec\u7684\u5730\u5740\uff0c\u8be5\u6d4b\u8bd5\u7684\u9ed8\u8ba4\u914d\u7f6e\u662f targetsCount=1000 \u548c scrapeInterval=10s \u5bfc\u81f4\u5927\u7ea6 80k \u6837\u672c/\u79d2\uff1a 800 metrics-per-target * 1k targets / 10s = 80k samples/s \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 VictoriaMetrics \u5b98\u65b9\u7684 Grafana dasbhoards \u6bd4\u8f83\u8d44\u6e90\u4f7f\u7528\u3001\u6570\u636e\u538b\u7f29\u548c\u6574\u4f53\u6027\u80fd\u3002 \u8be5\u9879\u76ee\u9ed8\u8ba4\u901a\u8fc7 Helm Chart \u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u5b89\u88c5\uff0c\u9ed8\u8ba4\u4f1a\u5b89\u88c5\u4e00\u4e2a single \u6a21\u5f0f\u7684 VictoriaMetrics \u5b9e\u4f8b\uff0c\u76f4\u63a5 Clone \u9879\u76ee\uff1a $ git clone https://github.com/VictoriaMetrics/prometheus-benchmark $ cd prometheus-benchmark \u7136\u540e\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4fee\u6539 chart/values.yaml \u914d\u7f6e\u53c2\u6570\uff0c\u6211\u8fd9\u91cc\u7684\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a vmtag: \"v1.77.1\" # targetsCount defines the number of nodeexporter instances to scrape. # This option allows to configure the number of active time series to push # to remoteStorages. # Every nodeexporter exposes around 815 unique metrics, so when targetsCount # is set to 1000, then the benchmark generates around 815*100=815K active time series. targetsCount: 2000 # scrapeInterval defines how frequently to scrape nodeexporter targets. # This option allows to configure data ingestion rate per every remoteStorages. # For example, if the benchmark generates 815K active time series and scrapeInterval # is set to 10s, then the data ingestion rate equals to 815K/10s = 81.5K samples/sec. scrapeInterval: 10s # queryInterval is how often to send queries from files/alerts.yaml to remoteStorages.readURL # This option can be used for tuning read load at remoteStorages. # It is a good rule of thumb to keep it in sync with scrapeInterval. queryInterval: 10s # scrapeConfigUpdatePercent is the percent of nodeexporter targets # which are updated with unique label on every scrape config update # (see scrapeConfigUpdateInterval). # This option allows tuning time series churn rate. # For example, if scrapeConfigUpdatePercent is set to 1 for targetsCount=1000, # then around 10 targets gets updated labels on every scrape config update. # This generates around 815*10=8150 new time series every scrapeConfigUpdateInterval. scrapeConfigUpdatePercent: 1 # scrapeConfigUpdateInterval specifies how frequently to update labels # across scrapeConfigUpdatePercent nodeexporter targets. # This option allows tuning time series churn rate. # For example, if scrapeConfigUpdateInterval is set to 10m for targetsCount=1000 # and scrapeConfigUpdatePercent=1, then around 10 targets gets updated labels every 10 minutes. # This generates around 815*10=8150 new time series every 10 minutes. scrapeConfigUpdateInterval: 10m # writeConcurrenty is the number of concurrent tcp connections to use # for sending the data to the tested remoteStorages. # Increase this value if there is a high network latency between prometheus-benchmark # components and the tested remoteStorages. writeConcurrency: 16 # remoteStorages contains a named list of Prometheus-compatible systems to test. # These systems must support data ingestion via Prometheus remote_write protocol. # These systems must also support Prometheus querying API if query performance # needs to be measured additionally to data ingestion performance. remoteStorages: vm-0: # writeURL \u8868\u793a\u7528\u6765\u63a5\u6536 Prometheus remote_write \u534f\u8bae\u7684\u8fdc\u7a0b\u5b58\u50a8 # \u4f8b\u5982\uff1a # - \u5355\u8282\u70b9VictoriaMetrics\u6a21\u5f0f\uff1ahttp://<victoriametrics-addr>:8428/api/v1/write for single-node # - \u96c6\u7fa4VictoriaMetrics\u6a21\u5f0f\uff1ahttp://<vminsert-addr>:8480/insert/0/prometheus/api/v1/write writeURL: \"http://my-bench-prometheus-benchmark-vmsingle.default.svc.cluster.local:8428/api/v1/write\" # readURL \u662f\u53ef\u9009\u7684\uff0c\u5982\u679c\u9700\u8981\u6d4b\u8bd5\u6d4b\u8bd5\u7684\u6027\u80fd\u5219\u9700\u8981\u914d\u7f6e\uff0c\u901a\u8fc7\u53d1\u9001\u62a5\u8b66\u89c4\u5219\uff08files/alerts.yaml\uff09\u7ed9 readURL \u8fdb\u884c\u6d4b\u8bd5 # \u4f8b\u5982\uff1a # - \u5355\u8282\u70b9VictoriaMetrics\u6a21\u5f0f\uff1ahttp://<victoriametrics-addr>:8428/ # - \u96c6\u7fa4VictoriaMetrics\u6a21\u5f0f\uff1ahttp://<vmselect-addr>:8481/select/0/prometheus/ readURL: \"http://my-bench-prometheus-benchmark-vmsingle.default.svc.cluster.local:8428/\" writeBearerToken: \"\" readBearerToken: \"\" # vm-1: # \u5982\u679c\u6709\u591a\u4e2a\u8fdc\u7a0b\u5b58\u50a8\u7cfb\u7edf\u53ef\u4ee5\u7ee7\u7eed\u914d\u7f6e\u5373\u53ef # writeURL: \"http://victoria-metrics-victoria-metrics-cluster-vminsert.default.svc.cluster.local:8480/insert/1/prometheus/api/v1/write\" # readURL: \"http://victoria-metrics-victoria-metrics-cluster-vmselect.default.svc.cluster.local:8481/select/1/prometheus/\" \u73b0\u5728\u9879\u76ee\u4ee3\u7801\u4e2d\u9ed8\u8ba4\u5e26\u4e00\u4e2a\u5355\u8282\u70b9\u7684 VictoriaMetrics\uff0c\u4f46\u662f Charts \u6a21\u677f\u4e2d\u6ca1\u6709\u6dfb\u52a0 Service \u5bf9\u8c61\uff0c\u64cd\u4f5c\u4e0d\u662f\u5f88\u65b9\u4fbf\uff0c\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a chart/templates/vmsingle/service.yaml \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a apiVersion: v1 kind: Service metadata: name: {{ include \"prometheus-benchmark.fullname\" . }}-vmsingle namespace: {{ .Release.Namespace }} labels: {{- include \"prometheus-benchmark.labels\" . | nindent 4 }} spec: type: ClusterIP selector: job: vmsingle {{- include \"prometheus-benchmark.selectorLabels\" . | nindent 4 }} ports: - port: 8428 targetPort: 8428 \u914d\u7f6e\u5b8c\u8fc7\u540e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u9762\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\u5f00\u59cb\u6d4b\u8bd5\uff1a $ make install \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u4f7f\u7528 Helm \u8fdb\u884c\u5b89\u88c5\uff1a $ kubectl get pods NAME READY STATUS RESTARTS AGE grafana-db468ccf9-mtn87 1/1 Running 0 90m my-bench-prometheus-benchmark-nodeexporter-76c497cf59-m5k66 2/2 Running 0 49m my-bench-prometheus-benchmark-vmagent-vm-0-6bcbbb5fd8-8rhcx 2/2 Running 0 49m my-bench-prometheus-benchmark-vmalert-vm-0-6f6b565ccc-snsk5 2/2 Running 0 49m my-bench-prometheus-benchmark-vmsingle-585579fbf5-cpzhg 1/1 Running 0 49m $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE my-bench-prometheus-benchmark-nodeexporter ClusterIP 10.96.156.144 <none> 9102/TCP 50m my-bench-prometheus-benchmark-vmsingle ClusterIP 10.96.75.242 <none> 8428/TCP 50m \u5176\u4e2d\u7684 node-exporter \u5e94\u7528\u5305\u542b\u4e24\u4e2a\u5bb9\u5668\uff0c\u4e00\u4e2a\u662f\u5e94\u7528\u672c\u8eab\uff0c\u53e6\u5916\u4e00\u4e2a\u662f nginx \u5305\u88c5\u4e86\u4e00\u5c42\u7528\u4e8e\u7f13\u89e3 node-exporter \u7684\u538b\u529b\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7ed9 Grafana \u914d\u7f6e\u76d1\u63a7\u6570\u636e\u6e90 http://my-bench-prometheus-benchmark-vmsingle:8428 \uff0c\u5bfc\u5165\u51e0\u4e2a VictorialMetrics \u5b98\u65b9\u63d0\u4f9b\u7684 Grafana Dashboard\uff1a https://grafana.com/orgs/victoriametrics \u3002 \u4e0b\u56fe\u4e3a vmagent \u7684\u76d1\u63a7\u56fe\u8868\uff0c\u4ece\u56fe\u8868\u4e0a\u53ef\u4ee5\u770b\u51fa\u73b0\u5728\u6293\u53d6\u7684\u6307\u6807\u76ee\u6807\u4e3a2000\uff0c\u548c\u4e0a\u9762\u914d\u7f6e\u4e00\u81f4\uff0c\u800c\u4e14\u6ca1\u4eba\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\uff0c\u8bc1\u660e\u73b0\u5728 vmagent \u8fd8\u5728\u538b\u529b\u8303\u56f4\u5185\u3002 \u540c\u6837\u6211\u4eec\u4e5f\u53ef\u4ee5\u67e5\u770b\u4e0b VictoriaMetrics \u8fd9\u4e2a\u5355\u8282\u70b9\u7684\u8fdc\u7a0b\u5b58\u50a8\u7684\u76d1\u63a7\u56fe\u8868\uff0c\u53ef\u4ee5\u770b\u5230\u76ee\u524d\u4e5f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u6d3b\u8dc3\u7684\u65f6\u95f4\u5e8f\u5217\u4e5f\u8fbe\u5230\u4e86\u4e00\u767e\u591a\u4e07\u3002 \u9664\u4e86\u53ef\u4ee5\u4ece\u4e0a\u9762\u7684\u76d1\u63a7\u56fe\u8868\u6765\u67e5\u770b\u538b\u529b\u6d4b\u8bd5\u7684\u7ed3\u679c\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u53bb\u901a\u8fc7\u4e0b\u9762\u7684\u4e00\u4e9b\u6307\u6807\u6765\u9a8c\u8bc1\u662f\u5426\u8fbe\u5230\u4e86\u538b\u529b\u4f4d\u4e86\uff1a \u6570\u636e\u6444\u53d6\u7387: sum(rate(vm_promscrape_scraped_samples_sum{job=\"vmagent\"})) by (remote_storage_name) \u5c06\u6570\u636e\u5305\u53d1\u9001\u5230\u914d\u7f6e\u7684\u8fdc\u7a0b\u5b58\u50a8\u65f6\u4e22\u5f03\u7684\u6570\u636e\u5305\u6570\u3002\u5982\u679c\u8be5\u503c\u5927\u4e8e\u96f6\uff0c\u5219\u8fdc\u7a0b\u5b58\u50a8\u62d2\u7edd\u63a5\u53d7\u4f20\u5165\u7684\u6570\u636e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u68c0\u67e5\u8fdc\u7a0b\u5b58\u50a8\u65e5\u5fd7\u548c vmagent \u65e5\u5fd7\u3002 sum(rate(vmagent_remotewrite_packets_dropped_total{job=\"vmagent\"})) by (remote_storage_name) \u5c06\u6570\u636e\u53d1\u9001\u5230\u8fdc\u7a0b\u5b58\u50a8\u65f6\u7684\u91cd\u8bd5\u6b21\u6570\u3002\u5982\u679c\u8be5\u503c\u5927\u4e8e\u96f6\uff0c\u90a3\u4e48\u8fd9\u8868\u660e\u8fdc\u7a0b\u5b58\u50a8\u65e0\u6cd5\u5904\u7406\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u68c0\u67e5\u8fdc\u7a0b\u5b58\u50a8\u65e5\u5fd7\u548c vmagent \u65e5\u5fd7\u3002 sum(rate(vmagent_remotewrite_retries_count_total{job=\"vmagent\"})) by (remote_storage_name) vmagent \u7aef\u5c1a\u672a\u53d1\u9001\u5230\u8fdc\u7a0b\u5b58\u50a8\u7684\u6302\u8d77\u6570\u636e\u91cf\u3002\u5982\u679c\u56fe\u5f62\u589e\u957f\uff0c\u5219\u8fdc\u7a0b\u5b58\u50a8\u65e0\u6cd5\u8ddf\u4e0a\u7ed9\u5b9a\u7684\u6570\u636e\u6444\u53d6\u7387\u3002\u53ef\u4ee5\u5c1d\u8bd5\u5728 chart/values.yaml \u4e2d\u589e\u52a0 writeConcurrency \uff0c\u5982\u679c prometheus benchmark \u7684 vmagent \u4e4b\u95f4\u5b58\u5728\u8f83\u9ad8\u7684\u7f51\u7edc\u5ef6\u8fdf\uff0c\u5219\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002 sum(vm_persistentqueue_bytes_pending{job=\"vmagent\"}) by (remote_storage_name) \u4ece chart/files/alerts.yaml \u6267\u884c\u67e5\u8be2\u65f6\u7684\u9519\u8bef\u6570\u3002\u5982\u679c\u8be5\u503c\u5927\u4e8e\u96f6\uff0c\u5219\u8fdc\u7a0b\u5b58\u50a8\u65e0\u6cd5\u5904\u7406\u67e5\u8be2\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u68c0\u67e5\u8fdc\u7a0b\u5b58\u50a8\u65e5\u5fd7\u548c vmalert \u65e5\u5fd7\u3002 sum(rate(vmalert_execution_errors_total{job=\"vmalert\"})) by (remote_storage_name) \u8fd9\u4e9b\u6307\u6807\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6267\u884c make monitor \u547d\u4ee4\u6765\u8fdb\u884c\u67e5\u8be2\uff1a $ make monitor kubectl port-forward `kubectl -n default get pods -n default -l 'job=vmsingle,chart-name=my-bench-prometheus-benchmark' -o name` 8428 Forwarding from 127.0.0.1:8428 -> 8428 Forwarding from [::1]:8428 -> 8428 \u7136\u540e\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8428/vmui \u6765\u9a8c\u8bc1\u4e0a\u9762\u7684\u6307\u6807\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u4ece\u6211\u4eec\u8fd9\u91cc\u7684\u6d4b\u8bd5\u6765\u770b 2000 \u4e2a\u6293\u53d6\u76ee\u6807\u5e76\u6ca1\u6709\u8fbe\u5230\u4e0a\u9650\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u589e\u52a0\u8be5\u503c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6bd4\u5982\u589e\u52a0\u5230 2500\uff0c\u5982\u679c\u5404\u4e2a\u7ec4\u4ef6\u90fd\u8fd8\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u90a3\u4e48\u518d\u589e\u52a0\u5230 3000 \u7ee7\u7eed\u6d4b\u8bd5\uff1a $ make install \u6bd4\u5982\u6211\u8fd9\u91cc\u6d4b\u8bd5 4000 \u4e2a\u6293\u53d6\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f 800 metrics-per-target * 4k targets / 10s = 320k samples/s \u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u770b\u6765 VictoriaMetrics \u5b98\u65b9\u8bf4\u7684\u5355\u8282\u70b9\u6a21\u5f0f\u53ef\u4ee5\u652f\u6301\u6bcf\u79d2\u4e00\u767e\u4e07\u6837\u672c\u7684\u6570\u636e\u5e94\u8be5\u8fd8\u662f\u76f8\u5bf9\u9760\u8c31\u7684\u3002 \u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\u7ed3\u675f\u6d4b\u8bd5\uff1a make delete 2 \u603b\u7ed3 \u5728\u901a\u8fc7\u5bf9 Prometheus remote_write \u534f\u8bae\u63a5\u53d7\u6570\u636e\u7684\u4e0d\u540c\u89e3\u51b3\u65b9\u6848\u6216\u540c\u4e00\u89e3\u51b3\u65b9\u6848\u7684\u4e0d\u540c\u7248\u672c\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\u6bd4\u8f83\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f1a\u5f97\u51fa\u4e00\u4e2a\u5927\u81f4\u7684\u7ed3\u8bba\u4e86\u3002\u4f8b\u5982\uff0cPrometheus \u672c\u8eab\u3001Cortex\u3001Thanos\u3001M3DB \u548c TimescaleDB \u7b49\u65b9\u6848\u7684\u6027\u80fd\u8868\u73b0\u5982\u4f55\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u59cb\u7ec8\u5efa\u8bae\u4e0d\u8981\u7b80\u5355\u5730\u76f8\u4fe1\u8fd9\u4e9b\u57fa\u51c6\u6d4b\u8bd5\uff0c\u800c\u662f\u8981\u9a8c\u8bc1\u751f\u4ea7\u6570\u636e\u7684\u6570\u91cf\u548c\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u3002","title":"\u7b2c\u4e03\u8282 \u5bf9Prometheus\u517c\u5bb9\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5"},{"location":"chap12/73vm_pressure/#prometheus","text":"\u4e3a\u4e86\u5728\u4e0d\u540c VictoriaMetrics \u7248\u672c\u4e4b\u95f4\u6216 VictoriaMetrics \u4e0e\u5176\u4ed6\u652f\u6301 Prometheus remote_write \u534f\u8bae\u7684\u89e3\u51b3\u65b9\u6848\u4e4b\u95f4\u8fdb\u884c\u6bd4\u8f83\uff0cVictoriaMetrics \u4e13\u95e8\u63d0\u4f9b\u4e86\u4e00\u4e2a Prometheus-benchmark \u7684\u9879\u76ee\u3002","title":"\u7b2c\u4e03\u8282 \u5bf9Prometheus\u517c\u5bb9\u7684\u65f6\u5e8f\u6570\u636e\u5e93\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5"},{"location":"chap12/73vm_pressure/#1","text":"\u8be5\u9879\u76ee\u7684\u5b9e\u73b0\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff1a \u4f7f\u7528 node_exporter \u7528\u4f5c\u7c7b\u4f3c\u751f\u4ea7\u73af\u5883\u6307\u6807\u7684\u6765\u6e90 \u5728 node_exporter \u524d\u9762\u6302\u4e86\u4e00\u4e2a nginx \u7528\u4f5c\u7f13\u5b58\u4ee3\u7406\uff0c\u5f53\u6293\u53d6\u592a\u591a\u7684\u6307\u6807\u65f6\uff0c\u8fd9\u53ef\u4ee5\u51cf\u5c11 node_exporter \u7684\u8d1f\u8f7d \u4f7f\u7528 vmagent \u6765\u6293\u53d6 node_exporter \u6307\u6807\u5e76\u901a\u8fc7 Prometheus remote_write \u534f\u8bae\u5c06\u5b83\u4eec\u8f6c\u53d1\u5230\u914d\u7f6e\u7684\u76ee\u6807\u3002\u5982\u679c\u8bbe\u7f6e\u4e86\u591a\u4e2a\u76ee\u6807\uff0c\u5219\u591a\u4e2a vmagent \u5b9e\u4f8b\u72ec\u7acb\u5730\u5c06\u6293\u53d6\u7684\u6570\u636e\u63a8\u9001\u5230\u8fd9\u4e9b\u76ee\u6807\u53bb \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\uff0c \u8be5\u6d4b\u8bd5\u5e76\u4e0d\u4f1a\u4ece\u914d\u7f6e\u7684 remote_write \u76ee\u6807\u6536\u96c6\u6307\u6807 \uff0c\u5b83\u53ea\u4f1a\u91c7\u96c6\u5185\u90e8\u7ec4\u4ef6 vmagent \u548c vmalert \u7684\u6307\u6807\uff0c\u4ed6\u4f1a\u5047\u8bbe\u5bf9\u6d4b\u8bd5\u7684 Prometheus \u5b58\u50a8\u7cfb\u7edf\u7684\u76d1\u63a7\u662f\u5355\u72ec\u8fdb\u884c\u7684\uff0c\u6bd4\u5982\u4e0b\u9762\u6211\u4eec\u4ee5\u5355\u8282\u70b9\u7684 VictoriaMetrics \u6765\u4f5c\u4e3a remote_write \u7684\u76ee\u6807\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u81ea\u884c\u5bf9\u5176\u8fdb\u884c\u76d1\u63a7\u3002 \u8be5\u9879\u76ee\u7684\u6838\u5fc3\u5b9e\u73b0\u5c31\u662f\u6839\u636e\u4f20\u5165\u7684\u4e00\u7cfb\u5217\u53c2\u6570\u4e0d\u65ad\u53bb\u66f4\u65b0\u6293\u53d6\u6307\u6807\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e vmagent \u6839\u636e\u8be5\u9879\u76ee\u66b4\u9732\u7684\u63a5\u53e3\u83b7\u53d6\u5176\u914d\u7f6e -promscrape.config \u53bb\u6293\u53d6\u6307\u6807\uff0c\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a package main import ( \"flag\" \"fmt\" \"log\" \"math/rand\" \"net/http\" \"sync\" \"time\" \"gopkg.in/yaml.v2\" ) var ( listenAddr = flag.String(\"httpListenAddr\", \":8436\", \"TCP address for incoming HTTP requests\") targetsCount = flag.Int(\"targetsCount\", 100, \"The number of scrape targets to return from -httpListenAddr. Each target has the same address defined by -targetAddr\") targetAddr = flag.String(\"targetAddr\", \"demo.robustperception.io:9090\", \"Address with port to use as target address the scrape config returned from -httpListenAddr\") scrapeInterval = flag.Duration(\"scrapeInterval\", time.Second*5, \"The scrape_interval to set at the scrape config returned from -httpListenAddr\") scrapeConfigUpdateInterval = flag.Duration(\"scrapeConfigUpdateInterval\", time.Minute*10, \"The -scrapeConfigUpdatePercent scrape targets are updated in the scrape config returned from -httpListenAddr every -scrapeConfigUpdateInterval\") scrapeConfigUpdatePercent = flag.Float64(\"scrapeConfigUpdatePercent\", 1, \"The -scrapeConfigUpdatePercent scrape targets are updated in the scrape config returned from -httpListenAddr ever -scrapeConfigUpdateInterval\") ) func main() { flag.Parse() flag.VisitAll(func(f *flag.Flag) { log.Printf(\"-%s=%s\", f.Name, f.Value) }) c := newConfig(*targetsCount, *scrapeInterval, *targetAddr) var cLock sync.Mutex p := *scrapeConfigUpdatePercent / 100 r := rand.New(rand.NewSource(time.Now().UnixNano())) go func() { rev := 0 for range time.Tick(*scrapeConfigUpdateInterval) { rev++ revStr := fmt.Sprintf(\"r%d\", rev) cLock.Lock() for _, sc := range c.ScrapeConfigs { for _, stc := range sc.StaticConfigs { if r.Float64() >= p { continue } stc.Labels[\"revision\"] = revStr } } cLock.Unlock() } }() rh := func(w http.ResponseWriter, r *http.Request) { cLock.Lock() data := c.marshalYAML() cLock.Unlock() w.Header().Set(\"Content-Type\", \"text/yaml\") w.Write(data) } hf := http.HandlerFunc(rh) log.Printf(\"starting scrape config updater at http://%s/\", *listenAddr) if err := http.ListenAndServe(*listenAddr, hf); err != nil { log.Fatalf(\"unexpected error when running the http server: %s\", err) } } func (c *config) marshalYAML() []byte { data, err := yaml.Marshal(c) if err != nil { log.Fatalf(\"BUG: unexpected error when marshaling config: %s\", err) } return data } func newConfig(targetsCount int, scrapeInterval time.Duration, targetAddr string) *config { scs := make([]*staticConfig, 0, targetsCount) for i := 0; i < targetsCount; i++ { scs = append(scs, &staticConfig{ Targets: []string{targetAddr}, Labels: map[string]string{ \"instance\": fmt.Sprintf(\"host-%d\", i), \"revision\": \"r0\", }, }) } return &config{ Global: globalConfig{ ScrapeInterval: scrapeInterval, }, ScrapeConfigs: []*scrapeConfig{ { JobName: \"node_exporter\", StaticConfigs: scs, }, }, } } // config represents essential parts from Prometheus config defined at https://prometheus.io/docs/prometheus/latest/configuration/configuration/ type config struct { Global globalConfig `yaml:\"global\"` ScrapeConfigs []*scrapeConfig `yaml:\"scrape_configs\"` } // globalConfig represents essential parts for `global` section of Prometheus config. // // See https://prometheus.io/docs/prometheus/latest/configuration/configuration/ type globalConfig struct { ScrapeInterval time.Duration `yaml:\"scrape_interval\"` } // rapeConfig represents essential parts for `scrape_config` section of Prometheus config. // // See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config type scrapeConfig struct { JobName string `yaml:\"job_name\"` StaticConfigs []*staticConfig `yaml:\"static_configs\"` } // staticConfig represents essential parts for `static_config` section of Prometheus config. // // See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config type staticConfig struct { Targets []string `yaml:\"targets\"` Labels map[string]string `yaml:\"labels\"` } \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u4e0b\u9762\u7684\u4e00\u4e9b\u53c2\u6570\u6765\u63a7\u5236\u538b\u529b\u6d4b\u8bd5\uff1a targetsCount targetsCount \u5b9a\u4e49\u6709\u591a\u5c11 node_exporter \u6293\u53d6\u76ee\u6807\u88ab\u6dfb\u52a0\u5230 vmagent \u7684\u6293\u53d6\u914d\u7f6e\u4e2d\uff0c\u6bcf\u4e2a\u90fd\u5305\u542b\u4e00\u4e2a\u552f\u4e00\u7684 instance \u6807\u7b7e\uff0c\u8be5\u53c2\u6570\u4f1a\u5f71\u54cd\u6293\u53d6\u6307\u6807\u7684\u6570\u91cf\u548c\u57fa\u6570\u3002\u901a\u5e38\uff0c\u4e00\u4e2a node_exporter \u4f1a\u4ea7\u751f\u5927\u7ea6 815 \u4e2a\u552f\u4e00\u6307\u6807\uff0c\u56e0\u6b64\u5f53 targetsCount \u8bbe\u7f6e\u4e3a1000\u65f6\uff0c\u6d4b\u8bd5\u4f1a\u751f\u6210\u5927\u7ea6 815*100=815K \u7684\u6d3b\u8dc3\u65f6\u95f4\u5e8f\u5217\u3002 scrapeInterval scrapeInterval \u5b9a\u4e49\u4e86\u6293\u53d6\u6bcf\u4e2a\u76ee\u6807\u7684\u9891\u7387\uff0c\u6b64\u53c2\u6570\u4f1a\u5f71\u54cd\u6570\u636e\u6444\u53d6\u7387\uff0c\u95f4\u9694\u8d8a\u5c0f\uff0c\u6570\u636e\u6444\u53d6\u7387\u8d8a\u9ad8\u3002 \u8fdc\u7a0b\u5b58\u50a8 remoteStorages \u5305\u542b\u4e00\u4e2a\u6d4b\u8bd5\u7684\u7cfb\u7edf\u5217\u8868\uff0c\u5c06\u6293\u53d6\u7684\u6307\u6807\u63a8\u9001\u8fc7\u53bb\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u591a\u4e2a\u76ee\u6807\uff0c\u5219\u591a\u4e2a vmagent \u5b9e\u4f8b\u4f1a\u5206\u522b\u5c06\u76f8\u540c\u7684\u6570\u636e\u63a8\u9001\u5230\u591a\u4e2a\u76ee\u6807\u3002 Churn rate scrapeConfigUpdatePercent \u548c scrapeConfigUpdateInterval \u53ef\u7528\u4e8e\u751f\u6210\u975e\u96f6\u7684\u65f6\u95f4\u5e8f\u5217\u6d41\u5931\u7387\uff0c\u8fd9\u5728 Kubernetes \u76d1\u63a7\u4e2d\u662f\u975e\u5e38\u5178\u578b\u7684\u573a\u666f\u3002","title":"1 \u5b9e\u73b0\u539f\u7406"},{"location":"chap12/73vm_pressure/#2","text":"\u4e00\u4e2a\u5178\u578b\u7684\u573a\u666f\u662f\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a VictoriaMetrics\uff0c\u7136\u540e\u5728 remoteStorages \u90e8\u5206\u5217\u51fa\u5b83\u4eec\u7684\u5730\u5740\uff0c\u8be5\u6d4b\u8bd5\u7684\u9ed8\u8ba4\u914d\u7f6e\u662f targetsCount=1000 \u548c scrapeInterval=10s \u5bfc\u81f4\u5927\u7ea6 80k \u6837\u672c/\u79d2\uff1a 800 metrics-per-target * 1k targets / 10s = 80k samples/s \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 VictoriaMetrics \u5b98\u65b9\u7684 Grafana dasbhoards \u6bd4\u8f83\u8d44\u6e90\u4f7f\u7528\u3001\u6570\u636e\u538b\u7f29\u548c\u6574\u4f53\u6027\u80fd\u3002 \u8be5\u9879\u76ee\u9ed8\u8ba4\u901a\u8fc7 Helm Chart \u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u5b89\u88c5\uff0c\u9ed8\u8ba4\u4f1a\u5b89\u88c5\u4e00\u4e2a single \u6a21\u5f0f\u7684 VictoriaMetrics \u5b9e\u4f8b\uff0c\u76f4\u63a5 Clone \u9879\u76ee\uff1a $ git clone https://github.com/VictoriaMetrics/prometheus-benchmark $ cd prometheus-benchmark \u7136\u540e\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4fee\u6539 chart/values.yaml \u914d\u7f6e\u53c2\u6570\uff0c\u6211\u8fd9\u91cc\u7684\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a vmtag: \"v1.77.1\" # targetsCount defines the number of nodeexporter instances to scrape. # This option allows to configure the number of active time series to push # to remoteStorages. # Every nodeexporter exposes around 815 unique metrics, so when targetsCount # is set to 1000, then the benchmark generates around 815*100=815K active time series. targetsCount: 2000 # scrapeInterval defines how frequently to scrape nodeexporter targets. # This option allows to configure data ingestion rate per every remoteStorages. # For example, if the benchmark generates 815K active time series and scrapeInterval # is set to 10s, then the data ingestion rate equals to 815K/10s = 81.5K samples/sec. scrapeInterval: 10s # queryInterval is how often to send queries from files/alerts.yaml to remoteStorages.readURL # This option can be used for tuning read load at remoteStorages. # It is a good rule of thumb to keep it in sync with scrapeInterval. queryInterval: 10s # scrapeConfigUpdatePercent is the percent of nodeexporter targets # which are updated with unique label on every scrape config update # (see scrapeConfigUpdateInterval). # This option allows tuning time series churn rate. # For example, if scrapeConfigUpdatePercent is set to 1 for targetsCount=1000, # then around 10 targets gets updated labels on every scrape config update. # This generates around 815*10=8150 new time series every scrapeConfigUpdateInterval. scrapeConfigUpdatePercent: 1 # scrapeConfigUpdateInterval specifies how frequently to update labels # across scrapeConfigUpdatePercent nodeexporter targets. # This option allows tuning time series churn rate. # For example, if scrapeConfigUpdateInterval is set to 10m for targetsCount=1000 # and scrapeConfigUpdatePercent=1, then around 10 targets gets updated labels every 10 minutes. # This generates around 815*10=8150 new time series every 10 minutes. scrapeConfigUpdateInterval: 10m # writeConcurrenty is the number of concurrent tcp connections to use # for sending the data to the tested remoteStorages. # Increase this value if there is a high network latency between prometheus-benchmark # components and the tested remoteStorages. writeConcurrency: 16 # remoteStorages contains a named list of Prometheus-compatible systems to test. # These systems must support data ingestion via Prometheus remote_write protocol. # These systems must also support Prometheus querying API if query performance # needs to be measured additionally to data ingestion performance. remoteStorages: vm-0: # writeURL \u8868\u793a\u7528\u6765\u63a5\u6536 Prometheus remote_write \u534f\u8bae\u7684\u8fdc\u7a0b\u5b58\u50a8 # \u4f8b\u5982\uff1a # - \u5355\u8282\u70b9VictoriaMetrics\u6a21\u5f0f\uff1ahttp://<victoriametrics-addr>:8428/api/v1/write for single-node # - \u96c6\u7fa4VictoriaMetrics\u6a21\u5f0f\uff1ahttp://<vminsert-addr>:8480/insert/0/prometheus/api/v1/write writeURL: \"http://my-bench-prometheus-benchmark-vmsingle.default.svc.cluster.local:8428/api/v1/write\" # readURL \u662f\u53ef\u9009\u7684\uff0c\u5982\u679c\u9700\u8981\u6d4b\u8bd5\u6d4b\u8bd5\u7684\u6027\u80fd\u5219\u9700\u8981\u914d\u7f6e\uff0c\u901a\u8fc7\u53d1\u9001\u62a5\u8b66\u89c4\u5219\uff08files/alerts.yaml\uff09\u7ed9 readURL \u8fdb\u884c\u6d4b\u8bd5 # \u4f8b\u5982\uff1a # - \u5355\u8282\u70b9VictoriaMetrics\u6a21\u5f0f\uff1ahttp://<victoriametrics-addr>:8428/ # - \u96c6\u7fa4VictoriaMetrics\u6a21\u5f0f\uff1ahttp://<vmselect-addr>:8481/select/0/prometheus/ readURL: \"http://my-bench-prometheus-benchmark-vmsingle.default.svc.cluster.local:8428/\" writeBearerToken: \"\" readBearerToken: \"\" # vm-1: # \u5982\u679c\u6709\u591a\u4e2a\u8fdc\u7a0b\u5b58\u50a8\u7cfb\u7edf\u53ef\u4ee5\u7ee7\u7eed\u914d\u7f6e\u5373\u53ef # writeURL: \"http://victoria-metrics-victoria-metrics-cluster-vminsert.default.svc.cluster.local:8480/insert/1/prometheus/api/v1/write\" # readURL: \"http://victoria-metrics-victoria-metrics-cluster-vmselect.default.svc.cluster.local:8481/select/1/prometheus/\" \u73b0\u5728\u9879\u76ee\u4ee3\u7801\u4e2d\u9ed8\u8ba4\u5e26\u4e00\u4e2a\u5355\u8282\u70b9\u7684 VictoriaMetrics\uff0c\u4f46\u662f Charts \u6a21\u677f\u4e2d\u6ca1\u6709\u6dfb\u52a0 Service \u5bf9\u8c61\uff0c\u64cd\u4f5c\u4e0d\u662f\u5f88\u65b9\u4fbf\uff0c\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a chart/templates/vmsingle/service.yaml \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a apiVersion: v1 kind: Service metadata: name: {{ include \"prometheus-benchmark.fullname\" . }}-vmsingle namespace: {{ .Release.Namespace }} labels: {{- include \"prometheus-benchmark.labels\" . | nindent 4 }} spec: type: ClusterIP selector: job: vmsingle {{- include \"prometheus-benchmark.selectorLabels\" . | nindent 4 }} ports: - port: 8428 targetPort: 8428 \u914d\u7f6e\u5b8c\u8fc7\u540e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u9762\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\u5f00\u59cb\u6d4b\u8bd5\uff1a $ make install \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u4f7f\u7528 Helm \u8fdb\u884c\u5b89\u88c5\uff1a $ kubectl get pods NAME READY STATUS RESTARTS AGE grafana-db468ccf9-mtn87 1/1 Running 0 90m my-bench-prometheus-benchmark-nodeexporter-76c497cf59-m5k66 2/2 Running 0 49m my-bench-prometheus-benchmark-vmagent-vm-0-6bcbbb5fd8-8rhcx 2/2 Running 0 49m my-bench-prometheus-benchmark-vmalert-vm-0-6f6b565ccc-snsk5 2/2 Running 0 49m my-bench-prometheus-benchmark-vmsingle-585579fbf5-cpzhg 1/1 Running 0 49m $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE my-bench-prometheus-benchmark-nodeexporter ClusterIP 10.96.156.144 <none> 9102/TCP 50m my-bench-prometheus-benchmark-vmsingle ClusterIP 10.96.75.242 <none> 8428/TCP 50m \u5176\u4e2d\u7684 node-exporter \u5e94\u7528\u5305\u542b\u4e24\u4e2a\u5bb9\u5668\uff0c\u4e00\u4e2a\u662f\u5e94\u7528\u672c\u8eab\uff0c\u53e6\u5916\u4e00\u4e2a\u662f nginx \u5305\u88c5\u4e86\u4e00\u5c42\u7528\u4e8e\u7f13\u89e3 node-exporter \u7684\u538b\u529b\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7ed9 Grafana \u914d\u7f6e\u76d1\u63a7\u6570\u636e\u6e90 http://my-bench-prometheus-benchmark-vmsingle:8428 \uff0c\u5bfc\u5165\u51e0\u4e2a VictorialMetrics \u5b98\u65b9\u63d0\u4f9b\u7684 Grafana Dashboard\uff1a https://grafana.com/orgs/victoriametrics \u3002 \u4e0b\u56fe\u4e3a vmagent \u7684\u76d1\u63a7\u56fe\u8868\uff0c\u4ece\u56fe\u8868\u4e0a\u53ef\u4ee5\u770b\u51fa\u73b0\u5728\u6293\u53d6\u7684\u6307\u6807\u76ee\u6807\u4e3a2000\uff0c\u548c\u4e0a\u9762\u914d\u7f6e\u4e00\u81f4\uff0c\u800c\u4e14\u6ca1\u4eba\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\uff0c\u8bc1\u660e\u73b0\u5728 vmagent \u8fd8\u5728\u538b\u529b\u8303\u56f4\u5185\u3002 \u540c\u6837\u6211\u4eec\u4e5f\u53ef\u4ee5\u67e5\u770b\u4e0b VictoriaMetrics \u8fd9\u4e2a\u5355\u8282\u70b9\u7684\u8fdc\u7a0b\u5b58\u50a8\u7684\u76d1\u63a7\u56fe\u8868\uff0c\u53ef\u4ee5\u770b\u5230\u76ee\u524d\u4e5f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u6d3b\u8dc3\u7684\u65f6\u95f4\u5e8f\u5217\u4e5f\u8fbe\u5230\u4e86\u4e00\u767e\u591a\u4e07\u3002 \u9664\u4e86\u53ef\u4ee5\u4ece\u4e0a\u9762\u7684\u76d1\u63a7\u56fe\u8868\u6765\u67e5\u770b\u538b\u529b\u6d4b\u8bd5\u7684\u7ed3\u679c\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u53bb\u901a\u8fc7\u4e0b\u9762\u7684\u4e00\u4e9b\u6307\u6807\u6765\u9a8c\u8bc1\u662f\u5426\u8fbe\u5230\u4e86\u538b\u529b\u4f4d\u4e86\uff1a \u6570\u636e\u6444\u53d6\u7387: sum(rate(vm_promscrape_scraped_samples_sum{job=\"vmagent\"})) by (remote_storage_name) \u5c06\u6570\u636e\u5305\u53d1\u9001\u5230\u914d\u7f6e\u7684\u8fdc\u7a0b\u5b58\u50a8\u65f6\u4e22\u5f03\u7684\u6570\u636e\u5305\u6570\u3002\u5982\u679c\u8be5\u503c\u5927\u4e8e\u96f6\uff0c\u5219\u8fdc\u7a0b\u5b58\u50a8\u62d2\u7edd\u63a5\u53d7\u4f20\u5165\u7684\u6570\u636e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u68c0\u67e5\u8fdc\u7a0b\u5b58\u50a8\u65e5\u5fd7\u548c vmagent \u65e5\u5fd7\u3002 sum(rate(vmagent_remotewrite_packets_dropped_total{job=\"vmagent\"})) by (remote_storage_name) \u5c06\u6570\u636e\u53d1\u9001\u5230\u8fdc\u7a0b\u5b58\u50a8\u65f6\u7684\u91cd\u8bd5\u6b21\u6570\u3002\u5982\u679c\u8be5\u503c\u5927\u4e8e\u96f6\uff0c\u90a3\u4e48\u8fd9\u8868\u660e\u8fdc\u7a0b\u5b58\u50a8\u65e0\u6cd5\u5904\u7406\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u68c0\u67e5\u8fdc\u7a0b\u5b58\u50a8\u65e5\u5fd7\u548c vmagent \u65e5\u5fd7\u3002 sum(rate(vmagent_remotewrite_retries_count_total{job=\"vmagent\"})) by (remote_storage_name) vmagent \u7aef\u5c1a\u672a\u53d1\u9001\u5230\u8fdc\u7a0b\u5b58\u50a8\u7684\u6302\u8d77\u6570\u636e\u91cf\u3002\u5982\u679c\u56fe\u5f62\u589e\u957f\uff0c\u5219\u8fdc\u7a0b\u5b58\u50a8\u65e0\u6cd5\u8ddf\u4e0a\u7ed9\u5b9a\u7684\u6570\u636e\u6444\u53d6\u7387\u3002\u53ef\u4ee5\u5c1d\u8bd5\u5728 chart/values.yaml \u4e2d\u589e\u52a0 writeConcurrency \uff0c\u5982\u679c prometheus benchmark \u7684 vmagent \u4e4b\u95f4\u5b58\u5728\u8f83\u9ad8\u7684\u7f51\u7edc\u5ef6\u8fdf\uff0c\u5219\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002 sum(vm_persistentqueue_bytes_pending{job=\"vmagent\"}) by (remote_storage_name) \u4ece chart/files/alerts.yaml \u6267\u884c\u67e5\u8be2\u65f6\u7684\u9519\u8bef\u6570\u3002\u5982\u679c\u8be5\u503c\u5927\u4e8e\u96f6\uff0c\u5219\u8fdc\u7a0b\u5b58\u50a8\u65e0\u6cd5\u5904\u7406\u67e5\u8be2\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u68c0\u67e5\u8fdc\u7a0b\u5b58\u50a8\u65e5\u5fd7\u548c vmalert \u65e5\u5fd7\u3002 sum(rate(vmalert_execution_errors_total{job=\"vmalert\"})) by (remote_storage_name) \u8fd9\u4e9b\u6307\u6807\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6267\u884c make monitor \u547d\u4ee4\u6765\u8fdb\u884c\u67e5\u8be2\uff1a $ make monitor kubectl port-forward `kubectl -n default get pods -n default -l 'job=vmsingle,chart-name=my-bench-prometheus-benchmark' -o name` 8428 Forwarding from 127.0.0.1:8428 -> 8428 Forwarding from [::1]:8428 -> 8428 \u7136\u540e\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8428/vmui \u6765\u9a8c\u8bc1\u4e0a\u9762\u7684\u6307\u6807\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u4ece\u6211\u4eec\u8fd9\u91cc\u7684\u6d4b\u8bd5\u6765\u770b 2000 \u4e2a\u6293\u53d6\u76ee\u6807\u5e76\u6ca1\u6709\u8fbe\u5230\u4e0a\u9650\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u589e\u52a0\u8be5\u503c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6bd4\u5982\u589e\u52a0\u5230 2500\uff0c\u5982\u679c\u5404\u4e2a\u7ec4\u4ef6\u90fd\u8fd8\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u90a3\u4e48\u518d\u589e\u52a0\u5230 3000 \u7ee7\u7eed\u6d4b\u8bd5\uff1a $ make install \u6bd4\u5982\u6211\u8fd9\u91cc\u6d4b\u8bd5 4000 \u4e2a\u6293\u53d6\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f 800 metrics-per-target * 4k targets / 10s = 320k samples/s \u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u770b\u6765 VictoriaMetrics \u5b98\u65b9\u8bf4\u7684\u5355\u8282\u70b9\u6a21\u5f0f\u53ef\u4ee5\u652f\u6301\u6bcf\u79d2\u4e00\u767e\u4e07\u6837\u672c\u7684\u6570\u636e\u5e94\u8be5\u8fd8\u662f\u76f8\u5bf9\u9760\u8c31\u7684\u3002 \u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\u7ed3\u675f\u6d4b\u8bd5\uff1a make delete","title":"2 \u5982\u4f55\u4f7f\u7528"},{"location":"chap12/73vm_pressure/#2_1","text":"\u5728\u901a\u8fc7\u5bf9 Prometheus remote_write \u534f\u8bae\u63a5\u53d7\u6570\u636e\u7684\u4e0d\u540c\u89e3\u51b3\u65b9\u6848\u6216\u540c\u4e00\u89e3\u51b3\u65b9\u6848\u7684\u4e0d\u540c\u7248\u672c\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\u6bd4\u8f83\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u4f1a\u5f97\u51fa\u4e00\u4e2a\u5927\u81f4\u7684\u7ed3\u8bba\u4e86\u3002\u4f8b\u5982\uff0cPrometheus \u672c\u8eab\u3001Cortex\u3001Thanos\u3001M3DB \u548c TimescaleDB \u7b49\u65b9\u6848\u7684\u6027\u80fd\u8868\u73b0\u5982\u4f55\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u59cb\u7ec8\u5efa\u8bae\u4e0d\u8981\u7b80\u5355\u5730\u76f8\u4fe1\u8fd9\u4e9b\u57fa\u51c6\u6d4b\u8bd5\uff0c\u800c\u662f\u8981\u9a8c\u8bc1\u751f\u4ea7\u6570\u636e\u7684\u6570\u91cf\u548c\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u3002","title":"2 \u603b\u7ed3"},{"location":"chap13/1deepflow/","text":"1 DeepFlow AutoTagging \u4e4b Prometheus \u6807\u7b7e\u6807\u51c6\u5316 DeepFlow \u662f\u4e00\u4e2a \u9ad8\u5ea6\u81ea\u52a8\u5316 \u7684\u53ef\u89c2\u6d4b\u6027 \u534f\u4f5c \u5e73\u53f0\uff0c\u5176\u4e2d\u7684\u534f\u4f5c\u4f53\u73b0\u5728\u5bf9\u5404\u7c7b\u6570\u636e\u7684\u6807\u51c6\u5316\u4e0a\u3002 \u5bf9\u4e8e\u53ef\u89c2\u6d4b\u6027\u4e09\u5927\u652f\u67f1\u4e4b\u4e00\u7684 Metrics\uff0cDeepFlow \u4e0d\u4ec5\u53ef\u5229\u7528 eBPF \u81ea\u52a8\u91c7\u96c6\u5e94\u7528\u7a0b\u5e8f\u7684\u7cfb\u7edf\u3001\u7f51\u7edc\u3001\u5e94\u7528\u5168\u6808\u9ec4\u91d1\u6307\u6807\uff08AutoMetrics\uff09 \uff0c \u4e5f\u53ef\u96c6\u6210\u76ee\u524d\u4e3b\u6d41\u7684\u6307\u6807\u6570\u636e\u6e90\uff0c\u4f8b\u5982\u4e91\u539f\u751f\u73af\u5883\u4e0b\u7684 Prometheus\uff0c\u4f20\u7edf\u73af\u5883\u4e2d\u7684 Telegraf \u7b49\u3002 DeepFlow \u7684 AutoTagging \u548c SmartEncoding \u673a\u5236\u4e3a\u6240\u6709\u6570\u636e\u6e90\u81ea\u52a8\u6ce8\u5165\u4e30\u5bcc\u7684\u6807\u51c6\u5316\u6807\u7b7e\uff0c\u964d\u4f4e\u4e86\u5f00\u53d1\u8fd0\u7ef4\u4eba\u5458\u6784\u9020\u6570\u636e\u6807\u7b7e\u7684\u5de5\u4f5c\u8d1f\u62c5\uff0c\u4e5f\u4f7f\u5f97\u53ef\u89c2\u6d4b\u6027\u4ece\u6b64\u544a\u522b\u4e86\u6570\u636e\u5b64\u5c9b \u3002 \u6211\u4eec\u7684\u7cfb\u5217\u6587\u7ae0\u5c06\u4f1a\u9010\u4e00\u5256\u6790 DeepFlow AutoTagging \u7684\u80fd\u529b\uff0c\u4f5c\u4e3a\u5f00\u59cb\uff0c\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u4ee5\u4e0b\u56db\u65b9\u9762\u7684\u5185\u5bb9\uff1a DeepFlow \u5982\u4f55\u96c6\u6210 Prometheus/Telegraf \u7684\u6307\u6807\u6570\u636e DeepFlow \u5982\u4f55\u6807\u51c6\u5316\u6ce8\u5165 \u4e30\u5bcc\u7684\u6807\u7b7e\uff0c\u544a\u522b\u6570\u636e\u5b64\u5c9b DeepFlow \u5982\u4f55\u81ea\u52a8\u5316\u6ce8\u5165 \u7684\u6807\u7b7e\uff0c\u964d\u4f4e\u6807\u7b7e\u6ce8\u5165\u8d1f\u62c5 DeepFlow \u5982\u4f55\u63d0\u5347\u6027\u80fd \uff0c\u4e30\u5bcc\u5316\u6807\u51c6\u5316\u4e0e\u8282\u80fd\u51cf\u6392\u4e24\u4e0d\u8bef \u96c6\u6210 Prometheus/Telegraf DeepFlow \u76ee\u524d\u652f\u6301\u96c6\u6210 Prometheus \u548c Telegraf \u7684\u6307\u6807\uff0c\u5e76\u81ea\u52a8\u4e3a\u5176\u6ce8\u5165\u4e30\u5bcc\u7684\u6807\u51c6\u5316\u6807\u7b7e\u3002\u96c6\u6210 Prometheus/Telegraf \u7684\u6570\u636e\u6d41\u5982\u4e0b\uff1a \u96c6\u6210 Prometheus \u7684\u914d\u7f6e\u89c1\u4e0b\uff1a\u6211\u4eec\u552f\u4e00\u8981\u505a\u7684\u53ea\u662f\u914d\u7f6e prometheus-server \u7684 remote_write \uff08\u5bf9 remote_read \u7684\u652f\u6301\u4e5f\u5728\u6392\u671f\u4e2d\uff09 remote_write: - url: http://${DEEPFLOW_AGENT_SVC}/api/v1/prometheus \u96c6\u6210 Telegraf \u7684\u914d\u7f6e\u89c1\u4e0b \uff1a\u4e5f\u53ea\u662f\u9700\u8981\u6307\u5b9a output.http \u7684\u7aef\u70b9\u3002 [[outputs.http]] url = \"http://${DEEPFLOW_AGENT_SVC}/api/v1/telegraf\" data_format = \"influx\" deepflow-agent \u9700\u8981\u6253\u5f00\u6570\u636e\u63a5\u6536\uff08\u9ed8\u8ba4\u5173\u95ed\uff0c\u51cf\u5c11\u76d1\u542c\u7aef\u53e3\uff09 \uff0c\u8be6\u7ec6\u914d\u7f6e\u547d\u4ee4\u8bf7\u53c2\u8003\u5728\u7ebf\u6587\u6863[1]\uff1a vtap_group_id: <your-agent-group-id> external_agent_http_proxy_enabled: 1 \u4e0d\u8d85\u8fc7\u4e94\u884c\u914d\u7f6e\uff0c\u5373\u53ef\u5b8c\u6210 Prometheus \u6216 Telegraf \u7684\u96c6\u6210\uff0c\u5e76\u53ef\u4ee5\u57fa\u4e8e\u96c6\u6210\u6570\u636e\u5728 Grafana \u4e2d\u5feb\u901f\u6784\u5efa Dashboard\u3002\u4f8b\u5982\u57fa\u4e8e Prometheus \u6570\u636e\u7684\u5bb9\u5668\u73af\u5883 Dashboard\uff1a \u57fa\u4e8e Telegraf \u6570\u636e\u7684 Host \u73af\u5883 Dashaboard\uff1a \u6807\u7b7e\u6807\u51c6\u5316\uff0c\u544a\u522b\u6570\u636e\u5b64\u5c9b K8s \u81ea\u5b9a\u4e49 Label \uff1a\u5de5\u4f5c\u8d1f\u8f7d Label\u3001ReplicaSet Label\u3001Pod Label\uff0c\u5e38\u89c1\u7684 Label \u4f8b\u5982 owner\u3001commitId\u3001version\u3001env\u3001group \u7b49 K8s \u8d44\u6e90\u4fe1\u606f \uff1a\u96c6\u7fa4\u3001\u8282\u70b9\u3001\u547d\u540d\u7a7a\u95f4\u3001\u670d\u52a1\u3001Ingress\u3001\u5de5\u4f5c\u8d1f\u8f7d\uff08Deployment/StatefulSet/DaemonSet\uff09\u3001ReplicaSet\u3001Pod \u4e91\u8d44\u6e90\u4fe1\u606f \uff1a\u652f\u6301\u5404\u5927\u516c\u6709\u4e91 API\uff0c\u533a\u57df\u3001\u53ef\u7528\u533a\u3001\u4e91\u670d\u52a1\u5668\u3001VPC\u3001\u5b50\u7f51\u3001\u8def\u7531\u5668\u3001\u5b89\u5168\u7ec4\u3001NAT\u7f51\u5173\u3001\u8d1f\u8f7d\u5747\u8861\u5668\u3001\u5bf9\u7b49\u8fde\u63a5\u3001\u4e91\u4f01\u4e1a\u7f51\u3001RDS\u3001Redis \u8fd9\u4e9b\u6807\u7b7e\u7684\u6570\u91cf\u8fd8\u5728\u6301\u7eed\u589e\u957f\u4e2d\uff0c\u672a\u6765\u6211\u4eec\u4e5f\u4f1a\u589e\u52a0\u5bf9\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u4fe1\u606f\u3001\u8fdb\u7a0b\u4fe1\u606f\u7b49\u76f8\u5173\u7684\u6807\u7b7e\uff0c\u6b63\u5728\u6301\u7eed\u8fed\u4ee3\u4e2d\u3002 \u4e0d\u540c\u6570\u636e\u6e90\u7684\u6307\u6807\u6570\u636e\uff0c\u4ec5\u9700\u4f20\u9012\u4e00\u4e2a\u552f\u4e00\u6807\u7b7e\u5230 DeepFlow\uff0c\u5373\u53ef\u5168\u81ea\u52a8\u5f62\u5f0f\u6ce8\u5165 DeepFlow \u7684\u6240\u6709\u6807\u51c6\u5316\u6807\u7b7e\u3002 \u5bf9\u4e8e eBPF/cBPF \u91c7\u96c6\u5230\u7684\u5e94\u7528\u6027\u80fd\u5168\u6808\u6307\u6807\uff0c\u901a\u8fc7 IP \u5173\u8054\u81f3\u6240\u6709\u7684\u6807\u7b7e\uff1b\u5bf9\u4e8e Prometheus \u6570\u636e\uff0c\u901a\u8fc7 pod\u3001instance \u7b49\u6807\u7b7e\u6269\u5c55\uff1b\u5bf9\u4e8e Telegraf \u6570\u636e\uff0c\u901a\u8fc7 pod_name \u3001\u8fd0\u884cIP \u7b49\u6807\u7b7e\u6269\u5c55\u3002 \u4e0b\u9762\u6211\u4eec\u7ed3\u5408 DeepFlow \u7684 SQL API \u548c Grafana Panel\uff0c\u5b9e\u9645\u6765\u770b\u770b\u6ce8\u5165\u7684\u6807\u51c6\u5316\u6807\u7b7e\u5728\u5b9e\u6218\u4e2d\u4ea7\u751f\u7684\u4e1d\u6ed1\u6548\u679c\u3002 \u6253\u901a AutoMetrics \u548c Integration Metrics\uff1a \u4e0b\u56fe\u5de6\u56fe\u4e3a\u901a\u8fc7 Prometheus \u96c6\u6210\u7684\u6570\u636e\uff0c\u53f3\u56fe\u4e3a DeepFlow eBPF/cBPF AutoMetrics\u3002\u5f97\u76ca\u4e8e\u6807\u7b7e\u7684\u6807\u51c6\u5316\uff0c\u6211\u4eec\u57fa\u4e8e\u5bb9\u5668 Pod\u3001K8s \u81ea\u5b9a\u4e49 Label \u7b49\u4fe1\u606f\u7684\u4e00\u4e2a\u67e5\u8be2\u6761\u4ef6\u53ef\u4ee5\u67e5\u8be2\u4e0d\u540c\u6570\u636e\u6e90\u3002 \u4e0b\u56fe\u5de6\u56fe\u4e3a\u901a\u8fc7 Telegraf \u96c6\u6210\u7684\u6570\u636e\uff0c\u53f3\u56fe\u4e3a DeepFlow eBPF/cBPF AutoMetrics\u3002\u540c\u6837\uff0c\u6211\u4eec\u57fa\u4e8e\u4e91\u670d\u52a1\u5668\u3001VPC \u7b49\u8d44\u6e90\u4fe1\u606f\u7684\u4e00\u4e2a\u67e5\u8be2\u6761\u4ef6\u53ef\u4ee5\u67e5\u8be2\u4e0d\u540c\u6570\u636e\u6e90\u3002 \u6253\u901a Metrics\u3001Tracing\u3001Logging \u4e09\u5927\u652f\u67f1\uff1a \u5f97\u76ca\u4e8e DeepFlow \u4e2d\u6240\u6709\u6570\u636e\u7684\u6807\u7b7e\u6807\u51c6\u5316\uff0c\u4f7f\u7528\u8005\u4e0d\u7528\u5173\u5fc3\u4e0d\u540c\u6570\u636e\u6e90\u7684\u5dee\u5f02\uff0c\u771f\u6b63\u7684\u6253\u7834\u6570\u636e\u5b64\u5c9b\u3002\u5229\u7528\u76f8\u540c\u7684\u6807\u7b7e\u3001\u65f6\u95f4\u8303\u56f4\uff0c\u5373\u4f7f\u5728\u4e0d\u61c2\u5e95\u5c42\u539f\u7406\u3001\u4e0d\u61c2\u4e1a\u52a1\u903b\u8f91\u3001\u4e0d\u61c2\u7ec4\u4ef6\u67b6\u6784\u7b49\u60c5\u51b5\u4e0b\uff0c\u4e5f\u80fd\u5feb\u901f\u5c06\u6574\u4e2a\u7cfb\u7edf\u76f8\u5173\u7684\u6570\u636e\u5173\u8054\u8d77\u6765\uff0c\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u53d1\u73b0\u6839\u56e0\u3002 \u6807\u7b7e\u81ea\u52a8\u5316\uff0c\u964d\u4f4e\u5de5\u4f5c\u8d1f\u62c5 Prometheus \u7684 relabeling \u673a\u5236\u80fd\u591f\u5bf9 Metrics \u7684\u6807\u7b7e\u8fdb\u884c\u7075\u6d3b\u7684\u7ba1\u7406\uff0cMetrics \u7684\u6240\u6709\u6807\u7b7e\u90fd\u662f\u5728\u8fd9\u4e2a\u9636\u6bb5\u7edf\u4e00\u6ce8\u5165\u6216\u8f6c\u6362\u7684\uff0c\u7279\u522b\u662f K8s \u8d44\u6e90\u76f8\u5173\u7684\u4fe1\u606f\u3002\u4f46\u662f relabeling \u7684\u914d\u7f6e\u975e\u5e38\u590d\u6742\uff0c\u4ee5\u9ed8\u8ba4\u7684 kubernetes-service-endpoints \u914d\u7f6e\u4e3a\u4f8b\u6211\u4eec\u6765\u611f\u53d7\u4e00\u4e0b\uff08\u671f\u671b\u6ca1\u6709\u6233\u4e2d\u4f60\u7684\u4f24\u5fc3\u5904\uff09\uff1a - job_name: kubernetes-service-endpoints # ... relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape] separator: ; regex: \"true\" replacement: $1 action: keep - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow] separator: ; regex: \"true\" replacement: $1 action: drop - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme] separator: ; regex: (https?) target_label: __scheme__ replacement: $1 action: replace - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path] separator: ; regex: (.+) target_label: __metrics_path__ replacement: $1 action: replace - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port] separator: ; regex: (.+?)(?::\\d+)?;(\\d+) target_label: __address__ replacement: $1:$2 action: replace - separator: ; regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+) replacement: __param_$1 action: labelmap - separator: ; regex: __meta_kubernetes_service_label_(.+) replacement: $1 action: labelmap - source_labels: [__meta_kubernetes_namespace] separator: ; regex: (.*) target_label: namespace replacement: $1 action: replace - source_labels: [__meta_kubernetes_service_name] separator: ; regex: (.*) target_label: service replacement: $1 action: replace - source_labels: [__meta_kubernetes_pod_node_name] separator: ; regex: (.*) target_label: node replacement: $1 action: replace \u53ef\u4ee5\u60f3\u8c61\u5982\u679c\u6211\u4eec\u8981\u52a0\u66f4\u591a\u7684\u6807\u7b7e\uff0c\u6216\u8005\u6211\u4eec\u8981\u7ed9\u81ea\u5df1\u7684\u4e1a\u52a1\u52a0\u6807\u7b7e\uff0c\u4f1a\u53d8\u5f97\u66f4\u590d\u6742\u3002\u6240\u4ee5\u4e00\u822c relabeling \u8fd9\u79cd\u4e8b\uff0c\u6211\u662f\u65ad\uff08\u8ba9\uff09\u7136\uff08\u5f00\uff09\u62d2\uff08\u53d1\uff09\u7edd\uff08\u5e72\uff09\u7684\uff01 \u5f53\u4f7f\u7528 DeepFlow \u96c6\u6210 Prometheus \u6570\u636e\u65f6\uff0c\u5f97\u76ca\u4e8e AutoTagging \u673a\u5236\uff0c\u6211\u4eec\u80fd\u591f\u6839\u636e instance \u6216 pod \u81ea\u52a8\u6269\u5c55\u4e30\u5bcc\u7684 K8s \u81ea\u5b9a\u4e49 Label\u3001K8s \u8d44\u6e90\u3001\u4e91\u8d44\u6e90\u6807\u7b7e\uff0c\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u7684\u914d\u7f6e\uff08\u53c8\u80fd\u548c\u5f00\u53d1\u505a\u670b\u53cb\u4e86\uff09 \u3002 \u90a3\u4e48\uff0c\u73b0\u5728\u4f60\u53ef\u4ee5\u5c06 relabeling \u914d\u7f6e\u8fdb\u884c\u7cbe\u7b80\u4e86\uff08instance \u6807\u7b7e\u603b\u662f\u4f1a\u5b58\u5728\uff0c\u5bf9\u4e8e HostNet Pod \u4fdd\u7559 pod \u6807\u7b7e\u5373\u53ef\uff09\uff0c\u7cbe\u7b80\u4e4b\u540e\u7684 Prometheus \u53d8\u5f97\u975e\u5e38\u6e05\u723d\uff1a \u600e\u4e48\u67e5\u8fd9\u4e9b\u6807\u7b7e\u5462\uff0c\u5207\u6362\u5230 Grafana \u4e2d\uff0c DeepFlow \u5df2\u7ecf\u81ea\u52a8\u7ed9 kubernetes-service-endpoints \u6307\u6807\u91cf\u6ce8\u5165\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u6807\u7b7e \uff1a SmartEncoding\uff0c\u6781\u81f4\u6027\u80fd \u4e1a\u52a1\u5f00\u53d1\u4ee5\u53ca Prometheus relabeling \u4e3a\u6570\u636e\u6ce8\u5165\u7684\u6807\u7b7e\u8fc7\u591a\u65f6\uff0c\u901a\u5e38\u4f1a\u9020\u6210 Prometheus \u5de8\u5927\u7684\u5b58\u7b97\u538b\u529b\u3002\u76f8\u4fe1\u9aa8\u7070\u7ea7 Prometheus \u73a9\u5bb6\u75db\u82e6\u7684\u56de\u5fc6\u5c31\u662f\u5728 keep\u3001drop\u3001replace \u4e4b\u95f4\u8fdb\u884c\u8270\u96be\u7684\u6289\u62e9\u3002\u63a5\u5165 DeepFlow \u540e\uff0cClickHouse \u7684\u7a00\u758f\u7d22\u5f15\u76f4\u63a5\u89e3\u51b3\u4e86\u9ad8\u57fa\u6807\u7b7e\u95ee\u9898\uff0c\u518d\u4e5f\u4e0d\u7528 drop \u5f00\u53d1\u8f9b\u82e6\u6253\u7684\u6807\u7b7e\u4e86\u3002 \u90a3\u4e48\u5927\u5bb6\u53ef\u80fd\u4f1a\u601d\u8003\uff0cDeepFlow \u81ea\u52a8\u6ce8\u5165\u4e86\u8fd9\u4e48\u591a\u6807\u7b7e\uff0c\u4f1a\u4e0d\u4f1a\u5bfc\u81f4\u81ea\u8eab agent \u548c server \u7684\u8d44\u6e90\u6d88\u8017\u98d9\u5347\uff1f\u5229\u7528 SmartEncoding\u673a\u5236\uff0c\u6211\u4eec\u5c06\u6240\u6709\u4e91\u8d44\u6e90\u3001\u5bb9\u5668\u8d44\u6e90\u6807\u7b7e\u7684\u6ce8\u5165\u6210\u672c\u964d\u4f4e\u4e86 10 \u500d\uff0c\u5c06 K8s \u81ea\u5b9a\u4e49 Label \u7684\u6ce8\u5165\u6210\u672c\u964d\u5230\u4e86 0\u3002\u76f8\u5173\u7ec6\u8282\u548c\u53ef\u91cd\u73b0\u7684 Benchmark \u4ee3\u7801\u6211\u4eec\u4e5f\u4f1a\u5728\u540e\u7eed\u7684\u6587\u7ae0\u4e2d\u9010\u6b65\u5206\u4eab\uff0c\u540c\u65f6\u4e5f\u6b22\u8fce\u793e\u533a\u7684\u5c0f\u4f19\u4f34\u8bd5\u7528\u3001\u538b\u6d4b\u3001\u53cd\u9988\u3002 \u672a\u6765\u5c55\u671b Remote Read\uff1a\u662f\u7684\uff0c\u4e0d\u652f\u6301 remote_read \u63a5\u53e3\u7684 Prometheus \u65b9\u6848\u662f\u6ca1\u6709\u7075\u9b42\u7684\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u540e\u7eed\u7248\u672c\u4e2d\u5b8c\u5584\u6b64\u80fd\u529b\u3002\u5b9e\u73b0\u8fd9\u4e2a\u80fd\u529b\u540e\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u5207\u6362\u4e3a\u66f4\u52a0\u8f7b\u91cf\u7ea7\u7684 Prometheus Agent Mode \u4e86\u3002 PromQL\uff1a\u4e3a\u4e86\u964d\u4f4e\u5927\u5bb6\u7684\u4f7f\u7528\u95e8\u69db\uff0c\u5e76\u4e14\u8ba9\u6307\u6807\u3001\u8ffd\u8e2a\u3001\u65e5\u5fd7\u6709\u7edf\u4e00\u7684\u67e5\u8be2\u4f53\u9a8c\uff0cDeepFlow \u4f7f\u7528\u6807\u51c6\u7684 SQL API\u3002\u4f46 PromQL \u5b9e\u5728\u592a\u706b\u4e86\uff0c\u800c\u4e14\u6709\u5927\u91cf\u5df2\u7ecf\u5b58\u5728\u7684\u544a\u8b66\u7b56\u7565\u3001Grafana Dashaboard \u57fa\u4e8e\u6b64\u5efa\u7acb\u3002DeepFlow \u5c06\u4f1a\u63d0\u4f9b PromQL \u4f5c\u4e3a\u4e00\u79cd\u67e5\u8be2\u65b9\u8a00\u3002 \u4e91\u8d44\u6e90\u6807\u7b7e\u3001\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff1a\u9664\u4e86\u81ea\u52a8\u6ce8\u5165\u4e91\u8d44\u6e90\u3001\u5bb9\u5668\u8d44\u6e90\u3001K8s \u81ea\u5b9a\u4e49 Label \u4ee5\u5916\uff0c\u6211\u4eec\u4e5f\u4f1a\u5728\u540e\u7eed\u7248\u672c\u4e2d\u652f\u6301\u516c\u6709\u4e91\u8d44\u6e90\u6807\u7b7e\u4ee5\u53ca\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u4fe1\u606f\u7684\u540c\u6b65\u3002 \u8fdb\u7a0b\u4fe1\u606f\uff1aeBPF \u662f DeepFlow \u7684\u770b\u5bb6\u672c\u9886\uff0c\u65e0\u8bba\u662f\u5426\u5728\u5bb9\u5668\u73af\u5883\u4e2d\uff0c\u6211\u4eec\u90fd\u4f1a\u5c06\u901a\u8fc7 eBPF \u91c7\u96c6\u5230\u7684\u8fdb\u7a0b\u4fe1\u606f\u6ce8\u5165\u5230\u6240\u6709\u89c2\u6d4b\u6570\u636e\u4e2d\u3002 \u5173\u4e8e DeepFlow DeepFlow \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u9ad8\u5ea6\u81ea\u52a8\u5316\u7684\u53ef\u89c2\u6d4b\u6027\u5e73\u53f0\uff0c\u662f\u4e3a\u4e91\u539f\u751f\u5e94\u7528\u5f00\u53d1\u8005\u5efa\u8bbe\u53ef\u89c2\u6d4b\u6027\u80fd\u529b\u800c\u91cf\u8eab\u6253\u9020\u7684\u5168\u6808\u3001\u5168\u94fe\u8def\u3001\u9ad8\u6027\u80fd\u6570\u636e\u5f15\u64ce\u3002DeepFlow \u4f7f\u7528 eBPF\u3001WASM\u3001OpenTelemetry \u7b49\u65b0\u6280\u672f\uff0c\u521b\u65b0\u7684\u5b9e\u73b0\u4e86 AutoTracing\u3001AutoMetrics\u3001AutoTagging\u3001SmartEncoding \u7b49\u6838\u5fc3\u673a\u5236\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u63d0\u5347\u57cb\u70b9\u63d2\u7801\u7684\u81ea\u52a8\u5316\u6c34\u5e73\uff0c\u964d\u4f4e\u53ef\u89c2\u6d4b\u6027\u5e73\u53f0\u7684\u8fd0\u7ef4\u590d\u6742\u5ea6\u3002\u5229\u7528 DeepFlow \u7684\u53ef\u7f16\u7a0b\u80fd\u529b\u548c\u5f00\u653e\u63a5\u53e3\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5feb\u901f\u5c06\u5176\u878d\u5165\u5230\u81ea\u5df1\u7684\u53ef\u89c2\u6d4b\u6027\u6280\u672f\u6808\u4e2d\u3002 GitHub \u5730\u5740\uff1ahttps://github.com/deepflowys/deepflow","title":"1 DeepFlow AutoTagging\u4e4bPrometheus\u6807\u7b7e\u6807\u51c6\u5316"},{"location":"chap13/1deepflow/#1-deepflow-autotagging-prometheus","text":"DeepFlow \u662f\u4e00\u4e2a \u9ad8\u5ea6\u81ea\u52a8\u5316 \u7684\u53ef\u89c2\u6d4b\u6027 \u534f\u4f5c \u5e73\u53f0\uff0c\u5176\u4e2d\u7684\u534f\u4f5c\u4f53\u73b0\u5728\u5bf9\u5404\u7c7b\u6570\u636e\u7684\u6807\u51c6\u5316\u4e0a\u3002 \u5bf9\u4e8e\u53ef\u89c2\u6d4b\u6027\u4e09\u5927\u652f\u67f1\u4e4b\u4e00\u7684 Metrics\uff0cDeepFlow \u4e0d\u4ec5\u53ef\u5229\u7528 eBPF \u81ea\u52a8\u91c7\u96c6\u5e94\u7528\u7a0b\u5e8f\u7684\u7cfb\u7edf\u3001\u7f51\u7edc\u3001\u5e94\u7528\u5168\u6808\u9ec4\u91d1\u6307\u6807\uff08AutoMetrics\uff09 \uff0c \u4e5f\u53ef\u96c6\u6210\u76ee\u524d\u4e3b\u6d41\u7684\u6307\u6807\u6570\u636e\u6e90\uff0c\u4f8b\u5982\u4e91\u539f\u751f\u73af\u5883\u4e0b\u7684 Prometheus\uff0c\u4f20\u7edf\u73af\u5883\u4e2d\u7684 Telegraf \u7b49\u3002 DeepFlow \u7684 AutoTagging \u548c SmartEncoding \u673a\u5236\u4e3a\u6240\u6709\u6570\u636e\u6e90\u81ea\u52a8\u6ce8\u5165\u4e30\u5bcc\u7684\u6807\u51c6\u5316\u6807\u7b7e\uff0c\u964d\u4f4e\u4e86\u5f00\u53d1\u8fd0\u7ef4\u4eba\u5458\u6784\u9020\u6570\u636e\u6807\u7b7e\u7684\u5de5\u4f5c\u8d1f\u62c5\uff0c\u4e5f\u4f7f\u5f97\u53ef\u89c2\u6d4b\u6027\u4ece\u6b64\u544a\u522b\u4e86\u6570\u636e\u5b64\u5c9b \u3002 \u6211\u4eec\u7684\u7cfb\u5217\u6587\u7ae0\u5c06\u4f1a\u9010\u4e00\u5256\u6790 DeepFlow AutoTagging \u7684\u80fd\u529b\uff0c\u4f5c\u4e3a\u5f00\u59cb\uff0c\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u4ee5\u4e0b\u56db\u65b9\u9762\u7684\u5185\u5bb9\uff1a DeepFlow \u5982\u4f55\u96c6\u6210 Prometheus/Telegraf \u7684\u6307\u6807\u6570\u636e DeepFlow \u5982\u4f55\u6807\u51c6\u5316\u6ce8\u5165 \u4e30\u5bcc\u7684\u6807\u7b7e\uff0c\u544a\u522b\u6570\u636e\u5b64\u5c9b DeepFlow \u5982\u4f55\u81ea\u52a8\u5316\u6ce8\u5165 \u7684\u6807\u7b7e\uff0c\u964d\u4f4e\u6807\u7b7e\u6ce8\u5165\u8d1f\u62c5 DeepFlow \u5982\u4f55\u63d0\u5347\u6027\u80fd \uff0c\u4e30\u5bcc\u5316\u6807\u51c6\u5316\u4e0e\u8282\u80fd\u51cf\u6392\u4e24\u4e0d\u8bef","title":"1 DeepFlow AutoTagging \u4e4b Prometheus \u6807\u7b7e\u6807\u51c6\u5316"},{"location":"chap13/1deepflow/#prometheustelegraf","text":"DeepFlow \u76ee\u524d\u652f\u6301\u96c6\u6210 Prometheus \u548c Telegraf \u7684\u6307\u6807\uff0c\u5e76\u81ea\u52a8\u4e3a\u5176\u6ce8\u5165\u4e30\u5bcc\u7684\u6807\u51c6\u5316\u6807\u7b7e\u3002\u96c6\u6210 Prometheus/Telegraf \u7684\u6570\u636e\u6d41\u5982\u4e0b\uff1a \u96c6\u6210 Prometheus \u7684\u914d\u7f6e\u89c1\u4e0b\uff1a\u6211\u4eec\u552f\u4e00\u8981\u505a\u7684\u53ea\u662f\u914d\u7f6e prometheus-server \u7684 remote_write \uff08\u5bf9 remote_read \u7684\u652f\u6301\u4e5f\u5728\u6392\u671f\u4e2d\uff09 remote_write: - url: http://${DEEPFLOW_AGENT_SVC}/api/v1/prometheus \u96c6\u6210 Telegraf \u7684\u914d\u7f6e\u89c1\u4e0b \uff1a\u4e5f\u53ea\u662f\u9700\u8981\u6307\u5b9a output.http \u7684\u7aef\u70b9\u3002 [[outputs.http]] url = \"http://${DEEPFLOW_AGENT_SVC}/api/v1/telegraf\" data_format = \"influx\" deepflow-agent \u9700\u8981\u6253\u5f00\u6570\u636e\u63a5\u6536\uff08\u9ed8\u8ba4\u5173\u95ed\uff0c\u51cf\u5c11\u76d1\u542c\u7aef\u53e3\uff09 \uff0c\u8be6\u7ec6\u914d\u7f6e\u547d\u4ee4\u8bf7\u53c2\u8003\u5728\u7ebf\u6587\u6863[1]\uff1a vtap_group_id: <your-agent-group-id> external_agent_http_proxy_enabled: 1 \u4e0d\u8d85\u8fc7\u4e94\u884c\u914d\u7f6e\uff0c\u5373\u53ef\u5b8c\u6210 Prometheus \u6216 Telegraf \u7684\u96c6\u6210\uff0c\u5e76\u53ef\u4ee5\u57fa\u4e8e\u96c6\u6210\u6570\u636e\u5728 Grafana \u4e2d\u5feb\u901f\u6784\u5efa Dashboard\u3002\u4f8b\u5982\u57fa\u4e8e Prometheus \u6570\u636e\u7684\u5bb9\u5668\u73af\u5883 Dashboard\uff1a \u57fa\u4e8e Telegraf \u6570\u636e\u7684 Host \u73af\u5883 Dashaboard\uff1a","title":"\u96c6\u6210 Prometheus/Telegraf"},{"location":"chap13/1deepflow/#_1","text":"K8s \u81ea\u5b9a\u4e49 Label \uff1a\u5de5\u4f5c\u8d1f\u8f7d Label\u3001ReplicaSet Label\u3001Pod Label\uff0c\u5e38\u89c1\u7684 Label \u4f8b\u5982 owner\u3001commitId\u3001version\u3001env\u3001group \u7b49 K8s \u8d44\u6e90\u4fe1\u606f \uff1a\u96c6\u7fa4\u3001\u8282\u70b9\u3001\u547d\u540d\u7a7a\u95f4\u3001\u670d\u52a1\u3001Ingress\u3001\u5de5\u4f5c\u8d1f\u8f7d\uff08Deployment/StatefulSet/DaemonSet\uff09\u3001ReplicaSet\u3001Pod \u4e91\u8d44\u6e90\u4fe1\u606f \uff1a\u652f\u6301\u5404\u5927\u516c\u6709\u4e91 API\uff0c\u533a\u57df\u3001\u53ef\u7528\u533a\u3001\u4e91\u670d\u52a1\u5668\u3001VPC\u3001\u5b50\u7f51\u3001\u8def\u7531\u5668\u3001\u5b89\u5168\u7ec4\u3001NAT\u7f51\u5173\u3001\u8d1f\u8f7d\u5747\u8861\u5668\u3001\u5bf9\u7b49\u8fde\u63a5\u3001\u4e91\u4f01\u4e1a\u7f51\u3001RDS\u3001Redis \u8fd9\u4e9b\u6807\u7b7e\u7684\u6570\u91cf\u8fd8\u5728\u6301\u7eed\u589e\u957f\u4e2d\uff0c\u672a\u6765\u6211\u4eec\u4e5f\u4f1a\u589e\u52a0\u5bf9\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u4fe1\u606f\u3001\u8fdb\u7a0b\u4fe1\u606f\u7b49\u76f8\u5173\u7684\u6807\u7b7e\uff0c\u6b63\u5728\u6301\u7eed\u8fed\u4ee3\u4e2d\u3002 \u4e0d\u540c\u6570\u636e\u6e90\u7684\u6307\u6807\u6570\u636e\uff0c\u4ec5\u9700\u4f20\u9012\u4e00\u4e2a\u552f\u4e00\u6807\u7b7e\u5230 DeepFlow\uff0c\u5373\u53ef\u5168\u81ea\u52a8\u5f62\u5f0f\u6ce8\u5165 DeepFlow \u7684\u6240\u6709\u6807\u51c6\u5316\u6807\u7b7e\u3002 \u5bf9\u4e8e eBPF/cBPF \u91c7\u96c6\u5230\u7684\u5e94\u7528\u6027\u80fd\u5168\u6808\u6307\u6807\uff0c\u901a\u8fc7 IP \u5173\u8054\u81f3\u6240\u6709\u7684\u6807\u7b7e\uff1b\u5bf9\u4e8e Prometheus \u6570\u636e\uff0c\u901a\u8fc7 pod\u3001instance \u7b49\u6807\u7b7e\u6269\u5c55\uff1b\u5bf9\u4e8e Telegraf \u6570\u636e\uff0c\u901a\u8fc7 pod_name \u3001\u8fd0\u884cIP \u7b49\u6807\u7b7e\u6269\u5c55\u3002 \u4e0b\u9762\u6211\u4eec\u7ed3\u5408 DeepFlow \u7684 SQL API \u548c Grafana Panel\uff0c\u5b9e\u9645\u6765\u770b\u770b\u6ce8\u5165\u7684\u6807\u51c6\u5316\u6807\u7b7e\u5728\u5b9e\u6218\u4e2d\u4ea7\u751f\u7684\u4e1d\u6ed1\u6548\u679c\u3002 \u6253\u901a AutoMetrics \u548c Integration Metrics\uff1a \u4e0b\u56fe\u5de6\u56fe\u4e3a\u901a\u8fc7 Prometheus \u96c6\u6210\u7684\u6570\u636e\uff0c\u53f3\u56fe\u4e3a DeepFlow eBPF/cBPF AutoMetrics\u3002\u5f97\u76ca\u4e8e\u6807\u7b7e\u7684\u6807\u51c6\u5316\uff0c\u6211\u4eec\u57fa\u4e8e\u5bb9\u5668 Pod\u3001K8s \u81ea\u5b9a\u4e49 Label \u7b49\u4fe1\u606f\u7684\u4e00\u4e2a\u67e5\u8be2\u6761\u4ef6\u53ef\u4ee5\u67e5\u8be2\u4e0d\u540c\u6570\u636e\u6e90\u3002 \u4e0b\u56fe\u5de6\u56fe\u4e3a\u901a\u8fc7 Telegraf \u96c6\u6210\u7684\u6570\u636e\uff0c\u53f3\u56fe\u4e3a DeepFlow eBPF/cBPF AutoMetrics\u3002\u540c\u6837\uff0c\u6211\u4eec\u57fa\u4e8e\u4e91\u670d\u52a1\u5668\u3001VPC \u7b49\u8d44\u6e90\u4fe1\u606f\u7684\u4e00\u4e2a\u67e5\u8be2\u6761\u4ef6\u53ef\u4ee5\u67e5\u8be2\u4e0d\u540c\u6570\u636e\u6e90\u3002 \u6253\u901a Metrics\u3001Tracing\u3001Logging \u4e09\u5927\u652f\u67f1\uff1a \u5f97\u76ca\u4e8e DeepFlow \u4e2d\u6240\u6709\u6570\u636e\u7684\u6807\u7b7e\u6807\u51c6\u5316\uff0c\u4f7f\u7528\u8005\u4e0d\u7528\u5173\u5fc3\u4e0d\u540c\u6570\u636e\u6e90\u7684\u5dee\u5f02\uff0c\u771f\u6b63\u7684\u6253\u7834\u6570\u636e\u5b64\u5c9b\u3002\u5229\u7528\u76f8\u540c\u7684\u6807\u7b7e\u3001\u65f6\u95f4\u8303\u56f4\uff0c\u5373\u4f7f\u5728\u4e0d\u61c2\u5e95\u5c42\u539f\u7406\u3001\u4e0d\u61c2\u4e1a\u52a1\u903b\u8f91\u3001\u4e0d\u61c2\u7ec4\u4ef6\u67b6\u6784\u7b49\u60c5\u51b5\u4e0b\uff0c\u4e5f\u80fd\u5feb\u901f\u5c06\u6574\u4e2a\u7cfb\u7edf\u76f8\u5173\u7684\u6570\u636e\u5173\u8054\u8d77\u6765\uff0c\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u53d1\u73b0\u6839\u56e0\u3002","title":"\u6807\u7b7e\u6807\u51c6\u5316\uff0c\u544a\u522b\u6570\u636e\u5b64\u5c9b"},{"location":"chap13/1deepflow/#_2","text":"Prometheus \u7684 relabeling \u673a\u5236\u80fd\u591f\u5bf9 Metrics \u7684\u6807\u7b7e\u8fdb\u884c\u7075\u6d3b\u7684\u7ba1\u7406\uff0cMetrics \u7684\u6240\u6709\u6807\u7b7e\u90fd\u662f\u5728\u8fd9\u4e2a\u9636\u6bb5\u7edf\u4e00\u6ce8\u5165\u6216\u8f6c\u6362\u7684\uff0c\u7279\u522b\u662f K8s \u8d44\u6e90\u76f8\u5173\u7684\u4fe1\u606f\u3002\u4f46\u662f relabeling \u7684\u914d\u7f6e\u975e\u5e38\u590d\u6742\uff0c\u4ee5\u9ed8\u8ba4\u7684 kubernetes-service-endpoints \u914d\u7f6e\u4e3a\u4f8b\u6211\u4eec\u6765\u611f\u53d7\u4e00\u4e0b\uff08\u671f\u671b\u6ca1\u6709\u6233\u4e2d\u4f60\u7684\u4f24\u5fc3\u5904\uff09\uff1a - job_name: kubernetes-service-endpoints # ... relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape] separator: ; regex: \"true\" replacement: $1 action: keep - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow] separator: ; regex: \"true\" replacement: $1 action: drop - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme] separator: ; regex: (https?) target_label: __scheme__ replacement: $1 action: replace - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path] separator: ; regex: (.+) target_label: __metrics_path__ replacement: $1 action: replace - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port] separator: ; regex: (.+?)(?::\\d+)?;(\\d+) target_label: __address__ replacement: $1:$2 action: replace - separator: ; regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+) replacement: __param_$1 action: labelmap - separator: ; regex: __meta_kubernetes_service_label_(.+) replacement: $1 action: labelmap - source_labels: [__meta_kubernetes_namespace] separator: ; regex: (.*) target_label: namespace replacement: $1 action: replace - source_labels: [__meta_kubernetes_service_name] separator: ; regex: (.*) target_label: service replacement: $1 action: replace - source_labels: [__meta_kubernetes_pod_node_name] separator: ; regex: (.*) target_label: node replacement: $1 action: replace \u53ef\u4ee5\u60f3\u8c61\u5982\u679c\u6211\u4eec\u8981\u52a0\u66f4\u591a\u7684\u6807\u7b7e\uff0c\u6216\u8005\u6211\u4eec\u8981\u7ed9\u81ea\u5df1\u7684\u4e1a\u52a1\u52a0\u6807\u7b7e\uff0c\u4f1a\u53d8\u5f97\u66f4\u590d\u6742\u3002\u6240\u4ee5\u4e00\u822c relabeling \u8fd9\u79cd\u4e8b\uff0c\u6211\u662f\u65ad\uff08\u8ba9\uff09\u7136\uff08\u5f00\uff09\u62d2\uff08\u53d1\uff09\u7edd\uff08\u5e72\uff09\u7684\uff01 \u5f53\u4f7f\u7528 DeepFlow \u96c6\u6210 Prometheus \u6570\u636e\u65f6\uff0c\u5f97\u76ca\u4e8e AutoTagging \u673a\u5236\uff0c\u6211\u4eec\u80fd\u591f\u6839\u636e instance \u6216 pod \u81ea\u52a8\u6269\u5c55\u4e30\u5bcc\u7684 K8s \u81ea\u5b9a\u4e49 Label\u3001K8s \u8d44\u6e90\u3001\u4e91\u8d44\u6e90\u6807\u7b7e\uff0c\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u7684\u914d\u7f6e\uff08\u53c8\u80fd\u548c\u5f00\u53d1\u505a\u670b\u53cb\u4e86\uff09 \u3002 \u90a3\u4e48\uff0c\u73b0\u5728\u4f60\u53ef\u4ee5\u5c06 relabeling \u914d\u7f6e\u8fdb\u884c\u7cbe\u7b80\u4e86\uff08instance \u6807\u7b7e\u603b\u662f\u4f1a\u5b58\u5728\uff0c\u5bf9\u4e8e HostNet Pod \u4fdd\u7559 pod \u6807\u7b7e\u5373\u53ef\uff09\uff0c\u7cbe\u7b80\u4e4b\u540e\u7684 Prometheus \u53d8\u5f97\u975e\u5e38\u6e05\u723d\uff1a \u600e\u4e48\u67e5\u8fd9\u4e9b\u6807\u7b7e\u5462\uff0c\u5207\u6362\u5230 Grafana \u4e2d\uff0c DeepFlow \u5df2\u7ecf\u81ea\u52a8\u7ed9 kubernetes-service-endpoints \u6307\u6807\u91cf\u6ce8\u5165\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u6807\u7b7e \uff1a","title":"\u6807\u7b7e\u81ea\u52a8\u5316\uff0c\u964d\u4f4e\u5de5\u4f5c\u8d1f\u62c5"},{"location":"chap13/1deepflow/#smartencoding","text":"\u4e1a\u52a1\u5f00\u53d1\u4ee5\u53ca Prometheus relabeling \u4e3a\u6570\u636e\u6ce8\u5165\u7684\u6807\u7b7e\u8fc7\u591a\u65f6\uff0c\u901a\u5e38\u4f1a\u9020\u6210 Prometheus \u5de8\u5927\u7684\u5b58\u7b97\u538b\u529b\u3002\u76f8\u4fe1\u9aa8\u7070\u7ea7 Prometheus \u73a9\u5bb6\u75db\u82e6\u7684\u56de\u5fc6\u5c31\u662f\u5728 keep\u3001drop\u3001replace \u4e4b\u95f4\u8fdb\u884c\u8270\u96be\u7684\u6289\u62e9\u3002\u63a5\u5165 DeepFlow \u540e\uff0cClickHouse \u7684\u7a00\u758f\u7d22\u5f15\u76f4\u63a5\u89e3\u51b3\u4e86\u9ad8\u57fa\u6807\u7b7e\u95ee\u9898\uff0c\u518d\u4e5f\u4e0d\u7528 drop \u5f00\u53d1\u8f9b\u82e6\u6253\u7684\u6807\u7b7e\u4e86\u3002 \u90a3\u4e48\u5927\u5bb6\u53ef\u80fd\u4f1a\u601d\u8003\uff0cDeepFlow \u81ea\u52a8\u6ce8\u5165\u4e86\u8fd9\u4e48\u591a\u6807\u7b7e\uff0c\u4f1a\u4e0d\u4f1a\u5bfc\u81f4\u81ea\u8eab agent \u548c server \u7684\u8d44\u6e90\u6d88\u8017\u98d9\u5347\uff1f\u5229\u7528 SmartEncoding\u673a\u5236\uff0c\u6211\u4eec\u5c06\u6240\u6709\u4e91\u8d44\u6e90\u3001\u5bb9\u5668\u8d44\u6e90\u6807\u7b7e\u7684\u6ce8\u5165\u6210\u672c\u964d\u4f4e\u4e86 10 \u500d\uff0c\u5c06 K8s \u81ea\u5b9a\u4e49 Label \u7684\u6ce8\u5165\u6210\u672c\u964d\u5230\u4e86 0\u3002\u76f8\u5173\u7ec6\u8282\u548c\u53ef\u91cd\u73b0\u7684 Benchmark \u4ee3\u7801\u6211\u4eec\u4e5f\u4f1a\u5728\u540e\u7eed\u7684\u6587\u7ae0\u4e2d\u9010\u6b65\u5206\u4eab\uff0c\u540c\u65f6\u4e5f\u6b22\u8fce\u793e\u533a\u7684\u5c0f\u4f19\u4f34\u8bd5\u7528\u3001\u538b\u6d4b\u3001\u53cd\u9988\u3002","title":"SmartEncoding\uff0c\u6781\u81f4\u6027\u80fd"},{"location":"chap13/1deepflow/#_3","text":"Remote Read\uff1a\u662f\u7684\uff0c\u4e0d\u652f\u6301 remote_read \u63a5\u53e3\u7684 Prometheus \u65b9\u6848\u662f\u6ca1\u6709\u7075\u9b42\u7684\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u540e\u7eed\u7248\u672c\u4e2d\u5b8c\u5584\u6b64\u80fd\u529b\u3002\u5b9e\u73b0\u8fd9\u4e2a\u80fd\u529b\u540e\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u5207\u6362\u4e3a\u66f4\u52a0\u8f7b\u91cf\u7ea7\u7684 Prometheus Agent Mode \u4e86\u3002 PromQL\uff1a\u4e3a\u4e86\u964d\u4f4e\u5927\u5bb6\u7684\u4f7f\u7528\u95e8\u69db\uff0c\u5e76\u4e14\u8ba9\u6307\u6807\u3001\u8ffd\u8e2a\u3001\u65e5\u5fd7\u6709\u7edf\u4e00\u7684\u67e5\u8be2\u4f53\u9a8c\uff0cDeepFlow \u4f7f\u7528\u6807\u51c6\u7684 SQL API\u3002\u4f46 PromQL \u5b9e\u5728\u592a\u706b\u4e86\uff0c\u800c\u4e14\u6709\u5927\u91cf\u5df2\u7ecf\u5b58\u5728\u7684\u544a\u8b66\u7b56\u7565\u3001Grafana Dashaboard \u57fa\u4e8e\u6b64\u5efa\u7acb\u3002DeepFlow \u5c06\u4f1a\u63d0\u4f9b PromQL \u4f5c\u4e3a\u4e00\u79cd\u67e5\u8be2\u65b9\u8a00\u3002 \u4e91\u8d44\u6e90\u6807\u7b7e\u3001\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff1a\u9664\u4e86\u81ea\u52a8\u6ce8\u5165\u4e91\u8d44\u6e90\u3001\u5bb9\u5668\u8d44\u6e90\u3001K8s \u81ea\u5b9a\u4e49 Label \u4ee5\u5916\uff0c\u6211\u4eec\u4e5f\u4f1a\u5728\u540e\u7eed\u7248\u672c\u4e2d\u652f\u6301\u516c\u6709\u4e91\u8d44\u6e90\u6807\u7b7e\u4ee5\u53ca\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u4fe1\u606f\u7684\u540c\u6b65\u3002 \u8fdb\u7a0b\u4fe1\u606f\uff1aeBPF \u662f DeepFlow \u7684\u770b\u5bb6\u672c\u9886\uff0c\u65e0\u8bba\u662f\u5426\u5728\u5bb9\u5668\u73af\u5883\u4e2d\uff0c\u6211\u4eec\u90fd\u4f1a\u5c06\u901a\u8fc7 eBPF \u91c7\u96c6\u5230\u7684\u8fdb\u7a0b\u4fe1\u606f\u6ce8\u5165\u5230\u6240\u6709\u89c2\u6d4b\u6570\u636e\u4e2d\u3002","title":"\u672a\u6765\u5c55\u671b"},{"location":"chap13/1deepflow/#deepflow","text":"DeepFlow \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u9ad8\u5ea6\u81ea\u52a8\u5316\u7684\u53ef\u89c2\u6d4b\u6027\u5e73\u53f0\uff0c\u662f\u4e3a\u4e91\u539f\u751f\u5e94\u7528\u5f00\u53d1\u8005\u5efa\u8bbe\u53ef\u89c2\u6d4b\u6027\u80fd\u529b\u800c\u91cf\u8eab\u6253\u9020\u7684\u5168\u6808\u3001\u5168\u94fe\u8def\u3001\u9ad8\u6027\u80fd\u6570\u636e\u5f15\u64ce\u3002DeepFlow \u4f7f\u7528 eBPF\u3001WASM\u3001OpenTelemetry \u7b49\u65b0\u6280\u672f\uff0c\u521b\u65b0\u7684\u5b9e\u73b0\u4e86 AutoTracing\u3001AutoMetrics\u3001AutoTagging\u3001SmartEncoding \u7b49\u6838\u5fc3\u673a\u5236\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u63d0\u5347\u57cb\u70b9\u63d2\u7801\u7684\u81ea\u52a8\u5316\u6c34\u5e73\uff0c\u964d\u4f4e\u53ef\u89c2\u6d4b\u6027\u5e73\u53f0\u7684\u8fd0\u7ef4\u590d\u6742\u5ea6\u3002\u5229\u7528 DeepFlow \u7684\u53ef\u7f16\u7a0b\u80fd\u529b\u548c\u5f00\u653e\u63a5\u53e3\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5feb\u901f\u5c06\u5176\u878d\u5165\u5230\u81ea\u5df1\u7684\u53ef\u89c2\u6d4b\u6027\u6280\u672f\u6808\u4e2d\u3002 GitHub \u5730\u5740\uff1ahttps://github.com/deepflowys/deepflow","title":"\u5173\u4e8e DeepFlow"},{"location":"chap13/2Prometheus_opentele/","text":"2 Prometheus\u4e0eOpenTelemetry\u8be5\u9009\u54ea\u4e2a\uff1f 1 Prometheus vs. OpenTelemetry\u6307\u6807\uff1a\u5171\u540c\u70b9 Prometheus\u662f\u4e00\u4e2a\u53ef\u89c2\u6d4b\u6027\u5de5\u5177\uff08\u5305\u62ec\u6536\u96c6\u3001\u5b58\u50a8\u548c\u67e5\u8be2\uff09\uff0c\u5b83\u4f7f\u7528\u7684\u6307\u6807\u6a21\u578b\u662f\u4e3a\u9002\u5e94\u81ea\u5df1\u7684\u9700\u8981\u800c\u8bbe\u8ba1\u7684 \u53e6\u4e00\u65b9\u9762\uff0cOpenTelemetry\u7684\u6307\u6807\u7ec4\u4ef6\u5c06\u8bb8\u591a\u4e0d\u540c\u7684\u6570\u636e\u6a21\u578b\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5355\u4e00\u7684\u6846\u67b6\uff08\u63d0\u4f9b\u65e0\u5b58\u50a8\u6216\u67e5\u8be2\u7684\u96c6\u5408\uff09 \u3002 \u8fd9\u4e9b\u6838\u5fc3\u5dee\u5f02\u53cd\u6620\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u6027\uff1a Prometheus\u662f\u4e00\u4e2a\u76f4\u63a5\u7684\u6a21\u578b\uff0c\u901a\u5e38\u4ee5\u6587\u672c\u5f62\u5f0f\u66b4\u9732\u51fa\u6765\uff0c\u800cOpenTelemetry\u662f\u7531\u4e09\u79cd\u6a21\u578b\u7ec4\u6210\u7684\u66f4\u590d\u6742\u7684\u7cfb\u5217\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u683c\u5f0f\u8fdb\u884c\u4f20\u8f93\u3002 \u8fd9\u4e24\u4e2a\u7cfb\u7edf\u4e5f\u5141\u8bb8\u901a\u8fc7SDK\u8fdb\u884c\u4ee3\u7801\u7ea7\u7684\u76d1\u63a7\uff0c \u4f46OpenTelemetry\u4e5f\u4e13\u6ce8\u4e8e\u652f\u6301\u81ea\u52a8\u57cb\u70b9\uff0c\u5c3d\u53ef\u80fd\u4e0d\u4f1a\u4fb5\u5165\u5e94\u7528\u7a0b\u5e8f\u3002 \u90a3\u4e48\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u7684\u6307\u6807\u4e4b\u95f4\u6709\u4ec0\u4e48\u91cd\u53e0\uff1f \u672c\u8d28\u4e0a\uff0cOpenTelemetry\u5141\u8bb8\u8868\u793a\u6240\u6709Prometheus\u6307\u6807\u7c7b\u578b\uff08 Counters\u3001Gauges\u3001Summaries\u548cHistograms \uff09\u3002 \u5c3d\u7ba1\u5982\u6b64\uff0c Prometheus\u4ecd\u7136\u4e0d\u80fd\u8868\u793aOpenTelemetry\u6307\u6807\u7684\u67d0\u4e9b\u914d\u7f6e\uff0c\u5305\u62ecDelta\u8868\u793a\u6cd5\u548c\u6307\u6570Histograms \uff08\u5c3d\u7ba1\u8fd9\u4e9b\u5c06\u5f88\u5feb\u5728Prometheus\u4e2d\u88ab\u652f\u6301\uff09\uff0c\u4ee5\u53ca\u6574\u6570\u6570\u503c\u7c7b\u578b\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0cPrometheus\u6307\u6807\u662fOpenTelemetry\u6307\u6807\u7684\u4e00\u4e2a\u4e25\u683c\u5b50\u96c6 \u3002 2 \u4e3b\u8981\u533a\u522b \u867d\u7136\u5185\u90e8\u6a21\u578b\u7684\u5de5\u4f5c\u65b9\u5f0f\u6709\u4e00\u4e9b\u5dee\u5f02\uff0c\u4f46\u4ece\u5f00\u53d1\u8005\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4e24\u8005\u4e4b\u95f4\u7684\u5b9e\u9645\u5dee\u5f02\u66f4\u591a\u662f\u4e0e\u751f\u6001\u7cfb\u7edf\u6709\u5173\u3002 Prometheus\u63d0\u4f9b\u6307\u6807\u6536\u96c6\u3001\u5b58\u50a8\u548c\u67e5\u8be2\u3002\u5b83\u901a\u5e38\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u722c\u866b\u7cfb\u7edf\u6536\u96c6\u6307\u6807\uff0c\u4ece\u4e3b\u673a\u4e2d\u63d0\u53d6\u6570\u636e \u3002 Prometheus\u6570\u636e\u5e93\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u7528Prometheus\u67e5\u8be2\u8bed\u8a00PromQL\u6765\u67e5\u8be2\u3002 Prometheus\u6570\u636e\u5e93\u53ef\u4ee5\u5904\u7406\u5927\u91cf\u7684\u6570\u636e\uff0c\u4f46\u5b83\u5e76\u4e0d\u662f\u6b63\u5f0f\u610f\u4e49\u4e0a\u7684\u957f\u671f\u5b58\u50a8\u89e3\u51b3\u65b9\u6848\uff0c\u6240\u4ee5\u6570\u636e\u901a\u5e38\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u88ab\u53d1\u9001\u5230\u53e6\u4e00\u4e2a\u5b58\u50a8\u89e3\u51b3\u65b9\u6848\uff0c\u5982Promsale\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7PromQL\u8fdb\u884c\u8bfb\u53d6\u3002 OpenTelemetry\u7684\u9886\u57df\u8981\u5c0f\u5f97\u591a\u3002\u5b83\u901a\u8fc7\u63a8\u9001\u6216\u62c9\u52a8\uff0c\u4f7f\u7528\u7edf\u4e00\u7684API\u6536\u96c6\u6307\u6807\uff08\u4ee5\u53ca\u94fe\u8def\u8ffd\u8e2a\u548c\u65e5\u5fd7\uff09\uff0c\u53ef\u80fd\u4f1a\u5bf9\u5b83\u4eec\u8fdb\u884c\u8f6c\u6362\uff0c\u5e76\u5c06\u5b83\u4eec\u53d1\u9001\u5230\u5176\u4ed6\u7cfb\u7edf\u8fdb\u884c\u5b58\u50a8\u6216\u67e5\u8be2\u3002 \u901a\u8fc7\u53ea\u5173\u6ce8\u53ef\u89c2\u6d4b\u6027\u4e2d\u4e0e\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e92\u7684\u90e8\u5206\uff0c OpenTelemetry\u5c06Signal\u7684\u521b\u5efa\u4e0e\u5b58\u50a8\u3001\u67e5\u8be2\u95ee\u9898\u89e3\u8026 \u3002 \u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c \u8fd9\u610f\u5473\u7740OpenTelemetry\u7684\u6307\u6807\u5f80\u5f80\u6700\u7ec8\u4f1a\u56de\u5230Prometheus\u6216\u4e0ePrometheus\u517c\u5bb9\u7684\u7cfb\u7edf\u4e2d \u3002 \u5f53\u6211\u4eec\u5728\u770b\u5b9e\u9645\u7684\u6307\u6807\u7c7b\u578b\u65f6\uff0c\u6709\u51e0\u4e2a\u533a\u522b\uff1a OpenTelemetry\u53ef\u4ee5\u5c06\u6307\u6807\u8868\u793a\u4e3a\u5dee\u503c\uff0c\u800c\u4e0d\u662f\u7d2f\u79ef\u503c\uff0c\u5b58\u50a8\u6bcf\u4e2a\u6570\u636e\u70b9\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u800c\u4e0d\u662f\u7d2f\u79ef\u503c \u3002Prometheus\u5728\u8bbe\u8ba1\u4e0a\u4e0d\u5141\u8bb8\u8fd9\u6837\u505a\uff0c\u5c3d\u7ba1\u4f60\u53ef\u4ee5\u5728\u67e5\u8be2\u65f6\u8ba1\u7b97\u51fa\u8fd9\u4e9b\u503c\u3002\u8fd9\u4e0d\u662fOpenTelemetry\u7684\u9ed8\u8ba4\u9009\u9879\uff0c\u4e3b\u8981\u7528\u4e8e\u90a3\u4e9b\u53ea\u8868\u793a\u4e3a\u901f\u7387\u7684\u6307\u6807\u3002 OpenTelemetry\u8fd8\u5141\u8bb8\u6307\u6807\u70b9\u503c\u662f\u6574\u6570\u800c\u4e0d\u662f\u6d6e\u70b9\u6570\uff0c\u8fd9\u662fPrometheus\u65e0\u6cd5\u8868\u8fbe\u7684\u3002 OpenTelemetry\u53ef\u4ee5\u7ed9Histogram\u9644\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u5143\u6570\u636e\uff0c \u5141\u8bb8\u8ddf\u8e2a\u6700\u5927\u548c\u6700\u5c0f\u503c \u3002 \u6700\u540e\uff0cOpenTelemetry\u6709\u4e00\u4e2a\u6307\u6570\u76f4\u65b9\u56fe\u805a\u5408\u7c7b\u578b\uff08\u5b83\u4f7f\u7528\u4e00\u4e2a\u516c\u5f0f\u548c\u4e00\u4e2a\u6bd4\u4f8b\u6765\u8ba1\u7b97\u6876\u7684\u5927\u5c0f\uff09\u3002Prometheus\u76ee\u524d\u8fd8\u4e0d\u80fd\u8868\u793a\u8fd9\u4e2a\uff0c\u4f46\u786e\u5b9e\u6709\u4e00\u4e2a\u5b8c\u5168\u517c\u5bb9\u7684\u6307\u6807\u7c7b\u578b\u6b63\u5728\u5f00\u53d1\u4e2d\u3002 3 \u2014 \u9009\u62e9\u5176\u4e00 \u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u5bf9\u8fd9\u4e24\u79cd\u6280\u672f\u4e2d\u7684\u4e00\u79cd\u8fdb\u884c\u6295\u8d44\uff0c\u5728Prometheus\u548cOpenTelemetry\u4e4b\u95f4\u7684\u9009\u62e9\u53ef\u80fd\u4f1a\u5f52\u7ed3\u4e3a\u56db\u4e2a\u95ee\u9898\uff1a \u4f60\u662f\u5426\u8ba1\u5212\u6355\u83b7\u94fe\u8def\u8ffd\u8e2a\u3001\u65e5\u5fd7\u548c\u6307\u6807 \uff1f\u5982\u679c\u662f\u8fd9\u6837\uff0cOpenTelemetry\u5c06\u5141\u8bb8\u4f60\u4f7f\u7528\u76f8\u540c\u7684\u5e93\u6765\u6d4b\u91cf\u6240\u6709\u4e09\u79cd\u4fe1\u53f7\u7c7b\u578b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u597d\u5904\u3002\u4f60\u751a\u81f3\u53ef\u4ee5\u628a\u6240\u6709\u8fd9\u4e09\u79cd\u4fe1\u53f7\u53d1\u9001\u5230\u540c\u4e00\u4e2a\u540e\u7aef\uff0c\u5e76\u4f7f\u7528\u4e00\u79cd\u8bed\u8a00\u6765\u67e5\u8be2\u5b83\u4eec\uff08\u4f8b\u5982\uff0cPromscale\u548cSQL\uff09\u3002 \u4f60\u662f\u5426\u91cd\u89c6\u7a33\u5b9a\u6027\u548c\u7ecf\u8fc7\u6218\u6597\u8003\u9a8c\u7684\u7cfb\u7edf\uff1f \u5982\u679c\u662f\u8fd9\u6837\uff0c\u968f\u7740OpenTelemetry\u5728\u751f\u4ea7\u4e0a\u7684\u9010\u6b65\u63a8\u5e7f\uff0c Prometheus\u6216\u8bb8\u662f\u6700\u8fd1\u8fd9\u51e0\u5e74\u7684\u6b63\u786e\u7b54\u6848 \u3002 \u4f60\u60f3\u4f7f\u7528\u4e00\u4e2a\u591a\u6b65\u9aa4\u7684\u8def\u7531\u548c\u8f6c\u6362\u7ba1\u9053\u5417 \uff1f\u5982\u679c\u662f\u8fd9\u6837\uff0c\u4e5f\u8bb8OpenTelemetry\u53ef\u80fd\u503c\u5f97\u4e00\u770b\u3002 \u4f60\u5e0c\u671b\u80fd\u591f\u4fdd\u6301\u5c3d\u53ef\u80fd\u7684\u7075\u6d3b\u6027\u5417\uff1f\u90a3\u4e48OpenTelemetry\u5c31\u9002\u5408\u4f60\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5b9e\u73b0\u4efb\u4f55\u5b58\u50a8\u6216\u67e5\u8be2\uff0c\u7ed9\u4f60\u6700\u5927\u7684\u7075\u6d3b\u6027\u3002 \u5927\u591a\u6570\u7ec4\u7ec7\u53ef\u80fd\u4f1a\u6df7\u5408\u4f7f\u7528\u4e24\u79cd\u6807\u51c6\u3002Prometheus\u7528\u4e8e\u57fa\u7840\u8bbe\u65bd\u76d1\u63a7\uff0c\u5229\u7528\u66f4\u6210\u719f\u7684\u96c6\u6210\u751f\u6001\u7cfb\u7edf\u4ece\u6570\u767e\u4e2a\u7ec4\u4ef6\u4e2d\u63d0\u53d6\u6307\u6807\uff0c\u800cOpenTelemetry\u7528\u4e8e\u5df2\u5f00\u53d1\u7684\u670d\u52a1 \u8bb8\u591a\u5de5\u7a0b\u5e08\u53ef\u80fd\u4f1a\u4f7f\u7528Prometheus\u4f5c\u4e3a\u540e\u7aef\u6765\u5b58\u50a8Prometheus\u548cOpenTelemetry\u6307\u6807\uff0c\u5e76\u9700\u8981\u786e\u4fdd\u4ed6\u4eec\u4ea7\u751f\u7684OpenTelemetry\u6307\u6807\u4e0ePrometheus\u517c\u5bb9\u3002 \u5728\u5b9e\u8df5\u4e2d\uff0c \u8fd9\u610f\u5473\u7740\u9009\u62e9\u65f6\u95f4\u7684\u7d2f\u79ef\u805a\u5408\uff0c\u5e76\u4e14\u53ea\u4f7f\u7528Prometheus\u652f\u6301\u7684OpenTelemetry\u6307\u6807\u7c7b\u578b \uff08\u5728Prometheus\u589e\u52a0\u5bf9OpenTelemetry\u6307\u6570\u76f4\u65b9\u56fe\u7684\u652f\u6301\u4e4b\u524d\uff0c\u6682\u4e0d\u8003\u8651\u8fd9\u4e9b\u6307\u6807\uff09\u3002 4 \u2014 \u5728Prometheus\u548cOpenTelemetry\u4e4b\u95f4\u8f6c\u6362 \u5982\u679c\u4f60\u65e2\u60f3\u6df7\u5408\u4f7f\u7528\uff0c\u540c\u65f6\u4e5f\u60f3\u5339\u914d\u6807\u51c6\uff0c\u90a3\u4e48\u597d\u6d88\u606f\u662fOpenTelemetry\u63d0\u4f9b\u4e86OpenTelemetry\u6536\u96c6\u5668\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u540c\u65f6\u517c\u987e\u4e24\u4e2a\u65b9\u5411\uff08\u5982\u679c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\uff0c\u751a\u81f3\u5728\u7c7b\u578b\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\uff09\u3002 OpenTelemetry Collector\u662f\u53ef\u63d2\u62d4\u7684\uff0c\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u6765\u542f\u7528Receiver\u548cExporter\u7ec4\u4ef6 \u3002 \u6211\u4eec\u5c06\u4f7f\u7528contrib\u5305\uff0c\u5176\u4e2d\u5305\u62ec\u8bb8\u591aReceiver\u548cExporter\u3002\u4f60\u53ef\u4ee5\u4eceGitHub\u7684 Release\u9875\u9762 \u4e0b\u8f7d\u76f8\u5e94\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u5728\u751f\u4ea7\u4e2d\u8fd0\u884c\u91c7\u96c6\u5668\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 OpenTelemetry\u6536\u96c6\u5668\u6784\u5efa\u5de5\u5177 \u7f16\u8bd1\u4e00\u4e2a\u53ea\u5305\u542b\u4f60\u9700\u8981\u7684\u7ec4\u4ef6\u7684\u7248\u672c\u3002 \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u7528\u4ee5\u4e0b\u7684\u914d\u7f6e\u6587\u4ef6\u8fd0\u884c\u91c7\u96c6\u5668\uff0c\u8be5\u6587\u4ef6\u4fdd\u5b58\u4e3aconfig.yaml\uff1a receivers: prometheus: config: scrape_configs: - job_name: demo scrape_interval: 15s static_configs: - targets: ['localhost:9090'] exporters: prometheus: endpoint: \"0.0.0.0:1234\" logging: loglevel: debug service: telemetry: logs: level: debug pipelines: metrics: receivers: [prometheus] processors: [] exporters: [logging,prometheus] \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8\u91c7\u96c6\u5668\uff1a otelcol \u2013config config.yaml \u91c7\u96c6\u5668\u5c06\u4f7f\u7528Prometheus Receiver\u6765\u5c1d\u8bd5\u6293\u53d6Prometheus\u670d\u52a1\uff0c\u5730\u5740\u662f http://localhost:9100 \u3002\u5982\u679c\u4f60\u9700\u8981\u4e00\u4e9b\u4e1c\u897f\u6765\u6d4b\u8bd5\uff0c\u4f60\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a\u4f7f\u7528\u8fd9\u4e2a\u7aef\u53e3\u7684\u672c\u5730 node_exporter \u3002 \u5f53\u6570\u636e\u4ece\u8fd9\u4e2a\u670d\u52a1\u4e2d\u88ab\u6293\u53d6\u65f6\uff0c\u4f60\u4f1a\u770b\u5230\u5b83\u663e\u793a\u5728\u6536\u96c6\u5668\u7684\u65e5\u5fd7\u8f93\u51fa\u4e2d\uff0c\u800c\u4e14\u5b83\u4e5f\u53ef\u4ee5\u4ecePrometheus Exporter\u7684\u7aef\u70b9\u4e2d\u83b7\u5f97\uff0c\u6536\u96c6\u5668\u8fd0\u884c\u5728 http://localhost:1234 \u3002 Prometheus\u7684\u8fdc\u7a0b\u5199\u5165\uff08Remote Write\uff09Exporter\u4e5f\u662f\u4e00\u4e2a\u9009\u62e9\uff0c\u4f46\u5728\u73b0\u9636\u6bb5\u5b83\u7684\u5e94\u7528\u8303\u56f4\u6bd4\u8f83\u6709\u9650\uff0c\u53ea\u80fd\u5904\u7406\u79ef\u7d2fCounters\u548cGauges\u3002 \u8bf4\u660ePrometheus\u5982\u4f55\u4e0eOpenTelemetry\u6536\u96c6\u5668\u4e92\u52a8 \u5728Prometheus\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c Counter\u662f\u5355\u8c03\u7684\uff08\u6301\u7eed\u589e\u52a0\uff09\uff0c\u800cGauge\u5219\u4e0d\u662f\uff08\u5b83\u53ef\u4ee5\u4e0a\u5347\u548c\u4e0b\u964d\uff09 Summary\u62a5\u544a\u767e\u5206\u4f4d\uff0c\u4e0d\u9700\u8981\u90a3\u4e48\u591a\u7684\u5ba2\u6237\u7aef\u8ba1\u7b97\u3002\u53e6\u4e00\u65b9\u9762\uff0cHistogram\u66f4\u7075\u6d3b\uff0c\u63d0\u4f9b\u539f\u59cb\u6876\u7684\u5bbd\u5ea6\u548c\u8ba1\u6570\u503c \u76f8\u6bd4\u4e4b\u4e0b\uff0cOpenTelemetry\u6709\u4e94\u79cd\u6307\u6807\u7c7b\u578b\uff1a Sums\u3001Gauges\u3001Summaries\u3001Histograms\u548c\u6307\u6570Histograms \u3002 \u5982\u679c\u4f60\u662f\u4e00\u4e2a\u521b\u5efaOpenTelemetry\u6307\u6807\u7684\u5f00\u53d1\u8005\uff0c\u4f60\u5904\u7406\u7684\u662f\u4e8b\u4ef6\u6a21\u578b\uff08Event Model\uff09\uff0c\u7136\u540e\u7531OpenTelemetry SDK\u7ffb\u8bd1\uff08\u7528\u4e8e\u4f20\u8f93\uff09\u4e3aOpenTelemetry\u534f\u8bae\uff08OTLP\uff09\u6d41\u6a21\u578b\u3002 \u6211\u4eec\u5728\u8fd9\u91cc\u5f15\u7528\u7684\u6307\u6807\u7c7b\u578b\u662fOTPL\u6a21\u578b\u7684\u4e00\u90e8\u5206\uff0c Prometheus Receiver \u76f4\u63a5\u7ffb\u8bd1\u6210\u8fd9\u79cd\u6a21\u578b\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u4e9b\u65b0\u7684\u6307\u6807\u7c7b\u578b\u662f\u4e0d\u8a00\u81ea\u660e\u7684\uff0c\u76f4\u63a5\u6620\u5c04\u5230Prometheus\u7684\u6307\u6807\u7c7b\u578b\u4e0a\uff08Summary\u53ea\u4e3aPrometheus\u517c\u5bb9\u800c\u5b9e\u73b0\uff0c\u4f60\u4e0d\u4f1a\u5728\u5176\u4ed6\u5730\u65b9\u770b\u5230\u5b83\u7684\u4f7f\u7528\uff09\u3002\u6307\u6570Histogram\u662f\u4e2a\u4f8b\u5916\uff0c\u5b83\u76ee\u524d\u4e0d\u80fd\u88ab\u8f6c\u6362\u5230Prometheus\u6307\u6807\uff08\u4f46\u5c06\u6765\u53ef\u4ee5\u88ab\u8f6c\u6362\uff09\u3002 \u4e0b\u56fe\u63cf\u8ff0\u4e86\u6bcf\u4e2a\u65b9\u5411\u4e0a\u7684\u6620\u5c04\u662f\u5982\u4f55\u5de5\u4f5c\u7684 OpenTelemetry\u627f\u8bfa\u5bf9Prometheus\u6307\u6807\u8fdb\u884c\u65e0\u635f\u8f6c\u6362\uff0c\u4f7f\u7528\u6237\u80fd\u591f\u6839\u636e\u9700\u8981\u8fdb\u884c\u8f6c\u6362\u800c\u4e0d\u5fc5\u62c5\u5fc3\u6570\u636e\u4e22\u5931\u3002 5 \u2014 \u5c06Prometheus\u8f6c\u6362\u6210OpenTelemetry \u8ba9\u6211\u4eec\u901a\u8fc7\u770bPrometheus\u6293\u53d6\u548cOpenTelemetry\u6307\u6807\u7684\u4f8b\u5b50\u6765\u63a2\u7d22Prometheus\u5230OpenTelemetry\u7684\u8f6c\u6362\u662f\u5982\u4f55\u8fdb\u884c\u7684\u3002 \u867d\u7136OpenTelemetry\u6ca1\u6709\u50cfPrometheus\u90a3\u6837\u7684\u6587\u672c\u534f\u8bae\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Logging Exporter\u6765\u53d1\u5c04\u6355\u83b7\u5230\u7684\u6307\u6807\u7684\u6587\u672c\u8f6c\u50a8\u5f62\u5f0f \u3002 OpenTelemetry\u5c06\u4ece\u6293\u53d6\u4efb\u52a1\u672c\u8eab\u63d0\u53d6\u4e00\u4e9b\u4fe1\u606f\u5e76\u5b58\u50a8\u8d77\u6765\uff0c\u4ea7\u751f\u4ee5\u4e0b\u8f93\u51fa\uff0c\u5176\u4e2d\u5b9a\u4e49\u4e86\u5c06\u9644\u52a0\u5230\u6240\u6709\u6307\u6807\u7684\u8d44\u6e90\u6807\u7b7e\u3002 Resource SchemaURL: Resource labels: -> service.name: STRING(node-exporter) -> service.instance.id: STRING(127.0.0.1:9100) -> net.host.port: STRING(9100) -> http.scheme: STRING(http) Counters \u5982\u679c\u6211\u4eec\u6709\u5982\u4e0b\u7684Prometheus\u6293\u53d6\u6570\u636e\uff0c\u5e76\u628a\u91c7\u96c6\u5668\u6307\u5411\u5b83\uff1a HELP http_requests_total Total HTTP requests served TYPE http_requests_total counter http_requests_total{method=\"post\",code=\"200\"} 1028 http_requests_total{method=\"post\",code=\"400\"} 5 \u7136\u540e\u6536\u96c6\u5668\u5c06\u4ece\u65e5\u5fd7Exporter\u4e2d\u8f93\u51fa\u4ee5\u4e0b\u6307\u6807\u3002 Metric #0 Descriptor: -> Name: http_requests_total -> Description: Total HTTP requests served -> Unit: -> DataType: Sum -> IsMonotonic:true-> AggregationTemporality: AGGREGATION_TEMPORALITY_CUMULATIVE NumberDataPoints #0 Data point attributes: -> code: STRING(200) -> method: STRING(post) StartTimestamp: 2022-06-16 11:49:22.117 +0000 UTC Timestamp: 2022-06-16 11:49:22.117 +0000 UTC Value: 1028.000000 NumberDataPoints #1 Data point attributes: -> code: STRING(400) -> method: STRING(post) StartTimestamp: 2022-06-16 11:49:22.117 +0000 UTC Timestamp: 2022-06-16 11:49:22.117 +0000 UTC Value: 5.00000 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6307\u6807\u7684\u7c7b\u578b\uff08DataType\uff09 \u662fSum\uff0cAggregationTemporality\u662fCumulative\uff08Prometheus\u652f\u6301\u7684\u552f\u4e00\u805a\u5408\u65b9\u5f0f\uff09 \u3002 \u6bcf\u4e2a\u6570\u636e\u70b9\u6709\u4e24\u4e2a\u65f6\u95f4\u6233\uff0c\u4ee5\u8ddf\u8e2aCounter\u7684\u590d\u4f4d\u3002Timestamp\u662f\u8bb0\u5f55\u7684\u65f6\u95f4\uff0cStartTimestamp\u662f\u6536\u5230\u7b2c\u4e00\u4e2a\u6837\u672c\u7684\u65f6\u95f4\u6216\u6700\u540e\u4e00\u6b21\u8ba1\u6570\u5668\u590d\u4f4d\u7684\u65f6\u95f4\uff0c\u6ca1\u6709\u6307\u5b9a\u5355\u4f4d \u3002 \u8fd9\u662f\u56e0\u4e3aPrometheus\u6307\u5b9a\u5355\u4f4d\u7684\u65b9\u5f0f\u662f\u5c06\u5176\u4f5c\u4e3a\u6587\u672c\u5ea6\u91cf\u540d\u79f0\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e0d\u80fd\u88abOpenTelemetry Collector\u51c6\u786e\u89e3\u7801 Gauges \u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2aPrometheus\u7684Gauge\u6570\u636e\uff0c\u5e76\u6293\u53d6\u5b83\uff1a HELP node_filesystem_avail_bytes Available bytes in filesystems TYPE node_filesystem_avail_bytes gauge node_filesystem_avail_bytes{method=\"/data\",fstype=\"ext4\"} 250294 \u6211\u4eec\u4f1a\u5728\u91c7\u96c6\u5668\u4e0a\u770b\u5230\u5982\u4e0b\u6570\u636e\uff1a Metric #0 Descriptor: -> Name: node_filesystem_avail_bytes -> Description: Available bytes in filesystems -> Unit: -> DataType: Gauge NumberDataPoints #0 Data point attributes: -> fstype: STRING(ext4) -> method: STRING(/data) StartTimestamp: 1970-01-01 00:00:00 +0000 UTC Timestamp: 2022-06-23 07:42:07.117 +0000 UTC Value: 250294.000000 \u8fd9\u91cc\uff0c\u6570\u636e\u7c7b\u578b\u88ab\u8bbe\u7f6e\u4e3aGauge\u3002Gauge\u662fOpenTelemetry\u5c06\u8f6c\u6362\u4e3a\u7684\u9ed8\u8ba4\u6307\u6807\u7c7b\u578b\uff0c\u6240\u4ee5\u5728Prometheus\u7684\u6570\u636e\u4e2d\u7f3a\u5c11# TYPE\u884c\uff0c\u5c06\u5bfc\u81f4\u51fa\u73b0\u4e00\u4e2aGauge\u3002 Prometheus\u672c\u8eab\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4f1a\u4f7f\u7528\u7c7b\u578b\u4fe1\u606f\uff08\u5b83\u5728\u5185\u90e8\u5e76\u4e0d\u533a\u5206Counter\u548cGauge\uff09\uff0c\u6240\u4ee5\u4e00\u4e9bExporter\u4f1a\u653e\u5f03\u8fd9\u4e24\u884c\u6ce8\u91ca\uff0c\u4ee5\u4f7f\u6293\u53d6\u884c\u4e3a\u66f4\u6709\u6548\u7387\u3002\u8fd9\u5c06\u5bfc\u81f4\u6240\u6709OpenTelemetry\u6307\u6807\u90fd\u662fGauge\u3002 Histograms Prometheus\u7684histogram\u6570\u636e\u5982\u4e0b\uff1a HELP http_request_duration_seconds Histogram of latencies for HTTP requests. TYPE http_request_duration_seconds histogram http_request_duration_seconds_bucket{handler=\"/\",le=\"0.1\"} 25547 http_request_duration_seconds_bucket{handler=\"/\",le=\"0.2\"} 26688 http_request_duration_seconds_bucket{handler=\"/\",le=\"0.4\"} 27760 http_request_duration_seconds_bucket{handler=\"/\",le=\"1\"} 28641 http_request_duration_seconds_bucket{handler=\"/\",le=\"3\"} 28782 http_request_duration_seconds_bucket{handler=\"/\",le=\"8\"} 28844 http_request_duration_seconds_bucket{handler=\"/\",le=\"20\"} 28855 http_request_duration_seconds_bucket{handler=\"/\",le=\"60\"} 28860 http_request_duration_seconds_bucket{handler=\"/\",le=\"120\"} 28860 http_request_duration_seconds_bucket{handler=\"/\",le=\"+Inf\"} 28860 http_request_duration_seconds_sum{handler=\"/\"} 1863.80491025699 http_request_duration_seconds_count{handler=\"/\"} 28860 \u5728OpenTelemetry\u7684\u65e5\u5fd7Exporter\u4e2d\u4f1a\u4ee5\u5982\u4e0b\u683c\u5f0f\u8868\u793a\uff1a Metric #0 Descriptor: -> Name: prometheus_http_request_duration_seconds -> Description: Histogram of latencies for HTTP requests. -> Unit: -> DataType: Histogram -> AggregationTemporality: AGGREGATION_TEMPORALITY_CUMULATIVE HistogramDataPoints #0 Data point attributes: -> handler: STRING(/) StartTimestamp: 2022-06-23 07:54:07.117 +0000 UTC Timestamp: 2022-06-23 07:54:07.117 +0000 UTC Count: 28860 Sum: 1863.804910 ExplicitBounds #0: 0.100000 ExplicitBounds #1: 0.200000 ExplicitBounds #2: 0.400000 ExplicitBounds #3: 1.000000 ExplicitBounds #4: 3.000000 ExplicitBounds #5: 8.000000 ExplicitBounds #6: 20.000000 ExplicitBounds #7: 60.000000 ExplicitBounds #8: 120.000000 Buckets #0, Count: 25547 Buckets #1, Count: 1141 Buckets #2, Count: 1072 Buckets #3, Count: 881 Buckets #4, Count: 141 Buckets #5, Count: 62 Buckets #6, Count: 11 Buckets #7, Count: 5 Buckets #8, Count: 0 Buckets #9, Count: 0 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728OpenTelemetry\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2aHistogram\uff0c\u4f46\u6709\u4e00\u70b9\u6211\u4eec\u4e0d\u80fd\u505a\u7684\u662f\u5305\u62ec\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff08OpenTelemetry\u652f\u6301\uff0c\u4f46Prometheus\u4e0d\u652f\u6301\uff09\u3002 Summaries Prometheus\u7684summary\u6570\u636e\u5982\u4e0b\uff1a HELP prometheus_rule_evaluation_duration_seconds The duration for a rule to execute. TYPE prometheus_rule_evaluation_duration_seconds summary prometheus_rule_evaluation_duration_seconds{quantile=\"0.5\"} 6.4853e-05 prometheus_rule_evaluation_duration_seconds{quantile=\"0.9\"} 0.00010102 prometheus_rule_evaluation_duration_seconds{quantile=\"0.99\"} 0.000177367 prometheus_rule_evaluation_duration_seconds_sum 1.623860968846092e+06 prometheus_rule_evaluation_duration_seconds_count 1.112293682e+09 \u5728OpenTelemetry\u7684\u65e5\u5fd7Exporter\u4e2d\u4f1a\u4ee5\u5982\u4e0b\u683c\u5f0f\u8868\u793a\uff1a Metric #3 Descriptor: -> Name: prometheus_rule_evaluation_duration_seconds -> Description: The duration for a rule to execute. -> Unit: -> DataType: Summary SummaryDataPoints #0 StartTimestamp: 2022-06-23 07:50:22.117 +0000 UTC Timestamp: 2022-06-23 07:50:22.117 +0000 UTC Count: 1112293682 Sum: 1623860.968846 QuantileValue #0: Quantile 0.500000, Value 0.000065 QuantileValue #1: Quantile 0.900000, Value 0.000101 QuantileValue #2: Quantile 0.990000, Value 0.000177 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u9009\u62e9\u4e86OpenTelemetry Summary\u6307\u6807\u7c7b\u578b\u2014\u2014\u8bb0\u4f4f\u8fd9\u662f\u4e3aPrometheus\u96c6\u6210\u660e\u786e\u521b\u5efa\u7684\uff0c\u4e0d\u5e94\u8be5\u5728\u5176\u4ed6\u5730\u65b9\u4f7f\u7528\u3002 \u5b83\u7c7b\u4f3c\u4e8e\u76f4\u65b9\u56fe\u7684\u8f93\u51fa\uff0c\u4f46\u662f\u5217\u51fa\u4e86\u767e\u5206\u4f4d\uff0c\u800c\u4e0d\u662f\u660e\u786e\u7684\u6876\u548c\u6876\u8ba1\u6570 \u3002 6 \u5c06OpenTelemetry\u8f6c\u6362\u6210Prometheus \u4f7f\u7528Prometheus Exporter\u5141\u8bb8\u6293\u53d6\uff0c\u6216\u8005\u4f7f\u7528Prometheus Remote Write Exporter\u76f4\u63a5\u63a8\u9001\u5230\u53e6\u4e00\u4e2aPrometheus\u5b9e\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6307\u6807\u4eceOpenTelemetry\u53d1\u9001\u5230Prometheus\u3002\u8fd9\u65b9\u9762\u6ca1\u6709\u4efb\u4f55\u610f\u5916\uff1a\u5982\u679c\u8f6c\u6362\u88ab\u652f\u6301\uff0c\u5b83\u7684\u53d1\u751f\u4e0d\u4f1a\u6709\u4efb\u4f55\u7cbe\u5ea6\u7684\u635f\u5931\u3002 \u9700\u8981\u8bb0\u4f4f\u7684\u4e00\u70b9\u662f\uff0c\u6709\u4e00\u4e9bOpenTelemetry\u6307\u6807\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u8f6c\u5316\u4e3aPrometheus\u6307\u6807\uff0c\u56e0\u4e3aPrometheus\u6709\u4e00\u4e2a\u66f4\u53d7\u7ea6\u675f\u7684\u6a21\u578b\u3002 \u4efb\u4f55AggregationTemporality\u4e3aDELTA\u7684\u6307\u6807\u5c06\u88abPrometheus Exporter\u8f6c\u6362\u56deCUMULATIVE\uff08\u5e76\u4e14\u5c06\u88abPrometheus Remote Write Exporter\u62d2\u7edd\uff09\u3002Prometheus Remote Write Exporter\u4e5f\u4f1a\u62d2\u7eddSummary\u548cHistogram\u6307\u6807\uff0c\u4f46\u8fd9\u4e9b\u6307\u6807\u7531Prometheus Exporter\u5b8c\u7f8e\u7ba1\u7406\u3002 \u5e26\u6709\u6574\u6570\u503c\u7684OpenTelemetry\u6307\u6807\u5c06\u88ab\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u3002 \u4f8b\u5982\uff0c\u4ecePrometheus Exporter\uff08\u5f53\u4ee5\u4e0a\u90e8\u5206\u7684\u6240\u6709\u4f8b\u5b50\u90fd\u88ab\u6d88\u8d39\u540e\uff09\u8fdb\u884c\u7684\u6293\u53d6\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\u3002\u4f60\u4f1a\u770b\u5230\uff0c\u6bcf\u4e2a\u503c\u90fd\u4e0e\u524d\u9762\u51e0\u8282\u4e2d\u8f93\u5165\u7684Prometheus\u503c\u5b8c\u5168\u76f8\u540c\uff0c\u6ca1\u6709\u4efb\u4f55\u4fdd\u771f\u5ea6\u7684\u635f\u5931\u3002 HELP http_request_duration_seconds Histogram of latencies for HTTP requests. TYPE http_request_duration_seconds histogram http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"0.1\"} 25547 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"0.2\"} 26688 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"0.4\"} 27760 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"1\"} 28641 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"3\"} 28782 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"8\"} 28844 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"20\"} 28855 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"60\"} 28860 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"120\"} 28860 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"+Inf\"} 28860 http_request_duration_seconds_sum{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 1863.80491025699 http_request_duration_seconds_count{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 28860 HELP http_requests_total Total HTTP requests served TYPE http_requests_total counter http_requests_total{code=\"200\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",method=\"post\"} 907 http_requests_total{code=\"400\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",method=\"post\"} 5 HELP node_filesystem_avail_bytes Available bytes in filesystems TYPE node_filesystem_avail_bytes gauge node_filesystem_avail_bytes{fstype=\"ext4\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",method=\"/data\"} 250294 HELP prometheus_rule_evaluation_duration_seconds The duration for a rule to execute. TYPE prometheus_rule_evaluation_duration_seconds summary prometheus_rule_evaluation_duration_seconds{instance=\"127.0.0.1:9100\",job=\"node-exporter\",quantile=\"0.5\"} 6.4853e-05 prometheus_rule_evaluation_duration_seconds{instance=\"127.0.0.1:9100\",job=\"node-exporter\",quantile=\"0.9\"} 0.00010102 prometheus_rule_evaluation_duration_seconds{instance=\"127.0.0.1:9100\",job=\"node-exporter\",quantile=\"0.99\"} 0.000177367 prometheus_rule_evaluation_duration_seconds_sum{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 1.623860968846092e+06 prometheus_rule_evaluation_duration_seconds_count{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 1.112293682e+09 HELP scrape_duration_seconds Duration of the scrape TYPE scrape_duration_seconds gauge scrape_duration_seconds{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 0.003231334 HELP scrape_samples_post_metric_relabeling The number of samples remaining after metric relabeling was applied TYPE scrape_samples_post_metric_relabeling gauge scrape_samples_post_metric_relabeling{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 20 HELP scrape_samples_scraped The number of samples the target exposed TYPE scrape_samples_scraped gauge scrape_samples_scraped{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 20 HELP scrape_series_added The approximate number of new series in this scrape TYPE scrape_series_added gauge scrape_series_added{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 20 HELP up The scraping was successful TYPE up gauge up{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 1 \u5f53\u8f6c\u6362\u5230Prometheus\u65f6\uff0c\u8bf7\u8bb0\u4f4f\u6211\u4eec\u76ee\u524d\u53ea\u6709\u4e24\u79cd\u9009\u62e9\uff1a \u4e00\u79cd\u662f\u4f7f\u7528Prometheus Exporter\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6240\u6709\u7684\u6570\u636e\u90fd\u4ee5\u5355\u4e00\u7684\u6293\u53d6\u7684\u65b9\u5f0f\u66b4\u9732\u51fa\u6765\uff0c\u5982\u679c\u4f60\u6709\u5927\u91cf\u7684\u5e8f\u5217\uff0c\u5c31\u4e0d\u80fd\u5f88\u597d\u5730\u6269\u5c55\u3002 \u7b2c\u4e8c\u4e2a\u9009\u9879\u662f\u4f7f\u7528Prometheus Remote Write Exporter\uff0c\u6211\u4eec\u5e0c\u671b\u5b83\u6709\u66f4\u597d\u7684\u6269\u5c55\u6027\uff0c \u4f46\u4ec5\u9650\u4e8eCounter\u548cGauge\uff0c\u5e76\u4e14\u4e0d\u4f1a\u8fdb\u884cDELTA\u5230CUMULATIVE\u7684\u8f6c\u6362\uff08\u5b83\u5c06\u4e22\u5f03\u8fd9\u4e9b\u6307\u6807\uff09 \u3002 7 \u51b3\u5b9a\u65f6\u523b \u603b\u7ed3\u4e00\u4e0b\uff0cPrometheus\u548cOpenTelemetry\u63d0\u4f9b\u7684\u6307\u6807\u5b9e\u73b0\u7684\u89d2\u5ea6\u7565\u6709\u4e0d\u540c\u3002Prometheus\u662f\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\uff0c\u6db5\u76d6\u4e86\u6307\u6807\u7684\u521b\u5efa\u3001\u5b58\u50a8\u548c\u67e5\u8be2\uff0c\u800cOpenTelemetry\u6bd4\u8f83\u65b0\uff0c\u53ea\u6db5\u76d6\u6307\u6807\u7684\u751f\u6210\u3002\u4e0d\u8fc7\uff0c\u5b83\u4e5f\u652f\u6301\u4f7f\u7528\u76f8\u540c\u7684SDK\u8fdb\u884c\u8ddf\u8e2a\u548c\u8bb0\u5f55\u3002 \u4f60\u4e3b\u8981\u53ef\u4ee5\u5728\u4e24\u8005\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\uff0c\u800c\u4e0d\u4f1a\u6709\u4efb\u4f55\u7cbe\u5ea6\u4e0a\u7684\u635f\u5931\u2014\u2014\u4f46\u662f\u4f60\u8981\u77e5\u9053\uff0c\u6709\u4e9b\u6307\u6807\u7c7b\u578b\u4f1a\u6709\u8f7b\u5fae\u7684\u53d8\u5316\u3002 \u4f8b\u5982\uff0c\u6240\u6709OpenTelemetry\u7684DELTA\u6307\u6807\u5728\u5bfc\u51fa\u4e3aPrometheus\u6307\u6807\u4e4b\u524d\u5c06\u88ab\u8f6c\u6362\u4e3aCUMULATIVE\uff0c\u800c\u4e14Prometheus\u5728\u589e\u52a0\u652f\u6301\u4e4b\u524d\u4e0d\u80fd\u8868\u793aOpenTelemetry\u7684\u6307\u6570\u76f4\u65b9\u56fe Prometheus\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u4e45\u7ecf\u8003\u9a8c\u7684\u7cfb\u7edf\u3002\u800cOpenTelemetry\uff0c\u5219\u662f\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u548c\u7075\u6d3b\u7684\u6807\u51c6\u3002","title":"2 Prometheus\u4e0eOpenTelemetry\u8be5\u9009\u54ea\u4e2a\uff1f"},{"location":"chap13/2Prometheus_opentele/#2-prometheusopentelemetry","text":"","title":"2 Prometheus\u4e0eOpenTelemetry\u8be5\u9009\u54ea\u4e2a\uff1f"},{"location":"chap13/2Prometheus_opentele/#1-prometheus-vs-opentelemetry","text":"Prometheus\u662f\u4e00\u4e2a\u53ef\u89c2\u6d4b\u6027\u5de5\u5177\uff08\u5305\u62ec\u6536\u96c6\u3001\u5b58\u50a8\u548c\u67e5\u8be2\uff09\uff0c\u5b83\u4f7f\u7528\u7684\u6307\u6807\u6a21\u578b\u662f\u4e3a\u9002\u5e94\u81ea\u5df1\u7684\u9700\u8981\u800c\u8bbe\u8ba1\u7684 \u53e6\u4e00\u65b9\u9762\uff0cOpenTelemetry\u7684\u6307\u6807\u7ec4\u4ef6\u5c06\u8bb8\u591a\u4e0d\u540c\u7684\u6570\u636e\u6a21\u578b\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5355\u4e00\u7684\u6846\u67b6\uff08\u63d0\u4f9b\u65e0\u5b58\u50a8\u6216\u67e5\u8be2\u7684\u96c6\u5408\uff09 \u3002 \u8fd9\u4e9b\u6838\u5fc3\u5dee\u5f02\u53cd\u6620\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u6027\uff1a Prometheus\u662f\u4e00\u4e2a\u76f4\u63a5\u7684\u6a21\u578b\uff0c\u901a\u5e38\u4ee5\u6587\u672c\u5f62\u5f0f\u66b4\u9732\u51fa\u6765\uff0c\u800cOpenTelemetry\u662f\u7531\u4e09\u79cd\u6a21\u578b\u7ec4\u6210\u7684\u66f4\u590d\u6742\u7684\u7cfb\u5217\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u683c\u5f0f\u8fdb\u884c\u4f20\u8f93\u3002 \u8fd9\u4e24\u4e2a\u7cfb\u7edf\u4e5f\u5141\u8bb8\u901a\u8fc7SDK\u8fdb\u884c\u4ee3\u7801\u7ea7\u7684\u76d1\u63a7\uff0c \u4f46OpenTelemetry\u4e5f\u4e13\u6ce8\u4e8e\u652f\u6301\u81ea\u52a8\u57cb\u70b9\uff0c\u5c3d\u53ef\u80fd\u4e0d\u4f1a\u4fb5\u5165\u5e94\u7528\u7a0b\u5e8f\u3002 \u90a3\u4e48\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u7684\u6307\u6807\u4e4b\u95f4\u6709\u4ec0\u4e48\u91cd\u53e0\uff1f \u672c\u8d28\u4e0a\uff0cOpenTelemetry\u5141\u8bb8\u8868\u793a\u6240\u6709Prometheus\u6307\u6807\u7c7b\u578b\uff08 Counters\u3001Gauges\u3001Summaries\u548cHistograms \uff09\u3002 \u5c3d\u7ba1\u5982\u6b64\uff0c Prometheus\u4ecd\u7136\u4e0d\u80fd\u8868\u793aOpenTelemetry\u6307\u6807\u7684\u67d0\u4e9b\u914d\u7f6e\uff0c\u5305\u62ecDelta\u8868\u793a\u6cd5\u548c\u6307\u6570Histograms \uff08\u5c3d\u7ba1\u8fd9\u4e9b\u5c06\u5f88\u5feb\u5728Prometheus\u4e2d\u88ab\u652f\u6301\uff09\uff0c\u4ee5\u53ca\u6574\u6570\u6570\u503c\u7c7b\u578b\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0cPrometheus\u6307\u6807\u662fOpenTelemetry\u6307\u6807\u7684\u4e00\u4e2a\u4e25\u683c\u5b50\u96c6 \u3002","title":"1 Prometheus vs. OpenTelemetry\u6307\u6807\uff1a\u5171\u540c\u70b9"},{"location":"chap13/2Prometheus_opentele/#2","text":"\u867d\u7136\u5185\u90e8\u6a21\u578b\u7684\u5de5\u4f5c\u65b9\u5f0f\u6709\u4e00\u4e9b\u5dee\u5f02\uff0c\u4f46\u4ece\u5f00\u53d1\u8005\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4e24\u8005\u4e4b\u95f4\u7684\u5b9e\u9645\u5dee\u5f02\u66f4\u591a\u662f\u4e0e\u751f\u6001\u7cfb\u7edf\u6709\u5173\u3002 Prometheus\u63d0\u4f9b\u6307\u6807\u6536\u96c6\u3001\u5b58\u50a8\u548c\u67e5\u8be2\u3002\u5b83\u901a\u5e38\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u722c\u866b\u7cfb\u7edf\u6536\u96c6\u6307\u6807\uff0c\u4ece\u4e3b\u673a\u4e2d\u63d0\u53d6\u6570\u636e \u3002 Prometheus\u6570\u636e\u5e93\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u7528Prometheus\u67e5\u8be2\u8bed\u8a00PromQL\u6765\u67e5\u8be2\u3002 Prometheus\u6570\u636e\u5e93\u53ef\u4ee5\u5904\u7406\u5927\u91cf\u7684\u6570\u636e\uff0c\u4f46\u5b83\u5e76\u4e0d\u662f\u6b63\u5f0f\u610f\u4e49\u4e0a\u7684\u957f\u671f\u5b58\u50a8\u89e3\u51b3\u65b9\u6848\uff0c\u6240\u4ee5\u6570\u636e\u901a\u5e38\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u88ab\u53d1\u9001\u5230\u53e6\u4e00\u4e2a\u5b58\u50a8\u89e3\u51b3\u65b9\u6848\uff0c\u5982Promsale\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7PromQL\u8fdb\u884c\u8bfb\u53d6\u3002 OpenTelemetry\u7684\u9886\u57df\u8981\u5c0f\u5f97\u591a\u3002\u5b83\u901a\u8fc7\u63a8\u9001\u6216\u62c9\u52a8\uff0c\u4f7f\u7528\u7edf\u4e00\u7684API\u6536\u96c6\u6307\u6807\uff08\u4ee5\u53ca\u94fe\u8def\u8ffd\u8e2a\u548c\u65e5\u5fd7\uff09\uff0c\u53ef\u80fd\u4f1a\u5bf9\u5b83\u4eec\u8fdb\u884c\u8f6c\u6362\uff0c\u5e76\u5c06\u5b83\u4eec\u53d1\u9001\u5230\u5176\u4ed6\u7cfb\u7edf\u8fdb\u884c\u5b58\u50a8\u6216\u67e5\u8be2\u3002 \u901a\u8fc7\u53ea\u5173\u6ce8\u53ef\u89c2\u6d4b\u6027\u4e2d\u4e0e\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e92\u7684\u90e8\u5206\uff0c OpenTelemetry\u5c06Signal\u7684\u521b\u5efa\u4e0e\u5b58\u50a8\u3001\u67e5\u8be2\u95ee\u9898\u89e3\u8026 \u3002 \u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c \u8fd9\u610f\u5473\u7740OpenTelemetry\u7684\u6307\u6807\u5f80\u5f80\u6700\u7ec8\u4f1a\u56de\u5230Prometheus\u6216\u4e0ePrometheus\u517c\u5bb9\u7684\u7cfb\u7edf\u4e2d \u3002 \u5f53\u6211\u4eec\u5728\u770b\u5b9e\u9645\u7684\u6307\u6807\u7c7b\u578b\u65f6\uff0c\u6709\u51e0\u4e2a\u533a\u522b\uff1a OpenTelemetry\u53ef\u4ee5\u5c06\u6307\u6807\u8868\u793a\u4e3a\u5dee\u503c\uff0c\u800c\u4e0d\u662f\u7d2f\u79ef\u503c\uff0c\u5b58\u50a8\u6bcf\u4e2a\u6570\u636e\u70b9\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u800c\u4e0d\u662f\u7d2f\u79ef\u503c \u3002Prometheus\u5728\u8bbe\u8ba1\u4e0a\u4e0d\u5141\u8bb8\u8fd9\u6837\u505a\uff0c\u5c3d\u7ba1\u4f60\u53ef\u4ee5\u5728\u67e5\u8be2\u65f6\u8ba1\u7b97\u51fa\u8fd9\u4e9b\u503c\u3002\u8fd9\u4e0d\u662fOpenTelemetry\u7684\u9ed8\u8ba4\u9009\u9879\uff0c\u4e3b\u8981\u7528\u4e8e\u90a3\u4e9b\u53ea\u8868\u793a\u4e3a\u901f\u7387\u7684\u6307\u6807\u3002 OpenTelemetry\u8fd8\u5141\u8bb8\u6307\u6807\u70b9\u503c\u662f\u6574\u6570\u800c\u4e0d\u662f\u6d6e\u70b9\u6570\uff0c\u8fd9\u662fPrometheus\u65e0\u6cd5\u8868\u8fbe\u7684\u3002 OpenTelemetry\u53ef\u4ee5\u7ed9Histogram\u9644\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u5143\u6570\u636e\uff0c \u5141\u8bb8\u8ddf\u8e2a\u6700\u5927\u548c\u6700\u5c0f\u503c \u3002 \u6700\u540e\uff0cOpenTelemetry\u6709\u4e00\u4e2a\u6307\u6570\u76f4\u65b9\u56fe\u805a\u5408\u7c7b\u578b\uff08\u5b83\u4f7f\u7528\u4e00\u4e2a\u516c\u5f0f\u548c\u4e00\u4e2a\u6bd4\u4f8b\u6765\u8ba1\u7b97\u6876\u7684\u5927\u5c0f\uff09\u3002Prometheus\u76ee\u524d\u8fd8\u4e0d\u80fd\u8868\u793a\u8fd9\u4e2a\uff0c\u4f46\u786e\u5b9e\u6709\u4e00\u4e2a\u5b8c\u5168\u517c\u5bb9\u7684\u6307\u6807\u7c7b\u578b\u6b63\u5728\u5f00\u53d1\u4e2d\u3002","title":"2 \u4e3b\u8981\u533a\u522b"},{"location":"chap13/2Prometheus_opentele/#3","text":"\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u5bf9\u8fd9\u4e24\u79cd\u6280\u672f\u4e2d\u7684\u4e00\u79cd\u8fdb\u884c\u6295\u8d44\uff0c\u5728Prometheus\u548cOpenTelemetry\u4e4b\u95f4\u7684\u9009\u62e9\u53ef\u80fd\u4f1a\u5f52\u7ed3\u4e3a\u56db\u4e2a\u95ee\u9898\uff1a \u4f60\u662f\u5426\u8ba1\u5212\u6355\u83b7\u94fe\u8def\u8ffd\u8e2a\u3001\u65e5\u5fd7\u548c\u6307\u6807 \uff1f\u5982\u679c\u662f\u8fd9\u6837\uff0cOpenTelemetry\u5c06\u5141\u8bb8\u4f60\u4f7f\u7528\u76f8\u540c\u7684\u5e93\u6765\u6d4b\u91cf\u6240\u6709\u4e09\u79cd\u4fe1\u53f7\u7c7b\u578b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u597d\u5904\u3002\u4f60\u751a\u81f3\u53ef\u4ee5\u628a\u6240\u6709\u8fd9\u4e09\u79cd\u4fe1\u53f7\u53d1\u9001\u5230\u540c\u4e00\u4e2a\u540e\u7aef\uff0c\u5e76\u4f7f\u7528\u4e00\u79cd\u8bed\u8a00\u6765\u67e5\u8be2\u5b83\u4eec\uff08\u4f8b\u5982\uff0cPromscale\u548cSQL\uff09\u3002 \u4f60\u662f\u5426\u91cd\u89c6\u7a33\u5b9a\u6027\u548c\u7ecf\u8fc7\u6218\u6597\u8003\u9a8c\u7684\u7cfb\u7edf\uff1f \u5982\u679c\u662f\u8fd9\u6837\uff0c\u968f\u7740OpenTelemetry\u5728\u751f\u4ea7\u4e0a\u7684\u9010\u6b65\u63a8\u5e7f\uff0c Prometheus\u6216\u8bb8\u662f\u6700\u8fd1\u8fd9\u51e0\u5e74\u7684\u6b63\u786e\u7b54\u6848 \u3002 \u4f60\u60f3\u4f7f\u7528\u4e00\u4e2a\u591a\u6b65\u9aa4\u7684\u8def\u7531\u548c\u8f6c\u6362\u7ba1\u9053\u5417 \uff1f\u5982\u679c\u662f\u8fd9\u6837\uff0c\u4e5f\u8bb8OpenTelemetry\u53ef\u80fd\u503c\u5f97\u4e00\u770b\u3002 \u4f60\u5e0c\u671b\u80fd\u591f\u4fdd\u6301\u5c3d\u53ef\u80fd\u7684\u7075\u6d3b\u6027\u5417\uff1f\u90a3\u4e48OpenTelemetry\u5c31\u9002\u5408\u4f60\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5b9e\u73b0\u4efb\u4f55\u5b58\u50a8\u6216\u67e5\u8be2\uff0c\u7ed9\u4f60\u6700\u5927\u7684\u7075\u6d3b\u6027\u3002 \u5927\u591a\u6570\u7ec4\u7ec7\u53ef\u80fd\u4f1a\u6df7\u5408\u4f7f\u7528\u4e24\u79cd\u6807\u51c6\u3002Prometheus\u7528\u4e8e\u57fa\u7840\u8bbe\u65bd\u76d1\u63a7\uff0c\u5229\u7528\u66f4\u6210\u719f\u7684\u96c6\u6210\u751f\u6001\u7cfb\u7edf\u4ece\u6570\u767e\u4e2a\u7ec4\u4ef6\u4e2d\u63d0\u53d6\u6307\u6807\uff0c\u800cOpenTelemetry\u7528\u4e8e\u5df2\u5f00\u53d1\u7684\u670d\u52a1 \u8bb8\u591a\u5de5\u7a0b\u5e08\u53ef\u80fd\u4f1a\u4f7f\u7528Prometheus\u4f5c\u4e3a\u540e\u7aef\u6765\u5b58\u50a8Prometheus\u548cOpenTelemetry\u6307\u6807\uff0c\u5e76\u9700\u8981\u786e\u4fdd\u4ed6\u4eec\u4ea7\u751f\u7684OpenTelemetry\u6307\u6807\u4e0ePrometheus\u517c\u5bb9\u3002 \u5728\u5b9e\u8df5\u4e2d\uff0c \u8fd9\u610f\u5473\u7740\u9009\u62e9\u65f6\u95f4\u7684\u7d2f\u79ef\u805a\u5408\uff0c\u5e76\u4e14\u53ea\u4f7f\u7528Prometheus\u652f\u6301\u7684OpenTelemetry\u6307\u6807\u7c7b\u578b \uff08\u5728Prometheus\u589e\u52a0\u5bf9OpenTelemetry\u6307\u6570\u76f4\u65b9\u56fe\u7684\u652f\u6301\u4e4b\u524d\uff0c\u6682\u4e0d\u8003\u8651\u8fd9\u4e9b\u6307\u6807\uff09\u3002","title":"3 \u2014 \u9009\u62e9\u5176\u4e00"},{"location":"chap13/2Prometheus_opentele/#4-prometheusopentelemetry","text":"\u5982\u679c\u4f60\u65e2\u60f3\u6df7\u5408\u4f7f\u7528\uff0c\u540c\u65f6\u4e5f\u60f3\u5339\u914d\u6807\u51c6\uff0c\u90a3\u4e48\u597d\u6d88\u606f\u662fOpenTelemetry\u63d0\u4f9b\u4e86OpenTelemetry\u6536\u96c6\u5668\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u540c\u65f6\u517c\u987e\u4e24\u4e2a\u65b9\u5411\uff08\u5982\u679c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\uff0c\u751a\u81f3\u5728\u7c7b\u578b\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\uff09\u3002 OpenTelemetry Collector\u662f\u53ef\u63d2\u62d4\u7684\uff0c\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u6765\u542f\u7528Receiver\u548cExporter\u7ec4\u4ef6 \u3002 \u6211\u4eec\u5c06\u4f7f\u7528contrib\u5305\uff0c\u5176\u4e2d\u5305\u62ec\u8bb8\u591aReceiver\u548cExporter\u3002\u4f60\u53ef\u4ee5\u4eceGitHub\u7684 Release\u9875\u9762 \u4e0b\u8f7d\u76f8\u5e94\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u5728\u751f\u4ea7\u4e2d\u8fd0\u884c\u91c7\u96c6\u5668\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 OpenTelemetry\u6536\u96c6\u5668\u6784\u5efa\u5de5\u5177 \u7f16\u8bd1\u4e00\u4e2a\u53ea\u5305\u542b\u4f60\u9700\u8981\u7684\u7ec4\u4ef6\u7684\u7248\u672c\u3002 \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u7528\u4ee5\u4e0b\u7684\u914d\u7f6e\u6587\u4ef6\u8fd0\u884c\u91c7\u96c6\u5668\uff0c\u8be5\u6587\u4ef6\u4fdd\u5b58\u4e3aconfig.yaml\uff1a receivers: prometheus: config: scrape_configs: - job_name: demo scrape_interval: 15s static_configs: - targets: ['localhost:9090'] exporters: prometheus: endpoint: \"0.0.0.0:1234\" logging: loglevel: debug service: telemetry: logs: level: debug pipelines: metrics: receivers: [prometheus] processors: [] exporters: [logging,prometheus] \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8\u91c7\u96c6\u5668\uff1a otelcol \u2013config config.yaml \u91c7\u96c6\u5668\u5c06\u4f7f\u7528Prometheus Receiver\u6765\u5c1d\u8bd5\u6293\u53d6Prometheus\u670d\u52a1\uff0c\u5730\u5740\u662f http://localhost:9100 \u3002\u5982\u679c\u4f60\u9700\u8981\u4e00\u4e9b\u4e1c\u897f\u6765\u6d4b\u8bd5\uff0c\u4f60\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a\u4f7f\u7528\u8fd9\u4e2a\u7aef\u53e3\u7684\u672c\u5730 node_exporter \u3002 \u5f53\u6570\u636e\u4ece\u8fd9\u4e2a\u670d\u52a1\u4e2d\u88ab\u6293\u53d6\u65f6\uff0c\u4f60\u4f1a\u770b\u5230\u5b83\u663e\u793a\u5728\u6536\u96c6\u5668\u7684\u65e5\u5fd7\u8f93\u51fa\u4e2d\uff0c\u800c\u4e14\u5b83\u4e5f\u53ef\u4ee5\u4ecePrometheus Exporter\u7684\u7aef\u70b9\u4e2d\u83b7\u5f97\uff0c\u6536\u96c6\u5668\u8fd0\u884c\u5728 http://localhost:1234 \u3002 Prometheus\u7684\u8fdc\u7a0b\u5199\u5165\uff08Remote Write\uff09Exporter\u4e5f\u662f\u4e00\u4e2a\u9009\u62e9\uff0c\u4f46\u5728\u73b0\u9636\u6bb5\u5b83\u7684\u5e94\u7528\u8303\u56f4\u6bd4\u8f83\u6709\u9650\uff0c\u53ea\u80fd\u5904\u7406\u79ef\u7d2fCounters\u548cGauges\u3002 \u8bf4\u660ePrometheus\u5982\u4f55\u4e0eOpenTelemetry\u6536\u96c6\u5668\u4e92\u52a8 \u5728Prometheus\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c Counter\u662f\u5355\u8c03\u7684\uff08\u6301\u7eed\u589e\u52a0\uff09\uff0c\u800cGauge\u5219\u4e0d\u662f\uff08\u5b83\u53ef\u4ee5\u4e0a\u5347\u548c\u4e0b\u964d\uff09 Summary\u62a5\u544a\u767e\u5206\u4f4d\uff0c\u4e0d\u9700\u8981\u90a3\u4e48\u591a\u7684\u5ba2\u6237\u7aef\u8ba1\u7b97\u3002\u53e6\u4e00\u65b9\u9762\uff0cHistogram\u66f4\u7075\u6d3b\uff0c\u63d0\u4f9b\u539f\u59cb\u6876\u7684\u5bbd\u5ea6\u548c\u8ba1\u6570\u503c \u76f8\u6bd4\u4e4b\u4e0b\uff0cOpenTelemetry\u6709\u4e94\u79cd\u6307\u6807\u7c7b\u578b\uff1a Sums\u3001Gauges\u3001Summaries\u3001Histograms\u548c\u6307\u6570Histograms \u3002 \u5982\u679c\u4f60\u662f\u4e00\u4e2a\u521b\u5efaOpenTelemetry\u6307\u6807\u7684\u5f00\u53d1\u8005\uff0c\u4f60\u5904\u7406\u7684\u662f\u4e8b\u4ef6\u6a21\u578b\uff08Event Model\uff09\uff0c\u7136\u540e\u7531OpenTelemetry SDK\u7ffb\u8bd1\uff08\u7528\u4e8e\u4f20\u8f93\uff09\u4e3aOpenTelemetry\u534f\u8bae\uff08OTLP\uff09\u6d41\u6a21\u578b\u3002 \u6211\u4eec\u5728\u8fd9\u91cc\u5f15\u7528\u7684\u6307\u6807\u7c7b\u578b\u662fOTPL\u6a21\u578b\u7684\u4e00\u90e8\u5206\uff0c Prometheus Receiver \u76f4\u63a5\u7ffb\u8bd1\u6210\u8fd9\u79cd\u6a21\u578b\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u4e9b\u65b0\u7684\u6307\u6807\u7c7b\u578b\u662f\u4e0d\u8a00\u81ea\u660e\u7684\uff0c\u76f4\u63a5\u6620\u5c04\u5230Prometheus\u7684\u6307\u6807\u7c7b\u578b\u4e0a\uff08Summary\u53ea\u4e3aPrometheus\u517c\u5bb9\u800c\u5b9e\u73b0\uff0c\u4f60\u4e0d\u4f1a\u5728\u5176\u4ed6\u5730\u65b9\u770b\u5230\u5b83\u7684\u4f7f\u7528\uff09\u3002\u6307\u6570Histogram\u662f\u4e2a\u4f8b\u5916\uff0c\u5b83\u76ee\u524d\u4e0d\u80fd\u88ab\u8f6c\u6362\u5230Prometheus\u6307\u6807\uff08\u4f46\u5c06\u6765\u53ef\u4ee5\u88ab\u8f6c\u6362\uff09\u3002 \u4e0b\u56fe\u63cf\u8ff0\u4e86\u6bcf\u4e2a\u65b9\u5411\u4e0a\u7684\u6620\u5c04\u662f\u5982\u4f55\u5de5\u4f5c\u7684 OpenTelemetry\u627f\u8bfa\u5bf9Prometheus\u6307\u6807\u8fdb\u884c\u65e0\u635f\u8f6c\u6362\uff0c\u4f7f\u7528\u6237\u80fd\u591f\u6839\u636e\u9700\u8981\u8fdb\u884c\u8f6c\u6362\u800c\u4e0d\u5fc5\u62c5\u5fc3\u6570\u636e\u4e22\u5931\u3002","title":"4 \u2014 \u5728Prometheus\u548cOpenTelemetry\u4e4b\u95f4\u8f6c\u6362"},{"location":"chap13/2Prometheus_opentele/#5-prometheusopentelemetry","text":"\u8ba9\u6211\u4eec\u901a\u8fc7\u770bPrometheus\u6293\u53d6\u548cOpenTelemetry\u6307\u6807\u7684\u4f8b\u5b50\u6765\u63a2\u7d22Prometheus\u5230OpenTelemetry\u7684\u8f6c\u6362\u662f\u5982\u4f55\u8fdb\u884c\u7684\u3002 \u867d\u7136OpenTelemetry\u6ca1\u6709\u50cfPrometheus\u90a3\u6837\u7684\u6587\u672c\u534f\u8bae\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Logging Exporter\u6765\u53d1\u5c04\u6355\u83b7\u5230\u7684\u6307\u6807\u7684\u6587\u672c\u8f6c\u50a8\u5f62\u5f0f \u3002 OpenTelemetry\u5c06\u4ece\u6293\u53d6\u4efb\u52a1\u672c\u8eab\u63d0\u53d6\u4e00\u4e9b\u4fe1\u606f\u5e76\u5b58\u50a8\u8d77\u6765\uff0c\u4ea7\u751f\u4ee5\u4e0b\u8f93\u51fa\uff0c\u5176\u4e2d\u5b9a\u4e49\u4e86\u5c06\u9644\u52a0\u5230\u6240\u6709\u6307\u6807\u7684\u8d44\u6e90\u6807\u7b7e\u3002 Resource SchemaURL: Resource labels: -> service.name: STRING(node-exporter) -> service.instance.id: STRING(127.0.0.1:9100) -> net.host.port: STRING(9100) -> http.scheme: STRING(http) Counters \u5982\u679c\u6211\u4eec\u6709\u5982\u4e0b\u7684Prometheus\u6293\u53d6\u6570\u636e\uff0c\u5e76\u628a\u91c7\u96c6\u5668\u6307\u5411\u5b83\uff1a HELP http_requests_total Total HTTP requests served TYPE http_requests_total counter http_requests_total{method=\"post\",code=\"200\"} 1028 http_requests_total{method=\"post\",code=\"400\"} 5 \u7136\u540e\u6536\u96c6\u5668\u5c06\u4ece\u65e5\u5fd7Exporter\u4e2d\u8f93\u51fa\u4ee5\u4e0b\u6307\u6807\u3002 Metric #0 Descriptor: -> Name: http_requests_total -> Description: Total HTTP requests served -> Unit: -> DataType: Sum -> IsMonotonic:true-> AggregationTemporality: AGGREGATION_TEMPORALITY_CUMULATIVE NumberDataPoints #0 Data point attributes: -> code: STRING(200) -> method: STRING(post) StartTimestamp: 2022-06-16 11:49:22.117 +0000 UTC Timestamp: 2022-06-16 11:49:22.117 +0000 UTC Value: 1028.000000 NumberDataPoints #1 Data point attributes: -> code: STRING(400) -> method: STRING(post) StartTimestamp: 2022-06-16 11:49:22.117 +0000 UTC Timestamp: 2022-06-16 11:49:22.117 +0000 UTC Value: 5.00000 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6307\u6807\u7684\u7c7b\u578b\uff08DataType\uff09 \u662fSum\uff0cAggregationTemporality\u662fCumulative\uff08Prometheus\u652f\u6301\u7684\u552f\u4e00\u805a\u5408\u65b9\u5f0f\uff09 \u3002 \u6bcf\u4e2a\u6570\u636e\u70b9\u6709\u4e24\u4e2a\u65f6\u95f4\u6233\uff0c\u4ee5\u8ddf\u8e2aCounter\u7684\u590d\u4f4d\u3002Timestamp\u662f\u8bb0\u5f55\u7684\u65f6\u95f4\uff0cStartTimestamp\u662f\u6536\u5230\u7b2c\u4e00\u4e2a\u6837\u672c\u7684\u65f6\u95f4\u6216\u6700\u540e\u4e00\u6b21\u8ba1\u6570\u5668\u590d\u4f4d\u7684\u65f6\u95f4\uff0c\u6ca1\u6709\u6307\u5b9a\u5355\u4f4d \u3002 \u8fd9\u662f\u56e0\u4e3aPrometheus\u6307\u5b9a\u5355\u4f4d\u7684\u65b9\u5f0f\u662f\u5c06\u5176\u4f5c\u4e3a\u6587\u672c\u5ea6\u91cf\u540d\u79f0\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e0d\u80fd\u88abOpenTelemetry Collector\u51c6\u786e\u89e3\u7801","title":"5 \u2014 \u5c06Prometheus\u8f6c\u6362\u6210OpenTelemetry"},{"location":"chap13/2Prometheus_opentele/#gauges","text":"\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2aPrometheus\u7684Gauge\u6570\u636e\uff0c\u5e76\u6293\u53d6\u5b83\uff1a HELP node_filesystem_avail_bytes Available bytes in filesystems TYPE node_filesystem_avail_bytes gauge node_filesystem_avail_bytes{method=\"/data\",fstype=\"ext4\"} 250294 \u6211\u4eec\u4f1a\u5728\u91c7\u96c6\u5668\u4e0a\u770b\u5230\u5982\u4e0b\u6570\u636e\uff1a Metric #0 Descriptor: -> Name: node_filesystem_avail_bytes -> Description: Available bytes in filesystems -> Unit: -> DataType: Gauge NumberDataPoints #0 Data point attributes: -> fstype: STRING(ext4) -> method: STRING(/data) StartTimestamp: 1970-01-01 00:00:00 +0000 UTC Timestamp: 2022-06-23 07:42:07.117 +0000 UTC Value: 250294.000000 \u8fd9\u91cc\uff0c\u6570\u636e\u7c7b\u578b\u88ab\u8bbe\u7f6e\u4e3aGauge\u3002Gauge\u662fOpenTelemetry\u5c06\u8f6c\u6362\u4e3a\u7684\u9ed8\u8ba4\u6307\u6807\u7c7b\u578b\uff0c\u6240\u4ee5\u5728Prometheus\u7684\u6570\u636e\u4e2d\u7f3a\u5c11# TYPE\u884c\uff0c\u5c06\u5bfc\u81f4\u51fa\u73b0\u4e00\u4e2aGauge\u3002 Prometheus\u672c\u8eab\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4f1a\u4f7f\u7528\u7c7b\u578b\u4fe1\u606f\uff08\u5b83\u5728\u5185\u90e8\u5e76\u4e0d\u533a\u5206Counter\u548cGauge\uff09\uff0c\u6240\u4ee5\u4e00\u4e9bExporter\u4f1a\u653e\u5f03\u8fd9\u4e24\u884c\u6ce8\u91ca\uff0c\u4ee5\u4f7f\u6293\u53d6\u884c\u4e3a\u66f4\u6709\u6548\u7387\u3002\u8fd9\u5c06\u5bfc\u81f4\u6240\u6709OpenTelemetry\u6307\u6807\u90fd\u662fGauge\u3002","title":"Gauges"},{"location":"chap13/2Prometheus_opentele/#histograms","text":"Prometheus\u7684histogram\u6570\u636e\u5982\u4e0b\uff1a HELP http_request_duration_seconds Histogram of latencies for HTTP requests. TYPE http_request_duration_seconds histogram http_request_duration_seconds_bucket{handler=\"/\",le=\"0.1\"} 25547 http_request_duration_seconds_bucket{handler=\"/\",le=\"0.2\"} 26688 http_request_duration_seconds_bucket{handler=\"/\",le=\"0.4\"} 27760 http_request_duration_seconds_bucket{handler=\"/\",le=\"1\"} 28641 http_request_duration_seconds_bucket{handler=\"/\",le=\"3\"} 28782 http_request_duration_seconds_bucket{handler=\"/\",le=\"8\"} 28844 http_request_duration_seconds_bucket{handler=\"/\",le=\"20\"} 28855 http_request_duration_seconds_bucket{handler=\"/\",le=\"60\"} 28860 http_request_duration_seconds_bucket{handler=\"/\",le=\"120\"} 28860 http_request_duration_seconds_bucket{handler=\"/\",le=\"+Inf\"} 28860 http_request_duration_seconds_sum{handler=\"/\"} 1863.80491025699 http_request_duration_seconds_count{handler=\"/\"} 28860 \u5728OpenTelemetry\u7684\u65e5\u5fd7Exporter\u4e2d\u4f1a\u4ee5\u5982\u4e0b\u683c\u5f0f\u8868\u793a\uff1a Metric #0 Descriptor: -> Name: prometheus_http_request_duration_seconds -> Description: Histogram of latencies for HTTP requests. -> Unit: -> DataType: Histogram -> AggregationTemporality: AGGREGATION_TEMPORALITY_CUMULATIVE HistogramDataPoints #0 Data point attributes: -> handler: STRING(/) StartTimestamp: 2022-06-23 07:54:07.117 +0000 UTC Timestamp: 2022-06-23 07:54:07.117 +0000 UTC Count: 28860 Sum: 1863.804910 ExplicitBounds #0: 0.100000 ExplicitBounds #1: 0.200000 ExplicitBounds #2: 0.400000 ExplicitBounds #3: 1.000000 ExplicitBounds #4: 3.000000 ExplicitBounds #5: 8.000000 ExplicitBounds #6: 20.000000 ExplicitBounds #7: 60.000000 ExplicitBounds #8: 120.000000 Buckets #0, Count: 25547 Buckets #1, Count: 1141 Buckets #2, Count: 1072 Buckets #3, Count: 881 Buckets #4, Count: 141 Buckets #5, Count: 62 Buckets #6, Count: 11 Buckets #7, Count: 5 Buckets #8, Count: 0 Buckets #9, Count: 0 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728OpenTelemetry\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2aHistogram\uff0c\u4f46\u6709\u4e00\u70b9\u6211\u4eec\u4e0d\u80fd\u505a\u7684\u662f\u5305\u62ec\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff08OpenTelemetry\u652f\u6301\uff0c\u4f46Prometheus\u4e0d\u652f\u6301\uff09\u3002","title":"Histograms"},{"location":"chap13/2Prometheus_opentele/#summaries","text":"Prometheus\u7684summary\u6570\u636e\u5982\u4e0b\uff1a HELP prometheus_rule_evaluation_duration_seconds The duration for a rule to execute. TYPE prometheus_rule_evaluation_duration_seconds summary prometheus_rule_evaluation_duration_seconds{quantile=\"0.5\"} 6.4853e-05 prometheus_rule_evaluation_duration_seconds{quantile=\"0.9\"} 0.00010102 prometheus_rule_evaluation_duration_seconds{quantile=\"0.99\"} 0.000177367 prometheus_rule_evaluation_duration_seconds_sum 1.623860968846092e+06 prometheus_rule_evaluation_duration_seconds_count 1.112293682e+09 \u5728OpenTelemetry\u7684\u65e5\u5fd7Exporter\u4e2d\u4f1a\u4ee5\u5982\u4e0b\u683c\u5f0f\u8868\u793a\uff1a Metric #3 Descriptor: -> Name: prometheus_rule_evaluation_duration_seconds -> Description: The duration for a rule to execute. -> Unit: -> DataType: Summary SummaryDataPoints #0 StartTimestamp: 2022-06-23 07:50:22.117 +0000 UTC Timestamp: 2022-06-23 07:50:22.117 +0000 UTC Count: 1112293682 Sum: 1623860.968846 QuantileValue #0: Quantile 0.500000, Value 0.000065 QuantileValue #1: Quantile 0.900000, Value 0.000101 QuantileValue #2: Quantile 0.990000, Value 0.000177 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u9009\u62e9\u4e86OpenTelemetry Summary\u6307\u6807\u7c7b\u578b\u2014\u2014\u8bb0\u4f4f\u8fd9\u662f\u4e3aPrometheus\u96c6\u6210\u660e\u786e\u521b\u5efa\u7684\uff0c\u4e0d\u5e94\u8be5\u5728\u5176\u4ed6\u5730\u65b9\u4f7f\u7528\u3002 \u5b83\u7c7b\u4f3c\u4e8e\u76f4\u65b9\u56fe\u7684\u8f93\u51fa\uff0c\u4f46\u662f\u5217\u51fa\u4e86\u767e\u5206\u4f4d\uff0c\u800c\u4e0d\u662f\u660e\u786e\u7684\u6876\u548c\u6876\u8ba1\u6570 \u3002","title":"Summaries"},{"location":"chap13/2Prometheus_opentele/#6-opentelemetryprometheus","text":"\u4f7f\u7528Prometheus Exporter\u5141\u8bb8\u6293\u53d6\uff0c\u6216\u8005\u4f7f\u7528Prometheus Remote Write Exporter\u76f4\u63a5\u63a8\u9001\u5230\u53e6\u4e00\u4e2aPrometheus\u5b9e\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6307\u6807\u4eceOpenTelemetry\u53d1\u9001\u5230Prometheus\u3002\u8fd9\u65b9\u9762\u6ca1\u6709\u4efb\u4f55\u610f\u5916\uff1a\u5982\u679c\u8f6c\u6362\u88ab\u652f\u6301\uff0c\u5b83\u7684\u53d1\u751f\u4e0d\u4f1a\u6709\u4efb\u4f55\u7cbe\u5ea6\u7684\u635f\u5931\u3002 \u9700\u8981\u8bb0\u4f4f\u7684\u4e00\u70b9\u662f\uff0c\u6709\u4e00\u4e9bOpenTelemetry\u6307\u6807\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u8f6c\u5316\u4e3aPrometheus\u6307\u6807\uff0c\u56e0\u4e3aPrometheus\u6709\u4e00\u4e2a\u66f4\u53d7\u7ea6\u675f\u7684\u6a21\u578b\u3002 \u4efb\u4f55AggregationTemporality\u4e3aDELTA\u7684\u6307\u6807\u5c06\u88abPrometheus Exporter\u8f6c\u6362\u56deCUMULATIVE\uff08\u5e76\u4e14\u5c06\u88abPrometheus Remote Write Exporter\u62d2\u7edd\uff09\u3002Prometheus Remote Write Exporter\u4e5f\u4f1a\u62d2\u7eddSummary\u548cHistogram\u6307\u6807\uff0c\u4f46\u8fd9\u4e9b\u6307\u6807\u7531Prometheus Exporter\u5b8c\u7f8e\u7ba1\u7406\u3002 \u5e26\u6709\u6574\u6570\u503c\u7684OpenTelemetry\u6307\u6807\u5c06\u88ab\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u3002 \u4f8b\u5982\uff0c\u4ecePrometheus Exporter\uff08\u5f53\u4ee5\u4e0a\u90e8\u5206\u7684\u6240\u6709\u4f8b\u5b50\u90fd\u88ab\u6d88\u8d39\u540e\uff09\u8fdb\u884c\u7684\u6293\u53d6\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\u3002\u4f60\u4f1a\u770b\u5230\uff0c\u6bcf\u4e2a\u503c\u90fd\u4e0e\u524d\u9762\u51e0\u8282\u4e2d\u8f93\u5165\u7684Prometheus\u503c\u5b8c\u5168\u76f8\u540c\uff0c\u6ca1\u6709\u4efb\u4f55\u4fdd\u771f\u5ea6\u7684\u635f\u5931\u3002 HELP http_request_duration_seconds Histogram of latencies for HTTP requests. TYPE http_request_duration_seconds histogram http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"0.1\"} 25547 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"0.2\"} 26688 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"0.4\"} 27760 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"1\"} 28641 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"3\"} 28782 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"8\"} 28844 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"20\"} 28855 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"60\"} 28860 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"120\"} 28860 http_request_duration_seconds_bucket{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",le=\"+Inf\"} 28860 http_request_duration_seconds_sum{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 1863.80491025699 http_request_duration_seconds_count{handler=\"/\",instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 28860 HELP http_requests_total Total HTTP requests served TYPE http_requests_total counter http_requests_total{code=\"200\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",method=\"post\"} 907 http_requests_total{code=\"400\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",method=\"post\"} 5 HELP node_filesystem_avail_bytes Available bytes in filesystems TYPE node_filesystem_avail_bytes gauge node_filesystem_avail_bytes{fstype=\"ext4\",instance=\"127.0.0.1:9100\",job=\"node-exporter\",method=\"/data\"} 250294 HELP prometheus_rule_evaluation_duration_seconds The duration for a rule to execute. TYPE prometheus_rule_evaluation_duration_seconds summary prometheus_rule_evaluation_duration_seconds{instance=\"127.0.0.1:9100\",job=\"node-exporter\",quantile=\"0.5\"} 6.4853e-05 prometheus_rule_evaluation_duration_seconds{instance=\"127.0.0.1:9100\",job=\"node-exporter\",quantile=\"0.9\"} 0.00010102 prometheus_rule_evaluation_duration_seconds{instance=\"127.0.0.1:9100\",job=\"node-exporter\",quantile=\"0.99\"} 0.000177367 prometheus_rule_evaluation_duration_seconds_sum{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 1.623860968846092e+06 prometheus_rule_evaluation_duration_seconds_count{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 1.112293682e+09 HELP scrape_duration_seconds Duration of the scrape TYPE scrape_duration_seconds gauge scrape_duration_seconds{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 0.003231334 HELP scrape_samples_post_metric_relabeling The number of samples remaining after metric relabeling was applied TYPE scrape_samples_post_metric_relabeling gauge scrape_samples_post_metric_relabeling{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 20 HELP scrape_samples_scraped The number of samples the target exposed TYPE scrape_samples_scraped gauge scrape_samples_scraped{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 20 HELP scrape_series_added The approximate number of new series in this scrape TYPE scrape_series_added gauge scrape_series_added{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 20 HELP up The scraping was successful TYPE up gauge up{instance=\"127.0.0.1:9100\",job=\"node-exporter\"} 1 \u5f53\u8f6c\u6362\u5230Prometheus\u65f6\uff0c\u8bf7\u8bb0\u4f4f\u6211\u4eec\u76ee\u524d\u53ea\u6709\u4e24\u79cd\u9009\u62e9\uff1a \u4e00\u79cd\u662f\u4f7f\u7528Prometheus Exporter\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6240\u6709\u7684\u6570\u636e\u90fd\u4ee5\u5355\u4e00\u7684\u6293\u53d6\u7684\u65b9\u5f0f\u66b4\u9732\u51fa\u6765\uff0c\u5982\u679c\u4f60\u6709\u5927\u91cf\u7684\u5e8f\u5217\uff0c\u5c31\u4e0d\u80fd\u5f88\u597d\u5730\u6269\u5c55\u3002 \u7b2c\u4e8c\u4e2a\u9009\u9879\u662f\u4f7f\u7528Prometheus Remote Write Exporter\uff0c\u6211\u4eec\u5e0c\u671b\u5b83\u6709\u66f4\u597d\u7684\u6269\u5c55\u6027\uff0c \u4f46\u4ec5\u9650\u4e8eCounter\u548cGauge\uff0c\u5e76\u4e14\u4e0d\u4f1a\u8fdb\u884cDELTA\u5230CUMULATIVE\u7684\u8f6c\u6362\uff08\u5b83\u5c06\u4e22\u5f03\u8fd9\u4e9b\u6307\u6807\uff09 \u3002","title":"6 \u5c06OpenTelemetry\u8f6c\u6362\u6210Prometheus"},{"location":"chap13/2Prometheus_opentele/#7","text":"\u603b\u7ed3\u4e00\u4e0b\uff0cPrometheus\u548cOpenTelemetry\u63d0\u4f9b\u7684\u6307\u6807\u5b9e\u73b0\u7684\u89d2\u5ea6\u7565\u6709\u4e0d\u540c\u3002Prometheus\u662f\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\uff0c\u6db5\u76d6\u4e86\u6307\u6807\u7684\u521b\u5efa\u3001\u5b58\u50a8\u548c\u67e5\u8be2\uff0c\u800cOpenTelemetry\u6bd4\u8f83\u65b0\uff0c\u53ea\u6db5\u76d6\u6307\u6807\u7684\u751f\u6210\u3002\u4e0d\u8fc7\uff0c\u5b83\u4e5f\u652f\u6301\u4f7f\u7528\u76f8\u540c\u7684SDK\u8fdb\u884c\u8ddf\u8e2a\u548c\u8bb0\u5f55\u3002 \u4f60\u4e3b\u8981\u53ef\u4ee5\u5728\u4e24\u8005\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\uff0c\u800c\u4e0d\u4f1a\u6709\u4efb\u4f55\u7cbe\u5ea6\u4e0a\u7684\u635f\u5931\u2014\u2014\u4f46\u662f\u4f60\u8981\u77e5\u9053\uff0c\u6709\u4e9b\u6307\u6807\u7c7b\u578b\u4f1a\u6709\u8f7b\u5fae\u7684\u53d8\u5316\u3002 \u4f8b\u5982\uff0c\u6240\u6709OpenTelemetry\u7684DELTA\u6307\u6807\u5728\u5bfc\u51fa\u4e3aPrometheus\u6307\u6807\u4e4b\u524d\u5c06\u88ab\u8f6c\u6362\u4e3aCUMULATIVE\uff0c\u800c\u4e14Prometheus\u5728\u589e\u52a0\u652f\u6301\u4e4b\u524d\u4e0d\u80fd\u8868\u793aOpenTelemetry\u7684\u6307\u6570\u76f4\u65b9\u56fe Prometheus\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u4e45\u7ecf\u8003\u9a8c\u7684\u7cfb\u7edf\u3002\u800cOpenTelemetry\uff0c\u5219\u662f\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u548c\u7075\u6d3b\u7684\u6807\u51c6\u3002","title":"7  \u51b3\u5b9a\u65f6\u523b"},{"location":"chap13/3Prometheus_index/","text":"L3 Prometheus\u7684\u56db\u79cd\u6307\u6807\u7c7b\u578b \u6307\u6807\u662f\u7528\u6765\u8861\u91cf\u6027\u80fd\u3001\u6d88\u8017\u3001\u6548\u7387\u548c\u8bb8\u591a\u5176\u4ed6\u8f6f\u4ef6\u5c5e\u6027\u968f\u65f6\u95f4\u7684\u53d8\u5316\u8d8b\u52bf\u3002\u5b83\u4eec\u5141\u8bb8\u5de5\u7a0b\u5e08\u901a\u8fc7\u8b66\u62a5\u548c\u4eea\u8868\u76d8\u6765\u76d1\u63a7\u4e00\u7cfb\u5217\u6d4b\u91cf\u503c\u7684\u6f14\u53d8\uff08\u5982CPU\u6216\u5185\u5b58\u4f7f\u7528\u91cf\u3001\u8bf7\u6c42\u6301\u7eed\u65f6\u95f4\u3001\u5ef6\u8fdf\u7b49\uff09\u3002 \u5728\u5176\u6700\u57fa\u672c\u7684\u5f62\u5f0f\u4e2d\uff0c\u4e00\u4e2a\u6307\u6807\u6570\u636e\u70b9\u662f\u7531\u4ee5\u4e0b\u4e09\u4e2a\u90e8\u5206\u6784\u6210\uff1a \u4e00\u4e2a\u6307\u6807\u540d\u79f0 \u6536\u96c6\u8be5\u6570\u636e\u70b9\u7684\u65f6\u95f4\u6233 \u4e00\u4e2a\u7531\u6570\u5b57\u8868\u793a\u7684\u6d4b\u91cf\u503c \u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u968f\u7740\u7cfb\u7edf\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u51fa\u73b0\u4e86\u7ef4\u5ea6\u5ea6\u91cf\u7684\u6982\u5ff5\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5ea6\u91cf\u8fd8\u5305\u62ec\u4e00\u7ec4\u6807\u7b7e\u6216\u6807\u8bc6\uff08\u5373\u7ef4\u5ea6\uff09\uff0c\u4ee5\u63d0\u4f9b\u989d\u5916\u7684\u4e0a\u4e0b\u6587\u3002 \u652f\u6301\u7ef4\u5ea6\u6307\u6807\u7684\u76d1\u63a7\u7cfb\u7edf\u5141\u8bb8\u5de5\u7a0b\u5e08\u901a\u8fc7\u67e5\u8be2\u7279\u5b9a\u7684\u6307\u6807\u540d\u79f0\uff0c\u5e76\u901a\u8fc7\u6807\u7b7e\u8fdb\u884c\u8fc7\u6ee4\u548c\u5206\u7ec4\uff0c\u4ece\u800c\u8f7b\u6613\u5730\u5728\u591a\u4e2a\u7ec4\u4ef6\u548c\u7ef4\u5ea6\u4e0a\u6c47\u603b\u548c\u5206\u6790\u4e00\u4e2a\u6307\u6807 \u3002 Prometheus\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5ea6\u91cf\u8bf4\u660e\u683c\u5f0f\u548c\u4e00\u4e2a\u8fdc\u7a0b\u5199\u5165\u534f\u8bae\uff0c\u793e\u533a\u548c\u8bb8\u591a\u4f9b\u5e94\u5546\u90fd\u91c7\u7528\u8fd9\u4e2a\u534f\u8bae\u6765\u8bf4\u660e\u548c\u6536\u96c6\u5ea6\u91cf\u6210\u4e3a\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6 \u3002 OpenMetrics\u662f\u53e6\u4e00\u4e2aCNCF\u9879\u76ee\uff0c\u5b83\u5efa\u7acb\u5728Prometheus\u5bfc\u51fa\u683c\u5f0f\u7684\u57fa\u7840\u4e0a \uff0c\u4e3a\u6536\u96c6\u5ea6\u91cf\u6807\u51c6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0e\u5382\u5546\u65e0\u5173\u7684\u6807\u51c6\u5316\u6a21\u578b\uff0c\u65e8\u5728\u6210\u4e3a\u4e92\u8054\u7f51\u5de5\u7a0b\u4efb\u52a1\u7ec4\uff08IEFT\uff09\u7684\u4e00\u90e8\u5206\u3002 \u6700\u8fd1\uff0c\u53e6\u4e00\u4e2aCNCF\u9879\u76eeOpenTelemetry\u51fa\u73b0\u4e86\uff0c \u5b83\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u6807\u51c6\uff0c\u80fd\u591f\u7edf\u4e00\u6307\u6807\u3001\u94fe\u8def\u8ddf\u8e2a\u548c\u65e5\u5fd7\u7684\u6536\u96c6\uff0c\u4f7f\u8de8\u9886\u57df\u7684\u9065\u6d4b\u4fe1\u53f7\u6536\u96c6\u548c\u5173\u8054\u66f4\u5bb9\u6613 \u3002 Prometheus\u6307\u6807 \u9996\u5148\u8981\u505a\u7684\u4e8b\u3002Prometheus\u6536\u96c6\u7684\u6307\u6807\u6709\u56db\u79cd\uff0c\u4f5c\u4e3a\u5176\u66b4\u9732\u683c\u5f0f\u7684\u4e00\u90e8\u5206\u3002 Counters Gauges Histograms Summaries Prometheus\u4f7f\u7528\u62c9\u53d6\u6a21\u578b\u6765\u6536\u96c6\u8fd9\u4e9b\u6307\u6807\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c Prometheus\u4e3b\u52a8\u6293\u53d6\u66b4\u9732\u6307\u6807\u7684HTTP\u7aef\u70b9 \u3002 \u8fd9\u4e9b\u7aef\u70b9\u53ef\u4ee5\u662f\u7531\u88ab\u76d1\u63a7\u7684\u7ec4\u4ef6\u81ea\u7136\u66b4\u9732\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u793e\u533a\u5efa\u7acb\u7684\u6570\u767e\u4e2aPrometheus\u5bfc\u51fa\u5668\u4e4b\u4e00\u66b4\u9732\u51fa\u6765\u3002Prometheus\u63d0\u4f9b\u4e86\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u5e93\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u76d1\u63a7\u4f60\u7684\u4ee3\u7801 \u7531\u4e8e\u670d\u52a1\u53d1\u73b0\u673a\u5236\u548c\u96c6\u7fa4\u5185\u7684\u5171\u4eab\u7f51\u7edc\u8bbf\u95ee\uff0c\u62c9\u53d6\u6a21\u578b\u5728\u76d1\u63a7Kubernetes\u96c6\u7fa4\u65f6\u6548\u679c\u5f88\u597d\uff0c \u4f46\u7528Prometheus\u76d1\u63a7\u52a8\u6001\u7684\u865a\u62df\u673a\u96c6\u7fa4\u3001AWS Fargate\u5bb9\u5668\u6216Lambda\u51fd\u6570\u5c31\u6bd4\u8f83\u56f0\u96be\u4e86\u3002 \u4e3a\u4ec0\u4e48\u5462\uff1f\u4e3b\u8981\u539f\u56e0\u662f\u4ea4\u6613\u786e\u5b9a\u8981\u6293\u53d6\u7684\u6307\u6807\u7aef\u70b9\uff0c\u800c\u4e14\u5bf9\u8fd9\u4e9b\u7aef\u70b9\u7684\u8bbf\u95ee\u53ef\u80fd\u53d7\u5230\u7f51\u7edc\u5b89\u5168\u7b56\u7565\u7684\u9650\u5236\u3002\u4e3a\u4e86\u89e3\u51b3\u5176\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u793e\u533a\u57282021\u5e74\u5e95\u53d1\u5e03\u4e86Prometheus Agent Mode\uff0c\u5b83\u53ea\u6536\u96c6\u6307\u6807\u5e76\u4f7f\u7528\u8fdc\u7a0b\u5199\u5165\u534f\u8bae\u5c06\u5176\u53d1\u9001\u5230\u76d1\u63a7\u540e\u7aef\u3002 Prometheus\u53ef\u4ee5\u6293\u53d6Prometheus\u66b4\u9732\u683c\u5f0f\u548cOpenMetrics\u683c\u5f0f\u7684\u6307\u6807 \u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c \u6307\u6807\u901a\u8fc7HTTP\u63a5\u53e3\u66b4\u9732\uff0c\u4f7f\u7528\u7b80\u5355\u7684\u57fa\u4e8e\u6587\u672c\u7684\u683c\u5f0f \uff08\u66f4\u5e38\u7528\u548c\u5e7f\u6cdb\u652f\u6301\uff09\u6216\u66f4\u6709\u6548\u548c\u5f3a\u5927\u7684Protobuf\u683c\u5f0f\u3002\u6587\u672c\u683c\u5f0f\u7684\u4e00\u5927\u4f18\u52bf\u662f\u5b83\u7684\u53ef\u8bfb\u6027\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u5b83\u6216\u4f7f\u7528\u50cfcurl\u8fd9\u6837\u7684\u5de5\u5177\u6765\u68c0\u7d22\u5f53\u524d\u66b4\u9732\u7684\u6307\u6807\u96c6\u3002 Prometheus\u4f7f\u7528\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6307\u6807\u6a21\u578b\uff0c\u6709\u56db\u79cd\u6307\u6807\u7c7b\u578b\uff0c\u53ea\u5728\u5ba2\u6237\u7aefSDK\u4e2d\u652f\u6301\u3002\u6240\u6709\u7684\u6307\u6807\u7c7b\u578b\u90fd\u662f\u7528\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u6216\u7531\u591a\u4e2a\u5355\u4e00\u6570\u636e\u7c7b\u578b\u7684\u7ec4\u5408\u5728\u66b4\u9732\u683c\u5f0f\u4e2d\u8868\u793a\u3002\u8fd9\u4e2a\u6570\u636e\u7c7b\u578b\u5305\u62ec\u4e00\u4e2a\u6307\u6807\u540d\u79f0\u3001\u4e00\u7ec4\u6807\u7b7e\u548c\u4e00\u4e2a\u6d6e\u70b9\u6570\u3002\u65f6\u95f4\u6233\u662f\u7531\u76d1\u63a7\u540e\u7aef\uff08\u4f8b\u5982Prometheus\uff09\u6216\u4ee3\u7406\u5728\u6293\u53d6\u6307\u6807\u65f6\u6dfb\u52a0\u7684\u3002 \u6307\u6807\u540d\u79f0\u548c\u6807\u7b7e\u96c6\u7684\u6bcf\u4e2a\u552f\u4e00\u7ec4\u5408\u5b9a\u4e49\u4e86\u4e00\u6761\u65f6\u95f4\u5e8f\u5217\uff0c\u800c\u6bcf\u4e2a\u65f6\u95f4\u6233\u548c\u6d6e\u70b9\u6570\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7cfb\u5217\u4e2d\u7684\u6837\u672c\uff08\u5373\u4e00\u4e2a\u6570\u636e\u70b9\uff09\u3002 \u4e00\u4e9b\u60ef\u4f8b\u88ab\u7528\u6765\u8868\u793a\u4e0d\u540c\u7684\u5ea6\u91cf\u7c7b\u578b\u3002 Prometheus\u66b4\u9732\u683c\u5f0f\u7684\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u7279\u70b9\u662f\u80fd\u591f\u5c06\u5143\u6570\u636e\u4e0e\u5ea6\u91cf\u76f8\u5173\u8054\uff0c\u4ee5\u5b9a\u4e49\u5176\u7c7b\u578b\u5e76\u63d0\u4f9b\u63cf\u8ff0\u3002\u4f8b\u5982\uff0cPrometheus\u63d0\u4f9b\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0cGrafana\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u5411\u7528\u6237\u663e\u793a\u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u5e2e\u52a9\u4ed6\u4eec\u9009\u62e9\u6b63\u786e\u7684\u5ea6\u91cf\u5e76\u5e94\u7528\u6b63\u786e\u7684PromQL\u51fd\u6570\u3002 Grafana\u4e2d\u7684\u6307\u6807\u6d4f\u89c8\u5668\u663e\u793aPrometheus\u6307\u6807\u7684\u5217\u8868\uff0c\u5e76\u663e\u793a\u6709\u5173\u8fd9\u4e9b\u6307\u6807\u7684\u989d\u5916\u80cc\u666f\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u901a\u8fc7Prometheus\u66b4\u9732\u683c\u5f0f\u66b4\u9732\u7684\u6307\u6807\u7684\u6848\u4f8b\u3002 # HELP http_requests_total Total number of http api requests # TYPE http_requests_total counter http_requests_total{api=\"add_product\"} 4633433 # HELP\u7528\u6765\u4e3a\u6307\u6807\u63d0\u4f9b\u63cf\u8ff0\uff0c# TYPE\u4e3a\u6307\u6807\u63d0\u4f9b\u7c7b\u578b\u3002 \u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u6765\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u4e00\u4e0b\u6bcf\u4e2aPrometheus\u6307\u6807\u7c7b\u578b\u3002 \u8ba1\u6570\u5668\uff08Counter\uff09 Counter\u7c7b\u578b\u6307\u6807\u88ab\u7528\u4e8e\u5355\u8c03\u589e\u52a0\u7684\u6d4b\u91cf\u7ed3\u679c \u3002\u56e0\u6b64\u5b83\u4eec\u603b\u662f\u7d2f\u79ef\u7684\u6570\u503c\uff0c\u503c\u53ea\u80fd\u4e0a\u5347\u3002\u552f\u4e00\u7684\u4f8b\u5916\u662fCounter\u91cd\u542f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u7684\u503c\u4f1a\u88ab\u91cd\u7f6e\u4e3a\u96f6\u3002 Counter\u7684\u5b9e\u9645\u503c\u901a\u5e38\u672c\u8eab\u5e76\u4e0d\u5341\u5206\u6709\u7528 \u3002\u4e00\u4e2a\u8ba1\u6570\u5668\u7684\u503c\u7ecf\u5e38\u88ab\u7528\u6765\u8ba1\u7b97\u4e24\u4e2a\u65f6\u95f4\u6233\u4e4b\u95f4\u7684delta\u6216\u8005\u968f\u65f6\u95f4\u53d8\u5316\u7684\u901f\u7387\u3002 \u4f8b\u5982\uff0cCounter\u7684\u4e00\u4e2a\u5178\u578b\u7528\u4f8b\u662f\u8bb0\u5f55API\u8c03\u7528\u6b21\u6570\uff0c\u8fd9\u662f\u4e00\u4e2a\u603b\u662f\u4f1a\u589e\u52a0\u7684\u6d4b\u91cf\u503c\u3002 # HELP http_requests_total Total number of http api requests # TYPE http_requests_total counter http_requests_total{api=\"add_product\"} 4633433 \u6307\u6807\u540d\u79f0\u662f http_requests_total \uff0c\u5b83\u6709\u4e00\u4e2a\u540d\u4e3aapi\u7684\u6807\u7b7e\uff0c\u503c\u4e3a add_product \uff0cCounter\u7684\u503c\u4e3a4633433\u3002 \u8fd9\u610f\u5473\u7740\u81ea\u4ece\u4e0a\u6b21\u670d\u52a1\u542f\u52a8\u6216Counter\u91cd\u7f6e\u4ee5\u6765\uff0c add_product \u7684API\u5df2\u7ecf\u88ab\u8c03\u7528\u4e864633433\u6b21\u3002\u6309\u7167\u60ef\u4f8b\uff0cCounter\u7c7b\u578b\u7684\u6307\u6807\u901a\u5e38\u4ee5 _total \u4e3a\u540e\u7f00\u3002 \u8fd9\u4e2a\u7edd\u5bf9\u6570\u5b57\u5e76\u6ca1\u6709\u7ed9\u6211\u4eec\u63d0\u4f9b\u591a\u5c11\u4fe1\u606f\uff0c \u4f46\u5f53\u4e0ePromQL\u7684rate\u51fd\u6570\uff08\u6216\u5176\u4ed6\u76d1\u63a7\u540e\u7aef\u7684\u7c7b\u4f3c\u51fd\u6570\uff09\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u8be5API\u6bcf\u79d2\u6536\u5230\u7684\u8bf7\u6c42\u6570 \u3002\u4e0b\u9762\u7684PromQL\u67e5\u8be2\u8ba1\u7b97\u4e86\u8fc7\u53bb5\u5206\u949f\u5185\u6bcf\u79d2\u7684\u5e73\u5747\u8bf7\u6c42\u6570\u3002 rate(http_requests_total{api=\"add_product\"}[5m]) \u4e3a\u4e86\u8ba1\u7b97\u4e00\u6bb5\u65f6\u671f\u5185\u7684\u7edd\u5bf9\u53d8\u5316\uff0c\u6211\u4eec\u5c06\u4f7f\u7528delta\u51fd\u6570\uff0c\u5728PromQL\u4e2d\u79f0\u4e3aincreate() \uff1a increase(http_requests_total{api=\"add_product\"}[5m]) \u8fd9\u5c06\u8fd4\u56de\u8fc7\u53bb5\u5206\u949f\u5185\u7684\u603b\u8bf7\u6c42\u6570\uff0c\u8fd9\u76f8\u5f53\u4e8e\u7528\u6bcf\u79d2\u7684\u901f\u7387\u4e58\u4ee5\u95f4\u9694\u65f6\u95f4\u7684\u79d2\u6570\uff08\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f5\u5206\u949f\uff09 \uff1a rate(http_requests_total{api=\"add_product\"}[5m]) * 5 * 60 \u5176\u4ed6\u4f60\u53ef\u80fd\u4f1a\u4f7f\u7528Counter\u7c7b\u578b\u6307\u6807\u7684\u4f8b\u5b50\uff1a \u6d4b\u91cf\u7535\u5b50\u5546\u52a1\u7f51\u7ad9\u7684\u8ba2\u5355\u6570\u91cf\uff0c\u5728\u7f51\u7edc\u63a5\u53e3\u4e0a\u53d1\u9001\u548c\u63a5\u6536\u7684\u5b57\u8282\u6570\uff0c\u6216\u8005\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u6570\u91cf \u3002 \u5982\u679c\u5b83\u662f\u4e00\u4e2a\u4f1a\u4e00\u76f4\u4e0a\u5347\u7684\u6307\u6807\uff0c\u90a3\u4e48\u5c31\u4f7f\u7528\u4e00\u4e2aCounter \u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8bf4\u660e\u5982\u4f55\u4f7f\u7528Prometheus\u5ba2\u6237\u7aef\u5e93\u5728Python\u4e2d\u521b\u5efa\u548c\u589e\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668\u6307\u6807\uff1a from prometheus_client import Counter api_requests_counter = Counter( 'http_requests_total', 'Total number of http api requests', ['api'] ) api_requests_counter.labels(api='add_product').inc() \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8eCounter\u53ef\u4ee5\u88ab\u91cd\u7f6e\u4e3a\u96f6\uff0c\u4f60\u8981\u786e\u4fdd\u4f60\u7528\u6765\u5b58\u50a8\u548c\u67e5\u8be2\u6307\u6807\u7684\u540e\u7aef\u80fd\u591f\u652f\u6301\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e76\u4e14\u5728Counter\u91cd\u542f\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u63d0\u4f9b\u51c6\u786e\u7684\u7ed3\u679c\u3002Prometheus\u548c\u517c\u5bb9PromQL\u7684Prometheus\u8fdc\u7a0b\u5b58\u50a8\u7cfb\u7edf\uff0c\u5982Promscale\uff0c\u53ef\u4ee5\u6b63\u786e\u5904\u7406Counter\u91cd\u542f\u3002 \u4eea\u8868\uff08Gauge\uff09 Gauge\u6307\u6807\u7528\u4e8e\u53ef\u4ee5\u4efb\u610f\u589e\u52a0\u6216\u51cf\u5c11\u7684\u6d4b\u91cf\u3002 \u8fd9\u662f\u4f60\u53ef\u80fd\u66f4\u719f\u6089\u7684\u6307\u6807\u7c7b\u578b\uff0c\u56e0\u4e3a\u5373\u4f7f\u6ca1\u6709\u7ecf\u8fc7\u989d\u5916\u5904\u7406\u7684\u5b9e\u9645\u503c\u4e5f\u662f\u6709\u610f\u4e49\u7684\uff0c\u5b83\u4eec\u7ecf\u5e38\u88ab\u4f7f\u7528\u5230\u3002 \u4f8b\u5982\uff0c\u6d4b\u91cf\u6e29\u5ea6\u3001CPU\u548c\u5185\u5b58\u4f7f\u7528\u7684\u6307\u6807\uff0c\u6216\u8005\u961f\u5217\u7684\u5927\u5c0f\u90fd\u662fGauge \u3002 \u4f8b\u5982\uff0c\u4e3a\u4e86\u6d4b\u91cf\u4e00\u53f0\u4e3b\u673a\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2aGauge\u6307\u6807\uff0c\u6bd4\u5982\uff1a # HELP node_memory_used_bytes Total memory used in the node in bytes # TYPE node_memory_used_bytes gauge node_memory_used_bytes{hostname=\"host1.domain.com\"} 943348382 \u4e0a\u9762\u7684\u6307\u6807\u8868\u660e\uff0c\u5728\u6d4b\u91cf\u65f6\uff0c\u8282\u70b9 host1.domain.com \u4f7f\u7528\u7684\u5185\u5b58\u7ea6\u4e3a900 MB\u3002 \u8be5\u6307\u6807\u7684\u503c\u662f\u6709\u610f\u4e49\u7684\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u7684\u8ba1\u7b97\uff0c\u56e0\u4e3a\u5b83\u544a\u8bc9\u6211\u4eec\u8be5\u8282\u70b9\u4e0a\u6d88\u8017\u4e86\u591a\u5c11\u5185\u5b58\u3002 \u4e0e\u4f7f\u7528Counter\u6307\u6807\u65f6\u4e0d\u540c\uff0crate\u548cdelta\u51fd\u6570\u5bf9Gauge\u6ca1\u6709\u610f\u4e49 \u3002 \u7136\u800c\uff0c\u8ba1\u7b97\u7279\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u5e73\u5747\u6570\u3001\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u6216\u767e\u5206\u6bd4\u7684\u51fd\u6570\u7ecf\u5e38\u4e0e Gauge \u4e00\u8d77\u4f7f\u7528 \u3002 \u5728Prometheus\u4e2d\uff0c\u8fd9\u4e9b\u51fd\u6570\u7684\u540d\u79f0\u662f avg_over_time \u3001 max_over_time \u3001 min_over_time \u548c quantile_over_time \u3002 \u8981\u8ba1\u7b97\u8fc7\u53bb10\u5206\u949f\u5185\u5728host1.domain.com\u4e0a\u4f7f\u7528\u7684\u5e73\u5747\u5185\u5b58\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a avg_over_time(node_memory_used_bytes{hostname=\"host1.domain.com\"}[10m]) \u8981\u4f7f\u7528Prometheus\u5ba2\u6237\u7aef\u5e93\u5728Python\u4e2d\u521b\u5efa\u4e00\u4e2aGauge\u6307\u6807\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a from prometheus_client import Gauge memory_used = Gauge( 'node_memory_used_bytes', 'Total memory used in the node in bytes', ['hostname'] ) memory_used.labels(hostname='host1.domain.com').set(943348382) \u76f4\u65b9\u56fe\uff08Histogram\uff09 Histogram\u6307\u6807\u5bf9\u4e8e\u8868\u793a\u6d4b\u91cf\u7684\u5206\u5e03\u5f88\u6709\u7528\u3002\u5b83\u4eec\u7ecf\u5e38\u88ab\u7528\u6765\u6d4b\u91cf\u8bf7\u6c42\u6301\u7eed\u65f6\u95f4\u6216\u54cd\u5e94\u5927\u5c0f\u3002 \u76f4\u65b9\u56fe\u5c06\u6574\u4e2a\u6d4b\u91cf\u8303\u56f4\u5212\u5206\u4e3a\u4e00\u7ec4\u533a\u95f4\uff0c\u79f0\u4e3a\u6876\uff0c\u5e76\u8ba1\u7b97\u6bcf\u4e2a\u6876\u4e2d\u6709\u591a\u5c11\u6d4b\u91cf\u503c\u3002 \u4e00\u4e2a\u76f4\u65b9\u56fe\u6307\u6807\u5305\u62ec\u51e0\u4e2a\u9879\u76ee\uff1a \u4e00\u4e2a\u5305\u542b\u6d4b\u91cf\u6b21\u6570\u7684Counter\u3002\u6307\u6807\u540d\u79f0\u4f7f\u7528 _count \u540e\u7f00\u3002 \u4e00\u4e2a\u5305\u542b\u6240\u6709\u6d4b\u91cf\u503c\u4e4b\u548c\u7684Counter\u3002\u6307\u6807\u540d\u79f0\u4f7f\u7528 _sum \u540e\u7f00\u3002 \u76f4\u65b9\u56fe\u6876\u88ab\u66b4\u9732\u4e3a\u4e00\u7cfb\u5217\u7684Counter\uff0c\u4f7f\u7528\u6307\u6807\u540d\u79f0\u7684\u540e\u7f00 _bucket \u548c\u8868\u793a\u6876\u7684\u4e0a\u9650\u7684le label\u3002 Prometheus\u4e2d\u7684\u6876\u662f\u5305\u542b\u6876\u7684\u8fb9\u754c\u7684\uff0c\u5373\u4e00\u4e2a\u4e0a\u9650\u4e3aN\u7684\u6876\uff08\u5373le label\uff09\u5305\u62ec\u6240\u6709\u6570\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8eN\u7684\u6570\u636e\u70b9\u3002 \u4f8b\u5982\uff0c\u6d4b\u91cf\u8fd0\u884c\u5728 host1.domain.com \u5b9e\u4f8b\u4e0a\u7684 add_productAPI \u7aef\u70b9\u5b9e\u4f8b\u7684\u54cd\u5e94\u65f6\u95f4\u7684Histogram\u6307\u6807\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a # HELP http_request_duration_seconds Api requests response time in seconds # TYPE http_request_duration_seconds histogram http_request_duration_seconds_sum{api=\"add_product\" instance=\"host1.domain.com\"} 8953.332 http_request_duration_seconds_count{api=\"add_product\" instance=\"host1.domain.com\"} 27892 http_request_duration_seconds_bucket{api=\"add_product\" instance=\"host1.domain.com\" le=\"0\"} http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.01\"} 0 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.025\"} 8 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.05\"} 1672 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.1\"} 8954 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.25\"} 14251 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.5\"} 24101 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"1\"} 26351 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"2.5\"} 27534 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"5\"} 27814 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"10\"} 27881 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"25\"} 27890 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"+Inf\"} 27892 \u4e0a\u9762\u7684\u4f8b\u5b50\u5305\u62ecsum\u3001counter\u548c12\u4e2a\u6876\u3002sum\u548ccounter\u53ef\u4ee5\u7528\u6765\u8ba1\u7b97\u4e00\u4e2a\u6d4b\u91cf\u503c\u968f\u65f6\u95f4\u53d8\u5316\u7684\u5e73\u5747\u503c\u3002\u5728PromQL\u4e2d\uff0c\u8fc7\u53bb5\u5206\u949f\u7684\u5e73\u5747\u8bf7\u6c42\u54cd\u5e94\u65f6\u95f4\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u8ba1\u7b97\u5f97\u5230\u3002 rate(http_request_duration_seconds_sum{api=\"add_product\", instance=\"host1.domain.com\"}[5m]) / rate(http_request_duration_seconds_count{api=\"add_product\", instance=\"host1.domain.com\"}[5m]) \u5b83\u4e5f\u53ef\u4ee5\u88ab\u7528\u6765\u8ba1\u7b97\u5404\u65f6\u95f4\u5e8f\u5217\u7684\u5e73\u5747\u6570 \u3002\u4e0b\u9762\u7684PromQL\u67e5\u8be2\u5c06\u8ba1\u7b97\u51fa\u6240\u6709API\u548c\u5b9e\u4f8b\u5728\u8fc7\u53bb5\u5206\u949f\u5185\u7684\u5e73\u5747\u8bf7\u6c42\u54cd\u5e94\u65f6\u95f4\u3002 sum(rate(http_request_duration_seconds_sum[5m])) / sum(rate(http_request_duration_seconds_count[5m])) \u5229\u7528Histogram\uff0c\u4f60\u53ef\u4ee5\u5728\u67e5\u8be2\u65f6\u8ba1\u7b97\u5355\u4e2a\u65f6\u95f4\u5e8f\u5217\u4ee5\u53ca\u591a\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u767e\u5206\u4f4d\u3002 \u5728PromQL\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 histogram_quantile \u51fd\u6570\u3002Prometheus\u4f7f\u7528\u5206\u4f4d\u6570\u800c\u4e0d\u662f\u767e\u5206\u4f4d\u6570\u3002\u5b83\u4eec\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4ee50\u52301\u7684\u6bd4\u4f8b\u8868\u793a\u7684\uff0c\u800c\u767e\u5206\u4f4d\u6570\u662f\u4ee50\u5230100\u7684\u6bd4\u4f8b\u8868\u793a\u7684\u3002 \u8981\u8ba1\u7b97\u5728 host1.domain.com \u4e0a\u8fd0\u884c\u7684 add_product API \u54cd\u5e94\u65f6\u95f4\u7684\u7b2c99\u767e\u5206\u4f4d\u6570\uff080.99\u56db\u5206\u4f4d\u6570\uff09\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u67e5\u8be2\u3002 histogram_quantile(0.99, rate(http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\"}[5m])) Histograms\u7684\u4e00\u5927\u4f18\u52bf\u662f\u53ef\u4ee5\u8fdb\u884c\u6c47\u603b\u3002\u4e0b\u9762\u7684\u67e5\u8be2\u8fd4\u56de\u6240\u6709API\u548c\u5b9e\u4f8b\u7684\u54cd\u5e94\u65f6\u95f4\u7684\u7b2c99\u4e2a\u767e\u5206\u70b9\u200d\uff1a histogram_quantile(0.99, sum by (le) (rate(http_request_duration_seconds_bucket[5m]))) \u5728\u4e91\u539f\u751f\u73af\u5883\u4e2d\uff0c\u901a\u5e38\u6709\u8bb8\u591a\u76f8\u540c\u7ec4\u4ef6\u7684\u591a\u4e2a\u5b9e\u4f8b\u5728\u8fd0\u884c\uff0c\u80fd\u5426\u8de8\u5b9e\u4f8b\u6c47\u603b\u6570\u636e\u662f\u5173\u952e\u3002 Histograms\u6709\u4e09\u4e2a\u4e3b\u8981\u7684\u7f3a\u70b9\uff1a \u9996\u5148\uff0c\u6876\u5fc5\u987b\u662f\u9884\u5b9a\u4e49\u7684\uff0c\u8fd9\u9700\u8981\u4e00\u4e9b\u524d\u671f\u7684\u8bbe\u8ba1 \u3002\u5982\u679c\u4f60\u7684\u6876\u6ca1\u6709\u88ab\u5f88\u597d\u5730\u5b9a\u4e49\uff0c\u4f60\u53ef\u80fd\u65e0\u6cd5\u8ba1\u7b97\u51fa\u4f60\u9700\u8981\u7684\u767e\u5206\u6bd4\uff0c\u6216\u8005\u4f1a\u6d88\u8017\u4e0d\u5fc5\u8981\u7684\u8d44\u6e90\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u603b\u662f\u9700\u8981\u8d85\u8fc7\u4e00\u79d2\u949f\u7684API\uff0c\u90a3\u4e48\u62e5\u6709\u4e0a\u9650\uff08le label\uff09\u5c0f\u4e8e\u4e00\u79d2\u949f\u7684\u6876\u5c06\u662f\u65e0\u7528\u7684\uff0c\u53ea\u4f1a\u6d88\u8017\u76d1\u63a7\u540e\u7aef\u670d\u52a1\u5668\u7684\u8ba1\u7b97\u548c\u5b58\u50a8\u8d44\u6e90\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c99.9%\u7684API\u8bf7\u6c42\u8017\u65f6\u5c11\u4e8e50\u6beb\u79d2\uff0c\u90a3\u4e48\u62e5\u6709\u4e00\u4e2a\u4e0a\u9650\u4e3a100\u6beb\u79d2\u7684\u521d\u59cb\u6876\u5c06\u65e0\u6cd5\u8ba9\u4f60\u51c6\u786e\u6d4b\u91cfAPI\u7684\u6027\u80fd\u3002 \u7b2c\u4e8c\uff0c\u4ed6\u4eec\u63d0\u4f9b\u7684\u662f\u8fd1\u4f3c\u7684\u767e\u5206\u4f4d\u6570\uff0c\u800c\u4e0d\u662f\u7cbe\u786e\u7684\u767e\u5206\u4f4d\u6570 \u3002\u8fd9\u901a\u5e38\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u53ea\u8981\u4f60\u7684\u6876\u88ab\u8bbe\u8ba1\u4e3a\u63d0\u4f9b\u5177\u6709\u5408\u7406\u51c6\u786e\u6027\u7684\u7ed3\u679c\u3002 \u7b2c\u4e09\uff0c\u7531\u4e8e\u767e\u5206\u4f4d\u6570\u9700\u8981\u5728\u670d\u52a1\u5668\u7aef\u8ba1\u7b97\uff0c\u5f53\u6709\u5927\u91cf\u6570\u636e\u9700\u8981\u5904\u7406\u65f6\uff0c\u5b83\u4eec\u7684\u8ba1\u7b97\u6210\u672c\u4f1a\u975e\u5e38\u9ad8 \u3002\u5728Prometheus\u4e2d\u51cf\u8f7b\u8fd9\u79cd\u60c5\u51b5\u7684\u4e00\u4e2a\u65b9\u6cd5\u662f\u4f7f\u7528\u5f55\u5236\u89c4\u5219\u6765\u9884\u5148\u8ba1\u7b97\u6240\u9700\u7684\u767e\u5206\u4f4d\u6570\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528Prometheus\u7684Python\u5ba2\u6237\u7aef\u5e93\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u81ea\u5b9a\u4e49\u6876\u7684\u76f4\u65b9\u56fe\u6307\u6807\u3002 from prometheus_client import Histogram api_request_duration = Histogram( name='http_request_duration_seconds', documentation='Api requests response time in seconds', labelnames=['api', 'instance'], buckets=(0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10, 25 ) ) api_request_duration.labels( api='add_product', instance='host1.domain.com' ).observe(0.3672) \u6c47\u603b\uff08Summary\uff09 \u50cf\u76f4\u65b9\u56fe\u4e00\u6837\uff0cSummary\u6307\u6807\u5bf9\u4e8e\u6d4b\u91cf\u8bf7\u6c42\u6301\u7eed\u65f6\u95f4\u548c\u54cd\u5e94\u4f53\u5927\u5c0f\u5f88\u6709\u7528 \u3002 \u50cf\u76f4\u65b9\u56fe\u4e00\u6837\uff0c\u6c47\u603b\u5ea6\u91cf\u5bf9\u4e8e\u6d4b\u91cf\u8bf7\u6c42\u6301\u7eed\u65f6\u95f4\u548c\u54cd\u5e94\u5927\u5c0f\u5f88\u6709\u7528\u3002 \u4e00\u4e2aSummary\u6307\u6807\u5305\u62ec\u8fd9\u4e9b\u6307\u6807\uff1a \u4e00\u4e2a\u5305\u542b\u603b\u6d4b\u91cf\u6b21\u6570\u7684Counter\u3002\u6307\u6807\u540d\u79f0\u4f7f\u7528_count\u540e\u7f00\u3002 \u4e00\u4e2a\u5305\u542b\u6240\u6709\u6d4b\u91cf\u503c\u4e4b\u548c\u7684Counter\u3002\u6307\u6807\u540d\u79f0\u4f7f\u7528_sum\u540e\u7f00\u3002\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u5e26\u6709\u5206\u4f4d\u6570\u6807\u7b7e\u7684\u6307\u6807\u540d\u79f0\uff0c\u6765\u66b4\u9732\u4e00\u4e9b\u6d4b\u91cf\u503c\u7684\u5206\u4f4d\u6570\u6307\u6807\u3002\u7531\u4e8e\u4f60\u4e0d\u5e0c\u671b\u8fd9\u4e9b\u91cf\u503c\u662f\u4ece\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u7684\u6574\u4e2a\u65f6\u95f4\u5185\u6d4b\u5f97\u7684\uff0cPrometheus\u5ba2\u6237\u7aef\u5e93\u901a\u5e38\u4f1a\u4f7f\u7528\u6d41\u5f0f\u7684\u5206\u4f4d\u503c\uff0c\u8fd9\u4e9b\u5206\u4f4d\u503c\u662f\u5728\u4e00\u4e2a\u6ed1\u52a8\u7684\uff08\u901a\u5e38\u662f\u53ef\u914d\u7f6e\u7684\uff09\u65f6\u95f4\u7a97\u53e3\u4e0a\u8ba1\u7b97\u5f97\u5230\u7684\u3002 \u4f8b\u5982\uff0c\u6d4b\u91cf\u5728host1.domain.com\u4e0a\u8fd0\u884c\u7684 add_productAPI \u7aef\u70b9\u5b9e\u4f8b\u7684\u54cd\u5e94\u65f6\u95f4\u7684Summary\u6307\u6807\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a # HELP http_request_duration_seconds Api requests response time in seconds # TYPE http_request_duration_seconds summary http_request_duration_seconds_sum{api=\"add_product\" instance=\"host1.domain.com\"} 8953.332 http_request_duration_seconds_count{api=\"add_product\" instance=\"host1.domain.com\"} 27892 http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"0\"} http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"0.5\"} 0.232227334 http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"0.90\"} 0.821139321 http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"0.95\"} 1.528948804 http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"0.99\"} 2.829188272 http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"1\"} 34.283829292 \u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5305\u62ec\u603b\u548c\u548c\u8ba1\u6570\u4ee5\u53ca\u4e94\u4e2a\u5206\u4f4d\u6570\u3002\u5206\u4f4d\u65700\u76f8\u5f53\u4e8e\u6700\u5c0f\u503c\uff0c\u5206\u4f4d\u65701\u76f8\u5f53\u4e8e\u6700\u5927\u503c\u3002\u5206\u4f4d\u65700.5\u662f\u4e2d\u4f4d\u6570\uff0c\u5206\u4f4d\u65700.90\u30010.95\u548c0.99\u76f8\u5f53\u4e8e\u5728 host1.domain.com \u4e0a\u8fd0\u884c\u7684 add_product API \u7aef\u70b9\u54cd\u5e94\u65f6\u95f4\u7684\u7b2c90\u300195\u548c99\u4e2a\u767e\u5206\u4f4d\u3002 \u50cf\u76f4\u65b9\u56fe\u4e00\u6837\uff0cSummary\u6307\u6807\u5305\u62ec\u603b\u548c\u548c\u8ba1\u6570\uff0c\u53ef\u7528\u4e8e\u8ba1\u7b97\u968f\u65f6\u95f4\u7684\u5e73\u5747\u503c\u4ee5\u53ca\u4e0d\u540c\u65f6\u95f4\u5e8f\u5217\u7684\u5e73\u5747\u503c\u3002 Summary\u63d0\u4f9b\u4e86\u6bd4Histogram\u66f4\u7cbe\u786e\u7684\u767e\u5206\u4f4d\u8ba1\u7b97\u7ed3\u679c\uff0c\u4f46\u8fd9\u4e9b\u767e\u5206\u4f4d\u6709\u4e09\u4e2a\u4e3b\u8981\u7f3a\u70b9\uff1a \u9996\u5148\uff0c\u5ba2\u6237\u7aef\u8ba1\u7b97\u767e\u5206\u4f4d\u662f\u5f88\u6602\u8d35\u7684 \u3002\u8fd9\u662f\u56e0\u4e3a\u5ba2\u6237\u7aef\u5e93\u5fc5\u987b\u4fdd\u6301\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u636e\u70b9\u5217\u8868\uff0c\u4ee5\u8fdb\u884c\u8fd9\u79cd\u8ba1\u7b97\u3002\u5728Prometheus SDK\u4e2d\u7684\u5b9e\u73b0\u9650\u5236\u4e86\u5185\u5b58\u4e2d\u4fdd\u7559\u548c\u6392\u5e8f\u7684\u6570\u636e\u70b9\u7684\u6570\u91cf\uff0c\u8fd9\u964d\u4f4e\u4e86\u51c6\u786e\u6027\u4ee5\u6362\u53d6\u6548\u7387\u7684\u63d0\u9ad8\u3002\u6ce8\u610f\uff0c\u5e76\u975e\u6240\u6709\u7684Prometheus\u5ba2\u6237\u7aef\u5e93\u90fd\u652f\u6301\u6c47\u603b\u6307\u6807\u4e2d\u7684\u91cf\u503c\u3002\u4f8b\u5982\uff0cPython SDK\u5c31\u4e0d\u652f\u6301\u3002 \u7b2c\u4e8c\uff0c\u4f60\u8981\u67e5\u8be2\u7684\u91cf\u503c\u5fc5\u987b\u7531\u5ba2\u6237\u7aef\u9884\u5148\u5b9a\u4e49 \u3002\u53ea\u6709\u90a3\u4e9b\u5df2\u7ecf\u63d0\u4f9b\u4e86\u6307\u6807\u7684\u91cf\u503c\u624d\u80fd\u901a\u8fc7\u67e5\u8be2\u8fd4\u56de\u3002\u6ca1\u6709\u529e\u6cd5\u5728\u67e5\u8be2\u65f6\u8ba1\u7b97\u5176\u4ed6\u767e\u5206\u4f4d\u3002\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u767e\u5206\u4f4d\u6307\u6807\u9700\u8981\u4fee\u6539\u4ee3\u7801\uff0c\u8be5\u6307\u6807\u624d\u53ef\u4ee5\u88ab\u4f7f\u7528\u3002 \u7b2c\u4e09\uff0c\u4e5f\u662f\u6700\u91cd\u8981\u7684\u4e00\u70b9\uff0c\u4e0d\u53ef\u80fd\u628a\u591a\u4e2aSummary\u6307\u6807\u8fdb\u884c\u805a\u5408\u8ba1\u7b97 \u3002\u8fd9\u4f7f\u5f97\u5b83\u4eec\u5bf9\u52a8\u6001\u73b0\u4ee3\u7cfb\u7edf\u4e2d\u7684\u5927\u591a\u6570\u7528\u4f8b\u6beb\u65e0\u7528\u5904\uff0c\u5728\u8fd9\u4e9b\u7528\u4f8b\u4e2d\uff0c\u901a\u5e38\u6211\u4eec\u5bf9\u4e00\u4e2a\u7279\u5b9a\u7684\u7ec4\u4ef6\u611f\u5174\u8da3\uff0c\u8fd9\u4e2a\u89c6\u89d2\u662f\u5168\u5c40\u7684\uff0c\u5b83\u4e0d\u4e0e\u7279\u5b9a\u7684\u5b9e\u4f8b\u5173\u8054 \u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528Prometheus\u7684Python\u5ba2\u6237\u7aef\u5e93\u521b\u5efa\u4e86\u4e00\u4e2aSummary\u6307\u6807\u3002 from prometheus_client import Summary api_request_duration = Summary( 'http_request_duration_seconds', 'Api requests response time in seconds', ['api', 'instance'] ) api_request_duration.labels(api='add_product', instance='host1.domain.com').observe(0.3672) \u4e0a\u9762\u7684\u4ee3\u7801\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u91cf\u5316\u6307\u6807\uff0c\u53ea\u4f1a\u4ea7\u751f\u603b\u548c\u548c\u8ba1\u6570\u6307\u6807\u3002Prometheus\u7684Python SDK\u4e0d\u652f\u6301Summary\u6307\u6807\u4e2d\u7684\u5206\u4f4d\u6570\u8ba1\u7b97\u3002 Histogram\u8fd8\u662fSummary\uff1f \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u76f4\u65b9\u56fe\u662f\u9996\u9009\uff0c\u56e0\u4e3a\u5b83\u66f4\u7075\u6d3b\uff0c\u5e76\u5141\u8bb8\u6c47\u603b\u767e\u5206\u4f4d\u6570\u3002 \u5728\u4e0d\u9700\u8981\u767e\u5206\u4f4d\u6570\u800c\u53ea\u9700\u8981\u5e73\u5747\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u6216\u8005\u5728\u9700\u8981\u975e\u5e38\u7cbe\u786e\u7684\u767e\u5206\u4f4d\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u6c47\u603b\u662f\u6709\u7528\u7684\u3002\u4f8b\u5982\uff0c\u5728\u5c65\u884c\u5173\u952e\u7cfb\u7edf\u7684\u5408\u7ea6\u8d23\u4efb\u7684\u60c5\u51b5\u4e0b\u3002 \u4e0b\u8868\u603b\u7ed3\u4e86\u76f4\u65b9\u56fe\u548c\u6c47\u603b\u8868\u7684\u4f18\u70b9\u548c\u7f3a\u70b9\u3002","title":"3 Prometheus\u7684\u56db\u79cd\u6307\u6807\u7c7b\u578b"},{"location":"chap13/3Prometheus_index/#l3-prometheus","text":"\u6307\u6807\u662f\u7528\u6765\u8861\u91cf\u6027\u80fd\u3001\u6d88\u8017\u3001\u6548\u7387\u548c\u8bb8\u591a\u5176\u4ed6\u8f6f\u4ef6\u5c5e\u6027\u968f\u65f6\u95f4\u7684\u53d8\u5316\u8d8b\u52bf\u3002\u5b83\u4eec\u5141\u8bb8\u5de5\u7a0b\u5e08\u901a\u8fc7\u8b66\u62a5\u548c\u4eea\u8868\u76d8\u6765\u76d1\u63a7\u4e00\u7cfb\u5217\u6d4b\u91cf\u503c\u7684\u6f14\u53d8\uff08\u5982CPU\u6216\u5185\u5b58\u4f7f\u7528\u91cf\u3001\u8bf7\u6c42\u6301\u7eed\u65f6\u95f4\u3001\u5ef6\u8fdf\u7b49\uff09\u3002 \u5728\u5176\u6700\u57fa\u672c\u7684\u5f62\u5f0f\u4e2d\uff0c\u4e00\u4e2a\u6307\u6807\u6570\u636e\u70b9\u662f\u7531\u4ee5\u4e0b\u4e09\u4e2a\u90e8\u5206\u6784\u6210\uff1a \u4e00\u4e2a\u6307\u6807\u540d\u79f0 \u6536\u96c6\u8be5\u6570\u636e\u70b9\u7684\u65f6\u95f4\u6233 \u4e00\u4e2a\u7531\u6570\u5b57\u8868\u793a\u7684\u6d4b\u91cf\u503c \u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u968f\u7740\u7cfb\u7edf\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u51fa\u73b0\u4e86\u7ef4\u5ea6\u5ea6\u91cf\u7684\u6982\u5ff5\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5ea6\u91cf\u8fd8\u5305\u62ec\u4e00\u7ec4\u6807\u7b7e\u6216\u6807\u8bc6\uff08\u5373\u7ef4\u5ea6\uff09\uff0c\u4ee5\u63d0\u4f9b\u989d\u5916\u7684\u4e0a\u4e0b\u6587\u3002 \u652f\u6301\u7ef4\u5ea6\u6307\u6807\u7684\u76d1\u63a7\u7cfb\u7edf\u5141\u8bb8\u5de5\u7a0b\u5e08\u901a\u8fc7\u67e5\u8be2\u7279\u5b9a\u7684\u6307\u6807\u540d\u79f0\uff0c\u5e76\u901a\u8fc7\u6807\u7b7e\u8fdb\u884c\u8fc7\u6ee4\u548c\u5206\u7ec4\uff0c\u4ece\u800c\u8f7b\u6613\u5730\u5728\u591a\u4e2a\u7ec4\u4ef6\u548c\u7ef4\u5ea6\u4e0a\u6c47\u603b\u548c\u5206\u6790\u4e00\u4e2a\u6307\u6807 \u3002 Prometheus\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5ea6\u91cf\u8bf4\u660e\u683c\u5f0f\u548c\u4e00\u4e2a\u8fdc\u7a0b\u5199\u5165\u534f\u8bae\uff0c\u793e\u533a\u548c\u8bb8\u591a\u4f9b\u5e94\u5546\u90fd\u91c7\u7528\u8fd9\u4e2a\u534f\u8bae\u6765\u8bf4\u660e\u548c\u6536\u96c6\u5ea6\u91cf\u6210\u4e3a\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6 \u3002 OpenMetrics\u662f\u53e6\u4e00\u4e2aCNCF\u9879\u76ee\uff0c\u5b83\u5efa\u7acb\u5728Prometheus\u5bfc\u51fa\u683c\u5f0f\u7684\u57fa\u7840\u4e0a \uff0c\u4e3a\u6536\u96c6\u5ea6\u91cf\u6807\u51c6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0e\u5382\u5546\u65e0\u5173\u7684\u6807\u51c6\u5316\u6a21\u578b\uff0c\u65e8\u5728\u6210\u4e3a\u4e92\u8054\u7f51\u5de5\u7a0b\u4efb\u52a1\u7ec4\uff08IEFT\uff09\u7684\u4e00\u90e8\u5206\u3002 \u6700\u8fd1\uff0c\u53e6\u4e00\u4e2aCNCF\u9879\u76eeOpenTelemetry\u51fa\u73b0\u4e86\uff0c \u5b83\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u6807\u51c6\uff0c\u80fd\u591f\u7edf\u4e00\u6307\u6807\u3001\u94fe\u8def\u8ddf\u8e2a\u548c\u65e5\u5fd7\u7684\u6536\u96c6\uff0c\u4f7f\u8de8\u9886\u57df\u7684\u9065\u6d4b\u4fe1\u53f7\u6536\u96c6\u548c\u5173\u8054\u66f4\u5bb9\u6613 \u3002","title":"L3 Prometheus\u7684\u56db\u79cd\u6307\u6807\u7c7b\u578b"},{"location":"chap13/3Prometheus_index/#prometheus","text":"\u9996\u5148\u8981\u505a\u7684\u4e8b\u3002Prometheus\u6536\u96c6\u7684\u6307\u6807\u6709\u56db\u79cd\uff0c\u4f5c\u4e3a\u5176\u66b4\u9732\u683c\u5f0f\u7684\u4e00\u90e8\u5206\u3002 Counters Gauges Histograms Summaries Prometheus\u4f7f\u7528\u62c9\u53d6\u6a21\u578b\u6765\u6536\u96c6\u8fd9\u4e9b\u6307\u6807\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c Prometheus\u4e3b\u52a8\u6293\u53d6\u66b4\u9732\u6307\u6807\u7684HTTP\u7aef\u70b9 \u3002 \u8fd9\u4e9b\u7aef\u70b9\u53ef\u4ee5\u662f\u7531\u88ab\u76d1\u63a7\u7684\u7ec4\u4ef6\u81ea\u7136\u66b4\u9732\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u793e\u533a\u5efa\u7acb\u7684\u6570\u767e\u4e2aPrometheus\u5bfc\u51fa\u5668\u4e4b\u4e00\u66b4\u9732\u51fa\u6765\u3002Prometheus\u63d0\u4f9b\u4e86\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u5e93\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u76d1\u63a7\u4f60\u7684\u4ee3\u7801 \u7531\u4e8e\u670d\u52a1\u53d1\u73b0\u673a\u5236\u548c\u96c6\u7fa4\u5185\u7684\u5171\u4eab\u7f51\u7edc\u8bbf\u95ee\uff0c\u62c9\u53d6\u6a21\u578b\u5728\u76d1\u63a7Kubernetes\u96c6\u7fa4\u65f6\u6548\u679c\u5f88\u597d\uff0c \u4f46\u7528Prometheus\u76d1\u63a7\u52a8\u6001\u7684\u865a\u62df\u673a\u96c6\u7fa4\u3001AWS Fargate\u5bb9\u5668\u6216Lambda\u51fd\u6570\u5c31\u6bd4\u8f83\u56f0\u96be\u4e86\u3002 \u4e3a\u4ec0\u4e48\u5462\uff1f\u4e3b\u8981\u539f\u56e0\u662f\u4ea4\u6613\u786e\u5b9a\u8981\u6293\u53d6\u7684\u6307\u6807\u7aef\u70b9\uff0c\u800c\u4e14\u5bf9\u8fd9\u4e9b\u7aef\u70b9\u7684\u8bbf\u95ee\u53ef\u80fd\u53d7\u5230\u7f51\u7edc\u5b89\u5168\u7b56\u7565\u7684\u9650\u5236\u3002\u4e3a\u4e86\u89e3\u51b3\u5176\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u793e\u533a\u57282021\u5e74\u5e95\u53d1\u5e03\u4e86Prometheus Agent Mode\uff0c\u5b83\u53ea\u6536\u96c6\u6307\u6807\u5e76\u4f7f\u7528\u8fdc\u7a0b\u5199\u5165\u534f\u8bae\u5c06\u5176\u53d1\u9001\u5230\u76d1\u63a7\u540e\u7aef\u3002 Prometheus\u53ef\u4ee5\u6293\u53d6Prometheus\u66b4\u9732\u683c\u5f0f\u548cOpenMetrics\u683c\u5f0f\u7684\u6307\u6807 \u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c \u6307\u6807\u901a\u8fc7HTTP\u63a5\u53e3\u66b4\u9732\uff0c\u4f7f\u7528\u7b80\u5355\u7684\u57fa\u4e8e\u6587\u672c\u7684\u683c\u5f0f \uff08\u66f4\u5e38\u7528\u548c\u5e7f\u6cdb\u652f\u6301\uff09\u6216\u66f4\u6709\u6548\u548c\u5f3a\u5927\u7684Protobuf\u683c\u5f0f\u3002\u6587\u672c\u683c\u5f0f\u7684\u4e00\u5927\u4f18\u52bf\u662f\u5b83\u7684\u53ef\u8bfb\u6027\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u5b83\u6216\u4f7f\u7528\u50cfcurl\u8fd9\u6837\u7684\u5de5\u5177\u6765\u68c0\u7d22\u5f53\u524d\u66b4\u9732\u7684\u6307\u6807\u96c6\u3002 Prometheus\u4f7f\u7528\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6307\u6807\u6a21\u578b\uff0c\u6709\u56db\u79cd\u6307\u6807\u7c7b\u578b\uff0c\u53ea\u5728\u5ba2\u6237\u7aefSDK\u4e2d\u652f\u6301\u3002\u6240\u6709\u7684\u6307\u6807\u7c7b\u578b\u90fd\u662f\u7528\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u6216\u7531\u591a\u4e2a\u5355\u4e00\u6570\u636e\u7c7b\u578b\u7684\u7ec4\u5408\u5728\u66b4\u9732\u683c\u5f0f\u4e2d\u8868\u793a\u3002\u8fd9\u4e2a\u6570\u636e\u7c7b\u578b\u5305\u62ec\u4e00\u4e2a\u6307\u6807\u540d\u79f0\u3001\u4e00\u7ec4\u6807\u7b7e\u548c\u4e00\u4e2a\u6d6e\u70b9\u6570\u3002\u65f6\u95f4\u6233\u662f\u7531\u76d1\u63a7\u540e\u7aef\uff08\u4f8b\u5982Prometheus\uff09\u6216\u4ee3\u7406\u5728\u6293\u53d6\u6307\u6807\u65f6\u6dfb\u52a0\u7684\u3002 \u6307\u6807\u540d\u79f0\u548c\u6807\u7b7e\u96c6\u7684\u6bcf\u4e2a\u552f\u4e00\u7ec4\u5408\u5b9a\u4e49\u4e86\u4e00\u6761\u65f6\u95f4\u5e8f\u5217\uff0c\u800c\u6bcf\u4e2a\u65f6\u95f4\u6233\u548c\u6d6e\u70b9\u6570\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7cfb\u5217\u4e2d\u7684\u6837\u672c\uff08\u5373\u4e00\u4e2a\u6570\u636e\u70b9\uff09\u3002 \u4e00\u4e9b\u60ef\u4f8b\u88ab\u7528\u6765\u8868\u793a\u4e0d\u540c\u7684\u5ea6\u91cf\u7c7b\u578b\u3002 Prometheus\u66b4\u9732\u683c\u5f0f\u7684\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u7279\u70b9\u662f\u80fd\u591f\u5c06\u5143\u6570\u636e\u4e0e\u5ea6\u91cf\u76f8\u5173\u8054\uff0c\u4ee5\u5b9a\u4e49\u5176\u7c7b\u578b\u5e76\u63d0\u4f9b\u63cf\u8ff0\u3002\u4f8b\u5982\uff0cPrometheus\u63d0\u4f9b\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0cGrafana\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u5411\u7528\u6237\u663e\u793a\u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u5e2e\u52a9\u4ed6\u4eec\u9009\u62e9\u6b63\u786e\u7684\u5ea6\u91cf\u5e76\u5e94\u7528\u6b63\u786e\u7684PromQL\u51fd\u6570\u3002 Grafana\u4e2d\u7684\u6307\u6807\u6d4f\u89c8\u5668\u663e\u793aPrometheus\u6307\u6807\u7684\u5217\u8868\uff0c\u5e76\u663e\u793a\u6709\u5173\u8fd9\u4e9b\u6307\u6807\u7684\u989d\u5916\u80cc\u666f\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u901a\u8fc7Prometheus\u66b4\u9732\u683c\u5f0f\u66b4\u9732\u7684\u6307\u6807\u7684\u6848\u4f8b\u3002 # HELP http_requests_total Total number of http api requests # TYPE http_requests_total counter http_requests_total{api=\"add_product\"} 4633433 # HELP\u7528\u6765\u4e3a\u6307\u6807\u63d0\u4f9b\u63cf\u8ff0\uff0c# TYPE\u4e3a\u6307\u6807\u63d0\u4f9b\u7c7b\u578b\u3002 \u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u6765\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u4e00\u4e0b\u6bcf\u4e2aPrometheus\u6307\u6807\u7c7b\u578b\u3002","title":"Prometheus\u6307\u6807"},{"location":"chap13/3Prometheus_index/#counter","text":"Counter\u7c7b\u578b\u6307\u6807\u88ab\u7528\u4e8e\u5355\u8c03\u589e\u52a0\u7684\u6d4b\u91cf\u7ed3\u679c \u3002\u56e0\u6b64\u5b83\u4eec\u603b\u662f\u7d2f\u79ef\u7684\u6570\u503c\uff0c\u503c\u53ea\u80fd\u4e0a\u5347\u3002\u552f\u4e00\u7684\u4f8b\u5916\u662fCounter\u91cd\u542f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u7684\u503c\u4f1a\u88ab\u91cd\u7f6e\u4e3a\u96f6\u3002 Counter\u7684\u5b9e\u9645\u503c\u901a\u5e38\u672c\u8eab\u5e76\u4e0d\u5341\u5206\u6709\u7528 \u3002\u4e00\u4e2a\u8ba1\u6570\u5668\u7684\u503c\u7ecf\u5e38\u88ab\u7528\u6765\u8ba1\u7b97\u4e24\u4e2a\u65f6\u95f4\u6233\u4e4b\u95f4\u7684delta\u6216\u8005\u968f\u65f6\u95f4\u53d8\u5316\u7684\u901f\u7387\u3002 \u4f8b\u5982\uff0cCounter\u7684\u4e00\u4e2a\u5178\u578b\u7528\u4f8b\u662f\u8bb0\u5f55API\u8c03\u7528\u6b21\u6570\uff0c\u8fd9\u662f\u4e00\u4e2a\u603b\u662f\u4f1a\u589e\u52a0\u7684\u6d4b\u91cf\u503c\u3002 # HELP http_requests_total Total number of http api requests # TYPE http_requests_total counter http_requests_total{api=\"add_product\"} 4633433 \u6307\u6807\u540d\u79f0\u662f http_requests_total \uff0c\u5b83\u6709\u4e00\u4e2a\u540d\u4e3aapi\u7684\u6807\u7b7e\uff0c\u503c\u4e3a add_product \uff0cCounter\u7684\u503c\u4e3a4633433\u3002 \u8fd9\u610f\u5473\u7740\u81ea\u4ece\u4e0a\u6b21\u670d\u52a1\u542f\u52a8\u6216Counter\u91cd\u7f6e\u4ee5\u6765\uff0c add_product \u7684API\u5df2\u7ecf\u88ab\u8c03\u7528\u4e864633433\u6b21\u3002\u6309\u7167\u60ef\u4f8b\uff0cCounter\u7c7b\u578b\u7684\u6307\u6807\u901a\u5e38\u4ee5 _total \u4e3a\u540e\u7f00\u3002 \u8fd9\u4e2a\u7edd\u5bf9\u6570\u5b57\u5e76\u6ca1\u6709\u7ed9\u6211\u4eec\u63d0\u4f9b\u591a\u5c11\u4fe1\u606f\uff0c \u4f46\u5f53\u4e0ePromQL\u7684rate\u51fd\u6570\uff08\u6216\u5176\u4ed6\u76d1\u63a7\u540e\u7aef\u7684\u7c7b\u4f3c\u51fd\u6570\uff09\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u8be5API\u6bcf\u79d2\u6536\u5230\u7684\u8bf7\u6c42\u6570 \u3002\u4e0b\u9762\u7684PromQL\u67e5\u8be2\u8ba1\u7b97\u4e86\u8fc7\u53bb5\u5206\u949f\u5185\u6bcf\u79d2\u7684\u5e73\u5747\u8bf7\u6c42\u6570\u3002 rate(http_requests_total{api=\"add_product\"}[5m]) \u4e3a\u4e86\u8ba1\u7b97\u4e00\u6bb5\u65f6\u671f\u5185\u7684\u7edd\u5bf9\u53d8\u5316\uff0c\u6211\u4eec\u5c06\u4f7f\u7528delta\u51fd\u6570\uff0c\u5728PromQL\u4e2d\u79f0\u4e3aincreate() \uff1a increase(http_requests_total{api=\"add_product\"}[5m]) \u8fd9\u5c06\u8fd4\u56de\u8fc7\u53bb5\u5206\u949f\u5185\u7684\u603b\u8bf7\u6c42\u6570\uff0c\u8fd9\u76f8\u5f53\u4e8e\u7528\u6bcf\u79d2\u7684\u901f\u7387\u4e58\u4ee5\u95f4\u9694\u65f6\u95f4\u7684\u79d2\u6570\uff08\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f5\u5206\u949f\uff09 \uff1a rate(http_requests_total{api=\"add_product\"}[5m]) * 5 * 60 \u5176\u4ed6\u4f60\u53ef\u80fd\u4f1a\u4f7f\u7528Counter\u7c7b\u578b\u6307\u6807\u7684\u4f8b\u5b50\uff1a \u6d4b\u91cf\u7535\u5b50\u5546\u52a1\u7f51\u7ad9\u7684\u8ba2\u5355\u6570\u91cf\uff0c\u5728\u7f51\u7edc\u63a5\u53e3\u4e0a\u53d1\u9001\u548c\u63a5\u6536\u7684\u5b57\u8282\u6570\uff0c\u6216\u8005\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u6570\u91cf \u3002 \u5982\u679c\u5b83\u662f\u4e00\u4e2a\u4f1a\u4e00\u76f4\u4e0a\u5347\u7684\u6307\u6807\uff0c\u90a3\u4e48\u5c31\u4f7f\u7528\u4e00\u4e2aCounter \u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8bf4\u660e\u5982\u4f55\u4f7f\u7528Prometheus\u5ba2\u6237\u7aef\u5e93\u5728Python\u4e2d\u521b\u5efa\u548c\u589e\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668\u6307\u6807\uff1a from prometheus_client import Counter api_requests_counter = Counter( 'http_requests_total', 'Total number of http api requests', ['api'] ) api_requests_counter.labels(api='add_product').inc() \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8eCounter\u53ef\u4ee5\u88ab\u91cd\u7f6e\u4e3a\u96f6\uff0c\u4f60\u8981\u786e\u4fdd\u4f60\u7528\u6765\u5b58\u50a8\u548c\u67e5\u8be2\u6307\u6807\u7684\u540e\u7aef\u80fd\u591f\u652f\u6301\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e76\u4e14\u5728Counter\u91cd\u542f\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u63d0\u4f9b\u51c6\u786e\u7684\u7ed3\u679c\u3002Prometheus\u548c\u517c\u5bb9PromQL\u7684Prometheus\u8fdc\u7a0b\u5b58\u50a8\u7cfb\u7edf\uff0c\u5982Promscale\uff0c\u53ef\u4ee5\u6b63\u786e\u5904\u7406Counter\u91cd\u542f\u3002","title":"\u8ba1\u6570\u5668\uff08Counter\uff09"},{"location":"chap13/3Prometheus_index/#gauge","text":"Gauge\u6307\u6807\u7528\u4e8e\u53ef\u4ee5\u4efb\u610f\u589e\u52a0\u6216\u51cf\u5c11\u7684\u6d4b\u91cf\u3002 \u8fd9\u662f\u4f60\u53ef\u80fd\u66f4\u719f\u6089\u7684\u6307\u6807\u7c7b\u578b\uff0c\u56e0\u4e3a\u5373\u4f7f\u6ca1\u6709\u7ecf\u8fc7\u989d\u5916\u5904\u7406\u7684\u5b9e\u9645\u503c\u4e5f\u662f\u6709\u610f\u4e49\u7684\uff0c\u5b83\u4eec\u7ecf\u5e38\u88ab\u4f7f\u7528\u5230\u3002 \u4f8b\u5982\uff0c\u6d4b\u91cf\u6e29\u5ea6\u3001CPU\u548c\u5185\u5b58\u4f7f\u7528\u7684\u6307\u6807\uff0c\u6216\u8005\u961f\u5217\u7684\u5927\u5c0f\u90fd\u662fGauge \u3002 \u4f8b\u5982\uff0c\u4e3a\u4e86\u6d4b\u91cf\u4e00\u53f0\u4e3b\u673a\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2aGauge\u6307\u6807\uff0c\u6bd4\u5982\uff1a # HELP node_memory_used_bytes Total memory used in the node in bytes # TYPE node_memory_used_bytes gauge node_memory_used_bytes{hostname=\"host1.domain.com\"} 943348382 \u4e0a\u9762\u7684\u6307\u6807\u8868\u660e\uff0c\u5728\u6d4b\u91cf\u65f6\uff0c\u8282\u70b9 host1.domain.com \u4f7f\u7528\u7684\u5185\u5b58\u7ea6\u4e3a900 MB\u3002 \u8be5\u6307\u6807\u7684\u503c\u662f\u6709\u610f\u4e49\u7684\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u7684\u8ba1\u7b97\uff0c\u56e0\u4e3a\u5b83\u544a\u8bc9\u6211\u4eec\u8be5\u8282\u70b9\u4e0a\u6d88\u8017\u4e86\u591a\u5c11\u5185\u5b58\u3002 \u4e0e\u4f7f\u7528Counter\u6307\u6807\u65f6\u4e0d\u540c\uff0crate\u548cdelta\u51fd\u6570\u5bf9Gauge\u6ca1\u6709\u610f\u4e49 \u3002 \u7136\u800c\uff0c\u8ba1\u7b97\u7279\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u5e73\u5747\u6570\u3001\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u6216\u767e\u5206\u6bd4\u7684\u51fd\u6570\u7ecf\u5e38\u4e0e Gauge \u4e00\u8d77\u4f7f\u7528 \u3002 \u5728Prometheus\u4e2d\uff0c\u8fd9\u4e9b\u51fd\u6570\u7684\u540d\u79f0\u662f avg_over_time \u3001 max_over_time \u3001 min_over_time \u548c quantile_over_time \u3002 \u8981\u8ba1\u7b97\u8fc7\u53bb10\u5206\u949f\u5185\u5728host1.domain.com\u4e0a\u4f7f\u7528\u7684\u5e73\u5747\u5185\u5b58\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a avg_over_time(node_memory_used_bytes{hostname=\"host1.domain.com\"}[10m]) \u8981\u4f7f\u7528Prometheus\u5ba2\u6237\u7aef\u5e93\u5728Python\u4e2d\u521b\u5efa\u4e00\u4e2aGauge\u6307\u6807\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a from prometheus_client import Gauge memory_used = Gauge( 'node_memory_used_bytes', 'Total memory used in the node in bytes', ['hostname'] ) memory_used.labels(hostname='host1.domain.com').set(943348382)","title":"\u4eea\u8868\uff08Gauge\uff09"},{"location":"chap13/3Prometheus_index/#histogram","text":"Histogram\u6307\u6807\u5bf9\u4e8e\u8868\u793a\u6d4b\u91cf\u7684\u5206\u5e03\u5f88\u6709\u7528\u3002\u5b83\u4eec\u7ecf\u5e38\u88ab\u7528\u6765\u6d4b\u91cf\u8bf7\u6c42\u6301\u7eed\u65f6\u95f4\u6216\u54cd\u5e94\u5927\u5c0f\u3002 \u76f4\u65b9\u56fe\u5c06\u6574\u4e2a\u6d4b\u91cf\u8303\u56f4\u5212\u5206\u4e3a\u4e00\u7ec4\u533a\u95f4\uff0c\u79f0\u4e3a\u6876\uff0c\u5e76\u8ba1\u7b97\u6bcf\u4e2a\u6876\u4e2d\u6709\u591a\u5c11\u6d4b\u91cf\u503c\u3002 \u4e00\u4e2a\u76f4\u65b9\u56fe\u6307\u6807\u5305\u62ec\u51e0\u4e2a\u9879\u76ee\uff1a \u4e00\u4e2a\u5305\u542b\u6d4b\u91cf\u6b21\u6570\u7684Counter\u3002\u6307\u6807\u540d\u79f0\u4f7f\u7528 _count \u540e\u7f00\u3002 \u4e00\u4e2a\u5305\u542b\u6240\u6709\u6d4b\u91cf\u503c\u4e4b\u548c\u7684Counter\u3002\u6307\u6807\u540d\u79f0\u4f7f\u7528 _sum \u540e\u7f00\u3002 \u76f4\u65b9\u56fe\u6876\u88ab\u66b4\u9732\u4e3a\u4e00\u7cfb\u5217\u7684Counter\uff0c\u4f7f\u7528\u6307\u6807\u540d\u79f0\u7684\u540e\u7f00 _bucket \u548c\u8868\u793a\u6876\u7684\u4e0a\u9650\u7684le label\u3002 Prometheus\u4e2d\u7684\u6876\u662f\u5305\u542b\u6876\u7684\u8fb9\u754c\u7684\uff0c\u5373\u4e00\u4e2a\u4e0a\u9650\u4e3aN\u7684\u6876\uff08\u5373le label\uff09\u5305\u62ec\u6240\u6709\u6570\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8eN\u7684\u6570\u636e\u70b9\u3002 \u4f8b\u5982\uff0c\u6d4b\u91cf\u8fd0\u884c\u5728 host1.domain.com \u5b9e\u4f8b\u4e0a\u7684 add_productAPI \u7aef\u70b9\u5b9e\u4f8b\u7684\u54cd\u5e94\u65f6\u95f4\u7684Histogram\u6307\u6807\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a # HELP http_request_duration_seconds Api requests response time in seconds # TYPE http_request_duration_seconds histogram http_request_duration_seconds_sum{api=\"add_product\" instance=\"host1.domain.com\"} 8953.332 http_request_duration_seconds_count{api=\"add_product\" instance=\"host1.domain.com\"} 27892 http_request_duration_seconds_bucket{api=\"add_product\" instance=\"host1.domain.com\" le=\"0\"} http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.01\"} 0 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.025\"} 8 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.05\"} 1672 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.1\"} 8954 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.25\"} 14251 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"0.5\"} 24101 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"1\"} 26351 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"2.5\"} 27534 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"5\"} 27814 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"10\"} 27881 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"25\"} 27890 http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\", le=\"+Inf\"} 27892 \u4e0a\u9762\u7684\u4f8b\u5b50\u5305\u62ecsum\u3001counter\u548c12\u4e2a\u6876\u3002sum\u548ccounter\u53ef\u4ee5\u7528\u6765\u8ba1\u7b97\u4e00\u4e2a\u6d4b\u91cf\u503c\u968f\u65f6\u95f4\u53d8\u5316\u7684\u5e73\u5747\u503c\u3002\u5728PromQL\u4e2d\uff0c\u8fc7\u53bb5\u5206\u949f\u7684\u5e73\u5747\u8bf7\u6c42\u54cd\u5e94\u65f6\u95f4\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u8ba1\u7b97\u5f97\u5230\u3002 rate(http_request_duration_seconds_sum{api=\"add_product\", instance=\"host1.domain.com\"}[5m]) / rate(http_request_duration_seconds_count{api=\"add_product\", instance=\"host1.domain.com\"}[5m]) \u5b83\u4e5f\u53ef\u4ee5\u88ab\u7528\u6765\u8ba1\u7b97\u5404\u65f6\u95f4\u5e8f\u5217\u7684\u5e73\u5747\u6570 \u3002\u4e0b\u9762\u7684PromQL\u67e5\u8be2\u5c06\u8ba1\u7b97\u51fa\u6240\u6709API\u548c\u5b9e\u4f8b\u5728\u8fc7\u53bb5\u5206\u949f\u5185\u7684\u5e73\u5747\u8bf7\u6c42\u54cd\u5e94\u65f6\u95f4\u3002 sum(rate(http_request_duration_seconds_sum[5m])) / sum(rate(http_request_duration_seconds_count[5m])) \u5229\u7528Histogram\uff0c\u4f60\u53ef\u4ee5\u5728\u67e5\u8be2\u65f6\u8ba1\u7b97\u5355\u4e2a\u65f6\u95f4\u5e8f\u5217\u4ee5\u53ca\u591a\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u767e\u5206\u4f4d\u3002 \u5728PromQL\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 histogram_quantile \u51fd\u6570\u3002Prometheus\u4f7f\u7528\u5206\u4f4d\u6570\u800c\u4e0d\u662f\u767e\u5206\u4f4d\u6570\u3002\u5b83\u4eec\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4ee50\u52301\u7684\u6bd4\u4f8b\u8868\u793a\u7684\uff0c\u800c\u767e\u5206\u4f4d\u6570\u662f\u4ee50\u5230100\u7684\u6bd4\u4f8b\u8868\u793a\u7684\u3002 \u8981\u8ba1\u7b97\u5728 host1.domain.com \u4e0a\u8fd0\u884c\u7684 add_product API \u54cd\u5e94\u65f6\u95f4\u7684\u7b2c99\u767e\u5206\u4f4d\u6570\uff080.99\u56db\u5206\u4f4d\u6570\uff09\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u67e5\u8be2\u3002 histogram_quantile(0.99, rate(http_request_duration_seconds_bucket{api=\"add_product\", instance=\"host1.domain.com\"}[5m])) Histograms\u7684\u4e00\u5927\u4f18\u52bf\u662f\u53ef\u4ee5\u8fdb\u884c\u6c47\u603b\u3002\u4e0b\u9762\u7684\u67e5\u8be2\u8fd4\u56de\u6240\u6709API\u548c\u5b9e\u4f8b\u7684\u54cd\u5e94\u65f6\u95f4\u7684\u7b2c99\u4e2a\u767e\u5206\u70b9\u200d\uff1a histogram_quantile(0.99, sum by (le) (rate(http_request_duration_seconds_bucket[5m]))) \u5728\u4e91\u539f\u751f\u73af\u5883\u4e2d\uff0c\u901a\u5e38\u6709\u8bb8\u591a\u76f8\u540c\u7ec4\u4ef6\u7684\u591a\u4e2a\u5b9e\u4f8b\u5728\u8fd0\u884c\uff0c\u80fd\u5426\u8de8\u5b9e\u4f8b\u6c47\u603b\u6570\u636e\u662f\u5173\u952e\u3002 Histograms\u6709\u4e09\u4e2a\u4e3b\u8981\u7684\u7f3a\u70b9\uff1a \u9996\u5148\uff0c\u6876\u5fc5\u987b\u662f\u9884\u5b9a\u4e49\u7684\uff0c\u8fd9\u9700\u8981\u4e00\u4e9b\u524d\u671f\u7684\u8bbe\u8ba1 \u3002\u5982\u679c\u4f60\u7684\u6876\u6ca1\u6709\u88ab\u5f88\u597d\u5730\u5b9a\u4e49\uff0c\u4f60\u53ef\u80fd\u65e0\u6cd5\u8ba1\u7b97\u51fa\u4f60\u9700\u8981\u7684\u767e\u5206\u6bd4\uff0c\u6216\u8005\u4f1a\u6d88\u8017\u4e0d\u5fc5\u8981\u7684\u8d44\u6e90\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u603b\u662f\u9700\u8981\u8d85\u8fc7\u4e00\u79d2\u949f\u7684API\uff0c\u90a3\u4e48\u62e5\u6709\u4e0a\u9650\uff08le label\uff09\u5c0f\u4e8e\u4e00\u79d2\u949f\u7684\u6876\u5c06\u662f\u65e0\u7528\u7684\uff0c\u53ea\u4f1a\u6d88\u8017\u76d1\u63a7\u540e\u7aef\u670d\u52a1\u5668\u7684\u8ba1\u7b97\u548c\u5b58\u50a8\u8d44\u6e90\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c99.9%\u7684API\u8bf7\u6c42\u8017\u65f6\u5c11\u4e8e50\u6beb\u79d2\uff0c\u90a3\u4e48\u62e5\u6709\u4e00\u4e2a\u4e0a\u9650\u4e3a100\u6beb\u79d2\u7684\u521d\u59cb\u6876\u5c06\u65e0\u6cd5\u8ba9\u4f60\u51c6\u786e\u6d4b\u91cfAPI\u7684\u6027\u80fd\u3002 \u7b2c\u4e8c\uff0c\u4ed6\u4eec\u63d0\u4f9b\u7684\u662f\u8fd1\u4f3c\u7684\u767e\u5206\u4f4d\u6570\uff0c\u800c\u4e0d\u662f\u7cbe\u786e\u7684\u767e\u5206\u4f4d\u6570 \u3002\u8fd9\u901a\u5e38\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u53ea\u8981\u4f60\u7684\u6876\u88ab\u8bbe\u8ba1\u4e3a\u63d0\u4f9b\u5177\u6709\u5408\u7406\u51c6\u786e\u6027\u7684\u7ed3\u679c\u3002 \u7b2c\u4e09\uff0c\u7531\u4e8e\u767e\u5206\u4f4d\u6570\u9700\u8981\u5728\u670d\u52a1\u5668\u7aef\u8ba1\u7b97\uff0c\u5f53\u6709\u5927\u91cf\u6570\u636e\u9700\u8981\u5904\u7406\u65f6\uff0c\u5b83\u4eec\u7684\u8ba1\u7b97\u6210\u672c\u4f1a\u975e\u5e38\u9ad8 \u3002\u5728Prometheus\u4e2d\u51cf\u8f7b\u8fd9\u79cd\u60c5\u51b5\u7684\u4e00\u4e2a\u65b9\u6cd5\u662f\u4f7f\u7528\u5f55\u5236\u89c4\u5219\u6765\u9884\u5148\u8ba1\u7b97\u6240\u9700\u7684\u767e\u5206\u4f4d\u6570\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528Prometheus\u7684Python\u5ba2\u6237\u7aef\u5e93\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u81ea\u5b9a\u4e49\u6876\u7684\u76f4\u65b9\u56fe\u6307\u6807\u3002 from prometheus_client import Histogram api_request_duration = Histogram( name='http_request_duration_seconds', documentation='Api requests response time in seconds', labelnames=['api', 'instance'], buckets=(0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10, 25 ) ) api_request_duration.labels( api='add_product', instance='host1.domain.com' ).observe(0.3672)","title":"\u76f4\u65b9\u56fe\uff08Histogram\uff09"},{"location":"chap13/3Prometheus_index/#summary","text":"\u50cf\u76f4\u65b9\u56fe\u4e00\u6837\uff0cSummary\u6307\u6807\u5bf9\u4e8e\u6d4b\u91cf\u8bf7\u6c42\u6301\u7eed\u65f6\u95f4\u548c\u54cd\u5e94\u4f53\u5927\u5c0f\u5f88\u6709\u7528 \u3002 \u50cf\u76f4\u65b9\u56fe\u4e00\u6837\uff0c\u6c47\u603b\u5ea6\u91cf\u5bf9\u4e8e\u6d4b\u91cf\u8bf7\u6c42\u6301\u7eed\u65f6\u95f4\u548c\u54cd\u5e94\u5927\u5c0f\u5f88\u6709\u7528\u3002 \u4e00\u4e2aSummary\u6307\u6807\u5305\u62ec\u8fd9\u4e9b\u6307\u6807\uff1a \u4e00\u4e2a\u5305\u542b\u603b\u6d4b\u91cf\u6b21\u6570\u7684Counter\u3002\u6307\u6807\u540d\u79f0\u4f7f\u7528_count\u540e\u7f00\u3002 \u4e00\u4e2a\u5305\u542b\u6240\u6709\u6d4b\u91cf\u503c\u4e4b\u548c\u7684Counter\u3002\u6307\u6807\u540d\u79f0\u4f7f\u7528_sum\u540e\u7f00\u3002\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u5e26\u6709\u5206\u4f4d\u6570\u6807\u7b7e\u7684\u6307\u6807\u540d\u79f0\uff0c\u6765\u66b4\u9732\u4e00\u4e9b\u6d4b\u91cf\u503c\u7684\u5206\u4f4d\u6570\u6307\u6807\u3002\u7531\u4e8e\u4f60\u4e0d\u5e0c\u671b\u8fd9\u4e9b\u91cf\u503c\u662f\u4ece\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u7684\u6574\u4e2a\u65f6\u95f4\u5185\u6d4b\u5f97\u7684\uff0cPrometheus\u5ba2\u6237\u7aef\u5e93\u901a\u5e38\u4f1a\u4f7f\u7528\u6d41\u5f0f\u7684\u5206\u4f4d\u503c\uff0c\u8fd9\u4e9b\u5206\u4f4d\u503c\u662f\u5728\u4e00\u4e2a\u6ed1\u52a8\u7684\uff08\u901a\u5e38\u662f\u53ef\u914d\u7f6e\u7684\uff09\u65f6\u95f4\u7a97\u53e3\u4e0a\u8ba1\u7b97\u5f97\u5230\u7684\u3002 \u4f8b\u5982\uff0c\u6d4b\u91cf\u5728host1.domain.com\u4e0a\u8fd0\u884c\u7684 add_productAPI \u7aef\u70b9\u5b9e\u4f8b\u7684\u54cd\u5e94\u65f6\u95f4\u7684Summary\u6307\u6807\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a # HELP http_request_duration_seconds Api requests response time in seconds # TYPE http_request_duration_seconds summary http_request_duration_seconds_sum{api=\"add_product\" instance=\"host1.domain.com\"} 8953.332 http_request_duration_seconds_count{api=\"add_product\" instance=\"host1.domain.com\"} 27892 http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"0\"} http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"0.5\"} 0.232227334 http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"0.90\"} 0.821139321 http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"0.95\"} 1.528948804 http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"0.99\"} 2.829188272 http_request_duration_seconds{api=\"add_product\" instance=\"host1.domain.com\" quantile=\"1\"} 34.283829292 \u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5305\u62ec\u603b\u548c\u548c\u8ba1\u6570\u4ee5\u53ca\u4e94\u4e2a\u5206\u4f4d\u6570\u3002\u5206\u4f4d\u65700\u76f8\u5f53\u4e8e\u6700\u5c0f\u503c\uff0c\u5206\u4f4d\u65701\u76f8\u5f53\u4e8e\u6700\u5927\u503c\u3002\u5206\u4f4d\u65700.5\u662f\u4e2d\u4f4d\u6570\uff0c\u5206\u4f4d\u65700.90\u30010.95\u548c0.99\u76f8\u5f53\u4e8e\u5728 host1.domain.com \u4e0a\u8fd0\u884c\u7684 add_product API \u7aef\u70b9\u54cd\u5e94\u65f6\u95f4\u7684\u7b2c90\u300195\u548c99\u4e2a\u767e\u5206\u4f4d\u3002 \u50cf\u76f4\u65b9\u56fe\u4e00\u6837\uff0cSummary\u6307\u6807\u5305\u62ec\u603b\u548c\u548c\u8ba1\u6570\uff0c\u53ef\u7528\u4e8e\u8ba1\u7b97\u968f\u65f6\u95f4\u7684\u5e73\u5747\u503c\u4ee5\u53ca\u4e0d\u540c\u65f6\u95f4\u5e8f\u5217\u7684\u5e73\u5747\u503c\u3002 Summary\u63d0\u4f9b\u4e86\u6bd4Histogram\u66f4\u7cbe\u786e\u7684\u767e\u5206\u4f4d\u8ba1\u7b97\u7ed3\u679c\uff0c\u4f46\u8fd9\u4e9b\u767e\u5206\u4f4d\u6709\u4e09\u4e2a\u4e3b\u8981\u7f3a\u70b9\uff1a \u9996\u5148\uff0c\u5ba2\u6237\u7aef\u8ba1\u7b97\u767e\u5206\u4f4d\u662f\u5f88\u6602\u8d35\u7684 \u3002\u8fd9\u662f\u56e0\u4e3a\u5ba2\u6237\u7aef\u5e93\u5fc5\u987b\u4fdd\u6301\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u636e\u70b9\u5217\u8868\uff0c\u4ee5\u8fdb\u884c\u8fd9\u79cd\u8ba1\u7b97\u3002\u5728Prometheus SDK\u4e2d\u7684\u5b9e\u73b0\u9650\u5236\u4e86\u5185\u5b58\u4e2d\u4fdd\u7559\u548c\u6392\u5e8f\u7684\u6570\u636e\u70b9\u7684\u6570\u91cf\uff0c\u8fd9\u964d\u4f4e\u4e86\u51c6\u786e\u6027\u4ee5\u6362\u53d6\u6548\u7387\u7684\u63d0\u9ad8\u3002\u6ce8\u610f\uff0c\u5e76\u975e\u6240\u6709\u7684Prometheus\u5ba2\u6237\u7aef\u5e93\u90fd\u652f\u6301\u6c47\u603b\u6307\u6807\u4e2d\u7684\u91cf\u503c\u3002\u4f8b\u5982\uff0cPython SDK\u5c31\u4e0d\u652f\u6301\u3002 \u7b2c\u4e8c\uff0c\u4f60\u8981\u67e5\u8be2\u7684\u91cf\u503c\u5fc5\u987b\u7531\u5ba2\u6237\u7aef\u9884\u5148\u5b9a\u4e49 \u3002\u53ea\u6709\u90a3\u4e9b\u5df2\u7ecf\u63d0\u4f9b\u4e86\u6307\u6807\u7684\u91cf\u503c\u624d\u80fd\u901a\u8fc7\u67e5\u8be2\u8fd4\u56de\u3002\u6ca1\u6709\u529e\u6cd5\u5728\u67e5\u8be2\u65f6\u8ba1\u7b97\u5176\u4ed6\u767e\u5206\u4f4d\u3002\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u767e\u5206\u4f4d\u6307\u6807\u9700\u8981\u4fee\u6539\u4ee3\u7801\uff0c\u8be5\u6307\u6807\u624d\u53ef\u4ee5\u88ab\u4f7f\u7528\u3002 \u7b2c\u4e09\uff0c\u4e5f\u662f\u6700\u91cd\u8981\u7684\u4e00\u70b9\uff0c\u4e0d\u53ef\u80fd\u628a\u591a\u4e2aSummary\u6307\u6807\u8fdb\u884c\u805a\u5408\u8ba1\u7b97 \u3002\u8fd9\u4f7f\u5f97\u5b83\u4eec\u5bf9\u52a8\u6001\u73b0\u4ee3\u7cfb\u7edf\u4e2d\u7684\u5927\u591a\u6570\u7528\u4f8b\u6beb\u65e0\u7528\u5904\uff0c\u5728\u8fd9\u4e9b\u7528\u4f8b\u4e2d\uff0c\u901a\u5e38\u6211\u4eec\u5bf9\u4e00\u4e2a\u7279\u5b9a\u7684\u7ec4\u4ef6\u611f\u5174\u8da3\uff0c\u8fd9\u4e2a\u89c6\u89d2\u662f\u5168\u5c40\u7684\uff0c\u5b83\u4e0d\u4e0e\u7279\u5b9a\u7684\u5b9e\u4f8b\u5173\u8054 \u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528Prometheus\u7684Python\u5ba2\u6237\u7aef\u5e93\u521b\u5efa\u4e86\u4e00\u4e2aSummary\u6307\u6807\u3002 from prometheus_client import Summary api_request_duration = Summary( 'http_request_duration_seconds', 'Api requests response time in seconds', ['api', 'instance'] ) api_request_duration.labels(api='add_product', instance='host1.domain.com').observe(0.3672) \u4e0a\u9762\u7684\u4ee3\u7801\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u91cf\u5316\u6307\u6807\uff0c\u53ea\u4f1a\u4ea7\u751f\u603b\u548c\u548c\u8ba1\u6570\u6307\u6807\u3002Prometheus\u7684Python SDK\u4e0d\u652f\u6301Summary\u6307\u6807\u4e2d\u7684\u5206\u4f4d\u6570\u8ba1\u7b97\u3002","title":"\u6c47\u603b\uff08Summary\uff09"},{"location":"chap13/3Prometheus_index/#histogramsummary","text":"\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u76f4\u65b9\u56fe\u662f\u9996\u9009\uff0c\u56e0\u4e3a\u5b83\u66f4\u7075\u6d3b\uff0c\u5e76\u5141\u8bb8\u6c47\u603b\u767e\u5206\u4f4d\u6570\u3002 \u5728\u4e0d\u9700\u8981\u767e\u5206\u4f4d\u6570\u800c\u53ea\u9700\u8981\u5e73\u5747\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u6216\u8005\u5728\u9700\u8981\u975e\u5e38\u7cbe\u786e\u7684\u767e\u5206\u4f4d\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u6c47\u603b\u662f\u6709\u7528\u7684\u3002\u4f8b\u5982\uff0c\u5728\u5c65\u884c\u5173\u952e\u7cfb\u7edf\u7684\u5408\u7ea6\u8d23\u4efb\u7684\u60c5\u51b5\u4e0b\u3002 \u4e0b\u8868\u603b\u7ed3\u4e86\u76f4\u65b9\u56fe\u548c\u6c47\u603b\u8868\u7684\u4f18\u70b9\u548c\u7f3a\u70b9\u3002","title":"Histogram\u8fd8\u662fSummary\uff1f"},{"location":"chap13/4OpenTelemetry/","text":"4 \u900f\u5f7b\u7406\u89e3OpenTelemetry OpenTelemetry\u662f\u7531\u4e91\u539f\u751f\u8ba1\u7b97\u57fa\u91d1\u4f1a\uff08CNCF\uff09\u6258\u7ba1\u7684\u4e00\u4e2a\u7528\u4e8e\u57fa\u7840\u8bbe\u65bd\u6027\u80fd\u68c0\u6d4b\u7684\u5f00\u6e90\u53ef\u89c2\u6d4b\u6027\u6846\u67b6 \u3002 \u8be5\u9879\u76ee\u5728\u51e0\u4e4e\u6240\u6709\u4e3b\u8981\u7684\u4e91\u4f9b\u5e94\u5546\uff08AWS\u3001Google\u3001Microsoft\uff09\u4ee5\u53ca\u53ef\u89c2\u6d4b\u6027\u4f9b\u5e94\u5546\uff08\u5305\u62ecTimescale\uff09\u7684\u8d21\u732e\u4e0b\u5f97\u5230\u4e86\u6781\u5927\u7684\u53d1\u5c55\uff0c\u4ee5\u81f3\u4e8e\u5b83\u6210\u4e3a\u6309\u6d3b\u8dc3\u5ea6\u548c\u8d21\u732e\u8005\u6392\u540d\u7b2c\u4e8c\u7684CNCF\u9879\u76ee\uff0c\u4ec5\u6b21\u4e8eKubernetes\u672c\u8eab\u3002 OpenTelemetry\u65e8\u5728\u4e3a\u6240\u6709\u7c7b\u578b\u7684\u53ef\u89c2\u6d4b\u6570\u636e\u5b9a\u4e49\u4e00\u4e2a\u5355\u4e00\u7684\u6807\u51c6\uff08\u5728OpenTelemetry\u7684\u672f\u8bed\u4e2d\u88ab\u79f0\u4f5cSignals\u4fe1\u53f7\uff09\uff0c\u5305\u62ec\u76d1\u63a7\u6307\u6807\u3001\u65e5\u5fd7\u548c\u94fe\u8def\u8ffd\u8e2a\u3002 \u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u5de5\u5177\u3001\u5e93\u3001API\u3001SDK\u548cexporters\uff0cOpenTelemetry\u4ece\u6839\u672c\u4e0a\u7b80\u5316\u4e86\u4ece\u670d\u52a1\u4e2d\u6536\u96c6\u4fe1\u53f7\u5e76\u5c06\u5176\u53d1\u9001\u5230\u4f60\u6240\u9009\u7528\u7684\u540e\u7aef\u670d\u52a1\u7684\u8fc7\u7a0b\uff0c\u4e3a\u66f4\u591a\u7684\u7528\u6237\u548c\u4f9b\u5e94\u5546\u6253\u5f00\u4e86\u53ef\u89c2\u6d4b\u6027\u7684\u5927\u95e8\u3002 \u5728\u8bbe\u8ba1OpenTelemetry\u6307\u6807\u6807\u51c6\u65f6\uff0c\u6709\u4e09\u4e2a\u8bbe\u8ba1\u76ee\u6807\u88ab\u91c7\u7eb3\uff1a \u63d0\u4f9b\u5c06\u76d1\u63a7\u6307\u6807\u4e0e\u5176\u4ed6\u7c7b\u578b\u7684\u53ef\u89c2\u5bdf\u6027\u6570\u636e\u76f8\u8fde\u63a5\u7684\u80fd\u529b \uff1a\u8981\u4e48\u662f\u901a\u8fc7Exemplars\u5728\u94fe\u8def\u8ffd\u8e2a\u548c\u76d1\u63a7\u6307\u6807\u4e4b\u95f4\u76f4\u63a5\u8fde\u63a5\uff0c\u8981\u4e48\u662f\u901a\u8fc7Baggage\u548cContext\u63d0\u4f9b\u4e0e\u65e5\u5fd7\u548c\u94fe\u8def\u8ffd\u8e2a\u4eab\u6709\u76f8\u540c\u7684\u76f8\u5173\u5143\u6570\u636e\uff0c\u95f4\u63a5\u5730\u8fde\u63a5\u3002 \u5141\u8bb8\u4eceOpenCensus\u6807\u51c6\u8f7b\u677e\u8fc1\u79fb\u5230OpenTelemetry\u6807\u51c6 \u3002 \u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u63d0\u4f9b\u5bf9\u5176\u4ed6\u4e3b\u8981\u6307\u6807\u5b9e\u73b0\u7684\u5168\u9762\u652f\u6301 \u3002Prometheus\u548cStatsD\u662f\u4e13\u95e8\u9002\u914d\u7684\uff0c\u80fd\u591f\u5b8c\u5168\u652f\u6301\uff1a \u90a3\u4e9b\u8fc1\u79fb\u5230OpenTelemetry\u7684\u7528\u6237\u53ef\u4ee5\u770b\u5230\u4e0e\u4f7f\u7528\u5176\u539f\u751f\u5ba2\u6237\u7aef\u7c7b\u4f3c\u7684\u7ed3\u679c \u3002 OpenTelemetry\u63d0\u4f9b\u4e86\u4e00\u4e2a\u91c7\u96c6\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u91cd\u65b0\u805a\u5408\u548c\u91cd\u5b9a\u5411\u6307\u6807\u6570\u636e\uff0c\u7ecf\u5e38\u88ab\u7528\u6765\u521b\u5efa\u4fe1\u53f7\u7ba1\u9053\u3002\u7531\u4e8eOpenTelemetry\u4e0d\u63d0\u4f9b\u540e\u7aef\u5b9e\u73b0\uff08\u5b83\u5173\u6ce8\u7684\u662f\u521b\u5efa\u3001\u6536\u96c6\u548c\u53d1\u9001\u4fe1\u53f7\uff09\uff0c\u6570\u636e\u5c06\u6d41\u5411\u53e6\u4e00\u4e2a\u6216\u591a\u4e2a\u7cfb\u7edf\u8fdb\u884c\u5b58\u50a8\u5e76\u6700\u7ec8\u80fd\u591f\u88ab\u67e5\u8be2\u3002 \u4e4b\u6240\u4ee5OpenTelemetry\u6709\u65f6\u4f1a\u4ee4\u4eba\u611f\u5230\u590d\u6742\uff0c\u662f\u56e0\u4e3a\u5b83\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u8bb8\u591a\u4e0d\u540c\u7684\u4fe1\u53f7\u5b9e\u73b0 \u3002\u5728\u8fd9\u7bc7\u535a\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u805a\u7126\u4e8e\u201d\u8868\u9762\u201d\uff0c\u5373\u5f00\u53d1\u8005\u5728OpenTelemetry\u4e2d\u4f7f\u7528\u6307\u6807\u65f6\u53ef\u80fd\u9047\u5230\u7684\u8981\u7d20 1 OpenTelemetry\u6307\u6807 OpenTelemetry\u6307\u6807\u4e0ePrometheus\u6307\u6807\u7565\u6709\u4e0d\u540c\uff0c\u5b83\u5141\u8bb8\u5728\u91c7\u96c6\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u66f4\u52a0\u7075\u6d3b\u7684\u8f6c\u6362\uff0c\u5e76\u652f\u6301\u8bb8\u591a\u5bfc\u51fa\u7c7b\u578b\uff0c \u5305\u62ecPull\u548cPush\u6a21\u5f0f \u3002 \u7531\u4e8e\u8fd9\u79cd\u7075\u6d3b\u6027\uff0c\u8bb8\u591a\u73b0\u6709\u7684\u6307\u6807\u7cfb\u7edf\u90fd\u53ef\u4ee5\u7528OpenTelemetry\u5efa\u6a21\uff0c\u800c\u4e0d\u4f1a\u635f\u5931\u8bed\u4e49\u6216\u7cbe\u786e\u6027\uff0c\u8fd9\u4f7f\u5b83\u6210\u4e3a\u4e92\u64cd\u4f5c\u6027\u7684\u5b8c\u7f8e\u6307\u6807\u7cfb\u7edf\u3002 OpenTelemetry\u6709\u4e09\u4e2a\u6a21\u578b\uff1a \u4e8b\u4ef6\u6a21\u578b \uff1a\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u4f60\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u53d1\u8005\u6765\u521b\u5efa\u6307\u6807\uff0c \u6d41\u6a21\u578b \uff1aOpenTelemetry\u4f7f\u7528\u8be5\u6a21\u578b\u8fdb\u884c\u4f20\u8f93\uff0c \u65f6\u95f4\u5e8f\u5217\u6a21\u578b \uff1aOpenTelemetry\u5c06\u5176\u7528\u4e8e\u5b58\u50a8\u3002 \u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8ba8\u8bba\u7684\u6307\u6807\u90fd\u662f\u4e8b\u4ef6\u6a21\u578b\u7684\u4e00\u90e8\u5206\uff0c\u800c\u8f6c\u6362\u5219\u662f\u4ece\u4e8b\u4ef6\u6a21\u578b\u5230\u6d41\u6a21\u578b\u7684\u8f6c\u6362\u7684\u4e00\u90e8\u5206\u3002(\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u53d1\u8005\uff0c\u4f60\u5176\u5b9e\u4e0d\u9700\u8981\u62c5\u5fc3\u8fd9\u4e9b\u6a21\u578b\uff0c\u4f46\u6709\u4e00\u4e2a\u57fa\u672c\u7684\u4e86\u89e3\u4f1a\u66f4\u6709\u5e2e\u52a9\uff09\u3002 \u901a\u8fc7\u65f6\u95f4\u4e0a\u7684\u805a\u5408\uff08\u6539\u53d8\u5206\u8fa8\u7387\uff09\u51cf\u5c11\u4f20\u8f93\u7684\u6307\u6807\u6570\u91cf \u901a\u8fc7\u7a7a\u95f4\u805a\u5408\u51cf\u5c11\u4f20\u8f93\u7684\u6307\u6807\u6570\u91cf \uff08\u53bb\u9664\u4e0d\u9700\u8981\u7684\u5c5e\u6027\uff09 \u4ece\u7d2f\u79ef\u8868\u793a\u6cd5\uff08Prometheus\u4f7f\u7528\u7684\uff09\u6539\u4e3a\u5dee\u503c\u8868\u793a\u6cd5\uff08\u8868\u8fbe\u6570\u503c\u4e4b\u95f4\u7684\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u7edd\u5bf9\u6d4b\u91cf\u503c\uff09 OpenTelemetry\u6307\u6807\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\u4f7f\u7528\u5168\u5c40\u7684MeterProvider\u6765\u521b\u5efa\u4e00\u4e2aMeter\uff0c\u5e76\u5c06\u5176\u4e0e\u4e00\u4e2a\u6216\u591a\u4e2aInstrument\u76f8\u5173\u8054\uff0c <mark> \u6bcf\u4e00\u4e2aInstrument\u90fd\u88ab\u7528\u6765\u521b\u5efa\u4e00\u7cfb\u5217\u7684Measurements </mark> \u3002 \u8fd9\u4e9b\u6d4b\u91cf\u503c\u5728View\u4e2d\u88ab\u6c47\u603b\u4e3a\u4e00\u4e2a\u6307\u6807\u3002 \u7136\u540e\u901a\u8fc7Metric Reader\u548cMetric Exporter\u7684\u7ec4\u5408\u6765\u89c2\u5bdf\u548c\u5bfc\u51fa\u6307\u6807\uff08\u53ef\u4ee5\u662f\u62c9\u6216\u63a8\uff09 \u56fe\u793a\u8bf4\u660eOpenTelemetry\u4e2dMeterProvider\u7684\u8981\u7d20 <mark> Instrument\u6216Measurements\u662f\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u521b\u5efa\u6216\u89c2\u5bdf\u5230\u7684\u4e1c\u897f\uff0c\u800c\u6307\u6807\u5219\u8868\u8fbe\u4e86\u6211\u4eec\u4e0e\u53ef\u89c2\u6d4b\u6027\u6570\u636e\u7684\u6d88\u8d39\u8005\u5206\u4eab\u7684\u8be5\u76d1\u6d4b\u7684\u5f53\u524d\u805a\u5408\u503c\u3002 </mark> OpenTelemetry\u5141\u8bb8\u4ee5\u591a\u79cd\u65b9\u5f0f\u5c06\u5c5e\u6027\uff08\u6807\u7b7e\uff09\u9644\u52a0\u5230\u6307\u6807\u4e0a\u3002\u6700\u5e38\u89c1\u7684\u6709\uff1a \u6765\u81ea\u4efb\u4f55\u9644\u52a0\u7684\u8d44\u6e90\uff0c\u5b83\u53ef\u80fd\u6301\u6709\u5b9a\u4e49\u4e3b\u673a\u7684\u6807\u7b7e \u3002\u4f8b\u5982\uff0c\u4e00\u4e2aKubernetes Pod\u6216\u4e00\u4e2a\u865a\u62df\u673a \u6765\u81ea\u5f53\u524d\u7684\u4e0a\u4e0b\u6587\uff0c\u5b83\u5c06\u88ab\u9644\u52a0\u5230\u6240\u6709\u540c\u6b65\u7684Instrument\u4e0a Measurement\u672c\u8eab\u6240\u5177\u5907\u7684 2 \u4eceMeasurements\u5230Metrics Measurements\u7684\u521b\u5efa\u975e\u5e38\u5feb\uff0c\u5c24\u5176\u662f\u5728\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\uff0c\u4f46\u8fd9\u53ef\u80fd\u4f1a\u8fc5\u901f\u538b\u57ae\u4e00\u4e2a\u6307\u6807\u7ba1\u9053\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c Prometheus\u4f7f\u7528\u4e86\u4e00\u4e2a\u5e26\u6709\u6293\u53d6\u95f4\u9694\u7684Pull\u673a\u5236 \uff0c \u800cOpenTelemetry\u901a\u8fc7\u7ed9\u6bcf\u4e2aInstrument\u9644\u52a0\u4e00\u4e2aAggregation View\u6765\u89e3\u51b3\u6536\u96c6\u8def\u5f84\u4e2d\u7684\u95ee\u9898\uff0c\u7136\u540e\u5c06\u6570\u636e\u4f20\u9012\u7ed9\u89c2\u5bdf\u5b83\u4eec\u7684MetricReader\u548c\u8f93\u51fa\u5b83\u4eec\u7684MetricExporter \uff1a \u4ece\u6d4b\u91cf\u5230\u6307\u6807\uff1aOpenTelemetry\u4e2d\u6307\u6807\u7684\u6536\u96c6\u8def\u5f84\u56fe MetricReader\u8d1f\u8d23\u5728Instrument\u6ca1\u6709View\u7684\u60c5\u51b5\u4e0b\u9644\u52a0\u9ed8\u8ba4\u7684View\uff0c\u4e5f\u8d1f\u8d23\u5b9a\u4e49MetricExporters\uff0c\u7136\u540e\u5411\u5176\u53d1\u9001\u8fd9\u4e9b\u89c2\u6d4b\u503c\u3002 MetricReader\u8fd8\u5c06\u6539\u53d8\u6307\u6807\u7684\u65f6\u95f4\u6027\uff0c\u4ece\u9ed8\u8ba4\u7684Cumulative\uff08\u65b0\u503c\u7d2f\u52a0\u5230\u6700\u540e\u4e00\u4e2a\u503c\u4e0a\uff0c\u8fd9\u4e0e\u6211\u4eec\u5728Prometheus\u4e2d\u770b\u5230\u7684\u76f8\u540c\uff09\u6539\u4e3aDelta\uff08\u5ea6\u91cf\u503c\u662f\u65b0\u65e7\u503c\u4e4b\u5dee\uff09 MetricReader\u548cMetricExporter\u7684\u7ec4\u5408\u51b3\u5b9a\u4e86\u6570\u636e\u5982\u4f55\u88ab\u53d1\u9001\u5230\u4e0b\u6e38 \u3002 \u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u65b9\u6cd5\u662f\u4f7f\u7528PeriodicExportingMetricReader\u548cOTLPMetricExporter\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff08\u9ed8\u8ba4\u4e3a60\u79d2\uff09\u5bf9\u6307\u6807\u8fdb\u884c\u91c7\u6837\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u5230OpenTelemetry\u91c7\u96c6\u5668\uff08\u5b83\u5c06\u4f7f\u7528\u53e6\u4e00\u4e2aExporter\uff09\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406 \u3002\u8bb8\u591a\u5176\u4ed6\u7684\u5bfc\u51fa\u5668\u53ef\u7528\u4e8e\u5404\u79cd\u8bed\u8a00\u3002 \u4e00\u4e9b\u6d41\u884c\u7684\u5bfc\u51fa\u5668\u6709\uff1a Prometheus Metric Exporter\uff1a \u4e00\u4e2a\u57fa\u4e8ePull\u6a21\u5f0f\u7684\u5bfc\u51fa\u5668\uff0cPrometheus\u5ba2\u6237\u7aef\u53ef\u4ee5\u6293\u53d6\u5b83\u7684\u7aef\u70b9 Prometheus Remote Write Exporter\uff1a \u4e00\u4e2a\u57fa\u4e8ePush\u6a21\u5f0f\u7684\u5bfc\u51fa\u5668\uff0c\u901a\u8fc7Prometheus\u8fdc\u7a0b\u5199\u5165\u534f\u8bae\u53d1\u9001\u6570\u636e OTLPMetricExporter\uff1a \u5b83\u53ef\u4ee5\u5411\u4efb\u4f55\u7406\u89e3OpenTelemetry\u534f\u8bae\u7684\u8bbe\u5907\u63a8\u9001\u6307\u6807 ConsoleMetricExporter\uff1a \u5b83\u88ab\u7528\u6765\u5411\u63a7\u5236\u53f0\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f \u5728Python\u4e2d\uff0c\u521d\u59cb\u5316OpenTelemetry\u6307\u6807\u5e76\u9644\u52a0\u4e00\u4e2a\u9ed8\u8ba4\u7684MetricReader\u548cMetricExporter\uff08\u53d1\u9001\u6307\u6807\u5230\u672c\u5730OpenTelemetry\u91c7\u96c6\u5668\uff09\uff0c\u4ee3\u7801\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a from opentelemetry._metrics import get_meter_provider, set_meter_provider from opentelemetry.exporter.otlp.proto.grpc._metric_exporter import ( OTLPMetricExporter, ) from opentelemetry.sdk._metrics import MeterProvider from opentelemetry.sdk._metrics.export import PeriodicExportingMetricReader exporter = OTLPMetricExporter(insecure=True) reader = PeriodicExportingMetricReader(exporter) provider = MeterProvider(metric_readers=[reader]) set_meter_provider(provider) 3 \u2014\u76d1\u6d4b\u5e76\u53d1\u9001Measurements OpenTelemetry\u63d0\u4f9b\u4e86\u516d\u79cd\u7c7b\u578b\u7684Instruments\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u4eec\u6765\u6355\u83b7\u6d4b\u91cf\u7ed3\u679c\u3002\u5b83\u4eec\u53ef\u4ee5\u88ab\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a\u540c\u6b65\u548c\u5f02\u6b65 \u3002 \u6bcf\u4e2aInstrument\u90fd\u53ef\u4ee5\u53d1\u9001\u6d4b\u91cf\u503c\uff0c\u6bcf\u4e2aInstrument\u90fd\u53ef\u4ee5\u4e0e\u5c5e\u6027\u76f8\u5173\u8054\u3002 \u540c\u6b65Instrument\u4ee5\u7c7b\u4f3c\u4e8ePrometheus\u6307\u6807\u7684\u65b9\u5f0f\u5728\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u5b9e\u73b0\uff0c\u901a\u8fc7\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u63d2\u5165\u4ee3\u7801\uff0c\u6bcf\u6b21\u6267\u884c\u65f6\u90fd\u4f1a\u66f4\u65b0\u4e00\u4e2a\u503c\u3002\u5b83\u4eec\u53ef\u4ee5\u4e0e\u5f53\u524d\u7684Context\u4e0a\u4e0b\u6587\u76f8\u5173\u8054\uff08\u8fd9\u6709\u52a9\u4e8e\u63cf\u8ff0\u5f53\u524d\u7684\u5e94\u7528\u72b6\u6001\uff09\u3002 \u5f02\u6b65Instrument\u5219\u4f1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u53ea\u5728\u89c2\u5bdf\u65f6\u53d1\u9001\u6570\u503c\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u6ce8\u518c\u4e00\u4e2a\u5f02\u6b65Instrument\uff0c\u6bcf10\u79d2\u62a5\u544a\u4e00\u4e2a\u4f20\u611f\u5668\u7684\u503c\u3002\u8fd9\u4e9bInstrument\u4e0d\u80fd\u4e0e\u5f53\u524d\u7684Context\u76f8\u5173\u8054\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f4d\u4e8e\u4e3b\u7a0b\u5e8f\u7684\u5916\u90e8\uff0c\u800c\u4e0d\u662f\u5728\u4e3b\u7a0b\u5e8f\u8fd0\u884c\u65f6\u88ab\u8c03\u7528\uff0c\u5b83\u4eec\u6839\u636e\u89c2\u5bdf\u8005\u7684\u8981\u6c42\u89c2\u5bdf\u4fe1\u53f7\u6570\u636e\u3002\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u5b83\u4eec\u7c7b\u4f3c\u4e8ePrometheus\u901a\u8fc7Exporter\u5bf9\u4e00\u4e2a\u672a\u88ab\u68c0\u6d4b\u7684\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u76d1\u63a7\u3002 \u6240\u6709Instrument\u7684\u521b\u5efa\u90fd\u6709\u4e00\u4e2a\u540d\u79f0\u3001\u4e00\u4e2a\u63cf\u8ff0\u548c\u4e00\u4e2a\u6d4b\u91cf\u5355\u4f4d\uff08\u5fc5\u987b\u9075\u5faaInstrument\u5355\u4f4d\u89c4\u5219\uff09\u3002 \u5f02\u6b65Instrument\u8fd8\u6307\u5b9a\u4e86\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u88ab\u8c03\u7528\u4ee5\u89c2\u5bdf\u6d4b\u91cf\u7ed3\u679c\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u7684OpenTelemetry Instrument\u7c7b\u578b\uff0c\u5982\u4e0b\u8868\u6240\u793a\u3002\uff08\u4ee4\u4eba\u56f0\u60d1\u7684\u662f\uff0c\u8bed\u8a00\u5448\u73b0\u7ed9\u7528\u6237\u7684\u5efa\u8bae\u540d\u79f0\u4e0e\u6d4b\u91cf\u540d\u79f0\u4e0d\u4e00\u6837\uff0c\u7528Observable\u6765\u4ee3\u66ffAsynchronous\u3002\u5373 observable_counter \u3002\uff09 \u4e0b\u8868\u6982\u8ff0\u4e86OpenTelemetry\u4e2dInstrument\u7c7b\u578b\u7684\u540d\u79f0\u548c\u7279\u70b9\u3002 \u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u6765\u8bb2\u4e00\u4e0b\u6bcf\u4e00\u79cdInstrument\u7c7b\u578b\u3002 Counter / Asynchronous Counter Counter\u53ef\u8bd1\u4e3a\u201d\u8ba1\u6570\u5668\u201d\uff0c\u5219Asynchronous Counter\u8bd1\u4e3a\u201d\u5f02\u6b65\u8ba1\u6570\u5668\u201d Counter\u662f\u4e00\u4e2a\u540c\u6b65Instrument\uff0c\u5b83\u603b\u662f\u5728\u589e\u52a0\uff0c\u5373\u5b83\u662f\u5355\u8c03\u7684\uff0c\u53ea\u63a5\u53d7\u975e\u8d1f\u7684\u503c \u3002 \u4e0d\u51fa\u6240\u6599\uff0c\u5b83\u4e0ePrometheus\u7684Counter\u662f\u76f8\u540c\u7684\u3002Counter\u901a\u8fc7\u63a5\u6536\u589e\u91cf\u6216Delta\u5dee\u503c\u6765\u5de5\u4f5c\u3002 \u5f53\u4f7f\u7528\u8ba1\u6570\u5668\u65f6\uff0c\u8bed\u8a00SDK\u4e2d\u4f1a\u6709\u4e00\u4e2aadd\u7684\u64cd\u4f5c\uff0c\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u975e\u8d1f\u6570\u6765\u589e\u52a0\u8ba1\u6570\u5668\u7684\u503c\u3002 \u540c\u65f6\u53ef\u4ee5\u9644\u52a0\u4e00\u7ec4\u53ef\u9009\u7684\u5c5e\u6027\u3002\u8fd9\u4e9b\u5c5e\u6027\u7c7b\u4f3c\u4e8ePrometheus\u7684\u6807\u7b7e\u3002 \u5f02\u6b65\u8ba1\u6570\u5668\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u901a\u8fc7\u56de\u8c03\u800c\u4e0d\u662fadd\u51fd\u6570\u6765\u64cd\u4f5c \u3002\u5f53\u89c2\u5bdfInstrument\u65f6\uff0c\u56de\u8c03\u51fd\u6570\u4f1a\u88ab\u6267\u884c\uff0c\u5e76\u5c06\u4f20\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\u6d4b\u91cf\u503c\uff0c\u8868\u793a\u4e3a\u7edd\u5bf9\u503c\uff08\u4e0d\u662fdelta\u503c\uff09\u3002\u4e00\u65e6\u8fd9\u4e9b\u503c\u88ab\u4f20\u9012\uff0c\u5b83\u4eec\u5c06\u5728\u5185\u90e8\u901a\u8fc7\u8ba1\u7b97\u5f97\u5230delta\u503c\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u5f02\u6b65\u8ba1\u6570\u5668\uff0c\u62a5\u544a\u5e94\u7528\u7a0b\u5e8f\u81ea\u542f\u52a8\u4ee5\u6765\u6240\u6d88\u8017\u7684CPU\u65f6\u95f4\u3002\u8fd9\u4e00\u4fe1\u606f\u5c06\u5728\u56de\u8c03\u4e2d\u4ece\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u63d0\u53d6\u5e76\u8fd4\u56de\u3002\u53ef\u4ee5\u4e00\u6b21\u6027\u8fd4\u56de\u51e0\u4e2a\u503c\uff0c\u6bd4\u5982\u6bcf\u4e2aCPU\u6216\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u503c\u3002\u8fd9\u4e9b\u6d4b\u91cf\u503c\u603b\u662f\u88ab\u671f\u671b\u80fd\u591f\u901a\u8fc7\u4e00\u79cd\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u8fdb\u884c\u8de8\u5c5e\u6027\u6c42\u548c\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7cfb\u7edf\u4f7f\u7528\u7684\u603bCPU\u65f6\u95f4\uff09\u3002 \u8bf7\u6ce8\u610f\uff0c\u7531\u4e8ePython SDK\u8fd8\u4e0d\u7a33\u5b9a\uff0c\u6211\u4eec\u9700\u8981\u5bfc\u5165 _metrics \uff0c\u800c\u4e0d\u662f\u672c\u6587\u4ee3\u7801\u793a\u4f8b\u7684metrics\u3002\u672a\u6765\u53ef\u80fd\u8fd8\u4f1a\u6709\u4e00\u4e9b\u7834\u574f\u6027\u7684\u53d8\u66f4\u3002\u968f\u7740\u9879\u76ee\u7684\u8fdb\u5c55\uff0c\u6211\u4eec\u4f1a\u4fdd\u6301\u66f4\u65b0\u3002\u76ee\u524d\u7684\u4f8b\u5b50\u662f\u7528OpenTelemetry Python SDK v1.11.1\u7f16\u5199\u7684\u3002 \u5728Python\u4e2d\uff0c\u521b\u5efa\u548c\u4f7f\u7528\u8ba1\u6570\u5668\u548c\u5f02\u6b65\u8ba1\u6570\u5668\u7684\u4f8b\u5b50\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a from opentelemetry._metrics import get_meter_provider from opentelemetry._metrics.observation import Observation meter = get_meter_provider().get_meter(\"otel-demo\") # Counter counter = meter.create_counter(\"counter\") # This adds 100 to the total (a delta value) counter.add(100,{\"app\": \"timescale\"}) # Callback function for Async counter def observable_counter_func() -> [Observation]: # This reports that the current value is 10, which will be # converted to a delta internally return [Observation(10, {\"app\": \"timescale\"}] # Async Counter observable_counter = meter.create_observable_counter( \"observable_counter\", [observable_counter_func] ) UpDownCounter / Asynchronous UpDownCounter UpDownCounter\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8eCounter\u7684\u540c\u6b65Instrument\uff0c\u4f46\u5b83\u5141\u8bb8\u4f20\u9012\u8d1f\u7684delta\u503c\uff08\u5b83\u53ef\u4ee5\u4e0d\u662f\u5355\u8c03\u7684\uff09 \u3002 Counter\u9002\u5408\u8868\u793a\u5df2\u7ecf\u63d0\u4ea4\u7684\u4f5c\u4e1a\u6570\u91cf\uff0c\u800cUpDownCounter\u5219\u9002\u5408\u8868\u793a\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u4f5c\u4e1a\u6570\u91cf\uff08\u5b83\u53ef\u4ee5\u5411\u4e0a\u548c\u5411\u4e0b\u79fb\u52a8\uff09\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e0ePrometheus\u4e2d\u7684Gauge\u7684\u7528\u6cd5\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u6211\u4eec\u8bb0\u5f55\u7684\u662f\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u7edd\u5bf9\u503c \u4e00\u4e2aUpDownCounter\u63d0\u4f9b\u4e86\u4e00\u4e2aadd\u64cd\u4f5c\uff0c\u4e0eCounter\u64cd\u4f5c\u76f8\u540c\uff1a\u4e0e\u4e4b\u76f8\u53cd\u7684\u662f\u5b83\u63a5\u53d7\u8d1f\u7684\u6570\u636e\u503c\u3002\u7531\u5c5e\u6027\u6570\u636e\u5173\u8054\u7684\u503c\u88ab\u671f\u671b\u662f\u53ef\u4ee5\u6c42\u548c\u7684\u3002 \u4e0d\u51fa\u6240\u6599\uff0c\u5f02\u6b65UpDownCounter\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56de\u8c03\u63a5\u53e3\uff0c\u8fd4\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\u6d4b\u91cf\u503c\uff0c\u5c06\u6bcf\u4e2a\u6d4b\u91cf\u503c\u8868\u8fbe\u4e3a\u4e00\u4e2a\u7edd\u5bf9\u503c\uff0c\u8be5\u503c\u5c06\u5728\u5185\u90e8\u88ab\u8ba1\u7b97\u4e3adelta\u503c\u3002 OpenTelemetry\u89c4\u8303\u6307\u51fa\uff0c\u5f53\u88ab\u8fd4\u56de\u7684\u503c\u5f88\u5bb9\u6613\u88ab\u89c2\u5bdf\u5230\u65f6\uff0c\u4e0d\u5e94\u8be5\u4f7f\u7528\u540c\u6b65\u7684UpDownCounter\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u4f7f\u7528\u4e00\u4e2a\u5f02\u6b65UpDownCounter\u6765\u4ee3\u66ff\u3002 \u5728Python\u4e2d\uff0c\u521b\u5efa\u548c\u4f7f\u7528UpDownCounter\u548cAsynchronous UpDownCounter\u7684\u4f8b\u5b50\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a from opentelemetry._metrics import get_meter_provider from opentelemetry._metrics.observation import Observation meter = get_meter_provider().get_meter(\"otel-demo\") # UpDownCounter up_down_counter = meter.create_up_down_counter(\"up_down_counter\") # This adds 100, then removes 10 from the total (both delta values) up_down_counter.add(100,{\"app\": \"timescale\"}) up_down_counter.add(-10,{\"app\": \"timescale\"}) # Callback function for Async counter def observable_up_down_counter_func() -> [Observation]: # This reports that the current value is 10, which will be # converted to a delta internally return [Observation(10, {\"app\": \"timescale\"})] # Async UpDownCounter, note the observable prefix observable_up_down_counter = meter.create_observable_up_down_counter( \"observable_up_down_counter\", [observable_up_down_counter_func] ) Histogram Histogram\u53ef\u8bd1\u4e3a\u76f4\u65b9\u56fe\u3002 Histogram\u662f\u4e00\u79cd\u540c\u6b65Instrument\uff0c\u5b83\u5141\u8bb8\u8bb0\u5f55\u5728\u7edf\u8ba1\u4e0a\u76f8\u4e92\u5173\u8054\u7684\u591a\u4e2a\u6570\u503c\u3002\u5f53\u4f60\u4e0d\u60f3\u5b64\u7acb\u5730\u5206\u6790\u6570\u636e\u70b9\uff0c\u800c\u662f\u60f3\u901a\u8fc7\u8ddf\u8e2a\u843d\u5728\u6bcf\u4e2a\u9884\u5b9a\u4e49\u6876\u4e2d\u7684\u503c\u7684\u6570\u91cf\u4ee5\u53ca\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff08\u5982\u679c\u6709\u8fdb\u884c\u914d\u7f6e\uff09\u6765\u751f\u6210\u5173\u4e8e\u5176\u5206\u5e03\u7684\u7edf\u8ba1\u4fe1\u606f\u65f6\uff0c\u4f60\u4f1a\u9009\u62e9Histogram\u3002 \u76f4\u65b9\u56fe\u53ea\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u65b9\u6cd5\u88ab\u66b4\u9732\u51fa\u6765\uff1arecord\u3002\u8bb0\u5f55\u9700\u8981\u4e00\u4e2a\u975e\u8d1f\u7684\u89c2\u5bdf\u503c\uff0c\u5e76\u53ef\u4ee5\u9644\u52a0\u4e00\u7ec4\u53ef\u9009\u7684\u5c5e\u6027\u3002 \u5f53\u4f60\u67e5\u770bHTTP\u54cd\u5e94\u65f6\u95f4\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u9009\u62e9\u76f4\u65b9\u56fe\uff1a\u77e5\u9053\u6bcf\u4e2a\u8bf7\u6c42\u53d1\u751f\u65f6\u7684\u786e\u5207\u54cd\u5e94\u65f6\u95f4\u53ef\u80fd\u5e76\u4e0d\u90a3\u4e48\u6709\u7528\uff08\u800c\u4e14\u66f4\u9002\u5408\u94fe\u8def\u8ffd\u8e2a\u6570\u636e\uff0c\u5b83\u5c06\u66b4\u9732\u6bcf\u4e2a\u8bf7\u6c42\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\uff09\uff0c\u4f46\u4ece\u670d\u52a1\u5c42\u9762\u6765\u770b\uff0c\u80fd\u591f\u62a5\u544a\u4e2d\u4f4d\u54cd\u5e94\u65f6\u95f4\u548c\u8d85\u8fc795\u5206\u4f4d\u6570\u7684HTTP\u8bf7\u6c42\u6570\u91cf\u53ef\u80fd\u66f4\u6709\u610f\u601d\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8bb0\u5f55\u6d4b\u91cf\u7ed3\u679c\u5e76\u4e0d\u80fd\u521b\u5efaHistogram\uff1b\u9ed8\u8ba4\u7684Aggregation\uff08Explicit Bucket Histogram Aggregation\uff09\u53ef\u4ee5\u3002\u5f53\u4f7f\u7528Histogram Instrument\u65f6\uff0c\u91cd\u8981\u7684\u662f\u786e\u4fdd\u6876\u4e5f\u88ab\u914d\u7f6e\u4e86\u3002\u9ed8\u8ba4\u503c\u662f [ 0, 5, 10, 25, 50, 75, 100, 250, 500, 1000 ] \uff0c\u800c\u8fd9\u5e76\u4e0d\u603b\u662f\u7406\u60f3\u7684\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u51e0\u6bb5\u770b\u5230\u4e00\u4e9b\u521b\u5efaView\u7684\u4f8b\u5b50\u3002 \u5728Python\u4e2d\uff0c\u4e00\u4e2a\u521b\u5efa\u548c\u4f7f\u7528\u76f4\u65b9\u56fe\u7684\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff1a from opentelemetry._metrics import get_meter_provider from opentelemetry._metrics.observation import Observation meter = get_meter_provider().get_meter(\"otel-demo\") # Histogram histogram = meter.create_histogram(\"histogram\") # This records a value of 100 histogram.record(100,{\"app\": \"timescale\"}) Asynchronous Gauge \u5f02\u6b65Gauge\u5728OpenTelemetry API\u4e2d\u7684\u72ec\u7279\u4e4b\u5904\u5728\u4e8e\u4e24\u4e2a\u65b9\u9762\uff1a\u5b83\u6ca1\u6709\u540c\u6b65\u7684\u5b9e\u73b0\uff0c\u5e76\u4e14\u88ab\u8bbe\u8ba1\u7528\u6765\u8868\u793a\u90a3\u4e9b\u76f8\u52a0\u6ca1\u6709\u610f\u4e49\u7684\u503c\uff0c\u5373\u4f7f\u5b83\u4eec\u5171\u4eab\u5c5e\u6027\u6570\u636e\u3002 \u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u4e00\u4e2a\u623f\u5b50\u7684\u5404\u4e2a\u623f\u95f4\u7684\u6e29\u5ea6\u3002\u8fd9\u662f\u5e38\u89c1\u7684\u6570\u636e\uff0c\u4f46\u662f\u628a\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u603b\u503c\u6765\u62a5\u544a\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u2013\u4f60\u53ef\u80fd\u50cf\u6c42\u4e00\u4e2a\u5e73\u5747\u503c\u6216\u6700\u5927\u503c\uff0c\u4f46\u7edd\u4e0d\u662f\u4e00\u4e2a\u603b\u548c\u3002\u8fd9\u662f\u4e0ePrometheus\u4e0d\u540c\u7684\u65b9\u6cd5\uff0cPrometheus\u5c06\u8fd9\u4e9b\u7c7b\u578b\u7684\u8981\u6c42\u7f16\u7801\u5230\u6307\u6807\u7684\u547d\u540d\u89c4\u5219\u4e2d\u3002 \u5728OpenTelemetry\u4e2d\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e00\u4e2aAsynchronous Gauge\uff0c\u4f60\u4e0d\u80fd\u50cf\u4f7f\u7528\u5176\u4ed6\u6307\u6807\u7c7b\u578b\u90a3\u6837\u5bf9\u5176\u8fdb\u884c\u6c47\u603b \u3002 \u4e0e\u6240\u6709\u7684\u5f02\u6b65Instrument\u4e00\u6837\uff0c\u5728\u521b\u5efa\u5f02\u6b65Instrument\u65f6\uff0c\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u56de\u8c03\uff0c\u5b83\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u5b8c\u5168\u79bb\u6563\u7684\uff09\u6d4b\u91cf\u503c\u3002 \u5728Python\u4e2d\uff0c\u521b\u5efa\u548c\u4f7f\u7528Asynchronous Gauge\u7684\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff1a from opentelemetry._metrics import get_meter_provider from opentelemetry._metrics.observation import Observation meter = get_meter_provider().get_meter(\"otel-demo\") # Callback function for Async gauge def observable_gauge_func() -> [Observation]: # This reports that the current value is 10 return [Observation(10, {\"app\": \"timescale\"})] # Async Gauge, note the observable prefix observable_gauge = meter.create_observable_gauge( \"observable_gauge\", [observable_gauge_func] ) 4 Views\u548cAggregations OpenTelemetry\u4e2d\u7684View\u5b9a\u4e49\u4e86\u4e00\u4e2aAggregation\u64cd\u4f5c\uff0c\u5b83\u63a5\u53d7\u4e00\u7cfb\u5217\u7684Measurements\uff0c\u5e76\u5728\u8be5\u65f6\u95f4\u70b9\u4e0a\u5c06\u5176\u8868\u8fbe\u4e3a\u4e00\u4e2a\u5355\u4e00\u7684\u6307\u6807\u503c \u3002 \u968f\u7740\u66f4\u591a\u7684Measurements\u88ab\u521b\u5efa\uff0c\u6307\u6807\u7684\u503c\u4f1a\u88ab\u6301\u7eed\u66f4\u65b0\u3002 \u5982\u679c\u6ca1\u6709\u4e3a\u4e00\u4e2aInstrument\u521b\u5efaView\uff0c\u90a3\u4e48\u5c31\u4f1a\u6839\u636eInstrument\u7c7b\u578b\u9009\u62e9\u4e00\u4e2a\u9ed8\u8ba4\u7684Aggregation \u3002 \u81ea\u5b9a\u4e49View\u53ef\u4ee5\u901a\u8fc7Meter\u540d\u79f0\u3001Instrument\u540d\u79f0\u3001Instrument\u7c7b\u578b\u6216\u901a\u914d\u7b26\u6765\u5b9a\u4f4d\u3002 \u5728OpenTelemetry\u4e2d\uff0c\u6709\u4e09\u79cdAggregation\u7c7b\u578b\uff1a Sum Aggregation\uff1a\u7b80\u5355\u5730\u8ddf\u8e2a\u4f20\u5165\u7684\u6d4b\u91cf\u503c\u7684\u603b\u548c\uff08\u5c0a\u91cd\u8f93\u5165Instrument\u7684\u5355\u8c03\u6027\uff09\uff0c Last Value Aggregation\uff1a\u8ddf\u8e2a\u6700\u540e\u62a5\u544a\u7684\u503c\uff0c Explicit Bucket Histogram Aggregation\uff1a\u8ddf\u8e2a\u5c5e\u4e8e\u6bcf\u4e2a\u9884\u5b9a\u4e49\u6876\uff08\u5fc5\u987b\u5728\u521b\u5efaView\u65f6\u9884\u5b9a\u4e49\uff09\u7684\u6d4b\u91cf\u6570\u91cf\uff0c\u5e76\u53ef\u4ee5\u8ddf\u8e2a\u6700\u5c0f\u548c\u6700\u5927\u503c\u3002 \u4e0b\u8868\u5b9a\u4e49\u4e86\u6bcf\u79cdOpenTelemetry Instrument\u7c7b\u578b\u7684\u9ed8\u8ba4Aggregation\uff1a \u8fd9\u6bb5Python\u4ee3\u7801\u4f7f\u7528ConsoleMetricExporter\u5199\u5165\u63a7\u5236\u53f0\uff0c\u4e5f\u6539\u53d8\u4e86\u6240\u6709\u67f1\u72b6\u56feInstrument\u7684\u6876\u72b6\u7ed3\u6784\uff1a from opentelemetry._metrics import get_meter_provider, set_meter_provider from opentelemetry.sdk._metrics import MeterProvider from opentelemetry.sdk._metrics.export import PeriodicExportingMetricReader from opentelemetry.sdk._metrics.export import ConsoleMetricExporter from opentelemetry.sdk._metrics.aggregation import ExplicitBucketHistogramAggregation exporter = ConsoleMetricExporter() reader = PeriodicExportingMetricReader(exporter) provider = MeterProvider( metric_readers=[reader], views=[View( instrument_name=\"*\u201d, aggregation=ExplicitBucketHistogramAggregation( (1,20,50,100,1000) ))], ) set_meter_provider(provider) \u603b\u7ed3 OpenTelemetry\u6807\u51c6\uff0c\u91cd\u70b9\u662f\u5b83\u7684\u516d\u79cdInstrument\u7c7b\u578b\uff1a counters\u3001asynchronous counters\u3001UpDownCounters\u3001asynchronous UpDownCounters\u3001histograms\u548casynchronous gauges \u3002","title":"4 \u900f\u5f7b\u7406\u89e3OpenTelemetry"},{"location":"chap13/4OpenTelemetry/#4-opentelemetry","text":"OpenTelemetry\u662f\u7531\u4e91\u539f\u751f\u8ba1\u7b97\u57fa\u91d1\u4f1a\uff08CNCF\uff09\u6258\u7ba1\u7684\u4e00\u4e2a\u7528\u4e8e\u57fa\u7840\u8bbe\u65bd\u6027\u80fd\u68c0\u6d4b\u7684\u5f00\u6e90\u53ef\u89c2\u6d4b\u6027\u6846\u67b6 \u3002 \u8be5\u9879\u76ee\u5728\u51e0\u4e4e\u6240\u6709\u4e3b\u8981\u7684\u4e91\u4f9b\u5e94\u5546\uff08AWS\u3001Google\u3001Microsoft\uff09\u4ee5\u53ca\u53ef\u89c2\u6d4b\u6027\u4f9b\u5e94\u5546\uff08\u5305\u62ecTimescale\uff09\u7684\u8d21\u732e\u4e0b\u5f97\u5230\u4e86\u6781\u5927\u7684\u53d1\u5c55\uff0c\u4ee5\u81f3\u4e8e\u5b83\u6210\u4e3a\u6309\u6d3b\u8dc3\u5ea6\u548c\u8d21\u732e\u8005\u6392\u540d\u7b2c\u4e8c\u7684CNCF\u9879\u76ee\uff0c\u4ec5\u6b21\u4e8eKubernetes\u672c\u8eab\u3002 OpenTelemetry\u65e8\u5728\u4e3a\u6240\u6709\u7c7b\u578b\u7684\u53ef\u89c2\u6d4b\u6570\u636e\u5b9a\u4e49\u4e00\u4e2a\u5355\u4e00\u7684\u6807\u51c6\uff08\u5728OpenTelemetry\u7684\u672f\u8bed\u4e2d\u88ab\u79f0\u4f5cSignals\u4fe1\u53f7\uff09\uff0c\u5305\u62ec\u76d1\u63a7\u6307\u6807\u3001\u65e5\u5fd7\u548c\u94fe\u8def\u8ffd\u8e2a\u3002 \u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u5de5\u5177\u3001\u5e93\u3001API\u3001SDK\u548cexporters\uff0cOpenTelemetry\u4ece\u6839\u672c\u4e0a\u7b80\u5316\u4e86\u4ece\u670d\u52a1\u4e2d\u6536\u96c6\u4fe1\u53f7\u5e76\u5c06\u5176\u53d1\u9001\u5230\u4f60\u6240\u9009\u7528\u7684\u540e\u7aef\u670d\u52a1\u7684\u8fc7\u7a0b\uff0c\u4e3a\u66f4\u591a\u7684\u7528\u6237\u548c\u4f9b\u5e94\u5546\u6253\u5f00\u4e86\u53ef\u89c2\u6d4b\u6027\u7684\u5927\u95e8\u3002 \u5728\u8bbe\u8ba1OpenTelemetry\u6307\u6807\u6807\u51c6\u65f6\uff0c\u6709\u4e09\u4e2a\u8bbe\u8ba1\u76ee\u6807\u88ab\u91c7\u7eb3\uff1a \u63d0\u4f9b\u5c06\u76d1\u63a7\u6307\u6807\u4e0e\u5176\u4ed6\u7c7b\u578b\u7684\u53ef\u89c2\u5bdf\u6027\u6570\u636e\u76f8\u8fde\u63a5\u7684\u80fd\u529b \uff1a\u8981\u4e48\u662f\u901a\u8fc7Exemplars\u5728\u94fe\u8def\u8ffd\u8e2a\u548c\u76d1\u63a7\u6307\u6807\u4e4b\u95f4\u76f4\u63a5\u8fde\u63a5\uff0c\u8981\u4e48\u662f\u901a\u8fc7Baggage\u548cContext\u63d0\u4f9b\u4e0e\u65e5\u5fd7\u548c\u94fe\u8def\u8ffd\u8e2a\u4eab\u6709\u76f8\u540c\u7684\u76f8\u5173\u5143\u6570\u636e\uff0c\u95f4\u63a5\u5730\u8fde\u63a5\u3002 \u5141\u8bb8\u4eceOpenCensus\u6807\u51c6\u8f7b\u677e\u8fc1\u79fb\u5230OpenTelemetry\u6807\u51c6 \u3002 \u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u63d0\u4f9b\u5bf9\u5176\u4ed6\u4e3b\u8981\u6307\u6807\u5b9e\u73b0\u7684\u5168\u9762\u652f\u6301 \u3002Prometheus\u548cStatsD\u662f\u4e13\u95e8\u9002\u914d\u7684\uff0c\u80fd\u591f\u5b8c\u5168\u652f\u6301\uff1a \u90a3\u4e9b\u8fc1\u79fb\u5230OpenTelemetry\u7684\u7528\u6237\u53ef\u4ee5\u770b\u5230\u4e0e\u4f7f\u7528\u5176\u539f\u751f\u5ba2\u6237\u7aef\u7c7b\u4f3c\u7684\u7ed3\u679c \u3002 OpenTelemetry\u63d0\u4f9b\u4e86\u4e00\u4e2a\u91c7\u96c6\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u91cd\u65b0\u805a\u5408\u548c\u91cd\u5b9a\u5411\u6307\u6807\u6570\u636e\uff0c\u7ecf\u5e38\u88ab\u7528\u6765\u521b\u5efa\u4fe1\u53f7\u7ba1\u9053\u3002\u7531\u4e8eOpenTelemetry\u4e0d\u63d0\u4f9b\u540e\u7aef\u5b9e\u73b0\uff08\u5b83\u5173\u6ce8\u7684\u662f\u521b\u5efa\u3001\u6536\u96c6\u548c\u53d1\u9001\u4fe1\u53f7\uff09\uff0c\u6570\u636e\u5c06\u6d41\u5411\u53e6\u4e00\u4e2a\u6216\u591a\u4e2a\u7cfb\u7edf\u8fdb\u884c\u5b58\u50a8\u5e76\u6700\u7ec8\u80fd\u591f\u88ab\u67e5\u8be2\u3002 \u4e4b\u6240\u4ee5OpenTelemetry\u6709\u65f6\u4f1a\u4ee4\u4eba\u611f\u5230\u590d\u6742\uff0c\u662f\u56e0\u4e3a\u5b83\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u8bb8\u591a\u4e0d\u540c\u7684\u4fe1\u53f7\u5b9e\u73b0 \u3002\u5728\u8fd9\u7bc7\u535a\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u805a\u7126\u4e8e\u201d\u8868\u9762\u201d\uff0c\u5373\u5f00\u53d1\u8005\u5728OpenTelemetry\u4e2d\u4f7f\u7528\u6307\u6807\u65f6\u53ef\u80fd\u9047\u5230\u7684\u8981\u7d20","title":"4 \u900f\u5f7b\u7406\u89e3OpenTelemetry"},{"location":"chap13/4OpenTelemetry/#1-opentelemetry","text":"OpenTelemetry\u6307\u6807\u4e0ePrometheus\u6307\u6807\u7565\u6709\u4e0d\u540c\uff0c\u5b83\u5141\u8bb8\u5728\u91c7\u96c6\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u66f4\u52a0\u7075\u6d3b\u7684\u8f6c\u6362\uff0c\u5e76\u652f\u6301\u8bb8\u591a\u5bfc\u51fa\u7c7b\u578b\uff0c \u5305\u62ecPull\u548cPush\u6a21\u5f0f \u3002 \u7531\u4e8e\u8fd9\u79cd\u7075\u6d3b\u6027\uff0c\u8bb8\u591a\u73b0\u6709\u7684\u6307\u6807\u7cfb\u7edf\u90fd\u53ef\u4ee5\u7528OpenTelemetry\u5efa\u6a21\uff0c\u800c\u4e0d\u4f1a\u635f\u5931\u8bed\u4e49\u6216\u7cbe\u786e\u6027\uff0c\u8fd9\u4f7f\u5b83\u6210\u4e3a\u4e92\u64cd\u4f5c\u6027\u7684\u5b8c\u7f8e\u6307\u6807\u7cfb\u7edf\u3002 OpenTelemetry\u6709\u4e09\u4e2a\u6a21\u578b\uff1a \u4e8b\u4ef6\u6a21\u578b \uff1a\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u4f60\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u53d1\u8005\u6765\u521b\u5efa\u6307\u6807\uff0c \u6d41\u6a21\u578b \uff1aOpenTelemetry\u4f7f\u7528\u8be5\u6a21\u578b\u8fdb\u884c\u4f20\u8f93\uff0c \u65f6\u95f4\u5e8f\u5217\u6a21\u578b \uff1aOpenTelemetry\u5c06\u5176\u7528\u4e8e\u5b58\u50a8\u3002 \u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8ba8\u8bba\u7684\u6307\u6807\u90fd\u662f\u4e8b\u4ef6\u6a21\u578b\u7684\u4e00\u90e8\u5206\uff0c\u800c\u8f6c\u6362\u5219\u662f\u4ece\u4e8b\u4ef6\u6a21\u578b\u5230\u6d41\u6a21\u578b\u7684\u8f6c\u6362\u7684\u4e00\u90e8\u5206\u3002(\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u53d1\u8005\uff0c\u4f60\u5176\u5b9e\u4e0d\u9700\u8981\u62c5\u5fc3\u8fd9\u4e9b\u6a21\u578b\uff0c\u4f46\u6709\u4e00\u4e2a\u57fa\u672c\u7684\u4e86\u89e3\u4f1a\u66f4\u6709\u5e2e\u52a9\uff09\u3002 \u901a\u8fc7\u65f6\u95f4\u4e0a\u7684\u805a\u5408\uff08\u6539\u53d8\u5206\u8fa8\u7387\uff09\u51cf\u5c11\u4f20\u8f93\u7684\u6307\u6807\u6570\u91cf \u901a\u8fc7\u7a7a\u95f4\u805a\u5408\u51cf\u5c11\u4f20\u8f93\u7684\u6307\u6807\u6570\u91cf \uff08\u53bb\u9664\u4e0d\u9700\u8981\u7684\u5c5e\u6027\uff09 \u4ece\u7d2f\u79ef\u8868\u793a\u6cd5\uff08Prometheus\u4f7f\u7528\u7684\uff09\u6539\u4e3a\u5dee\u503c\u8868\u793a\u6cd5\uff08\u8868\u8fbe\u6570\u503c\u4e4b\u95f4\u7684\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u7edd\u5bf9\u6d4b\u91cf\u503c\uff09 OpenTelemetry\u6307\u6807\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\u4f7f\u7528\u5168\u5c40\u7684MeterProvider\u6765\u521b\u5efa\u4e00\u4e2aMeter\uff0c\u5e76\u5c06\u5176\u4e0e\u4e00\u4e2a\u6216\u591a\u4e2aInstrument\u76f8\u5173\u8054\uff0c <mark> \u6bcf\u4e00\u4e2aInstrument\u90fd\u88ab\u7528\u6765\u521b\u5efa\u4e00\u7cfb\u5217\u7684Measurements </mark> \u3002 \u8fd9\u4e9b\u6d4b\u91cf\u503c\u5728View\u4e2d\u88ab\u6c47\u603b\u4e3a\u4e00\u4e2a\u6307\u6807\u3002 \u7136\u540e\u901a\u8fc7Metric Reader\u548cMetric Exporter\u7684\u7ec4\u5408\u6765\u89c2\u5bdf\u548c\u5bfc\u51fa\u6307\u6807\uff08\u53ef\u4ee5\u662f\u62c9\u6216\u63a8\uff09 \u56fe\u793a\u8bf4\u660eOpenTelemetry\u4e2dMeterProvider\u7684\u8981\u7d20 <mark> Instrument\u6216Measurements\u662f\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u521b\u5efa\u6216\u89c2\u5bdf\u5230\u7684\u4e1c\u897f\uff0c\u800c\u6307\u6807\u5219\u8868\u8fbe\u4e86\u6211\u4eec\u4e0e\u53ef\u89c2\u6d4b\u6027\u6570\u636e\u7684\u6d88\u8d39\u8005\u5206\u4eab\u7684\u8be5\u76d1\u6d4b\u7684\u5f53\u524d\u805a\u5408\u503c\u3002 </mark> OpenTelemetry\u5141\u8bb8\u4ee5\u591a\u79cd\u65b9\u5f0f\u5c06\u5c5e\u6027\uff08\u6807\u7b7e\uff09\u9644\u52a0\u5230\u6307\u6807\u4e0a\u3002\u6700\u5e38\u89c1\u7684\u6709\uff1a \u6765\u81ea\u4efb\u4f55\u9644\u52a0\u7684\u8d44\u6e90\uff0c\u5b83\u53ef\u80fd\u6301\u6709\u5b9a\u4e49\u4e3b\u673a\u7684\u6807\u7b7e \u3002\u4f8b\u5982\uff0c\u4e00\u4e2aKubernetes Pod\u6216\u4e00\u4e2a\u865a\u62df\u673a \u6765\u81ea\u5f53\u524d\u7684\u4e0a\u4e0b\u6587\uff0c\u5b83\u5c06\u88ab\u9644\u52a0\u5230\u6240\u6709\u540c\u6b65\u7684Instrument\u4e0a Measurement\u672c\u8eab\u6240\u5177\u5907\u7684","title":"1 OpenTelemetry\u6307\u6807"},{"location":"chap13/4OpenTelemetry/#2-measurementsmetrics","text":"Measurements\u7684\u521b\u5efa\u975e\u5e38\u5feb\uff0c\u5c24\u5176\u662f\u5728\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\uff0c\u4f46\u8fd9\u53ef\u80fd\u4f1a\u8fc5\u901f\u538b\u57ae\u4e00\u4e2a\u6307\u6807\u7ba1\u9053\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c Prometheus\u4f7f\u7528\u4e86\u4e00\u4e2a\u5e26\u6709\u6293\u53d6\u95f4\u9694\u7684Pull\u673a\u5236 \uff0c \u800cOpenTelemetry\u901a\u8fc7\u7ed9\u6bcf\u4e2aInstrument\u9644\u52a0\u4e00\u4e2aAggregation View\u6765\u89e3\u51b3\u6536\u96c6\u8def\u5f84\u4e2d\u7684\u95ee\u9898\uff0c\u7136\u540e\u5c06\u6570\u636e\u4f20\u9012\u7ed9\u89c2\u5bdf\u5b83\u4eec\u7684MetricReader\u548c\u8f93\u51fa\u5b83\u4eec\u7684MetricExporter \uff1a \u4ece\u6d4b\u91cf\u5230\u6307\u6807\uff1aOpenTelemetry\u4e2d\u6307\u6807\u7684\u6536\u96c6\u8def\u5f84\u56fe MetricReader\u8d1f\u8d23\u5728Instrument\u6ca1\u6709View\u7684\u60c5\u51b5\u4e0b\u9644\u52a0\u9ed8\u8ba4\u7684View\uff0c\u4e5f\u8d1f\u8d23\u5b9a\u4e49MetricExporters\uff0c\u7136\u540e\u5411\u5176\u53d1\u9001\u8fd9\u4e9b\u89c2\u6d4b\u503c\u3002 MetricReader\u8fd8\u5c06\u6539\u53d8\u6307\u6807\u7684\u65f6\u95f4\u6027\uff0c\u4ece\u9ed8\u8ba4\u7684Cumulative\uff08\u65b0\u503c\u7d2f\u52a0\u5230\u6700\u540e\u4e00\u4e2a\u503c\u4e0a\uff0c\u8fd9\u4e0e\u6211\u4eec\u5728Prometheus\u4e2d\u770b\u5230\u7684\u76f8\u540c\uff09\u6539\u4e3aDelta\uff08\u5ea6\u91cf\u503c\u662f\u65b0\u65e7\u503c\u4e4b\u5dee\uff09 MetricReader\u548cMetricExporter\u7684\u7ec4\u5408\u51b3\u5b9a\u4e86\u6570\u636e\u5982\u4f55\u88ab\u53d1\u9001\u5230\u4e0b\u6e38 \u3002 \u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u65b9\u6cd5\u662f\u4f7f\u7528PeriodicExportingMetricReader\u548cOTLPMetricExporter\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff08\u9ed8\u8ba4\u4e3a60\u79d2\uff09\u5bf9\u6307\u6807\u8fdb\u884c\u91c7\u6837\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u5230OpenTelemetry\u91c7\u96c6\u5668\uff08\u5b83\u5c06\u4f7f\u7528\u53e6\u4e00\u4e2aExporter\uff09\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406 \u3002\u8bb8\u591a\u5176\u4ed6\u7684\u5bfc\u51fa\u5668\u53ef\u7528\u4e8e\u5404\u79cd\u8bed\u8a00\u3002 \u4e00\u4e9b\u6d41\u884c\u7684\u5bfc\u51fa\u5668\u6709\uff1a Prometheus Metric Exporter\uff1a \u4e00\u4e2a\u57fa\u4e8ePull\u6a21\u5f0f\u7684\u5bfc\u51fa\u5668\uff0cPrometheus\u5ba2\u6237\u7aef\u53ef\u4ee5\u6293\u53d6\u5b83\u7684\u7aef\u70b9 Prometheus Remote Write Exporter\uff1a \u4e00\u4e2a\u57fa\u4e8ePush\u6a21\u5f0f\u7684\u5bfc\u51fa\u5668\uff0c\u901a\u8fc7Prometheus\u8fdc\u7a0b\u5199\u5165\u534f\u8bae\u53d1\u9001\u6570\u636e OTLPMetricExporter\uff1a \u5b83\u53ef\u4ee5\u5411\u4efb\u4f55\u7406\u89e3OpenTelemetry\u534f\u8bae\u7684\u8bbe\u5907\u63a8\u9001\u6307\u6807 ConsoleMetricExporter\uff1a \u5b83\u88ab\u7528\u6765\u5411\u63a7\u5236\u53f0\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f \u5728Python\u4e2d\uff0c\u521d\u59cb\u5316OpenTelemetry\u6307\u6807\u5e76\u9644\u52a0\u4e00\u4e2a\u9ed8\u8ba4\u7684MetricReader\u548cMetricExporter\uff08\u53d1\u9001\u6307\u6807\u5230\u672c\u5730OpenTelemetry\u91c7\u96c6\u5668\uff09\uff0c\u4ee3\u7801\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a from opentelemetry._metrics import get_meter_provider, set_meter_provider from opentelemetry.exporter.otlp.proto.grpc._metric_exporter import ( OTLPMetricExporter, ) from opentelemetry.sdk._metrics import MeterProvider from opentelemetry.sdk._metrics.export import PeriodicExportingMetricReader exporter = OTLPMetricExporter(insecure=True) reader = PeriodicExportingMetricReader(exporter) provider = MeterProvider(metric_readers=[reader]) set_meter_provider(provider)","title":"2  \u4eceMeasurements\u5230Metrics"},{"location":"chap13/4OpenTelemetry/#3-measurements","text":"OpenTelemetry\u63d0\u4f9b\u4e86\u516d\u79cd\u7c7b\u578b\u7684Instruments\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u4eec\u6765\u6355\u83b7\u6d4b\u91cf\u7ed3\u679c\u3002\u5b83\u4eec\u53ef\u4ee5\u88ab\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a\u540c\u6b65\u548c\u5f02\u6b65 \u3002 \u6bcf\u4e2aInstrument\u90fd\u53ef\u4ee5\u53d1\u9001\u6d4b\u91cf\u503c\uff0c\u6bcf\u4e2aInstrument\u90fd\u53ef\u4ee5\u4e0e\u5c5e\u6027\u76f8\u5173\u8054\u3002 \u540c\u6b65Instrument\u4ee5\u7c7b\u4f3c\u4e8ePrometheus\u6307\u6807\u7684\u65b9\u5f0f\u5728\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u5b9e\u73b0\uff0c\u901a\u8fc7\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u63d2\u5165\u4ee3\u7801\uff0c\u6bcf\u6b21\u6267\u884c\u65f6\u90fd\u4f1a\u66f4\u65b0\u4e00\u4e2a\u503c\u3002\u5b83\u4eec\u53ef\u4ee5\u4e0e\u5f53\u524d\u7684Context\u4e0a\u4e0b\u6587\u76f8\u5173\u8054\uff08\u8fd9\u6709\u52a9\u4e8e\u63cf\u8ff0\u5f53\u524d\u7684\u5e94\u7528\u72b6\u6001\uff09\u3002 \u5f02\u6b65Instrument\u5219\u4f1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u53ea\u5728\u89c2\u5bdf\u65f6\u53d1\u9001\u6570\u503c\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u6ce8\u518c\u4e00\u4e2a\u5f02\u6b65Instrument\uff0c\u6bcf10\u79d2\u62a5\u544a\u4e00\u4e2a\u4f20\u611f\u5668\u7684\u503c\u3002\u8fd9\u4e9bInstrument\u4e0d\u80fd\u4e0e\u5f53\u524d\u7684Context\u76f8\u5173\u8054\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f4d\u4e8e\u4e3b\u7a0b\u5e8f\u7684\u5916\u90e8\uff0c\u800c\u4e0d\u662f\u5728\u4e3b\u7a0b\u5e8f\u8fd0\u884c\u65f6\u88ab\u8c03\u7528\uff0c\u5b83\u4eec\u6839\u636e\u89c2\u5bdf\u8005\u7684\u8981\u6c42\u89c2\u5bdf\u4fe1\u53f7\u6570\u636e\u3002\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u5b83\u4eec\u7c7b\u4f3c\u4e8ePrometheus\u901a\u8fc7Exporter\u5bf9\u4e00\u4e2a\u672a\u88ab\u68c0\u6d4b\u7684\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u76d1\u63a7\u3002 \u6240\u6709Instrument\u7684\u521b\u5efa\u90fd\u6709\u4e00\u4e2a\u540d\u79f0\u3001\u4e00\u4e2a\u63cf\u8ff0\u548c\u4e00\u4e2a\u6d4b\u91cf\u5355\u4f4d\uff08\u5fc5\u987b\u9075\u5faaInstrument\u5355\u4f4d\u89c4\u5219\uff09\u3002 \u5f02\u6b65Instrument\u8fd8\u6307\u5b9a\u4e86\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u88ab\u8c03\u7528\u4ee5\u89c2\u5bdf\u6d4b\u91cf\u7ed3\u679c\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u7684OpenTelemetry Instrument\u7c7b\u578b\uff0c\u5982\u4e0b\u8868\u6240\u793a\u3002\uff08\u4ee4\u4eba\u56f0\u60d1\u7684\u662f\uff0c\u8bed\u8a00\u5448\u73b0\u7ed9\u7528\u6237\u7684\u5efa\u8bae\u540d\u79f0\u4e0e\u6d4b\u91cf\u540d\u79f0\u4e0d\u4e00\u6837\uff0c\u7528Observable\u6765\u4ee3\u66ffAsynchronous\u3002\u5373 observable_counter \u3002\uff09 \u4e0b\u8868\u6982\u8ff0\u4e86OpenTelemetry\u4e2dInstrument\u7c7b\u578b\u7684\u540d\u79f0\u548c\u7279\u70b9\u3002 \u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u6765\u8bb2\u4e00\u4e0b\u6bcf\u4e00\u79cdInstrument\u7c7b\u578b\u3002","title":"3 \u2014\u76d1\u6d4b\u5e76\u53d1\u9001Measurements"},{"location":"chap13/4OpenTelemetry/#counter-asynchronous-counter","text":"Counter\u53ef\u8bd1\u4e3a\u201d\u8ba1\u6570\u5668\u201d\uff0c\u5219Asynchronous Counter\u8bd1\u4e3a\u201d\u5f02\u6b65\u8ba1\u6570\u5668\u201d Counter\u662f\u4e00\u4e2a\u540c\u6b65Instrument\uff0c\u5b83\u603b\u662f\u5728\u589e\u52a0\uff0c\u5373\u5b83\u662f\u5355\u8c03\u7684\uff0c\u53ea\u63a5\u53d7\u975e\u8d1f\u7684\u503c \u3002 \u4e0d\u51fa\u6240\u6599\uff0c\u5b83\u4e0ePrometheus\u7684Counter\u662f\u76f8\u540c\u7684\u3002Counter\u901a\u8fc7\u63a5\u6536\u589e\u91cf\u6216Delta\u5dee\u503c\u6765\u5de5\u4f5c\u3002 \u5f53\u4f7f\u7528\u8ba1\u6570\u5668\u65f6\uff0c\u8bed\u8a00SDK\u4e2d\u4f1a\u6709\u4e00\u4e2aadd\u7684\u64cd\u4f5c\uff0c\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u975e\u8d1f\u6570\u6765\u589e\u52a0\u8ba1\u6570\u5668\u7684\u503c\u3002 \u540c\u65f6\u53ef\u4ee5\u9644\u52a0\u4e00\u7ec4\u53ef\u9009\u7684\u5c5e\u6027\u3002\u8fd9\u4e9b\u5c5e\u6027\u7c7b\u4f3c\u4e8ePrometheus\u7684\u6807\u7b7e\u3002 \u5f02\u6b65\u8ba1\u6570\u5668\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u901a\u8fc7\u56de\u8c03\u800c\u4e0d\u662fadd\u51fd\u6570\u6765\u64cd\u4f5c \u3002\u5f53\u89c2\u5bdfInstrument\u65f6\uff0c\u56de\u8c03\u51fd\u6570\u4f1a\u88ab\u6267\u884c\uff0c\u5e76\u5c06\u4f20\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\u6d4b\u91cf\u503c\uff0c\u8868\u793a\u4e3a\u7edd\u5bf9\u503c\uff08\u4e0d\u662fdelta\u503c\uff09\u3002\u4e00\u65e6\u8fd9\u4e9b\u503c\u88ab\u4f20\u9012\uff0c\u5b83\u4eec\u5c06\u5728\u5185\u90e8\u901a\u8fc7\u8ba1\u7b97\u5f97\u5230delta\u503c\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u5f02\u6b65\u8ba1\u6570\u5668\uff0c\u62a5\u544a\u5e94\u7528\u7a0b\u5e8f\u81ea\u542f\u52a8\u4ee5\u6765\u6240\u6d88\u8017\u7684CPU\u65f6\u95f4\u3002\u8fd9\u4e00\u4fe1\u606f\u5c06\u5728\u56de\u8c03\u4e2d\u4ece\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u63d0\u53d6\u5e76\u8fd4\u56de\u3002\u53ef\u4ee5\u4e00\u6b21\u6027\u8fd4\u56de\u51e0\u4e2a\u503c\uff0c\u6bd4\u5982\u6bcf\u4e2aCPU\u6216\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u503c\u3002\u8fd9\u4e9b\u6d4b\u91cf\u503c\u603b\u662f\u88ab\u671f\u671b\u80fd\u591f\u901a\u8fc7\u4e00\u79cd\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u8fdb\u884c\u8de8\u5c5e\u6027\u6c42\u548c\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7cfb\u7edf\u4f7f\u7528\u7684\u603bCPU\u65f6\u95f4\uff09\u3002 \u8bf7\u6ce8\u610f\uff0c\u7531\u4e8ePython SDK\u8fd8\u4e0d\u7a33\u5b9a\uff0c\u6211\u4eec\u9700\u8981\u5bfc\u5165 _metrics \uff0c\u800c\u4e0d\u662f\u672c\u6587\u4ee3\u7801\u793a\u4f8b\u7684metrics\u3002\u672a\u6765\u53ef\u80fd\u8fd8\u4f1a\u6709\u4e00\u4e9b\u7834\u574f\u6027\u7684\u53d8\u66f4\u3002\u968f\u7740\u9879\u76ee\u7684\u8fdb\u5c55\uff0c\u6211\u4eec\u4f1a\u4fdd\u6301\u66f4\u65b0\u3002\u76ee\u524d\u7684\u4f8b\u5b50\u662f\u7528OpenTelemetry Python SDK v1.11.1\u7f16\u5199\u7684\u3002 \u5728Python\u4e2d\uff0c\u521b\u5efa\u548c\u4f7f\u7528\u8ba1\u6570\u5668\u548c\u5f02\u6b65\u8ba1\u6570\u5668\u7684\u4f8b\u5b50\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a from opentelemetry._metrics import get_meter_provider from opentelemetry._metrics.observation import Observation meter = get_meter_provider().get_meter(\"otel-demo\") # Counter counter = meter.create_counter(\"counter\") # This adds 100 to the total (a delta value) counter.add(100,{\"app\": \"timescale\"}) # Callback function for Async counter def observable_counter_func() -> [Observation]: # This reports that the current value is 10, which will be # converted to a delta internally return [Observation(10, {\"app\": \"timescale\"}] # Async Counter observable_counter = meter.create_observable_counter( \"observable_counter\", [observable_counter_func] )","title":"Counter / Asynchronous Counter"},{"location":"chap13/4OpenTelemetry/#updowncounter-asynchronous-updowncounter","text":"UpDownCounter\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8eCounter\u7684\u540c\u6b65Instrument\uff0c\u4f46\u5b83\u5141\u8bb8\u4f20\u9012\u8d1f\u7684delta\u503c\uff08\u5b83\u53ef\u4ee5\u4e0d\u662f\u5355\u8c03\u7684\uff09 \u3002 Counter\u9002\u5408\u8868\u793a\u5df2\u7ecf\u63d0\u4ea4\u7684\u4f5c\u4e1a\u6570\u91cf\uff0c\u800cUpDownCounter\u5219\u9002\u5408\u8868\u793a\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u4f5c\u4e1a\u6570\u91cf\uff08\u5b83\u53ef\u4ee5\u5411\u4e0a\u548c\u5411\u4e0b\u79fb\u52a8\uff09\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e0ePrometheus\u4e2d\u7684Gauge\u7684\u7528\u6cd5\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u6211\u4eec\u8bb0\u5f55\u7684\u662f\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u7edd\u5bf9\u503c \u4e00\u4e2aUpDownCounter\u63d0\u4f9b\u4e86\u4e00\u4e2aadd\u64cd\u4f5c\uff0c\u4e0eCounter\u64cd\u4f5c\u76f8\u540c\uff1a\u4e0e\u4e4b\u76f8\u53cd\u7684\u662f\u5b83\u63a5\u53d7\u8d1f\u7684\u6570\u636e\u503c\u3002\u7531\u5c5e\u6027\u6570\u636e\u5173\u8054\u7684\u503c\u88ab\u671f\u671b\u662f\u53ef\u4ee5\u6c42\u548c\u7684\u3002 \u4e0d\u51fa\u6240\u6599\uff0c\u5f02\u6b65UpDownCounter\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56de\u8c03\u63a5\u53e3\uff0c\u8fd4\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\u6d4b\u91cf\u503c\uff0c\u5c06\u6bcf\u4e2a\u6d4b\u91cf\u503c\u8868\u8fbe\u4e3a\u4e00\u4e2a\u7edd\u5bf9\u503c\uff0c\u8be5\u503c\u5c06\u5728\u5185\u90e8\u88ab\u8ba1\u7b97\u4e3adelta\u503c\u3002 OpenTelemetry\u89c4\u8303\u6307\u51fa\uff0c\u5f53\u88ab\u8fd4\u56de\u7684\u503c\u5f88\u5bb9\u6613\u88ab\u89c2\u5bdf\u5230\u65f6\uff0c\u4e0d\u5e94\u8be5\u4f7f\u7528\u540c\u6b65\u7684UpDownCounter\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u4f7f\u7528\u4e00\u4e2a\u5f02\u6b65UpDownCounter\u6765\u4ee3\u66ff\u3002 \u5728Python\u4e2d\uff0c\u521b\u5efa\u548c\u4f7f\u7528UpDownCounter\u548cAsynchronous UpDownCounter\u7684\u4f8b\u5b50\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a from opentelemetry._metrics import get_meter_provider from opentelemetry._metrics.observation import Observation meter = get_meter_provider().get_meter(\"otel-demo\") # UpDownCounter up_down_counter = meter.create_up_down_counter(\"up_down_counter\") # This adds 100, then removes 10 from the total (both delta values) up_down_counter.add(100,{\"app\": \"timescale\"}) up_down_counter.add(-10,{\"app\": \"timescale\"}) # Callback function for Async counter def observable_up_down_counter_func() -> [Observation]: # This reports that the current value is 10, which will be # converted to a delta internally return [Observation(10, {\"app\": \"timescale\"})] # Async UpDownCounter, note the observable prefix observable_up_down_counter = meter.create_observable_up_down_counter( \"observable_up_down_counter\", [observable_up_down_counter_func] )","title":"UpDownCounter / Asynchronous UpDownCounter"},{"location":"chap13/4OpenTelemetry/#histogram","text":"Histogram\u53ef\u8bd1\u4e3a\u76f4\u65b9\u56fe\u3002 Histogram\u662f\u4e00\u79cd\u540c\u6b65Instrument\uff0c\u5b83\u5141\u8bb8\u8bb0\u5f55\u5728\u7edf\u8ba1\u4e0a\u76f8\u4e92\u5173\u8054\u7684\u591a\u4e2a\u6570\u503c\u3002\u5f53\u4f60\u4e0d\u60f3\u5b64\u7acb\u5730\u5206\u6790\u6570\u636e\u70b9\uff0c\u800c\u662f\u60f3\u901a\u8fc7\u8ddf\u8e2a\u843d\u5728\u6bcf\u4e2a\u9884\u5b9a\u4e49\u6876\u4e2d\u7684\u503c\u7684\u6570\u91cf\u4ee5\u53ca\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff08\u5982\u679c\u6709\u8fdb\u884c\u914d\u7f6e\uff09\u6765\u751f\u6210\u5173\u4e8e\u5176\u5206\u5e03\u7684\u7edf\u8ba1\u4fe1\u606f\u65f6\uff0c\u4f60\u4f1a\u9009\u62e9Histogram\u3002 \u76f4\u65b9\u56fe\u53ea\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u65b9\u6cd5\u88ab\u66b4\u9732\u51fa\u6765\uff1arecord\u3002\u8bb0\u5f55\u9700\u8981\u4e00\u4e2a\u975e\u8d1f\u7684\u89c2\u5bdf\u503c\uff0c\u5e76\u53ef\u4ee5\u9644\u52a0\u4e00\u7ec4\u53ef\u9009\u7684\u5c5e\u6027\u3002 \u5f53\u4f60\u67e5\u770bHTTP\u54cd\u5e94\u65f6\u95f4\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u9009\u62e9\u76f4\u65b9\u56fe\uff1a\u77e5\u9053\u6bcf\u4e2a\u8bf7\u6c42\u53d1\u751f\u65f6\u7684\u786e\u5207\u54cd\u5e94\u65f6\u95f4\u53ef\u80fd\u5e76\u4e0d\u90a3\u4e48\u6709\u7528\uff08\u800c\u4e14\u66f4\u9002\u5408\u94fe\u8def\u8ffd\u8e2a\u6570\u636e\uff0c\u5b83\u5c06\u66b4\u9732\u6bcf\u4e2a\u8bf7\u6c42\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\uff09\uff0c\u4f46\u4ece\u670d\u52a1\u5c42\u9762\u6765\u770b\uff0c\u80fd\u591f\u62a5\u544a\u4e2d\u4f4d\u54cd\u5e94\u65f6\u95f4\u548c\u8d85\u8fc795\u5206\u4f4d\u6570\u7684HTTP\u8bf7\u6c42\u6570\u91cf\u53ef\u80fd\u66f4\u6709\u610f\u601d\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8bb0\u5f55\u6d4b\u91cf\u7ed3\u679c\u5e76\u4e0d\u80fd\u521b\u5efaHistogram\uff1b\u9ed8\u8ba4\u7684Aggregation\uff08Explicit Bucket Histogram Aggregation\uff09\u53ef\u4ee5\u3002\u5f53\u4f7f\u7528Histogram Instrument\u65f6\uff0c\u91cd\u8981\u7684\u662f\u786e\u4fdd\u6876\u4e5f\u88ab\u914d\u7f6e\u4e86\u3002\u9ed8\u8ba4\u503c\u662f [ 0, 5, 10, 25, 50, 75, 100, 250, 500, 1000 ] \uff0c\u800c\u8fd9\u5e76\u4e0d\u603b\u662f\u7406\u60f3\u7684\u3002\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u51e0\u6bb5\u770b\u5230\u4e00\u4e9b\u521b\u5efaView\u7684\u4f8b\u5b50\u3002 \u5728Python\u4e2d\uff0c\u4e00\u4e2a\u521b\u5efa\u548c\u4f7f\u7528\u76f4\u65b9\u56fe\u7684\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff1a from opentelemetry._metrics import get_meter_provider from opentelemetry._metrics.observation import Observation meter = get_meter_provider().get_meter(\"otel-demo\") # Histogram histogram = meter.create_histogram(\"histogram\") # This records a value of 100 histogram.record(100,{\"app\": \"timescale\"})","title":"Histogram"},{"location":"chap13/4OpenTelemetry/#asynchronous-gauge","text":"\u5f02\u6b65Gauge\u5728OpenTelemetry API\u4e2d\u7684\u72ec\u7279\u4e4b\u5904\u5728\u4e8e\u4e24\u4e2a\u65b9\u9762\uff1a\u5b83\u6ca1\u6709\u540c\u6b65\u7684\u5b9e\u73b0\uff0c\u5e76\u4e14\u88ab\u8bbe\u8ba1\u7528\u6765\u8868\u793a\u90a3\u4e9b\u76f8\u52a0\u6ca1\u6709\u610f\u4e49\u7684\u503c\uff0c\u5373\u4f7f\u5b83\u4eec\u5171\u4eab\u5c5e\u6027\u6570\u636e\u3002 \u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u4e00\u4e2a\u623f\u5b50\u7684\u5404\u4e2a\u623f\u95f4\u7684\u6e29\u5ea6\u3002\u8fd9\u662f\u5e38\u89c1\u7684\u6570\u636e\uff0c\u4f46\u662f\u628a\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u603b\u503c\u6765\u62a5\u544a\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u2013\u4f60\u53ef\u80fd\u50cf\u6c42\u4e00\u4e2a\u5e73\u5747\u503c\u6216\u6700\u5927\u503c\uff0c\u4f46\u7edd\u4e0d\u662f\u4e00\u4e2a\u603b\u548c\u3002\u8fd9\u662f\u4e0ePrometheus\u4e0d\u540c\u7684\u65b9\u6cd5\uff0cPrometheus\u5c06\u8fd9\u4e9b\u7c7b\u578b\u7684\u8981\u6c42\u7f16\u7801\u5230\u6307\u6807\u7684\u547d\u540d\u89c4\u5219\u4e2d\u3002 \u5728OpenTelemetry\u4e2d\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e00\u4e2aAsynchronous Gauge\uff0c\u4f60\u4e0d\u80fd\u50cf\u4f7f\u7528\u5176\u4ed6\u6307\u6807\u7c7b\u578b\u90a3\u6837\u5bf9\u5176\u8fdb\u884c\u6c47\u603b \u3002 \u4e0e\u6240\u6709\u7684\u5f02\u6b65Instrument\u4e00\u6837\uff0c\u5728\u521b\u5efa\u5f02\u6b65Instrument\u65f6\uff0c\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u56de\u8c03\uff0c\u5b83\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u5b8c\u5168\u79bb\u6563\u7684\uff09\u6d4b\u91cf\u503c\u3002 \u5728Python\u4e2d\uff0c\u521b\u5efa\u548c\u4f7f\u7528Asynchronous Gauge\u7684\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff1a from opentelemetry._metrics import get_meter_provider from opentelemetry._metrics.observation import Observation meter = get_meter_provider().get_meter(\"otel-demo\") # Callback function for Async gauge def observable_gauge_func() -> [Observation]: # This reports that the current value is 10 return [Observation(10, {\"app\": \"timescale\"})] # Async Gauge, note the observable prefix observable_gauge = meter.create_observable_gauge( \"observable_gauge\", [observable_gauge_func] )","title":"Asynchronous Gauge"},{"location":"chap13/4OpenTelemetry/#4-viewsaggregations","text":"OpenTelemetry\u4e2d\u7684View\u5b9a\u4e49\u4e86\u4e00\u4e2aAggregation\u64cd\u4f5c\uff0c\u5b83\u63a5\u53d7\u4e00\u7cfb\u5217\u7684Measurements\uff0c\u5e76\u5728\u8be5\u65f6\u95f4\u70b9\u4e0a\u5c06\u5176\u8868\u8fbe\u4e3a\u4e00\u4e2a\u5355\u4e00\u7684\u6307\u6807\u503c \u3002 \u968f\u7740\u66f4\u591a\u7684Measurements\u88ab\u521b\u5efa\uff0c\u6307\u6807\u7684\u503c\u4f1a\u88ab\u6301\u7eed\u66f4\u65b0\u3002 \u5982\u679c\u6ca1\u6709\u4e3a\u4e00\u4e2aInstrument\u521b\u5efaView\uff0c\u90a3\u4e48\u5c31\u4f1a\u6839\u636eInstrument\u7c7b\u578b\u9009\u62e9\u4e00\u4e2a\u9ed8\u8ba4\u7684Aggregation \u3002 \u81ea\u5b9a\u4e49View\u53ef\u4ee5\u901a\u8fc7Meter\u540d\u79f0\u3001Instrument\u540d\u79f0\u3001Instrument\u7c7b\u578b\u6216\u901a\u914d\u7b26\u6765\u5b9a\u4f4d\u3002 \u5728OpenTelemetry\u4e2d\uff0c\u6709\u4e09\u79cdAggregation\u7c7b\u578b\uff1a Sum Aggregation\uff1a\u7b80\u5355\u5730\u8ddf\u8e2a\u4f20\u5165\u7684\u6d4b\u91cf\u503c\u7684\u603b\u548c\uff08\u5c0a\u91cd\u8f93\u5165Instrument\u7684\u5355\u8c03\u6027\uff09\uff0c Last Value Aggregation\uff1a\u8ddf\u8e2a\u6700\u540e\u62a5\u544a\u7684\u503c\uff0c Explicit Bucket Histogram Aggregation\uff1a\u8ddf\u8e2a\u5c5e\u4e8e\u6bcf\u4e2a\u9884\u5b9a\u4e49\u6876\uff08\u5fc5\u987b\u5728\u521b\u5efaView\u65f6\u9884\u5b9a\u4e49\uff09\u7684\u6d4b\u91cf\u6570\u91cf\uff0c\u5e76\u53ef\u4ee5\u8ddf\u8e2a\u6700\u5c0f\u548c\u6700\u5927\u503c\u3002 \u4e0b\u8868\u5b9a\u4e49\u4e86\u6bcf\u79cdOpenTelemetry Instrument\u7c7b\u578b\u7684\u9ed8\u8ba4Aggregation\uff1a \u8fd9\u6bb5Python\u4ee3\u7801\u4f7f\u7528ConsoleMetricExporter\u5199\u5165\u63a7\u5236\u53f0\uff0c\u4e5f\u6539\u53d8\u4e86\u6240\u6709\u67f1\u72b6\u56feInstrument\u7684\u6876\u72b6\u7ed3\u6784\uff1a from opentelemetry._metrics import get_meter_provider, set_meter_provider from opentelemetry.sdk._metrics import MeterProvider from opentelemetry.sdk._metrics.export import PeriodicExportingMetricReader from opentelemetry.sdk._metrics.export import ConsoleMetricExporter from opentelemetry.sdk._metrics.aggregation import ExplicitBucketHistogramAggregation exporter = ConsoleMetricExporter() reader = PeriodicExportingMetricReader(exporter) provider = MeterProvider( metric_readers=[reader], views=[View( instrument_name=\"*\u201d, aggregation=ExplicitBucketHistogramAggregation( (1,20,50,100,1000) ))], ) set_meter_provider(provider)","title":"4 Views\u548cAggregations"},{"location":"chap13/4OpenTelemetry/#_1","text":"OpenTelemetry\u6807\u51c6\uff0c\u91cd\u70b9\u662f\u5b83\u7684\u516d\u79cdInstrument\u7c7b\u578b\uff1a counters\u3001asynchronous counters\u3001UpDownCounters\u3001asynchronous UpDownCounters\u3001histograms\u548casynchronous gauges \u3002","title":"\u603b\u7ed3"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/","text":"\u7b2c\u4e00\u8282 Centos7 Prometheus\u5b89\u88c5\u90e8\u7f72+\u76d1\u63a7+\u7ed8\u56fe+\u544a\u8b66 1 \u51c6\u5907 1-1 \u90e8\u7f72\u67b6\u6784\u56fe 1-2 \u51c6\u5907\u673a\u5668 master machine: 192.168.33.10 $ cat /etc/os-release NAME=\"CentOS Linux\" VERSION=\"7 (Core)\" ID=\"centos\" ID_LIKE=\"rhel fedora\" VERSION_ID=\"7\" PRETTY_NAME=\"CentOS Linux 7 (Core)\" ANSI_COLOR=\"0;31\" CPE_NAME=\"cpe:/o:centos:centos:7\" HOME_URL=\"https://www.centos.org/\" BUG_REPORT_URL=\"https://bugs.centos.org/\" CENTOS_MANTISBT_PROJECT=\"CentOS-7\" CENTOS_MANTISBT_PROJECT_VERSION=\"7\" REDHAT_SUPPORT_PRODUCT=\"centos\" REDHAT_SUPPORT_PRODUCT_VERSION=\"7\" 2 \u5b89\u88c5\u90e8\u5206 \u5728\u5b98\u7f51\u4e0b\u8f7d\u5bf9\u5e94\u7684\u538b\u7f29\u5305\u6587\u4ef6\uff0c\u89e3\u538b\u3001\u6dfb\u52a0\u7cfb\u7edf\u670d\u52a1\u5668\u3001\u542f\u52a8\u3002 2-1 Node_exporter $ wget https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz $ sudo tar zxf node_exporter-0.18.1.linux-amd64.tar.gz -C /usr/local $ sudo vim /etc/systemd/system/node_exporter.service [Unit] Description=node_exporter After=network.target [Service] Restart=on-failure ExecStart=/usr/local/node_exporter-0.18.1.linux-amd64/node_exporter [Install] WantedBy=multi-user.target $ sudo systemctl start node_exporter $ systemctl status node_exporter $ sudo systemctl enable node_exporter $ systemctl status node_exporter \u25cf node_exporter.service - node_exporter Loaded: loaded (/etc/systemd/system/node_exporter.service; enabled; vendor preset: disabled) Active: active (running) since Sun 2019-06-23 07:56:53 UTC; 6min ago Main PID: 7492 (node_exporter) CGroup: /system.slice/node_exporter.service \u2514\u25007492 /usr/local/node_exporter-0.18.1.linux-amd64/node_exporter \u9a8c\u8bc1 2 AlertManager 2-1 \u5b89\u88c5\u547d\u4ee4 $ wget https://github.com/prometheus/alertmanager/releases/download/v0.17.0/alertmanager-0.17.0.linux-amd64.tar.gz $ sudo tar zxf alertmanager-0.17.0.linux-amd64.tar.gz -C /usr/local $ sudo vim /etc/systemd/system/alertmanager.service [Unit] Description=Alertmanager After=network-online.target [Service] Restart=on-failure ExecStart=/usr/local/alertmanager-0.17.0.linux-amd64/alertmanager --config.file=/usr/local/alertmanager-0.17.0.linux-amd64/alertmanager.yml [Install] WantedBy=multi-user.target $ sudo systemctl start alertmanager $ systemctl status alertmanager $ sudo systemctl enable alertmanager $ netstat -anlpt | grep 9093 tcp 0 0 192.168.33.10:39518 192.168.33.10:9093 ESTABLISHED - tcp6 0 0 :::9093 :::* LISTEN - $ systemctl status alertmanager \u25cf alertmanager.service - Alertmanager Loaded: loaded (/etc/systemd/system/alertmanager.service; enabled; vendor preset: disabled) Active: active (running) since Sun 2019-06-23 07:50:39 UTC; 22min ago Main PID: 7404 (alertmanager) CGroup: /system.slice/alertmanager.service \u2514\u25007404 /usr/local/alertmanager-0.17.0.linux-amd64/alertmanager --config.file=/usr/local/alertmanager-0.17.0.linux-amd64/alertmanager.yml 2-2 \u9a8c\u8bc1 192.168.33.10:9093 3 Prometheus $ wget https://github.com/prometheus/prometheus/releases/download/v2.10.0/prometheus-2.10.0.linux-amd64.tar.gz $ sudo tar zxf prometheus-2.9.2.linux-amd64.tar.gz -C /usr/local $ sudo vim /etc/systemd/system/prometheus.service [Unit] Description=Prometheus Server Documentation=https://prometheus.io/docs/introduction/overview/ After=network-online.target [Service] Restart=on-failure ExecStart=/usr/local/prometheus-2.10.0.linux-amd64/prometheus --config.file=/usr/local/prometheus-2.10.0.linux-amd64/prometheus.yml --storage.tsdb.path=/var/lib/prometheus --web.external-url=http://0.0.0.0:9090 [Install] WantedBy=multi-user.target $ sudo systemctl start prometheus $ systemctl status prometheus $ sudo systemctl enable prometheus 4 Grafana 4-1 \u5b89\u88c5 $ wget https://mirrors.tuna.tsinghua.edu.cn/grafana/yum/el7/grafana-5.4.2-1.x86_64.rpm $ sudo yum install initscripts fontconfig $ sudo yum install -y urw-fonts \u7f3a\u5c11 urw-fonts initscripts fontconfig $ rpm -ivh grafana-5.4.2-1.x86_64.rpm $ sudo systemctl start grafana-server $ systemctl status grafana-server $ systemctl enable grafana-server 4-2 \u9a8c\u8bc1 $ sudo vim /etc/grafana/grafana.ini /security 5 \u914d\u7f6e\u90e8\u5206 5-1 AlertManager \u914d\u7f6e\u6587\u4ef6 global: resolve_timeout: 5m smtp_smarthost: 'smtp-mail.outlook.com:587' smtp_from: 'xichao2015@outlook.com' smtp_auth_username: '###' smtp_auth_password: '###' smtp_require_tls: false route: group_by: ['alertname'] group_wait: 10s group_interval: 10s repeat_interval: 1h receiver: 'toemail' receivers: - name: 'toemail' email_configs: - to: 'jacob.xi@sap.com' send_resolved: true - name: 'web.hook' webhook_configs: - url: 'http://192.168.33.10:5001/' inhibit_rules: - source_match: severity: 'critical' target_match: severity: 'warning' equal: ['alertname', 'dev', 'instance'] 5-2 Prometheus $ sudo vim /usr/local/prometheus-2.10.0.linux-amd64/prometheus.yml # my global config global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. # scrape_timeout is set to the global default (10s). # Alertmanager configuration alerting: alertmanagers: - static_configs: - targets: - 192.168.33.10:9093 # Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files: - \"rules/host_rules.yml\" # - \"first_rules.yml\" # - \"second_rules.yml\" # A scrape configuration containing exactly one endpoint to scrape: # Here it's Prometheus itself. scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. - job_name: 'prometheus' # metrics_path defaults to '/metrics' # scheme defaults to 'http'. scrape_interval: 5s static_configs: - targets: ['192.168.33.10:9090'] - job_name: 'my target' static_configs: - targets: ['192.168.33.10:9100'] $ cd /usr/local/prometheus-2.10.0.linux-amd64 $ sudo mkdir {configs,rules} $ sudo vim host_rules.yml groups: - name: 'Linux Instances' rules: - alert: InstanceDown expr: up == 0 for: 5s labels: severity: page # Prometheus templates apply here in the annotation and label fields of the alert. # annotations: # description: '{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 s.' $ sudo systemctl restart prometheus 6 \u9a8c\u8bc1 6-1 \u67e5\u770b\u76ee\u6807 Prometheus => status => rules Prometheus => Alerts 6-2 \u67e5\u770b\u76d1\u63a7\u6570\u636e https://grafana.com/dashboards/9276 Import Data sources Import Dashboard https://grafana.com/dashboards/9276 7 \u544a\u8b66 7-1 \u6a21\u62df node_exporter \u5b95\u673a $ sudo systemctl stop node_exporter \u67e5\u770b\u90ae\u7bb1\u6536\u4ef6\u7bb1 7-2 \u53c2\u8003\u6587\u7ae0 https://www.jianshu.com/p/e59cfd15612e 8 \u62a5\u9519 Grafana showing No data points We need sync datetime $ sudo reboot","title":"\u7b2c\u4e00\u8282 Centos7 Prometheus\u5b89\u88c5\u90e8\u7f72+\u76d1\u63a7+\u7ed8\u56fe+\u544a\u8b66"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#centos7-prometheus","text":"","title":"\u7b2c\u4e00\u8282 Centos7 Prometheus\u5b89\u88c5\u90e8\u7f72+\u76d1\u63a7+\u7ed8\u56fe+\u544a\u8b66"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#1","text":"","title":"1 \u51c6\u5907"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#1-1","text":"","title":"1-1 \u90e8\u7f72\u67b6\u6784\u56fe"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#1-2","text":"master machine: 192.168.33.10 $ cat /etc/os-release NAME=\"CentOS Linux\" VERSION=\"7 (Core)\" ID=\"centos\" ID_LIKE=\"rhel fedora\" VERSION_ID=\"7\" PRETTY_NAME=\"CentOS Linux 7 (Core)\" ANSI_COLOR=\"0;31\" CPE_NAME=\"cpe:/o:centos:centos:7\" HOME_URL=\"https://www.centos.org/\" BUG_REPORT_URL=\"https://bugs.centos.org/\" CENTOS_MANTISBT_PROJECT=\"CentOS-7\" CENTOS_MANTISBT_PROJECT_VERSION=\"7\" REDHAT_SUPPORT_PRODUCT=\"centos\" REDHAT_SUPPORT_PRODUCT_VERSION=\"7\"","title":"1-2 \u51c6\u5907\u673a\u5668"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#2","text":"\u5728\u5b98\u7f51\u4e0b\u8f7d\u5bf9\u5e94\u7684\u538b\u7f29\u5305\u6587\u4ef6\uff0c\u89e3\u538b\u3001\u6dfb\u52a0\u7cfb\u7edf\u670d\u52a1\u5668\u3001\u542f\u52a8\u3002","title":"2 \u5b89\u88c5\u90e8\u5206"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#2-1-node_exporter","text":"$ wget https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz $ sudo tar zxf node_exporter-0.18.1.linux-amd64.tar.gz -C /usr/local $ sudo vim /etc/systemd/system/node_exporter.service [Unit] Description=node_exporter After=network.target [Service] Restart=on-failure ExecStart=/usr/local/node_exporter-0.18.1.linux-amd64/node_exporter [Install] WantedBy=multi-user.target $ sudo systemctl start node_exporter $ systemctl status node_exporter $ sudo systemctl enable node_exporter $ systemctl status node_exporter \u25cf node_exporter.service - node_exporter Loaded: loaded (/etc/systemd/system/node_exporter.service; enabled; vendor preset: disabled) Active: active (running) since Sun 2019-06-23 07:56:53 UTC; 6min ago Main PID: 7492 (node_exporter) CGroup: /system.slice/node_exporter.service \u2514\u25007492 /usr/local/node_exporter-0.18.1.linux-amd64/node_exporter \u9a8c\u8bc1","title":"2-1 Node_exporter"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#2-alertmanager","text":"","title":"2 AlertManager"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#2-1","text":"$ wget https://github.com/prometheus/alertmanager/releases/download/v0.17.0/alertmanager-0.17.0.linux-amd64.tar.gz $ sudo tar zxf alertmanager-0.17.0.linux-amd64.tar.gz -C /usr/local $ sudo vim /etc/systemd/system/alertmanager.service [Unit] Description=Alertmanager After=network-online.target [Service] Restart=on-failure ExecStart=/usr/local/alertmanager-0.17.0.linux-amd64/alertmanager --config.file=/usr/local/alertmanager-0.17.0.linux-amd64/alertmanager.yml [Install] WantedBy=multi-user.target $ sudo systemctl start alertmanager $ systemctl status alertmanager $ sudo systemctl enable alertmanager $ netstat -anlpt | grep 9093 tcp 0 0 192.168.33.10:39518 192.168.33.10:9093 ESTABLISHED - tcp6 0 0 :::9093 :::* LISTEN - $ systemctl status alertmanager \u25cf alertmanager.service - Alertmanager Loaded: loaded (/etc/systemd/system/alertmanager.service; enabled; vendor preset: disabled) Active: active (running) since Sun 2019-06-23 07:50:39 UTC; 22min ago Main PID: 7404 (alertmanager) CGroup: /system.slice/alertmanager.service \u2514\u25007404 /usr/local/alertmanager-0.17.0.linux-amd64/alertmanager --config.file=/usr/local/alertmanager-0.17.0.linux-amd64/alertmanager.yml","title":"2-1 \u5b89\u88c5\u547d\u4ee4"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#2-2","text":"192.168.33.10:9093","title":"2-2 \u9a8c\u8bc1"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#3-prometheus","text":"$ wget https://github.com/prometheus/prometheus/releases/download/v2.10.0/prometheus-2.10.0.linux-amd64.tar.gz $ sudo tar zxf prometheus-2.9.2.linux-amd64.tar.gz -C /usr/local $ sudo vim /etc/systemd/system/prometheus.service [Unit] Description=Prometheus Server Documentation=https://prometheus.io/docs/introduction/overview/ After=network-online.target [Service] Restart=on-failure ExecStart=/usr/local/prometheus-2.10.0.linux-amd64/prometheus --config.file=/usr/local/prometheus-2.10.0.linux-amd64/prometheus.yml --storage.tsdb.path=/var/lib/prometheus --web.external-url=http://0.0.0.0:9090 [Install] WantedBy=multi-user.target $ sudo systemctl start prometheus $ systemctl status prometheus $ sudo systemctl enable prometheus","title":"3 Prometheus"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#4-grafana","text":"","title":"4 Grafana"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#4-1","text":"$ wget https://mirrors.tuna.tsinghua.edu.cn/grafana/yum/el7/grafana-5.4.2-1.x86_64.rpm $ sudo yum install initscripts fontconfig $ sudo yum install -y urw-fonts \u7f3a\u5c11 urw-fonts initscripts fontconfig $ rpm -ivh grafana-5.4.2-1.x86_64.rpm $ sudo systemctl start grafana-server $ systemctl status grafana-server $ systemctl enable grafana-server","title":"4-1 \u5b89\u88c5"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#4-2","text":"$ sudo vim /etc/grafana/grafana.ini /security","title":"4-2 \u9a8c\u8bc1"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#5","text":"","title":"5 \u914d\u7f6e\u90e8\u5206"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#5-1-alertmanager","text":"\u914d\u7f6e\u6587\u4ef6 global: resolve_timeout: 5m smtp_smarthost: 'smtp-mail.outlook.com:587' smtp_from: 'xichao2015@outlook.com' smtp_auth_username: '###' smtp_auth_password: '###' smtp_require_tls: false route: group_by: ['alertname'] group_wait: 10s group_interval: 10s repeat_interval: 1h receiver: 'toemail' receivers: - name: 'toemail' email_configs: - to: 'jacob.xi@sap.com' send_resolved: true - name: 'web.hook' webhook_configs: - url: 'http://192.168.33.10:5001/' inhibit_rules: - source_match: severity: 'critical' target_match: severity: 'warning' equal: ['alertname', 'dev', 'instance']","title":"5-1 AlertManager"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#5-2-prometheus","text":"$ sudo vim /usr/local/prometheus-2.10.0.linux-amd64/prometheus.yml # my global config global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. # scrape_timeout is set to the global default (10s). # Alertmanager configuration alerting: alertmanagers: - static_configs: - targets: - 192.168.33.10:9093 # Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files: - \"rules/host_rules.yml\" # - \"first_rules.yml\" # - \"second_rules.yml\" # A scrape configuration containing exactly one endpoint to scrape: # Here it's Prometheus itself. scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. - job_name: 'prometheus' # metrics_path defaults to '/metrics' # scheme defaults to 'http'. scrape_interval: 5s static_configs: - targets: ['192.168.33.10:9090'] - job_name: 'my target' static_configs: - targets: ['192.168.33.10:9100'] $ cd /usr/local/prometheus-2.10.0.linux-amd64 $ sudo mkdir {configs,rules} $ sudo vim host_rules.yml groups: - name: 'Linux Instances' rules: - alert: InstanceDown expr: up == 0 for: 5s labels: severity: page # Prometheus templates apply here in the annotation and label fields of the alert. # annotations: # description: '{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 s.' $ sudo systemctl restart prometheus","title":"5-2 Prometheus"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#6","text":"","title":"6 \u9a8c\u8bc1"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#6-1","text":"Prometheus => status => rules Prometheus => Alerts","title":"6-1 \u67e5\u770b\u76ee\u6807"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#6-2","text":"https://grafana.com/dashboards/9276 Import Data sources Import Dashboard https://grafana.com/dashboards/9276","title":"6-2 \u67e5\u770b\u76d1\u63a7\u6570\u636e"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#7","text":"","title":"7 \u544a\u8b66"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#7-1-node_exporter","text":"$ sudo systemctl stop node_exporter","title":"7-1 \u6a21\u62dfnode_exporter\u5b95\u673a"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#_1","text":"","title":"\u67e5\u770b\u90ae\u7bb1\u6536\u4ef6\u7bb1"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#7-2","text":"https://www.jianshu.com/p/e59cfd15612e","title":"7-2 \u53c2\u8003\u6587\u7ae0"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#8","text":"","title":"8 \u62a5\u9519"},{"location":"chap2/19centos7_Prometheus_Alertmanager_Grafana/#grafana-showing-no-data-points","text":"We need sync datetime $ sudo reboot","title":"Grafana showing No data points"},{"location":"chap2/36Prometheus_Mysql/","text":"\u7b2c\u4e09\u8282 \u57fa\u4e8ePrometheus\u6784\u5efaMySQL\u53ef\u89c6\u5316\u76d1\u63a7\u5e73\u53f0 \u9009\u578b\u662f Prometheus + Grafana \u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u7b80\u800c\u8a00\u4e4b\u5c31\u662f\u6211\u73b0\u5728\u7684\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u7684\u662f Prometheus \uff0c\u8fd8\u6709\u5c31\u662f Grafana \u6ee1\u8db3\u7684\u6211\u7684\u65e5\u5e38\u5de5\u4f5c\u9700\u8981\u3002 \u9996\u5148\u770b\u4e0b\u6211\u4eec\u7684\u76d1\u63a7\u6548\u679c\u3001MySQL\u4e3b\u4ece\uff1a MySQL\u72b6\u6001\uff1a \u7f13\u51b2\u6c60\u72b6\u6001\uff1a 1 exporter \u76f8\u5173\u90e8\u7f72 1-1 \u5b89\u88c5exporter $ https://github.com/prometheus/mysqld_exporter/releases/download/v0.10.0/mysqld_exporter-0.10.0.linux-amd64.tar.gz $ tar -xf mysqld_exporter-0.10.0.linux-amd64.tar.gz 1-2 \u6dfb\u52a0mysql \u8d26\u6237 \uff1a GRANT SELECT, PROCESS, SUPER, REPLICATION CLIENT, RELOAD ON *.* TO 'exporter'@'%' IDENTIFIED BY 'localhost'; flush privileges; 1-3 \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\uff1a mysqld_exporter-0.10.0.linux-amd64# cat /opt/mysqld_exporter-0.10.0.linux-amd64/.my.cnf [client] user=exporter password=123456 1-4 \u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6 \uff1a # cat /etc/systemd/system/mysql_exporter.service [Unit] Description=mysql Monitoring System Documentation=mysql Monitoring System [Service] ExecStart=/opt/mysqld_exporter-0.10.0.linux-amd64/mysqld_exporter \\ -collect.info_schema.processlist \\ -collect.info_schema.innodb_tablespaces \\ -collect.info_schema.innodb_metrics \\ -collect.perf_schema.tableiowaits \\ -collect.perf_schema.indexiowaits \\ -collect.perf_schema.tablelocks \\ -collect.engine_innodb_status \\ -collect.perf_schema.file_events \\ -collect.info_schema.processlist \\ -collect.binlog_size \\ -collect.info_schema.clientstats \\ -collect.perf_schema.eventswaits \\ -config.my-cnf=/opt/mysqld_exporter-0.10.0.linux-amd64/.my.cnf [Install] WantedBy=multi-user.target 1-5 \u6dfb\u52a0\u914d\u7f6e\u5230prometheus server - job_name: 'mysql' static_configs: - targets: ['192.168.1.11:9104','192.168.1.12:9104'] 1-6 \u6d4b\u8bd5\u770b\u6709\u6ca1\u6709\u8fd4\u56de\u6570\u503c http://192.168.1.12:9104/metrics \u6b63\u5e38\u6211\u4eec\u901a\u8fc7 mysql_up \u53ef\u4ee5\u67e5\u8be2\u5012mysql\u76d1\u63a7\u662f\u5426\u5df2\u7ecf\u751f\u6548\uff0c\u662f\u5426\u8d77\u8d77\u6765 #HELP mysql_up Whether the MySQL server is up. #TYPE mysql_up gauge mysql_up 1 2 \u76d1\u63a7\u76f8\u5173\u6307\u6807 \u5728\u505a\u4efb\u4f55\u4e00\u4e2a\u4e1c\u897f\u76d1\u63a7\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u65f6\u523b\u660e\u767d\u6211\u4eec\u8981\u76d1\u63a7\u7684\u662f\u4ec0\u4e48\uff0c\u6307\u6807\u662f\u5565\u624d\u80fd\u66f4\u597d\u7684\u53bb\u76d1\u63a7\u6211\u4eec\u7684\u670d\u52a1\uff0c\u5728mysql\u91cc\u9762\u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e0b\u6307\u6807\u53bb\u8861\u91cf mysql \u7684\u8fd0\u884c\u60c5\u51b5\uff1a mysql\u4e3b\u4ece\u8fd0\u884c\u60c5\u51b5\u3001 \u67e5\u8be2\u541e\u5410\u91cf\u3001 \u6162\u67e5\u8be2\u60c5\u51b5\u3001 \u8fde\u63a5\u6570\u60c5\u51b5\u3001 \u7f13\u51b2\u6c60\u4f7f\u7528\u60c5\u51b5\u4ee5\u53ca\u67e5\u8be2\u6267\u884c\u6027\u80fd\u7b49\u3002 2-1 \u4e3b\u4ece\u590d\u5236\u8fd0\u884c\u6307\u6807 1\u3001\u4e3b\u4ece\u590d\u5236\u7ebf\u7a0b\u76d1\u63a7\uff1a \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u5f88\u591a\u4f01\u4e1a\u4f7f\u7528\u7684\u90fd\u662f\u4e3b\u4ece\u590d\u5236\u7684\u73af\u5883\uff0c\u76d1\u63a7\u4e24\u4e2a\u7ebf\u7a0b\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u5728mysql\u91cc\u9762\u6211\u4eec\u901a\u5e38\u662f\u901a\u8fc7\u547d\u4ee4\uff1a MariaDB [(none)]> show slave status\\G; *************************** 1. row *************************** Slave_IO_State: Waiting for master to send event Master_Host: 172.16.1.1 Master_User: repl Master_Port: 3306 Connect_Retry: 60 Master_Log_File: mysql-bin.000045 Read_Master_Log_Pos: 72904854 Relay_Log_File: mariadb-relay-bin.000127 Relay_Log_Pos: 72905142 Relay_Master_Log_File: mysql-bin.000045 Slave_IO_Running: Yes Slave_SQL_Running: Yes #Slave_IO_Running \u3001 Slave_SQL_Running \u4e24\u4e2a\u7ebf\u7a0b\u6b63\u5e38\u90a3\u4e48\u8bf4\u660e\u6211\u4eec\u7684\u590d\u5236\u96c6\u7fa4\u662f\u5065\u5eb7\u72b6\u6001\u7684\u3002 MySQLD Exporter \u4e2d\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\u901a\u8fc7 mysql_slave_status_slave_sql_running \u6765\u83b7\u53d6\u4e3b\u4ece\u96c6\u7fa4\u7684\u5065\u5eb7\u72b6\u51b5\u3002 # HELP mysql_slave_status_slave_sql_running Generic metric from SHOW SLAVE STATUS. # TYPE mysql_slave_status_slave_sql_running untyped mysql_slave_status_slave_sql_running{channel_name=\"\",connection_name=\"\",master_host=\"172.16.1.1\",master_uuid=\"\"} 1 2\u3001\u4e3b\u4ece\u590d\u5236\u843d\u540e\u65f6\u95f4\uff1a \u5728\u4f7f\u7528 show slave status \u91cc\u9762\u8fd8\u6709\u4e00\u4e2a\u5173\u952e\u7684\u53c2\u6570 Seconds_Behind_Master \u3002 Seconds_Behind_Master \u8868\u793a slave \u4e0a SQL thread \u4e0e IO thread \u4e4b\u95f4\u7684\u5ef6\u8fdf\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u5728 MySQL \u7684\u590d\u5236\u73af\u5883\u4e2d\uff0c slave \u5148\u4ece master \u4e0a\u5c06 binlog \u62c9\u53d6\u5230\u672c\u5730\uff08\u901a\u8fc7IO thread\uff09\uff0c\u7136\u540e\u901a\u8fc7 SQL thread \u5c06 binlog \u91cd\u653e, \u800c Seconds_Behind_Master \u8868\u793a\u672c\u5730 relaylog \u4e2d\u672a\u88ab\u6267\u884c\u5b8c\u7684\u90a3\u90e8\u5206\u7684\u5dee\u503c\u3002 \u6240\u4ee5\u5982\u679c slave \u62c9\u53d6\u5230\u672c\u5730\u7684 relaylog \uff08\u5b9e\u9645\u4e0a\u5c31\u662f binlog \uff0c\u53ea\u662f\u5728 slave \u4e0a\u4e60\u60ef\u79f0\u547c relaylog \u800c\u5df2\uff09\u90fd\u6267\u884c\u5b8c\uff0c\u6b64\u65f6\u901a\u8fc7 show slave status \u770b\u5230\u7684\u4f1a\u662f 0 Seconds_Behind_Master: 0 MySQLD Exporter \u4e2d\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\u901a\u8fc7 mysql_slave_status_seconds_behind_master \u6765\u83b7\u53d6\u76f8\u5173\u72b6\u6001\u3002 # HELP mysql_slave_status_seconds_behind_master Generic metric from SHOW SLAVE STATUS. # TYPE mysql_slave_status_seconds_behind_master untyped mysql_slave_status_seconds_behind_master{channel_name=\"\",connection_name=\"\",master_host=\"172.16.1.1\",master_uuid=\"\"} 0 3 \u67e5\u8be2\u541e\u5410\u91cf \u8bf4\u5230\u541e\u5410\u91cf\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u4ece\u90a3\u65b9\u9762\u6765\u8861\u91cf\u5462\uff1f \u901a\u5e38\u6765\u8bf4\u6211\u4eec\u53ef\u4ee5\u6839\u636emysql \u7684\u63d2\u5165\u3001\u67e5\u8be2\u3001\u5220\u9664\u3001\u66f4\u65b0\u7b49\u64cd\u4f5c\u6765 \u4e3a\u4e86\u83b7\u53d6\u541e\u5410\u91cf\uff0c MySQL \u6709\u4e00\u4e2a\u540d\u4e3a Questions \u7684\u5185\u90e8\u8ba1\u6570\u5668\uff08\u6839\u636e MySQL \u7528\u8bed\uff0c\u8fd9\u662f\u4e00\u4e2a\u670d\u52a1\u5668\u72b6\u6001\u53d8\u91cf\uff09\uff0c \u5ba2\u6237\u7aef\u6bcf\u53d1\u9001\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\uff0c\u5176\u503c\u5c31\u4f1a\u52a0\u4e00\u3002\u7531 Questions \u6307\u6807\u5e26\u6765\u7684\u4ee5\u5ba2\u6237\u7aef\u4e3a\u4e2d\u5fc3\u7684\u89c6\u89d2\u5e38\u5e38\u6bd4\u76f8\u5173\u7684 Queries \u8ba1\u6570\u5668\u66f4\u5bb9\u6613\u89e3\u91ca \u3002 \u4f5c\u4e3a\u5b58\u50a8\u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\uff0c\u540e\u8005\u4e5f\u4f1a\u8ba1\u7b97\u5df2\u6267\u884c\u8bed\u53e5\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u8bf8\u5982 PREPARE \u548c DEALLOCATE PREPARE \u6307\u4ee4\u8fd0\u884c\u7684\u6b21\u6570\uff0c\u4f5c\u4e3a\u670d\u52a1\u5668\u7aef\u9884\u5904\u7406\u8bed\u53e5\u7684\u4e00\u90e8\u5206\u3002\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u6765\u67e5\u8be2\uff1a MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Questions\"; +---------------+-------+ | Variable_name | Value | +---------------+-------+ | Questions | 15071 | +---------------+-------+ MySQLD Exporter \u4e2d\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\u901a\u8fc7 mysql_global_status_questions \u53cd\u6620\u5f53\u524d Questions \u8ba1\u6570\u5668\u7684\u5927\u5c0f\uff1a # HELP mysql_global_status_questions Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_questions untyped mysql_global_status_questions 13253 \u5f53\u7136\u7531\u4e8eprometheus \u5177\u6709\u975e\u5e38\u4e30\u5bcc\u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u7d2f\u52a0\u7684\u8ba1\u6570\u5668\u6765\u67e5\u8be2\u67d0\u4e00\u77ed\u65f6\u95f4\u5185\u7684\u67e5\u8be2\u589e\u957f\u7387\u60c5\u51b5\uff0c\u53ef\u4ee5\u505a\u76f8\u5173\u7684\u9608\u503c\u544a\u8b66\u5904\u7406\u3001\u4f8b\u5982\u4e00\u4e0b\u67e5\u8be22\u5206\u949f\u65f6\u95f4\u5185\u7684\u67e5\u8be2\u60c5\u51b5\uff1a rate(mysql_global_status_questions[2m]) \u5f53\u7136\u4e0a\u9762\u662f\u603b\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u4ece\u76d1\u63a7\u8bfb\u3001\u5199\u6307\u4ee4\u7684\u5206\u89e3\u60c5\u51b5\uff0c\u4ece\u800c\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u5e93\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3001\u627e\u5230\u53ef\u80fd\u7684\u74f6\u9888\u3002\u901a\u5e38\uff0c\u901a\u5e38\uff0c\u8bfb\u53d6\u67e5\u8be2\u4f1a\u7531 Com_select \u6307\u6807\u6293\u53d6\uff0c\u800c\u5199\u5165\u67e5\u8be2\u5219\u53ef\u80fd\u589e\u52a0\u4e09\u4e2a\u72b6\u6001\u53d8\u91cf\u4e2d\u67d0\u4e00\u4e2a\u7684\u503c\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u6307\u4ee4\uff1a Writes = Com_insert + Com_update + Com_delete \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u547d\u4ee4\u83b7\u53d6\u63d2\u5165\u7684\u60c5\u51b5\uff1a MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Com_insert\"; +---------------+-------+ | Variable_name | Value | +---------------+-------+ | Com_insert | 10578 | +---------------+-------+ \u4ece MySQLD Exporter \u7684 /metrics \u8fd4\u56de\u7684\u76d1\u63a7\u6837\u672c\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 global_status_commands_total \u83b7\u53d6\u5f53\u524d\u5b9e\u4f8b\u5404\u7c7b\u6307\u4ee4\u6267\u884c\u7684\u6b21\u6570\uff1a # HELP mysql_global_status_commands_total Total number of executed MySQL commands. # TYPE mysql_global_status_commands_total counter mysql_global_status_commands_total{command=\"create_trigger\"} 0 mysql_global_status_commands_total{command=\"create_udf\"} 0 mysql_global_status_commands_total{command=\"create_user\"} 1 mysql_global_status_commands_total{command=\"create_view\"} 0 mysql_global_status_commands_total{command=\"dealloc_sql\"} 0 mysql_global_status_commands_total{command=\"delete\"} 3369 mysql_global_status_commands_total{command=\"delete_multi\"} 0 4 \u6162\u67e5\u8be2\u6027\u80fd \u67e5\u8be2\u6027\u80fd\u65b9\u9762\uff0c\u6162\u67e5\u8be2\u4e5f\u662f\u67e5\u8be2\u544a\u8b66\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u6307\u6807\u3002 MySQL \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a Slow_queries \u7684\u8ba1\u6570\u5668\uff0c\u5f53\u67e5\u8be2\u7684\u6267\u884c\u65f6\u95f4\u8d85\u8fc7 long_query_time \u7684\u503c\u540e\uff0c\u8ba1\u6570\u5668\u5c31\u4f1a +1 \uff0c\u5176\u9ed8\u8ba4\u503c\u4e3a 10 \u79d2\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6307\u4ee4\u5728 MySQL \u4e2d\u67e5\u8be2\u5f53\u524d long_query_time \u7684\u8bbe\u7f6e\uff1a MariaDB [(none)]> SHOW VARIABLES LIKE 'long_query_time'; +-----------------+-----------+ | Variable_name | Value | +-----------------+-----------+ | long_query_time | 10.000000 | +-----------------+-----------+ 1 row in set (0.00 sec) \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u4fee\u6539\u65f6\u95f4 MariaDB [(none)]> SET GLOBAL long_query_time = 5; Query OK, 0 rows affected (0.00 sec) \u7136\u540e\u6211\u4eec\u800c\u5df2\u901a\u8fc7sql\u8bed\u8a00\u67e5\u8be2MySQL\u5b9e\u4f8b\u4e2d Slow_queries \u7684\u6570\u91cf\uff1a MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Slow_queries\"; +---------------+-------+ | Variable_name | Value | +---------------+-------+ | Slow_queries | 0 | +---------------+-------+ 1 row in set (0.00 sec) MySQLD Exporter \u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\uff0c\u901a\u8fc7 mysql_global_status_slow_queries \u6307\u6807\u5c55\u793a\u5f53\u524d\u7684 Slow_queries \u7684\u503c\uff1a # HELP mysql_global_status_slow_queries Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_slow_queries untyped mysql_global_status_slow_queries 0 \u540c\u6837\u7684\uff0c\u66f4\u5177\u6839\u636ePrometheus \u6162\u67e5\u8be2\u8bed\u53e5\u6211\u4eec\u4e5f\u53ef\u4ee5\u67e5\u8be2\u5012\u4ed6\u67d0\u6bb5\u65f6\u95f4\u5185\u7684\u589e\u957f\u7387\uff1a rate(mysql_global_status_slow_queries[5m]) 5 \u8fde\u63a5\u6570\u76d1\u63a7 \u76d1\u63a7\u5ba2\u6237\u7aef\u8fde\u63a5\u60c5\u51b5\u76f8\u5f53\u91cd\u8981\uff0c\u56e0\u4e3a\u4e00\u65e6\u53ef\u7528\u8fde\u63a5\u8017\u5c3d\uff0c\u65b0\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\u5c31\u4f1a\u906d\u5230\u62d2\u7edd\u3002MySQL \u9ed8\u8ba4\u7684\u8fde\u63a5\u6570\u9650\u5236\u4e3a 151 \u3002 MariaDB [(none)]> SHOW VARIABLES LIKE 'max_connections'; +-----------------+-------+ | Variable_name | Value | +-----------------+-------+ | max_connections | 151 | +-----------------+-------+ \u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u7684\u5f62\u5f0f\u6765\u589e\u52a0\u8fd9\u4e2a\u6570\u503c\u3002\u4e0e\u4e4b\u5bf9\u5e94\u7684\u5c31\u662f\u5f53\u524d\u8fde\u63a5\u6570\u91cf\uff0c\u5f53\u6211\u4eec\u5f53\u524d\u8fde\u63a5\u51fa\u6765\u8d85\u8fc7\u7cfb\u7edf\u8bbe\u7f6e\u7684\u6700\u5927\u503c\u4e4b\u540e\u5e38\u4f1a\u51fa\u73b0\u6211\u4eec\u770b\u5230\u7684 Too many connections (\u8fde\u63a5\u6570\u8fc7\u591a)\uff0c\u4e0b\u9762\u6211\u67e5\u627e\u4e00\u4e0b\u5f53\u524d\u8fde\u63a5\u6570\uff1a MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Threads_connected\"; +-------------------+-------+ | Variable_name | Value | +-------------------+-------+ | Threads_connected | 41 | +-------------------+------- \u5f53\u7136 mysql \u8fd8\u63d0\u4f9b Threads_running \u8fd9\u4e2a\u6307\u6807\uff0c\u5e2e\u52a9\u4f60\u5206\u9694\u5728\u4efb\u610f\u65f6\u95f4\u6b63\u5728\u79ef\u6781\u5904\u7406\u67e5\u8be2\u7684\u7ebf\u7a0b\u4e0e\u90a3\u4e9b\u867d\u7136\u53ef\u7528\u4f46\u662f\u95f2\u7f6e\u7684\u8fde\u63a5\u3002 MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Threads_running\"; +-----------------+-------+ | Variable_name | Value | +-----------------+-------+ | Threads_running | 10 | +-----------------+-------+ \u5982\u679c\u670d\u52a1\u5668\u771f\u7684\u8fbe\u5230 max_connections \u9650\u5236\uff0c\u5b83\u5c31\u4f1a\u5f00\u59cb\u62d2\u7edd\u65b0\u7684\u8fde\u63a5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c Connection_errors_max_connections \u6307\u6807\u5c31\u4f1a\u5f00\u59cb\u589e\u52a0\uff0c\u540c\u65f6\uff0c\u8ffd\u8e2a\u6240\u6709\u5931\u8d25\u8fde\u63a5\u5c1d\u8bd5\u7684 Aborted_connects \u6307\u6807\u4e5f\u4f1a\u5f00\u59cb\u589e\u52a0\u3002 MySQLD Exporter \u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d: # HELP mysql_global_variables_max_connections Generic gauge metric from SHOW GLOBAL VARIABLES. # TYPE mysql_global_variables_max_connections gauge mysql_global_variables_max_connections 151 \u8868\u793a\u6700\u5927\u8fde\u63a5\u6570 # HELP mysql_global_status_threads_connected Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_threads_connected untyped mysql_global_status_threads_connected 41 \u8868\u793a\u5f53\u524d\u7684\u8fde\u63a5\u6570 # HELP mysql_global_status_threads_running Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_threads_running untyped mysql_global_status_threads_running 1 \u8868\u793a\u5f53\u524d\u6d3b\u8dc3\u7684\u8fde\u63a5\u6570 # HELP mysql_global_status_aborted_connects Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_aborted_connects untyped mysql_global_status_aborted_connects 31 \u7d2f\u8ba1\u6240\u6709\u7684\u8fde\u63a5\u6570 # HELP mysql_global_status_connection_errors_total Total number of MySQL connection errors. # TYPE mysql_global_status_connection_errors_total counter mysql_global_status_connection_errors_total{error=\"internal\"} 0 #\u670d\u52a1\u5668\u5185\u90e8\u5f15\u8d77\u7684\u9519\u8bef\u3001\u5982\u5185\u5b58\u786c\u76d8\u7b49 mysql_global_status_connection_errors_total{error=\"max_connections\"} 0 #\u8d85\u51fa\u8fde\u63a5\u5904\u5f15\u8d77\u7684\u9519\u8bef \u5f53\u7136\u6839\u636e prom \u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u8be2\u5f53\u524d\u5269\u4f59\u53ef\u7528\u7684\u8fde\u63a5\u6570\uff1a mysql_global_variables_max_connections - mysql_global_status_threads_connected \u67e5\u8be2 mysql \u62d2\u7edd\u8fde\u63a5\u6570 mysql_global_status_aborted_connects 6 \u7f13\u51b2\u6c60\u60c5\u51b5 \uff1a MySQL \u9ed8\u8ba4\u7684\u5b58\u50a8\u5f15\u64ce InnoDB \u4f7f\u7528\u4e86\u4e00\u7247\u79f0\u4e3a\u7f13\u51b2\u6c60\u7684\u5185\u5b58\u533a\u57df\uff0c\u7528\u4e8e\u7f13\u5b58\u6570\u636e\u8868\u4e0e\u7d22\u5f15\u7684\u6570\u636e\u3002\u7f13\u51b2\u6c60\u6307\u6807\u5c5e\u4e8e\u8d44\u6e90\u6307\u6807\uff0c\u800c\u975e\u5de5\u4f5c\u6307\u6807\uff0c\u524d\u8005\u66f4\u591a\u5730\u7528\u4e8e\u8c03\u67e5\uff08\u800c\u975e\u68c0\u6d4b\uff09\u6027\u80fd\u95ee\u9898\u3002\u5982\u679c\u6570\u636e\u5e93\u6027\u80fd\u5f00\u59cb\u4e0b\u6ed1\uff0c\u800c\u78c1\u76d8 I/O \u5728\u4e0d\u65ad\u6500\u5347\uff0c\u6269\u5927\u7f13\u51b2\u6c60\u5f80\u5f80\u80fd\u5e26\u6765\u6027\u80fd\u56de\u5347\u3002 \u9ed8\u8ba4\u8bbe\u7f6e\u4e0b\uff0c\u7f13\u51b2\u6c60\u7684\u5927\u5c0f\u901a\u5e38\u76f8\u5bf9\u8f83\u5c0f\uff0c\u4e3a 128MiB \u3002\u4e0d\u8fc7\uff0c MySQL \u5efa\u8bae\u53ef\u5c06\u5176\u6269\u5927\u81f3\u4e13\u7528\u6570\u636e\u5e93\u670d\u52a1\u5668\u7269\u7406\u5185\u5b58\u7684 80% \u5927\u5c0f\u3002\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e00\u4e0b\uff1a MariaDB [(none)]> show global variables like 'innodb_buffer_pool_size'; +-------------------------+-----------+ | Variable_name | Value | +-------------------------+-----------+ | innodb_buffer_pool_size | 134217728 | +-------------------------+-----------+ MySQLD Exporter \u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\uff0c\u4f7f\u7528 mysql_global_variables_innodb_buffer_pool_size \u6765\u8868\u793a\u3002 # HELP mysql_global_variables_innodb_buffer_pool_size Generic gauge metric from SHOW GLOBAL VARIABLES. # TYPE mysql_global_variables_innodb_buffer_pool_size gauge mysql_global_variables_innodb_buffer_pool_size 1.34217728e+08 Innodb_buffer_pool_read_requests\u8bb0\u5f55\u4e86\u6b63\u5e38\u4ece\u7f13\u51b2\u6c60\u8bfb\u53d6\u6570\u636e\u7684\u8bf7\u6c42\u6570\u91cf\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6307\u4ee4\u67e5\u770b MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Innodb_buffer_pool_read_requests\"; +----------------------------------+-------------+ | Variable_name | Value | +----------------------------------+-------------+ | Innodb_buffer_pool_read_requests | 38465 | +----------------------------------+-------------+ MySQLD Exporter \u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\uff0c\u4f7f\u7528 mysql_global_status_innodb_buffer_pool_read_requests \u6765\u8868\u793a # HELP mysql_global_status_innodb_buffer_pool_read_requests Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_innodb_buffer_pool_read_requests untyped mysql_global_status_innodb_buffer_pool_read_requests 2.7711547168e+10 \u5f53\u7f13\u51b2\u6c60\u65e0\u6cd5\u6ee1\u8db3\u65f6\uff0c MySQL \u53ea\u80fd\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u6570\u636e\u3002 Innodb_buffer_pool_reads \u5373\u8bb0\u5f55\u4e86\u4ece\u78c1\u76d8\u8bfb\u53d6\u6570\u636e\u7684\u8bf7\u6c42\u6570\u91cf\u3002\u901a\u5e38\u6765\u8bf4\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u901f\u5ea6\u8981\u6bd4\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u5feb\u5f88\u591a\uff0c\u56e0\u6b64\uff0c\u5982\u679c Innodb_buffer_pool_reads \u7684\u503c\u5f00\u59cb\u589e\u52a0\uff0c\u53ef\u80fd\u610f\u5473\u7740\u6570\u636e\u5e93\u7684\u6027\u80fd\u6709\u95ee\u9898\u3002 \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u53ea\u80fd\u67e5\u770b Innodb_buffer_pool_reads \u7684\u6570\u91cf MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Innodb_buffer_pool_reads\"; +--------------------------+-------+ | Variable_name | Value | +--------------------------+-------+ | Innodb_buffer_pool_reads | 138 | +--------------------------+-------+ 1 row in set (0.00 sec) MySQLD Exporter\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\uff0c\u4f7f\u7528 mysql_global_status_innodb_buffer_pool_read_requests \u6765\u8868\u793a\u3002 # HELP mysql_global_status_innodb_buffer_pool_reads Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_innodb_buffer_pool_reads untyped mysql_global_status_innodb_buffer_pool_reads 138 \u901a\u8fc7\u4ee5\u4e0a\u76d1\u63a7\u6307\u6807\uff0c\u4ee5\u53ca\u5b9e\u9645\u76d1\u63a7\u7684\u573a\u666f\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 PromQL \u5feb\u901f\u5efa\u7acb\u591a\u4e2a\u76d1\u63a7\u9879\u3002\u53ef\u4ee5\u67e5\u770b\u4e24\u5206\u949f\u5185\u8bfb\u53d6\u78c1\u76d8\u7684\u589e\u957f\u7387\u7684\u589e\u957f\u7387\uff1a rate(mysql_global_status_innodb_buffer_pool_reads[2m]) 7 \u5b98\u65b9\u6a21\u677fID \u4e0a\u9762\u662f\u6211\u4eec\u7b80\u5355\u5217\u4e3e\u7684\u4e00\u4e9b\u6307\u6807\uff0c\u4e0b\u9762\u6211\u4eec\u4f7f\u7528granafa\u7ed9 MySQLD_Exporter \u6dfb\u52a0\u76d1\u63a7\u56fe\u8868\uff1a \u4e3b\u4ece\u4e3b\u7fa4\u76d1\u63a7(\u6a21\u677f7371)\uff1a \u76f8\u5173mysql \u72b6\u6001\u76d1\u63a77362\uff1a \u7f13\u51b2\u6c60\u72b6\u60017365\uff1a 7-1 \u7b80\u5355\u7684\u544a\u8b66\u89c4\u5219 \u9664\u4e86\u76f8\u5173\u6a21\u677f\u4e4b\u5916\uff0c\u6ca1\u6709\u544a\u8b66\u89c4\u5219\u90a3\u4e48\u6211\u4eec\u7684\u76d1\u63a7\u5c31\u662f\u4e0d\u5b8c\u7f8e\u7684\uff0c\u4e0b\u9762\u5217\u4e00\u4e0b\u6211\u4eec\u7684\u76d1\u63a7\u544a\u8b66\u89c4\u5219 groups: - name: MySQL-rules rules: - alert: MySQL Status expr: up == 0 for: 5s labels: severity: warning annotations: summary: \"{{$labels.instance}}: MySQL has stop !!!\" description: \"\u68c0\u6d4bMySQL\u6570\u636e\u5e93\u8fd0\u884c\u72b6\u6001\" - alert: MySQL Slave IO Thread Status expr: mysql_slave_status_slave_io_running == 0 for: 5s labels: severity: warning annotations: summary: \"{{$labels.instance}}: MySQL Slave IO Thread has stop !!!\" description: \"\u68c0\u6d4bMySQL\u4e3b\u4eceIO\u7ebf\u7a0b\u8fd0\u884c\u72b6\u6001\" - alert: MySQL Slave SQL Thread Status expr: mysql_slave_status_slave_sql_running == 0 for: 5s labels: severity: warning annotations: summary: \"{{$labels.instance}}: MySQL Slave SQL Thread has stop !!!\" description: \"\u68c0\u6d4bMySQL\u4e3b\u4eceSQL\u7ebf\u7a0b\u8fd0\u884c\u72b6\u6001\" - alert: MySQL Slave Delay Status expr: mysql_slave_status_sql_delay == 30 for: 5s labels: severity: warning annotations: summary: \"{{$labels.instance}}: MySQL Slave Delay has more than 30s !!!\" description: \"\u68c0\u6d4bMySQL\u4e3b\u4ece\u5ef6\u65f6\u72b6\u6001\" - alert: Mysql_Too_Many_Connections expr: rate(mysql_global_status_threads_connected[5m]) > 200 for: 2m labels: severity: warning annotations: summary: \"{{$labels.instance}}: \u8fde\u63a5\u6570\u8fc7\u591a\" description: \"{{$labels.instance}}: \u8fde\u63a5\u6570\u8fc7\u591a\uff0c\u8bf7\u5904\u7406 ,(current value is: {{ $value }})\" - alert: Mysql_Too_Many_slow_queries expr: rate(mysql_global_status_slow_queries[5m]) > 3 for: 2m labels: severity: warning annotations: summary: \"{{$labels.instance}}: \u6162\u67e5\u8be2\u6709\u70b9\u591a\uff0c\u8bf7\u68c0\u67e5\u5904\u7406\" description: \"{{$labels.instance}}: Mysql slow_queries is more than 3 per second ,(current value is: {{ $value }})\" 2.\u6dfb\u52a0\u89c4\u5219\u5230prometheus\uff1a rule_files: - \"rules/*.yml\" 3.\u6253\u5f00web ui\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u89c4\u5219\u751f\u6548\u4e86\uff1a","title":"\u7b2c\u4e09\u8282 \u57fa\u4e8ePrometheus\u6784\u5efaMySQL\u53ef\u89c6\u5316\u76d1\u63a7\u5e73\u53f0"},{"location":"chap2/36Prometheus_Mysql/#prometheusmysql","text":"\u9009\u578b\u662f Prometheus + Grafana \u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u7b80\u800c\u8a00\u4e4b\u5c31\u662f\u6211\u73b0\u5728\u7684\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u7684\u662f Prometheus \uff0c\u8fd8\u6709\u5c31\u662f Grafana \u6ee1\u8db3\u7684\u6211\u7684\u65e5\u5e38\u5de5\u4f5c\u9700\u8981\u3002 \u9996\u5148\u770b\u4e0b\u6211\u4eec\u7684\u76d1\u63a7\u6548\u679c\u3001MySQL\u4e3b\u4ece\uff1a MySQL\u72b6\u6001\uff1a \u7f13\u51b2\u6c60\u72b6\u6001\uff1a","title":"\u7b2c\u4e09\u8282 \u57fa\u4e8ePrometheus\u6784\u5efaMySQL\u53ef\u89c6\u5316\u76d1\u63a7\u5e73\u53f0"},{"location":"chap2/36Prometheus_Mysql/#1-exporter","text":"","title":"1 exporter \u76f8\u5173\u90e8\u7f72"},{"location":"chap2/36Prometheus_Mysql/#1-1-exporter","text":"$ https://github.com/prometheus/mysqld_exporter/releases/download/v0.10.0/mysqld_exporter-0.10.0.linux-amd64.tar.gz $ tar -xf mysqld_exporter-0.10.0.linux-amd64.tar.gz","title":"1-1 \u5b89\u88c5exporter"},{"location":"chap2/36Prometheus_Mysql/#1-2-mysql","text":"GRANT SELECT, PROCESS, SUPER, REPLICATION CLIENT, RELOAD ON *.* TO 'exporter'@'%' IDENTIFIED BY 'localhost'; flush privileges;","title":"1-2 \u6dfb\u52a0mysql \u8d26\u6237\uff1a"},{"location":"chap2/36Prometheus_Mysql/#1-3","text":"mysqld_exporter-0.10.0.linux-amd64# cat /opt/mysqld_exporter-0.10.0.linux-amd64/.my.cnf [client] user=exporter password=123456","title":"1-3 \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\uff1a"},{"location":"chap2/36Prometheus_Mysql/#1-4","text":"# cat /etc/systemd/system/mysql_exporter.service [Unit] Description=mysql Monitoring System Documentation=mysql Monitoring System [Service] ExecStart=/opt/mysqld_exporter-0.10.0.linux-amd64/mysqld_exporter \\ -collect.info_schema.processlist \\ -collect.info_schema.innodb_tablespaces \\ -collect.info_schema.innodb_metrics \\ -collect.perf_schema.tableiowaits \\ -collect.perf_schema.indexiowaits \\ -collect.perf_schema.tablelocks \\ -collect.engine_innodb_status \\ -collect.perf_schema.file_events \\ -collect.info_schema.processlist \\ -collect.binlog_size \\ -collect.info_schema.clientstats \\ -collect.perf_schema.eventswaits \\ -config.my-cnf=/opt/mysqld_exporter-0.10.0.linux-amd64/.my.cnf [Install] WantedBy=multi-user.target","title":"1-4 \u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6\uff1a"},{"location":"chap2/36Prometheus_Mysql/#1-5-prometheus-server","text":"- job_name: 'mysql' static_configs: - targets: ['192.168.1.11:9104','192.168.1.12:9104']","title":"1-5 \u6dfb\u52a0\u914d\u7f6e\u5230prometheus server"},{"location":"chap2/36Prometheus_Mysql/#1-6","text":"http://192.168.1.12:9104/metrics \u6b63\u5e38\u6211\u4eec\u901a\u8fc7 mysql_up \u53ef\u4ee5\u67e5\u8be2\u5012mysql\u76d1\u63a7\u662f\u5426\u5df2\u7ecf\u751f\u6548\uff0c\u662f\u5426\u8d77\u8d77\u6765 #HELP mysql_up Whether the MySQL server is up. #TYPE mysql_up gauge mysql_up 1","title":"1-6 \u6d4b\u8bd5\u770b\u6709\u6ca1\u6709\u8fd4\u56de\u6570\u503c"},{"location":"chap2/36Prometheus_Mysql/#2","text":"\u5728\u505a\u4efb\u4f55\u4e00\u4e2a\u4e1c\u897f\u76d1\u63a7\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u65f6\u523b\u660e\u767d\u6211\u4eec\u8981\u76d1\u63a7\u7684\u662f\u4ec0\u4e48\uff0c\u6307\u6807\u662f\u5565\u624d\u80fd\u66f4\u597d\u7684\u53bb\u76d1\u63a7\u6211\u4eec\u7684\u670d\u52a1\uff0c\u5728mysql\u91cc\u9762\u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e0b\u6307\u6807\u53bb\u8861\u91cf mysql \u7684\u8fd0\u884c\u60c5\u51b5\uff1a mysql\u4e3b\u4ece\u8fd0\u884c\u60c5\u51b5\u3001 \u67e5\u8be2\u541e\u5410\u91cf\u3001 \u6162\u67e5\u8be2\u60c5\u51b5\u3001 \u8fde\u63a5\u6570\u60c5\u51b5\u3001 \u7f13\u51b2\u6c60\u4f7f\u7528\u60c5\u51b5\u4ee5\u53ca\u67e5\u8be2\u6267\u884c\u6027\u80fd\u7b49\u3002","title":"2 \u76d1\u63a7\u76f8\u5173\u6307\u6807"},{"location":"chap2/36Prometheus_Mysql/#2-1","text":"1\u3001\u4e3b\u4ece\u590d\u5236\u7ebf\u7a0b\u76d1\u63a7\uff1a \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u5f88\u591a\u4f01\u4e1a\u4f7f\u7528\u7684\u90fd\u662f\u4e3b\u4ece\u590d\u5236\u7684\u73af\u5883\uff0c\u76d1\u63a7\u4e24\u4e2a\u7ebf\u7a0b\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u5728mysql\u91cc\u9762\u6211\u4eec\u901a\u5e38\u662f\u901a\u8fc7\u547d\u4ee4\uff1a MariaDB [(none)]> show slave status\\G; *************************** 1. row *************************** Slave_IO_State: Waiting for master to send event Master_Host: 172.16.1.1 Master_User: repl Master_Port: 3306 Connect_Retry: 60 Master_Log_File: mysql-bin.000045 Read_Master_Log_Pos: 72904854 Relay_Log_File: mariadb-relay-bin.000127 Relay_Log_Pos: 72905142 Relay_Master_Log_File: mysql-bin.000045 Slave_IO_Running: Yes Slave_SQL_Running: Yes #Slave_IO_Running \u3001 Slave_SQL_Running \u4e24\u4e2a\u7ebf\u7a0b\u6b63\u5e38\u90a3\u4e48\u8bf4\u660e\u6211\u4eec\u7684\u590d\u5236\u96c6\u7fa4\u662f\u5065\u5eb7\u72b6\u6001\u7684\u3002 MySQLD Exporter \u4e2d\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\u901a\u8fc7 mysql_slave_status_slave_sql_running \u6765\u83b7\u53d6\u4e3b\u4ece\u96c6\u7fa4\u7684\u5065\u5eb7\u72b6\u51b5\u3002 # HELP mysql_slave_status_slave_sql_running Generic metric from SHOW SLAVE STATUS. # TYPE mysql_slave_status_slave_sql_running untyped mysql_slave_status_slave_sql_running{channel_name=\"\",connection_name=\"\",master_host=\"172.16.1.1\",master_uuid=\"\"} 1 2\u3001\u4e3b\u4ece\u590d\u5236\u843d\u540e\u65f6\u95f4\uff1a \u5728\u4f7f\u7528 show slave status \u91cc\u9762\u8fd8\u6709\u4e00\u4e2a\u5173\u952e\u7684\u53c2\u6570 Seconds_Behind_Master \u3002 Seconds_Behind_Master \u8868\u793a slave \u4e0a SQL thread \u4e0e IO thread \u4e4b\u95f4\u7684\u5ef6\u8fdf\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u5728 MySQL \u7684\u590d\u5236\u73af\u5883\u4e2d\uff0c slave \u5148\u4ece master \u4e0a\u5c06 binlog \u62c9\u53d6\u5230\u672c\u5730\uff08\u901a\u8fc7IO thread\uff09\uff0c\u7136\u540e\u901a\u8fc7 SQL thread \u5c06 binlog \u91cd\u653e, \u800c Seconds_Behind_Master \u8868\u793a\u672c\u5730 relaylog \u4e2d\u672a\u88ab\u6267\u884c\u5b8c\u7684\u90a3\u90e8\u5206\u7684\u5dee\u503c\u3002 \u6240\u4ee5\u5982\u679c slave \u62c9\u53d6\u5230\u672c\u5730\u7684 relaylog \uff08\u5b9e\u9645\u4e0a\u5c31\u662f binlog \uff0c\u53ea\u662f\u5728 slave \u4e0a\u4e60\u60ef\u79f0\u547c relaylog \u800c\u5df2\uff09\u90fd\u6267\u884c\u5b8c\uff0c\u6b64\u65f6\u901a\u8fc7 show slave status \u770b\u5230\u7684\u4f1a\u662f 0 Seconds_Behind_Master: 0 MySQLD Exporter \u4e2d\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\u901a\u8fc7 mysql_slave_status_seconds_behind_master \u6765\u83b7\u53d6\u76f8\u5173\u72b6\u6001\u3002 # HELP mysql_slave_status_seconds_behind_master Generic metric from SHOW SLAVE STATUS. # TYPE mysql_slave_status_seconds_behind_master untyped mysql_slave_status_seconds_behind_master{channel_name=\"\",connection_name=\"\",master_host=\"172.16.1.1\",master_uuid=\"\"} 0","title":"2-1 \u4e3b\u4ece\u590d\u5236\u8fd0\u884c\u6307\u6807"},{"location":"chap2/36Prometheus_Mysql/#3","text":"\u8bf4\u5230\u541e\u5410\u91cf\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u4ece\u90a3\u65b9\u9762\u6765\u8861\u91cf\u5462\uff1f \u901a\u5e38\u6765\u8bf4\u6211\u4eec\u53ef\u4ee5\u6839\u636emysql \u7684\u63d2\u5165\u3001\u67e5\u8be2\u3001\u5220\u9664\u3001\u66f4\u65b0\u7b49\u64cd\u4f5c\u6765 \u4e3a\u4e86\u83b7\u53d6\u541e\u5410\u91cf\uff0c MySQL \u6709\u4e00\u4e2a\u540d\u4e3a Questions \u7684\u5185\u90e8\u8ba1\u6570\u5668\uff08\u6839\u636e MySQL \u7528\u8bed\uff0c\u8fd9\u662f\u4e00\u4e2a\u670d\u52a1\u5668\u72b6\u6001\u53d8\u91cf\uff09\uff0c \u5ba2\u6237\u7aef\u6bcf\u53d1\u9001\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\uff0c\u5176\u503c\u5c31\u4f1a\u52a0\u4e00\u3002\u7531 Questions \u6307\u6807\u5e26\u6765\u7684\u4ee5\u5ba2\u6237\u7aef\u4e3a\u4e2d\u5fc3\u7684\u89c6\u89d2\u5e38\u5e38\u6bd4\u76f8\u5173\u7684 Queries \u8ba1\u6570\u5668\u66f4\u5bb9\u6613\u89e3\u91ca \u3002 \u4f5c\u4e3a\u5b58\u50a8\u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\uff0c\u540e\u8005\u4e5f\u4f1a\u8ba1\u7b97\u5df2\u6267\u884c\u8bed\u53e5\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u8bf8\u5982 PREPARE \u548c DEALLOCATE PREPARE \u6307\u4ee4\u8fd0\u884c\u7684\u6b21\u6570\uff0c\u4f5c\u4e3a\u670d\u52a1\u5668\u7aef\u9884\u5904\u7406\u8bed\u53e5\u7684\u4e00\u90e8\u5206\u3002\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u6765\u67e5\u8be2\uff1a MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Questions\"; +---------------+-------+ | Variable_name | Value | +---------------+-------+ | Questions | 15071 | +---------------+-------+ MySQLD Exporter \u4e2d\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\u901a\u8fc7 mysql_global_status_questions \u53cd\u6620\u5f53\u524d Questions \u8ba1\u6570\u5668\u7684\u5927\u5c0f\uff1a # HELP mysql_global_status_questions Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_questions untyped mysql_global_status_questions 13253 \u5f53\u7136\u7531\u4e8eprometheus \u5177\u6709\u975e\u5e38\u4e30\u5bcc\u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u7d2f\u52a0\u7684\u8ba1\u6570\u5668\u6765\u67e5\u8be2\u67d0\u4e00\u77ed\u65f6\u95f4\u5185\u7684\u67e5\u8be2\u589e\u957f\u7387\u60c5\u51b5\uff0c\u53ef\u4ee5\u505a\u76f8\u5173\u7684\u9608\u503c\u544a\u8b66\u5904\u7406\u3001\u4f8b\u5982\u4e00\u4e0b\u67e5\u8be22\u5206\u949f\u65f6\u95f4\u5185\u7684\u67e5\u8be2\u60c5\u51b5\uff1a rate(mysql_global_status_questions[2m]) \u5f53\u7136\u4e0a\u9762\u662f\u603b\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u4ece\u76d1\u63a7\u8bfb\u3001\u5199\u6307\u4ee4\u7684\u5206\u89e3\u60c5\u51b5\uff0c\u4ece\u800c\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u5e93\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3001\u627e\u5230\u53ef\u80fd\u7684\u74f6\u9888\u3002\u901a\u5e38\uff0c\u901a\u5e38\uff0c\u8bfb\u53d6\u67e5\u8be2\u4f1a\u7531 Com_select \u6307\u6807\u6293\u53d6\uff0c\u800c\u5199\u5165\u67e5\u8be2\u5219\u53ef\u80fd\u589e\u52a0\u4e09\u4e2a\u72b6\u6001\u53d8\u91cf\u4e2d\u67d0\u4e00\u4e2a\u7684\u503c\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u6307\u4ee4\uff1a Writes = Com_insert + Com_update + Com_delete \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u547d\u4ee4\u83b7\u53d6\u63d2\u5165\u7684\u60c5\u51b5\uff1a MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Com_insert\"; +---------------+-------+ | Variable_name | Value | +---------------+-------+ | Com_insert | 10578 | +---------------+-------+ \u4ece MySQLD Exporter \u7684 /metrics \u8fd4\u56de\u7684\u76d1\u63a7\u6837\u672c\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 global_status_commands_total \u83b7\u53d6\u5f53\u524d\u5b9e\u4f8b\u5404\u7c7b\u6307\u4ee4\u6267\u884c\u7684\u6b21\u6570\uff1a # HELP mysql_global_status_commands_total Total number of executed MySQL commands. # TYPE mysql_global_status_commands_total counter mysql_global_status_commands_total{command=\"create_trigger\"} 0 mysql_global_status_commands_total{command=\"create_udf\"} 0 mysql_global_status_commands_total{command=\"create_user\"} 1 mysql_global_status_commands_total{command=\"create_view\"} 0 mysql_global_status_commands_total{command=\"dealloc_sql\"} 0 mysql_global_status_commands_total{command=\"delete\"} 3369 mysql_global_status_commands_total{command=\"delete_multi\"} 0","title":"3 \u67e5\u8be2\u541e\u5410\u91cf"},{"location":"chap2/36Prometheus_Mysql/#4","text":"\u67e5\u8be2\u6027\u80fd\u65b9\u9762\uff0c\u6162\u67e5\u8be2\u4e5f\u662f\u67e5\u8be2\u544a\u8b66\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u6307\u6807\u3002 MySQL \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a Slow_queries \u7684\u8ba1\u6570\u5668\uff0c\u5f53\u67e5\u8be2\u7684\u6267\u884c\u65f6\u95f4\u8d85\u8fc7 long_query_time \u7684\u503c\u540e\uff0c\u8ba1\u6570\u5668\u5c31\u4f1a +1 \uff0c\u5176\u9ed8\u8ba4\u503c\u4e3a 10 \u79d2\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6307\u4ee4\u5728 MySQL \u4e2d\u67e5\u8be2\u5f53\u524d long_query_time \u7684\u8bbe\u7f6e\uff1a MariaDB [(none)]> SHOW VARIABLES LIKE 'long_query_time'; +-----------------+-----------+ | Variable_name | Value | +-----------------+-----------+ | long_query_time | 10.000000 | +-----------------+-----------+ 1 row in set (0.00 sec) \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u4fee\u6539\u65f6\u95f4 MariaDB [(none)]> SET GLOBAL long_query_time = 5; Query OK, 0 rows affected (0.00 sec) \u7136\u540e\u6211\u4eec\u800c\u5df2\u901a\u8fc7sql\u8bed\u8a00\u67e5\u8be2MySQL\u5b9e\u4f8b\u4e2d Slow_queries \u7684\u6570\u91cf\uff1a MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Slow_queries\"; +---------------+-------+ | Variable_name | Value | +---------------+-------+ | Slow_queries | 0 | +---------------+-------+ 1 row in set (0.00 sec) MySQLD Exporter \u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\uff0c\u901a\u8fc7 mysql_global_status_slow_queries \u6307\u6807\u5c55\u793a\u5f53\u524d\u7684 Slow_queries \u7684\u503c\uff1a # HELP mysql_global_status_slow_queries Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_slow_queries untyped mysql_global_status_slow_queries 0 \u540c\u6837\u7684\uff0c\u66f4\u5177\u6839\u636ePrometheus \u6162\u67e5\u8be2\u8bed\u53e5\u6211\u4eec\u4e5f\u53ef\u4ee5\u67e5\u8be2\u5012\u4ed6\u67d0\u6bb5\u65f6\u95f4\u5185\u7684\u589e\u957f\u7387\uff1a rate(mysql_global_status_slow_queries[5m])","title":"4 \u6162\u67e5\u8be2\u6027\u80fd"},{"location":"chap2/36Prometheus_Mysql/#5","text":"\u76d1\u63a7\u5ba2\u6237\u7aef\u8fde\u63a5\u60c5\u51b5\u76f8\u5f53\u91cd\u8981\uff0c\u56e0\u4e3a\u4e00\u65e6\u53ef\u7528\u8fde\u63a5\u8017\u5c3d\uff0c\u65b0\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\u5c31\u4f1a\u906d\u5230\u62d2\u7edd\u3002MySQL \u9ed8\u8ba4\u7684\u8fde\u63a5\u6570\u9650\u5236\u4e3a 151 \u3002 MariaDB [(none)]> SHOW VARIABLES LIKE 'max_connections'; +-----------------+-------+ | Variable_name | Value | +-----------------+-------+ | max_connections | 151 | +-----------------+-------+ \u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u7684\u5f62\u5f0f\u6765\u589e\u52a0\u8fd9\u4e2a\u6570\u503c\u3002\u4e0e\u4e4b\u5bf9\u5e94\u7684\u5c31\u662f\u5f53\u524d\u8fde\u63a5\u6570\u91cf\uff0c\u5f53\u6211\u4eec\u5f53\u524d\u8fde\u63a5\u51fa\u6765\u8d85\u8fc7\u7cfb\u7edf\u8bbe\u7f6e\u7684\u6700\u5927\u503c\u4e4b\u540e\u5e38\u4f1a\u51fa\u73b0\u6211\u4eec\u770b\u5230\u7684 Too many connections (\u8fde\u63a5\u6570\u8fc7\u591a)\uff0c\u4e0b\u9762\u6211\u67e5\u627e\u4e00\u4e0b\u5f53\u524d\u8fde\u63a5\u6570\uff1a MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Threads_connected\"; +-------------------+-------+ | Variable_name | Value | +-------------------+-------+ | Threads_connected | 41 | +-------------------+------- \u5f53\u7136 mysql \u8fd8\u63d0\u4f9b Threads_running \u8fd9\u4e2a\u6307\u6807\uff0c\u5e2e\u52a9\u4f60\u5206\u9694\u5728\u4efb\u610f\u65f6\u95f4\u6b63\u5728\u79ef\u6781\u5904\u7406\u67e5\u8be2\u7684\u7ebf\u7a0b\u4e0e\u90a3\u4e9b\u867d\u7136\u53ef\u7528\u4f46\u662f\u95f2\u7f6e\u7684\u8fde\u63a5\u3002 MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Threads_running\"; +-----------------+-------+ | Variable_name | Value | +-----------------+-------+ | Threads_running | 10 | +-----------------+-------+ \u5982\u679c\u670d\u52a1\u5668\u771f\u7684\u8fbe\u5230 max_connections \u9650\u5236\uff0c\u5b83\u5c31\u4f1a\u5f00\u59cb\u62d2\u7edd\u65b0\u7684\u8fde\u63a5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c Connection_errors_max_connections \u6307\u6807\u5c31\u4f1a\u5f00\u59cb\u589e\u52a0\uff0c\u540c\u65f6\uff0c\u8ffd\u8e2a\u6240\u6709\u5931\u8d25\u8fde\u63a5\u5c1d\u8bd5\u7684 Aborted_connects \u6307\u6807\u4e5f\u4f1a\u5f00\u59cb\u589e\u52a0\u3002 MySQLD Exporter \u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d: # HELP mysql_global_variables_max_connections Generic gauge metric from SHOW GLOBAL VARIABLES. # TYPE mysql_global_variables_max_connections gauge mysql_global_variables_max_connections 151 \u8868\u793a\u6700\u5927\u8fde\u63a5\u6570 # HELP mysql_global_status_threads_connected Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_threads_connected untyped mysql_global_status_threads_connected 41 \u8868\u793a\u5f53\u524d\u7684\u8fde\u63a5\u6570 # HELP mysql_global_status_threads_running Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_threads_running untyped mysql_global_status_threads_running 1 \u8868\u793a\u5f53\u524d\u6d3b\u8dc3\u7684\u8fde\u63a5\u6570 # HELP mysql_global_status_aborted_connects Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_aborted_connects untyped mysql_global_status_aborted_connects 31 \u7d2f\u8ba1\u6240\u6709\u7684\u8fde\u63a5\u6570 # HELP mysql_global_status_connection_errors_total Total number of MySQL connection errors. # TYPE mysql_global_status_connection_errors_total counter mysql_global_status_connection_errors_total{error=\"internal\"} 0 #\u670d\u52a1\u5668\u5185\u90e8\u5f15\u8d77\u7684\u9519\u8bef\u3001\u5982\u5185\u5b58\u786c\u76d8\u7b49 mysql_global_status_connection_errors_total{error=\"max_connections\"} 0 #\u8d85\u51fa\u8fde\u63a5\u5904\u5f15\u8d77\u7684\u9519\u8bef \u5f53\u7136\u6839\u636e prom \u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u8be2\u5f53\u524d\u5269\u4f59\u53ef\u7528\u7684\u8fde\u63a5\u6570\uff1a mysql_global_variables_max_connections - mysql_global_status_threads_connected \u67e5\u8be2 mysql \u62d2\u7edd\u8fde\u63a5\u6570 mysql_global_status_aborted_connects","title":"5 \u8fde\u63a5\u6570\u76d1\u63a7"},{"location":"chap2/36Prometheus_Mysql/#6","text":"MySQL \u9ed8\u8ba4\u7684\u5b58\u50a8\u5f15\u64ce InnoDB \u4f7f\u7528\u4e86\u4e00\u7247\u79f0\u4e3a\u7f13\u51b2\u6c60\u7684\u5185\u5b58\u533a\u57df\uff0c\u7528\u4e8e\u7f13\u5b58\u6570\u636e\u8868\u4e0e\u7d22\u5f15\u7684\u6570\u636e\u3002\u7f13\u51b2\u6c60\u6307\u6807\u5c5e\u4e8e\u8d44\u6e90\u6307\u6807\uff0c\u800c\u975e\u5de5\u4f5c\u6307\u6807\uff0c\u524d\u8005\u66f4\u591a\u5730\u7528\u4e8e\u8c03\u67e5\uff08\u800c\u975e\u68c0\u6d4b\uff09\u6027\u80fd\u95ee\u9898\u3002\u5982\u679c\u6570\u636e\u5e93\u6027\u80fd\u5f00\u59cb\u4e0b\u6ed1\uff0c\u800c\u78c1\u76d8 I/O \u5728\u4e0d\u65ad\u6500\u5347\uff0c\u6269\u5927\u7f13\u51b2\u6c60\u5f80\u5f80\u80fd\u5e26\u6765\u6027\u80fd\u56de\u5347\u3002 \u9ed8\u8ba4\u8bbe\u7f6e\u4e0b\uff0c\u7f13\u51b2\u6c60\u7684\u5927\u5c0f\u901a\u5e38\u76f8\u5bf9\u8f83\u5c0f\uff0c\u4e3a 128MiB \u3002\u4e0d\u8fc7\uff0c MySQL \u5efa\u8bae\u53ef\u5c06\u5176\u6269\u5927\u81f3\u4e13\u7528\u6570\u636e\u5e93\u670d\u52a1\u5668\u7269\u7406\u5185\u5b58\u7684 80% \u5927\u5c0f\u3002\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e00\u4e0b\uff1a MariaDB [(none)]> show global variables like 'innodb_buffer_pool_size'; +-------------------------+-----------+ | Variable_name | Value | +-------------------------+-----------+ | innodb_buffer_pool_size | 134217728 | +-------------------------+-----------+ MySQLD Exporter \u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\uff0c\u4f7f\u7528 mysql_global_variables_innodb_buffer_pool_size \u6765\u8868\u793a\u3002 # HELP mysql_global_variables_innodb_buffer_pool_size Generic gauge metric from SHOW GLOBAL VARIABLES. # TYPE mysql_global_variables_innodb_buffer_pool_size gauge mysql_global_variables_innodb_buffer_pool_size 1.34217728e+08 Innodb_buffer_pool_read_requests\u8bb0\u5f55\u4e86\u6b63\u5e38\u4ece\u7f13\u51b2\u6c60\u8bfb\u53d6\u6570\u636e\u7684\u8bf7\u6c42\u6570\u91cf\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6307\u4ee4\u67e5\u770b MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Innodb_buffer_pool_read_requests\"; +----------------------------------+-------------+ | Variable_name | Value | +----------------------------------+-------------+ | Innodb_buffer_pool_read_requests | 38465 | +----------------------------------+-------------+ MySQLD Exporter \u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\uff0c\u4f7f\u7528 mysql_global_status_innodb_buffer_pool_read_requests \u6765\u8868\u793a # HELP mysql_global_status_innodb_buffer_pool_read_requests Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_innodb_buffer_pool_read_requests untyped mysql_global_status_innodb_buffer_pool_read_requests 2.7711547168e+10 \u5f53\u7f13\u51b2\u6c60\u65e0\u6cd5\u6ee1\u8db3\u65f6\uff0c MySQL \u53ea\u80fd\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u6570\u636e\u3002 Innodb_buffer_pool_reads \u5373\u8bb0\u5f55\u4e86\u4ece\u78c1\u76d8\u8bfb\u53d6\u6570\u636e\u7684\u8bf7\u6c42\u6570\u91cf\u3002\u901a\u5e38\u6765\u8bf4\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u901f\u5ea6\u8981\u6bd4\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u5feb\u5f88\u591a\uff0c\u56e0\u6b64\uff0c\u5982\u679c Innodb_buffer_pool_reads \u7684\u503c\u5f00\u59cb\u589e\u52a0\uff0c\u53ef\u80fd\u610f\u5473\u7740\u6570\u636e\u5e93\u7684\u6027\u80fd\u6709\u95ee\u9898\u3002 \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u53ea\u80fd\u67e5\u770b Innodb_buffer_pool_reads \u7684\u6570\u91cf MariaDB [(none)]> SHOW GLOBAL STATUS LIKE \"Innodb_buffer_pool_reads\"; +--------------------------+-------+ | Variable_name | Value | +--------------------------+-------+ | Innodb_buffer_pool_reads | 138 | +--------------------------+-------+ 1 row in set (0.00 sec) MySQLD Exporter\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u4e2d\uff0c\u4f7f\u7528 mysql_global_status_innodb_buffer_pool_read_requests \u6765\u8868\u793a\u3002 # HELP mysql_global_status_innodb_buffer_pool_reads Generic metric from SHOW GLOBAL STATUS. # TYPE mysql_global_status_innodb_buffer_pool_reads untyped mysql_global_status_innodb_buffer_pool_reads 138 \u901a\u8fc7\u4ee5\u4e0a\u76d1\u63a7\u6307\u6807\uff0c\u4ee5\u53ca\u5b9e\u9645\u76d1\u63a7\u7684\u573a\u666f\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 PromQL \u5feb\u901f\u5efa\u7acb\u591a\u4e2a\u76d1\u63a7\u9879\u3002\u53ef\u4ee5\u67e5\u770b\u4e24\u5206\u949f\u5185\u8bfb\u53d6\u78c1\u76d8\u7684\u589e\u957f\u7387\u7684\u589e\u957f\u7387\uff1a rate(mysql_global_status_innodb_buffer_pool_reads[2m])","title":"6 \u7f13\u51b2\u6c60\u60c5\u51b5\uff1a"},{"location":"chap2/36Prometheus_Mysql/#7-id","text":"\u4e0a\u9762\u662f\u6211\u4eec\u7b80\u5355\u5217\u4e3e\u7684\u4e00\u4e9b\u6307\u6807\uff0c\u4e0b\u9762\u6211\u4eec\u4f7f\u7528granafa\u7ed9 MySQLD_Exporter \u6dfb\u52a0\u76d1\u63a7\u56fe\u8868\uff1a \u4e3b\u4ece\u4e3b\u7fa4\u76d1\u63a7(\u6a21\u677f7371)\uff1a \u76f8\u5173mysql \u72b6\u6001\u76d1\u63a77362\uff1a \u7f13\u51b2\u6c60\u72b6\u60017365\uff1a","title":"7 \u5b98\u65b9\u6a21\u677fID"},{"location":"chap2/36Prometheus_Mysql/#7-1","text":"\u9664\u4e86\u76f8\u5173\u6a21\u677f\u4e4b\u5916\uff0c\u6ca1\u6709\u544a\u8b66\u89c4\u5219\u90a3\u4e48\u6211\u4eec\u7684\u76d1\u63a7\u5c31\u662f\u4e0d\u5b8c\u7f8e\u7684\uff0c\u4e0b\u9762\u5217\u4e00\u4e0b\u6211\u4eec\u7684\u76d1\u63a7\u544a\u8b66\u89c4\u5219 groups: - name: MySQL-rules rules: - alert: MySQL Status expr: up == 0 for: 5s labels: severity: warning annotations: summary: \"{{$labels.instance}}: MySQL has stop !!!\" description: \"\u68c0\u6d4bMySQL\u6570\u636e\u5e93\u8fd0\u884c\u72b6\u6001\" - alert: MySQL Slave IO Thread Status expr: mysql_slave_status_slave_io_running == 0 for: 5s labels: severity: warning annotations: summary: \"{{$labels.instance}}: MySQL Slave IO Thread has stop !!!\" description: \"\u68c0\u6d4bMySQL\u4e3b\u4eceIO\u7ebf\u7a0b\u8fd0\u884c\u72b6\u6001\" - alert: MySQL Slave SQL Thread Status expr: mysql_slave_status_slave_sql_running == 0 for: 5s labels: severity: warning annotations: summary: \"{{$labels.instance}}: MySQL Slave SQL Thread has stop !!!\" description: \"\u68c0\u6d4bMySQL\u4e3b\u4eceSQL\u7ebf\u7a0b\u8fd0\u884c\u72b6\u6001\" - alert: MySQL Slave Delay Status expr: mysql_slave_status_sql_delay == 30 for: 5s labels: severity: warning annotations: summary: \"{{$labels.instance}}: MySQL Slave Delay has more than 30s !!!\" description: \"\u68c0\u6d4bMySQL\u4e3b\u4ece\u5ef6\u65f6\u72b6\u6001\" - alert: Mysql_Too_Many_Connections expr: rate(mysql_global_status_threads_connected[5m]) > 200 for: 2m labels: severity: warning annotations: summary: \"{{$labels.instance}}: \u8fde\u63a5\u6570\u8fc7\u591a\" description: \"{{$labels.instance}}: \u8fde\u63a5\u6570\u8fc7\u591a\uff0c\u8bf7\u5904\u7406 ,(current value is: {{ $value }})\" - alert: Mysql_Too_Many_slow_queries expr: rate(mysql_global_status_slow_queries[5m]) > 3 for: 2m labels: severity: warning annotations: summary: \"{{$labels.instance}}: \u6162\u67e5\u8be2\u6709\u70b9\u591a\uff0c\u8bf7\u68c0\u67e5\u5904\u7406\" description: \"{{$labels.instance}}: Mysql slow_queries is more than 3 per second ,(current value is: {{ $value }})\" 2.\u6dfb\u52a0\u89c4\u5219\u5230prometheus\uff1a rule_files: - \"rules/*.yml\" 3.\u6253\u5f00web ui\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u89c4\u5219\u751f\u6548\u4e86\uff1a","title":"7-1 \u7b80\u5355\u7684\u544a\u8b66\u89c4\u5219"},{"location":"chap2/4mysql_exporter/","text":"\u7b2c\u56db\u8282 \u5b98\u65b9 mysqld_exporter \u652f\u6301\u6293\u53d6\u591aMySQL\u5b9e\u4f8b \u76ee\u524d\u5b98\u65b9\u4ee3\u7801\u4ed3\u5e93\u5df2\u7ecf\u652f\u6301\u4e86 1 \u4e2a mysqld_exporter \u76d1\u63a7\u591a\u4e2a mysql \u5b9e\u4f8b(1:n)\uff0c\u8be6\u7ec6\u7684\u53ef\u4ee5\u53bb\u770b\u5b98\u65b9\u7684\u4ee3\u7801\u4ed3\u5e93\uff0c\u4f46\u662f\u76ee\u524d\u5c1a\u672a\u53d1\u73b0\u5b98\u65b9\u53d1\u5e03 release\uff0c\u53ef\u7b49\u5f85\u5b98\u65b9\u53d1\u5e03 \u90e8\u7f72 \u9047\u5230\u95ee\u9898\uff0c\u8bb0\u5f97\u591a\u770b\u65e5\u5fd7\u3001\u591a\u68c0\u67e5\u6587\u4ef6\u914d\u7f6e\u3001\u68c0\u67e5\u7f51\u7edc\u95ee\u9898 \u6388\u6743 #\u6ce8\u610f\u4fee\u6539\u6388\u6743\u7684\u7f51\u6bb5 CREATE USER 'mysqld_exporter'@'192.168.1.%' IDENTIFIED BY 'cccc' WITH MAX_USER_CONNECTIONS 3; GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'mysqld_exporter'@'192.168.1.%'; flush privileges; \u6b64\u5904\u53ef\u4ee5\u5728\u6240\u6709\u73af\u5883\u7684\u5b9e\u4f8b\u4e2d\u521b\u5efa\u300c\u76f8\u540c\u300d\u7684 mysqld_exporter \u76d1\u63a7\u8d26\u53f7\u548c\u5bc6\u7801\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\uff0c\u5f53\u8ba4\u8bc1\u7684\u5bc6\u7801\u4e0d\u4e00\u6837\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b98\u65b9\u63d0\u793a\u7684\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u5373\u53ef\u3002 \u51c6\u5907\u914d\u7f6e\u6587\u4ef6 config.my-cnf \u6b64\u6587\u4ef6\u9075\u5faa .ini \u683c\u5f0f\uff0c\u5982\u679c\u914d\u7f6e\u4e86\u4e0d\u540c\u7684\u76d1\u63a7\u8d26\u53f7\uff0c\u4f60\u53ef\u4ee5\u5728\u8be5\u914d\u7f6e\u6587\u4ef6\u4e2d\u589e\u52a0\u4e0d\u540c\u9879 [client] user=mysqld_exporter password=*************** [client-hb2] user=monitor password=*************** [client-hd] user=monitor_hd password=*************** \u6ce8\u610f\uff0c\u5982\u679c\u6709\u4e0d\u540c\u7684\u76d1\u63a7\u8d26\u53f7\uff0c\u8bb0\u5f97\u5728\u5411 consul \u4e2d\u6ce8\u518c mysql \u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u4fee\u6539 auth_module \u7684\u5143\u6570\u636e\u7684\u503c docker-compose.yaml version: '3' services: mysqld_exporter: image: xx/mysqld_exporter:v1 restart: always hostname: mysqld_exporter ports: - 10002:9104 volumes: - ${PWD}/config.my-cnf:/config.my-cnf - /usr/share/zoneinfo/PRC:/etc/localtime command: - \"--config.my-cnf=/config.my-cnf\" - \"--collect.binlog_size\" - \"--collect.info_schema.replica_host\" container_name: mysqld-exporter \u56e0\u4e3a\u5b98\u65b9\u6ca1\u6709\u53d1\u5e03 release,\u56e0\u6b64\u9700\u8981\u81ea\u5df1\u62c9\u53d6\u4ee3\u7801\u4ed3\u5e93\uff0c\u8fdb\u884c\u7f16\u8bd1\u5373\u53ef \u7f16\u8bd1 mysqld_exporter \u4e8c\u8fdb\u5236 git clone https://github.com/prometheus/mysqld_exporter.git && cd mysqld_exporter go mod download && GOOS=linux CGO_ENABLED=0 go build -ldflags=\"-s -w\" -installsuffix cgo -o mysqld_exporter . # \u6d4b\u8bd5 ./mysqld_exporter --config.my-cnf=./config.my-cnf --collect.binlog_size --collect.info_schema.replica_host --web.listen-address=192.168.20.161:10002 \u5c01\u88c5\u955c\u50cf Dockerfile \u53ef\u4ee5\u91c7\u7528\u5b98\u65b9\u7684 Dockerfile \u4fee\u6539\u4e00\u4e0b\u5373\u53ef ARG ARCH=\"amd64\" ARG OS=\"linux\" FROM quay.io/prometheus/busybox-${OS}-${ARCH}:latest LABEL maintainer=\"marionxue@qq.com\" COPY ./mysqld_exporter /bin/mysqld_exporter EXPOSE 9104 USER nobody ENTRYPOINT [ \"/bin/mysqld_exporter\" ] \u6784\u5efa docker build -t xx/mysqld_exporter:v1 -f ./Dockerfile . \u8fd0\u884c\u6d4b\u8bd5\u5373\u53ef docker-compose up -d \u5199\u5165 consul curl --location --request PUT 'http://$CONSUL_HOST:$CONSUL_PORT/v1/agent/service/register' \\ --header 'x-consul-token: $CONSUL_TOKEN' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"id\": \"$MYSQLHOST:$MYSQLPORT\", \"name\": \"mysql\", \"tags\": [ \"prod\", \"mysql_exporter\" ], \"meta\": { \"company\": \"company\", \"env\": \"prod\", \"instance\": \"$MYSQLHOST:$MYSQLPORT\", \"auth_module\": \"client\", \"role\": \"master\", \"name\": \"prod-1-1-master\" } }' \u518d\u6b21\u63d0\u9192\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u76d1\u63a7\u8d26\u53f7\uff0c\u8bb0\u5f97\u4fee\u6539auth_module\u4e3a config.my-cnf \u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7684\u914d\u7f6e\u9879\u540d\u79f0\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u8ba4\u8bc1\u5931\u8d25 \u914d\u7f6e prometheus - job_name: 'consul_mysql' metrics_path: /probe consul_sd_configs: - server: '$CONSUL_HOST:$CONSUL_PORT' token: '$CONSUL_TOKEN' services: ['mysql'] tags: ['prod'] relabel_configs: - source_labels: [\"__meta_consul_service_metadata_instance\"] target_label: __param_target - source_labels: [\"__meta_consul_service_metadata_company\"] target_label: company - source_labels: [\"__meta_consul_service_metadata_env\"] target_label: env - source_labels: [\"__meta_consul_service_metadata_auth_module\"] target_label: auth_module - source_labels: [\"__meta_consul_service_metadata_auth_module\"] target_label: __param_auth_module - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: $MYSQLD_EXPORTER_HOST:$MYSQLD_EXPORTER_PORT \u91cd\u8f7d Prometheus \u914d\u7f6e\u6587\u4ef6 curl -XPUT http://localhost:9090/-/reload \u6700\u540e\u6548\u679c:\u300c\u5347\u7ea7\u5b8c\u6210\uff0c\u603b\u5171\u5e9f\u5f03\u4e86 19 \u4e2a mysqld_exporter \u5bb9\u5668!\u300d","title":"\u7b2c\u56db\u8282 \u5b98\u65b9 mysqld_exporter\u652f\u6301\u6293\u53d6\u591aMySQL\u5b9e\u4f8b"},{"location":"chap2/4mysql_exporter/#mysqld_exportermysql","text":"\u76ee\u524d\u5b98\u65b9\u4ee3\u7801\u4ed3\u5e93\u5df2\u7ecf\u652f\u6301\u4e86 1 \u4e2a mysqld_exporter \u76d1\u63a7\u591a\u4e2a mysql \u5b9e\u4f8b(1:n)\uff0c\u8be6\u7ec6\u7684\u53ef\u4ee5\u53bb\u770b\u5b98\u65b9\u7684\u4ee3\u7801\u4ed3\u5e93\uff0c\u4f46\u662f\u76ee\u524d\u5c1a\u672a\u53d1\u73b0\u5b98\u65b9\u53d1\u5e03 release\uff0c\u53ef\u7b49\u5f85\u5b98\u65b9\u53d1\u5e03","title":"\u7b2c\u56db\u8282 \u5b98\u65b9 mysqld_exporter\u652f\u6301\u6293\u53d6\u591aMySQL\u5b9e\u4f8b"},{"location":"chap2/4mysql_exporter/#_1","text":"\u9047\u5230\u95ee\u9898\uff0c\u8bb0\u5f97\u591a\u770b\u65e5\u5fd7\u3001\u591a\u68c0\u67e5\u6587\u4ef6\u914d\u7f6e\u3001\u68c0\u67e5\u7f51\u7edc\u95ee\u9898","title":"\u90e8\u7f72"},{"location":"chap2/4mysql_exporter/#_2","text":"#\u6ce8\u610f\u4fee\u6539\u6388\u6743\u7684\u7f51\u6bb5 CREATE USER 'mysqld_exporter'@'192.168.1.%' IDENTIFIED BY 'cccc' WITH MAX_USER_CONNECTIONS 3; GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'mysqld_exporter'@'192.168.1.%'; flush privileges; \u6b64\u5904\u53ef\u4ee5\u5728\u6240\u6709\u73af\u5883\u7684\u5b9e\u4f8b\u4e2d\u521b\u5efa\u300c\u76f8\u540c\u300d\u7684 mysqld_exporter \u76d1\u63a7\u8d26\u53f7\u548c\u5bc6\u7801\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\uff0c\u5f53\u8ba4\u8bc1\u7684\u5bc6\u7801\u4e0d\u4e00\u6837\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b98\u65b9\u63d0\u793a\u7684\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u5373\u53ef\u3002","title":"\u6388\u6743"},{"location":"chap2/4mysql_exporter/#_3","text":"config.my-cnf \u6b64\u6587\u4ef6\u9075\u5faa .ini \u683c\u5f0f\uff0c\u5982\u679c\u914d\u7f6e\u4e86\u4e0d\u540c\u7684\u76d1\u63a7\u8d26\u53f7\uff0c\u4f60\u53ef\u4ee5\u5728\u8be5\u914d\u7f6e\u6587\u4ef6\u4e2d\u589e\u52a0\u4e0d\u540c\u9879 [client] user=mysqld_exporter password=*************** [client-hb2] user=monitor password=*************** [client-hd] user=monitor_hd password=*************** \u6ce8\u610f\uff0c\u5982\u679c\u6709\u4e0d\u540c\u7684\u76d1\u63a7\u8d26\u53f7\uff0c\u8bb0\u5f97\u5728\u5411 consul \u4e2d\u6ce8\u518c mysql \u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u4fee\u6539 auth_module \u7684\u5143\u6570\u636e\u7684\u503c docker-compose.yaml version: '3' services: mysqld_exporter: image: xx/mysqld_exporter:v1 restart: always hostname: mysqld_exporter ports: - 10002:9104 volumes: - ${PWD}/config.my-cnf:/config.my-cnf - /usr/share/zoneinfo/PRC:/etc/localtime command: - \"--config.my-cnf=/config.my-cnf\" - \"--collect.binlog_size\" - \"--collect.info_schema.replica_host\" container_name: mysqld-exporter \u56e0\u4e3a\u5b98\u65b9\u6ca1\u6709\u53d1\u5e03 release,\u56e0\u6b64\u9700\u8981\u81ea\u5df1\u62c9\u53d6\u4ee3\u7801\u4ed3\u5e93\uff0c\u8fdb\u884c\u7f16\u8bd1\u5373\u53ef \u7f16\u8bd1 mysqld_exporter \u4e8c\u8fdb\u5236 git clone https://github.com/prometheus/mysqld_exporter.git && cd mysqld_exporter go mod download && GOOS=linux CGO_ENABLED=0 go build -ldflags=\"-s -w\" -installsuffix cgo -o mysqld_exporter . # \u6d4b\u8bd5 ./mysqld_exporter --config.my-cnf=./config.my-cnf --collect.binlog_size --collect.info_schema.replica_host --web.listen-address=192.168.20.161:10002 \u5c01\u88c5\u955c\u50cf Dockerfile \u53ef\u4ee5\u91c7\u7528\u5b98\u65b9\u7684 Dockerfile \u4fee\u6539\u4e00\u4e0b\u5373\u53ef ARG ARCH=\"amd64\" ARG OS=\"linux\" FROM quay.io/prometheus/busybox-${OS}-${ARCH}:latest LABEL maintainer=\"marionxue@qq.com\" COPY ./mysqld_exporter /bin/mysqld_exporter EXPOSE 9104 USER nobody ENTRYPOINT [ \"/bin/mysqld_exporter\" ] \u6784\u5efa docker build -t xx/mysqld_exporter:v1 -f ./Dockerfile . \u8fd0\u884c\u6d4b\u8bd5\u5373\u53ef docker-compose up -d","title":"\u51c6\u5907\u914d\u7f6e\u6587\u4ef6"},{"location":"chap2/4mysql_exporter/#consul","text":"curl --location --request PUT 'http://$CONSUL_HOST:$CONSUL_PORT/v1/agent/service/register' \\ --header 'x-consul-token: $CONSUL_TOKEN' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"id\": \"$MYSQLHOST:$MYSQLPORT\", \"name\": \"mysql\", \"tags\": [ \"prod\", \"mysql_exporter\" ], \"meta\": { \"company\": \"company\", \"env\": \"prod\", \"instance\": \"$MYSQLHOST:$MYSQLPORT\", \"auth_module\": \"client\", \"role\": \"master\", \"name\": \"prod-1-1-master\" } }' \u518d\u6b21\u63d0\u9192\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u76d1\u63a7\u8d26\u53f7\uff0c\u8bb0\u5f97\u4fee\u6539auth_module\u4e3a config.my-cnf \u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7684\u914d\u7f6e\u9879\u540d\u79f0\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u8ba4\u8bc1\u5931\u8d25","title":"\u5199\u5165 consul"},{"location":"chap2/4mysql_exporter/#prometheus","text":"- job_name: 'consul_mysql' metrics_path: /probe consul_sd_configs: - server: '$CONSUL_HOST:$CONSUL_PORT' token: '$CONSUL_TOKEN' services: ['mysql'] tags: ['prod'] relabel_configs: - source_labels: [\"__meta_consul_service_metadata_instance\"] target_label: __param_target - source_labels: [\"__meta_consul_service_metadata_company\"] target_label: company - source_labels: [\"__meta_consul_service_metadata_env\"] target_label: env - source_labels: [\"__meta_consul_service_metadata_auth_module\"] target_label: auth_module - source_labels: [\"__meta_consul_service_metadata_auth_module\"] target_label: __param_auth_module - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: $MYSQLD_EXPORTER_HOST:$MYSQLD_EXPORTER_PORT \u91cd\u8f7d Prometheus \u914d\u7f6e\u6587\u4ef6 curl -XPUT http://localhost:9090/-/reload \u6700\u540e\u6548\u679c:\u300c\u5347\u7ea7\u5b8c\u6210\uff0c\u603b\u5171\u5e9f\u5f03\u4e86 19 \u4e2a mysqld_exporter \u5bb9\u5668!\u300d","title":"\u914d\u7f6e prometheus"},{"location":"chap2/59node_exporter/","text":"\u7b2c\u4e8c\u8282 \u4f7f\u7528Node Exporter\u76d1\u63a7Linux\u4e3b\u673a&\u5e38\u7528\u76d1\u63a7\u6307\u6807 Node Exporter \u662f\u7528\u4e8e\u66b4\u9732 *NIX \u4e3b\u673a\u6307\u6807\u7684 Exporter\uff0c\u6bd4\u5982\u91c7\u96c6 CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u7b49\u4fe1\u606f\u3002\u91c7\u7528 Go \u7f16\u5199\uff0c\u4e0d\u5b58\u5728\u4efb\u4f55\u7b2c\u4e09\u65b9\u4f9d\u8d56\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4e0b\u8f7d\u89e3\u538b\u5373\u53ef\u8fd0\u884c\u3002 1 \u5b89\u88c5\u914d\u7f6e \u7531\u4e8e Node Exporter \u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece Prometheus \u4e0b\u8f7d\u9875\u9762( https://prometheus.io/download/#node_exporter ) \u4e0b\u8f7d\u89e3\u538b\u8fd0\u884c\uff1a \u2638 \u279c wget https://github.com/prometheus/node_exporter/releases/download/v1.2.2/node_exporter-1.2.2.linux-amd64.tar.gz # \u56fd\u5185\u52a0\u901f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4e0b\u8f7d # wget https://download.fastgit.org/prometheus/node_exporter/releases/download/v1.2.2/node_exporter-1.2.2.linux-amd64.tar.gz \u2638 \u279c tar -xvf node_exporter-1.2.2.linux-amd64.tar.gz node_exporter-1.2.2.linux-amd64/ node_exporter-1.2.2.linux-amd64/LICENSE node_exporter-1.2.2.linux-amd64/NOTICE node_exporter-1.2.2.linux-amd64/node_exporter \u2638 \u279c cd node_exporter-1.2.2.linux-amd64 && ls -la total 18084 drwxr-xr-x 2 3434 3434 56 Aug 6 21:50 . dr-xr-x---. 5 root root 4096 Oct 14 11:50 .. -rw-r--r-- 1 3434 3434 11357 Aug 6 21:49 LICENSE -rwxr-xr-x 1 3434 3434 18494215 Aug 6 21:45 node_exporter -rw-r--r-- 1 3434 3434 463 Aug 6 21:49 NOTICE \u76f4\u63a5\u6267\u884c node_exporter \u6587\u4ef6\u5373\u53ef\u8fd0\u884c\uff1a \u2638 \u279c ./node_exporter level=info ts=2021-10-14T03:52:31.947Z caller=node_exporter.go:182 msg=\"Starting node_exporter\" version=\"(version=1.2.2, branch=HEAD, revision=26645363b486e12be40af7ce4fc91e731a33104e)\" level=info ts=2021-10-14T03:52:31.947Z caller=node_exporter.go:183 msg=\"Build context\" build_context=\"(go=go1.16.7, user=root@b9cb4aa2eb17, date=20210806-13:44:18)\" ...... level=info ts=2021-10-14T03:52:31.948Z caller=node_exporter.go:199 msg=\"Listening on\" address=:9100 level=info ts=2021-10-14T03:52:31.948Z caller=tls_config.go:191 msg=\"TLS is disabled.\" http2=false \u4ece\u65e5\u5fd7\u4e0a\u53ef\u4ee5\u770b\u51fa node_exporter \u76d1\u542c\u5728 9100 \u7aef\u53e3\u4e0a\uff0c\u9ed8\u8ba4\u7684 metrics \u63a5\u53e3\u901a\u8fc7 /metrics \u7aef\u70b9\u66b4\u9732\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee http://localhost:9100/metrics \u6765\u83b7\u53d6\u76d1\u63a7\u6307\u6807\u6570\u636e\uff1a \u2638 \u279c curl http://localhost:9100/metrics ...... # HELP node_load1 1m load average. # TYPE node_load1 gauge node_load1 0.01 # HELP node_load15 15m load average. # TYPE node_load15 gauge node_load15 0.05 # HELP node_load5 5m load average. # TYPE node_load5 gauge node_load5 0.04 # HELP node_memory_Active_anon_bytes Memory information field Active_anon_bytes. # TYPE node_memory_Active_anon_bytes gauge node_memory_Active_anon_bytes 8.4393984e+07 # HELP node_memory_Active_bytes Memory information field Active_bytes. # TYPE node_memory_Active_bytes gauge node_memory_Active_bytes 1.8167808e+08 # HELP node_memory_Active_file_bytes Memory information field Active_file_bytes. # TYPE node_memory_Active_file_bytes gauge node_memory_Active_file_bytes 9.7284096e+07 # HELP node_memory_AnonHugePages_bytes Memory information field AnonHugePages_bytes. # TYPE node_memory_AnonHugePages_bytes gauge node_memory_AnonHugePages_bytes 3.5651584e+07 # HELP node_memory_AnonPages_bytes Memory information field AnonPages_bytes. # TYPE node_memory_AnonPages_bytes gauge node_memory_AnonPages_bytes 8.159232e+07 # HELP node_memory_Bounce_bytes Memory information field Bounce_bytes. # TYPE node_memory_Bounce_bytes gauge node_memory_Bounce_bytes 0 ...... \u8be5 metrics \u63a5\u53e3\u6570\u636e\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u7684 Prometheus \u76d1\u63a7\u6307\u6807\u683c\u5f0f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8be5\u7aef\u70b9\u914d\u7f6e\u5230 Prometheus \u4e2d\u5373\u53ef\u6293\u53d6\u8be5\u6307\u6807\u6570\u636e\u3002\u4e3a\u4e86\u4e86\u89e3 node_exporter \u53ef\u914d\u7f6e\u7684\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ./node_exporter -h \u6765\u67e5\u770b\u5e2e\u52a9\u4fe1\u606f\uff1a \u2638 \u279c ./node_exporter -h --web.listen-address=\":9100\" # \u76d1\u542c\u7684\u7aef\u53e3\uff0c\u9ed8\u8ba4\u662f9100 --web.telemetry-path=\"/metrics\" # metrics\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a/metrics --web.disable-exporter-metrics # \u662f\u5426\u7981\u7528go\u3001prome\u9ed8\u8ba4\u7684metrics --web.max-requests=40 # \u6700\u5927\u5e76\u884c\u8bf7\u6c42\u6570\uff0c\u9ed8\u8ba440\uff0c\u8bbe\u7f6e\u4e3a0\u65f6\u4e0d\u9650\u5236 --log.level=\"info\" # \u65e5\u5fd7\u7b49\u7ea7: [debug, info, warn, error, fatal] --log.format=logfmt # \u7f6e\u65e5\u5fd7\u6253\u5370target\u548c\u683c\u5f0f: [logfmt, json] --version # \u7248\u672c\u53f7 --collector.{metric-name} # \u5404\u4e2ametric\u5bf9\u5e94\u7684\u53c2\u6570 ...... \u5176\u4e2d\u6700\u91cd\u8981\u7684\u53c2\u6570\u5c31\u662f --collector.<name> \uff0c \u901a\u8fc7\u8be5\u53c2\u6570\u53ef\u4ee5\u542f\u7528\u6211\u4eec\u6536\u96c6\u7684\u529f\u80fd\u6a21\u5757\uff0c node_exporter \u4f1a\u9ed8\u8ba4\u91c7\u96c6\u4e00\u4e9b\u6a21\u5757\uff0c\u8981\u7981\u7528\u8fd9\u4e9b\u9ed8\u8ba4\u542f\u7528\u7684\u6536\u96c6\u5668\u53ef\u4ee5\u901a\u8fc7 --no-collector.<name> \u6807\u5fd7\u6765\u7981\u7528\uff0c\u5982\u679c\u53ea\u542f\u7528\u67d0\u4e9b\u7279\u5b9a\u7684\u6536\u96c6\u5668\uff0c\u57fa\u4e8e\u5148\u4f7f\u7528 --collector.disable-defaults \u6807\u5fd7\u7981\u7528\u6240\u6709\u9ed8\u8ba4\u7684\uff0c\u7136\u540e\u5728\u901a\u8fc7\u6307\u5b9a\u5177\u4f53\u7684\u6536\u96c6\u5668 --collector.<name> \u6765\u8fdb\u884c\u542f \u7528\u3002 \u4e0b\u56fe\u5217\u51fa\u4e86\u9ed8\u8ba4\u542f\u7528\u7684\u6536\u96c6\u5668\uff1a \u4e00\u822c\u6765\u8bf4\u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 docker \u5bb9\u5668\u6765\u8fd0\u884c node_exporter \uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u7531\u4e8e\u91c7\u96c6\u7684\u662f\u5bbf\u4e3b\u673a\u7684\u6307\u6807\u4fe1\u606f\uff0c\u6240\u4ee5\u9700\u8981\u8bbf\u95ee\u4e3b\u673a\u7cfb\u7edf\uff0c\u5982\u679c\u4f7f\u7528 docker \u5bb9\u5668\u6765\u90e8\u7f72\u7684\u8bdd\u9700\u8981\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u53c2\u6570\u6765\u5141\u8bb8 node_exporter \u8bbf\u95ee\u5bbf\u4e3b\u673a\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5982\u679c\u76f4\u63a5\u5728\u5bbf\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 systemd \u6765\u7ba1\u7406\uff0c\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 service unit \u6587\u4ef6\uff1a \u2638 \u279c cat /etc/systemd/system/node_exporter.service [Unit] Description=node exporter service Documentation=https://prometheus.io After=network.target [Service] Type=simple User=root Group=root ExecStart=/usr/local/bin/node_exporter # \u6709\u7279\u6b8a\u9700\u6c42\u7684\u53ef\u4ee5\u5728\u540e\u9762\u6307\u5b9a\u53c2\u6570\u914d\u7f6e Restart=on-failure [Install] WantedBy=multi-user.target \u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 systemd \u6765\u7ba1\u7406 node_exporter \u4e86\uff1a \u2638 \u279c cp node_exporter /usr/local/bin/node_exporter \u2638 \u279c systemctl daemon-reload \u2638 \u279c systemctl start node_exporter \u2638 \u279c systemctl status node_exporter \u25cf node_exporter.service - node exporter servoce Loaded: loaded (/etc/systemd/system/node_exporter.service; disabled; vendor preset: disabled) Active: active (running) since Thu 2021-10-14 15:29:46 CST; 5s ago Docs: https://prometheus.io Main PID: 18679 (node_exporter) Tasks: 5 Memory: 6.5M CGroup: /system.slice/node_exporter.service \u2514\u250018679 /usr/local/bin/node_exporter Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:..._zone Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...=time Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...timex Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...ueues Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...uname Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...mstat Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...r=xfs Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...r=zfs Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...:9100 Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=tls_config.go:191...false Hint: Some lines were ellipsized, use -l to show in full. \u8fd9\u91cc\u6211\u4eec\u7528 systemd \u7684\u65b9\u5f0f\u5728\u4e24\u4e2a\u8282\u70b9\u4e0a\uff08node1\u3001node2\uff09\u5206\u522b\u542f\u52a8 node_exporter \uff0c\u542f\u52a8\u5b8c\u6210\u540e\u6211\u4eec\u4f7f\u7528\u9759\u6001\u914d\u7f6e\u7684\u65b9\u5f0f\u5728\u4e4b\u524d\u7684 Prometheus \u914d\u7f6e\u4e2d\u65b0\u589e\u4e00\u4e2a node_exporter \u7684\u6293\u53d6\u4efb\u52a1\uff0c\u6765\u91c7\u96c6\u8fd9\u4e24\u4e2a\u8282\u70b9\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a global: scrape_interval: 5s scrape_configs: - job_name: \"prometheus\" static_configs: - targets: [\"localhost:9090\"] - job_name: \"demo\" scrape_interval: 15s # \u4f1a\u8986\u76d6global\u5168\u5c40\u7684\u914d\u7f6e scrape_timeout: 10s static_configs: - targets: [\"localhost:10000\", \"localhost:10001\", \"localhost:10002\"] - job_name: \"node_exporter\" # \u65b0\u589e node_exporter \u4efb\u52a1 static_configs: - targets: [\"node1:9100\", \"node2:9100\"] # node1\u3001node2 \u5728 hosts \u4e2d\u505a\u4e86\u6620\u5c04 \u4e0a\u9762\u914d\u7f6e\u6587\u4ef6\u6700\u540e\u6211\u4eec\u65b0\u589e\u4e86\u4e00\u4e2a\u540d\u4e3a node_exporter \u7684\u6293\u53d6\u4efb\u52a1\uff0c\u91c7\u96c6\u7684\u76ee\u6807\u4f7f\u7528\u9759\u6001\u914d\u7f6e\u7684\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u65b0\u52a0\u8f7d Prometheus\uff0c\u6b63\u5e38\u5728 Prometheus \u7684 WebUI \u7684\u76ee\u6807\u9875\u9762\u5c31\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u914d\u7f6e\u7684 node_exporter \u4efb\u52a1\u4e86\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e9b\u5173\u4e8e\u8282\u70b9\u76d1\u63a7\u7684\u5e38\u7528\u6307\u6807\uff0c\u6bd4\u5982 CPU\u3001\u5185\u5b58\u3001IO \u76d1\u63a7\u7b49\u3002 2 CPU \u76d1\u63a7 \u5bf9\u4e8e\u8282\u70b9\u6211\u4eec\u9996\u5148\u80fd\u60f3\u5230\u7684\u5c31\u662f\u8981\u5148\u5bf9 CPU \u8fdb\u884c\u76d1\u63a7\uff0c\u56e0\u4e3a CPU \u662f\u5904\u7406\u4efb\u52a1\u7684\u6838\u5fc3\uff0c\u6839\u636e CPU \u7684\u72b6\u6001\u53ef\u4ee5\u5206\u6790\u51fa\u5f53\u524d\u7cfb\u7edf\u7684\u5065\u5eb7\u72b6\u6001\u3002\u8981\u5bf9\u8282\u70b9\u8fdb\u884c CPU \u76d1\u63a7\uff0c\u9700\u8981\u7528\u5230 node_cpu_seconds_total \u8fd9\u4e2a\u76d1\u63a7\u6307\u6807\uff0c\u5728 metrics \u63a5\u53e3\u4e2d\u8be5\u6307\u6807\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a # HELP node_cpu_seconds_total Seconds the CPUs spent in each mode. # TYPE node_cpu_seconds_total counter node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"} 13172.76 node_cpu_seconds_total{cpu=\"0\",mode=\"iowait\"} 0.25 node_cpu_seconds_total{cpu=\"0\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"nice\"} 0.01 node_cpu_seconds_total{cpu=\"0\",mode=\"softirq\"} 87.99 node_cpu_seconds_total{cpu=\"0\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"system\"} 309.38 node_cpu_seconds_total{cpu=\"0\",mode=\"user\"} 79.93 node_cpu_seconds_total{cpu=\"1\",mode=\"idle\"} 13168.98 node_cpu_seconds_total{cpu=\"1\",mode=\"iowait\"} 0.27 node_cpu_seconds_total{cpu=\"1\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"nice\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"softirq\"} 74.1 node_cpu_seconds_total{cpu=\"1\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"system\"} 314.71 node_cpu_seconds_total{cpu=\"1\",mode=\"user\"} 78.83 node_cpu_seconds_total{cpu=\"2\",mode=\"idle\"} 13182.78 node_cpu_seconds_total{cpu=\"2\",mode=\"iowait\"} 0.69 node_cpu_seconds_total{cpu=\"2\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"2\",mode=\"nice\"} 0 node_cpu_seconds_total{cpu=\"2\",mode=\"softirq\"} 66.01 node_cpu_seconds_total{cpu=\"2\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"2\",mode=\"system\"} 309.09 node_cpu_seconds_total{cpu=\"2\",mode=\"user\"} 79.44 node_cpu_seconds_total{cpu=\"3\",mode=\"idle\"} 13185.13 node_cpu_seconds_total{cpu=\"3\",mode=\"iowait\"} 0.18 node_cpu_seconds_total{cpu=\"3\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"3\",mode=\"nice\"} 0 node_cpu_seconds_total{cpu=\"3\",mode=\"softirq\"} 64.49 node_cpu_seconds_total{cpu=\"3\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"3\",mode=\"system\"} 305.86 node_cpu_seconds_total{cpu=\"3\",mode=\"user\"} 78.17 \u4ece\u63a5\u53e3\u4e2d\u63cf\u8ff0\u53ef\u4ee5\u770b\u51fa\u8be5\u6307\u6807\u662f\u7528\u6765\u7edf\u8ba1 CPU \u6bcf\u79cd\u6a21\u5f0f\u4e0b\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u662f\u4e00\u4e2a Counter \u7c7b\u578b\u7684\u6307\u6807\uff0c\u4e5f\u5c31\u662f\u4f1a\u4e00\u76f4\u589e\u957f\uff0c\u8fd9\u4e2a\u6570\u503c\u5176\u5b9e\u662f CPU \u65f6\u95f4\u7247\u7684\u4e00\u4e2a\u7d2f\u79ef\u503c\uff0c\u610f\u601d\u5c31\u662f\u4ece\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u8d77\u6765 CPU \u5f00\u59cb\u5de5\u4f5c\uff0c\u5c31\u5f00\u59cb\u8bb0\u5f55\u81ea\u5df1\u603b\u5171\u4f7f\u7528\u7684\u65f6\u95f4\uff0c\u7136\u540e\u4fdd\u5b58\u4e0b\u6765\uff0c\u800c\u4e14\u8fd9\u91cc\u7684\u7d2f\u79ef\u7684 CPU \u4f7f\u7528\u65f6\u95f4\u8fd8\u4f1a\u5206\u6210\u51e0\u4e2a\u4e0d\u540c\u7684\u6a21\u5f0f\uff0c\u6bd4\u5982\u7528\u6237\u6001\u4f7f\u7528\u65f6\u95f4\u3001\u7a7a\u95f2\u65f6\u95f4\u3001\u4e2d\u65ad\u65f6\u95f4\u3001\u5185\u6838\u6001\u4f7f\u7528\u65f6\u95f4\u7b49\u7b49\uff0c\u4e5f\u5c31\u662f\u5e73\u65f6\u6211\u4eec\u4f7f\u7528 top \u547d\u4ee4\u67e5\u770b\u7684 CPU \u7684\u76f8\u5173\u4fe1\u606f\uff0c\u800c\u6211\u4eec\u8fd9\u91cc\u7684\u8fd9\u4e2a\u6307\u6807\u4f1a\u5206\u522b\u5bf9\u8fd9\u4e9b\u6a21\u5f0f\u8fdb\u884c\u8bb0\u5f55\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5bf9\u8282\u70b9\u7684 CPU \u8fdb\u884c\u76d1\u63a7\uff0c \u6211\u4eec\u4e5f\u77e5\u9053\u4e00\u4e2a\u4e00\u76f4\u589e\u957f\u7684 CPU \u65f6\u95f4\u5bf9\u6211\u4eec\u610f\u4e49\u4e0d\u5927\uff0c\u4e00\u822c\u6211\u4eec\u66f4\u5e0c\u671b\u76d1\u63a7\u7684\u662f\u8282\u70b9\u7684 CPU \u4f7f\u7528\u7387\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4f7f\u7528 top \u547d\u4ee4\u770b\u5230\u7684\u767e\u5206\u6bd4 \u3002 \u8981\u8ba1\u7b97 CPU \u7684\u4f7f\u7528\u7387\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u641e\u6e05\u695a\u8fd9\u4e2a\u4f7f\u7528\u7387\u7684\u542b\u4e49\uff0c CPU \u4f7f\u7528\u7387\u662f CPU \u9664\u7a7a\u95f2\uff08idle\uff09\u72b6\u6001\u4e4b\u5916\u7684\u5176\u4ed6\u6240\u6709 CPU \u72b6\u6001\u7684\u65f6\u95f4\u603b\u548c\u9664\u4ee5\u603b\u7684 CPU \u65f6\u95f4\u5f97\u5230\u7684\u7ed3\u679c \uff0c\u7406\u89e3\u4e86\u8fd9\u4e2a\u6982\u5ff5\u540e\u5c31\u53ef\u4ee5\u5199\u51fa\u6b63\u786e\u7684 promql \u67e5\u8be2\u8bed\u53e5\u4e86\u3002 \u8981\u8ba1\u7b97\u9664\u7a7a\u95f2\u72b6\u6001\u4e4b\u5916\u7684 CPU \u65f6\u95f4\u603b\u548c\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u4e0d\u662f\u76f4\u63a5\u8ba1\u7b97\u7a7a\u95f2\u72b6\u6001\u7684 CPU \u65f6\u95f4\u4f7f\u7528\u7387\uff0c\u7136\u540e\u7528 1 \u51cf\u6389\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u4e86\uff0c\u6240\u4ee5\u9996\u5148\u6211\u4eec\u5148\u8fc7\u6ee4 idle \u6a21\u5f0f\u7684\u6307\u6807\uff0c\u5728 Prometheus \u7684 WebUI \u4e2d\u8f93\u5165 node_cpu_seconds_total{mode=\"idle\"} \u8fdb\u884c\u8fc7\u6ee4\uff1a \u8981\u8ba1\u7b97\u4f7f\u7528\u7387\uff0c\u80af\u5b9a\u5c31\u9700\u8981\u77e5\u9053 idle \u6a21\u5f0f\u7684 CPU \u7528\u4e86\u591a\u957f\u65f6\u95f4\uff0c\u7136\u540e\u548c\u603b\u7684\u8fdb\u884c\u5bf9\u6bd4\uff0c\u7531\u4e8e\u8fd9\u662f Counter \u6307\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 increase \u51fd\u6570\u6765\u83b7\u53d6\u53d8\u5316\uff0c\u4f7f\u7528\u67e5\u8be2\u8bed\u53e5 increase(node_cpu_seconds_total{mode=\"idle\"}[1m]) \uff0c\u56e0\u4e3a increase \u51fd\u6570\u8981\u6c42\u8f93\u5165\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u53d6 1 \u5206\u949f\u5185\u7684\u6570\u636e\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u67e5\u8be2\u7ed3\u679c\u4e2d\u6709\u5f88\u591a\u4e0d\u540c cpu \u5e8f\u53f7\u7684\u6570\u636e\uff0c\u6211\u4eec\u5f53\u7136\u9700\u8981\u8ba1\u7b97\u6240\u6709 CPU \u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u4eec\u805a\u5408\u8d77\u6765\uff0c\u6211\u4eec\u8981\u67e5\u8be2\u7684\u662f\u4e0d\u540c\u8282\u70b9\u7684 CPU \u4f7f\u7528\u7387\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u6839\u636e instance \u6807\u7b7e\u8fdb\u884c\u805a\u5408\uff0c \u4f7f\u7528\u67e5\u8be2\u8bed\u53e5 sum(increase(node_cpu_seconds_total{mode=\"idle\"}[1m])) by (instance) \uff1a \u8fd9\u6837\u6211\u4eec\u5c31\u5206\u522b\u62ff\u5230\u4e0d\u540c\u8282\u70b9 1 \u5206\u949f\u5185\u7684\u7a7a\u95f2 CPU \u4f7f\u7528\u65f6\u95f4\u4e86\uff0c\u7136\u540e\u548c\u603b\u7684 CPU \uff08\u8fd9\u4e2a\u65f6\u5019\u4e0d\u9700\u8981\u8fc7\u6ee4\u72b6\u6001\u6a21\u5f0f\uff09\u65f6\u95f4\u8fdb\u884c\u6bd4\u8f83\u5373\u53ef\uff0c\u4f7f\u7528\u67e5\u8be2\u8bed\u53e5 sum(increase(node_cpu_seconds_total{mode=\"idle\"}[1m])) by (instance) / sum(increase(node_cpu_seconds_total[1m])) by (instance)\uff1a \u7136\u540e\u8ba1\u7b97 CPU \u4f7f\u7528\u7387\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u4f7f\u7528 1 \u51cf\u53bb\u4e58\u4ee5 100 \u5373\u53ef\uff1a (1 - sum(increase(node_cpu_seconds_total{mode=\"idle\"}[1m])) by (instance) / sum(increase(node_cpu_seconds_total[1m])) by (instance) ) * 100 \u8fd9\u5c31\u662f\u80fd\u591f\u60f3\u5230\u7684\u6700\u76f4\u63a5\u7684 CPU \u4f7f\u7528\u7387\u67e5\u8be2\u65b9\u5f0f\u4e86\uff0c\u5f53\u7136\u524d\u9762\u6211\u4eec\u5b66\u4e60\u7684 promql \u8bed\u6cd5\u4e2d\u63d0\u5230\u8fc7\u66f4\u591a\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u53bb\u4f7f\u7528 rate \u51fd\u6570\uff0c\u800c\u4e0d\u662f\u7528 increase \u51fd\u6570\u8fdb\u884c\u8ba1\u7b97\uff0c\u6240\u4ee5\u6700\u7ec8\u7684 CPU \u4f7f\u7528\u7387\u7684\u67e5\u8be2\u8bed\u53e5\u4e3a\uff1a (1 - sum(increase(node_cpu_seconds_total{mode=\"idle\"}[1m])) by (instance) / sum(increase(node_cpu_seconds_total[1m])) by (instance) ) * 100 \u53ef\u4ee5\u548c top \u547d\u4ee4\u7684\u7ed3\u679c\u8fdb\u884c\u5bf9\u6bd4\uff08\u4e0b\u56fe\u4e3a node2 \u8282\u70b9\uff09\uff0c\u57fa\u672c\u4e0a\u662f\u4fdd\u6301\u4e00\u81f4\u7684\uff0c\u8fd9\u5c31\u662f\u76d1\u63a7\u8282\u70b9 CPU \u4f7f\u7528\u7387\u7684\u65b9\u5f0f\u3002 3 \u5185\u5b58\u76d1\u63a7 \u9664\u4e86 CPU \u76d1\u63a7\u4e4b\u5916\uff0c\u6211\u4eec\u53ef\u80fd\u6700\u5173\u5fc3\u7684\u5c31\u662f\u8282\u70b9\u5185\u5b58\u7684\u76d1\u63a7\u4e86\uff0c\u5e73\u65f6\u6211\u4eec\u67e5\u770b\u8282\u70b9\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u57fa\u672c\u4e0a\u90fd\u662f\u4f7f\u7528 free \u547d\u4ee4\u6765\u67e5\u770b\uff1a 3-1 free\u547d\u4ee4 free \u547d\u4ee4\u7684\u8f93\u51fa\u4f1a\u663e\u793a\u7cfb\u7edf\u5185\u5b58\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u5305\u62ec\u7269\u7406\u5185\u5b58\u3001\u4ea4\u6362\u5185\u5b58(swap)\u548c\u5185\u6838\u7f13\u51b2\u533a\u5185\u5b58\u7b49\uff0c\u6240\u4ee5\u8981\u5bf9\u5185\u5b58\u8fdb\u884c\u76d1\u63a7\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u8fd9\u4e9b\u6982\u5ff5\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u4e0b free \u547d\u4ee4\u7684\u8f93\u51fa\u5185\u5bb9\uff1a Mem \u884c(\u7b2c\u4e8c\u884c)\u662f\u5185\u5b58\u7684\u4f7f\u7528\u60c5\u51b5 Swap \u884c(\u7b2c\u4e09\u884c)\u662f\u4ea4\u6362\u7a7a\u95f4\u7684\u4f7f\u7528\u60c5\u51b5 total \u5217\u663e\u793a\u7cfb\u7edf\u603b\u7684\u53ef\u7528\u7269\u7406\u5185\u5b58\u548c\u4ea4\u6362\u7a7a\u95f4\u5927\u5c0f used \u5217\u663e\u793a\u5df2\u7ecf\u88ab\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u548c\u4ea4\u6362\u7a7a\u95f4 free \u5217\u663e\u793a\u8fd8\u6709\u591a\u5c11\u7269\u7406\u5185\u5b58\u548c\u4ea4\u6362\u7a7a\u95f4\u53ef\u7528\u4f7f\u7528 shared \u5217\u663e\u793a\u88ab\u5171\u4eab\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f buff/cache \u5217\u663e\u793a\u88ab buffer \u548c cache \u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f available \u5217\u663e\u793a\u8fd8\u53ef\u4ee5\u88ab\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f \u5176\u4e2d\u6211\u4eec\u9700\u8981\u91cd\u70b9\u5173\u6ce8\u7684 free \u548c available \u4e24\u5217\u3002 free \u662f\u771f\u6b63\u5c1a\u672a\u88ab\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u6570\u91cf\uff0c\u800c available \u662f\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u89d2\u5ea6\u770b\u5230\u7684\u53ef\u7528\u5185\u5b58\uff0cLinux \u5185\u6838\u4e3a\u4e86\u63d0\u5347\u78c1\u76d8\u64cd\u4f5c\u7684\u6027\u80fd\uff0c\u4f1a\u6d88\u8017\u4e00\u90e8\u5206\u5185\u5b58\u53bb\u7f13\u5b58\u78c1\u76d8\u6570\u636e\uff0c\u5c31\u662f buffer \u548c cache\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5185\u6838\u6765\u8bf4\uff0cbuffer \u548c cache \u90fd\u5c5e\u4e8e\u5df2\u7ecf\u88ab\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u53ea\u662f\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5185\u5b58\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684 free \u5185\u5b58\u53ef\u4ee5\u7528\uff0c\u5185\u6838\u5c31\u4f1a\u4ece buffer \u548c cache \u4e2d\u56de\u6536\u5185\u5b58\u6765\u6ee1\u8db3\u5e94\u7528\u7a0b\u5e8f\u7684\u8bf7\u6c42\u3002\u6240\u4ee5\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u89d2\u5ea6\u6765\u8bf4 available = free + buffer + cache \uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u8fd9\u53ea\u662f\u4e00\u4e2a\u7406\u60f3\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u5b9e\u9645\u4e2d\u7684\u6570\u636e\u6709\u8f83\u5927\u7684\u8bef\u5dee\u3002 \u5982\u679c\u8981\u5728 Prometheus \u4e2d\u6765\u67e5\u8be2\u5185\u5b58\u4f7f\u7528\uff0c\u5219\u53ef\u4ee5\u7528 node_memory_* \u76f8\u5173\u6307\u6807\uff0c\u540c\u6837\u7684\u8981\u8ba1\u7b97\u4f7f\u7528\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u53ef\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u4f7f\u7528 promql \u67e5\u8be2\u8bed\u53e5 node_memory_Buffers_bytes + node_memory_Cached_bytes + node_memory_MemFree_bytes \u3002 \u7136\u540e\u8ba1\u7b97\u53ef\u7528\u5185\u5b58\u7684\u4f7f\u7528\u7387\uff0c\u548c\u603b\u7684\u5185\u5b58\u76f8\u9664\uff0c\u7136\u540e\u540c\u6837\u7528 1 \u51cf\u53bb\u5373\u53ef\uff0c\u8bed\u53e5\u4e3a (1- (node_memory_Buffers_bytes + node_memory_Cached_bytes + node_memory_MemFree_bytes) / node_memory_MemTotal_bytes) * 100 \uff0c \u8fd9\u6837\u8ba1\u7b97\u51fa\u6765\u7684\u5c31\u662f\u8282\u70b9\u5185\u5b58\u4f7f\u7528\u7387\u3002 \u5f53\u7136\u5982\u679c\u60f3\u8981\u67e5\u770b\u5404\u9879\u5185\u5b58\u4f7f\u7528\u76f4\u63a5\u4f7f\u7528\u5bf9\u5e94\u7684\u76d1\u63a7\u6307\u6807\u5373\u53ef\uff0c\u6bd4\u5982\u8981\u67e5\u770b\u8282\u70b9\u603b\u5185\u5b58\uff0c\u76f4\u63a5\u4f7f\u7528 node_memory_MemTotal_bytes \u6307\u6807\u5373\u53ef\u83b7\u53d6\u3002 4 \u78c1\u76d8\u76d1\u63a7 \u63a5\u4e0b\u6765\u662f\u6bd4\u8f83\u4e2d\u7684\u78c1\u76d8\u76d1\u63a7\uff0c\u5bf9\u4e8e\u78c1\u76d8\u76d1\u63a7\u6211\u4eec\u4e0d\u4ec5\u5bf9\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\u611f\u5174\u8da3\uff0c\u4e00\u822c\u6765\u8bf4\u5bf9\u4e8e\u78c1\u76d8 IO \u7684\u76d1\u63a7\u4e5f\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002 \u78c1\u76d8\u5bb9\u91cf\u76d1\u63a7 \u8981\u76d1\u63a7\u78c1\u76d8\u5bb9\u91cf\uff0c\u9700\u8981\u7528\u5230 node_filesystem_* \u76f8\u5173\u7684\u6307\u6807\uff0c\u6bd4\u5982\u8981\u67e5\u8be2\u8282\u70b9\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u7387\uff0c\u5219\u53ef\u4ee5\u540c\u6837\u7528\u603b\u7684\u51cf\u53bb\u53ef\u7528\u7684\u6765\u8fdb\u884c\u8ba1\u7b97\uff0c\u78c1\u76d8\u53ef\u7528\u7a7a\u95f4\u4f7f\u7528 node_filesystem_avail_bytes \u6307\u6807\uff0c\u4f46\u662f\u7531\u4e8e\u4f1a\u6709\u4e00\u4e9b\u6211\u4eec\u4e0d\u5173\u5fc3\u7684\u78c1\u76d8\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 fstype \u6807\u7b7e\u8fc7\u6ee4\u5173\u5fc3\u7684\u78c1\u76d8\u4fe1\u606f\uff0c\u6bd4\u5982 ext4 \u6216\u8005 xfs \u683c\u5f0f\u7684\u78c1\u76d8\uff1a \u8981\u67e5\u8be2\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u7387\uff0c\u5219\u4f7f\u7528\u67e5\u8be2\u8bed\u53e5 (1 - node_filesystem_avail_bytes{fstype=~\"ext4|xfs\"} / node_filesystem_size_bytes{fstype=~\"ext4|xfs\"}) * 100 \u5373\u53ef\uff1a \u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u6211\u4eec\u5173\u5fc3\u7684\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u7387\u4e86\u3002 \u78c1\u76d8 IO \u76d1\u63a7 \u8981\u76d1\u63a7\u78c1\u76d8 IO\uff0c\u5c31\u8981\u533a\u5206\u662f\u8bfb\u7684 IO\uff0c\u8fd8\u662f\u5199\u7684 IO\uff0c\u8bfb IO \u4f7f\u7528 node_disk_reads_completed \u6307\u6807\uff0c\u5199 IO \u4f7f\u7528 node_disk_writes_completed_total \u6307\u6807\u3002 \u78c1\u76d8\u8bfb IO \u4f7f\u7528 sum by (instance) (rate(node_disk_reads_completed_total[5m])) \u67e5\u8be2\u8bed\u53e5\u5373\u53ef\uff1a \u5f53\u7136\u5982\u679c\u4f60\u60f3\u6839\u636e device \u8fdb\u884c\u805a\u5408\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u5168\u90e8\u805a\u5408\u5728\u4e00\u8d77\u4e86\u3002 \u78c1\u76d8\u5199 IO \u4f7f\u7528 sum by (instance) (rate(node_disk_writes_completed_total[5m])) \u67e5\u8be2\u8bed\u53e5\u5373\u53ef\uff1a 6 \u7f51\u7edc IO \u76d1\u63a7 \u4e0a\u884c\u5e26\u5bbd\u9700\u8981\u7528\u5230\u7684\u6307\u6807\u662f node_network_receive_bytes \uff0c\u7531\u4e8e\u6211\u4eec\u5bf9\u7f51\u7edc\u5e26\u5bbd\u7684\u77ac\u65f6\u53d8\u5316\u6bd4\u8f83\u5173\u6ce8\uff0c\u6240\u4ee5\u4e00\u822c\u6211\u4eec\u4f1a\u4f7f\u7528 irate \u51fd\u6570\u6765\u8ba1\u7b97\u7f51\u7edc IO\uff0c\u6bd4\u5982\u8ba1\u7b97\u4e0a\u884c\u5e26\u5bbd\u7528\u67e5\u8be2\u8bed\u53e5 sum by(instance) (irate(node_network_receive_bytes_total{device!~\"bond.*?|lo\"}[5m])) \u5373\u53ef\uff1a \u4e0b\u884c\u5e26\u5bbd\u7528\u5230\u7684\u6307\u6807\u4e3a node_network_transmit_bytes \uff0c\u540c\u6837\u7684\u65b9\u5f0f\u67e5\u8be2\u8bed\u53e5\u4e3a sum by(instance) (irate(node_network_transmit_bytes{device!~\"bond.*?|lo\"}[5m])) \uff1a \u5f53\u7136\u6211\u4eec\u8fd8\u53ef\u4ee5\u6839\u636e\u7f51\u5361\u8bbe\u5907\u8fdb\u884c\u5206\u522b\u805a\u5408\u8ba1\u7b97\uff0c\u6700\u540e\u8fd8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u5c06\u7ed3\u679c\u8fdb\u884c\u5355\u4f4d\u6362\u7b97\u3002","title":"\u7b2c\u4e8c\u8282 \u4f7f\u7528Node Exporter\u76d1\u63a7Linux\u4e3b\u673a&\u5e38\u7528\u76d1\u63a7\u6307\u6807"},{"location":"chap2/59node_exporter/#node-exporterlinux","text":"Node Exporter \u662f\u7528\u4e8e\u66b4\u9732 *NIX \u4e3b\u673a\u6307\u6807\u7684 Exporter\uff0c\u6bd4\u5982\u91c7\u96c6 CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u7b49\u4fe1\u606f\u3002\u91c7\u7528 Go \u7f16\u5199\uff0c\u4e0d\u5b58\u5728\u4efb\u4f55\u7b2c\u4e09\u65b9\u4f9d\u8d56\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4e0b\u8f7d\u89e3\u538b\u5373\u53ef\u8fd0\u884c\u3002","title":"\u7b2c\u4e8c\u8282 \u4f7f\u7528Node Exporter\u76d1\u63a7Linux\u4e3b\u673a&amp;\u5e38\u7528\u76d1\u63a7\u6307\u6807"},{"location":"chap2/59node_exporter/#1","text":"\u7531\u4e8e Node Exporter \u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece Prometheus \u4e0b\u8f7d\u9875\u9762( https://prometheus.io/download/#node_exporter ) \u4e0b\u8f7d\u89e3\u538b\u8fd0\u884c\uff1a \u2638 \u279c wget https://github.com/prometheus/node_exporter/releases/download/v1.2.2/node_exporter-1.2.2.linux-amd64.tar.gz # \u56fd\u5185\u52a0\u901f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4e0b\u8f7d # wget https://download.fastgit.org/prometheus/node_exporter/releases/download/v1.2.2/node_exporter-1.2.2.linux-amd64.tar.gz \u2638 \u279c tar -xvf node_exporter-1.2.2.linux-amd64.tar.gz node_exporter-1.2.2.linux-amd64/ node_exporter-1.2.2.linux-amd64/LICENSE node_exporter-1.2.2.linux-amd64/NOTICE node_exporter-1.2.2.linux-amd64/node_exporter \u2638 \u279c cd node_exporter-1.2.2.linux-amd64 && ls -la total 18084 drwxr-xr-x 2 3434 3434 56 Aug 6 21:50 . dr-xr-x---. 5 root root 4096 Oct 14 11:50 .. -rw-r--r-- 1 3434 3434 11357 Aug 6 21:49 LICENSE -rwxr-xr-x 1 3434 3434 18494215 Aug 6 21:45 node_exporter -rw-r--r-- 1 3434 3434 463 Aug 6 21:49 NOTICE \u76f4\u63a5\u6267\u884c node_exporter \u6587\u4ef6\u5373\u53ef\u8fd0\u884c\uff1a \u2638 \u279c ./node_exporter level=info ts=2021-10-14T03:52:31.947Z caller=node_exporter.go:182 msg=\"Starting node_exporter\" version=\"(version=1.2.2, branch=HEAD, revision=26645363b486e12be40af7ce4fc91e731a33104e)\" level=info ts=2021-10-14T03:52:31.947Z caller=node_exporter.go:183 msg=\"Build context\" build_context=\"(go=go1.16.7, user=root@b9cb4aa2eb17, date=20210806-13:44:18)\" ...... level=info ts=2021-10-14T03:52:31.948Z caller=node_exporter.go:199 msg=\"Listening on\" address=:9100 level=info ts=2021-10-14T03:52:31.948Z caller=tls_config.go:191 msg=\"TLS is disabled.\" http2=false \u4ece\u65e5\u5fd7\u4e0a\u53ef\u4ee5\u770b\u51fa node_exporter \u76d1\u542c\u5728 9100 \u7aef\u53e3\u4e0a\uff0c\u9ed8\u8ba4\u7684 metrics \u63a5\u53e3\u901a\u8fc7 /metrics \u7aef\u70b9\u66b4\u9732\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee http://localhost:9100/metrics \u6765\u83b7\u53d6\u76d1\u63a7\u6307\u6807\u6570\u636e\uff1a \u2638 \u279c curl http://localhost:9100/metrics ...... # HELP node_load1 1m load average. # TYPE node_load1 gauge node_load1 0.01 # HELP node_load15 15m load average. # TYPE node_load15 gauge node_load15 0.05 # HELP node_load5 5m load average. # TYPE node_load5 gauge node_load5 0.04 # HELP node_memory_Active_anon_bytes Memory information field Active_anon_bytes. # TYPE node_memory_Active_anon_bytes gauge node_memory_Active_anon_bytes 8.4393984e+07 # HELP node_memory_Active_bytes Memory information field Active_bytes. # TYPE node_memory_Active_bytes gauge node_memory_Active_bytes 1.8167808e+08 # HELP node_memory_Active_file_bytes Memory information field Active_file_bytes. # TYPE node_memory_Active_file_bytes gauge node_memory_Active_file_bytes 9.7284096e+07 # HELP node_memory_AnonHugePages_bytes Memory information field AnonHugePages_bytes. # TYPE node_memory_AnonHugePages_bytes gauge node_memory_AnonHugePages_bytes 3.5651584e+07 # HELP node_memory_AnonPages_bytes Memory information field AnonPages_bytes. # TYPE node_memory_AnonPages_bytes gauge node_memory_AnonPages_bytes 8.159232e+07 # HELP node_memory_Bounce_bytes Memory information field Bounce_bytes. # TYPE node_memory_Bounce_bytes gauge node_memory_Bounce_bytes 0 ...... \u8be5 metrics \u63a5\u53e3\u6570\u636e\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u7684 Prometheus \u76d1\u63a7\u6307\u6807\u683c\u5f0f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8be5\u7aef\u70b9\u914d\u7f6e\u5230 Prometheus \u4e2d\u5373\u53ef\u6293\u53d6\u8be5\u6307\u6807\u6570\u636e\u3002\u4e3a\u4e86\u4e86\u89e3 node_exporter \u53ef\u914d\u7f6e\u7684\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ./node_exporter -h \u6765\u67e5\u770b\u5e2e\u52a9\u4fe1\u606f\uff1a \u2638 \u279c ./node_exporter -h --web.listen-address=\":9100\" # \u76d1\u542c\u7684\u7aef\u53e3\uff0c\u9ed8\u8ba4\u662f9100 --web.telemetry-path=\"/metrics\" # metrics\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a/metrics --web.disable-exporter-metrics # \u662f\u5426\u7981\u7528go\u3001prome\u9ed8\u8ba4\u7684metrics --web.max-requests=40 # \u6700\u5927\u5e76\u884c\u8bf7\u6c42\u6570\uff0c\u9ed8\u8ba440\uff0c\u8bbe\u7f6e\u4e3a0\u65f6\u4e0d\u9650\u5236 --log.level=\"info\" # \u65e5\u5fd7\u7b49\u7ea7: [debug, info, warn, error, fatal] --log.format=logfmt # \u7f6e\u65e5\u5fd7\u6253\u5370target\u548c\u683c\u5f0f: [logfmt, json] --version # \u7248\u672c\u53f7 --collector.{metric-name} # \u5404\u4e2ametric\u5bf9\u5e94\u7684\u53c2\u6570 ...... \u5176\u4e2d\u6700\u91cd\u8981\u7684\u53c2\u6570\u5c31\u662f --collector.<name> \uff0c \u901a\u8fc7\u8be5\u53c2\u6570\u53ef\u4ee5\u542f\u7528\u6211\u4eec\u6536\u96c6\u7684\u529f\u80fd\u6a21\u5757\uff0c node_exporter \u4f1a\u9ed8\u8ba4\u91c7\u96c6\u4e00\u4e9b\u6a21\u5757\uff0c\u8981\u7981\u7528\u8fd9\u4e9b\u9ed8\u8ba4\u542f\u7528\u7684\u6536\u96c6\u5668\u53ef\u4ee5\u901a\u8fc7 --no-collector.<name> \u6807\u5fd7\u6765\u7981\u7528\uff0c\u5982\u679c\u53ea\u542f\u7528\u67d0\u4e9b\u7279\u5b9a\u7684\u6536\u96c6\u5668\uff0c\u57fa\u4e8e\u5148\u4f7f\u7528 --collector.disable-defaults \u6807\u5fd7\u7981\u7528\u6240\u6709\u9ed8\u8ba4\u7684\uff0c\u7136\u540e\u5728\u901a\u8fc7\u6307\u5b9a\u5177\u4f53\u7684\u6536\u96c6\u5668 --collector.<name> \u6765\u8fdb\u884c\u542f \u7528\u3002 \u4e0b\u56fe\u5217\u51fa\u4e86\u9ed8\u8ba4\u542f\u7528\u7684\u6536\u96c6\u5668\uff1a \u4e00\u822c\u6765\u8bf4\u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 docker \u5bb9\u5668\u6765\u8fd0\u884c node_exporter \uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u7531\u4e8e\u91c7\u96c6\u7684\u662f\u5bbf\u4e3b\u673a\u7684\u6307\u6807\u4fe1\u606f\uff0c\u6240\u4ee5\u9700\u8981\u8bbf\u95ee\u4e3b\u673a\u7cfb\u7edf\uff0c\u5982\u679c\u4f7f\u7528 docker \u5bb9\u5668\u6765\u90e8\u7f72\u7684\u8bdd\u9700\u8981\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u53c2\u6570\u6765\u5141\u8bb8 node_exporter \u8bbf\u95ee\u5bbf\u4e3b\u673a\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5982\u679c\u76f4\u63a5\u5728\u5bbf\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 systemd \u6765\u7ba1\u7406\uff0c\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 service unit \u6587\u4ef6\uff1a \u2638 \u279c cat /etc/systemd/system/node_exporter.service [Unit] Description=node exporter service Documentation=https://prometheus.io After=network.target [Service] Type=simple User=root Group=root ExecStart=/usr/local/bin/node_exporter # \u6709\u7279\u6b8a\u9700\u6c42\u7684\u53ef\u4ee5\u5728\u540e\u9762\u6307\u5b9a\u53c2\u6570\u914d\u7f6e Restart=on-failure [Install] WantedBy=multi-user.target \u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 systemd \u6765\u7ba1\u7406 node_exporter \u4e86\uff1a \u2638 \u279c cp node_exporter /usr/local/bin/node_exporter \u2638 \u279c systemctl daemon-reload \u2638 \u279c systemctl start node_exporter \u2638 \u279c systemctl status node_exporter \u25cf node_exporter.service - node exporter servoce Loaded: loaded (/etc/systemd/system/node_exporter.service; disabled; vendor preset: disabled) Active: active (running) since Thu 2021-10-14 15:29:46 CST; 5s ago Docs: https://prometheus.io Main PID: 18679 (node_exporter) Tasks: 5 Memory: 6.5M CGroup: /system.slice/node_exporter.service \u2514\u250018679 /usr/local/bin/node_exporter Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:..._zone Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...=time Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...timex Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...ueues Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...uname Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...mstat Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...r=xfs Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...r=zfs Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=node_exporter.go:...:9100 Oct 14 15:29:46 node1 node_exporter[18679]: level=info ts=2021-10-14T07:29:46.137Z caller=tls_config.go:191...false Hint: Some lines were ellipsized, use -l to show in full. \u8fd9\u91cc\u6211\u4eec\u7528 systemd \u7684\u65b9\u5f0f\u5728\u4e24\u4e2a\u8282\u70b9\u4e0a\uff08node1\u3001node2\uff09\u5206\u522b\u542f\u52a8 node_exporter \uff0c\u542f\u52a8\u5b8c\u6210\u540e\u6211\u4eec\u4f7f\u7528\u9759\u6001\u914d\u7f6e\u7684\u65b9\u5f0f\u5728\u4e4b\u524d\u7684 Prometheus \u914d\u7f6e\u4e2d\u65b0\u589e\u4e00\u4e2a node_exporter \u7684\u6293\u53d6\u4efb\u52a1\uff0c\u6765\u91c7\u96c6\u8fd9\u4e24\u4e2a\u8282\u70b9\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a global: scrape_interval: 5s scrape_configs: - job_name: \"prometheus\" static_configs: - targets: [\"localhost:9090\"] - job_name: \"demo\" scrape_interval: 15s # \u4f1a\u8986\u76d6global\u5168\u5c40\u7684\u914d\u7f6e scrape_timeout: 10s static_configs: - targets: [\"localhost:10000\", \"localhost:10001\", \"localhost:10002\"] - job_name: \"node_exporter\" # \u65b0\u589e node_exporter \u4efb\u52a1 static_configs: - targets: [\"node1:9100\", \"node2:9100\"] # node1\u3001node2 \u5728 hosts \u4e2d\u505a\u4e86\u6620\u5c04 \u4e0a\u9762\u914d\u7f6e\u6587\u4ef6\u6700\u540e\u6211\u4eec\u65b0\u589e\u4e86\u4e00\u4e2a\u540d\u4e3a node_exporter \u7684\u6293\u53d6\u4efb\u52a1\uff0c\u91c7\u96c6\u7684\u76ee\u6807\u4f7f\u7528\u9759\u6001\u914d\u7f6e\u7684\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u65b0\u52a0\u8f7d Prometheus\uff0c\u6b63\u5e38\u5728 Prometheus \u7684 WebUI \u7684\u76ee\u6807\u9875\u9762\u5c31\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u914d\u7f6e\u7684 node_exporter \u4efb\u52a1\u4e86\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e9b\u5173\u4e8e\u8282\u70b9\u76d1\u63a7\u7684\u5e38\u7528\u6307\u6807\uff0c\u6bd4\u5982 CPU\u3001\u5185\u5b58\u3001IO \u76d1\u63a7\u7b49\u3002","title":"1 \u5b89\u88c5\u914d\u7f6e"},{"location":"chap2/59node_exporter/#2-cpu","text":"\u5bf9\u4e8e\u8282\u70b9\u6211\u4eec\u9996\u5148\u80fd\u60f3\u5230\u7684\u5c31\u662f\u8981\u5148\u5bf9 CPU \u8fdb\u884c\u76d1\u63a7\uff0c\u56e0\u4e3a CPU \u662f\u5904\u7406\u4efb\u52a1\u7684\u6838\u5fc3\uff0c\u6839\u636e CPU \u7684\u72b6\u6001\u53ef\u4ee5\u5206\u6790\u51fa\u5f53\u524d\u7cfb\u7edf\u7684\u5065\u5eb7\u72b6\u6001\u3002\u8981\u5bf9\u8282\u70b9\u8fdb\u884c CPU \u76d1\u63a7\uff0c\u9700\u8981\u7528\u5230 node_cpu_seconds_total \u8fd9\u4e2a\u76d1\u63a7\u6307\u6807\uff0c\u5728 metrics \u63a5\u53e3\u4e2d\u8be5\u6307\u6807\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a # HELP node_cpu_seconds_total Seconds the CPUs spent in each mode. # TYPE node_cpu_seconds_total counter node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"} 13172.76 node_cpu_seconds_total{cpu=\"0\",mode=\"iowait\"} 0.25 node_cpu_seconds_total{cpu=\"0\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"nice\"} 0.01 node_cpu_seconds_total{cpu=\"0\",mode=\"softirq\"} 87.99 node_cpu_seconds_total{cpu=\"0\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"system\"} 309.38 node_cpu_seconds_total{cpu=\"0\",mode=\"user\"} 79.93 node_cpu_seconds_total{cpu=\"1\",mode=\"idle\"} 13168.98 node_cpu_seconds_total{cpu=\"1\",mode=\"iowait\"} 0.27 node_cpu_seconds_total{cpu=\"1\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"nice\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"softirq\"} 74.1 node_cpu_seconds_total{cpu=\"1\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"system\"} 314.71 node_cpu_seconds_total{cpu=\"1\",mode=\"user\"} 78.83 node_cpu_seconds_total{cpu=\"2\",mode=\"idle\"} 13182.78 node_cpu_seconds_total{cpu=\"2\",mode=\"iowait\"} 0.69 node_cpu_seconds_total{cpu=\"2\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"2\",mode=\"nice\"} 0 node_cpu_seconds_total{cpu=\"2\",mode=\"softirq\"} 66.01 node_cpu_seconds_total{cpu=\"2\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"2\",mode=\"system\"} 309.09 node_cpu_seconds_total{cpu=\"2\",mode=\"user\"} 79.44 node_cpu_seconds_total{cpu=\"3\",mode=\"idle\"} 13185.13 node_cpu_seconds_total{cpu=\"3\",mode=\"iowait\"} 0.18 node_cpu_seconds_total{cpu=\"3\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"3\",mode=\"nice\"} 0 node_cpu_seconds_total{cpu=\"3\",mode=\"softirq\"} 64.49 node_cpu_seconds_total{cpu=\"3\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"3\",mode=\"system\"} 305.86 node_cpu_seconds_total{cpu=\"3\",mode=\"user\"} 78.17 \u4ece\u63a5\u53e3\u4e2d\u63cf\u8ff0\u53ef\u4ee5\u770b\u51fa\u8be5\u6307\u6807\u662f\u7528\u6765\u7edf\u8ba1 CPU \u6bcf\u79cd\u6a21\u5f0f\u4e0b\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u662f\u4e00\u4e2a Counter \u7c7b\u578b\u7684\u6307\u6807\uff0c\u4e5f\u5c31\u662f\u4f1a\u4e00\u76f4\u589e\u957f\uff0c\u8fd9\u4e2a\u6570\u503c\u5176\u5b9e\u662f CPU \u65f6\u95f4\u7247\u7684\u4e00\u4e2a\u7d2f\u79ef\u503c\uff0c\u610f\u601d\u5c31\u662f\u4ece\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u8d77\u6765 CPU \u5f00\u59cb\u5de5\u4f5c\uff0c\u5c31\u5f00\u59cb\u8bb0\u5f55\u81ea\u5df1\u603b\u5171\u4f7f\u7528\u7684\u65f6\u95f4\uff0c\u7136\u540e\u4fdd\u5b58\u4e0b\u6765\uff0c\u800c\u4e14\u8fd9\u91cc\u7684\u7d2f\u79ef\u7684 CPU \u4f7f\u7528\u65f6\u95f4\u8fd8\u4f1a\u5206\u6210\u51e0\u4e2a\u4e0d\u540c\u7684\u6a21\u5f0f\uff0c\u6bd4\u5982\u7528\u6237\u6001\u4f7f\u7528\u65f6\u95f4\u3001\u7a7a\u95f2\u65f6\u95f4\u3001\u4e2d\u65ad\u65f6\u95f4\u3001\u5185\u6838\u6001\u4f7f\u7528\u65f6\u95f4\u7b49\u7b49\uff0c\u4e5f\u5c31\u662f\u5e73\u65f6\u6211\u4eec\u4f7f\u7528 top \u547d\u4ee4\u67e5\u770b\u7684 CPU \u7684\u76f8\u5173\u4fe1\u606f\uff0c\u800c\u6211\u4eec\u8fd9\u91cc\u7684\u8fd9\u4e2a\u6307\u6807\u4f1a\u5206\u522b\u5bf9\u8fd9\u4e9b\u6a21\u5f0f\u8fdb\u884c\u8bb0\u5f55\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5bf9\u8282\u70b9\u7684 CPU \u8fdb\u884c\u76d1\u63a7\uff0c \u6211\u4eec\u4e5f\u77e5\u9053\u4e00\u4e2a\u4e00\u76f4\u589e\u957f\u7684 CPU \u65f6\u95f4\u5bf9\u6211\u4eec\u610f\u4e49\u4e0d\u5927\uff0c\u4e00\u822c\u6211\u4eec\u66f4\u5e0c\u671b\u76d1\u63a7\u7684\u662f\u8282\u70b9\u7684 CPU \u4f7f\u7528\u7387\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4f7f\u7528 top \u547d\u4ee4\u770b\u5230\u7684\u767e\u5206\u6bd4 \u3002 \u8981\u8ba1\u7b97 CPU \u7684\u4f7f\u7528\u7387\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u641e\u6e05\u695a\u8fd9\u4e2a\u4f7f\u7528\u7387\u7684\u542b\u4e49\uff0c CPU \u4f7f\u7528\u7387\u662f CPU \u9664\u7a7a\u95f2\uff08idle\uff09\u72b6\u6001\u4e4b\u5916\u7684\u5176\u4ed6\u6240\u6709 CPU \u72b6\u6001\u7684\u65f6\u95f4\u603b\u548c\u9664\u4ee5\u603b\u7684 CPU \u65f6\u95f4\u5f97\u5230\u7684\u7ed3\u679c \uff0c\u7406\u89e3\u4e86\u8fd9\u4e2a\u6982\u5ff5\u540e\u5c31\u53ef\u4ee5\u5199\u51fa\u6b63\u786e\u7684 promql \u67e5\u8be2\u8bed\u53e5\u4e86\u3002 \u8981\u8ba1\u7b97\u9664\u7a7a\u95f2\u72b6\u6001\u4e4b\u5916\u7684 CPU \u65f6\u95f4\u603b\u548c\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u4e0d\u662f\u76f4\u63a5\u8ba1\u7b97\u7a7a\u95f2\u72b6\u6001\u7684 CPU \u65f6\u95f4\u4f7f\u7528\u7387\uff0c\u7136\u540e\u7528 1 \u51cf\u6389\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u4e86\uff0c\u6240\u4ee5\u9996\u5148\u6211\u4eec\u5148\u8fc7\u6ee4 idle \u6a21\u5f0f\u7684\u6307\u6807\uff0c\u5728 Prometheus \u7684 WebUI \u4e2d\u8f93\u5165 node_cpu_seconds_total{mode=\"idle\"} \u8fdb\u884c\u8fc7\u6ee4\uff1a \u8981\u8ba1\u7b97\u4f7f\u7528\u7387\uff0c\u80af\u5b9a\u5c31\u9700\u8981\u77e5\u9053 idle \u6a21\u5f0f\u7684 CPU \u7528\u4e86\u591a\u957f\u65f6\u95f4\uff0c\u7136\u540e\u548c\u603b\u7684\u8fdb\u884c\u5bf9\u6bd4\uff0c\u7531\u4e8e\u8fd9\u662f Counter \u6307\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 increase \u51fd\u6570\u6765\u83b7\u53d6\u53d8\u5316\uff0c\u4f7f\u7528\u67e5\u8be2\u8bed\u53e5 increase(node_cpu_seconds_total{mode=\"idle\"}[1m]) \uff0c\u56e0\u4e3a increase \u51fd\u6570\u8981\u6c42\u8f93\u5165\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u53d6 1 \u5206\u949f\u5185\u7684\u6570\u636e\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u67e5\u8be2\u7ed3\u679c\u4e2d\u6709\u5f88\u591a\u4e0d\u540c cpu \u5e8f\u53f7\u7684\u6570\u636e\uff0c\u6211\u4eec\u5f53\u7136\u9700\u8981\u8ba1\u7b97\u6240\u6709 CPU \u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u4eec\u805a\u5408\u8d77\u6765\uff0c\u6211\u4eec\u8981\u67e5\u8be2\u7684\u662f\u4e0d\u540c\u8282\u70b9\u7684 CPU \u4f7f\u7528\u7387\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u6839\u636e instance \u6807\u7b7e\u8fdb\u884c\u805a\u5408\uff0c \u4f7f\u7528\u67e5\u8be2\u8bed\u53e5 sum(increase(node_cpu_seconds_total{mode=\"idle\"}[1m])) by (instance) \uff1a \u8fd9\u6837\u6211\u4eec\u5c31\u5206\u522b\u62ff\u5230\u4e0d\u540c\u8282\u70b9 1 \u5206\u949f\u5185\u7684\u7a7a\u95f2 CPU \u4f7f\u7528\u65f6\u95f4\u4e86\uff0c\u7136\u540e\u548c\u603b\u7684 CPU \uff08\u8fd9\u4e2a\u65f6\u5019\u4e0d\u9700\u8981\u8fc7\u6ee4\u72b6\u6001\u6a21\u5f0f\uff09\u65f6\u95f4\u8fdb\u884c\u6bd4\u8f83\u5373\u53ef\uff0c\u4f7f\u7528\u67e5\u8be2\u8bed\u53e5 sum(increase(node_cpu_seconds_total{mode=\"idle\"}[1m])) by (instance) / sum(increase(node_cpu_seconds_total[1m])) by (instance)\uff1a \u7136\u540e\u8ba1\u7b97 CPU \u4f7f\u7528\u7387\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u4f7f\u7528 1 \u51cf\u53bb\u4e58\u4ee5 100 \u5373\u53ef\uff1a (1 - sum(increase(node_cpu_seconds_total{mode=\"idle\"}[1m])) by (instance) / sum(increase(node_cpu_seconds_total[1m])) by (instance) ) * 100 \u8fd9\u5c31\u662f\u80fd\u591f\u60f3\u5230\u7684\u6700\u76f4\u63a5\u7684 CPU \u4f7f\u7528\u7387\u67e5\u8be2\u65b9\u5f0f\u4e86\uff0c\u5f53\u7136\u524d\u9762\u6211\u4eec\u5b66\u4e60\u7684 promql \u8bed\u6cd5\u4e2d\u63d0\u5230\u8fc7\u66f4\u591a\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u53bb\u4f7f\u7528 rate \u51fd\u6570\uff0c\u800c\u4e0d\u662f\u7528 increase \u51fd\u6570\u8fdb\u884c\u8ba1\u7b97\uff0c\u6240\u4ee5\u6700\u7ec8\u7684 CPU \u4f7f\u7528\u7387\u7684\u67e5\u8be2\u8bed\u53e5\u4e3a\uff1a (1 - sum(increase(node_cpu_seconds_total{mode=\"idle\"}[1m])) by (instance) / sum(increase(node_cpu_seconds_total[1m])) by (instance) ) * 100 \u53ef\u4ee5\u548c top \u547d\u4ee4\u7684\u7ed3\u679c\u8fdb\u884c\u5bf9\u6bd4\uff08\u4e0b\u56fe\u4e3a node2 \u8282\u70b9\uff09\uff0c\u57fa\u672c\u4e0a\u662f\u4fdd\u6301\u4e00\u81f4\u7684\uff0c\u8fd9\u5c31\u662f\u76d1\u63a7\u8282\u70b9 CPU \u4f7f\u7528\u7387\u7684\u65b9\u5f0f\u3002","title":"2 CPU \u76d1\u63a7"},{"location":"chap2/59node_exporter/#3","text":"\u9664\u4e86 CPU \u76d1\u63a7\u4e4b\u5916\uff0c\u6211\u4eec\u53ef\u80fd\u6700\u5173\u5fc3\u7684\u5c31\u662f\u8282\u70b9\u5185\u5b58\u7684\u76d1\u63a7\u4e86\uff0c\u5e73\u65f6\u6211\u4eec\u67e5\u770b\u8282\u70b9\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u57fa\u672c\u4e0a\u90fd\u662f\u4f7f\u7528 free \u547d\u4ee4\u6765\u67e5\u770b\uff1a","title":"3 \u5185\u5b58\u76d1\u63a7"},{"location":"chap2/59node_exporter/#3-1-free","text":"free \u547d\u4ee4\u7684\u8f93\u51fa\u4f1a\u663e\u793a\u7cfb\u7edf\u5185\u5b58\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u5305\u62ec\u7269\u7406\u5185\u5b58\u3001\u4ea4\u6362\u5185\u5b58(swap)\u548c\u5185\u6838\u7f13\u51b2\u533a\u5185\u5b58\u7b49\uff0c\u6240\u4ee5\u8981\u5bf9\u5185\u5b58\u8fdb\u884c\u76d1\u63a7\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u8fd9\u4e9b\u6982\u5ff5\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u4e0b free \u547d\u4ee4\u7684\u8f93\u51fa\u5185\u5bb9\uff1a Mem \u884c(\u7b2c\u4e8c\u884c)\u662f\u5185\u5b58\u7684\u4f7f\u7528\u60c5\u51b5 Swap \u884c(\u7b2c\u4e09\u884c)\u662f\u4ea4\u6362\u7a7a\u95f4\u7684\u4f7f\u7528\u60c5\u51b5 total \u5217\u663e\u793a\u7cfb\u7edf\u603b\u7684\u53ef\u7528\u7269\u7406\u5185\u5b58\u548c\u4ea4\u6362\u7a7a\u95f4\u5927\u5c0f used \u5217\u663e\u793a\u5df2\u7ecf\u88ab\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u548c\u4ea4\u6362\u7a7a\u95f4 free \u5217\u663e\u793a\u8fd8\u6709\u591a\u5c11\u7269\u7406\u5185\u5b58\u548c\u4ea4\u6362\u7a7a\u95f4\u53ef\u7528\u4f7f\u7528 shared \u5217\u663e\u793a\u88ab\u5171\u4eab\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f buff/cache \u5217\u663e\u793a\u88ab buffer \u548c cache \u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f available \u5217\u663e\u793a\u8fd8\u53ef\u4ee5\u88ab\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f \u5176\u4e2d\u6211\u4eec\u9700\u8981\u91cd\u70b9\u5173\u6ce8\u7684 free \u548c available \u4e24\u5217\u3002 free \u662f\u771f\u6b63\u5c1a\u672a\u88ab\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u6570\u91cf\uff0c\u800c available \u662f\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u89d2\u5ea6\u770b\u5230\u7684\u53ef\u7528\u5185\u5b58\uff0cLinux \u5185\u6838\u4e3a\u4e86\u63d0\u5347\u78c1\u76d8\u64cd\u4f5c\u7684\u6027\u80fd\uff0c\u4f1a\u6d88\u8017\u4e00\u90e8\u5206\u5185\u5b58\u53bb\u7f13\u5b58\u78c1\u76d8\u6570\u636e\uff0c\u5c31\u662f buffer \u548c cache\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5185\u6838\u6765\u8bf4\uff0cbuffer \u548c cache \u90fd\u5c5e\u4e8e\u5df2\u7ecf\u88ab\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u53ea\u662f\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5185\u5b58\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684 free \u5185\u5b58\u53ef\u4ee5\u7528\uff0c\u5185\u6838\u5c31\u4f1a\u4ece buffer \u548c cache \u4e2d\u56de\u6536\u5185\u5b58\u6765\u6ee1\u8db3\u5e94\u7528\u7a0b\u5e8f\u7684\u8bf7\u6c42\u3002\u6240\u4ee5\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u89d2\u5ea6\u6765\u8bf4 available = free + buffer + cache \uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u8fd9\u53ea\u662f\u4e00\u4e2a\u7406\u60f3\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u5b9e\u9645\u4e2d\u7684\u6570\u636e\u6709\u8f83\u5927\u7684\u8bef\u5dee\u3002 \u5982\u679c\u8981\u5728 Prometheus \u4e2d\u6765\u67e5\u8be2\u5185\u5b58\u4f7f\u7528\uff0c\u5219\u53ef\u4ee5\u7528 node_memory_* \u76f8\u5173\u6307\u6807\uff0c\u540c\u6837\u7684\u8981\u8ba1\u7b97\u4f7f\u7528\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u53ef\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u4f7f\u7528 promql \u67e5\u8be2\u8bed\u53e5 node_memory_Buffers_bytes + node_memory_Cached_bytes + node_memory_MemFree_bytes \u3002 \u7136\u540e\u8ba1\u7b97\u53ef\u7528\u5185\u5b58\u7684\u4f7f\u7528\u7387\uff0c\u548c\u603b\u7684\u5185\u5b58\u76f8\u9664\uff0c\u7136\u540e\u540c\u6837\u7528 1 \u51cf\u53bb\u5373\u53ef\uff0c\u8bed\u53e5\u4e3a (1- (node_memory_Buffers_bytes + node_memory_Cached_bytes + node_memory_MemFree_bytes) / node_memory_MemTotal_bytes) * 100 \uff0c \u8fd9\u6837\u8ba1\u7b97\u51fa\u6765\u7684\u5c31\u662f\u8282\u70b9\u5185\u5b58\u4f7f\u7528\u7387\u3002 \u5f53\u7136\u5982\u679c\u60f3\u8981\u67e5\u770b\u5404\u9879\u5185\u5b58\u4f7f\u7528\u76f4\u63a5\u4f7f\u7528\u5bf9\u5e94\u7684\u76d1\u63a7\u6307\u6807\u5373\u53ef\uff0c\u6bd4\u5982\u8981\u67e5\u770b\u8282\u70b9\u603b\u5185\u5b58\uff0c\u76f4\u63a5\u4f7f\u7528 node_memory_MemTotal_bytes \u6307\u6807\u5373\u53ef\u83b7\u53d6\u3002","title":"3-1 free\u547d\u4ee4"},{"location":"chap2/59node_exporter/#4","text":"\u63a5\u4e0b\u6765\u662f\u6bd4\u8f83\u4e2d\u7684\u78c1\u76d8\u76d1\u63a7\uff0c\u5bf9\u4e8e\u78c1\u76d8\u76d1\u63a7\u6211\u4eec\u4e0d\u4ec5\u5bf9\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\u611f\u5174\u8da3\uff0c\u4e00\u822c\u6765\u8bf4\u5bf9\u4e8e\u78c1\u76d8 IO \u7684\u76d1\u63a7\u4e5f\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002 \u78c1\u76d8\u5bb9\u91cf\u76d1\u63a7 \u8981\u76d1\u63a7\u78c1\u76d8\u5bb9\u91cf\uff0c\u9700\u8981\u7528\u5230 node_filesystem_* \u76f8\u5173\u7684\u6307\u6807\uff0c\u6bd4\u5982\u8981\u67e5\u8be2\u8282\u70b9\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u7387\uff0c\u5219\u53ef\u4ee5\u540c\u6837\u7528\u603b\u7684\u51cf\u53bb\u53ef\u7528\u7684\u6765\u8fdb\u884c\u8ba1\u7b97\uff0c\u78c1\u76d8\u53ef\u7528\u7a7a\u95f4\u4f7f\u7528 node_filesystem_avail_bytes \u6307\u6807\uff0c\u4f46\u662f\u7531\u4e8e\u4f1a\u6709\u4e00\u4e9b\u6211\u4eec\u4e0d\u5173\u5fc3\u7684\u78c1\u76d8\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 fstype \u6807\u7b7e\u8fc7\u6ee4\u5173\u5fc3\u7684\u78c1\u76d8\u4fe1\u606f\uff0c\u6bd4\u5982 ext4 \u6216\u8005 xfs \u683c\u5f0f\u7684\u78c1\u76d8\uff1a \u8981\u67e5\u8be2\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u7387\uff0c\u5219\u4f7f\u7528\u67e5\u8be2\u8bed\u53e5 (1 - node_filesystem_avail_bytes{fstype=~\"ext4|xfs\"} / node_filesystem_size_bytes{fstype=~\"ext4|xfs\"}) * 100 \u5373\u53ef\uff1a \u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u6211\u4eec\u5173\u5fc3\u7684\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u7387\u4e86\u3002 \u78c1\u76d8 IO \u76d1\u63a7 \u8981\u76d1\u63a7\u78c1\u76d8 IO\uff0c\u5c31\u8981\u533a\u5206\u662f\u8bfb\u7684 IO\uff0c\u8fd8\u662f\u5199\u7684 IO\uff0c\u8bfb IO \u4f7f\u7528 node_disk_reads_completed \u6307\u6807\uff0c\u5199 IO \u4f7f\u7528 node_disk_writes_completed_total \u6307\u6807\u3002 \u78c1\u76d8\u8bfb IO \u4f7f\u7528 sum by (instance) (rate(node_disk_reads_completed_total[5m])) \u67e5\u8be2\u8bed\u53e5\u5373\u53ef\uff1a \u5f53\u7136\u5982\u679c\u4f60\u60f3\u6839\u636e device \u8fdb\u884c\u805a\u5408\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u5168\u90e8\u805a\u5408\u5728\u4e00\u8d77\u4e86\u3002 \u78c1\u76d8\u5199 IO \u4f7f\u7528 sum by (instance) (rate(node_disk_writes_completed_total[5m])) \u67e5\u8be2\u8bed\u53e5\u5373\u53ef\uff1a","title":"4 \u78c1\u76d8\u76d1\u63a7"},{"location":"chap2/59node_exporter/#6-io","text":"\u4e0a\u884c\u5e26\u5bbd\u9700\u8981\u7528\u5230\u7684\u6307\u6807\u662f node_network_receive_bytes \uff0c\u7531\u4e8e\u6211\u4eec\u5bf9\u7f51\u7edc\u5e26\u5bbd\u7684\u77ac\u65f6\u53d8\u5316\u6bd4\u8f83\u5173\u6ce8\uff0c\u6240\u4ee5\u4e00\u822c\u6211\u4eec\u4f1a\u4f7f\u7528 irate \u51fd\u6570\u6765\u8ba1\u7b97\u7f51\u7edc IO\uff0c\u6bd4\u5982\u8ba1\u7b97\u4e0a\u884c\u5e26\u5bbd\u7528\u67e5\u8be2\u8bed\u53e5 sum by(instance) (irate(node_network_receive_bytes_total{device!~\"bond.*?|lo\"}[5m])) \u5373\u53ef\uff1a \u4e0b\u884c\u5e26\u5bbd\u7528\u5230\u7684\u6307\u6807\u4e3a node_network_transmit_bytes \uff0c\u540c\u6837\u7684\u65b9\u5f0f\u67e5\u8be2\u8bed\u53e5\u4e3a sum by(instance) (irate(node_network_transmit_bytes{device!~\"bond.*?|lo\"}[5m])) \uff1a \u5f53\u7136\u6211\u4eec\u8fd8\u53ef\u4ee5\u6839\u636e\u7f51\u5361\u8bbe\u5907\u8fdb\u884c\u5206\u522b\u805a\u5408\u8ba1\u7b97\uff0c\u6700\u540e\u8fd8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u5c06\u7ed3\u679c\u8fdb\u884c\u5355\u4f4d\u6362\u7b97\u3002","title":"6 \u7f51\u7edc IO \u76d1\u63a7"},{"location":"chap2/5prom_grafana_chatops/","text":"5 \u4f7f\u7528 Grafana\u3001Prometheus \u548c Slack \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 ChatOps \u673a\u5668\u4eba \u4e00\u79cd\u6784\u5efa\u7b80\u5355\u7684 ChatOps \u673a\u5668\u4eba\u7684\u65b9\u6cd5\uff0c\u5b83\u4f7f\u7528 Slack \u548c Grafana \u6765\u67e5\u8be2\u7cfb\u7edf\u72b6\u6001\u3002\u5f53\u4f60\u4e0d\u5728\u529e\u516c\u684c\u524d\u7684\u65f6\u5019\uff0c\u4ecd\u6709\u57fa\u672c\u7684\u5904\u7406\u80fd\u529b\uff0c\u4f8b\u5982\u5728\u4f60\u7684\u624b\u673a\u4e0a\uff0c\u80fd\u591f\u7528\u5bf9\u8bdd\u754c\u9762\u68c0\u67e5\u4f60\u7684\u7cfb\u7edf\u72b6\u6001\u3002 \u672c\u6559\u7a0b\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u7b2c\u4e00\u90e8\u5206\u662f\u6784\u5efa\u7528 Prometheus \u548c Grafana \u76d1\u63a7 Kafka \u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u7b2c\u4e8c\u90e8\u5206\u5c06\u7528 Python \u5efa\u7acb\u4e00\u4e2a\u7b80\u5355\u7684\u673a\u5668\u4eba\uff0c\u5b83\u53ef\u4ee5\u54cd\u5e94\u4e00\u4e9b\u95ee\u9898\u5e76\u901a\u8fc7 Slack \u8fd4\u56de Grafana \u7684\u56fe\u8868\u3002 \u6d88\u606f\u901a\u77e5\u662f Grafana \u7684\u4e00\u4e2a\u539f\u751f\u529f\u80fd\uff0c\u5177\u6709\u5411 Slack \u9891\u9053\u53d1\u9001\u62a5\u8b66\u4fe1\u606f\u7684\u80fd\u529b\uff0cSlack bot \u80fd\u591f\u54cd\u5e94\u5173\u4e8e\u7cfb\u7edf\u72b6\u6001\u7684\u7b80\u5355\u95ee\u9898\uff0c\u4ee5\u534f\u52a9\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002 \u6211\u4eec\u7684\u76ee\u6807\u662f\u8bbe\u8ba1\u4e00\u4e2a\u5728\u9632\u706b\u5899\u73af\u5883\u4e0b\u8fd0\u884c\u7684\u5de5\u5177\uff0c\u4e0d\u9700\u8981\u4ee3\u7406\u8bbf\u95ee\uff0c\u4e5f\u4e0d\u9700\u8981\u8bbf\u95ee\u4efb\u4f55\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u5982 Amazon S3\u3002\u56e0\u6b64\uff0c\u56fe\u8868\u7684\u56fe\u50cf\u5728\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e2d\u751f\u6210\uff0c\u5e76\u4f5c\u4e3a\u9644\u4ef6\u4e0a\u4f20\u5230 Slack\uff0c\u4ee5\u907f\u514d\u5728\u516c\u5171\u57fa\u7840\u8bbe\u65bd\u4e0a\u6258\u7ba1\u3002 \u7ec4\u4ef6 \u4e3b\u8981\u5305\u542b\u7684\u7ec4\u4ef6\u5982\u4e0b\u6240\u793a\uff1a Kafka\uff1a\u4e00\u4e2a\u6d88\u606f\u6d41\u5e73\u53f0\u3002 Prometheus\uff1a\u4e00\u79cd\u76d1\u63a7\u7cfb\u7edf\uff0c\u7528\u4e8e\u6309\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u6536\u96c6\u6307\u6807\uff0c\u8bc4\u4f30\u89c4\u5219\u5e76\u89e6\u53d1\u8b66\u62a5\u3002 prometheus-jmx-exporter \uff1aPrometheus Exporter\uff0c\u53ef\u4ee5\u6293\u53d6\u5e76\u66b4\u9732 JMX \u6570\u636e\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u80fd\u591f\u4ece Kafka \u6536\u96c6\u6307\u6807\u6570\u636e\u3002 Grafana \uff1a\u4e00\u4e2a\u53ef\u89c6\u5316\u5e73\u53f0\uff0c\u901a\u5e38\u7528\u4e8e\u53ef\u89c6\u5316\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u4ee5\u7528\u4e8e\u57fa\u7840\u7ed3\u6784\u548c\u5e94\u7528\u7a0b\u5e8f\u5206\u6790\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u4ee5\u56fe\u5f62\u65b9\u5f0f\u663e\u793a\u6536\u96c6\u7684\u6307\u6807\u3002 Slack\uff1a\u6d88\u606f\u4f20\u9012\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u4e0e\u804a\u5929\u673a\u5668\u4eba\u8fdb\u884c\u4ea4\u4e92\u3002 Slack bot\uff1a\u4e0b\u9762\u7684\u7b2c\u4e8c\u90e8\u5206\u4e2d\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 Python \u811a\u672c\uff0c\u8be5\u811a\u672c\u53ef\u4ee5\u4ece Grafana \u68c0\u7d22\u56fe\u5f62\u5e76\u5c06\u5176\u4e0a\u4f20\u5230 Slack\u3002 \u8fd9\u4e9b\u6b65\u9aa4\u57fa\u4e8e\u5bf9 Kafka \u7684\u76d1\u63a7\uff0c\u4f46\u662f\u53ef\u4ee5\u91c7\u7528\u76f8\u540c\u7684\u901a\u7528\u65b9\u6cd5\u6765\u4e0e\u5176\u4ed6\u670d\u52a1\u96c6\u6210\u3002 \u5b8c\u6574\u7684\u4ee3\u7801\u53ef\u4ee5\u5728 https://github.com/lucrussell/slack-chatops \u8fd9\u91cc\u627e\u5230\u3002 \u76d1\u63a7\u7ec4\u4ef6 \u6211\u4eec\u5c06\u4f7f\u7528 Grafana \u548c Prometheus \u6765\u5efa\u7acb\u4e00\u4e2a\u76d1\u63a7\u6808\u3002\u8981\u76d1\u63a7\u7684\u670d\u52a1\u662f Kafka\uff0c \u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6865\u6881\uff0c\u5c06 JMX \u6570\u636e\u4ece Kafka \u5bfc\u51fa\u5230 Prometheus \u3002 prometheus-jmx-exporter \u8fd9\u4e2a Docker \u955c\u50cf\u5c31\u53ef\u4ee5\u5f88\u597d\u5730\u6ee1\u8db3\u4e86\u8fd9\u4e2a\u4f5c\u7528\u3002\u8fd9\u4e2a\u670d\u52a1\u4ece Kafka \u7684 JMX \u670d\u52a1\u4e2d\u63d0\u53d6\u6307\u6807\uff0c\u5e76\u901a\u8fc7 HTTP \u66b4\u9732\u8fd9\u4e9b\u6307\u6807\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u88ab Prometheus \u6293\u53d6 \u3002 \u4e3a\u4e86\u5728 Kafka \u670d\u52a1\u5668\u4e2d\u542f\u7528 JMX \u6307\u6807\uff0c\u6211\u4eec\u9700\u8981\u5bf9 Kafka \u670d\u52a1\u505a\u4e00\u4e9b\u8bbe\u7f6e\uff0c\u5e76\u5c06 kafka-jmx-exporter \u5bb9\u5668\u4e0e Kafka \u670d\u52a1\u8fde\u63a5\u8d77\u6765\u3002 \u786e\u4fdd\u5728 kafka \u5bb9\u5668\u4e0a\u8bbe\u7f6e KAFKA_JMX_OPTS \u548c JMX_PORT \u73af\u5883\u53d8\u91cf \u786e\u4fdd kafka-jmx-exporter \u548c kafka \u5bb9\u5668\u5728\u540c\u4e00\u4e2a\u7f51\u7edc\u4e0a \u786e\u4fdd kafka-jmx-exporter \u5bb9\u5668\u7684 JMX_HOST \u503c\u4e0e kafka \u5bb9\u5668\u4e0a\u7684 KAFKA_ADVERTISED_HOST_NAME \u5339\u914d \u786e\u4fdd KAFKA_ADVERTISED_HOST_NAME \u5728 /etc/hosts \u4e2d\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u6761\u76ee \u3002 \u5c06 wurstmeister/kafka \u7684\u7248\u672c\u56fa\u5b9a\uff0c\u5728 wurstmeister/kafka \u955c\u50cf\u7684\u65e9\u671f\u7248\u672c\u4e2d\u914d\u7f6e JMX \u53ef\u80fd\u4f1a\u6709\u95ee\u9898 \u5bf9\u5e94\u7684 docker-compose.yml \u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a kafka: image: wurstmeister/kafka:1.0.0 ports: - \"9092:9092\" - \"1099:1099\" depends_on: - zookeeper environment: - KAFKA_ADVERTISED_PORT=9092 - KAFKA_BROKER_ID=1 - KAFKA_ZOOKEEPER_CONNECT=zookeeper - KAFKA_ADVERTISED_HOST_NAME=kafka - ZOOKEEPER_CONNECTION_TIMEOUT_MS=180000 - KAFKA_CREATE_TOPICS=transactions:1:1 - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=1099 - JMX_PORT=1099 networks: - backend kafka-jmx-exporter: build: ./prometheus-jmx-exporter ports: - \"8080:8080\" links: - kafka environment: - JMX_PORT=1099 - JMX_HOST=kafka - HTTP_PORT=8080 - JMX_EXPORTER_CONFIG_FILE=kafka.yml networks: - backend prometheus: ports: - 9090:9090/tcp image: prom/prometheus:v2.0.0 volumes: - ./etc:/etc/prometheus - prometheus_data:/prometheus links: - kafka-jmx-exporter restart: always networks: - backend Grafana \u53ef\u4ee5\u88ab\u914d\u7f6e\u4e3a\u5728\u542f\u52a8\u65f6\u8bfb\u53d6\u4e00\u4e2a JSON \u4eea\u8868\u76d8\u6587\u4ef6 --\u5728 etc/Kafka.json \u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\uff0c\u9884\u5148\u914d\u7f6e\u4e86\u4e00\u4e9b Kafka \u76d1\u63a7\u4fe1\u606f\u6837\u672c\u3002 \u51c6\u5907\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 docker-compose up -d \u547d\u4ee4\u6765\u542f\u52a8\uff0c\u7136\u540e\u7528 kafkacat \u5411 Kafka \u53d1\u9001\u4e00\u4e9b\u6d88\u606f\u3002 for i in `seq 1 3`; do echo \"hello\" | kafkacat -b kafka:9092 -t transactions done \u5728 http://localhost:3000 \u67e5\u770b Kafka \u4eea\u8868\u76d8\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u9762\u677f\u3002 \u6784\u5efa Slack \u673a\u5668\u4eba \u6709\u4e86\u76d1\u63a7\u57fa\u7840\u8bbe\u65bd\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u7f16\u5199\u7b80\u5355\u7684 Slack \u673a\u5668\u4eba\u4e86\u3002 \u7b2c\u4e00\u6b65\u662f\u5728 Slack \u7f51\u7ad9\u4e0a\u521b\u5efa\u548c\u6ce8\u518c\u673a\u5668\u4eba\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u767b\u5f55 Slack\uff0c\u8fdb\u5165 https://api.slack.com/bot-users\uff0c\u7136\u540e\u5728\u8be5\u9875\u9762\u4e0a\u641c\u7d22 new bot user integration \u6b64\u5916\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7ec6\u8282\uff0c\u4f8b\u5982\u4e3a\u673a\u5668\u4eba\u6dfb\u52a0\u4e00\u4e2a\u56fe\u6807\u548c\u63cf\u8ff0\u3002\u5f53\u4f60\u7684\u673a\u5668\u4eba\u88ab\u521b\u5efa\u540e\uff0c\u63a5\u7740\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u79c1\u4eba\u9891\u9053\u8fdb\u884c\u6d4b\u8bd5\u3002 \u7136\u540e\u53ef\u4ee5\u4f7f\u7528 /invite @handy_bot \u9080\u8bf7\u673a\u5668\u4eba\u5230\u6d4b\u8bd5\u9891\u9053 \u3002 \u6211\u4eec\u7684\u673a\u5668\u4eba\u5c06\u56de\u7b54\u51e0\u4e2a\u7b80\u5355\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u5728\u7b2c1-3\u884c\u5b9a\u4e49\u3002 self.respond_to = ['list graph shortcuts', 'graph <shortcut>', 'help'] self.help_msg = '```\\n' for answer in self.respond_to: self.help_msg += f'{answer}\\n' self.help_msg += '```' \u5728 app.py \u4e2d\uff0c\u6211\u4eec\u5c06\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u5e76\u542f\u52a8\u673a\u5668\u4eba\u3002 def main(arguments=None): if not arguments: arguments = docopt(__doc__) config = configure(arguments['--config-file']) mybot = SlackBot(config) mybot.start() \u5176\u4e2d\u7684 start \u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a def start(self): if self.slack_client.rtm_connect(): print(\"Bot is alive and listening for messages...\") while True: events = self.slack_client.rtm_read() for event in events: if event.get('type') == 'message': # If we received a message, read it and respond if necessary self.on_message(event) time.sleep(1) \u7b2c2\u884c\uff1a\u4e0e Slack \u7684 API \u5efa\u7acb\u8fde\u63a5 \u7b2c5\u884c\uff1a\u4ee5\u6307\u5b9a\u7684\u9891\u7387\uff081\u79d2\uff09\u8f6e\u8be2\uff0c\u68c0\u67e5\u662f\u5426\u6709\u4efb\u4f55\u65b0\u4e8b\u4ef6 \u7b2c7\u884c\uff1a\u5982\u679c\u4e8b\u4ef6\u662f\u4e00\u4e2a message\uff0c\u5219\u8fdb\u5165 on_message \u65b9\u6cd5\uff0c\u5982\u679c\u6211\u4eec\u4ece\u8be5\u65b9\u6cd5\u5f97\u5230\u4e00\u4e2a\u54cd\u5e94\uff0c\u5219\u5c06\u5176\u6253\u5370\u51fa\u6765\uff0c\u53d1\u9001\u5230\u6d88\u606f\u53d1\u5e03\u7684\u9891\u9053\u4e2d\u3002 def on_message(self, event): ... full_text = event.get('text', '') or '' if full_text.startswith(self.bot_id): question = full_text[len(self.bot_id):] if len(question) > 0: question = question.strip().lower() channel = event['channel'] ... elif 'graph' in question: self.respond(channel, 'Please wait...', True) on_message \u65b9\u6cd5\u662f\u6211\u4eec\u51b3\u5b9a\u5982\u4f55\u56de\u5e94\u673a\u5668\u4eba\u6536\u5230\u7684\u6d88\u606f\u7684\u5730\u65b9\u3002 generate_and_upload_graph \u662f\u6700\u6709\u8da3\u7684\u51fd\u6570\uff0c\u8fd9\u91cc\u6211\u4eec\u7684\u60f3\u6cd5\u662f\u542f\u52a8\u4e00\u4e2a\u4e34\u65f6\u7684 Docker \u5bb9\u5668\u6765\u6355\u83b7\u5c4f\u5e55\u622a\u56fe\u3002 Grafana \u786e\u5b9e\u6709\u80fd\u529b\u5c06\u4efb\u4f55\u56fe\u5f62\u6e32\u67d3\u6210 PNG \u6587\u4ef6\uff0c\u7136\u800c\uff0c\u5728 Grafana \u7684\u6700\u65b0\u7248\u672c\u4e2d\uff0c\u5185\u90e8\u7528\u4e8e\u751f\u6210\u56fe\u7247\u7684 phantomjs \u5e93\u4f3c\u4e4e\u51fa\u73b0\u4e86\u9519\u8bef\u3002 \u4e00\u4e2a\u66f4\u53ef\u9760\u7684 headless \u6d4f\u89c8\u5de5\u5177\u662f\u57fa\u4e8e Google Chrome \u7684 Puppeteer\uff0c\u6709\u4eba\u5df2\u7ecf\u628a\u5b83\u5305\u88c5\u5728 Docker \u955c\u50cf\u4e2d\u4e86\u3002\u8fd9\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u5b9e\u9a8c Docker Python API \u7684\u673a\u4f1a\u3002 def generate_and_upload_graph(self, filename, url, channel): dir_name = os.path.dirname(os.path.abspath(__file__)) client = docker.APIClient() container = client.create_container( image='alekzonder/puppeteer:1.0.0', command=f'screenshot \\'{url}\\' 1366x768', volumes=[dir_name], host_config=client.create_host_config(binds={ dir_name: { 'bind': '/screenshots' } }, network_mode='host') ) files1 = prepare_dir(dir_name) client.start(container) # Poll for new files while True: time.sleep(2) files2 = os.listdir(dir_name) new = [f for f in files2 if all([f not in files1, f.endswith(\".png\")])] for f in new: with open(f, 'rb') as in_file: ret = self.slack_client.api_call( \"files.upload\", filename=filename, channels=channel, title=filename, file=io.BytesIO(in_file.read())) if 'ok' not in ret or not ret['ok']: print('File upload failed %s', ret['error']) os.remove(f) break \u7b2c6:16\u884c\uff1a\u4f7f\u7528 Docker Python API \u52a8\u6001\u5730\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e alekzonder/puppeteer \u955c\u50cf\u7684\u5bb9\u5668\u3002 \u7b2c13\u884c\uff1a\u5c06\u5f53\u524d\u76ee\u5f55\u4e0e\u5bb9\u5668\u4e2d\u7684 /screenshots \u6302\u8f7d\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6587\u4ef6\u5199\u5165\u53ef\u8bbf\u95ee\u7684\u5730\u65b9\u3002 \u7b2c15\u884c\uff1a\u8bbe\u7f6e network_mode=host \uff0c\u8fd9\u6837\u5bb9\u5668\u5c31\u53ef\u4ee5\u5728 localhost \u4e0a\u8bbf\u95ee Grafana\u3002 \u7b2c23:38\u884c\uff1a\u89c2\u5bdf\u65b0\u7684\u56fe\u7247\u88ab\u6dfb\u52a0\u5230\u76ee\u5f55\u4e2d\uff0c\u5e76\u4e0a\u4f20\u5b83\u4eec\u3002 \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u542f\u52a8\u673a\u5668\u4eba\u4e86\uff0c\u5728 slackbot \u76ee\u5f55\u4e2d\u3002 $ python bot.py --config=config.yaml Bot is alive and listening for messages... \u673a\u5668\u4eba\u53ef\u4ee5\u54cd\u5e94\u4e00\u4e9b\u57fa\u672c\u7684\u8bf7\u6c42\uff0c\u5982\u4e0b\u6240\u793a\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u4f60\u60f3\u8981\u76d1\u63a7\u7684\u7279\u5b9a\u7cfb\u7edf\u6765\u5b9a\u5236\u673a\u5668\u4eba\u7684\u80fd\u529b\u3002 \u7ed3\u8bba ChatOps \u673a\u5668\u4eba\u53ef\u4ee5\u6210\u4e3a\u6709\u7528\u7684\u52a9\u624b\uff0c\u5e2e\u52a9\u4f60\u8fd0\u7ef4\u8fd0\u884c\u4e2d\u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u4e00\u4e2a\u7b80\u5316\u7684\u793a\u4f8b\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u6269\u5c55\u5230\u652f\u6301\u66f4\u590d\u6742\u7684\u573a\u666f\u3002 \u5229\u7528 Docker API \u6765\u52a8\u6001\u521b\u5efa\u5bb9\u5668\u662f\u4e00\u79cd\u590d\u6742\u7684\u622a\u56fe\u673a\u5236\uff0c\u4f46\u5f53\u4f60\u9700\u8981\u5feb\u901f\u4e3a\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u4e00\u4e2a\u5df2\u7ecf\u88ab\u5305\u88c5\u6210 Docker \u955c\u50cf\u7684\u529f\u80fd\u65f6\uff0c\u8fd9\u4f1a\u7279\u522b\u6709\u7528\u3002","title":"\u7b2c\u4e94\u8282 \u4f7f\u7528 Grafana\u3001Prometheus \u548c Slack \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 ChatOps \u673a\u5668\u4eba"},{"location":"chap2/5prom_grafana_chatops/#5-grafanaprometheus-slack-chatops","text":"\u4e00\u79cd\u6784\u5efa\u7b80\u5355\u7684 ChatOps \u673a\u5668\u4eba\u7684\u65b9\u6cd5\uff0c\u5b83\u4f7f\u7528 Slack \u548c Grafana \u6765\u67e5\u8be2\u7cfb\u7edf\u72b6\u6001\u3002\u5f53\u4f60\u4e0d\u5728\u529e\u516c\u684c\u524d\u7684\u65f6\u5019\uff0c\u4ecd\u6709\u57fa\u672c\u7684\u5904\u7406\u80fd\u529b\uff0c\u4f8b\u5982\u5728\u4f60\u7684\u624b\u673a\u4e0a\uff0c\u80fd\u591f\u7528\u5bf9\u8bdd\u754c\u9762\u68c0\u67e5\u4f60\u7684\u7cfb\u7edf\u72b6\u6001\u3002 \u672c\u6559\u7a0b\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u7b2c\u4e00\u90e8\u5206\u662f\u6784\u5efa\u7528 Prometheus \u548c Grafana \u76d1\u63a7 Kafka \u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u7b2c\u4e8c\u90e8\u5206\u5c06\u7528 Python \u5efa\u7acb\u4e00\u4e2a\u7b80\u5355\u7684\u673a\u5668\u4eba\uff0c\u5b83\u53ef\u4ee5\u54cd\u5e94\u4e00\u4e9b\u95ee\u9898\u5e76\u901a\u8fc7 Slack \u8fd4\u56de Grafana \u7684\u56fe\u8868\u3002 \u6d88\u606f\u901a\u77e5\u662f Grafana \u7684\u4e00\u4e2a\u539f\u751f\u529f\u80fd\uff0c\u5177\u6709\u5411 Slack \u9891\u9053\u53d1\u9001\u62a5\u8b66\u4fe1\u606f\u7684\u80fd\u529b\uff0cSlack bot \u80fd\u591f\u54cd\u5e94\u5173\u4e8e\u7cfb\u7edf\u72b6\u6001\u7684\u7b80\u5355\u95ee\u9898\uff0c\u4ee5\u534f\u52a9\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002 \u6211\u4eec\u7684\u76ee\u6807\u662f\u8bbe\u8ba1\u4e00\u4e2a\u5728\u9632\u706b\u5899\u73af\u5883\u4e0b\u8fd0\u884c\u7684\u5de5\u5177\uff0c\u4e0d\u9700\u8981\u4ee3\u7406\u8bbf\u95ee\uff0c\u4e5f\u4e0d\u9700\u8981\u8bbf\u95ee\u4efb\u4f55\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u5982 Amazon S3\u3002\u56e0\u6b64\uff0c\u56fe\u8868\u7684\u56fe\u50cf\u5728\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e2d\u751f\u6210\uff0c\u5e76\u4f5c\u4e3a\u9644\u4ef6\u4e0a\u4f20\u5230 Slack\uff0c\u4ee5\u907f\u514d\u5728\u516c\u5171\u57fa\u7840\u8bbe\u65bd\u4e0a\u6258\u7ba1\u3002","title":"5 \u4f7f\u7528 Grafana\u3001Prometheus \u548c Slack \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 ChatOps \u673a\u5668\u4eba"},{"location":"chap2/5prom_grafana_chatops/#_1","text":"\u4e3b\u8981\u5305\u542b\u7684\u7ec4\u4ef6\u5982\u4e0b\u6240\u793a\uff1a Kafka\uff1a\u4e00\u4e2a\u6d88\u606f\u6d41\u5e73\u53f0\u3002 Prometheus\uff1a\u4e00\u79cd\u76d1\u63a7\u7cfb\u7edf\uff0c\u7528\u4e8e\u6309\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u6536\u96c6\u6307\u6807\uff0c\u8bc4\u4f30\u89c4\u5219\u5e76\u89e6\u53d1\u8b66\u62a5\u3002 prometheus-jmx-exporter \uff1aPrometheus Exporter\uff0c\u53ef\u4ee5\u6293\u53d6\u5e76\u66b4\u9732 JMX \u6570\u636e\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u80fd\u591f\u4ece Kafka \u6536\u96c6\u6307\u6807\u6570\u636e\u3002 Grafana \uff1a\u4e00\u4e2a\u53ef\u89c6\u5316\u5e73\u53f0\uff0c\u901a\u5e38\u7528\u4e8e\u53ef\u89c6\u5316\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u4ee5\u7528\u4e8e\u57fa\u7840\u7ed3\u6784\u548c\u5e94\u7528\u7a0b\u5e8f\u5206\u6790\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u4ee5\u56fe\u5f62\u65b9\u5f0f\u663e\u793a\u6536\u96c6\u7684\u6307\u6807\u3002 Slack\uff1a\u6d88\u606f\u4f20\u9012\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u4e0e\u804a\u5929\u673a\u5668\u4eba\u8fdb\u884c\u4ea4\u4e92\u3002 Slack bot\uff1a\u4e0b\u9762\u7684\u7b2c\u4e8c\u90e8\u5206\u4e2d\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 Python \u811a\u672c\uff0c\u8be5\u811a\u672c\u53ef\u4ee5\u4ece Grafana \u68c0\u7d22\u56fe\u5f62\u5e76\u5c06\u5176\u4e0a\u4f20\u5230 Slack\u3002 \u8fd9\u4e9b\u6b65\u9aa4\u57fa\u4e8e\u5bf9 Kafka \u7684\u76d1\u63a7\uff0c\u4f46\u662f\u53ef\u4ee5\u91c7\u7528\u76f8\u540c\u7684\u901a\u7528\u65b9\u6cd5\u6765\u4e0e\u5176\u4ed6\u670d\u52a1\u96c6\u6210\u3002 \u5b8c\u6574\u7684\u4ee3\u7801\u53ef\u4ee5\u5728 https://github.com/lucrussell/slack-chatops \u8fd9\u91cc\u627e\u5230\u3002","title":"\u7ec4\u4ef6"},{"location":"chap2/5prom_grafana_chatops/#_2","text":"\u6211\u4eec\u5c06\u4f7f\u7528 Grafana \u548c Prometheus \u6765\u5efa\u7acb\u4e00\u4e2a\u76d1\u63a7\u6808\u3002\u8981\u76d1\u63a7\u7684\u670d\u52a1\u662f Kafka\uff0c \u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6865\u6881\uff0c\u5c06 JMX \u6570\u636e\u4ece Kafka \u5bfc\u51fa\u5230 Prometheus \u3002 prometheus-jmx-exporter \u8fd9\u4e2a Docker \u955c\u50cf\u5c31\u53ef\u4ee5\u5f88\u597d\u5730\u6ee1\u8db3\u4e86\u8fd9\u4e2a\u4f5c\u7528\u3002\u8fd9\u4e2a\u670d\u52a1\u4ece Kafka \u7684 JMX \u670d\u52a1\u4e2d\u63d0\u53d6\u6307\u6807\uff0c\u5e76\u901a\u8fc7 HTTP \u66b4\u9732\u8fd9\u4e9b\u6307\u6807\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u88ab Prometheus \u6293\u53d6 \u3002 \u4e3a\u4e86\u5728 Kafka \u670d\u52a1\u5668\u4e2d\u542f\u7528 JMX \u6307\u6807\uff0c\u6211\u4eec\u9700\u8981\u5bf9 Kafka \u670d\u52a1\u505a\u4e00\u4e9b\u8bbe\u7f6e\uff0c\u5e76\u5c06 kafka-jmx-exporter \u5bb9\u5668\u4e0e Kafka \u670d\u52a1\u8fde\u63a5\u8d77\u6765\u3002 \u786e\u4fdd\u5728 kafka \u5bb9\u5668\u4e0a\u8bbe\u7f6e KAFKA_JMX_OPTS \u548c JMX_PORT \u73af\u5883\u53d8\u91cf \u786e\u4fdd kafka-jmx-exporter \u548c kafka \u5bb9\u5668\u5728\u540c\u4e00\u4e2a\u7f51\u7edc\u4e0a \u786e\u4fdd kafka-jmx-exporter \u5bb9\u5668\u7684 JMX_HOST \u503c\u4e0e kafka \u5bb9\u5668\u4e0a\u7684 KAFKA_ADVERTISED_HOST_NAME \u5339\u914d \u786e\u4fdd KAFKA_ADVERTISED_HOST_NAME \u5728 /etc/hosts \u4e2d\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u6761\u76ee \u3002 \u5c06 wurstmeister/kafka \u7684\u7248\u672c\u56fa\u5b9a\uff0c\u5728 wurstmeister/kafka \u955c\u50cf\u7684\u65e9\u671f\u7248\u672c\u4e2d\u914d\u7f6e JMX \u53ef\u80fd\u4f1a\u6709\u95ee\u9898 \u5bf9\u5e94\u7684 docker-compose.yml \u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a kafka: image: wurstmeister/kafka:1.0.0 ports: - \"9092:9092\" - \"1099:1099\" depends_on: - zookeeper environment: - KAFKA_ADVERTISED_PORT=9092 - KAFKA_BROKER_ID=1 - KAFKA_ZOOKEEPER_CONNECT=zookeeper - KAFKA_ADVERTISED_HOST_NAME=kafka - ZOOKEEPER_CONNECTION_TIMEOUT_MS=180000 - KAFKA_CREATE_TOPICS=transactions:1:1 - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=1099 - JMX_PORT=1099 networks: - backend kafka-jmx-exporter: build: ./prometheus-jmx-exporter ports: - \"8080:8080\" links: - kafka environment: - JMX_PORT=1099 - JMX_HOST=kafka - HTTP_PORT=8080 - JMX_EXPORTER_CONFIG_FILE=kafka.yml networks: - backend prometheus: ports: - 9090:9090/tcp image: prom/prometheus:v2.0.0 volumes: - ./etc:/etc/prometheus - prometheus_data:/prometheus links: - kafka-jmx-exporter restart: always networks: - backend Grafana \u53ef\u4ee5\u88ab\u914d\u7f6e\u4e3a\u5728\u542f\u52a8\u65f6\u8bfb\u53d6\u4e00\u4e2a JSON \u4eea\u8868\u76d8\u6587\u4ef6 --\u5728 etc/Kafka.json \u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\uff0c\u9884\u5148\u914d\u7f6e\u4e86\u4e00\u4e9b Kafka \u76d1\u63a7\u4fe1\u606f\u6837\u672c\u3002 \u51c6\u5907\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 docker-compose up -d \u547d\u4ee4\u6765\u542f\u52a8\uff0c\u7136\u540e\u7528 kafkacat \u5411 Kafka \u53d1\u9001\u4e00\u4e9b\u6d88\u606f\u3002 for i in `seq 1 3`; do echo \"hello\" | kafkacat -b kafka:9092 -t transactions done \u5728 http://localhost:3000 \u67e5\u770b Kafka \u4eea\u8868\u76d8\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u9762\u677f\u3002","title":"\u76d1\u63a7\u7ec4\u4ef6"},{"location":"chap2/5prom_grafana_chatops/#slack","text":"\u6709\u4e86\u76d1\u63a7\u57fa\u7840\u8bbe\u65bd\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u7f16\u5199\u7b80\u5355\u7684 Slack \u673a\u5668\u4eba\u4e86\u3002 \u7b2c\u4e00\u6b65\u662f\u5728 Slack \u7f51\u7ad9\u4e0a\u521b\u5efa\u548c\u6ce8\u518c\u673a\u5668\u4eba\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u767b\u5f55 Slack\uff0c\u8fdb\u5165 https://api.slack.com/bot-users\uff0c\u7136\u540e\u5728\u8be5\u9875\u9762\u4e0a\u641c\u7d22 new bot user integration \u6b64\u5916\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7ec6\u8282\uff0c\u4f8b\u5982\u4e3a\u673a\u5668\u4eba\u6dfb\u52a0\u4e00\u4e2a\u56fe\u6807\u548c\u63cf\u8ff0\u3002\u5f53\u4f60\u7684\u673a\u5668\u4eba\u88ab\u521b\u5efa\u540e\uff0c\u63a5\u7740\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u79c1\u4eba\u9891\u9053\u8fdb\u884c\u6d4b\u8bd5\u3002 \u7136\u540e\u53ef\u4ee5\u4f7f\u7528 /invite @handy_bot \u9080\u8bf7\u673a\u5668\u4eba\u5230\u6d4b\u8bd5\u9891\u9053 \u3002 \u6211\u4eec\u7684\u673a\u5668\u4eba\u5c06\u56de\u7b54\u51e0\u4e2a\u7b80\u5355\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u5728\u7b2c1-3\u884c\u5b9a\u4e49\u3002 self.respond_to = ['list graph shortcuts', 'graph <shortcut>', 'help'] self.help_msg = '```\\n' for answer in self.respond_to: self.help_msg += f'{answer}\\n' self.help_msg += '```' \u5728 app.py \u4e2d\uff0c\u6211\u4eec\u5c06\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u5e76\u542f\u52a8\u673a\u5668\u4eba\u3002 def main(arguments=None): if not arguments: arguments = docopt(__doc__) config = configure(arguments['--config-file']) mybot = SlackBot(config) mybot.start() \u5176\u4e2d\u7684 start \u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a def start(self): if self.slack_client.rtm_connect(): print(\"Bot is alive and listening for messages...\") while True: events = self.slack_client.rtm_read() for event in events: if event.get('type') == 'message': # If we received a message, read it and respond if necessary self.on_message(event) time.sleep(1) \u7b2c2\u884c\uff1a\u4e0e Slack \u7684 API \u5efa\u7acb\u8fde\u63a5 \u7b2c5\u884c\uff1a\u4ee5\u6307\u5b9a\u7684\u9891\u7387\uff081\u79d2\uff09\u8f6e\u8be2\uff0c\u68c0\u67e5\u662f\u5426\u6709\u4efb\u4f55\u65b0\u4e8b\u4ef6 \u7b2c7\u884c\uff1a\u5982\u679c\u4e8b\u4ef6\u662f\u4e00\u4e2a message\uff0c\u5219\u8fdb\u5165 on_message \u65b9\u6cd5\uff0c\u5982\u679c\u6211\u4eec\u4ece\u8be5\u65b9\u6cd5\u5f97\u5230\u4e00\u4e2a\u54cd\u5e94\uff0c\u5219\u5c06\u5176\u6253\u5370\u51fa\u6765\uff0c\u53d1\u9001\u5230\u6d88\u606f\u53d1\u5e03\u7684\u9891\u9053\u4e2d\u3002 def on_message(self, event): ... full_text = event.get('text', '') or '' if full_text.startswith(self.bot_id): question = full_text[len(self.bot_id):] if len(question) > 0: question = question.strip().lower() channel = event['channel'] ... elif 'graph' in question: self.respond(channel, 'Please wait...', True) on_message \u65b9\u6cd5\u662f\u6211\u4eec\u51b3\u5b9a\u5982\u4f55\u56de\u5e94\u673a\u5668\u4eba\u6536\u5230\u7684\u6d88\u606f\u7684\u5730\u65b9\u3002 generate_and_upload_graph \u662f\u6700\u6709\u8da3\u7684\u51fd\u6570\uff0c\u8fd9\u91cc\u6211\u4eec\u7684\u60f3\u6cd5\u662f\u542f\u52a8\u4e00\u4e2a\u4e34\u65f6\u7684 Docker \u5bb9\u5668\u6765\u6355\u83b7\u5c4f\u5e55\u622a\u56fe\u3002 Grafana \u786e\u5b9e\u6709\u80fd\u529b\u5c06\u4efb\u4f55\u56fe\u5f62\u6e32\u67d3\u6210 PNG \u6587\u4ef6\uff0c\u7136\u800c\uff0c\u5728 Grafana \u7684\u6700\u65b0\u7248\u672c\u4e2d\uff0c\u5185\u90e8\u7528\u4e8e\u751f\u6210\u56fe\u7247\u7684 phantomjs \u5e93\u4f3c\u4e4e\u51fa\u73b0\u4e86\u9519\u8bef\u3002 \u4e00\u4e2a\u66f4\u53ef\u9760\u7684 headless \u6d4f\u89c8\u5de5\u5177\u662f\u57fa\u4e8e Google Chrome \u7684 Puppeteer\uff0c\u6709\u4eba\u5df2\u7ecf\u628a\u5b83\u5305\u88c5\u5728 Docker \u955c\u50cf\u4e2d\u4e86\u3002\u8fd9\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u5b9e\u9a8c Docker Python API \u7684\u673a\u4f1a\u3002 def generate_and_upload_graph(self, filename, url, channel): dir_name = os.path.dirname(os.path.abspath(__file__)) client = docker.APIClient() container = client.create_container( image='alekzonder/puppeteer:1.0.0', command=f'screenshot \\'{url}\\' 1366x768', volumes=[dir_name], host_config=client.create_host_config(binds={ dir_name: { 'bind': '/screenshots' } }, network_mode='host') ) files1 = prepare_dir(dir_name) client.start(container) # Poll for new files while True: time.sleep(2) files2 = os.listdir(dir_name) new = [f for f in files2 if all([f not in files1, f.endswith(\".png\")])] for f in new: with open(f, 'rb') as in_file: ret = self.slack_client.api_call( \"files.upload\", filename=filename, channels=channel, title=filename, file=io.BytesIO(in_file.read())) if 'ok' not in ret or not ret['ok']: print('File upload failed %s', ret['error']) os.remove(f) break \u7b2c6:16\u884c\uff1a\u4f7f\u7528 Docker Python API \u52a8\u6001\u5730\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e alekzonder/puppeteer \u955c\u50cf\u7684\u5bb9\u5668\u3002 \u7b2c13\u884c\uff1a\u5c06\u5f53\u524d\u76ee\u5f55\u4e0e\u5bb9\u5668\u4e2d\u7684 /screenshots \u6302\u8f7d\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6587\u4ef6\u5199\u5165\u53ef\u8bbf\u95ee\u7684\u5730\u65b9\u3002 \u7b2c15\u884c\uff1a\u8bbe\u7f6e network_mode=host \uff0c\u8fd9\u6837\u5bb9\u5668\u5c31\u53ef\u4ee5\u5728 localhost \u4e0a\u8bbf\u95ee Grafana\u3002 \u7b2c23:38\u884c\uff1a\u89c2\u5bdf\u65b0\u7684\u56fe\u7247\u88ab\u6dfb\u52a0\u5230\u76ee\u5f55\u4e2d\uff0c\u5e76\u4e0a\u4f20\u5b83\u4eec\u3002 \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u542f\u52a8\u673a\u5668\u4eba\u4e86\uff0c\u5728 slackbot \u76ee\u5f55\u4e2d\u3002 $ python bot.py --config=config.yaml Bot is alive and listening for messages... \u673a\u5668\u4eba\u53ef\u4ee5\u54cd\u5e94\u4e00\u4e9b\u57fa\u672c\u7684\u8bf7\u6c42\uff0c\u5982\u4e0b\u6240\u793a\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u4f60\u60f3\u8981\u76d1\u63a7\u7684\u7279\u5b9a\u7cfb\u7edf\u6765\u5b9a\u5236\u673a\u5668\u4eba\u7684\u80fd\u529b\u3002","title":"\u6784\u5efa Slack \u673a\u5668\u4eba"},{"location":"chap2/5prom_grafana_chatops/#_3","text":"ChatOps \u673a\u5668\u4eba\u53ef\u4ee5\u6210\u4e3a\u6709\u7528\u7684\u52a9\u624b\uff0c\u5e2e\u52a9\u4f60\u8fd0\u7ef4\u8fd0\u884c\u4e2d\u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u4e00\u4e2a\u7b80\u5316\u7684\u793a\u4f8b\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u6269\u5c55\u5230\u652f\u6301\u66f4\u590d\u6742\u7684\u573a\u666f\u3002 \u5229\u7528 Docker API \u6765\u52a8\u6001\u521b\u5efa\u5bb9\u5668\u662f\u4e00\u79cd\u590d\u6742\u7684\u622a\u56fe\u673a\u5236\uff0c\u4f46\u5f53\u4f60\u9700\u8981\u5feb\u901f\u4e3a\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u4e00\u4e2a\u5df2\u7ecf\u88ab\u5305\u88c5\u6210 Docker \u955c\u50cf\u7684\u529f\u80fd\u65f6\uff0c\u8fd9\u4f1a\u7279\u522b\u6709\u7528\u3002","title":"\u7ed3\u8bba"},{"location":"chap3/10Adv_k8s_AlertManger/","text":"\u7b2c\u4e5d\u8282 \u62a5\u8b66\u795e\u5668 AlertManager \u7684\u4f7f\u7528 \u7b80\u4ecb \u4e4b\u524d\u6211\u4eec\u5b66\u4e60 Prometheus \u7684\u65f6\u5019\u5c31\u4e86\u89e3\u5230 Prometheus \u5305\u542b\u4e00\u4e2a \u62a5\u8b66\u6a21\u5757 \uff0c\u5c31\u662f\u6211\u4eec\u7684 AlertManager \uff0c Alertmanager \u4e3b\u8981\u7528\u4e8e\u63a5\u6536 Prometheus \u53d1\u9001\u7684\u544a\u8b66\u4fe1\u606f\uff0c\u5b83\u652f\u6301\u4e30\u5bcc\u7684\u544a\u8b66\u901a\u77e5\u6e20\u9053\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u505a\u5230\u544a\u8b66\u4fe1\u606f\u8fdb\u884c \u53bb\u91cd\uff0c\u964d\u566a\uff0c\u5206\u7ec4 \u7b49\uff0c\u662f\u4e00\u6b3e\u524d\u536b\u7684\u544a\u8b66\u901a\u77e5\u7cfb\u7edf\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5b66\u4e60\u4e0b AlertManager \u7684\u5177\u4f53\u4f7f\u7528\u65b9\u6cd5\u3002 1 \u5b89\u88c5 \u4ece\u5b98\u65b9\u6587\u6863 https://prometheus.io/docs/alerting/configuration/ \u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0b\u8f7d AlertManager \u4e8c\u8fdb\u5236\u6587\u4ef6\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u8fd0\u884c\uff1a $ ./alertmanager --config.file=simple.yml \u5176\u4e2d -config.file \u53c2\u6570\u662f\u7528\u6765\u6307\u5b9a\u5bf9\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u7684\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u540c\u6837\u8981\u8fd0\u884c\u5230 Kubernetes \u96c6\u7fa4\u4e2d\u6765. \u6240\u4ee5\u6211\u4eec\u4f7f\u7528 docker \u955c\u50cf\u7684\u65b9\u5f0f\u6765\u5b89\u88c5\uff0c\u4f7f\u7528\u7684\u955c\u50cf\u662f\uff1a prom/alertmanager:v0.15.3 \u3002 \u9996\u5148\uff0c\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\uff0c\u540c\u6837\u7684\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff1a( alertmanager-conf.yaml ) apiVersion: v1 kind: ConfigMap metadata: name: alert-config namespace: kube-ops data: config.yml: |- global: # \u5728\u6ca1\u6709\u62a5\u8b66\u7684\u60c5\u51b5\u4e0b\u58f0\u660e\u4e3a\u5df2\u89e3\u51b3\u7684\u65f6\u95f4 resolve_timeout: 5m # \u914d\u7f6e\u90ae\u4ef6\u53d1\u9001\u4fe1\u606f smtp_smarthost: 'smtp.gmail.com' smtp_from: 'xichao2014@gmail.com' smtp_auth_username: 'xichao2014@gmail.com' smtp_auth_password: '<\u90ae\u7bb1\u5bc6\u7801>' smtp_hello: 'gmail.com' smtp_require_tls: false # \u6240\u6709\u62a5\u8b66\u4fe1\u606f\u8fdb\u5165\u540e\u7684\u6839\u8def\u7531\uff0c\u7528\u6765\u8bbe\u7f6e\u62a5\u8b66\u7684\u5206\u53d1\u7b56\u7565 route: # \u8fd9\u91cc\u7684\u6807\u7b7e\u5217\u8868\u662f\u63a5\u6536\u5230\u62a5\u8b66\u4fe1\u606f\u540e\u7684\u91cd\u65b0\u5206\u7ec4\u6807\u7b7e\uff0c\u4f8b\u5982\uff0c\u63a5\u6536\u5230\u7684\u62a5\u8b66\u4fe1\u606f\u91cc\u9762\u6709\u8bb8\u591a\u5177\u6709 cluster=A \u548c alertname=LatncyHigh \u8fd9\u6837\u7684\u6807\u7b7e\u7684\u62a5\u8b66\u4fe1\u606f\u5c06\u4f1a\u6279\u91cf\u88ab\u805a\u5408\u5230\u4e00\u4e2a\u5206\u7ec4\u91cc\u9762 group_by: ['alertname', 'cluster'] # \u5f53\u4e00\u4e2a\u65b0\u7684\u62a5\u8b66\u5206\u7ec4\u88ab\u521b\u5efa\u540e\uff0c\u9700\u8981\u7b49\u5f85\u81f3\u5c11group_wait\u65f6\u95f4\u6765\u521d\u59cb\u5316\u901a\u77e5\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u786e\u4fdd\u60a8\u80fd\u6709\u8db3\u591f\u7684\u65f6\u95f4\u4e3a\u540c\u4e00\u5206\u7ec4\u6765\u83b7\u53d6\u591a\u4e2a\u8b66\u62a5\uff0c\u7136\u540e\u4e00\u8d77\u89e6\u53d1\u8fd9\u4e2a\u62a5\u8b66\u4fe1\u606f\u3002 group_wait: 30s # \u5f53\u7b2c\u4e00\u4e2a\u62a5\u8b66\u53d1\u9001\u540e\uff0c\u7b49\u5f85'group_interval'\u65f6\u95f4\u6765\u53d1\u9001\u65b0\u7684\u4e00\u7ec4\u62a5\u8b66\u4fe1\u606f\u3002 group_interval: 5m # \u5982\u679c\u4e00\u4e2a\u62a5\u8b66\u4fe1\u606f\u5df2\u7ecf\u53d1\u9001\u6210\u529f\u4e86\uff0c\u7b49\u5f85'repeat_interval'\u65f6\u95f4\u6765\u91cd\u65b0\u53d1\u9001\u4ed6\u4eec repeat_interval: 5m # \u9ed8\u8ba4\u7684receiver\uff1a\u5982\u679c\u4e00\u4e2a\u62a5\u8b66\u6ca1\u6709\u88ab\u4e00\u4e2aroute\u5339\u914d\uff0c\u5219\u53d1\u9001\u7ed9\u9ed8\u8ba4\u7684\u63a5\u6536\u5668 receiver: default # \u4e0a\u9762\u6240\u6709\u7684\u5c5e\u6027\u90fd\u7531\u6240\u6709\u5b50\u8def\u7531\u7ee7\u627f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5b50\u8def\u7531\u4e0a\u8fdb\u884c\u8986\u76d6\u3002 routes: - receiver: email group_wait: 10s match: team: node receivers: - name: 'default' email_configs: - to: 'xichao2017@gmail.com' send_resolved: true - name: 'email' email_configs: - to: 'xichao2017@gmail.com' send_resolved: true \u8fd9\u662f AlertManager \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u5148\u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl create -f alertmanager-conf.yaml configmap \"alert-config\" created \u7136\u540e\u914d\u7f6e AlertManager \u7684\u5bb9\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u4e4b\u524d\u7684 Prometheus \u7684 Pod \u4e2d\u6dfb\u52a0\u8fd9\u4e2a\u5bb9\u5668\uff0c\u5bf9\u5e94\u7684 YAML \u8d44\u6e90\u58f0\u660e\u5982\u4e0b\uff1a - name: alertmanager image: prom/alertmanager:v0.15.3 imagePullPolicy: IfNotPresent args: - \"--config.file=/etc/alertmanager/config.yml\" ports: - containerPort: 9093 name: http volumeMounts: - mountPath: \"/etc/alertmanager\" name: alertcfg resources: requests: cpu: 100m memory: 256Mi limits: cpu: 100m memory: 256Mi volumes: - name: alertcfg configMap: name: alert-config \u8fd9\u91cc\u6211\u4eec\u5c06\u4e0a\u9762\u521b\u5efa\u7684 alert-config \u8fd9\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\u4ee5 Volume \u7684\u5f62\u5f0f\u6302\u8f7d\u5230 /etc/alertmanager \u76ee\u5f55\u4e0b\u53bb\uff0c\u7136\u540e\u5728\u542f\u52a8\u53c2\u6570\u4e2d\u6307\u5b9a\u4e86\u914d\u7f6e\u6587\u4ef6 --config.file=/etc/alertmanager/config.yml \uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6765\u66f4\u65b0\u8fd9\u4e2a Prometheus \u7684 Pod\uff1a $ kubectl apply -f prome-deploy.yaml deployment.extensions \"prometheus\" configured \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06 AlertManager \u7684\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u76f4\u63a5\u653e\u5165\u5230\u4e4b\u524d\u7684 Prometheus \u7684 ConfigMap \u7684\u8d44\u6e90\u5bf9\u8c61\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u5355\u72ec\u7684 Pod \u6765\u8fd0\u884c AlertManager \u8fd9\u4e2a\u5bb9\u5668\uff0c\u5b8c\u6574\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\uff1a AlertManager \u7684\u5bb9\u5668\u542f\u52a8\u8d77\u6765\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728 Prometheus \u4e2d\u914d\u7f6e\u4e0b AlertManager \u7684\u5730\u5740\uff0c\u8ba9 Prometheus \u80fd\u591f\u8bbf\u95ee\u5230 AlertManager \uff0c\u5728 Prometheus \u7684 ConfigMap \u8d44\u6e90\u6e05\u5355\u4e2d\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a alerting: alertmanagers: - static_configs: - targets: [\"localhost:9093\"] \u66f4\u65b0\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u540e\uff0c\u7a0d\u7b49\u4e00\u5c0f\u4f1a\u513f\uff0c\u6267\u884c reload \u64cd\u4f5c\uff1a $ kubectl delete -f prome-cm.yaml configmap \"prometheus-config\" deleted $ kubectl create -f prome-cm.yaml configmap \"prometheus-config\" created # \u9694\u4e00\u4f1a\u513f\u540e $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.102.74.90 <none> 9090:30358/TCP 3d $ curl -X POST \"http://10.102.74.90:9090/-/reload\" \u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u67e5\u770b Pod \u53d1\u73b0\u6709\u9519\u8bef\uff0c\u67e5\u770b\u4e0b alertmanager \u5bb9\u5668\u7684\u65e5\u5fd7\uff0c\u53d1\u73b0\u6709\u5982\u4e0b\u9519\u8bef\u4fe1\u606f\uff1a $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE prometheus-56d64bf6f7-rpz9j 1/2 CrashLoopBackOff 491 1d $ kubectl logs -f prometheus-56d64bf6f7-rpz9j alertmanager -n kube-ops level=info ts=2018-11-28T10:33:51.830071513Z caller=main.go:174 msg=\"Starting Alertmanager\" version=\"(version=0.15.3, branch=HEAD, revision=d4a7697cc90f8bce62efe7c44b63b542578ec0a1)\"level=info ts=2018-11-28T10:33:51.830362309Z caller=main.go:175 build_context=\"(go=go1.11.2, user=root@4ecc17c53d26, date=20181109-15:40:48)\"level=error ts=2018-11-28T10:33:51.830464639Z caller=main.go:179 msg=\"Unable to create data directory\" err=\"mkdir data/: read-only file system\" \u8fd9\u4e2a\u662f\u56e0\u4e3a\u65b0\u7248\u672c dockerfile \u4e2d\u7684\u9ed8\u8ba4 WORKDIR \u53d1\u751f\u4e86\u53d8\u5316\uff0c\u53d8\u6210\u4e86 /etc/alertmanager \u76ee\u5f55\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b58\u50a8\u8def\u5f84 --storage.path \u662f\u76f8\u5bf9\u76ee\u5f55 data/ \uff0c\u56e0\u6b64\uff0c alertmanager \u4f1a\u5728\u6211\u4eec\u4e0a\u9762\u6302\u8f7d\u7684 ConfigMap \u4e2d\u53bb\u521b\u5efa\u8fd9\u4e2a\u76ee\u5f55\uff0c\u6240\u4ee5\u4f1a\u62a5\u9519\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8986\u76d6 --storage.path \u53c2\u6570\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u5bb9\u5668\u542f\u52a8\u53c2\u6570\u4e2d\u6dfb\u52a0\u8be5\u53c2\u6570\uff1a( prome-deploy.yaml ) - name: alertmanager image: prom/alertmanager:v0.15.3 imagePullPolicy: IfNotPresent args: - \"--config.file=/etc/alertmanager/config.yml\" - \"--storage.path=/alertmanager/data\" \u91cd\u65b0\u66f4\u65b0 Pod\uff0c\u53ef\u4ee5\u53d1\u73b0 Prometheus \u5df2\u7ecf\u662f Running \u72b6\u6001\u4e86\uff1a $ kubectl apply -f prome-deploy.yaml deployment.extensions \"prometheus\" configured $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE prometheus-646f457455-gr8x5 2/2 Running 0 3m $ kubectl logs -f prometheus-646f457455-gr8x5 alertmanager -n kube-ops level=info ts=2018-11-28T11:03:16.054633463Z caller=main.go:174 msg=\"Starting Alertmanager\" version=\"(version=0.15.3, branch=HEAD, revision=d4a7697cc90f8bce62efe7c44b63b542578ec0a1)\"level=info ts=2018-11-28T11:03:16.054931931Z caller=main.go:175 build_context=\"(go=go1.11.2, user=root@4ecc17c53d26, date=20181109-15:40:48)\"level=info ts=2018-11-28T11:03:16.351058702Z caller=cluster.go:155 component=cluster msg=\"setting advertise address explicitly\" addr=10.244.2.217 port=9094 level=info ts=2018-11-28T11:03:16.456683857Z caller=main.go:322 msg=\"Loading configuration file\" file=/etc/alertmanager/config.yml level=info ts=2018-11-28T11:03:16.548558156Z caller=cluster.go:570 component=cluster msg=\"Waiting for gossip to settle...\" interval=2s level=info ts=2018-11-28T11:03:16.556768564Z caller=main.go:398 msg=Listening address=:9093 level=info ts=2018-11-28T11:03:18.549158865Z caller=cluster.go:595 component=cluster msg=\"gossip not settled\" polls=0 before=0 now=1 elapsed=2.000272112s level=info ts=2018-11-28T11:03:26.558221484Z caller=cluster.go:587 component=cluster msg=\"gossip settled; proceeding\" elapsed=10.009335611s 2 \u62a5\u8b66\u89c4\u5219 \u73b0\u5728\u6211\u4eec\u53ea\u662f\u628a AlertManager \u5bb9\u5668\u8fd0\u884c\u8d77\u6765\u4e86\uff0c\u4e5f\u548c Prometheus \u8fdb\u884c\u4e86\u5173\u8054\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u8981\u505a\u4ec0\u4e48\u62a5\u8b66\uff0c\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u5730\u65b9\u544a\u8bc9\u6211\u4eec\u8981\u62a5\u8b66\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u914d\u7f6e\u4e00\u4e9b\u62a5\u8b66\u89c4\u5219\u6765\u544a\u8bc9\u6211\u4eec\u5bf9\u54ea\u4e9b\u6570\u636e\u8fdb\u884c\u62a5\u8b66\u3002 \u8b66\u62a5\u89c4\u5219\u5141\u8bb8\u4f60\u57fa\u4e8e Prometheus \u8868\u8fbe\u5f0f\u8bed\u8a00\u7684\u8868\u8fbe\u5f0f\u6765\u5b9a\u4e49\u62a5\u8b66\u62a5\u6761\u4ef6\uff0c\u5e76\u5728\u89e6\u53d1\u8b66\u62a5\u65f6\u53d1\u9001\u901a\u77e5\u7ed9\u5916\u90e8\u7684\u63a5\u6536\u8005\u3002 \u540c\u6837\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6 \u4e2d\u6dfb\u52a0\u5982\u4e0b\u62a5\u8b66\u89c4\u5219\u914d\u7f6e\uff1a rule_files: - /etc/prometheus/rules.yml \u5176\u4e2d rule_files \u5c31\u662f\u7528\u6765\u6307\u5b9a\u62a5\u8b66\u89c4\u5219\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06 rules.yml \u7528ConfigMap\u7684\u5f62\u5f0f\u6302\u8f7d\u5230 /etc/prometheus \u76ee\u5f55\u4e0b\u9762\u5373\u53ef: apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | ... rules.yml: | groups: - name: test-rule rules: - alert: NodeMemoryUsage expr: (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes * 100 > 20 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 20% (current value is: {{ $value }}\" \u4e0a\u9762\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a NodeMemoryUsage \u7684\u62a5\u8b66\u89c4\u5219\uff0c\u5176\u4e2d\uff1a for \u8bed\u53e5\u4f1a\u4f7f Prometheus \u670d\u52a1\u7b49\u5f85\u6307\u5b9a\u7684\u65f6\u95f4, \u7136\u540e\u6267\u884c\u67e5\u8be2\u8868\u8fbe\u5f0f\u3002 labels \u8bed\u53e5\u5141\u8bb8\u6307\u5b9a\u989d\u5916\u7684\u6807\u7b7e\u5217\u8868\uff0c\u628a\u5b83\u4eec\u9644\u52a0\u5728\u544a\u8b66\u4e0a\u3002 annotations \u8bed\u53e5\u6307\u5b9a\u4e86\u53e6\u4e00\u7ec4\u6807\u7b7e\uff0c\u5b83\u4eec\u4e0d\u88ab\u5f53\u505a\u544a\u8b66\u5b9e\u4f8b\u7684\u8eab\u4efd\u6807\u8bc6\uff0c\u5b83\u4eec\u7ecf\u5e38\u7528\u4e8e\u5b58\u50a8\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f\uff0c\u7528\u4e8e\u62a5\u8b66\u4fe1\u606f\u7684\u5c55\u793a\u4e4b\u7c7b\u7684\u3002 \u4e3a\u4e86\u65b9\u4fbf\u6f14\u793a\uff0c\u6211\u4eec\u5c06\u7684\u8868\u8fbe\u5f0f\u5224\u65ad\u62a5\u8b66\u4e34\u754c\u503c\u8bbe\u7f6e\u4e3a 20 \uff0c\u91cd\u65b0\u66f4\u65b0 ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff0c\u7531\u4e8e\u6211\u4eec\u5728 Prometheus \u7684 Pod \u4e2d\u5df2\u7ecf\u901a\u8fc7 Volume \u7684\u5f62\u5f0f\u5c06 prometheus-config \u8fd9\u4e2a\u4e00\u4e2a ConfigMap \u5bf9\u8c61\u6302\u8f7d\u5230\u4e86 /etc/prometheus \u76ee\u5f55\u4e0b\u9762\uff0c\u6240\u4ee5\u66f4\u65b0\u540e\uff0c\u8be5\u76ee\u5f55\u4e0b\u9762\u4e5f\u4f1a\u51fa\u73b0 rules.yml \u6587\u4ef6\uff0c\u6240\u4ee5\u524d\u9762\u914d\u7f6e\u7684 rule_files \u8def\u5f84\u4e5f\u662f\u6b63\u5e38\u7684\uff0c\u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u91cd\u65b0\u6267\u884c reload \u64cd\u4f5c\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53bb Prometheus \u7684 Dashboard \u4e2d\u5207\u6362\u5230alerts\u8def\u5f84\u4e0b\u9762\u5c31\u53ef\u4ee5\u770b\u5230\u6709\u62a5\u8b66\u914d\u7f6e\u89c4\u5219\u7684\u6570\u636e\u4e86\uff1a prometheus alerts \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u9875\u9762\u4e2d\u51fa\u73b0\u4e86\u6211\u4eec\u521a\u521a\u5b9a\u4e49\u7684\u62a5\u8b66\u89c4\u5219\u4fe1\u606f\uff0c\b\u800c\u4e14\u62a5\u8b66\u4fe1\u606f\u4e2d\u8fd8\u6709\u72b6\u6001\u663e\u793a\u3002\u4e00\u4e2a\u62a5\u8b66\u4fe1\u606f\u5728\u751f\u547d\u5468\u671f\u5185\u6709\u4e0b\u97623\u79cd\u72b6\u6001\uff1a inactive : \u8868\u793a\u5f53\u524d\u62a5\u8b66\u4fe1\u606f\u65e2\u4e0d\u662ffiring\u72b6\u6001\u4e5f\u4e0d\u662fpending\u72b6\u6001 pending : \u8868\u793a\u5728\u8bbe\u7f6e\u7684\u9608\u503c\u65f6\u95f4\u8303\u56f4\u5185\u88ab\u6fc0\u6d3b\u4e86 firing : \u8868\u793a\u8d85\u8fc7\u8bbe\u7f6e\u7684\u9608\u503c\u65f6\u95f4\u88ab\u6fc0\u6d3b\u4e86 \u6211\u4eec\u8fd9\u91cc\u7684\u72b6\u6001\u73b0\u5728\u662f firing \u5c31\u8868\u793a\u8fd9\u4e2a\u62a5\u8b66\u5df2\u7ecf\u88ab\u6fc0\u6d3b\u4e86\uff0c\u6211\u4eec\u8fd9\u91cc\u7684\u62a5\u8b66\u4fe1\u606f\u6709\u4e00\u4e2a team=node \u8fd9\u6837\u7684\u6807\u7b7e\uff0c\u800c\u6700\u4e0a\u9762\u6211\u4eec\u914d\u7f6e alertmanager \u7684\u65f6\u5019\u5c31\u6709\u5982\u4e0b\u7684\u8def\u7531\u914d\u7f6e\u4fe1\u606f\u4e86\uff1a routes: - receiver: email group_wait: 10s match: team: node \u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u7684\u62a5\u8b66\u4fe1\u606f\u4f1a\b\u88ab email \u8fd9\u4e2a\u63a5\u6536\u5668\u6765\u8fdb\u884c\u62a5\u8b66\uff0c\u6211\u4eec\u4e0a\u9762\u914d\u7f6e\u7684\u662f\u90ae\u7bb1\uff0c\u6240\u4ee5\u6b63\u5e38\u6765\u8bf4\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4f1a\u6536\u5230\u4e00\u5c01\b\u5982\u4e0b\u7684\u62a5\u8b66\u90ae\u4ef6\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6536\u5230\u7684\u90ae\u4ef6\u5185\u5bb9\u4e2d\u5305\u542b\u4e00\u4e2a View In AlertManager \u7684\u94fe\u63a5\uff0c\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u901a\u8fc7 NodePort \u7684\u5f62\u5f0f\u53bb\u8bbf\u95ee\u5230 AlertManager \u7684 Dashboard \u9875\u9762\uff1a $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.102.74.90 <none> 9093:31788/TCP,9090:30358/TCP 34d \u7136\u540e\u901a\u8fc7 <\u4efb\u4e00Node\u8282\u70b9>:31788 \u8fdb\u884c\u8bbf\u95ee\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u67e5\u770b\u5230 AlertManager \u7684 Dashboard \u9875\u9762\uff1a \u5728\u8fd9\u4e2a\u9875\u9762\u4e2d\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\b\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bd4\u5982\u8fc7\u6ee4\u3001\u5206\u7ec4\u7b49\u7b49\uff0c\u91cc\u9762\u8fd8\u6709\u4e24\u4e2a\u65b0\u7684\u6982\u5ff5\uff1a Inhibition(\u6291\u5236) \u548c Silences(\u9759\u9ed8) \u3002 Inhibition \uff1a\u5982\u679c\u67d0\u4e9b\u5176\u4ed6\u8b66\u62a5\u5df2\u7ecf\u89e6\u53d1\u4e86\uff0c\u5219\u5bf9\u4e8e\u67d0\u4e9b\u8b66\u62a5\uff0cInhibition \u662f\u4e00\u4e2a\u6291\u5236\u901a\u77e5\u7684\u6982\u5ff5\u3002\u4f8b\u5982\uff1a\u4e00\u4e2a\u8b66\u62a5\u5df2\u7ecf\u89e6\u53d1\uff0c\u5b83\u6b63\u5728\u901a\u77e5\u6574\u4e2a\u96c6\u7fa4\u662f\u4e0d\u53ef\u8fbe\u7684\u65f6\uff0cAlertmanager \u5219\u53ef\u4ee5\u914d\u7f6e\u6210\u5173\u5fc3\u8fd9\u4e2a\u96c6\u7fa4\u7684\u5176\u4ed6\u8b66\u62a5\u65e0\u6548\u3002\u8fd9\u53ef\u4ee5\u9632\u6b62\u4e0e\u5b9e\u9645\u95ee\u9898\u65e0\u5173\u7684\u6570\u767e\u6216\u6570\u5343\u4e2a\u89e6\u53d1\u8b66\u62a5\u7684\u901a\u77e5\uff0cInhibition \u9700\u8981\u901a\u8fc7\u4e0a\u9762\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002 Silences \uff1a\u9759\u9ed8\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u7b80\u5355\u5730\u5ffd\u7565\u6240\u6709\u8b66\u62a5\u3002Silences \u57fa\u4e8e matchers\u914d\u7f6e\uff0c\u7c7b\u4f3c\u8def\u7531\u6811\u3002\u6765\u5230\u7684\u8b66\u544a\u5c06\u4f1a\u88ab\u68c0\u67e5\uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u548c\u6d3b\u8dc3\u7684 Silences \u76f8\u7b49\u6216\u8005\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5219\u4e0d\u4f1a\u5c06\u8fd9\u4e9b\u8b66\u62a5\u53d1\u9001\u7ed9\u63a5\u6536\u8005\u3002 \u7531\u4e8e\u5168\u5c40\u914d\u7f6e\u4e2d\u6211\u4eec\u914d\u7f6e\u7684 group_interval: 5m \uff0c\u4e5f\u5c31\u662f\u6bcf5\u5206\u949f\u4e00\u4e2a\u5206\u7ec4\u7684\u62a5\u8b66\u5c06\u4f1a\u91cd\u65b0\u89e6\u53d1\uff0c\u6240\u4ee5\u6b63\u5e38\u6765\u8bf4\uff0c\u4e0a\u9762\u7684\u6d4b\u8bd5\u62a5\u8b66\u5982\u679c\u4e00\u76f4\u6ee1\u8db3\u62a5\u8b66\u6761\u4ef6(CPU\u4f7f\u7528\u7387\u5927\u4e8e20%)\u7684\u8bdd\uff0c\u90a3\u4e48\u6bcf5\u5206\u949f\u6211\u4eec\u5c31\u53ef\u4ee5\u6536\u5230\u4e00\u6761\u62a5\u8b66\u90ae\u4ef6\u3002 \u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a Silences \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5339\u914d node02 \u8282\u70b9\u7684\u5185\u5b58\u62a5\u8b66\uff1a prometheus alertmanager Silences \u6dfb\u52a0\u5b8c\u6210\u540e\uff0c\u7b49\u4e0b\u4e00\u6b21\u7684\u62a5\u8b66\u4fe1\u606f\u89e6\u53d1\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u62a5\u8b66\b\u4fe1\u606f\u91cc\u9762\u5df2\u7ecf\u6ca1\u6709\u4e86\u8282\u70b9 node02 \u7684\u62a5\u8b66\u4fe1\u606f\u4e86\uff1a \u7531\u4e8e\u6211\u4eec\u4e0a\u9762\u6dfb\u52a0\u7684 Silences \u662f\u6709\u8fc7\u671f\u65f6\u95f4\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u8fc7\u540e\uff0cnode02 \u7684\u62a5\u8b66\u4fe1\u606f\u5c31\u4f1a\u6062\u590d\u4e86\u3002 \b 3 webhook\u63a5\u6536\u5668 \u4e0a\u9762\u6211\u4eec\u914d\u7f6e\u7684\u662f \bAlertManager \u81ea\u5e26\u7684\u90ae\u4ef6\b\u62a5\u8b66\u6a21\u677f\uff0c\u6211\u4eec\u4e5f\u8bf4\u4e86 AlertManager \u652f\u6301\u5f88\u591a\u4e2d\u62a5\u8b66\u63a5\u6536\u5668\uff0c\u6bd4\u5982 slack\u3001\u5fae\u4fe1\u4e4b\u7c7b\u7684\uff0c\u5176\u4e2d\u6700\u4e3a\u7075\u6d3b\u7684\u65b9\u5f0f\u5f53\u7136\u662f\u4f7f\u7528 webhook \u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a webhook \u6765\u63a5\u6536\u62a5\u8b66\u4fe1\u606f\uff0c\u7136\u540e\u5728 webhook \u91cc\u9762\u53bb\u8fdb\u884c\b\u5904\u7406\uff0c\u9700\u8981\u53d1\u9001\u600e\u6837\u7684\u62a5\u8b66\u4fe1\u606f\u6211\u4eec\u81ea\u5b9a\u4e49\u5c31\u53ef\u4ee5\u3002 \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u7528 Flask \u7f16\u5199\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5904\u7406\u9489\u9489\u62a5\u8b66\u7684 webhook \u7684\u7a0b\u5e8f\uff1a import os import requests from flask import Flask from flask import request app = Flask(__name__) @app.route('/', methods=['POST', 'GET']) def send(): if request.method == 'POST': post_data = request.get_data() send_alert(post_data) return 'success' else: return 'weclome to use prometheus alertmanager dingtalk webhook server!' def send_alert(data): token = os.getenv('ROBOT_TOKEN') if not token: print('you must set ROBOT_TOKEN env') return url = 'https://oapi.dingtalk.com/robot/send?access_token=%s' % token send_data = { \"msgtype\": \"text\", \"text\": { \"content\": data } } req = requests.post(url, json=send_data) result = req.json() if result['errcode'] != 0: print('notify dingtalk error: %s' % result['errcode']) if __name__ == '__main__': from waitress import serve serve(app, listen='0.0.0.0:5000') \u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u901a\u8fc7\u4e00\u4e2a ROBOT_TOKEN \u7684\u73af\u5883\u53d8\u91cf\u4f20\u5165\u7fa4\u673a\u5668\u4eba\u7684 TOKEN \uff0c\u7136\u540e\u76f4\u63a5\u5c06 webhook \u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\u76f4\u63a5\u4ee5\u6587\u672c\u7684\u5f62\u5f0f\u8f6c\u53d1\u7ed9\u7fa4\u673a\u5668\u4eba\u3002 \u5f53\u7136\u6211\u4eec\u5f97\u5c06\u4e0a\u9762\u8fd9\u4e2a\u670d\u52a1\u90e8\u7f72\u5230\u96c6\u7fa4\u4e2d\u6765\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\uff1a( dingtalk-hook.yaml ) apiVersion: extensions/v1beta1 kind: Deployment metadata: name: dingtalk-hook namespace: kube-ops spec: template: metadata: labels: app: dingtalk-hook spec: containers: - name: dingtalk-hook image: cnych/alertmanager-dingtalk-hook:v0.2 imagePullPolicy: IfNotPresent ports: - containerPort: 5000 name: http env: - name: ROBOT_TOKEN valueFrom: secretKeyRef: name: dingtalk-secret key: token resources: requests: cpu: 50m memory: 100Mi limits: cpu: 50m memory: 100Mi --- apiVersion: v1 kind: Service metadata: name: dingtalk-hook namespace: kube-ops spec: selector: app: dingtalk-hook ports: - name: hook port: 5000 targetPort: http \u8981\u6ce8\u610f\u4e0a\u9762\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a ROBOT_TOKEN \u7684\u73af\u5883\u53d8\u91cf\uff0c\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u76f8\u5bf9\u4e8e\u79c1\u5bc6\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4ece\u4e00\u4e2a Secret \u5bf9\u8c61\u4e2d\u53bb\u83b7\u53d6\uff0c\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a dingtalk-secret \u7684 Secret \u5bf9\u8c61\uff0c\u7136\u540e\u90e8\u7f72\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a $ kubectl create secret generic dingtalk-secret --from-literal=token=\u66ff\u6362\u6210\u9489\u9489\u7fa4\u804a\u7684\u673a\u5668\u4ebaTOKEN -n kube-ops secret \"dingtalk-secret\" created $ kubectl create -f dingtalk-hook.yaml deployment.extensions \"dingtalk-hook\" created service \"dingtalk-hook\" created $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE dingtalk-hook-c4fcd8cd6-6r2b6 1/1 Running 0 45m ...... \u90e8\u7f72\u6210\u529f\u540e\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9 AlertManager \u914d\u7f6e\u4e00\u4e2a webhook \u4e86\uff0c\u5728\u4e0a\u9762\u7684\u914d\u7f6e\u4e2d\u589e\u52a0\u4e00\u4e2a\u8def\u7531\u63a5\u6536\u5668 routes: - receiver: webhook match: filesystem: node receivers: - name: 'webhook' webhook_configs: - url: 'http://dingtalk-hook:5000' send_resolved: true \u6211\u4eec\u8fd9\u91cc\u914d\u7f6e\u4e86\u4e00\u4e2a\u540d\u4e3a webhook \u7684\u63a5\u6536\u5668\uff0c\u5730\u5740\u4e3a\uff1a http://dingtalk-hook:5000 \uff0c\u8fd9\u4e2a\u5730\u5740\u5f53\u7136\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u90e8\u7f72\u7684\u9489\u9489\u7684 webhook \u7684\u63a5\u6536\u7a0b\u5e8f\u7684 Service \u5730\u5740\u3002 \u7136\u540e\u6211\u4eec\u4e5f\u5728\u62a5\u8b66\u89c4\u5219\u4e2d\u6dfb\u52a0\u4e00\u6761\u5173\u4e8e\u8282\u70b9\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u60c5\u51b5\u7684\u62a5\u8b66\u89c4\u5219\uff0c\u6ce8\u610f labels \u6807\u7b7e\u8981\u5e26\u4e0a alertname=NodeFilesystem \uff0c\u8fd9\u6837\u62a5\u8b66\u4fe1\u606f\u5c31\u4f1a\u88ab webook \u8fd9\u4e00\u4e2a\u63a5\u6536\u5668\u6240\u5339\u914d\uff1a - alert: NodeFilesystemUsage expr: (node_filesystem_size_bytes{device=\"rootfs\"} - node_filesystem_free_bytes{device=\"rootfs\"}) / node_filesystem_size_bytes{device=\"rootfs\"} * 100 > 10 for: 2m labels: filesystem: node annotations: summary: \"{{$labels.instance}}: High Filesystem usage detected\" description: \"{{$labels.instance}}: Filesystem usage is above 10% (current value is: {{ $value }}\" \u66f4\u65b0 AlertManager \u548c Prometheus \u7684 ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff08\u5148\u5220\u9664\u518d\u521b\u5efa\uff09\uff0c\u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u4f1a\u513f\u6267\u884c reload \u64cd\u4f5c\u662f\u66f4\u65b0\u751f\u6548\uff1a $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.102.74.90 <none> 9093:31788/TCP,9090:30358/TCP 34d $ curl -X POST \"http://10.102.74.90:9093/-/reload\" $ curl -X POST \"http://10.102.74.90:9090/-/reload\" AlertManager \u548c Prometheus \u90fd\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684 reload \u64cd\u4f5c\u8fdb\u884c\u91cd\u65b0\u52a0\u8f7d \u90fd\u5b8c\u6210\u66f4\u65b0\u540e\uff0c\u518d\u6b21\u53bb Prometheus \u7684 Alert \u8def\u5f84\u4e0b\u9762\u67e5\u770b\u62a5\u8b66\u4fe1\u606f\uff1a \u9694\u4e00\u4f1a\u513f\u5173\u4e8e\u8fd9\u4e2a\u8282\u70b9\u6587\u4ef6\u7cfb\u7edf\u7684\u62a5\u8b66\u5c31\u4f1a\u88ab\u89e6\u53d1\u4e86\uff0c\u7531\u4e8e\u8fd9\u4e2a\u62a5\u8b66\u4fe1\u606f\u5305\u542b\u4e00\u4e2a filesystem=node \u7684 label \u6807\u7b7e\uff0c\u6240\u4ee5\u4f1a\u88ab\u8def\u7531\u5230 webhook \u8fd9\u4e2a\u63a5\u6536\u5668\u4e2d\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u8fd9\u4e2a dingtalk-hook \uff0c\u89e6\u53d1\u540e\u53ef\u4ee5\u89c2\u5bdf\u8fd9\u4e2a Pod \u7684\u65e5\u5fd7\uff1a $ kubectl logs -f dingtalk-hook-cc677c46d-gf26f -n kube-ops * Serving Flask app \"app\" (lazy loading) * Environment: production WARNING: Do not use the development server in a production environment. Use a production WSGI server instead. * Debug mode: off * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit) 10.244.2.217 - - [28/Nov/2018 17:14:09] \"POST / HTTP/1.1\" 200 - \u53ef\u4ee5\u770b\u5230 POST \u8bf7\u6c42\u5df2\u7ecf\u6210\u529f\u4e86\uff0c\u540c\u65f6\u8fd9\u4e2a\u65f6\u5019\u6b63\u5e38\u6765\u8bf4\u5c31\u53ef\u4ee5\u6536\u5230\u4e00\u6761\u9489\u9489\u6d88\u606f\u4e86\uff1a","title":"\u7b2c\u4e5d\u8282 \u62a5\u8b66\u795e\u5668 AlertManager \u7684\u4f7f\u7528"},{"location":"chap3/10Adv_k8s_AlertManger/#alertmanager","text":"","title":"\u7b2c\u4e5d\u8282 \u62a5\u8b66\u795e\u5668 AlertManager \u7684\u4f7f\u7528"},{"location":"chap3/10Adv_k8s_AlertManger/#_1","text":"\u4e4b\u524d\u6211\u4eec\u5b66\u4e60 Prometheus \u7684\u65f6\u5019\u5c31\u4e86\u89e3\u5230 Prometheus \u5305\u542b\u4e00\u4e2a \u62a5\u8b66\u6a21\u5757 \uff0c\u5c31\u662f\u6211\u4eec\u7684 AlertManager \uff0c Alertmanager \u4e3b\u8981\u7528\u4e8e\u63a5\u6536 Prometheus \u53d1\u9001\u7684\u544a\u8b66\u4fe1\u606f\uff0c\u5b83\u652f\u6301\u4e30\u5bcc\u7684\u544a\u8b66\u901a\u77e5\u6e20\u9053\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u505a\u5230\u544a\u8b66\u4fe1\u606f\u8fdb\u884c \u53bb\u91cd\uff0c\u964d\u566a\uff0c\u5206\u7ec4 \u7b49\uff0c\u662f\u4e00\u6b3e\u524d\u536b\u7684\u544a\u8b66\u901a\u77e5\u7cfb\u7edf\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5b66\u4e60\u4e0b AlertManager \u7684\u5177\u4f53\u4f7f\u7528\u65b9\u6cd5\u3002","title":"\u7b80\u4ecb"},{"location":"chap3/10Adv_k8s_AlertManger/#1","text":"\u4ece\u5b98\u65b9\u6587\u6863 https://prometheus.io/docs/alerting/configuration/ \u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0b\u8f7d AlertManager \u4e8c\u8fdb\u5236\u6587\u4ef6\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u8fd0\u884c\uff1a $ ./alertmanager --config.file=simple.yml \u5176\u4e2d -config.file \u53c2\u6570\u662f\u7528\u6765\u6307\u5b9a\u5bf9\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u7684\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u540c\u6837\u8981\u8fd0\u884c\u5230 Kubernetes \u96c6\u7fa4\u4e2d\u6765. \u6240\u4ee5\u6211\u4eec\u4f7f\u7528 docker \u955c\u50cf\u7684\u65b9\u5f0f\u6765\u5b89\u88c5\uff0c\u4f7f\u7528\u7684\u955c\u50cf\u662f\uff1a prom/alertmanager:v0.15.3 \u3002 \u9996\u5148\uff0c\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\uff0c\u540c\u6837\u7684\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff1a( alertmanager-conf.yaml ) apiVersion: v1 kind: ConfigMap metadata: name: alert-config namespace: kube-ops data: config.yml: |- global: # \u5728\u6ca1\u6709\u62a5\u8b66\u7684\u60c5\u51b5\u4e0b\u58f0\u660e\u4e3a\u5df2\u89e3\u51b3\u7684\u65f6\u95f4 resolve_timeout: 5m # \u914d\u7f6e\u90ae\u4ef6\u53d1\u9001\u4fe1\u606f smtp_smarthost: 'smtp.gmail.com' smtp_from: 'xichao2014@gmail.com' smtp_auth_username: 'xichao2014@gmail.com' smtp_auth_password: '<\u90ae\u7bb1\u5bc6\u7801>' smtp_hello: 'gmail.com' smtp_require_tls: false # \u6240\u6709\u62a5\u8b66\u4fe1\u606f\u8fdb\u5165\u540e\u7684\u6839\u8def\u7531\uff0c\u7528\u6765\u8bbe\u7f6e\u62a5\u8b66\u7684\u5206\u53d1\u7b56\u7565 route: # \u8fd9\u91cc\u7684\u6807\u7b7e\u5217\u8868\u662f\u63a5\u6536\u5230\u62a5\u8b66\u4fe1\u606f\u540e\u7684\u91cd\u65b0\u5206\u7ec4\u6807\u7b7e\uff0c\u4f8b\u5982\uff0c\u63a5\u6536\u5230\u7684\u62a5\u8b66\u4fe1\u606f\u91cc\u9762\u6709\u8bb8\u591a\u5177\u6709 cluster=A \u548c alertname=LatncyHigh \u8fd9\u6837\u7684\u6807\u7b7e\u7684\u62a5\u8b66\u4fe1\u606f\u5c06\u4f1a\u6279\u91cf\u88ab\u805a\u5408\u5230\u4e00\u4e2a\u5206\u7ec4\u91cc\u9762 group_by: ['alertname', 'cluster'] # \u5f53\u4e00\u4e2a\u65b0\u7684\u62a5\u8b66\u5206\u7ec4\u88ab\u521b\u5efa\u540e\uff0c\u9700\u8981\u7b49\u5f85\u81f3\u5c11group_wait\u65f6\u95f4\u6765\u521d\u59cb\u5316\u901a\u77e5\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u786e\u4fdd\u60a8\u80fd\u6709\u8db3\u591f\u7684\u65f6\u95f4\u4e3a\u540c\u4e00\u5206\u7ec4\u6765\u83b7\u53d6\u591a\u4e2a\u8b66\u62a5\uff0c\u7136\u540e\u4e00\u8d77\u89e6\u53d1\u8fd9\u4e2a\u62a5\u8b66\u4fe1\u606f\u3002 group_wait: 30s # \u5f53\u7b2c\u4e00\u4e2a\u62a5\u8b66\u53d1\u9001\u540e\uff0c\u7b49\u5f85'group_interval'\u65f6\u95f4\u6765\u53d1\u9001\u65b0\u7684\u4e00\u7ec4\u62a5\u8b66\u4fe1\u606f\u3002 group_interval: 5m # \u5982\u679c\u4e00\u4e2a\u62a5\u8b66\u4fe1\u606f\u5df2\u7ecf\u53d1\u9001\u6210\u529f\u4e86\uff0c\u7b49\u5f85'repeat_interval'\u65f6\u95f4\u6765\u91cd\u65b0\u53d1\u9001\u4ed6\u4eec repeat_interval: 5m # \u9ed8\u8ba4\u7684receiver\uff1a\u5982\u679c\u4e00\u4e2a\u62a5\u8b66\u6ca1\u6709\u88ab\u4e00\u4e2aroute\u5339\u914d\uff0c\u5219\u53d1\u9001\u7ed9\u9ed8\u8ba4\u7684\u63a5\u6536\u5668 receiver: default # \u4e0a\u9762\u6240\u6709\u7684\u5c5e\u6027\u90fd\u7531\u6240\u6709\u5b50\u8def\u7531\u7ee7\u627f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5b50\u8def\u7531\u4e0a\u8fdb\u884c\u8986\u76d6\u3002 routes: - receiver: email group_wait: 10s match: team: node receivers: - name: 'default' email_configs: - to: 'xichao2017@gmail.com' send_resolved: true - name: 'email' email_configs: - to: 'xichao2017@gmail.com' send_resolved: true \u8fd9\u662f AlertManager \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u5148\u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl create -f alertmanager-conf.yaml configmap \"alert-config\" created \u7136\u540e\u914d\u7f6e AlertManager \u7684\u5bb9\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u4e4b\u524d\u7684 Prometheus \u7684 Pod \u4e2d\u6dfb\u52a0\u8fd9\u4e2a\u5bb9\u5668\uff0c\u5bf9\u5e94\u7684 YAML \u8d44\u6e90\u58f0\u660e\u5982\u4e0b\uff1a - name: alertmanager image: prom/alertmanager:v0.15.3 imagePullPolicy: IfNotPresent args: - \"--config.file=/etc/alertmanager/config.yml\" ports: - containerPort: 9093 name: http volumeMounts: - mountPath: \"/etc/alertmanager\" name: alertcfg resources: requests: cpu: 100m memory: 256Mi limits: cpu: 100m memory: 256Mi volumes: - name: alertcfg configMap: name: alert-config \u8fd9\u91cc\u6211\u4eec\u5c06\u4e0a\u9762\u521b\u5efa\u7684 alert-config \u8fd9\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\u4ee5 Volume \u7684\u5f62\u5f0f\u6302\u8f7d\u5230 /etc/alertmanager \u76ee\u5f55\u4e0b\u53bb\uff0c\u7136\u540e\u5728\u542f\u52a8\u53c2\u6570\u4e2d\u6307\u5b9a\u4e86\u914d\u7f6e\u6587\u4ef6 --config.file=/etc/alertmanager/config.yml \uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6765\u66f4\u65b0\u8fd9\u4e2a Prometheus \u7684 Pod\uff1a $ kubectl apply -f prome-deploy.yaml deployment.extensions \"prometheus\" configured \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06 AlertManager \u7684\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u76f4\u63a5\u653e\u5165\u5230\u4e4b\u524d\u7684 Prometheus \u7684 ConfigMap \u7684\u8d44\u6e90\u5bf9\u8c61\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u5355\u72ec\u7684 Pod \u6765\u8fd0\u884c AlertManager \u8fd9\u4e2a\u5bb9\u5668\uff0c\u5b8c\u6574\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\uff1a AlertManager \u7684\u5bb9\u5668\u542f\u52a8\u8d77\u6765\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728 Prometheus \u4e2d\u914d\u7f6e\u4e0b AlertManager \u7684\u5730\u5740\uff0c\u8ba9 Prometheus \u80fd\u591f\u8bbf\u95ee\u5230 AlertManager \uff0c\u5728 Prometheus \u7684 ConfigMap \u8d44\u6e90\u6e05\u5355\u4e2d\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a alerting: alertmanagers: - static_configs: - targets: [\"localhost:9093\"] \u66f4\u65b0\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u540e\uff0c\u7a0d\u7b49\u4e00\u5c0f\u4f1a\u513f\uff0c\u6267\u884c reload \u64cd\u4f5c\uff1a $ kubectl delete -f prome-cm.yaml configmap \"prometheus-config\" deleted $ kubectl create -f prome-cm.yaml configmap \"prometheus-config\" created # \u9694\u4e00\u4f1a\u513f\u540e $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.102.74.90 <none> 9090:30358/TCP 3d $ curl -X POST \"http://10.102.74.90:9090/-/reload\" \u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u67e5\u770b Pod \u53d1\u73b0\u6709\u9519\u8bef\uff0c\u67e5\u770b\u4e0b alertmanager \u5bb9\u5668\u7684\u65e5\u5fd7\uff0c\u53d1\u73b0\u6709\u5982\u4e0b\u9519\u8bef\u4fe1\u606f\uff1a $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE prometheus-56d64bf6f7-rpz9j 1/2 CrashLoopBackOff 491 1d $ kubectl logs -f prometheus-56d64bf6f7-rpz9j alertmanager -n kube-ops level=info ts=2018-11-28T10:33:51.830071513Z caller=main.go:174 msg=\"Starting Alertmanager\" version=\"(version=0.15.3, branch=HEAD, revision=d4a7697cc90f8bce62efe7c44b63b542578ec0a1)\"level=info ts=2018-11-28T10:33:51.830362309Z caller=main.go:175 build_context=\"(go=go1.11.2, user=root@4ecc17c53d26, date=20181109-15:40:48)\"level=error ts=2018-11-28T10:33:51.830464639Z caller=main.go:179 msg=\"Unable to create data directory\" err=\"mkdir data/: read-only file system\" \u8fd9\u4e2a\u662f\u56e0\u4e3a\u65b0\u7248\u672c dockerfile \u4e2d\u7684\u9ed8\u8ba4 WORKDIR \u53d1\u751f\u4e86\u53d8\u5316\uff0c\u53d8\u6210\u4e86 /etc/alertmanager \u76ee\u5f55\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b58\u50a8\u8def\u5f84 --storage.path \u662f\u76f8\u5bf9\u76ee\u5f55 data/ \uff0c\u56e0\u6b64\uff0c alertmanager \u4f1a\u5728\u6211\u4eec\u4e0a\u9762\u6302\u8f7d\u7684 ConfigMap \u4e2d\u53bb\u521b\u5efa\u8fd9\u4e2a\u76ee\u5f55\uff0c\u6240\u4ee5\u4f1a\u62a5\u9519\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8986\u76d6 --storage.path \u53c2\u6570\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u5bb9\u5668\u542f\u52a8\u53c2\u6570\u4e2d\u6dfb\u52a0\u8be5\u53c2\u6570\uff1a( prome-deploy.yaml ) - name: alertmanager image: prom/alertmanager:v0.15.3 imagePullPolicy: IfNotPresent args: - \"--config.file=/etc/alertmanager/config.yml\" - \"--storage.path=/alertmanager/data\" \u91cd\u65b0\u66f4\u65b0 Pod\uff0c\u53ef\u4ee5\u53d1\u73b0 Prometheus \u5df2\u7ecf\u662f Running \u72b6\u6001\u4e86\uff1a $ kubectl apply -f prome-deploy.yaml deployment.extensions \"prometheus\" configured $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE prometheus-646f457455-gr8x5 2/2 Running 0 3m $ kubectl logs -f prometheus-646f457455-gr8x5 alertmanager -n kube-ops level=info ts=2018-11-28T11:03:16.054633463Z caller=main.go:174 msg=\"Starting Alertmanager\" version=\"(version=0.15.3, branch=HEAD, revision=d4a7697cc90f8bce62efe7c44b63b542578ec0a1)\"level=info ts=2018-11-28T11:03:16.054931931Z caller=main.go:175 build_context=\"(go=go1.11.2, user=root@4ecc17c53d26, date=20181109-15:40:48)\"level=info ts=2018-11-28T11:03:16.351058702Z caller=cluster.go:155 component=cluster msg=\"setting advertise address explicitly\" addr=10.244.2.217 port=9094 level=info ts=2018-11-28T11:03:16.456683857Z caller=main.go:322 msg=\"Loading configuration file\" file=/etc/alertmanager/config.yml level=info ts=2018-11-28T11:03:16.548558156Z caller=cluster.go:570 component=cluster msg=\"Waiting for gossip to settle...\" interval=2s level=info ts=2018-11-28T11:03:16.556768564Z caller=main.go:398 msg=Listening address=:9093 level=info ts=2018-11-28T11:03:18.549158865Z caller=cluster.go:595 component=cluster msg=\"gossip not settled\" polls=0 before=0 now=1 elapsed=2.000272112s level=info ts=2018-11-28T11:03:26.558221484Z caller=cluster.go:587 component=cluster msg=\"gossip settled; proceeding\" elapsed=10.009335611s","title":"1 \u5b89\u88c5"},{"location":"chap3/10Adv_k8s_AlertManger/#2","text":"\u73b0\u5728\u6211\u4eec\u53ea\u662f\u628a AlertManager \u5bb9\u5668\u8fd0\u884c\u8d77\u6765\u4e86\uff0c\u4e5f\u548c Prometheus \u8fdb\u884c\u4e86\u5173\u8054\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u8981\u505a\u4ec0\u4e48\u62a5\u8b66\uff0c\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u5730\u65b9\u544a\u8bc9\u6211\u4eec\u8981\u62a5\u8b66\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u914d\u7f6e\u4e00\u4e9b\u62a5\u8b66\u89c4\u5219\u6765\u544a\u8bc9\u6211\u4eec\u5bf9\u54ea\u4e9b\u6570\u636e\u8fdb\u884c\u62a5\u8b66\u3002 \u8b66\u62a5\u89c4\u5219\u5141\u8bb8\u4f60\u57fa\u4e8e Prometheus \u8868\u8fbe\u5f0f\u8bed\u8a00\u7684\u8868\u8fbe\u5f0f\u6765\u5b9a\u4e49\u62a5\u8b66\u62a5\u6761\u4ef6\uff0c\u5e76\u5728\u89e6\u53d1\u8b66\u62a5\u65f6\u53d1\u9001\u901a\u77e5\u7ed9\u5916\u90e8\u7684\u63a5\u6536\u8005\u3002 \u540c\u6837\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6 \u4e2d\u6dfb\u52a0\u5982\u4e0b\u62a5\u8b66\u89c4\u5219\u914d\u7f6e\uff1a rule_files: - /etc/prometheus/rules.yml \u5176\u4e2d rule_files \u5c31\u662f\u7528\u6765\u6307\u5b9a\u62a5\u8b66\u89c4\u5219\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06 rules.yml \u7528ConfigMap\u7684\u5f62\u5f0f\u6302\u8f7d\u5230 /etc/prometheus \u76ee\u5f55\u4e0b\u9762\u5373\u53ef: apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | ... rules.yml: | groups: - name: test-rule rules: - alert: NodeMemoryUsage expr: (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes * 100 > 20 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 20% (current value is: {{ $value }}\" \u4e0a\u9762\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a NodeMemoryUsage \u7684\u62a5\u8b66\u89c4\u5219\uff0c\u5176\u4e2d\uff1a for \u8bed\u53e5\u4f1a\u4f7f Prometheus \u670d\u52a1\u7b49\u5f85\u6307\u5b9a\u7684\u65f6\u95f4, \u7136\u540e\u6267\u884c\u67e5\u8be2\u8868\u8fbe\u5f0f\u3002 labels \u8bed\u53e5\u5141\u8bb8\u6307\u5b9a\u989d\u5916\u7684\u6807\u7b7e\u5217\u8868\uff0c\u628a\u5b83\u4eec\u9644\u52a0\u5728\u544a\u8b66\u4e0a\u3002 annotations \u8bed\u53e5\u6307\u5b9a\u4e86\u53e6\u4e00\u7ec4\u6807\u7b7e\uff0c\u5b83\u4eec\u4e0d\u88ab\u5f53\u505a\u544a\u8b66\u5b9e\u4f8b\u7684\u8eab\u4efd\u6807\u8bc6\uff0c\u5b83\u4eec\u7ecf\u5e38\u7528\u4e8e\u5b58\u50a8\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f\uff0c\u7528\u4e8e\u62a5\u8b66\u4fe1\u606f\u7684\u5c55\u793a\u4e4b\u7c7b\u7684\u3002 \u4e3a\u4e86\u65b9\u4fbf\u6f14\u793a\uff0c\u6211\u4eec\u5c06\u7684\u8868\u8fbe\u5f0f\u5224\u65ad\u62a5\u8b66\u4e34\u754c\u503c\u8bbe\u7f6e\u4e3a 20 \uff0c\u91cd\u65b0\u66f4\u65b0 ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff0c\u7531\u4e8e\u6211\u4eec\u5728 Prometheus \u7684 Pod \u4e2d\u5df2\u7ecf\u901a\u8fc7 Volume \u7684\u5f62\u5f0f\u5c06 prometheus-config \u8fd9\u4e2a\u4e00\u4e2a ConfigMap \u5bf9\u8c61\u6302\u8f7d\u5230\u4e86 /etc/prometheus \u76ee\u5f55\u4e0b\u9762\uff0c\u6240\u4ee5\u66f4\u65b0\u540e\uff0c\u8be5\u76ee\u5f55\u4e0b\u9762\u4e5f\u4f1a\u51fa\u73b0 rules.yml \u6587\u4ef6\uff0c\u6240\u4ee5\u524d\u9762\u914d\u7f6e\u7684 rule_files \u8def\u5f84\u4e5f\u662f\u6b63\u5e38\u7684\uff0c\u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u91cd\u65b0\u6267\u884c reload \u64cd\u4f5c\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53bb Prometheus \u7684 Dashboard \u4e2d\u5207\u6362\u5230alerts\u8def\u5f84\u4e0b\u9762\u5c31\u53ef\u4ee5\u770b\u5230\u6709\u62a5\u8b66\u914d\u7f6e\u89c4\u5219\u7684\u6570\u636e\u4e86\uff1a prometheus alerts \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u9875\u9762\u4e2d\u51fa\u73b0\u4e86\u6211\u4eec\u521a\u521a\u5b9a\u4e49\u7684\u62a5\u8b66\u89c4\u5219\u4fe1\u606f\uff0c\b\u800c\u4e14\u62a5\u8b66\u4fe1\u606f\u4e2d\u8fd8\u6709\u72b6\u6001\u663e\u793a\u3002\u4e00\u4e2a\u62a5\u8b66\u4fe1\u606f\u5728\u751f\u547d\u5468\u671f\u5185\u6709\u4e0b\u97623\u79cd\u72b6\u6001\uff1a inactive : \u8868\u793a\u5f53\u524d\u62a5\u8b66\u4fe1\u606f\u65e2\u4e0d\u662ffiring\u72b6\u6001\u4e5f\u4e0d\u662fpending\u72b6\u6001 pending : \u8868\u793a\u5728\u8bbe\u7f6e\u7684\u9608\u503c\u65f6\u95f4\u8303\u56f4\u5185\u88ab\u6fc0\u6d3b\u4e86 firing : \u8868\u793a\u8d85\u8fc7\u8bbe\u7f6e\u7684\u9608\u503c\u65f6\u95f4\u88ab\u6fc0\u6d3b\u4e86 \u6211\u4eec\u8fd9\u91cc\u7684\u72b6\u6001\u73b0\u5728\u662f firing \u5c31\u8868\u793a\u8fd9\u4e2a\u62a5\u8b66\u5df2\u7ecf\u88ab\u6fc0\u6d3b\u4e86\uff0c\u6211\u4eec\u8fd9\u91cc\u7684\u62a5\u8b66\u4fe1\u606f\u6709\u4e00\u4e2a team=node \u8fd9\u6837\u7684\u6807\u7b7e\uff0c\u800c\u6700\u4e0a\u9762\u6211\u4eec\u914d\u7f6e alertmanager \u7684\u65f6\u5019\u5c31\u6709\u5982\u4e0b\u7684\u8def\u7531\u914d\u7f6e\u4fe1\u606f\u4e86\uff1a routes: - receiver: email group_wait: 10s match: team: node \u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u7684\u62a5\u8b66\u4fe1\u606f\u4f1a\b\u88ab email \u8fd9\u4e2a\u63a5\u6536\u5668\u6765\u8fdb\u884c\u62a5\u8b66\uff0c\u6211\u4eec\u4e0a\u9762\u914d\u7f6e\u7684\u662f\u90ae\u7bb1\uff0c\u6240\u4ee5\u6b63\u5e38\u6765\u8bf4\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4f1a\u6536\u5230\u4e00\u5c01\b\u5982\u4e0b\u7684\u62a5\u8b66\u90ae\u4ef6\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6536\u5230\u7684\u90ae\u4ef6\u5185\u5bb9\u4e2d\u5305\u542b\u4e00\u4e2a View In AlertManager \u7684\u94fe\u63a5\uff0c\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u901a\u8fc7 NodePort \u7684\u5f62\u5f0f\u53bb\u8bbf\u95ee\u5230 AlertManager \u7684 Dashboard \u9875\u9762\uff1a $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.102.74.90 <none> 9093:31788/TCP,9090:30358/TCP 34d \u7136\u540e\u901a\u8fc7 <\u4efb\u4e00Node\u8282\u70b9>:31788 \u8fdb\u884c\u8bbf\u95ee\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u67e5\u770b\u5230 AlertManager \u7684 Dashboard \u9875\u9762\uff1a \u5728\u8fd9\u4e2a\u9875\u9762\u4e2d\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\b\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bd4\u5982\u8fc7\u6ee4\u3001\u5206\u7ec4\u7b49\u7b49\uff0c\u91cc\u9762\u8fd8\u6709\u4e24\u4e2a\u65b0\u7684\u6982\u5ff5\uff1a Inhibition(\u6291\u5236) \u548c Silences(\u9759\u9ed8) \u3002 Inhibition \uff1a\u5982\u679c\u67d0\u4e9b\u5176\u4ed6\u8b66\u62a5\u5df2\u7ecf\u89e6\u53d1\u4e86\uff0c\u5219\u5bf9\u4e8e\u67d0\u4e9b\u8b66\u62a5\uff0cInhibition \u662f\u4e00\u4e2a\u6291\u5236\u901a\u77e5\u7684\u6982\u5ff5\u3002\u4f8b\u5982\uff1a\u4e00\u4e2a\u8b66\u62a5\u5df2\u7ecf\u89e6\u53d1\uff0c\u5b83\u6b63\u5728\u901a\u77e5\u6574\u4e2a\u96c6\u7fa4\u662f\u4e0d\u53ef\u8fbe\u7684\u65f6\uff0cAlertmanager \u5219\u53ef\u4ee5\u914d\u7f6e\u6210\u5173\u5fc3\u8fd9\u4e2a\u96c6\u7fa4\u7684\u5176\u4ed6\u8b66\u62a5\u65e0\u6548\u3002\u8fd9\u53ef\u4ee5\u9632\u6b62\u4e0e\u5b9e\u9645\u95ee\u9898\u65e0\u5173\u7684\u6570\u767e\u6216\u6570\u5343\u4e2a\u89e6\u53d1\u8b66\u62a5\u7684\u901a\u77e5\uff0cInhibition \u9700\u8981\u901a\u8fc7\u4e0a\u9762\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002 Silences \uff1a\u9759\u9ed8\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u7b80\u5355\u5730\u5ffd\u7565\u6240\u6709\u8b66\u62a5\u3002Silences \u57fa\u4e8e matchers\u914d\u7f6e\uff0c\u7c7b\u4f3c\u8def\u7531\u6811\u3002\u6765\u5230\u7684\u8b66\u544a\u5c06\u4f1a\u88ab\u68c0\u67e5\uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u548c\u6d3b\u8dc3\u7684 Silences \u76f8\u7b49\u6216\u8005\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5219\u4e0d\u4f1a\u5c06\u8fd9\u4e9b\u8b66\u62a5\u53d1\u9001\u7ed9\u63a5\u6536\u8005\u3002 \u7531\u4e8e\u5168\u5c40\u914d\u7f6e\u4e2d\u6211\u4eec\u914d\u7f6e\u7684 group_interval: 5m \uff0c\u4e5f\u5c31\u662f\u6bcf5\u5206\u949f\u4e00\u4e2a\u5206\u7ec4\u7684\u62a5\u8b66\u5c06\u4f1a\u91cd\u65b0\u89e6\u53d1\uff0c\u6240\u4ee5\u6b63\u5e38\u6765\u8bf4\uff0c\u4e0a\u9762\u7684\u6d4b\u8bd5\u62a5\u8b66\u5982\u679c\u4e00\u76f4\u6ee1\u8db3\u62a5\u8b66\u6761\u4ef6(CPU\u4f7f\u7528\u7387\u5927\u4e8e20%)\u7684\u8bdd\uff0c\u90a3\u4e48\u6bcf5\u5206\u949f\u6211\u4eec\u5c31\u53ef\u4ee5\u6536\u5230\u4e00\u6761\u62a5\u8b66\u90ae\u4ef6\u3002 \u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a Silences \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5339\u914d node02 \u8282\u70b9\u7684\u5185\u5b58\u62a5\u8b66\uff1a prometheus alertmanager Silences \u6dfb\u52a0\u5b8c\u6210\u540e\uff0c\u7b49\u4e0b\u4e00\u6b21\u7684\u62a5\u8b66\u4fe1\u606f\u89e6\u53d1\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u62a5\u8b66\b\u4fe1\u606f\u91cc\u9762\u5df2\u7ecf\u6ca1\u6709\u4e86\u8282\u70b9 node02 \u7684\u62a5\u8b66\u4fe1\u606f\u4e86\uff1a \u7531\u4e8e\u6211\u4eec\u4e0a\u9762\u6dfb\u52a0\u7684 Silences \u662f\u6709\u8fc7\u671f\u65f6\u95f4\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u8fc7\u540e\uff0cnode02 \u7684\u62a5\u8b66\u4fe1\u606f\u5c31\u4f1a\u6062\u590d\u4e86\u3002","title":"2 \u62a5\u8b66\u89c4\u5219"},{"location":"chap3/10Adv_k8s_AlertManger/#3-webhook","text":"\u4e0a\u9762\u6211\u4eec\u914d\u7f6e\u7684\u662f \bAlertManager \u81ea\u5e26\u7684\u90ae\u4ef6\b\u62a5\u8b66\u6a21\u677f\uff0c\u6211\u4eec\u4e5f\u8bf4\u4e86 AlertManager \u652f\u6301\u5f88\u591a\u4e2d\u62a5\u8b66\u63a5\u6536\u5668\uff0c\u6bd4\u5982 slack\u3001\u5fae\u4fe1\u4e4b\u7c7b\u7684\uff0c\u5176\u4e2d\u6700\u4e3a\u7075\u6d3b\u7684\u65b9\u5f0f\u5f53\u7136\u662f\u4f7f\u7528 webhook \u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a webhook \u6765\u63a5\u6536\u62a5\u8b66\u4fe1\u606f\uff0c\u7136\u540e\u5728 webhook \u91cc\u9762\u53bb\u8fdb\u884c\b\u5904\u7406\uff0c\u9700\u8981\u53d1\u9001\u600e\u6837\u7684\u62a5\u8b66\u4fe1\u606f\u6211\u4eec\u81ea\u5b9a\u4e49\u5c31\u53ef\u4ee5\u3002 \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u7528 Flask \u7f16\u5199\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5904\u7406\u9489\u9489\u62a5\u8b66\u7684 webhook \u7684\u7a0b\u5e8f\uff1a import os import requests from flask import Flask from flask import request app = Flask(__name__) @app.route('/', methods=['POST', 'GET']) def send(): if request.method == 'POST': post_data = request.get_data() send_alert(post_data) return 'success' else: return 'weclome to use prometheus alertmanager dingtalk webhook server!' def send_alert(data): token = os.getenv('ROBOT_TOKEN') if not token: print('you must set ROBOT_TOKEN env') return url = 'https://oapi.dingtalk.com/robot/send?access_token=%s' % token send_data = { \"msgtype\": \"text\", \"text\": { \"content\": data } } req = requests.post(url, json=send_data) result = req.json() if result['errcode'] != 0: print('notify dingtalk error: %s' % result['errcode']) if __name__ == '__main__': from waitress import serve serve(app, listen='0.0.0.0:5000') \u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u901a\u8fc7\u4e00\u4e2a ROBOT_TOKEN \u7684\u73af\u5883\u53d8\u91cf\u4f20\u5165\u7fa4\u673a\u5668\u4eba\u7684 TOKEN \uff0c\u7136\u540e\u76f4\u63a5\u5c06 webhook \u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\u76f4\u63a5\u4ee5\u6587\u672c\u7684\u5f62\u5f0f\u8f6c\u53d1\u7ed9\u7fa4\u673a\u5668\u4eba\u3002 \u5f53\u7136\u6211\u4eec\u5f97\u5c06\u4e0a\u9762\u8fd9\u4e2a\u670d\u52a1\u90e8\u7f72\u5230\u96c6\u7fa4\u4e2d\u6765\uff0c\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\uff1a( dingtalk-hook.yaml ) apiVersion: extensions/v1beta1 kind: Deployment metadata: name: dingtalk-hook namespace: kube-ops spec: template: metadata: labels: app: dingtalk-hook spec: containers: - name: dingtalk-hook image: cnych/alertmanager-dingtalk-hook:v0.2 imagePullPolicy: IfNotPresent ports: - containerPort: 5000 name: http env: - name: ROBOT_TOKEN valueFrom: secretKeyRef: name: dingtalk-secret key: token resources: requests: cpu: 50m memory: 100Mi limits: cpu: 50m memory: 100Mi --- apiVersion: v1 kind: Service metadata: name: dingtalk-hook namespace: kube-ops spec: selector: app: dingtalk-hook ports: - name: hook port: 5000 targetPort: http \u8981\u6ce8\u610f\u4e0a\u9762\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a ROBOT_TOKEN \u7684\u73af\u5883\u53d8\u91cf\uff0c\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u76f8\u5bf9\u4e8e\u79c1\u5bc6\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4ece\u4e00\u4e2a Secret \u5bf9\u8c61\u4e2d\u53bb\u83b7\u53d6\uff0c\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a dingtalk-secret \u7684 Secret \u5bf9\u8c61\uff0c\u7136\u540e\u90e8\u7f72\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a $ kubectl create secret generic dingtalk-secret --from-literal=token=\u66ff\u6362\u6210\u9489\u9489\u7fa4\u804a\u7684\u673a\u5668\u4ebaTOKEN -n kube-ops secret \"dingtalk-secret\" created $ kubectl create -f dingtalk-hook.yaml deployment.extensions \"dingtalk-hook\" created service \"dingtalk-hook\" created $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE dingtalk-hook-c4fcd8cd6-6r2b6 1/1 Running 0 45m ...... \u90e8\u7f72\u6210\u529f\u540e\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9 AlertManager \u914d\u7f6e\u4e00\u4e2a webhook \u4e86\uff0c\u5728\u4e0a\u9762\u7684\u914d\u7f6e\u4e2d\u589e\u52a0\u4e00\u4e2a\u8def\u7531\u63a5\u6536\u5668 routes: - receiver: webhook match: filesystem: node receivers: - name: 'webhook' webhook_configs: - url: 'http://dingtalk-hook:5000' send_resolved: true \u6211\u4eec\u8fd9\u91cc\u914d\u7f6e\u4e86\u4e00\u4e2a\u540d\u4e3a webhook \u7684\u63a5\u6536\u5668\uff0c\u5730\u5740\u4e3a\uff1a http://dingtalk-hook:5000 \uff0c\u8fd9\u4e2a\u5730\u5740\u5f53\u7136\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u90e8\u7f72\u7684\u9489\u9489\u7684 webhook \u7684\u63a5\u6536\u7a0b\u5e8f\u7684 Service \u5730\u5740\u3002 \u7136\u540e\u6211\u4eec\u4e5f\u5728\u62a5\u8b66\u89c4\u5219\u4e2d\u6dfb\u52a0\u4e00\u6761\u5173\u4e8e\u8282\u70b9\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u60c5\u51b5\u7684\u62a5\u8b66\u89c4\u5219\uff0c\u6ce8\u610f labels \u6807\u7b7e\u8981\u5e26\u4e0a alertname=NodeFilesystem \uff0c\u8fd9\u6837\u62a5\u8b66\u4fe1\u606f\u5c31\u4f1a\u88ab webook \u8fd9\u4e00\u4e2a\u63a5\u6536\u5668\u6240\u5339\u914d\uff1a - alert: NodeFilesystemUsage expr: (node_filesystem_size_bytes{device=\"rootfs\"} - node_filesystem_free_bytes{device=\"rootfs\"}) / node_filesystem_size_bytes{device=\"rootfs\"} * 100 > 10 for: 2m labels: filesystem: node annotations: summary: \"{{$labels.instance}}: High Filesystem usage detected\" description: \"{{$labels.instance}}: Filesystem usage is above 10% (current value is: {{ $value }}\" \u66f4\u65b0 AlertManager \u548c Prometheus \u7684 ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff08\u5148\u5220\u9664\u518d\u521b\u5efa\uff09\uff0c\u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u4f1a\u513f\u6267\u884c reload \u64cd\u4f5c\u662f\u66f4\u65b0\u751f\u6548\uff1a $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.102.74.90 <none> 9093:31788/TCP,9090:30358/TCP 34d $ curl -X POST \"http://10.102.74.90:9093/-/reload\" $ curl -X POST \"http://10.102.74.90:9090/-/reload\" AlertManager \u548c Prometheus \u90fd\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684 reload \u64cd\u4f5c\u8fdb\u884c\u91cd\u65b0\u52a0\u8f7d \u90fd\u5b8c\u6210\u66f4\u65b0\u540e\uff0c\u518d\u6b21\u53bb Prometheus \u7684 Alert \u8def\u5f84\u4e0b\u9762\u67e5\u770b\u62a5\u8b66\u4fe1\u606f\uff1a \u9694\u4e00\u4f1a\u513f\u5173\u4e8e\u8fd9\u4e2a\u8282\u70b9\u6587\u4ef6\u7cfb\u7edf\u7684\u62a5\u8b66\u5c31\u4f1a\u88ab\u89e6\u53d1\u4e86\uff0c\u7531\u4e8e\u8fd9\u4e2a\u62a5\u8b66\u4fe1\u606f\u5305\u542b\u4e00\u4e2a filesystem=node \u7684 label \u6807\u7b7e\uff0c\u6240\u4ee5\u4f1a\u88ab\u8def\u7531\u5230 webhook \u8fd9\u4e2a\u63a5\u6536\u5668\u4e2d\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u8fd9\u4e2a dingtalk-hook \uff0c\u89e6\u53d1\u540e\u53ef\u4ee5\u89c2\u5bdf\u8fd9\u4e2a Pod \u7684\u65e5\u5fd7\uff1a $ kubectl logs -f dingtalk-hook-cc677c46d-gf26f -n kube-ops * Serving Flask app \"app\" (lazy loading) * Environment: production WARNING: Do not use the development server in a production environment. Use a production WSGI server instead. * Debug mode: off * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit) 10.244.2.217 - - [28/Nov/2018 17:14:09] \"POST / HTTP/1.1\" 200 - \u53ef\u4ee5\u770b\u5230 POST \u8bf7\u6c42\u5df2\u7ecf\u6210\u529f\u4e86\uff0c\u540c\u65f6\u8fd9\u4e2a\u65f6\u5019\u6b63\u5e38\u6765\u8bf4\u5c31\u53ef\u4ee5\u6536\u5230\u4e00\u6761\u9489\u9489\u6d88\u606f\u4e86\uff1a","title":"\b3 webhook\u63a5\u6536\u5668"},{"location":"chap3/12gpu_monitor/","text":"\u7b2c\u5341\u4e8c\u8282 \u76d1\u63a7Kubernetes\u96c6\u7fa4\u7684GPU\u8d44\u6e90 \u4e00\u3001\u80cc\u666f\u8bf4\u660e 1.1 \u9700\u6c42\u8bf4\u660e \u5bf9\u4e8eSRE\u56e2\u961f\u6765\u8bf4\uff0c\u5b9e\u73b0\u76d1\u63a7AI\u3001\u9ad8\u6027\u80fd\u8ba1\u7b97\u5e73\u53f0\u4e0a\u5927\u89c4\u6a21GPU\u8d44\u6e90\uff0c\u81f3\u5173\u91cd\u8981\u3002SRE\u56e2\u961f\u53ef\u4ee5\u901a\u8fc7GPU\u6307\u6807\u4e86\u89e3\u5de5\u4f5c\u8d1f\u8f7d\u7b49\u76f8\u5173\u6027\u80fd\uff0c\u4ece\u800c\u4f18\u5316\u8d44\u6e90\u5206\u914d\uff0c\u63d0\u5347\u8d44\u6e90\u5229\u7528\u7387\u53ca\u5f02\u5e38\u8bca\u65ad\uff0c\u4ee5\u63d0\u9ad8\u6570\u636e\u4e2d\u5fc3\u8d44\u6e90\u7684\u6574\u4f53\u6548\u80fd\u3002\u9664\u4e86SRE\u53ca\u57fa\u7840\u8bbe\u65bd\u56e2\u961f\u4e4b\u5916\uff0c\u4e0d\u7ba1\u4f60\u662f\u4ece\u4e8bGPU\u52a0\u901f\u65b9\u5411\u7684\u7814\u7a76\u4eba\u5458\uff0c\u8fd8\u662f\u6570\u636e\u4e2d\u5fc3\u67b6\u6784\u5e08\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u76f8\u5173\u76d1\u63a7\u6307\u6807\uff0c\u4e86\u89e3GPU\u5229\u7528\u7387\u548c\u5de5\u4f5c\u9971\u548c\u5ea6\u4ee5\u8fdb\u884c\u5bb9\u91cf\u89c4\u5212\u53ca\u4efb\u52a1\u8c03\u5ea6\u7b49\u3002 \u968f\u7740AI/ML\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5bb9\u5668\u5316\uff0c\u8c03\u5ea6\u5e73\u53f0\u91c7\u7528\u5177\u5907\u52a8\u6001\u6269\u7f29\u7279\u6027\u7684Kubernetes\u89e3\u51b3\u65b9\u6848\uff0c\u9488\u5bf9\u5176\u76d1\u63a7\u7684\u6025\u8feb\u6027\u65e5\u76ca\u63d0\u5347\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecdNVIDIA\u6570\u636e\u4e2d\u5fc3GPU\u7ba1\u7406\u5668\uff08DCGM\uff09\uff0c\u4ee5\u53ca\u5982\u4f55\u5c06\u5176\u96c6\u6210\u5230Prometheus\u548cGrafana\u7b49\u5f00\u6e90\u5de5\u5177\u4e2d\uff0c\u4ee5\u5b9e\u73b0Kubernetes\u7684GPU\u76d1\u63a7\u7684\u6574\u4f53\u89e3\u51b3\u65b9\u6848\u3002 1.2 NVIDIA DCGM NVIDIA DCGM\u662f\u7528\u4e8e\u7ba1\u7406\u548c\u76d1\u63a7\u57fa\u4e8eLinux\u7cfb\u7edf\u7684NVIDIA GPU\u5927\u89c4\u6a21\u96c6\u7fa4\u7684\u4e00\u4f53\u5316\u5de5\u5177\u3002\u5b83\u662f\u4e00\u4e2a\u4f4e\u5f00\u9500\u7684\u5de5\u5177\uff0c\u63d0\u4f9b\u591a\u79cd\u80fd\u529b\uff0c\u5305\u62ec\u4e3b\u52a8\u5065\u5eb7\u76d1\u63a7\u3001\u8bca\u65ad\u3001\u7cfb\u7edf\u9a8c\u8bc1\u3001\u7b56\u7565\u3001\u7535\u6e90\u548c\u65f6\u949f\u7ba1\u7406\u3001\u914d\u7f6e\u7ba1\u7406\u548c\u5ba1\u8ba1\u7b49\u3002 DCGM\u63d0\u4f9b\u7528\u4e8e\u6536\u96c6GPU\u9065\u6d4b\u7684API\u3002\u7279\u522b\u503c\u5f97\u5173\u6ce8\u7684\u662fGPU\u5229\u7528\u7387\u6307\u6807\u3001\u5185\u5b58\u6307\u6807\u548c\u6d41\u91cf\u6307\u6807\u3002DCGM\u63d0\u4f9b\u4e86\u5404\u79cd\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\uff0c\u5982C\u548cPython\u3002\u5bf9\u4e8e\u4e0e\u5bb9\u5668\u751f\u6001\u7cfb\u7edf\u7684\u96c6\u6210\uff0c\u63d0\u4f9b\u57fa\u4e8eDCGM APIs\u7684Go\u7ed1\u5b9a\u5b9e\u73b0\u3002 1.3 NVIDIA exporter \u5728\u524d\u9762\u4ecb\u7ecd\u7684Go API\u57fa\u7840\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7 DCGM \u5411 Prometheus \u66b4\u9732GPU\u6307\u6807\u3002NVIDIA\u4e3a\u6b64\u6784\u5efa\u4e86 dcgm-exporter \u7684\u9879\u76ee\u3002 dcgm-exporter \u4f7f\u7528 Go \u7ed1\u5b9a\u4ece DCGM \u6536\u96c6 GPU \u9065\u6d4b\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7 http \u63a5\u53e3 ( /metrics ) \u5411 Prometheus \u66b4\u9732\u6307\u6807\u3002 dcgm-exporter \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528csv\u683c\u5f0f\u7684\u914d\u7f6e\u6587\u4ef6\u6765\u5b9a\u5236DCGM\u6536\u96c6\u7684GPU\u6307\u6807\u3002 1.4 Kubelet\u8bbe\u5907\u76d1\u63a7 dcgm-exporter \u6536\u96c6\u4e86\u8282\u70b9\u4e0a\u6240\u6709\u53ef\u7528GPU\u7684\u6307\u6807 \u3002 \u7136\u800c\uff0c\u5728Kubernetes\u4e2d\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u8bf7\u6c42GPU\u8d44\u6e90\u65f6\uff0c\u53ef\u80fd\u4e0d\u80fd\u786e\u5b9a\u54ea\u4e9bGPU\u4f1a\u88ab\u5206\u914d\u7ed9pod \u3002 \u4ecev1.13\u5f00\u59cb\uff0cKubelet\u589e\u52a0\u4e86\u4e00\u4e2a\u8bbe\u5907\u76d1\u63a7\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7pod-resources\u5957\u63a5\u5b57\u4e86\u89e3\u5206\u914d\u7ed9pod\u7684\u8bbe\u5907\uff0c\u5176\u4e2d\u5305\u62ecpod\u540d\u79f0\u3001pod\u547d\u540d\u7a7a\u95f4\u548c\u8bbe\u5907ID\u3002 dcgm-exporter \u4e2d\u7684http\u670d\u52a1\u8fde\u63a5\u5230 kubelet \u4e2d\u7684 pod-resources \u670d\u52a1( /var/lib/kubelet/pod-resources )\u6765\u8bc6\u522bpod\u4e0a\u8fd0\u884c\u7684GPU\u8bbe\u5907\uff0c\u5e76\u5c06GPU\u8bbe\u5907\u7684pod\u76f8\u5173\u4fe1\u606f\u6dfb\u52a0\u5230\u6536\u96c6\u7684\u6307\u6807\u4e2d \u3002 \u4e8c\u3001GPU\u76d1\u63a7 2.1 \u90e8\u7f72\u8bf4\u660e \u4e0b\u9762\u662f\u4e00\u4e9b\u8bbe\u7f6edcgm-exporter\u7684\u793a\u4f8b\u3002\u5982\u679c\u4f7f\u7528NVIDIA GPU Operator\uff0c\u90a3\u4e48dcgm-exporter\u540c\u6837\u662f\u90e8\u7f72\u7ec4\u4ef6\u4e4b\u4e00\u3002 \u6587\u6863\u4e2d\u5305\u542b\u4e86\u8bbe\u7f6eKubernetes\u96c6\u7fa4\u7684\u6b65\u9aa4\u3002\u4e3a\u4e86\u7b80\u6d01\u8d77\u89c1\uff0c\u5047\u5b9a\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a\u8fd0\u884c\u7740NVIDIA\u8f6f\u4ef6\u7ec4\u4ef6\u7684Kubernetes\u96c6\u7fa4\uff0c\u4f8b\u5982\uff0c\u9a71\u52a8\u7a0b\u5e8f\u3001\u5bb9\u5668\u8fd0\u884c\u65f6\u548cKubernetes\u8bbe\u5907\u63d2\u4ef6\u7b49\u3002\u5728\u4f7f\u7528Prometheus Operator\u90e8\u7f72Prometheus\u65f6\uff0c\u8fd8\u53ef\u4ee5\u65b9\u4fbf\u5730\u90e8\u7f72Grafana\u3002\u5728\u8be5\u7bc7\u6587\u7ae0\u4e2d\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u4f7f\u7528\u4e86\u5355\u8282\u70b9Kubernetes\u96c6\u7fa4\u3002 \u5728\u8bbe\u7f6e\u793e\u533a\u63d0\u4f9b\u7684Prometheus Operator\u7684Helm chart\u65f6\uff0c\u5fc5\u987b\u66b4\u9732Grafana\u4f9b\u5916\u90e8\u8bbf\u95ee\uff0c\u5e76\u4e14 prometheusSpec.serviceMonitorSelectorNilUsesHelmValues \u5fc5\u987b\u8bbe\u7f6e\u4e3afalse \u7b80\u5355\u6765\u8bf4\uff0c\u8bbe\u7f6e\u76d1\u63a7\u5305\u62ec\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 $ helm repo add prometheus-community \\ https://prometheus-community.github.io/helm-charts $ helm repo update $ helm inspect values prometheus-community/kube-prometheus-stack > /tmp/kube-prometheus-stack.values # Edit /tmp/kube-prometheus-stack.values in your favorite editor # according to the documentation # This exposes the service via NodePort so that Prometheus/Grafana # are accessible outside the cluster with a browser $ helm install prometheus-community/kube-prometheus-stack \\ --create-namespace --namespace prometheus \\ --generate-name \\ --set prometheus.service.type=NodePort \\ --set prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues=false \u6b64\u65f6\uff0c\u96c6\u7fa4\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff0c\u5176\u4e2d\u6240\u6709\u7684Prometheus pods\u548c\u670d\u52a1\u5065\u5eb7\u8fd0\u884c\u3002 $ kubectl get pods -A NAMESPACE NAME READY STATUS RESTARTS AGE kube-system calico-kube-controllers-8f59968d4-zrsdt 1/1 Running 0 18m kube-system calico-node-c257f 1/1 Running 0 18m kube-system coredns-f9fd979d6-c52hz 1/1 Running 0 19m kube-system coredns-f9fd979d6-ncbdp 1/1 Running 0 19m kube-system etcd-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-apiserver-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-controller-manager-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-proxy-b9szp 1/1 Running 1 19m kube-system kube-scheduler-ip-172-31-27-93 1/1 Running 1 19m kube-system nvidia-device-plugin-1602308324-jg842 1/1 Running 0 17m prometheus alertmanager-kube-prometheus-stack-1602-alertmanager-0 2/2 Running 0 92s prometheus kube-prometheus-stack-1602-operator-c4bc5c4d5-f5vzc 2/2 Running 0 98s prometheus kube-prometheus-stack-1602309230-grafana-6b4fc97f8f-66kdv 2/2 Running 0 98s prometheus kube-prometheus-stack-1602309230-kube-state-metrics-76887bqzv2b 1/1 Running 0 98s prometheus kube-prometheus-stack-1602309230-prometheus-node-exporter-rrk9l 1/1 Running 0 98s prometheus prometheus-kube-prometheus-stack-1602-prometheus-0 3/3 Running 1 92s $ kubectl get pods -A NAMESPACE NAME READY STATUS RESTARTS AGE kube-system calico-kube-controllers-8f59968d4-zrsdt 1/1 Running 0 18m kube-system calico-node-c257f 1/1 Running 0 18m kube-system coredns-f9fd979d6-c52hz 1/1 Running 0 19m kube-system coredns-f9fd979d6-ncbdp 1/1 Running 0 19m kube-system etcd-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-apiserver-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-controller-manager-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-proxy-b9szp 1/1 Running 1 19m kube-system kube-scheduler-ip-172-31-27-93 1/1 Running 1 19m kube-system nvidia-device-plugin-1602308324-jg842 1/1 Running 0 17m prometheus alertmanager-kube-prometheus-stack-1602-alertmanager-0 2/2 Running 0 92s prometheus kube-prometheus-stack-1602-operator-c4bc5c4d5-f5vzc 2/2 Running 0 98s prometheus kube-prometheus-stack-1602309230-grafana-6b4fc97f8f-66kdv 2/2 Running 0 98s prometheus kube-prometheus-stack-1602309230-kube-state-metrics-76887bqzv2b 1/1 Running 0 98s prometheus kube-prometheus-stack-1602309230-prometheus-node-exporter-rrk9l 1/1 Running 0 98s prometheus prometheus-kube-prometheus-stack-1602-prometheus-0 3/3 Running 1 92s $ kubectl get svc -A NAMESPACE NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE default kubernetes ClusterIP 10.96.0.1 <none> 443/TCP 20m kube-system kube-dns ClusterIP 10.96.0.10 <none> 53/UDP,53/TCP,9153/TCP 20m kube-system kube-prometheus-stack-1602-coredns ClusterIP None <none> 9153/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-controller-manager ClusterIP None <none> 10252/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-etcd ClusterIP None <none> 2379/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-proxy ClusterIP None <none> 10249/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-scheduler ClusterIP None <none> 10251/TCP 2m18s kube-system kube-prometheus-stack-1602-kubelet ClusterIP None <none> 10250/TCP,10255/TCP,4194/TCP 2m12s prometheus alertmanager-operated ClusterIP None <none> 9093/TCP,9094/TCP,9094/UDP 2m12s prometheus kube-prometheus-stack-1602-alertmanager ClusterIP 10.104.106.174 <none> 9093/TCP 2m18s prometheus kube-prometheus-stack-1602-operator ClusterIP 10.98.165.148 <none> 8080/TCP,443/TCP 2m18s prometheus kube-prometheus-stack-1602-prometheus NodePort 10.105.3.19 <none> 9090:30090/TCP 2m18s prometheus kube-prometheus-stack-1602309230-grafana ClusterIP 10.100.178.41 <none> 80/TCP 2m18s prometheus kube-prometheus-stack-1602309230-kube-state-metrics ClusterIP 10.100.119.13 <none> 8080/TCP 2m18s prometheus kube-prometheus-stack-1602309230-prometheus-node-exporter ClusterIP 10.100.56.74 <none> 9100/TCP 2m18s prometheus prometheus-operated ClusterIP None <none> 9090/TCP 2m12s \u90e8\u7f72 dcgm-exporter $ helm repo add gpu-helm-charts \\ https://nvidia.github.io/gpu-monitoring-tools/helm-charts $ helm repo update \u4f7f\u7528helm\u5b89\u88c5 $ helm install \\ --generate-name \\ gpu-helm-charts/dcgm-exporter \u7ed3\u679c\u9a8c\u8bc1 $ helm ls NAME NAMESPACE REVISION APP VERSION dcgm-exporter-1-1601677302 default 1 dcgm-exporter-1.1.0 2.0.10 nvidia-device-plugin-1601662841 default 1 nvidia-device-plugin-0.7.0 0.7.0 Prometheus\u548cGrafana\u670d\u52a1\u66b4\u9732\u5982\u4e0b\uff1a $ kubectl get svc -A NAMESPACE NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE default dcgm-exporter ClusterIP 10.99.34.128 <none> 9400/TCP 43d default kubernetes ClusterIP 10.96.0.1 <none> 443/TCP 20m kube-system kube-dns ClusterIP 10.96.0.10 <none> 53/UDP,53/TCP,9153/TCP 20m kube-system kube-prometheus-stack-1602-coredns ClusterIP None <none> 9153/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-controller-manager ClusterIP None <none> 10252/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-etcd ClusterIP None <none> 2379/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-proxy ClusterIP None <none> 10249/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-scheduler ClusterIP None <none> 10251/TCP 2m18s kube-system kube-prometheus-stack-1602-kubelet ClusterIP None <none> 10250/TCP,10255/TCP,4194/TCP 2m12s prometheus alertmanager-operated ClusterIP None <none> 9093/TCP,9094/TCP,9094/UDP 2m12s prometheus kube-prometheus-stack-1602-alertmanager ClusterIP 10.104.106.174 <none> 9093/TCP 2m18s prometheus kube-prometheus-stack-1602-operator ClusterIP 10.98.165.148 <none> 8080/TCP,443/TCP 2m18s prometheus kube-prometheus-stack-1602-prometheus NodePort 10.105.3.19 <none> 9090:30090/TCP 2m18s prometheus kube-prometheus-stack-1602309230-grafana ClusterIP 10.100.178.41 <none> 80:32032/TCP 2m18s prometheus kube-prometheus-stack-1602309230-kube-state-metrics ClusterIP 10.100.119.13 <none> 8080/TCP 2m18s prometheus kube-prometheus-stack-1602309230-prometheus-node-exporter ClusterIP 10.100.56.74 <none> 9100/TCP 2m18s prometheus prometheus-operated \u4f7f\u752832032\u7aef\u53e3\u66b4\u9732\u7684Grafana\u670d\u52a1\uff0c\u8bbf\u95eeGrafana\u4e3b\u9875\u3002\u4f7f\u7528Prometheus chart\u4e2d\u8bbe\u7f6e\u7684\u51ed\u8bc1\u767b\u5f55\u5230\u4eea\u8868\u677f\uff1a prometheus.values \u4e2d\u7684 adminPassword \u5b57\u6bb5\u3002 \u73b0\u5728\u8981\u542f\u52a8\u4e00\u4e2a\u7528\u4e8eGPU\u6307\u6807\u7684Grafana\u4eea\u8868\u677f\uff0c\u8bf7\u4eceGrafana\u4eea\u8868\u677f\uff08 https://grafana.com/grafana/dashboards/12239 \uff09\u5bfc\u5165NVIDIA\u4eea\u8868\u677f\u3002 \u73b0\u5728\u8fd0\u884c\u4e00\u4e9bGPU\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4e3a\u6b64\uff0cDCGM\u793e\u533a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a dcgmproftester \u7684 CUDA \u8d1f\u8f7d\u751f\u6210\u5668\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u751f\u6210\u786e\u5b9a\u6027\u7684CUDA\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u7528\u4e8e\u8bfb\u53d6\u548c\u9a8c\u8bc1GPU\u6307\u6807\u3002 \u8981\u751f\u6210\u4e00\u4e2aPod\uff0c\u9996\u5148\u5fc5\u987b\u4e0b\u8f7dDCGM\u5e76\u5c06\u5236\u6210\u955c\u50cf\u3002\u4ee5\u4e0b\u811a\u672c\u521b\u5efa\u4e86\u4e00\u4e2a\u53ef\u7528\u4e8e\u8fd0\u884c dcgmproftester \u7684\u5bb9\u5668\u3002\u8fd9\u4e2a\u5bb9\u5668\u53ef\u4ee5\u5728NVIDIA DockerHub\u4ed3\u5e93\u4e2d\u627e\u5230\u3002 #!/usr/bin/env bash set -exo pipefail mkdir -p /tmp/dcgm-docker pushd /tmp/dcgm-docker cat > Dockerfile <<EOF ARG BASE_DIST ARG CUDA_VER FROM nvidia/cuda:\\${CUDA_VER}-base-\\${BASE_DIST} LABEL io.k8s.display-name=\"NVIDIA dcgmproftester\" ARG DCGM_VERSION WORKDIR /dcgm RUN apt-get update && apt-get install -y --no-install-recommends \\ libgomp1 \\ wget && \\ rm -rf /var/lib/apt/lists/* && \\ wget --no-check-certificate https://developer.download.nvidia.com/compute/redist/dcgm/\\${DCGM_VERSION}/DEBS/datacenter-gpu-manager_\\${DCGM_VERSION}_amd64.deb && \\ dpkg -i datacenter-gpu-manager_*.deb && \\ rm -f datacenter-gpu-manager_*.deb ENTRYPOINT [\"/usr/bin/dcgmproftester11\"] EOF DIR=. DCGM_REL_VERSION=2.0.10 BASE_DIST=ubuntu18.04 CUDA_VER=11.0 IMAGE_NAME=nvidia/samples:dcgmproftester-$DCGM_REL_VERSION-cuda$CUDA_VER-$BASE_DIST docker build --pull \\ -t \"$IMAGE_NAME\" \\ --build-arg DCGM_VERSION=$DCGM_REL_VERSION \\ --build-arg BASE_DIST=$BASE_DIST \\ --build-arg CUDA_VER=$CUDA_VER \\ --file Dockerfile \\ \"$DIR\" popd \u5728Kubernetes\u96c6\u7fa4\u4e0a\u90e8\u7f72\u5bb9\u5668\u4e4b\u524d\uff0c\u5c1d\u8bd5\u76f4\u63a5\u4f7f\u7528Docker\u8fd0\u884c\u5b83\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u901a\u8fc7\u6307\u5b9a-t 1004\u6765\u4f7f\u7528Tensor Cores\u89e6\u53d1FP16\u77e9\u9635\u4e58\u6cd5\uff0c\u5e76\u4ee5 -d 45 \uff0845\u79d2\uff09\u7684\u901f\u5ea6\u8fd0\u884c\u6d4b\u8bd5\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539-t\u53c2\u6570\u6765\u5c1d\u8bd5\u8fd0\u884c\u5176\u4ed6\u5de5\u4f5c\u8d1f\u8f7d\u3002 Skipping CreateDcgmGroups() since DCGM validation is disabled CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR: 1024 CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT: 40 CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_MULTIPROCESSOR: 65536 CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR: 7 CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR: 5 CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH: 256 CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE: 5001000 Max Memory bandwidth: 320064000000 bytes (320.06 GiB) CudaInit completed successfully. Skipping WatchFields() since DCGM validation is disabled TensorEngineActive: generated ???, dcgm 0.000 (27605.2 gflops) TensorEngineActive: generated ???, dcgm 0.000 (28697.6 gflops) \u5c06\u5176\u90e8\u7f72\u5230Kubernetes\u96c6\u7fa4\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7Grafana\u4eea\u8868\u677f\u89c2\u6d4b\u76f8\u5e94\u7684\u6307\u6807\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u793a\u4f8b\uff1a cat << EOF | kubectl create -f - apiVersion: v1 kind: Pod metadata: name: dcgmproftester spec: restartPolicy: OnFailure containers: - name: dcgmproftester11 image: nvidia/samples:dcgmproftester-2.0.10-cuda11.0-ubuntu18.04 args: [\"--no-dcgm-validation\", \"-t 1004\", \"-d 120\"] resources: limits: nvidia.com/gpu: 1 securityContext: capabilities: add: [\"SYS_ADMIN\"] EOF \u53ef\u4ee5\u770b\u5230dcgmproftester pod\u5065\u5eb7\u8fd0\u884c\uff0c\u968f\u540e\u6307\u6807\u663e\u793a\u5728Grafana\u4eea\u8868\u677f\u4e0a\u3002GPU\u5229\u7528\u7387(GrActive)\u5df2\u7ecf\u8fbe\u5230\u4e8698%\u7684\u5229\u7528\u7387\u5cf0\u503c\uff0c\u53ef\u80fd\u8fd8\u4f1a\u53d1\u73b0\u5176\u4ed6\u6709\u8da3\u7684\u6307\u6807\uff0c\u6bd4\u5982\u529f\u7387\u6216GPU\u5185\u5b58\u3002 $ kubectl get pods -A NAMESPACE NAME READY STATUS RESTARTS AGE ... default dcgmproftester 1/1 Running 0 6s DCGM\u6700\u8fd1\u589e\u52a0\u4e86\u4e00\u4e9b\u8bbe\u5907\u7ea7\u6307\u6807\u3002\u5176\u4e2d\u5305\u62ec\u7ec6\u7c92\u5ea6\u7684GPU\u5229\u7528\u7387\u6307\u6807\uff0c\u53ef\u4ee5\u76d1\u63a7SM\u5360\u7528\u7387\u548cTensor Core\u5229\u7528\u7387\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u67e5\u770bDCGM\u7528\u6237\u6307\u5357\u4e2d\u7684Profiling Metrics\u3002 \u4e0b\u56fe\u663e\u793a\u4e86 Prometheus\u83b7\u53d6\u7684\u7531 dcgm-exporter \u63d0\u4f9b\u7684\u76d1\u63a7\u6307\u6807\u3002 \u60a8\u53ef\u4ee5\u81ea\u5b9a\u4e49Grafana\u4eea\u8868\u677f\uff0c\u4ee5\u5305\u542bDCGM\u7684\u5176\u4ed6\u6307\u6807\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u7f16\u8f91 repo \u4e0a\u63d0\u4f9b\u7684 Grafana JSON \u6587\u4ef6\u5c06 Tensor Core \u5229\u7528\u7387\u6dfb\u52a0\u5230\u4eea\u8868\u677f\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528Grafana\u7684Web\u754c\u9762\u8fdb\u884c\u7f16\u8f91\u3002 \u4e0b\u9762\u7684\u4eea\u8868\u677f\u5305\u62ecTensor Core\u5229\u7528\u7387\u3002\u91cd\u65b0\u542f\u52a8dcgmproftester\u5bb9\u5668\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230T4\u4e0a\u7684Tensor Core\u5df2\u7ecf\u8fbe\u5230\u4e86\u7ea687%\u7684\u5229\u7528\u7387\u3002 \u901a\u8fc7\u5c06GPU\u6307\u6807\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u6307\u6807\u548cPrometheus Adapter\uff0c\u53ef\u4ee5\u4f7f\u7528Horizontal Pod Autoscaler\u6839\u636eGPU\u5229\u7528\u7387\u6216\u5176\u4ed6\u6307\u6807\u6765\u6269\u5c55Pod\u6570\u91cf\u3002","title":"\u7b2c\u5341\u4e8c\u8282 \u76d1\u63a7Kubernetes\u96c6\u7fa4\u7684GPU\u8d44\u6e90"},{"location":"chap3/12gpu_monitor/#kubernetesgpu","text":"","title":"\u7b2c\u5341\u4e8c\u8282 \u76d1\u63a7Kubernetes\u96c6\u7fa4\u7684GPU\u8d44\u6e90"},{"location":"chap3/12gpu_monitor/#_1","text":"","title":"\u4e00\u3001\u80cc\u666f\u8bf4\u660e"},{"location":"chap3/12gpu_monitor/#11","text":"\u5bf9\u4e8eSRE\u56e2\u961f\u6765\u8bf4\uff0c\u5b9e\u73b0\u76d1\u63a7AI\u3001\u9ad8\u6027\u80fd\u8ba1\u7b97\u5e73\u53f0\u4e0a\u5927\u89c4\u6a21GPU\u8d44\u6e90\uff0c\u81f3\u5173\u91cd\u8981\u3002SRE\u56e2\u961f\u53ef\u4ee5\u901a\u8fc7GPU\u6307\u6807\u4e86\u89e3\u5de5\u4f5c\u8d1f\u8f7d\u7b49\u76f8\u5173\u6027\u80fd\uff0c\u4ece\u800c\u4f18\u5316\u8d44\u6e90\u5206\u914d\uff0c\u63d0\u5347\u8d44\u6e90\u5229\u7528\u7387\u53ca\u5f02\u5e38\u8bca\u65ad\uff0c\u4ee5\u63d0\u9ad8\u6570\u636e\u4e2d\u5fc3\u8d44\u6e90\u7684\u6574\u4f53\u6548\u80fd\u3002\u9664\u4e86SRE\u53ca\u57fa\u7840\u8bbe\u65bd\u56e2\u961f\u4e4b\u5916\uff0c\u4e0d\u7ba1\u4f60\u662f\u4ece\u4e8bGPU\u52a0\u901f\u65b9\u5411\u7684\u7814\u7a76\u4eba\u5458\uff0c\u8fd8\u662f\u6570\u636e\u4e2d\u5fc3\u67b6\u6784\u5e08\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u76f8\u5173\u76d1\u63a7\u6307\u6807\uff0c\u4e86\u89e3GPU\u5229\u7528\u7387\u548c\u5de5\u4f5c\u9971\u548c\u5ea6\u4ee5\u8fdb\u884c\u5bb9\u91cf\u89c4\u5212\u53ca\u4efb\u52a1\u8c03\u5ea6\u7b49\u3002 \u968f\u7740AI/ML\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5bb9\u5668\u5316\uff0c\u8c03\u5ea6\u5e73\u53f0\u91c7\u7528\u5177\u5907\u52a8\u6001\u6269\u7f29\u7279\u6027\u7684Kubernetes\u89e3\u51b3\u65b9\u6848\uff0c\u9488\u5bf9\u5176\u76d1\u63a7\u7684\u6025\u8feb\u6027\u65e5\u76ca\u63d0\u5347\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecdNVIDIA\u6570\u636e\u4e2d\u5fc3GPU\u7ba1\u7406\u5668\uff08DCGM\uff09\uff0c\u4ee5\u53ca\u5982\u4f55\u5c06\u5176\u96c6\u6210\u5230Prometheus\u548cGrafana\u7b49\u5f00\u6e90\u5de5\u5177\u4e2d\uff0c\u4ee5\u5b9e\u73b0Kubernetes\u7684GPU\u76d1\u63a7\u7684\u6574\u4f53\u89e3\u51b3\u65b9\u6848\u3002","title":"1.1 \u9700\u6c42\u8bf4\u660e"},{"location":"chap3/12gpu_monitor/#12-nvidia-dcgm","text":"NVIDIA DCGM\u662f\u7528\u4e8e\u7ba1\u7406\u548c\u76d1\u63a7\u57fa\u4e8eLinux\u7cfb\u7edf\u7684NVIDIA GPU\u5927\u89c4\u6a21\u96c6\u7fa4\u7684\u4e00\u4f53\u5316\u5de5\u5177\u3002\u5b83\u662f\u4e00\u4e2a\u4f4e\u5f00\u9500\u7684\u5de5\u5177\uff0c\u63d0\u4f9b\u591a\u79cd\u80fd\u529b\uff0c\u5305\u62ec\u4e3b\u52a8\u5065\u5eb7\u76d1\u63a7\u3001\u8bca\u65ad\u3001\u7cfb\u7edf\u9a8c\u8bc1\u3001\u7b56\u7565\u3001\u7535\u6e90\u548c\u65f6\u949f\u7ba1\u7406\u3001\u914d\u7f6e\u7ba1\u7406\u548c\u5ba1\u8ba1\u7b49\u3002 DCGM\u63d0\u4f9b\u7528\u4e8e\u6536\u96c6GPU\u9065\u6d4b\u7684API\u3002\u7279\u522b\u503c\u5f97\u5173\u6ce8\u7684\u662fGPU\u5229\u7528\u7387\u6307\u6807\u3001\u5185\u5b58\u6307\u6807\u548c\u6d41\u91cf\u6307\u6807\u3002DCGM\u63d0\u4f9b\u4e86\u5404\u79cd\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\uff0c\u5982C\u548cPython\u3002\u5bf9\u4e8e\u4e0e\u5bb9\u5668\u751f\u6001\u7cfb\u7edf\u7684\u96c6\u6210\uff0c\u63d0\u4f9b\u57fa\u4e8eDCGM APIs\u7684Go\u7ed1\u5b9a\u5b9e\u73b0\u3002","title":"1.2 NVIDIA DCGM"},{"location":"chap3/12gpu_monitor/#13-nvidia-exporter","text":"\u5728\u524d\u9762\u4ecb\u7ecd\u7684Go API\u57fa\u7840\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7 DCGM \u5411 Prometheus \u66b4\u9732GPU\u6307\u6807\u3002NVIDIA\u4e3a\u6b64\u6784\u5efa\u4e86 dcgm-exporter \u7684\u9879\u76ee\u3002 dcgm-exporter \u4f7f\u7528 Go \u7ed1\u5b9a\u4ece DCGM \u6536\u96c6 GPU \u9065\u6d4b\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7 http \u63a5\u53e3 ( /metrics ) \u5411 Prometheus \u66b4\u9732\u6307\u6807\u3002 dcgm-exporter \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528csv\u683c\u5f0f\u7684\u914d\u7f6e\u6587\u4ef6\u6765\u5b9a\u5236DCGM\u6536\u96c6\u7684GPU\u6307\u6807\u3002","title":"1.3 NVIDIA exporter"},{"location":"chap3/12gpu_monitor/#14-kubelet","text":"dcgm-exporter \u6536\u96c6\u4e86\u8282\u70b9\u4e0a\u6240\u6709\u53ef\u7528GPU\u7684\u6307\u6807 \u3002 \u7136\u800c\uff0c\u5728Kubernetes\u4e2d\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u8bf7\u6c42GPU\u8d44\u6e90\u65f6\uff0c\u53ef\u80fd\u4e0d\u80fd\u786e\u5b9a\u54ea\u4e9bGPU\u4f1a\u88ab\u5206\u914d\u7ed9pod \u3002 \u4ecev1.13\u5f00\u59cb\uff0cKubelet\u589e\u52a0\u4e86\u4e00\u4e2a\u8bbe\u5907\u76d1\u63a7\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7pod-resources\u5957\u63a5\u5b57\u4e86\u89e3\u5206\u914d\u7ed9pod\u7684\u8bbe\u5907\uff0c\u5176\u4e2d\u5305\u62ecpod\u540d\u79f0\u3001pod\u547d\u540d\u7a7a\u95f4\u548c\u8bbe\u5907ID\u3002 dcgm-exporter \u4e2d\u7684http\u670d\u52a1\u8fde\u63a5\u5230 kubelet \u4e2d\u7684 pod-resources \u670d\u52a1( /var/lib/kubelet/pod-resources )\u6765\u8bc6\u522bpod\u4e0a\u8fd0\u884c\u7684GPU\u8bbe\u5907\uff0c\u5e76\u5c06GPU\u8bbe\u5907\u7684pod\u76f8\u5173\u4fe1\u606f\u6dfb\u52a0\u5230\u6536\u96c6\u7684\u6307\u6807\u4e2d \u3002","title":"1.4 Kubelet\u8bbe\u5907\u76d1\u63a7"},{"location":"chap3/12gpu_monitor/#gpu","text":"","title":"\u4e8c\u3001GPU\u76d1\u63a7"},{"location":"chap3/12gpu_monitor/#21","text":"\u4e0b\u9762\u662f\u4e00\u4e9b\u8bbe\u7f6edcgm-exporter\u7684\u793a\u4f8b\u3002\u5982\u679c\u4f7f\u7528NVIDIA GPU Operator\uff0c\u90a3\u4e48dcgm-exporter\u540c\u6837\u662f\u90e8\u7f72\u7ec4\u4ef6\u4e4b\u4e00\u3002 \u6587\u6863\u4e2d\u5305\u542b\u4e86\u8bbe\u7f6eKubernetes\u96c6\u7fa4\u7684\u6b65\u9aa4\u3002\u4e3a\u4e86\u7b80\u6d01\u8d77\u89c1\uff0c\u5047\u5b9a\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a\u8fd0\u884c\u7740NVIDIA\u8f6f\u4ef6\u7ec4\u4ef6\u7684Kubernetes\u96c6\u7fa4\uff0c\u4f8b\u5982\uff0c\u9a71\u52a8\u7a0b\u5e8f\u3001\u5bb9\u5668\u8fd0\u884c\u65f6\u548cKubernetes\u8bbe\u5907\u63d2\u4ef6\u7b49\u3002\u5728\u4f7f\u7528Prometheus Operator\u90e8\u7f72Prometheus\u65f6\uff0c\u8fd8\u53ef\u4ee5\u65b9\u4fbf\u5730\u90e8\u7f72Grafana\u3002\u5728\u8be5\u7bc7\u6587\u7ae0\u4e2d\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u4f7f\u7528\u4e86\u5355\u8282\u70b9Kubernetes\u96c6\u7fa4\u3002 \u5728\u8bbe\u7f6e\u793e\u533a\u63d0\u4f9b\u7684Prometheus Operator\u7684Helm chart\u65f6\uff0c\u5fc5\u987b\u66b4\u9732Grafana\u4f9b\u5916\u90e8\u8bbf\u95ee\uff0c\u5e76\u4e14 prometheusSpec.serviceMonitorSelectorNilUsesHelmValues \u5fc5\u987b\u8bbe\u7f6e\u4e3afalse \u7b80\u5355\u6765\u8bf4\uff0c\u8bbe\u7f6e\u76d1\u63a7\u5305\u62ec\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 $ helm repo add prometheus-community \\ https://prometheus-community.github.io/helm-charts $ helm repo update $ helm inspect values prometheus-community/kube-prometheus-stack > /tmp/kube-prometheus-stack.values # Edit /tmp/kube-prometheus-stack.values in your favorite editor # according to the documentation # This exposes the service via NodePort so that Prometheus/Grafana # are accessible outside the cluster with a browser $ helm install prometheus-community/kube-prometheus-stack \\ --create-namespace --namespace prometheus \\ --generate-name \\ --set prometheus.service.type=NodePort \\ --set prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues=false \u6b64\u65f6\uff0c\u96c6\u7fa4\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff0c\u5176\u4e2d\u6240\u6709\u7684Prometheus pods\u548c\u670d\u52a1\u5065\u5eb7\u8fd0\u884c\u3002 $ kubectl get pods -A NAMESPACE NAME READY STATUS RESTARTS AGE kube-system calico-kube-controllers-8f59968d4-zrsdt 1/1 Running 0 18m kube-system calico-node-c257f 1/1 Running 0 18m kube-system coredns-f9fd979d6-c52hz 1/1 Running 0 19m kube-system coredns-f9fd979d6-ncbdp 1/1 Running 0 19m kube-system etcd-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-apiserver-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-controller-manager-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-proxy-b9szp 1/1 Running 1 19m kube-system kube-scheduler-ip-172-31-27-93 1/1 Running 1 19m kube-system nvidia-device-plugin-1602308324-jg842 1/1 Running 0 17m prometheus alertmanager-kube-prometheus-stack-1602-alertmanager-0 2/2 Running 0 92s prometheus kube-prometheus-stack-1602-operator-c4bc5c4d5-f5vzc 2/2 Running 0 98s prometheus kube-prometheus-stack-1602309230-grafana-6b4fc97f8f-66kdv 2/2 Running 0 98s prometheus kube-prometheus-stack-1602309230-kube-state-metrics-76887bqzv2b 1/1 Running 0 98s prometheus kube-prometheus-stack-1602309230-prometheus-node-exporter-rrk9l 1/1 Running 0 98s prometheus prometheus-kube-prometheus-stack-1602-prometheus-0 3/3 Running 1 92s $ kubectl get pods -A NAMESPACE NAME READY STATUS RESTARTS AGE kube-system calico-kube-controllers-8f59968d4-zrsdt 1/1 Running 0 18m kube-system calico-node-c257f 1/1 Running 0 18m kube-system coredns-f9fd979d6-c52hz 1/1 Running 0 19m kube-system coredns-f9fd979d6-ncbdp 1/1 Running 0 19m kube-system etcd-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-apiserver-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-controller-manager-ip-172-31-27-93 1/1 Running 1 19m kube-system kube-proxy-b9szp 1/1 Running 1 19m kube-system kube-scheduler-ip-172-31-27-93 1/1 Running 1 19m kube-system nvidia-device-plugin-1602308324-jg842 1/1 Running 0 17m prometheus alertmanager-kube-prometheus-stack-1602-alertmanager-0 2/2 Running 0 92s prometheus kube-prometheus-stack-1602-operator-c4bc5c4d5-f5vzc 2/2 Running 0 98s prometheus kube-prometheus-stack-1602309230-grafana-6b4fc97f8f-66kdv 2/2 Running 0 98s prometheus kube-prometheus-stack-1602309230-kube-state-metrics-76887bqzv2b 1/1 Running 0 98s prometheus kube-prometheus-stack-1602309230-prometheus-node-exporter-rrk9l 1/1 Running 0 98s prometheus prometheus-kube-prometheus-stack-1602-prometheus-0 3/3 Running 1 92s $ kubectl get svc -A NAMESPACE NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE default kubernetes ClusterIP 10.96.0.1 <none> 443/TCP 20m kube-system kube-dns ClusterIP 10.96.0.10 <none> 53/UDP,53/TCP,9153/TCP 20m kube-system kube-prometheus-stack-1602-coredns ClusterIP None <none> 9153/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-controller-manager ClusterIP None <none> 10252/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-etcd ClusterIP None <none> 2379/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-proxy ClusterIP None <none> 10249/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-scheduler ClusterIP None <none> 10251/TCP 2m18s kube-system kube-prometheus-stack-1602-kubelet ClusterIP None <none> 10250/TCP,10255/TCP,4194/TCP 2m12s prometheus alertmanager-operated ClusterIP None <none> 9093/TCP,9094/TCP,9094/UDP 2m12s prometheus kube-prometheus-stack-1602-alertmanager ClusterIP 10.104.106.174 <none> 9093/TCP 2m18s prometheus kube-prometheus-stack-1602-operator ClusterIP 10.98.165.148 <none> 8080/TCP,443/TCP 2m18s prometheus kube-prometheus-stack-1602-prometheus NodePort 10.105.3.19 <none> 9090:30090/TCP 2m18s prometheus kube-prometheus-stack-1602309230-grafana ClusterIP 10.100.178.41 <none> 80/TCP 2m18s prometheus kube-prometheus-stack-1602309230-kube-state-metrics ClusterIP 10.100.119.13 <none> 8080/TCP 2m18s prometheus kube-prometheus-stack-1602309230-prometheus-node-exporter ClusterIP 10.100.56.74 <none> 9100/TCP 2m18s prometheus prometheus-operated ClusterIP None <none> 9090/TCP 2m12s \u90e8\u7f72 dcgm-exporter $ helm repo add gpu-helm-charts \\ https://nvidia.github.io/gpu-monitoring-tools/helm-charts $ helm repo update \u4f7f\u7528helm\u5b89\u88c5 $ helm install \\ --generate-name \\ gpu-helm-charts/dcgm-exporter \u7ed3\u679c\u9a8c\u8bc1 $ helm ls NAME NAMESPACE REVISION APP VERSION dcgm-exporter-1-1601677302 default 1 dcgm-exporter-1.1.0 2.0.10 nvidia-device-plugin-1601662841 default 1 nvidia-device-plugin-0.7.0 0.7.0 Prometheus\u548cGrafana\u670d\u52a1\u66b4\u9732\u5982\u4e0b\uff1a $ kubectl get svc -A NAMESPACE NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE default dcgm-exporter ClusterIP 10.99.34.128 <none> 9400/TCP 43d default kubernetes ClusterIP 10.96.0.1 <none> 443/TCP 20m kube-system kube-dns ClusterIP 10.96.0.10 <none> 53/UDP,53/TCP,9153/TCP 20m kube-system kube-prometheus-stack-1602-coredns ClusterIP None <none> 9153/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-controller-manager ClusterIP None <none> 10252/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-etcd ClusterIP None <none> 2379/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-proxy ClusterIP None <none> 10249/TCP 2m18s kube-system kube-prometheus-stack-1602-kube-scheduler ClusterIP None <none> 10251/TCP 2m18s kube-system kube-prometheus-stack-1602-kubelet ClusterIP None <none> 10250/TCP,10255/TCP,4194/TCP 2m12s prometheus alertmanager-operated ClusterIP None <none> 9093/TCP,9094/TCP,9094/UDP 2m12s prometheus kube-prometheus-stack-1602-alertmanager ClusterIP 10.104.106.174 <none> 9093/TCP 2m18s prometheus kube-prometheus-stack-1602-operator ClusterIP 10.98.165.148 <none> 8080/TCP,443/TCP 2m18s prometheus kube-prometheus-stack-1602-prometheus NodePort 10.105.3.19 <none> 9090:30090/TCP 2m18s prometheus kube-prometheus-stack-1602309230-grafana ClusterIP 10.100.178.41 <none> 80:32032/TCP 2m18s prometheus kube-prometheus-stack-1602309230-kube-state-metrics ClusterIP 10.100.119.13 <none> 8080/TCP 2m18s prometheus kube-prometheus-stack-1602309230-prometheus-node-exporter ClusterIP 10.100.56.74 <none> 9100/TCP 2m18s prometheus prometheus-operated \u4f7f\u752832032\u7aef\u53e3\u66b4\u9732\u7684Grafana\u670d\u52a1\uff0c\u8bbf\u95eeGrafana\u4e3b\u9875\u3002\u4f7f\u7528Prometheus chart\u4e2d\u8bbe\u7f6e\u7684\u51ed\u8bc1\u767b\u5f55\u5230\u4eea\u8868\u677f\uff1a prometheus.values \u4e2d\u7684 adminPassword \u5b57\u6bb5\u3002 \u73b0\u5728\u8981\u542f\u52a8\u4e00\u4e2a\u7528\u4e8eGPU\u6307\u6807\u7684Grafana\u4eea\u8868\u677f\uff0c\u8bf7\u4eceGrafana\u4eea\u8868\u677f\uff08 https://grafana.com/grafana/dashboards/12239 \uff09\u5bfc\u5165NVIDIA\u4eea\u8868\u677f\u3002 \u73b0\u5728\u8fd0\u884c\u4e00\u4e9bGPU\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4e3a\u6b64\uff0cDCGM\u793e\u533a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a dcgmproftester \u7684 CUDA \u8d1f\u8f7d\u751f\u6210\u5668\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u751f\u6210\u786e\u5b9a\u6027\u7684CUDA\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u7528\u4e8e\u8bfb\u53d6\u548c\u9a8c\u8bc1GPU\u6307\u6807\u3002 \u8981\u751f\u6210\u4e00\u4e2aPod\uff0c\u9996\u5148\u5fc5\u987b\u4e0b\u8f7dDCGM\u5e76\u5c06\u5236\u6210\u955c\u50cf\u3002\u4ee5\u4e0b\u811a\u672c\u521b\u5efa\u4e86\u4e00\u4e2a\u53ef\u7528\u4e8e\u8fd0\u884c dcgmproftester \u7684\u5bb9\u5668\u3002\u8fd9\u4e2a\u5bb9\u5668\u53ef\u4ee5\u5728NVIDIA DockerHub\u4ed3\u5e93\u4e2d\u627e\u5230\u3002 #!/usr/bin/env bash set -exo pipefail mkdir -p /tmp/dcgm-docker pushd /tmp/dcgm-docker cat > Dockerfile <<EOF ARG BASE_DIST ARG CUDA_VER FROM nvidia/cuda:\\${CUDA_VER}-base-\\${BASE_DIST} LABEL io.k8s.display-name=\"NVIDIA dcgmproftester\" ARG DCGM_VERSION WORKDIR /dcgm RUN apt-get update && apt-get install -y --no-install-recommends \\ libgomp1 \\ wget && \\ rm -rf /var/lib/apt/lists/* && \\ wget --no-check-certificate https://developer.download.nvidia.com/compute/redist/dcgm/\\${DCGM_VERSION}/DEBS/datacenter-gpu-manager_\\${DCGM_VERSION}_amd64.deb && \\ dpkg -i datacenter-gpu-manager_*.deb && \\ rm -f datacenter-gpu-manager_*.deb ENTRYPOINT [\"/usr/bin/dcgmproftester11\"] EOF DIR=. DCGM_REL_VERSION=2.0.10 BASE_DIST=ubuntu18.04 CUDA_VER=11.0 IMAGE_NAME=nvidia/samples:dcgmproftester-$DCGM_REL_VERSION-cuda$CUDA_VER-$BASE_DIST docker build --pull \\ -t \"$IMAGE_NAME\" \\ --build-arg DCGM_VERSION=$DCGM_REL_VERSION \\ --build-arg BASE_DIST=$BASE_DIST \\ --build-arg CUDA_VER=$CUDA_VER \\ --file Dockerfile \\ \"$DIR\" popd \u5728Kubernetes\u96c6\u7fa4\u4e0a\u90e8\u7f72\u5bb9\u5668\u4e4b\u524d\uff0c\u5c1d\u8bd5\u76f4\u63a5\u4f7f\u7528Docker\u8fd0\u884c\u5b83\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u901a\u8fc7\u6307\u5b9a-t 1004\u6765\u4f7f\u7528Tensor Cores\u89e6\u53d1FP16\u77e9\u9635\u4e58\u6cd5\uff0c\u5e76\u4ee5 -d 45 \uff0845\u79d2\uff09\u7684\u901f\u5ea6\u8fd0\u884c\u6d4b\u8bd5\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539-t\u53c2\u6570\u6765\u5c1d\u8bd5\u8fd0\u884c\u5176\u4ed6\u5de5\u4f5c\u8d1f\u8f7d\u3002 Skipping CreateDcgmGroups() since DCGM validation is disabled CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR: 1024 CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT: 40 CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_MULTIPROCESSOR: 65536 CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR: 7 CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR: 5 CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH: 256 CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE: 5001000 Max Memory bandwidth: 320064000000 bytes (320.06 GiB) CudaInit completed successfully. Skipping WatchFields() since DCGM validation is disabled TensorEngineActive: generated ???, dcgm 0.000 (27605.2 gflops) TensorEngineActive: generated ???, dcgm 0.000 (28697.6 gflops) \u5c06\u5176\u90e8\u7f72\u5230Kubernetes\u96c6\u7fa4\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7Grafana\u4eea\u8868\u677f\u89c2\u6d4b\u76f8\u5e94\u7684\u6307\u6807\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u793a\u4f8b\uff1a cat << EOF | kubectl create -f - apiVersion: v1 kind: Pod metadata: name: dcgmproftester spec: restartPolicy: OnFailure containers: - name: dcgmproftester11 image: nvidia/samples:dcgmproftester-2.0.10-cuda11.0-ubuntu18.04 args: [\"--no-dcgm-validation\", \"-t 1004\", \"-d 120\"] resources: limits: nvidia.com/gpu: 1 securityContext: capabilities: add: [\"SYS_ADMIN\"] EOF \u53ef\u4ee5\u770b\u5230dcgmproftester pod\u5065\u5eb7\u8fd0\u884c\uff0c\u968f\u540e\u6307\u6807\u663e\u793a\u5728Grafana\u4eea\u8868\u677f\u4e0a\u3002GPU\u5229\u7528\u7387(GrActive)\u5df2\u7ecf\u8fbe\u5230\u4e8698%\u7684\u5229\u7528\u7387\u5cf0\u503c\uff0c\u53ef\u80fd\u8fd8\u4f1a\u53d1\u73b0\u5176\u4ed6\u6709\u8da3\u7684\u6307\u6807\uff0c\u6bd4\u5982\u529f\u7387\u6216GPU\u5185\u5b58\u3002 $ kubectl get pods -A NAMESPACE NAME READY STATUS RESTARTS AGE ... default dcgmproftester 1/1 Running 0 6s DCGM\u6700\u8fd1\u589e\u52a0\u4e86\u4e00\u4e9b\u8bbe\u5907\u7ea7\u6307\u6807\u3002\u5176\u4e2d\u5305\u62ec\u7ec6\u7c92\u5ea6\u7684GPU\u5229\u7528\u7387\u6307\u6807\uff0c\u53ef\u4ee5\u76d1\u63a7SM\u5360\u7528\u7387\u548cTensor Core\u5229\u7528\u7387\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u67e5\u770bDCGM\u7528\u6237\u6307\u5357\u4e2d\u7684Profiling Metrics\u3002 \u4e0b\u56fe\u663e\u793a\u4e86 Prometheus\u83b7\u53d6\u7684\u7531 dcgm-exporter \u63d0\u4f9b\u7684\u76d1\u63a7\u6307\u6807\u3002 \u60a8\u53ef\u4ee5\u81ea\u5b9a\u4e49Grafana\u4eea\u8868\u677f\uff0c\u4ee5\u5305\u542bDCGM\u7684\u5176\u4ed6\u6307\u6807\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u7f16\u8f91 repo \u4e0a\u63d0\u4f9b\u7684 Grafana JSON \u6587\u4ef6\u5c06 Tensor Core \u5229\u7528\u7387\u6dfb\u52a0\u5230\u4eea\u8868\u677f\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528Grafana\u7684Web\u754c\u9762\u8fdb\u884c\u7f16\u8f91\u3002 \u4e0b\u9762\u7684\u4eea\u8868\u677f\u5305\u62ecTensor Core\u5229\u7528\u7387\u3002\u91cd\u65b0\u542f\u52a8dcgmproftester\u5bb9\u5668\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230T4\u4e0a\u7684Tensor Core\u5df2\u7ecf\u8fbe\u5230\u4e86\u7ea687%\u7684\u5229\u7528\u7387\u3002 \u901a\u8fc7\u5c06GPU\u6307\u6807\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u6307\u6807\u548cPrometheus Adapter\uff0c\u53ef\u4ee5\u4f7f\u7528Horizontal Pod Autoscaler\u6839\u636eGPU\u5229\u7528\u7387\u6216\u5176\u4ed6\u6307\u6807\u6765\u6269\u5c55Pod\u6570\u91cf\u3002","title":"2.1 \u90e8\u7f72\u8bf4\u660e"},{"location":"chap3/16Adv_Prometheus_Del_index/","text":"\u7b2c\u5341\u8282 Prometheus \u5220\u9664\u6570\u636e\u6307\u6807 \u6709\u7684\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u4ece Prometheus \u4e2d\u5220\u9664\u4e00\u4e9b\u4e0d\u9700\u8981\u7684\u6570\u636e\u6307\u6807\uff0c\u6216\u8005\u53ea\u662f\u5355\u7eaf\u7684\u60f3\u8981\u91ca\u653e\u4e00\u4e9b\u78c1\u76d8\u7a7a\u95f4\u3002 Prometheus \u4e2d\u7684\u65f6\u95f4\u5e8f\u5217\u53ea\u80fd\u901a\u8fc7 HTTP API \u6765\u8fdb\u884c\u7ba1\u7406\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7ba1\u7406\u65f6\u95f4\u5e8f\u5217\u7684 API \u662f\u88ab\u7981\u7528\u7684\uff0c\u8981\u542f\u7528\u5b83\uff0c\u6211\u4eec\u9700\u8981\u5728 Prometheus \u7684\u542f\u52a8\u53c2\u6570\u4e2d\u6dfb\u52a0 --web.enable-admin-api \u8fd9\u4e2a\u53c2\u6570\uff0c\u6bd4\u5982\u6211\u4eec\u524d\u9762\u7684\u6587\u7ae0\u4e2d\u901a\u8fc7Kubernetes Pod\u6765\u90e8\u7f72\u7684\uff0c\u5219\u540c\u6837\u9700\u8981\u6dfb\u52a0\u4e0a\u8fd9\u4e2a\u53c2\u6570\uff1a command: - \"/bin/prometheus\" args: - \"--config.file=/etc/prometheus/prometheus.yml\" - \"--storage.tsdb.path=/prometheus\" - \"--storage.tsdb.retention=24h\" - \"--web.enable-admin-api\" # \u63a7\u5236\u5bf9admin HTTP API\u7684\u8bbf\u95ee\uff0c\u5176\u4e2d\u5305\u62ec\u5220\u9664\u65f6\u95f4\u5e8f\u5217\u7b49\u529f\u80fd - \"--web.enable-lifecycle\" # \u652f\u6301\u70ed\u66f4\u65b0\uff0c\u76f4\u63a5\u6267\u884clocalhost:9090/-/reload\u7acb\u5373\u751f\u6548 \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Prometheus Operator \u90e8\u7f72\u7684\u8bdd\uff0c\u8c8c\u4f3c\u5b98\u65b9\u6ca1\u6709\u7ed9\u51fa\u8fd9\u4e2a\u53c2\u6570\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91\u5bf9\u5e94\u7684 Staefulset \u8d44\u6e90\u5bf9\u8c61\u6765\u6dfb\u52a0\u8be5\u53c2\u6570\u3002 1 \u5220\u9664\u65f6\u95f4\u5e8f\u5217\u6307\u6807 \u63a7\u5236\u7ba1\u7406 API \u542f\u7528\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u6cd5\u6765\u5220\u9664\u4e0e\u67d0\u4e2a\u6807\u7b7e\u5339\u914d\u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u6307\u6807\uff1a $ curl -X POST -g 'http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]={kubernetes_name=\"redis\"}' \u5c06 localhost \u66ff\u6362\u6210\u4f60\u81ea\u5df1\u7684 Prometheus \u7684\u8bbf\u95ee\u5730\u5740\u5373\u53ef\u3002 \u4e0a\u9762\u547d\u4ee4\u5c31\u53ef\u4ee5\u7528\u4e8e\u5220\u9664\u5177\u6709\u6807\u7b7e kubernetes_name=\"redis\" \u7684\u65f6\u95f4\u5e8f\u5217\u6307\u6807\u3002 \u5982\u679c\u8981\u5220\u9664\u4e00\u4e9b job \u4efb\u52a1\u6216\u8005 instance \u7684\u6570\u636e\u6307\u6807\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a $ curl -X POST -g 'http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]={job=\"kubernetes-service-endpoints\"}' $ curl -X POST -g 'http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]={instance=\"10.244.2.158:9090\"}' \u8981\u4ece Prometheus \u4e2d\u5220\u9664\u6240\u6709\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a $ curl -X POST -g 'http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]={__name__=~\".+\"}' \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e0a\u9762\u7684 API \u8c03\u7528\u5e76\u4e0d\u4f1a\u7acb\u5373\u5220\u9664\u6570\u636e\uff0c\u5b9e\u9645\u6570\u636e\u4efb\u7136\u8fd8\u5b58\u5728\u78c1\u76d8\u4e0a\uff0c\u4f1a\u5728\u540e\u9762\u8fdb\u884c\u6570\u636e\u6e05\u7406\u3002 \u8981\u786e\u5b9a\u4f55\u65f6\u5220\u9664\u65e7\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528 --storage.tsdb.retention \u53c2\u6570\u8fdb\u884c\u914d\u7f6e\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPrometheus \u4f1a\u5c06\u6570\u636e\u4fdd\u755915\u5929\uff09\u3002","title":"\u7b2c\u5341\u8282 Prometheus \u5220\u9664\u6570\u636e\u6307\u6807"},{"location":"chap3/16Adv_Prometheus_Del_index/#prometheus","text":"\u6709\u7684\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u4ece Prometheus \u4e2d\u5220\u9664\u4e00\u4e9b\u4e0d\u9700\u8981\u7684\u6570\u636e\u6307\u6807\uff0c\u6216\u8005\u53ea\u662f\u5355\u7eaf\u7684\u60f3\u8981\u91ca\u653e\u4e00\u4e9b\u78c1\u76d8\u7a7a\u95f4\u3002 Prometheus \u4e2d\u7684\u65f6\u95f4\u5e8f\u5217\u53ea\u80fd\u901a\u8fc7 HTTP API \u6765\u8fdb\u884c\u7ba1\u7406\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7ba1\u7406\u65f6\u95f4\u5e8f\u5217\u7684 API \u662f\u88ab\u7981\u7528\u7684\uff0c\u8981\u542f\u7528\u5b83\uff0c\u6211\u4eec\u9700\u8981\u5728 Prometheus \u7684\u542f\u52a8\u53c2\u6570\u4e2d\u6dfb\u52a0 --web.enable-admin-api \u8fd9\u4e2a\u53c2\u6570\uff0c\u6bd4\u5982\u6211\u4eec\u524d\u9762\u7684\u6587\u7ae0\u4e2d\u901a\u8fc7Kubernetes Pod\u6765\u90e8\u7f72\u7684\uff0c\u5219\u540c\u6837\u9700\u8981\u6dfb\u52a0\u4e0a\u8fd9\u4e2a\u53c2\u6570\uff1a command: - \"/bin/prometheus\" args: - \"--config.file=/etc/prometheus/prometheus.yml\" - \"--storage.tsdb.path=/prometheus\" - \"--storage.tsdb.retention=24h\" - \"--web.enable-admin-api\" # \u63a7\u5236\u5bf9admin HTTP API\u7684\u8bbf\u95ee\uff0c\u5176\u4e2d\u5305\u62ec\u5220\u9664\u65f6\u95f4\u5e8f\u5217\u7b49\u529f\u80fd - \"--web.enable-lifecycle\" # \u652f\u6301\u70ed\u66f4\u65b0\uff0c\u76f4\u63a5\u6267\u884clocalhost:9090/-/reload\u7acb\u5373\u751f\u6548 \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Prometheus Operator \u90e8\u7f72\u7684\u8bdd\uff0c\u8c8c\u4f3c\u5b98\u65b9\u6ca1\u6709\u7ed9\u51fa\u8fd9\u4e2a\u53c2\u6570\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91\u5bf9\u5e94\u7684 Staefulset \u8d44\u6e90\u5bf9\u8c61\u6765\u6dfb\u52a0\u8be5\u53c2\u6570\u3002","title":"\u7b2c\u5341\u8282 Prometheus \u5220\u9664\u6570\u636e\u6307\u6807"},{"location":"chap3/16Adv_Prometheus_Del_index/#1","text":"\u63a7\u5236\u7ba1\u7406 API \u542f\u7528\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u6cd5\u6765\u5220\u9664\u4e0e\u67d0\u4e2a\u6807\u7b7e\u5339\u914d\u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u6307\u6807\uff1a $ curl -X POST -g 'http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]={kubernetes_name=\"redis\"}' \u5c06 localhost \u66ff\u6362\u6210\u4f60\u81ea\u5df1\u7684 Prometheus \u7684\u8bbf\u95ee\u5730\u5740\u5373\u53ef\u3002 \u4e0a\u9762\u547d\u4ee4\u5c31\u53ef\u4ee5\u7528\u4e8e\u5220\u9664\u5177\u6709\u6807\u7b7e kubernetes_name=\"redis\" \u7684\u65f6\u95f4\u5e8f\u5217\u6307\u6807\u3002 \u5982\u679c\u8981\u5220\u9664\u4e00\u4e9b job \u4efb\u52a1\u6216\u8005 instance \u7684\u6570\u636e\u6307\u6807\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a $ curl -X POST -g 'http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]={job=\"kubernetes-service-endpoints\"}' $ curl -X POST -g 'http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]={instance=\"10.244.2.158:9090\"}' \u8981\u4ece Prometheus \u4e2d\u5220\u9664\u6240\u6709\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a $ curl -X POST -g 'http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]={__name__=~\".+\"}' \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e0a\u9762\u7684 API \u8c03\u7528\u5e76\u4e0d\u4f1a\u7acb\u5373\u5220\u9664\u6570\u636e\uff0c\u5b9e\u9645\u6570\u636e\u4efb\u7136\u8fd8\u5b58\u5728\u78c1\u76d8\u4e0a\uff0c\u4f1a\u5728\u540e\u9762\u8fdb\u884c\u6570\u636e\u6e05\u7406\u3002 \u8981\u786e\u5b9a\u4f55\u65f6\u5220\u9664\u65e7\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528 --storage.tsdb.retention \u53c2\u6570\u8fdb\u884c\u914d\u7f6e\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPrometheus \u4f1a\u5c06\u6570\u636e\u4fdd\u755915\u5929\uff09\u3002","title":"1 \u5220\u9664\u65f6\u95f4\u5e8f\u5217\u6307\u6807"},{"location":"chap3/1prometheus_setup/","text":"\u7b2c\u4e00\u8282 Kubernetes\u4f7f\u7528Prometheus\u642d\u5efa\u76d1\u63a7\u5e73\u53f0(2018) \u6700\u8fd1\u5728\u6d4b\u8bd5\u73af\u5883\u642d\u5efa\u4e86Kubernetes\u96c6\u7fa4\u73af\u5883\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u662f\u76f4\u63a5\u901a\u8fc7Dashboard\u7684\u8d44\u6e90\u7edf\u8ba1\u56fe\u6807\u8fdb\u884c\u89c2\u5bdf\u7684\uff0c\u4f46\u662f\u5f88\u663e\u7136\u5982\u679c\u8981\u4e0a\u5230\u751f\u4ea7\u73af\u5883\uff0c\u5c31\u9700\u8981\u66f4\u81ea\u52a8\u5316\u7684\u65b9\u5f0f\u6765\u5bf9\u96c6\u7fa4\u3001Pod\u751a\u81f3\u5bb9\u5668\u8fdb\u884c\u76d1\u63a7\u4e86\u3002 Kubernetes\u5185\u7f6e\u4e86\u4e00\u5957\u76d1\u63a7\u65b9\u6848\uff1a influxdb+grafana+heapster \u3002\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 Prometheus \u6765\u5b8c\u6210k8s\u7684\u96c6\u7fa4\u76d1\u63a7\u3002 1 Prometheus \u7b80\u4ecb Prometheus \u662f SoundCloud \u5f00\u6e90\u7684\u4e00\u6b3e\u5f00\u6e90\u8f6f\u4ef6\u3002\u5b83\u7684\u5b9e\u73b0\u53c2\u8003\u4e86 Google \u5185\u90e8\u7684\u76d1\u63a7\u5b9e\u73b0\uff0c\u4e0e\u6e90\u81ea Google \u7684 Kubernetes \u7ed3\u5408\u8d77\u6765\u975e\u5e38\u5408\u9002\u3002\u53e6\u5916\u76f8\u6bd4 influxdb \u7684\u65b9\u6848\uff0c\u6027\u80fd\u66f4\u52a0\u7a81\u51fa\uff0c\u800c\u4e14\u8fd8\u5185\u7f6e\u4e86\u62a5\u8b66\u529f\u80fd\u3002\u5b83\u9488\u5bf9\u5927\u89c4\u6a21\u7684\u96c6\u7fa4\u73af\u5883\u8bbe\u8ba1\u4e86\u62c9\u53d6\u5f0f\u7684\u6570\u636e\u91c7\u96c6\u65b9\u5f0f\uff0c\u4f60\u53ea\u9700\u8981\u5728\u4f60\u7684\u5e94\u7528\u91cc\u9762\u5b9e\u73b0\u4e00\u4e2a metrics \u63a5\u53e3\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u63a5\u53e3\u544a\u8bc9 Prometheus \u5c31\u53ef\u4ee5\u5b8c\u6210\u6570\u636e\u91c7\u96c6\u4e86\u3002 2 \u5b89\u88c5Prometheus \u9996\u5148\u6211\u4eec\u4f7f\u7528 namespace \u6765\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684 kube-ops \u7684 namespace \u7528\u6765\u7ba1\u7406 Prometheus \u3002( namespace.yaml ) --- apiVersion: v1 kind: Namespace metadata: name: kube-ops $ kubectl create -f namespace.yaml \u7136\u540e\u6211\u4eec\u4f7f\u7528 ConfigMap \u7684\u5f62\u5f0f\u6765\u8bbe\u7f6e Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5982\u4e0b( prometheus-config.yaml ) apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | global: scrape_interval: 30s scrape_timeout: 30s scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'kubernetes-nodes-cadvisor' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - api_servers: - 'https://10.254.0.1' in_cluster: true role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - source_labels: [__meta_kubernetes_role] action: replace target_label: kubernetes_role - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:4194' target_label: __address__ - job_name: 'kubernetes-apiserver-cadvisor' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - api_servers: - 'https://10.254.0.1' in_cluster: true role: apiserver relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - source_labels: [__meta_kubernetes_role] action: replace target_label: kubernetes_role - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:10255' target_label: __address__ - job_name: 'kubernetes-node-exporter' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - api_servers: - 'https://10.254.0.1' in_cluster: true role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - source_labels: [__meta_kubernetes_role] action: replace target_label: kubernetes_role - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:31672' target_label: __address__ \u5c06\u4ee5\u4e0a\u914d\u7f6e\u6587\u4ef6\u4fdd\u5b58\u4e3a prometheus-config.yaml \uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\uff1a $ kubectl create -f prometheus-config.yaml 2-1 \u6ce8\u610f \uff1a 1.\u5176\u4e2d api_servers \u7684\u5730\u5740\u53ef\u4ee5\u901a\u8fc7 kubectl get services \u67e5\u770b kubernetes \u7684\u5730\u5740\uff0c\u6ce8\u610f https \u7684\u8bc1\u4e66\u8def\u5f84 $ kubectl get services NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes ClusterIP 10.254.0.1 <none> 443/TCP 34d 2. job_name=kubernetes-apiserver-cadvisor \u9700\u8981\u5c06 10250 \u7aef\u53e3\u66ff\u6362\u6210 10255 \uff0c 10255 \u7aef\u53e3\u662f kubelet \u5b9e\u73b0\u7684 metrics \uff0c\u53ef\u4ee5\u5728\u8282\u70b9\u4e0a\u9762 curl \u67e5\u770b\u5185\u5bb9\uff0c curl http://<node_ip>:10255/metrics 3. job_name=kubernetes-nodes-cadvisor \u9700\u8981\u5c06 10250 \u7aef\u53e3\u66ff\u6362\u6210 4194 \uff0c 4194 \u540c\u6837\u662fkubernetes\u96c6\u6210\u7684\u5bb9\u5668\u76d1\u63a7\u670d\u52a1\uff0c\u5728 k8s 1.7 \u7248\u672c\u4e4b\u524d\u7684\u7528 10255 \u7aef\u53e3\u5373\u53ef\uff0c\u4f46\u662f 1.7 \u7248\u672c\u540e cadvisor \u76d1\u63a7\u7684\u6570\u636e\u6ca1\u6709\u96c6\u6210\u5230 kubelet \u7684\u5b9e\u73b0\u91cc\u9762\u53bb\u4e86, After upgrading to 1.7.0, Kubelet no longer reports cAdvisor stats 4. job_name=kubernetes-node-exporter \u4e2d\u66ff\u6362 10250 \u7684\u7aef\u53e3\u662f 31672 \uff0c\u8be5\u7aef\u53e3\u662f node-exporter \u66b4\u9732\u7684 NodePort \u7aef\u53e3\uff0c\u8fd9\u91cc\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u586b\u5199\u3002 \u7136\u540e\u6211\u4eec\u4f7f\u7528 ServiceAccount , ClusterRole , ClusterRoleBinding \u7684\u5f62\u5f0f\u6765\u8bbe\u7f6e Prometheus \u7684 SA \uff0c\u5982\u4e0b( prometheus-sa.yaml ) apiVersion: v1 kind: ServiceAccount metadata: name: prometheus namespace: kube-ops --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRole metadata: name: prometheus namespace: kube-ops rules: - apiGroups: [\"\"] resources: - nodes - nodes/proxy - services - endpoints - pods verbs: [\"get\", \"list\", \"watch\"] - nonResourceURLs: [\"/metrics\"] verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: prometheus namespace: kube-ops roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: prometheus subjects: - kind: ServiceAccount name: prometheus namespace: kube-ops $ kubectl create -f prometheus-sa.yaml \u90e8\u7f72 node-exporter \uff0c\u4e3a\u4e86\u80fd\u591f\u6536\u96c6\u6bcf\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 DaemonSet \u7684\u5f62\u5f0f\u90e8\u7f72 PODS \uff1a( node-exporter.yaml ) --- apiVersion: extensions/v1beta1 kind: DaemonSet metadata: name: node-exporter namespace: kube-ops labels: k8s-app: node-exporter spec: template: metadata: labels: k8s-app: node-exporter spec: containers: - image: prom/node-exporter name: node-exporter ports: - containerPort: 9100 protocol: TCP name: http --- apiVersion: v1 kind: Service metadata: labels: k8s-app: node-exporter name: node-exporter namespace: kube-ops spec: ports: - name: http port: 9100 nodePort: 31672 protocol: TCP type: NodePort selector: k8s-app: node-exporter \u5c06\u4ee5\u4e0a\u6587\u4ef6\u4fdd\u5b58\u4e3a node-exporter.yaml \uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\uff1a $ kubectl create -f node-exporter.yaml \u63a5\u4e0b\u6765\u901a\u8fc7 Deployment \u90e8\u7f72 Prometheus.yaml \u6587\u4ef6\u5982\u4e0b\uff1a( prometheus-deploy.yaml ) apiVersion: extensions/v1beta1 kind: Deployment metadata: labels: name: prometheus-deployment name: prometheus namespace: kube-ops spec: replicas: 1 template: metadata: labels: app: prometheus spec: serviceAccountName: prometheus containers: - image: prom/prometheus:v1.0.1 name: prometheus command: - \"/bin/prometheus\" args: - \"-config.file=/etc/prometheus/prometheus.yml\" - \"-storage.local.path=/prometheus\" - \"-storage.local.retention=24h\" ports: - containerPort: 9090 protocol: TCP volumeMounts: - mountPath: \"/prometheus\" name: data subPath: prometheus - mountPath: \"/etc/prometheus\" name: config-volume resources: requests: cpu: 100m memory: 100Mi limits: cpu: 200m memory: 1Gi volumes: - name: data emptyDir: {} - configMap: name: prometheus-config name: config-volume \u5c06\u4ee5\u4e0a\u6587\u4ef6\u4fdd\u5b58\u4e3a prometheus-deploy.yaml \uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\uff1a 2-2 \u6ce8\u610f\uff1a \u4e00\u5b9a\u8981\u52a0\u4e0a serviceAccountName: prometheus , \u5426\u5219\u4f1a\u51fa\u73b0\u5728 Prometheus pod log \u4e2d: Cannot initialize nodes collection: unable to list Kubernetes nodes; unexpected response: 403 403 Forbidden $ kubectl create -f prometheus-deploy.yaml 3 Output Prometheus Service 3-1 option 1 \u628a prometheus \u7684 pod \u670d\u52a1\u66b4\u9732\u51fa\u6765, \u7528 svc \u628a nodeport \u66b4\u9732\u51fa\u6765( prometheus-svc.yaml ): apiVersion: v1 kind: Service metadata: name: prometheus namespace: kube-ops labels: k8s-app: prometheus spec: selector: app: prometheus type: NodePort ports: - name: web port: 9090 protocol: TCP nodePort: 30900 $ kubectl create -f prometheus-svc.yaml 3-2 option 2 $ screen $ POD=`kubectl get pod -l app=prometheus -n kube-ops -o go-template --template '{{range .items}}{{.metadata.name}}{{end}}'` $ kubectl port-forward $POD 9090:9090 $ ctrl + a + d $ curl http://localhost:9090 $ screen \u2013ls $ screen -XS [session # you want to quit] quit \u7136\u540e\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee http://localhost:9090 \u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230Prometheus\u7684\u754c\u9762\u4e86\u3002 3-3 option 3 \u5728\u521b\u5efa cluserIP Service \u4e4b\u540e \u6211\u8fd9\u91cc\u901a\u8fc7 ingress \u66b4\u9732\u5230\u5916\u7f51\uff0c yaml \u6587\u4ef6\u5982\u4e0b\uff1a apiVersion: extensions/v1beta1 kind: Ingress metadata: name: traefik-default-ingress annotations: kubernetes.io/ingress.class: \"traefik\" spec: tls: - secretName: traefik-ssl rules: - host: prometheus.local # \u66ff\u6362\u6210\u4f60\u7684\u57df\u540d http: paths: - path: / backend: serviceName: prometheus servicePort: 9090 \u5c06\u4ee5\u4e0a\u6587\u4ef6\u4fdd\u5b58\u4e3a prometheus-ingress.yaml \uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\uff1a $ kubectl create -f prometheus-ingress.yaml \u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762 option1 : nodeport \u4e2d\u914d\u7f6e\u7684\u7aef\u53e3\u8fdb\u884c\u8bbf\u95ee\u4e86\uff0c\u53ef\u4ee5\u5207\u6362\u5230 Status \u4e0b\u9762\u7684 targets \u67e5\u770b\u6211\u4eec\u91c7\u96c6\u7684\u6570\u636e\u662f\u5426\u6b63\u5e38\uff1a $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE node-exporter NodePort 10.254.125.138 <none> 9100:31672/TCP 34d prometheus NodePort 10.254.35.188 <none> 9090:30900/TCP 3h \u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee http://192.168.1.138:30900 \u53ef\u4ee5\u6839\u636e targets \u4e0b\u9762\u7684\u63d0\u793a\u4fe1\u606f\u5bf9\u91c7\u96c6\u5931\u8d25\u7684\u6570\u636e\u8fdb\u884c\u4fee\u6b63\u3002 4 \u67e5\u8be2\u76d1\u63a7\u6570\u636e Prometheus \u63d0\u4f9b\u4e86 API \u7684\u65b9\u5f0f\u8fdb\u884c\u6570\u636e\u67e5\u8be2\uff0c\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 query \u8bed\u8a00\u8fdb\u884c\u590d\u6742\u7684\u67e5\u8be2\u4efb\u52a1\uff0c\u5728\u4e0a\u9762\u7684WEB\u754c\u9762\u4e0a\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u67e5\u8be2\u548c\u56fe\u5f62\u5316\u7684\u5c55\u793a\u529f\u80fd\u3002 \u6bd4\u5982\u67e5\u8be2\u6bcf\u4e2a POD \u7684 CPU \u4f7f\u7528\u60c5\u51b5\uff0c\u67e5\u8be2\u6761\u4ef6\u5982\u4e0b\uff1a sum by (pod_name)( rate(container_cpu_usage_seconds_total{image!=\"\", pod_name!=\"\"}[1m] ) ) \u6ce8\u610f\u5176\u4e2d\u7684 pod_name \u548c image \u8981\u6839\u636e\u81ea\u5df1\u91c7\u96c6\u7684\u6570\u636e\u8fdb\u884c\u533a\u5206\u3002 \u66f4\u591a\u7684\u67e5\u8be2\u6761\u4ef6\u53ef\u4ee5\u53c2\u8003 Prometheus\u7684\u6587\u6863 \uff0c\u5c06\u6765\u4e5f\u4f1a\u9010\u6b65\u4ecb\u7ecd\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u5c55\u5f00\u4e86\u3002 \u8fd9\u6837\u901a\u8fc7\u5728 Kubernetes \u4e0a\u90e8\u7f72 Prometheus \uff0c\u5728\u4e0d\u4fee\u6539\u96c6\u7fa4\u7684\u4efb\u4f55\u914d\u7f6e\u60c5\u51b5\u4e0b\u5b9e\u73b0\u4e86\u96c6\u7fa4\u7684\u57fa\u672c\u76d1\u63a7\u529f\u80fd\u3002 Reference: Prometheus\u7684\u6587\u6863 5 \u5b89\u88c5Grafana Prometheus \u4ee5\u53ca\u83b7\u53d6\u5230\u4e86\u6211\u4eec\u91c7\u96c6\u7684\u6570\u636e\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u52a0\u5f3a\u5927\u7684\u56fe\u6807\u5c55\u793a\u5de5\u5177\uff0c\u6beb\u65e0\u7591\u95ee\u9009\u62e9 grafana \u3002 \u6211\u7684 Grafana \u539f\u6765\u5df2\u7ecf\u5b89\u88c5\u8fc7\u4e86\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b89\u88c5\u6587\u6863 \u540c\u6837\u7684\uff0c\u5728 Kubernetes \u73af\u5883\u4e0b\u9762\u8fdb\u884c\u5b89\u88c5\uff0c yaml \u6587\u4ef6\u5982\u4e0b: apiVersion: extensions/v1beta1 kind: Deployment metadata: name: grafana namespace: kube-ops spec: replicas: 1 template: metadata: labels: k8s-app: grafana task: monitoring spec: containers: - name: grafana image: gcr.io/google_containers/heapster-grafana-amd64:v4.4.3 ports: - containerPort: 3000 protocol: TCP resources: limits: cpu: 200m memory: 256Mi requests: cpu: 100m memory: 100Mi volumeMounts: - name: ca-certificates mountPath: /etc/ssl/certs readOnly: true - name: grafana-data mountPath: /var subPath: grafana env: - name: INFLUXDB_HOST value: influxdb - name: INFLUXDB_SERVICE_URL value: http://influxdb.kube-ops.svc.cluster.local:8086 - name: GF_SERVER_HTTP_PORT value: \"3000\" - name: GF_AUTH_BASIC_ENABLED value: \"false\" - name: GF_AUTH_ANONYMOUS_ENABLED value: \"true\" - name: GF_AUTH_ANONYMOUS_ORG_ROLE value: Admin - name: GF_SERVER_ROOT_URL # If you're only using the API Server proxy, set this value instead: # value: /api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/ value: / volumes: - name: ca-certificates hostPath: path: /etc/ssl/certs - name: grafana-data emptyDir: {} --- apiVersion: v1 kind: Service metadata: labels: kubernetes.io/cluster-service: 'true' kubernetes.io/name: grafana name: grafana namespace: kube-ops spec: ports: - port: 3000 targetPort: 3000 selector: k8s-app: grafana \u5c06\u4ee5\u4e0a\u6587\u4ef6\u4fdd\u5b58\u4e3a grafana.yaml \uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\uff1a $ kubectl create -f grafana.yaml \u540c\u6837\u7684\u4f60\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 kubectl port-forward \u628a\u7aef\u53e3\u66b4\u9732\u5728\u672c\u5730\uff0c\u6216\u8005\u7528 ingress \u5c06\u670d\u52a1\u66b4\u9732\u5728\u5916\u7f51\u8fdb\u884c\u8bbf\u95ee\u3002 \u8bbf\u95ee grafanaWEB \u754c\u9762\uff0c\u5c06\u6211\u4eec\u4e0a\u9762\u7684 Prometheus \u6dfb\u52a0\u5230 grafana \u6570\u636e\u6e90\u4e2d\u53bb $ kubectl get svc -n kube-system NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes-dashboard NodePort 10.254.64.44 <none> 80:31042/TCP 34d monitoring-grafana NodePort 10.254.77.179 <none> 80:30425/TCP 34d monitoring-influxdb ClusterIP 10.254.82.61 <none> 8086/TCP 34d \u7136\u540e\u6dfb\u52a0\u6211\u4eec\u7684 Dashboard \uff0c\u63a8\u8350\u4f7f\u7528 https://grafana.com/dashboards/162 \uff0c\u53ef\u4ee5\u4e0b\u8f7d\u8be5\u9875\u9762\u7684 dashboard \u7684 json \u6587\u4ef6\uff0c\u7136\u540e\u76f4\u63a5\u5bfc\u5165\u5230 grafana \u4e2d\u53bb\u3002 \u4f46\u662f\u9700\u8981\u6ce8\u610f\u5176\u4e2d\u7684\u4e00\u4e9b\u53c2\u6570\uff0c\u9700\u8981\u6839\u636e prometheus \u4e2d\u91c7\u96c6\u5230\u5b9e\u9645\u6570\u636e\u8fdb\u884c\u586b\u5199\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u91c7\u96c6\u5230\u5bb9\u5668\u540d\u662f name \uff0c\u800c\u4e0d\u662f io_kubernetes_container_name , kubernetes-pod-monitoring_rev1.json \u6700\u7ec8\u5c55\u793a\u754c\u9762\u5982\u4e0b","title":"\u7b2c\u4e00\u8282 Kubernetes\u4f7f\u7528Prometheus\u642d\u5efa\u76d1\u63a7\u5e73\u53f0(2018)"},{"location":"chap3/1prometheus_setup/#kubernetesprometheus2018","text":"\u6700\u8fd1\u5728\u6d4b\u8bd5\u73af\u5883\u642d\u5efa\u4e86Kubernetes\u96c6\u7fa4\u73af\u5883\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u662f\u76f4\u63a5\u901a\u8fc7Dashboard\u7684\u8d44\u6e90\u7edf\u8ba1\u56fe\u6807\u8fdb\u884c\u89c2\u5bdf\u7684\uff0c\u4f46\u662f\u5f88\u663e\u7136\u5982\u679c\u8981\u4e0a\u5230\u751f\u4ea7\u73af\u5883\uff0c\u5c31\u9700\u8981\u66f4\u81ea\u52a8\u5316\u7684\u65b9\u5f0f\u6765\u5bf9\u96c6\u7fa4\u3001Pod\u751a\u81f3\u5bb9\u5668\u8fdb\u884c\u76d1\u63a7\u4e86\u3002 Kubernetes\u5185\u7f6e\u4e86\u4e00\u5957\u76d1\u63a7\u65b9\u6848\uff1a influxdb+grafana+heapster \u3002\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 Prometheus \u6765\u5b8c\u6210k8s\u7684\u96c6\u7fa4\u76d1\u63a7\u3002","title":"\u7b2c\u4e00\u8282 Kubernetes\u4f7f\u7528Prometheus\u642d\u5efa\u76d1\u63a7\u5e73\u53f0(2018)"},{"location":"chap3/1prometheus_setup/#1-prometheus","text":"Prometheus \u662f SoundCloud \u5f00\u6e90\u7684\u4e00\u6b3e\u5f00\u6e90\u8f6f\u4ef6\u3002\u5b83\u7684\u5b9e\u73b0\u53c2\u8003\u4e86 Google \u5185\u90e8\u7684\u76d1\u63a7\u5b9e\u73b0\uff0c\u4e0e\u6e90\u81ea Google \u7684 Kubernetes \u7ed3\u5408\u8d77\u6765\u975e\u5e38\u5408\u9002\u3002\u53e6\u5916\u76f8\u6bd4 influxdb \u7684\u65b9\u6848\uff0c\u6027\u80fd\u66f4\u52a0\u7a81\u51fa\uff0c\u800c\u4e14\u8fd8\u5185\u7f6e\u4e86\u62a5\u8b66\u529f\u80fd\u3002\u5b83\u9488\u5bf9\u5927\u89c4\u6a21\u7684\u96c6\u7fa4\u73af\u5883\u8bbe\u8ba1\u4e86\u62c9\u53d6\u5f0f\u7684\u6570\u636e\u91c7\u96c6\u65b9\u5f0f\uff0c\u4f60\u53ea\u9700\u8981\u5728\u4f60\u7684\u5e94\u7528\u91cc\u9762\u5b9e\u73b0\u4e00\u4e2a metrics \u63a5\u53e3\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u63a5\u53e3\u544a\u8bc9 Prometheus \u5c31\u53ef\u4ee5\u5b8c\u6210\u6570\u636e\u91c7\u96c6\u4e86\u3002","title":"1 Prometheus \u7b80\u4ecb"},{"location":"chap3/1prometheus_setup/#2-prometheus","text":"\u9996\u5148\u6211\u4eec\u4f7f\u7528 namespace \u6765\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684 kube-ops \u7684 namespace \u7528\u6765\u7ba1\u7406 Prometheus \u3002( namespace.yaml ) --- apiVersion: v1 kind: Namespace metadata: name: kube-ops $ kubectl create -f namespace.yaml \u7136\u540e\u6211\u4eec\u4f7f\u7528 ConfigMap \u7684\u5f62\u5f0f\u6765\u8bbe\u7f6e Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5982\u4e0b( prometheus-config.yaml ) apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | global: scrape_interval: 30s scrape_timeout: 30s scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'kubernetes-nodes-cadvisor' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - api_servers: - 'https://10.254.0.1' in_cluster: true role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - source_labels: [__meta_kubernetes_role] action: replace target_label: kubernetes_role - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:4194' target_label: __address__ - job_name: 'kubernetes-apiserver-cadvisor' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - api_servers: - 'https://10.254.0.1' in_cluster: true role: apiserver relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - source_labels: [__meta_kubernetes_role] action: replace target_label: kubernetes_role - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:10255' target_label: __address__ - job_name: 'kubernetes-node-exporter' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - api_servers: - 'https://10.254.0.1' in_cluster: true role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - source_labels: [__meta_kubernetes_role] action: replace target_label: kubernetes_role - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:31672' target_label: __address__ \u5c06\u4ee5\u4e0a\u914d\u7f6e\u6587\u4ef6\u4fdd\u5b58\u4e3a prometheus-config.yaml \uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\uff1a $ kubectl create -f prometheus-config.yaml","title":"2 \u5b89\u88c5Prometheus"},{"location":"chap3/1prometheus_setup/#2-1","text":"1.\u5176\u4e2d api_servers \u7684\u5730\u5740\u53ef\u4ee5\u901a\u8fc7 kubectl get services \u67e5\u770b kubernetes \u7684\u5730\u5740\uff0c\u6ce8\u610f https \u7684\u8bc1\u4e66\u8def\u5f84 $ kubectl get services NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes ClusterIP 10.254.0.1 <none> 443/TCP 34d 2. job_name=kubernetes-apiserver-cadvisor \u9700\u8981\u5c06 10250 \u7aef\u53e3\u66ff\u6362\u6210 10255 \uff0c 10255 \u7aef\u53e3\u662f kubelet \u5b9e\u73b0\u7684 metrics \uff0c\u53ef\u4ee5\u5728\u8282\u70b9\u4e0a\u9762 curl \u67e5\u770b\u5185\u5bb9\uff0c curl http://<node_ip>:10255/metrics 3. job_name=kubernetes-nodes-cadvisor \u9700\u8981\u5c06 10250 \u7aef\u53e3\u66ff\u6362\u6210 4194 \uff0c 4194 \u540c\u6837\u662fkubernetes\u96c6\u6210\u7684\u5bb9\u5668\u76d1\u63a7\u670d\u52a1\uff0c\u5728 k8s 1.7 \u7248\u672c\u4e4b\u524d\u7684\u7528 10255 \u7aef\u53e3\u5373\u53ef\uff0c\u4f46\u662f 1.7 \u7248\u672c\u540e cadvisor \u76d1\u63a7\u7684\u6570\u636e\u6ca1\u6709\u96c6\u6210\u5230 kubelet \u7684\u5b9e\u73b0\u91cc\u9762\u53bb\u4e86, After upgrading to 1.7.0, Kubelet no longer reports cAdvisor stats 4. job_name=kubernetes-node-exporter \u4e2d\u66ff\u6362 10250 \u7684\u7aef\u53e3\u662f 31672 \uff0c\u8be5\u7aef\u53e3\u662f node-exporter \u66b4\u9732\u7684 NodePort \u7aef\u53e3\uff0c\u8fd9\u91cc\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u586b\u5199\u3002 \u7136\u540e\u6211\u4eec\u4f7f\u7528 ServiceAccount , ClusterRole , ClusterRoleBinding \u7684\u5f62\u5f0f\u6765\u8bbe\u7f6e Prometheus \u7684 SA \uff0c\u5982\u4e0b( prometheus-sa.yaml ) apiVersion: v1 kind: ServiceAccount metadata: name: prometheus namespace: kube-ops --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRole metadata: name: prometheus namespace: kube-ops rules: - apiGroups: [\"\"] resources: - nodes - nodes/proxy - services - endpoints - pods verbs: [\"get\", \"list\", \"watch\"] - nonResourceURLs: [\"/metrics\"] verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: prometheus namespace: kube-ops roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: prometheus subjects: - kind: ServiceAccount name: prometheus namespace: kube-ops $ kubectl create -f prometheus-sa.yaml \u90e8\u7f72 node-exporter \uff0c\u4e3a\u4e86\u80fd\u591f\u6536\u96c6\u6bcf\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 DaemonSet \u7684\u5f62\u5f0f\u90e8\u7f72 PODS \uff1a( node-exporter.yaml ) --- apiVersion: extensions/v1beta1 kind: DaemonSet metadata: name: node-exporter namespace: kube-ops labels: k8s-app: node-exporter spec: template: metadata: labels: k8s-app: node-exporter spec: containers: - image: prom/node-exporter name: node-exporter ports: - containerPort: 9100 protocol: TCP name: http --- apiVersion: v1 kind: Service metadata: labels: k8s-app: node-exporter name: node-exporter namespace: kube-ops spec: ports: - name: http port: 9100 nodePort: 31672 protocol: TCP type: NodePort selector: k8s-app: node-exporter \u5c06\u4ee5\u4e0a\u6587\u4ef6\u4fdd\u5b58\u4e3a node-exporter.yaml \uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\uff1a $ kubectl create -f node-exporter.yaml \u63a5\u4e0b\u6765\u901a\u8fc7 Deployment \u90e8\u7f72 Prometheus.yaml \u6587\u4ef6\u5982\u4e0b\uff1a( prometheus-deploy.yaml ) apiVersion: extensions/v1beta1 kind: Deployment metadata: labels: name: prometheus-deployment name: prometheus namespace: kube-ops spec: replicas: 1 template: metadata: labels: app: prometheus spec: serviceAccountName: prometheus containers: - image: prom/prometheus:v1.0.1 name: prometheus command: - \"/bin/prometheus\" args: - \"-config.file=/etc/prometheus/prometheus.yml\" - \"-storage.local.path=/prometheus\" - \"-storage.local.retention=24h\" ports: - containerPort: 9090 protocol: TCP volumeMounts: - mountPath: \"/prometheus\" name: data subPath: prometheus - mountPath: \"/etc/prometheus\" name: config-volume resources: requests: cpu: 100m memory: 100Mi limits: cpu: 200m memory: 1Gi volumes: - name: data emptyDir: {} - configMap: name: prometheus-config name: config-volume \u5c06\u4ee5\u4e0a\u6587\u4ef6\u4fdd\u5b58\u4e3a prometheus-deploy.yaml \uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\uff1a","title":"2-1 \u6ce8\u610f\uff1a"},{"location":"chap3/1prometheus_setup/#2-2","text":"\u4e00\u5b9a\u8981\u52a0\u4e0a serviceAccountName: prometheus , \u5426\u5219\u4f1a\u51fa\u73b0\u5728 Prometheus pod log \u4e2d: Cannot initialize nodes collection: unable to list Kubernetes nodes; unexpected response: 403 403 Forbidden $ kubectl create -f prometheus-deploy.yaml","title":"2-2 \u6ce8\u610f\uff1a"},{"location":"chap3/1prometheus_setup/#3-output-prometheus-service","text":"","title":"3 Output Prometheus Service"},{"location":"chap3/1prometheus_setup/#3-1-option-1","text":"\u628a prometheus \u7684 pod \u670d\u52a1\u66b4\u9732\u51fa\u6765, \u7528 svc \u628a nodeport \u66b4\u9732\u51fa\u6765( prometheus-svc.yaml ): apiVersion: v1 kind: Service metadata: name: prometheus namespace: kube-ops labels: k8s-app: prometheus spec: selector: app: prometheus type: NodePort ports: - name: web port: 9090 protocol: TCP nodePort: 30900 $ kubectl create -f prometheus-svc.yaml","title":"3-1 option 1"},{"location":"chap3/1prometheus_setup/#3-2-option-2","text":"$ screen $ POD=`kubectl get pod -l app=prometheus -n kube-ops -o go-template --template '{{range .items}}{{.metadata.name}}{{end}}'` $ kubectl port-forward $POD 9090:9090 $ ctrl + a + d $ curl http://localhost:9090 $ screen \u2013ls $ screen -XS [session # you want to quit] quit \u7136\u540e\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee http://localhost:9090 \u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230Prometheus\u7684\u754c\u9762\u4e86\u3002","title":"3-2 option 2"},{"location":"chap3/1prometheus_setup/#3-3-option-3","text":"\u5728\u521b\u5efa cluserIP Service \u4e4b\u540e \u6211\u8fd9\u91cc\u901a\u8fc7 ingress \u66b4\u9732\u5230\u5916\u7f51\uff0c yaml \u6587\u4ef6\u5982\u4e0b\uff1a apiVersion: extensions/v1beta1 kind: Ingress metadata: name: traefik-default-ingress annotations: kubernetes.io/ingress.class: \"traefik\" spec: tls: - secretName: traefik-ssl rules: - host: prometheus.local # \u66ff\u6362\u6210\u4f60\u7684\u57df\u540d http: paths: - path: / backend: serviceName: prometheus servicePort: 9090 \u5c06\u4ee5\u4e0a\u6587\u4ef6\u4fdd\u5b58\u4e3a prometheus-ingress.yaml \uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\uff1a $ kubectl create -f prometheus-ingress.yaml \u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762 option1 : nodeport \u4e2d\u914d\u7f6e\u7684\u7aef\u53e3\u8fdb\u884c\u8bbf\u95ee\u4e86\uff0c\u53ef\u4ee5\u5207\u6362\u5230 Status \u4e0b\u9762\u7684 targets \u67e5\u770b\u6211\u4eec\u91c7\u96c6\u7684\u6570\u636e\u662f\u5426\u6b63\u5e38\uff1a $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE node-exporter NodePort 10.254.125.138 <none> 9100:31672/TCP 34d prometheus NodePort 10.254.35.188 <none> 9090:30900/TCP 3h \u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee http://192.168.1.138:30900 \u53ef\u4ee5\u6839\u636e targets \u4e0b\u9762\u7684\u63d0\u793a\u4fe1\u606f\u5bf9\u91c7\u96c6\u5931\u8d25\u7684\u6570\u636e\u8fdb\u884c\u4fee\u6b63\u3002","title":"3-3 option 3"},{"location":"chap3/1prometheus_setup/#4","text":"Prometheus \u63d0\u4f9b\u4e86 API \u7684\u65b9\u5f0f\u8fdb\u884c\u6570\u636e\u67e5\u8be2\uff0c\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 query \u8bed\u8a00\u8fdb\u884c\u590d\u6742\u7684\u67e5\u8be2\u4efb\u52a1\uff0c\u5728\u4e0a\u9762\u7684WEB\u754c\u9762\u4e0a\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u67e5\u8be2\u548c\u56fe\u5f62\u5316\u7684\u5c55\u793a\u529f\u80fd\u3002 \u6bd4\u5982\u67e5\u8be2\u6bcf\u4e2a POD \u7684 CPU \u4f7f\u7528\u60c5\u51b5\uff0c\u67e5\u8be2\u6761\u4ef6\u5982\u4e0b\uff1a sum by (pod_name)( rate(container_cpu_usage_seconds_total{image!=\"\", pod_name!=\"\"}[1m] ) ) \u6ce8\u610f\u5176\u4e2d\u7684 pod_name \u548c image \u8981\u6839\u636e\u81ea\u5df1\u91c7\u96c6\u7684\u6570\u636e\u8fdb\u884c\u533a\u5206\u3002 \u66f4\u591a\u7684\u67e5\u8be2\u6761\u4ef6\u53ef\u4ee5\u53c2\u8003 Prometheus\u7684\u6587\u6863 \uff0c\u5c06\u6765\u4e5f\u4f1a\u9010\u6b65\u4ecb\u7ecd\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u5c55\u5f00\u4e86\u3002 \u8fd9\u6837\u901a\u8fc7\u5728 Kubernetes \u4e0a\u90e8\u7f72 Prometheus \uff0c\u5728\u4e0d\u4fee\u6539\u96c6\u7fa4\u7684\u4efb\u4f55\u914d\u7f6e\u60c5\u51b5\u4e0b\u5b9e\u73b0\u4e86\u96c6\u7fa4\u7684\u57fa\u672c\u76d1\u63a7\u529f\u80fd\u3002 Reference: Prometheus\u7684\u6587\u6863","title":"4 \u67e5\u8be2\u76d1\u63a7\u6570\u636e"},{"location":"chap3/1prometheus_setup/#5-grafana","text":"Prometheus \u4ee5\u53ca\u83b7\u53d6\u5230\u4e86\u6211\u4eec\u91c7\u96c6\u7684\u6570\u636e\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u52a0\u5f3a\u5927\u7684\u56fe\u6807\u5c55\u793a\u5de5\u5177\uff0c\u6beb\u65e0\u7591\u95ee\u9009\u62e9 grafana \u3002 \u6211\u7684 Grafana \u539f\u6765\u5df2\u7ecf\u5b89\u88c5\u8fc7\u4e86\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b89\u88c5\u6587\u6863 \u540c\u6837\u7684\uff0c\u5728 Kubernetes \u73af\u5883\u4e0b\u9762\u8fdb\u884c\u5b89\u88c5\uff0c yaml \u6587\u4ef6\u5982\u4e0b: apiVersion: extensions/v1beta1 kind: Deployment metadata: name: grafana namespace: kube-ops spec: replicas: 1 template: metadata: labels: k8s-app: grafana task: monitoring spec: containers: - name: grafana image: gcr.io/google_containers/heapster-grafana-amd64:v4.4.3 ports: - containerPort: 3000 protocol: TCP resources: limits: cpu: 200m memory: 256Mi requests: cpu: 100m memory: 100Mi volumeMounts: - name: ca-certificates mountPath: /etc/ssl/certs readOnly: true - name: grafana-data mountPath: /var subPath: grafana env: - name: INFLUXDB_HOST value: influxdb - name: INFLUXDB_SERVICE_URL value: http://influxdb.kube-ops.svc.cluster.local:8086 - name: GF_SERVER_HTTP_PORT value: \"3000\" - name: GF_AUTH_BASIC_ENABLED value: \"false\" - name: GF_AUTH_ANONYMOUS_ENABLED value: \"true\" - name: GF_AUTH_ANONYMOUS_ORG_ROLE value: Admin - name: GF_SERVER_ROOT_URL # If you're only using the API Server proxy, set this value instead: # value: /api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/ value: / volumes: - name: ca-certificates hostPath: path: /etc/ssl/certs - name: grafana-data emptyDir: {} --- apiVersion: v1 kind: Service metadata: labels: kubernetes.io/cluster-service: 'true' kubernetes.io/name: grafana name: grafana namespace: kube-ops spec: ports: - port: 3000 targetPort: 3000 selector: k8s-app: grafana \u5c06\u4ee5\u4e0a\u6587\u4ef6\u4fdd\u5b58\u4e3a grafana.yaml \uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\uff1a $ kubectl create -f grafana.yaml \u540c\u6837\u7684\u4f60\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 kubectl port-forward \u628a\u7aef\u53e3\u66b4\u9732\u5728\u672c\u5730\uff0c\u6216\u8005\u7528 ingress \u5c06\u670d\u52a1\u66b4\u9732\u5728\u5916\u7f51\u8fdb\u884c\u8bbf\u95ee\u3002 \u8bbf\u95ee grafanaWEB \u754c\u9762\uff0c\u5c06\u6211\u4eec\u4e0a\u9762\u7684 Prometheus \u6dfb\u52a0\u5230 grafana \u6570\u636e\u6e90\u4e2d\u53bb $ kubectl get svc -n kube-system NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes-dashboard NodePort 10.254.64.44 <none> 80:31042/TCP 34d monitoring-grafana NodePort 10.254.77.179 <none> 80:30425/TCP 34d monitoring-influxdb ClusterIP 10.254.82.61 <none> 8086/TCP 34d \u7136\u540e\u6dfb\u52a0\u6211\u4eec\u7684 Dashboard \uff0c\u63a8\u8350\u4f7f\u7528 https://grafana.com/dashboards/162 \uff0c\u53ef\u4ee5\u4e0b\u8f7d\u8be5\u9875\u9762\u7684 dashboard \u7684 json \u6587\u4ef6\uff0c\u7136\u540e\u76f4\u63a5\u5bfc\u5165\u5230 grafana \u4e2d\u53bb\u3002 \u4f46\u662f\u9700\u8981\u6ce8\u610f\u5176\u4e2d\u7684\u4e00\u4e9b\u53c2\u6570\uff0c\u9700\u8981\u6839\u636e prometheus \u4e2d\u91c7\u96c6\u5230\u5b9e\u9645\u6570\u636e\u8fdb\u884c\u586b\u5199\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u91c7\u96c6\u5230\u5bb9\u5668\u540d\u662f name \uff0c\u800c\u4e0d\u662f io_kubernetes_container_name , kubernetes-pod-monitoring_rev1.json \u6700\u7ec8\u5c55\u793a\u754c\u9762\u5982\u4e0b","title":"5 \u5b89\u88c5Grafana"},{"location":"chap3/29AlertManager_SendAlerts_when/","text":"\u7b2c\u5341\u4e09\u8282 AlertManager\u4f55\u65f6\u62a5\u8b66 \u5728\u4f7f\u7528 Prometheus \u8fdb\u884c\u76d1\u63a7\u7684\u65f6\u5019\uff0c\u901a\u8fc7 AlertManager \u6765\u8fdb\u884c\u544a\u8b66\uff0c\u4f46\u662f\u6709\u5f88\u591a\u4eba\u5bf9\u62a5\u8b66\u7684\u76f8\u5173\u914d\u7f6e\u6bd4\u8f83\u8ff7\u7cca\uff0c\u4e0d\u592a\u6e05\u695a\u5177\u4f53\u4ec0\u4e48\u65f6\u5019\u4f1a\u8fdb\u884c\u544a\u8b66\u3002\u4e0b\u9762\u6211\u4eec\u6765\u7b80\u5355\u4ecb\u7ecd\u4e0b AlertManager \u4e2d\u7684\u51e0\u4e2a\u5bb9\u6613\u6df7\u6dc6\u7684\u53c2\u6570\u3002 \u9996\u5148\u5728 Prometheus \u4e2d\u6709\u4e24\u4e2a \u5168\u5c40\u7684\u53c2\u6570 scrape_interval \u548c evaluation_interval \u3002 \u5176\u4e2d scrape_interval \u53c2\u6570\u8868\u793a\u7684\u662f Prometheus \u4ece\u5404\u79cd metrics \u63a5\u53e3\u6293\u53d6\u6307\u6807\u6570\u636e\u7684\u65f6\u95f4\u95f4\u9694 evaluation_interval \u53c2\u6570\u8868\u793a\u7684\u662f Prometheus \u5bf9\u62a5\u8b66\u89c4\u5219\u8fdb\u884c\u8bc4\u4f30\u8ba1\u7b97\u7684\u65f6\u95f4\u95f4\u9694 \u3002 \u5f53\u4e00\u6761\u544a\u8b66\u89c4\u5219\u8bc4\u4f30\u540e\uff0c\u5b83\u7684\u72b6\u6001\u53ef\u80fd\u662f inactive \u3001 pending \u6216\u8005 firing \u4e2d\u7684\u4e00\u79cd\u3002\u8bc4\u4f30\u4e4b\u540e\uff0c\u72b6\u6001\u5c06\u88ab\u53d1\u9001\u5230\u5173\u8054\u7684 AlertManager \u4ee5\u8fdb\u884c\u6f5c\u5728\u5730\u5f00\u59cb\u6216\u8005\u505c\u6b62\u544a\u8b66\u901a\u77e5\u7684\u53d1\u9001\u3002 \u7136\u540e\u5c31\u662f AlertManager \u4e2d\u914d\u7f6e\u7684 group_by \u53c2\u6570\u8d77\u4f5c\u7528\u7684\u5730\u65b9\u4e86\uff0c \u4e3a\u4e86\u907f\u514d\u8fde\u7eed\u53d1\u9001\u7c7b\u4f3c\u7684\u544a\u8b66\u901a\u77e5\uff0c\u53ef\u4ee5\u5c06\u76f8\u5173\u544a\u8b66\u5206\u5230\u540c\u4e00\u7ec4\u4e2d\u8fdb\u884c\u544a\u8b66\u3002 \u5206\u7ec4\u673a\u5236\u53ef\u4ee5\u5c06\u8be6\u7ec6\u7684\u544a\u8b66\u4fe1\u606f\u5408\u5e76\u6210\u4e00\u4e2a\u901a\u77e5\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6bd4\u5982\u7531\u4e8e\u7cfb\u7edf\u5b95\u673a\u5bfc\u81f4\u5927\u91cf\u7684\u544a\u8b66\u88ab\u540c\u65f6\u89e6\u53d1\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5206\u7ec4\u673a\u5236\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u88ab\u89e6\u53d1\u7684\u544a\u8b66\u5408\u5e76\u4e3a\u4e00\u4e2a\u544a\u8b66\u901a\u77e5\uff0c\u907f\u514d\u4e00\u6b21\u6027\u63a5\u53d7\u5927\u91cf\u7684\u544a\u8b66\u901a\u77e5\uff1a group_by: ['alertname', 'job'] \u5f53\u4e00\u4e2a\u65b0\u7684\u62a5\u8b66\u5206\u7ec4\u88ab\u521b\u5efa\u540e\uff0c\u9700\u8981\u7b49\u5f85\u81f3\u5c11 group_wait \u65f6\u95f4\u6765\u521d\u59cb\u5316\u544a\u8b66\u3002 \u8fd9\u6837\u5b9e\u9645\u4e0a\u5c31\u7f13\u51b2\u4e86\u4ece Prometheus \u53d1\u9001\u5230 AlertManager \u7684\u544a\u8b66\uff0c\u5c06\u544a\u8b66\u6309\u76f8\u540c\u7684\u6807\u7b7e\u5206\u7ec4\uff0c\u800c\u4e0d\u5fc5\u5168\u90fd\u53d1\u9001\uff1a group_by: ['alertname', 'job'] group_wait: 45s # \u901a\u5e38\u8bbe\u7f6e\u62100s ~ \u51e0\u5206\u949f \u4f46\u662f\u8fd9\u53ef\u80fd\u4e5f\u5bfc\u81f4\u4e86\u63a5\u6536\u5230\u7684\u544a\u8b66\u901a\u77e5\u7684\u7b49\u5f85\u65f6\u95f4\u66f4\u957f\u4e86\u3002\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\u662f\u4e0b\u6b21\u5bf9\u544a\u8b66\u89c4\u5219\u8fdb\u884c\u8bc4\u4f30\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u518d\u6b21\u6536\u5230\u76f8\u540c\u7684\u5206\u7ec4\u544a\u8b66\u901a\u77e5\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 group_interval \u53c2\u6570\u6765\u8fdb\u884c\u914d\u7f6e\uff0c\u5f53\u4e0a\u4e00\u4e2a\u544a\u8b66\u901a\u77e5\u53d1\u9001\u5230\u4e00\u4e2a group \u540e\uff0c\u6211\u4eec\u5728\u7b49\u5f85 group_interval \u65f6\u957f\u540e\uff0c\u7136\u540e\u518d\u5c06\u89e6\u53d1\u7684\u544a\u8b66\u4ee5\u53ca\u5df2\u89e3\u51b3\u7684\u544a\u8b66\u53d1\u9001\u7ed9 receiver \uff1a group_by: ['instance', 'job'] group_wait: 45s group_interval: 10m # \u901a\u5e38\u8bbe\u7f6e\u62105\u5206\u949f\u4ee5\u4e0a \u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u4e00\u4e2a repeat_interval \u53c2\u6570\uff0c\u8be5\u53c2\u6570\u4e3b\u8981\u662f\u7528\u4e8e\u914d\u7f6e\u544a\u8b66\u4fe1\u606f\u5df2\u7ecf\u53d1\u9001\u6210\u529f\u540e\uff0c\u518d\u6b21\u88ab\u89e6\u53d1\u53d1\u9001\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u4e00\u822c\u4e0d\u540c\u7c7b\u578b\u7684\u544a\u8b66\u4e1a\u52a1\u6539\u53c2\u6570\u914d\u7f6e\u4e0d\u592a\u4e00\u6837\uff0c \u5bf9\u4e8e\u6bd4\u8f83\u91cd\u8981\u7d27\u6025\u7684\u53ef\u4ee5\u5c06\u6539\u53c2\u6570\u8bbe\u7f6e\u7a0d\u5fae\u5c0f\u70b9\uff0c\u5bf9\u4e8e\u4e0d\u592a\u7d27\u6025\u7684\u53ef\u4ee5\u8bbe\u7f6e\u7a0d\u5fae\u5927\u70b9 \u3002 \u9762\u8fd9\u4e9b\u90fd\u662f\u5728 Prometheus \u6216\u8005 AlertManager \u4e2d\u914d\u7f6e\u7684\u4e00\u4e9b\u5168\u5c40\u7684\u53c2\u6570\uff0c\u5bf9\u4e8e\u5177\u4f53\u7684\u544a\u8b66\u89c4\u5219\u8fd8\u6709\u65f6\u95f4\u53ef\u4ee5\u914d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\u7684\u544a\u8b66\u89c4\u5219\uff1a groups: - name: test-node-mem rules: - alert: NodeMemoryUsage expr: (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes * 100 > 90 for: 1m labels: team: node annotations: summary: \"{{$labels.instance}}: High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 90% (current value is: {{ $value }}\" \u4e0a\u9762\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a test-node-mem \u7684\u62a5\u8b66\u89c4\u5219\u5206\u7ec4\uff0c\u4e00\u6761\u62a5\u8b66\u89c4\u5219\u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u90e8\u5206\u7ec4\u6210\uff1a alert \uff1a\u544a\u8b66\u89c4\u5219\u7684\u540d\u79f0 expr \uff1a\u662f\u7528\u4e8e\u8fdb\u884c\u62a5\u8b66\u89c4\u5219 PromQL \u67e5\u8be2\u8bed\u53e5 for \uff1a\u8bc4\u4f30\u7b49\u5f85\u65f6\u95f4\uff08 Pending Duration \uff09\uff0c\u7528\u4e8e\u8868\u793a\u53ea\u6709\u5f53\u89e6\u53d1\u6761\u4ef6\u6301\u7eed\u4e00\u6bb5\u65f6\u95f4\u540e\u624d\u53d1\u9001\u544a\u8b66\uff0c\u5728\u7b49\u5f85\u671f\u95f4\u65b0\u4ea7\u751f\u7684\u544a\u8b66\u72b6\u6001\u4e3apending labels \uff1a\u81ea\u5b9a\u4e49\u6807\u7b7e\uff0c\u5141\u8bb8\u7528\u6237\u6307\u5b9a\u989d\u5916\u7684\u6807\u7b7e\u5217\u8868\uff0c\u628a\u5b83\u4eec\u9644\u52a0\u5728\u544a\u8b66\u4e0a annotations \uff1a\u6307\u5b9a\u4e86\u53e6\u4e00\u7ec4\u6807\u7b7e\uff0c\u5b83\u4eec\u4e0d\u88ab\u5f53\u505a\u544a\u8b66\u5b9e\u4f8b\u7684\u8eab\u4efd\u6807\u8bc6\uff0c\u5b83\u4eec\u7ecf\u5e38\u7528\u4e8e\u5b58\u50a8\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f\uff0c\u7528\u4e8e\u62a5\u8b66\u4fe1\u606f\u7684\u5c55\u793a\u4e4b\u7c7b\u7684 \u5176\u4e2d\u7684 for \u5b57\u6bb5\u540c\u6837\u4f1a\u5f71\u54cd\u5230\u6211\u4eec\u7684\u544a\u8b66\u5230\u8fbe\u65f6\u95f4\uff0c\u8be5\u53c2\u6570\u7528\u4e8e\u8868\u793a\u53ea\u6709\u5f53\u89e6\u53d1\u6761\u4ef6\u6301\u7eed\u4e00\u6bb5\u65f6\u95f4\u540e\u624d\u53d1\u9001\u544a\u8b66\uff0c\u5728\u7b49\u5f85\u671f\u95f4\u65b0\u4ea7\u751f\u7684\u544a\u8b66\u72b6\u6001\u4e3a pending \uff0c\u8fd9\u4e2a\u53c2\u6570\u4e3b\u8981\u7528\u4e8e\u964d\u566a\uff0c\u5f88\u591a\u7c7b\u4f3c\u54cd\u5e94\u65f6\u95f4\u8fd9\u6837\u7684\u6307\u6807\u90fd\u662f\u6709\u6296\u52a8\u7684\uff0c\u901a\u8fc7\u6307\u5b9a Pending Duration \uff0c\u6211\u4eec\u53ef\u4ee5\u8fc7\u6ee4\u6389\u8fd9\u4e9b\u77ac\u65f6\u6296\u52a8\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u80fd\u591f\u628a\u6ce8\u610f\u529b\u653e\u5728\u771f\u6b63\u6709\u6301\u7eed\u5f71\u54cd\u7684\u95ee\u9898\u4e0a\u3002 \u6240\u4ee5\u6709\u7684\u60c5\u51b5\u4e0b\u8ba1\u7b97\u6211\u4eec\u7684\u76d1\u63a7\u56fe\u8868\u4e0a\u9762\u5df2\u7ecf\u6709\u90e8\u5206\u6307\u6807\u8fbe\u5230\u4e86\u544a\u8b66\u7684\u9608\u503c\u4e86\uff0c\u4f46\u662f\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u89e6\u53d1\u544a\u8b66\u89c4\u5219\uff0c\u6bd4\u5982\u6211\u4eec\u4e0a\u9762\u7684\u89c4\u5219\u4e2d\uff0c\u8bbe\u7f6e\u7684\u662f 1 \u5206\u949f\u7684 Pending Duration \uff0c\u5bf9\u4e8e\u4e0b\u56fe\u8fd9\u79cd\u60c5\u51b5\u5c31\u4e0d\u4f1a\u89e6\u53d1\u544a\u8b66\uff0c\u56e0\u4e3a\u6301\u7eed\u65f6\u95f4\u592a\u77ed\uff0c\u6ca1\u6709\u8fbe\u5230\u4e00\u5206\u949f\uff1a \u5982\u679c\u544a\u8b66\u89c4\u5219\u8d85\u8fc7\u9608\u503c\u7684\u6301\u7eed\u65f6\u95f4\u8d85\u8fc7\u4e86 Pending Duration \u90a3\u4e48\u5c31\u4f1a\u89e6\u53d1\u544a\u8b66\u4e86\uff0c\u544a\u8b66\u4ea7\u751f\u540e\uff0c\u8fd8\u8981\u7ecf\u8fc7 Alertmanager \u7684\u5206\u7ec4\u3001 \u6291\u5236\u5904\u7406\u3001\u9759\u9ed8\u5904\u7406\u3001\u53bb\u91cd\u5904\u7406\u548c\u964d\u566a\u5904\u7406\u6700\u540e\u518d\u53d1\u9001\u7ed9\u63a5\u6536\u8005 \u3002 \u6240\u4ee5\u4ece\u4e00\u6761\u544a\u8b66\u89c4\u5219\u88ab\u8bc4\u4f30\u5230\u89e6\u53d1\u544a\u8b66\u518d\u5230\u53d1\u9001\u7ed9\u63a5\u6536\u65b9\uff0c\u4e2d\u95f4\u4f1a\u6709\u4e00\u7cfb\u5217\u7684\u5404\u79cd\u56e0\u7d20\u8fdb\u884c\u5e72\u9884\uff0c\u6240\u4ee5\u6709\u65f6\u5019\u5728\u76d1\u63a7\u56fe\u8868\u4e0a\u770b\u5230\u5df2\u7ecf\u8fbe\u5230\u4e86\u9608\u503c\u800c\u6700\u7ec8\u6ca1\u6709\u6536\u5230\u76d1\u63a7\u62a5\u8b66\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002","title":"\u7b2c\u5341\u4e09\u8282 AlertManager\u4f55\u65f6\u62a5\u8b66"},{"location":"chap3/29AlertManager_SendAlerts_when/#alertmanager","text":"\u5728\u4f7f\u7528 Prometheus \u8fdb\u884c\u76d1\u63a7\u7684\u65f6\u5019\uff0c\u901a\u8fc7 AlertManager \u6765\u8fdb\u884c\u544a\u8b66\uff0c\u4f46\u662f\u6709\u5f88\u591a\u4eba\u5bf9\u62a5\u8b66\u7684\u76f8\u5173\u914d\u7f6e\u6bd4\u8f83\u8ff7\u7cca\uff0c\u4e0d\u592a\u6e05\u695a\u5177\u4f53\u4ec0\u4e48\u65f6\u5019\u4f1a\u8fdb\u884c\u544a\u8b66\u3002\u4e0b\u9762\u6211\u4eec\u6765\u7b80\u5355\u4ecb\u7ecd\u4e0b AlertManager \u4e2d\u7684\u51e0\u4e2a\u5bb9\u6613\u6df7\u6dc6\u7684\u53c2\u6570\u3002 \u9996\u5148\u5728 Prometheus \u4e2d\u6709\u4e24\u4e2a \u5168\u5c40\u7684\u53c2\u6570 scrape_interval \u548c evaluation_interval \u3002 \u5176\u4e2d scrape_interval \u53c2\u6570\u8868\u793a\u7684\u662f Prometheus \u4ece\u5404\u79cd metrics \u63a5\u53e3\u6293\u53d6\u6307\u6807\u6570\u636e\u7684\u65f6\u95f4\u95f4\u9694 evaluation_interval \u53c2\u6570\u8868\u793a\u7684\u662f Prometheus \u5bf9\u62a5\u8b66\u89c4\u5219\u8fdb\u884c\u8bc4\u4f30\u8ba1\u7b97\u7684\u65f6\u95f4\u95f4\u9694 \u3002 \u5f53\u4e00\u6761\u544a\u8b66\u89c4\u5219\u8bc4\u4f30\u540e\uff0c\u5b83\u7684\u72b6\u6001\u53ef\u80fd\u662f inactive \u3001 pending \u6216\u8005 firing \u4e2d\u7684\u4e00\u79cd\u3002\u8bc4\u4f30\u4e4b\u540e\uff0c\u72b6\u6001\u5c06\u88ab\u53d1\u9001\u5230\u5173\u8054\u7684 AlertManager \u4ee5\u8fdb\u884c\u6f5c\u5728\u5730\u5f00\u59cb\u6216\u8005\u505c\u6b62\u544a\u8b66\u901a\u77e5\u7684\u53d1\u9001\u3002 \u7136\u540e\u5c31\u662f AlertManager \u4e2d\u914d\u7f6e\u7684 group_by \u53c2\u6570\u8d77\u4f5c\u7528\u7684\u5730\u65b9\u4e86\uff0c \u4e3a\u4e86\u907f\u514d\u8fde\u7eed\u53d1\u9001\u7c7b\u4f3c\u7684\u544a\u8b66\u901a\u77e5\uff0c\u53ef\u4ee5\u5c06\u76f8\u5173\u544a\u8b66\u5206\u5230\u540c\u4e00\u7ec4\u4e2d\u8fdb\u884c\u544a\u8b66\u3002 \u5206\u7ec4\u673a\u5236\u53ef\u4ee5\u5c06\u8be6\u7ec6\u7684\u544a\u8b66\u4fe1\u606f\u5408\u5e76\u6210\u4e00\u4e2a\u901a\u77e5\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6bd4\u5982\u7531\u4e8e\u7cfb\u7edf\u5b95\u673a\u5bfc\u81f4\u5927\u91cf\u7684\u544a\u8b66\u88ab\u540c\u65f6\u89e6\u53d1\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5206\u7ec4\u673a\u5236\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u88ab\u89e6\u53d1\u7684\u544a\u8b66\u5408\u5e76\u4e3a\u4e00\u4e2a\u544a\u8b66\u901a\u77e5\uff0c\u907f\u514d\u4e00\u6b21\u6027\u63a5\u53d7\u5927\u91cf\u7684\u544a\u8b66\u901a\u77e5\uff1a group_by: ['alertname', 'job'] \u5f53\u4e00\u4e2a\u65b0\u7684\u62a5\u8b66\u5206\u7ec4\u88ab\u521b\u5efa\u540e\uff0c\u9700\u8981\u7b49\u5f85\u81f3\u5c11 group_wait \u65f6\u95f4\u6765\u521d\u59cb\u5316\u544a\u8b66\u3002 \u8fd9\u6837\u5b9e\u9645\u4e0a\u5c31\u7f13\u51b2\u4e86\u4ece Prometheus \u53d1\u9001\u5230 AlertManager \u7684\u544a\u8b66\uff0c\u5c06\u544a\u8b66\u6309\u76f8\u540c\u7684\u6807\u7b7e\u5206\u7ec4\uff0c\u800c\u4e0d\u5fc5\u5168\u90fd\u53d1\u9001\uff1a group_by: ['alertname', 'job'] group_wait: 45s # \u901a\u5e38\u8bbe\u7f6e\u62100s ~ \u51e0\u5206\u949f \u4f46\u662f\u8fd9\u53ef\u80fd\u4e5f\u5bfc\u81f4\u4e86\u63a5\u6536\u5230\u7684\u544a\u8b66\u901a\u77e5\u7684\u7b49\u5f85\u65f6\u95f4\u66f4\u957f\u4e86\u3002\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\u662f\u4e0b\u6b21\u5bf9\u544a\u8b66\u89c4\u5219\u8fdb\u884c\u8bc4\u4f30\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u518d\u6b21\u6536\u5230\u76f8\u540c\u7684\u5206\u7ec4\u544a\u8b66\u901a\u77e5\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 group_interval \u53c2\u6570\u6765\u8fdb\u884c\u914d\u7f6e\uff0c\u5f53\u4e0a\u4e00\u4e2a\u544a\u8b66\u901a\u77e5\u53d1\u9001\u5230\u4e00\u4e2a group \u540e\uff0c\u6211\u4eec\u5728\u7b49\u5f85 group_interval \u65f6\u957f\u540e\uff0c\u7136\u540e\u518d\u5c06\u89e6\u53d1\u7684\u544a\u8b66\u4ee5\u53ca\u5df2\u89e3\u51b3\u7684\u544a\u8b66\u53d1\u9001\u7ed9 receiver \uff1a group_by: ['instance', 'job'] group_wait: 45s group_interval: 10m # \u901a\u5e38\u8bbe\u7f6e\u62105\u5206\u949f\u4ee5\u4e0a \u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u4e00\u4e2a repeat_interval \u53c2\u6570\uff0c\u8be5\u53c2\u6570\u4e3b\u8981\u662f\u7528\u4e8e\u914d\u7f6e\u544a\u8b66\u4fe1\u606f\u5df2\u7ecf\u53d1\u9001\u6210\u529f\u540e\uff0c\u518d\u6b21\u88ab\u89e6\u53d1\u53d1\u9001\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u4e00\u822c\u4e0d\u540c\u7c7b\u578b\u7684\u544a\u8b66\u4e1a\u52a1\u6539\u53c2\u6570\u914d\u7f6e\u4e0d\u592a\u4e00\u6837\uff0c \u5bf9\u4e8e\u6bd4\u8f83\u91cd\u8981\u7d27\u6025\u7684\u53ef\u4ee5\u5c06\u6539\u53c2\u6570\u8bbe\u7f6e\u7a0d\u5fae\u5c0f\u70b9\uff0c\u5bf9\u4e8e\u4e0d\u592a\u7d27\u6025\u7684\u53ef\u4ee5\u8bbe\u7f6e\u7a0d\u5fae\u5927\u70b9 \u3002 \u9762\u8fd9\u4e9b\u90fd\u662f\u5728 Prometheus \u6216\u8005 AlertManager \u4e2d\u914d\u7f6e\u7684\u4e00\u4e9b\u5168\u5c40\u7684\u53c2\u6570\uff0c\u5bf9\u4e8e\u5177\u4f53\u7684\u544a\u8b66\u89c4\u5219\u8fd8\u6709\u65f6\u95f4\u53ef\u4ee5\u914d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\u7684\u544a\u8b66\u89c4\u5219\uff1a groups: - name: test-node-mem rules: - alert: NodeMemoryUsage expr: (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes * 100 > 90 for: 1m labels: team: node annotations: summary: \"{{$labels.instance}}: High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 90% (current value is: {{ $value }}\" \u4e0a\u9762\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a test-node-mem \u7684\u62a5\u8b66\u89c4\u5219\u5206\u7ec4\uff0c\u4e00\u6761\u62a5\u8b66\u89c4\u5219\u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u90e8\u5206\u7ec4\u6210\uff1a alert \uff1a\u544a\u8b66\u89c4\u5219\u7684\u540d\u79f0 expr \uff1a\u662f\u7528\u4e8e\u8fdb\u884c\u62a5\u8b66\u89c4\u5219 PromQL \u67e5\u8be2\u8bed\u53e5 for \uff1a\u8bc4\u4f30\u7b49\u5f85\u65f6\u95f4\uff08 Pending Duration \uff09\uff0c\u7528\u4e8e\u8868\u793a\u53ea\u6709\u5f53\u89e6\u53d1\u6761\u4ef6\u6301\u7eed\u4e00\u6bb5\u65f6\u95f4\u540e\u624d\u53d1\u9001\u544a\u8b66\uff0c\u5728\u7b49\u5f85\u671f\u95f4\u65b0\u4ea7\u751f\u7684\u544a\u8b66\u72b6\u6001\u4e3apending labels \uff1a\u81ea\u5b9a\u4e49\u6807\u7b7e\uff0c\u5141\u8bb8\u7528\u6237\u6307\u5b9a\u989d\u5916\u7684\u6807\u7b7e\u5217\u8868\uff0c\u628a\u5b83\u4eec\u9644\u52a0\u5728\u544a\u8b66\u4e0a annotations \uff1a\u6307\u5b9a\u4e86\u53e6\u4e00\u7ec4\u6807\u7b7e\uff0c\u5b83\u4eec\u4e0d\u88ab\u5f53\u505a\u544a\u8b66\u5b9e\u4f8b\u7684\u8eab\u4efd\u6807\u8bc6\uff0c\u5b83\u4eec\u7ecf\u5e38\u7528\u4e8e\u5b58\u50a8\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f\uff0c\u7528\u4e8e\u62a5\u8b66\u4fe1\u606f\u7684\u5c55\u793a\u4e4b\u7c7b\u7684 \u5176\u4e2d\u7684 for \u5b57\u6bb5\u540c\u6837\u4f1a\u5f71\u54cd\u5230\u6211\u4eec\u7684\u544a\u8b66\u5230\u8fbe\u65f6\u95f4\uff0c\u8be5\u53c2\u6570\u7528\u4e8e\u8868\u793a\u53ea\u6709\u5f53\u89e6\u53d1\u6761\u4ef6\u6301\u7eed\u4e00\u6bb5\u65f6\u95f4\u540e\u624d\u53d1\u9001\u544a\u8b66\uff0c\u5728\u7b49\u5f85\u671f\u95f4\u65b0\u4ea7\u751f\u7684\u544a\u8b66\u72b6\u6001\u4e3a pending \uff0c\u8fd9\u4e2a\u53c2\u6570\u4e3b\u8981\u7528\u4e8e\u964d\u566a\uff0c\u5f88\u591a\u7c7b\u4f3c\u54cd\u5e94\u65f6\u95f4\u8fd9\u6837\u7684\u6307\u6807\u90fd\u662f\u6709\u6296\u52a8\u7684\uff0c\u901a\u8fc7\u6307\u5b9a Pending Duration \uff0c\u6211\u4eec\u53ef\u4ee5\u8fc7\u6ee4\u6389\u8fd9\u4e9b\u77ac\u65f6\u6296\u52a8\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u80fd\u591f\u628a\u6ce8\u610f\u529b\u653e\u5728\u771f\u6b63\u6709\u6301\u7eed\u5f71\u54cd\u7684\u95ee\u9898\u4e0a\u3002 \u6240\u4ee5\u6709\u7684\u60c5\u51b5\u4e0b\u8ba1\u7b97\u6211\u4eec\u7684\u76d1\u63a7\u56fe\u8868\u4e0a\u9762\u5df2\u7ecf\u6709\u90e8\u5206\u6307\u6807\u8fbe\u5230\u4e86\u544a\u8b66\u7684\u9608\u503c\u4e86\uff0c\u4f46\u662f\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u89e6\u53d1\u544a\u8b66\u89c4\u5219\uff0c\u6bd4\u5982\u6211\u4eec\u4e0a\u9762\u7684\u89c4\u5219\u4e2d\uff0c\u8bbe\u7f6e\u7684\u662f 1 \u5206\u949f\u7684 Pending Duration \uff0c\u5bf9\u4e8e\u4e0b\u56fe\u8fd9\u79cd\u60c5\u51b5\u5c31\u4e0d\u4f1a\u89e6\u53d1\u544a\u8b66\uff0c\u56e0\u4e3a\u6301\u7eed\u65f6\u95f4\u592a\u77ed\uff0c\u6ca1\u6709\u8fbe\u5230\u4e00\u5206\u949f\uff1a \u5982\u679c\u544a\u8b66\u89c4\u5219\u8d85\u8fc7\u9608\u503c\u7684\u6301\u7eed\u65f6\u95f4\u8d85\u8fc7\u4e86 Pending Duration \u90a3\u4e48\u5c31\u4f1a\u89e6\u53d1\u544a\u8b66\u4e86\uff0c\u544a\u8b66\u4ea7\u751f\u540e\uff0c\u8fd8\u8981\u7ecf\u8fc7 Alertmanager \u7684\u5206\u7ec4\u3001 \u6291\u5236\u5904\u7406\u3001\u9759\u9ed8\u5904\u7406\u3001\u53bb\u91cd\u5904\u7406\u548c\u964d\u566a\u5904\u7406\u6700\u540e\u518d\u53d1\u9001\u7ed9\u63a5\u6536\u8005 \u3002 \u6240\u4ee5\u4ece\u4e00\u6761\u544a\u8b66\u89c4\u5219\u88ab\u8bc4\u4f30\u5230\u89e6\u53d1\u544a\u8b66\u518d\u5230\u53d1\u9001\u7ed9\u63a5\u6536\u65b9\uff0c\u4e2d\u95f4\u4f1a\u6709\u4e00\u7cfb\u5217\u7684\u5404\u79cd\u56e0\u7d20\u8fdb\u884c\u5e72\u9884\uff0c\u6240\u4ee5\u6709\u65f6\u5019\u5728\u76d1\u63a7\u56fe\u8868\u4e0a\u770b\u5230\u5df2\u7ecf\u8fbe\u5230\u4e86\u9608\u503c\u800c\u6700\u7ec8\u6ca1\u6709\u6536\u5230\u76d1\u63a7\u62a5\u8b66\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002","title":"\u7b2c\u5341\u4e09\u8282 AlertManager\u4f55\u65f6\u62a5\u8b66"},{"location":"chap3/2prometheus_AlertManager/","text":"\u7b2c\u4e8c\u8282 Prometheus\u62a5\u8b66 && AlertManager\u5b9e\u6218\uff082018\uff09 1 AlertManager \u7b80\u4ecb Prometheus\u5c06 \u6570\u636e\u91c7\u96c6 \u548c \u62a5\u8b66 \u5206\u6210\u4e86\u4e24\u4e2a\u6a21\u5757\u3002 \u62a5\u8b66\u89c4\u5219\u914d\u7f6e\u5728 Prometheus Servers \u4e0a\uff0c\u7136\u540e\u53d1\u9001\u62a5\u8b66\u4fe1\u606f\u5230 AlertManger \uff0c\u7136\u540e\u6211\u4eec\u7684 AlertManager \u5c31\u6765\u7ba1\u7406\u8fd9\u4e9b\u62a5\u8b66\u4fe1\u606f\uff0c\u5305\u62ec silencing \u3001 inhibition \uff0c\u805a\u5408\u62a5\u8b66\u4fe1\u606f\u8fc7\u540e\u901a\u8fc7 email \u3001 PagerDuty \u3001 HipChat \u3001 Slack \u7b49\u65b9\u5f0f\u53d1\u9001\u6d88\u606f\u63d0\u793a\u3002 \u8ba9 AlertManager \u63d0\u4f9b\u670d\u52a1\u603b\u7684\u6765\u8bf4\u5c31\u4e0b\u97623\u6b65\uff1a \u5b89\u88c5\u548c\u914d\u7f6e AlertManger \u914d\u7f6e Prometheus \u6765\u548c AlertManager \u901a\u4fe1 \u5728 Prometheus \u4e2d\u521b\u5efa\u62a5\u8b66\u89c4\u5219 2 \u5b89\u88c5\u548c\u914d\u7f6eAlertManager \u4ece\u5b98\u65b9\u6587\u6863 https://prometheus.io/docs/alerting/configuration/ \u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0b\u8f7d alertmanager \u4e8c\u8fdb\u5236\u6587\u4ef6\u8fc7\u540e\uff0c\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u5c31\u53ef\u8fd0\u884c $ ./alertmanager -config.file=simple.yml \u53ef\u4ee5\u901a\u8fc7 -config.file \u6765\u6307\u5b9a\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u8fd9\u91cc\u5728 kubernetes \u5e73\u53f0\u4e0a\u9762\u6765\u8fd0\u884c\u6211\u4eec\u7684 AlertManager \uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7528 docker \u955c\u50cf\u7684\u65b9\u5f0f\u6765\u5b89\u88c5. \u4f7f\u7528\u7684\u955c\u50cf\u662f\uff1a quay.io/prometheus/alertmanager:v0.12.0 \u5982\u679c\u4f60\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\u4e0d\u80fd\u62c9\u53d6\u8be5\u955c\u50cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u53bb\u4e0b\u8f7d AlertManager \u7684 \u6e90\u4ee3\u7801 \uff0c\u7136\u540e\u81ea\u5df1\u6784\u5efa\u6253\u5305\u4e00\u4e2a docker \u955c\u50cf\u4e5f\u662f\u4e00\u6837\u7684\u3002 \u901a\u8fc7 ConfigMap \u6765\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\uff0c\u5982\u4e0b: kind: ConfigMap apiVersion: v1 metadata: name: alertmanager namespace: kube-ops data: config.yml: |- global: resolve_timeout: 5m route: receiver: webhook group_wait: 30s group_interval: 5m repeat_interval: 4h group_by: [alertname] routes: - receiver: webhook group_wait: 10s match: team: node receivers: - name: webhook webhook_configs: - url: 'http://apollo/hooks/dingtalk/' send_resolved: true - url: 'http://apollo/hooks/prome/' send_resolved: true \u6211\u4eec\u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e24\u4e2a webhook \uff0c\u5176\u4e2d\u4e00\u4e2a\u662f \u9489\u9489 \uff0c\u53e6\u5916\u4e00\u4e2a\u662f email \u3002 3 \u914d\u7f6ePrometheus\u6765\u548cAlertManager\u901a\u4fe1 \u5728\u6211\u4eec\u4e4b\u524d\u7684 Prometheus \u7684 ConfigMap \u4e2d\u589e\u52a0 AlertManager \u7684\u914d\u7f6e\uff1a alerting: alertmanagers: - static_configs: - targets: [\"localhost:9093\"] \u7531\u4e8e\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u5c06Prometheus\u548cAlertManager\u90e8\u7f72\u5728\u540c\u4e00\u4e2aPOD\u4e2d\uff0c\u800c AlertManager \u7684\u9ed8\u8ba4\u7aef\u53e3\u662f 9093 \uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528 localhost:9093 \u5c31\u53ef\u4ee5\u4e92\u76f8\u901a\u4fe1\u4e86\u3002 4 \u5728 Prometheus \u4e2d\u521b\u5efa\u62a5\u8b66\u89c4\u5219 \u540c\u6837\u7684\u6211\u4eec\u8fd8\u9700\u8981\u6dfb\u52a0\u62a5\u8b66\u89c4\u5219\uff1a rule_files: - /etc/prometheus/rules.yml \u5176\u4e2d rule_files \u5c31\u662f\u7528\u6765\u6307\u5b9a\u62a5\u8b66\u89c4\u5219\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06 rules.yml \u7528 ConfigMap \u7684\u5f62\u5f0f\u6302\u8f7d\u5230 /etc/prometheus \u76ee\u5f55\u4e0b\u9762\u5373\u53ef: rules.yml: | groups: - name: test-rule rules: - alert: NodeFilesystemUsage expr: (node_filesystem_size{device=\"rootfs\"} - node_filesystem_free{device=\"rootfs\"}) / node_filesystem_size{device=\"rootfs\"} * 100 > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High Filesystem usage detected\" description: \"{{$labels.instance}}: Filesystem usage is above 80% (current value is: {{ $value }}\" - alert: NodeMemoryUsage expr: (node_memory_MemTotal - (node_memory_MemFree+node_memory_Buffers+node_memory_Cached )) / node_memory_MemTotal * 100 > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 80% (current value is: {{ $value }}\" - alert: NodeCPUUsage expr: (100 - (avg by (instance) (irate(node_cpu{job=\"kubernetes-node-exporter\",mode=\"idle\"}[5m])) * 100)) > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High CPU usage detected\" description: \"{{$labels.instance}}: CPU usage is above 80% (current value is: {{ $value }}\" \u6211\u4eec\u8fd9\u91cc\u6dfb\u52a0\u4e86 3 \u6761\u6d4b\u8bd5\u7684\u62a5\u8b66\u89c4\u5219\uff0c\u5206\u522b\u662f\u8282\u70b9\u7684 \u6587\u4ef6\u7cfb\u7edf \u3001 \u8282\u70b9\u5185\u5b58 \u548c CPU \u7684\u4f7f\u7528\u91cf\uff0c\u5982\u679c\u5927\u4e8e\u4e8680%\u7684\u8bdd\u5c31\u89e6\u53d1 label \u4e3a team=node \u7684 receiver (\u4e0a\u9762 alertmanager \u914d\u7f6e\u6587\u4ef6\u4e2d)\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u914d\u7f6e\u5c31\u4f1a\u5339\u914d webhook \u8fd9\u4e2a receiver \uff0c\u7136\u540e\u4f1a\u5c06\u62a5\u8b66\u4fe1\u606f POST \u5230\u6211\u4eec\u63d0\u4f9b\u7684\u4e24\u4e2a HOOK \u63a5\u53e3\u4e2d \u4e00\u4e2a\u62a5\u8b66\u4fe1\u606f\u5728\u751f\u547d\u5468\u671f\u5185\u6709\u4e0b\u97623\u4e2d\u72b6\u6001\uff1a inactive : \u8868\u793a\u5f53\u524d\u62a5\u8b66\u4fe1\u606f\u65e2\u4e0d\u662f firing \u72b6\u6001\u4e5f\u4e0d\u662f pending \u72b6\u6001 pending : \u8868\u793a\u5728\u8bbe\u7f6e\u7684\u9608\u503c\u65f6\u95f4\u8303\u56f4\u5185\u88ab\u6fc0\u6d3b\u4e86 firing : \u8868\u793a\u8d85\u8fc7\u8bbe\u7f6e\u7684\u9608\u503c\u65f6\u95f4\u88ab\u6fc0\u6d3b\u4e86 \u6211\u4eec\u76f4\u63a5\u70b9\u51fb\u4e0a\u9762\u7684 expr \u4f1a\u76f4\u63a5\u8df3\u8f6c\u5230 graph \u9875\u9762\u67e5\u8be2\uff0c\u6211\u4eec\u5728\u5236\u5b9a\u62a5\u8b66\u89c4\u5219\u7684\u65f6\u5019\u540c\u6837\u53ef\u4ee5\u5148\u5728 Prometheus \u91cc\u9762\u5148\u6d4b\u8bd5\u6211\u4eec\u7684\u8868\u8fbe\u5f0f: alert-info 5 \u5168\u90e8\u914d\u7f6e \u6574\u4f53\u7684 ConfigMap \u914d\u7f6e\u6587\u4ef6\u5982\u4e0b cm.yaml : apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | global: scrape_interval: 30s scrape_timeout: 30s rule_files: - /etc/prometheus/rules.yml alerting: alertmanagers: - static_configs: - targets: [\"localhost:9093\"] scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'kubernetes-apiservers' kubernetes_sd_configs: - role: endpoints scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token relabel_configs: - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name] action: keep regex: default;kubernetes;https - job_name: 'kubernetes-nodes' scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - target_label: __address__ replacement: kubernetes.default.svc:443 - source_labels: [__meta_kubernetes_node_name] regex: (.+) target_label: __metrics_path__ replacement: /api/v1/nodes/${1}/proxy/metrics - job_name: 'kubernetes-cadvisor' scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - target_label: __address__ replacement: kubernetes.default.svc:443 - source_labels: [__meta_kubernetes_node_name] regex: (.+) target_label: __metrics_path__ replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor - job_name: 'kubernetes-node-exporter' scheme: http tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - source_labels: [__meta_kubernetes_role] action: replace target_label: kubernetes_role - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:31672' target_label: __address__ - job_name: 'kubernetes-service-endpoints' kubernetes_sd_configs: - role: endpoints relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape] action: keep regex: true - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme] action: replace target_label: __scheme__ regex: (https?) - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path] action: replace target_label: __metrics_path__ regex: (.+) - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port] action: replace target_label: __address__ regex: ([^:]+)(?::\\d+)?;(\\d+) replacement: $1:$2 - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: [__meta_kubernetes_namespace] action: replace target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_service_name] action: replace target_label: kubernetes_name - job_name: 'kubernetes-services' metrics_path: /probe params: module: [http_2xx] kubernetes_sd_configs: - role: service relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe] action: keep regex: true - source_labels: [__address__] target_label: __param_target - target_label: __address__ replacement: blackbox-exporter.example.com:9115 - source_labels: [__param_target] target_label: instance - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: [__meta_kubernetes_namespace] target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_service_name] target_label: kubernetes_name rules.yml: | groups: - name: test-rule rules: - alert: NodeFilesystemUsage expr: (node_filesystem_size{device=\"rootfs\"} - node_filesystem_free{device=\"rootfs\"}) / node_filesystem_size{device=\"rootfs\"} * 100 > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High Filesystem usage detected\" description: \"{{$labels.instance}}: Filesystem usage is above 80% (current value is: {{ $value }}\" - alert: NodeMemoryUsage expr: (node_memory_MemTotal - (node_memory_MemFree+node_memory_Buffers+node_memory_Cached )) / node_memory_MemTotal * 100 > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 80% (current value is: {{ $value }}\" - alert: NodeCPUUsage expr: (100 - (avg by (instance) (irate(node_cpu{job=\"kubernetes-node-exporter\",mode=\"idle\"}[5m])) * 100)) > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High CPU usage detected\" description: \"{{$labels.instance}}: CPU usage is above 80% (current value is: {{ $value }}\" --- kind: ConfigMap apiVersion: v1 metadata: name: alertmanager namespace: kube-ops data: config.yml: |- global: resolve_timeout: 5m route: receiver: webhook group_wait: 30s group_interval: 5m repeat_interval: 4h group_by: [alertname] routes: - receiver: webhook group_wait: 10s match: team: node receivers: - name: webhook webhook_configs: - url: 'http://apollo/hooks/dingtalk/' send_resolved: true - url: 'http://apollo/hooks/prome/' send_resolved: true \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a $ kubectl apply -f cm.yaml \u7136\u540e\u90e8\u7f72\u7684\u6587\u4ef6 deploy.yaml \u5982\u4e0b\uff1a apiVersion: extensions/v1beta1 kind: Deployment metadata: labels: k8s-app: prometheus name: prometheus namespace: kube-ops spec: replicas: 1 template: metadata: labels: k8s-app: prometheus spec: serviceAccountName: prometheus containers: - image: prom/prometheus:v2.0.0-rc.3 name: prometheus command: - \"/bin/prometheus\" args: - \"--config.file=/etc/prometheus/prometheus.yml\" - \"--storage.tsdb.path=/prometheus\" - \"--storage.tsdb.retention=24h\" ports: - containerPort: 9090 protocol: TCP name: http volumeMounts: - mountPath: \"/prometheus\" name: data - mountPath: \"/etc/prometheus\" name: config-volume resources: requests: cpu: 100m memory: 100Mi limits: cpu: 200m memory: 1Gi - image: quay.io/prometheus/alertmanager:v0.12.0 name: alertmanager args: - \"-config.file=/etc/alertmanager/config.yml\" - \"-storage.path=/alertmanager\" ports: - containerPort: 9093 protocol: TCP name: http volumeMounts: - name: alertmanager-config-volume mountPath: /etc/alertmanager resources: requests: cpu: 50m memory: 50Mi limits: cpu: 200m memory: 200Mi volumes: - name: data emptyDir: {} - configMap: name: prometheus-config name: config-volume - name: alertmanager-config-volume configMap: name: alertmanager \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a $ kubectl apply -f deploy.yaml \u6ce8\u610f\uff1a\u672c\u6587\u7ae0\u7684\u5b9e\u73b0\u90fd\u662f\u9488\u5bf9Prometheus2.x\u7248\u672c\uff0c1.x \u7248\u672c\u914d\u7f6e\u4f1a\u6709\u6240\u4e0d\u540c Prometheus: understanding the delays on alerting","title":"\u7b2c\u4e8c\u8282 Prometheus\u62a5\u8b66 && AlertManager\u5b9e\u6218\uff082018\uff09"},{"location":"chap3/2prometheus_AlertManager/#prometheus-alertmanager2018","text":"","title":"\u7b2c\u4e8c\u8282 Prometheus\u62a5\u8b66 &amp;&amp; AlertManager\u5b9e\u6218\uff082018\uff09"},{"location":"chap3/2prometheus_AlertManager/#1-alertmanager","text":"Prometheus\u5c06 \u6570\u636e\u91c7\u96c6 \u548c \u62a5\u8b66 \u5206\u6210\u4e86\u4e24\u4e2a\u6a21\u5757\u3002 \u62a5\u8b66\u89c4\u5219\u914d\u7f6e\u5728 Prometheus Servers \u4e0a\uff0c\u7136\u540e\u53d1\u9001\u62a5\u8b66\u4fe1\u606f\u5230 AlertManger \uff0c\u7136\u540e\u6211\u4eec\u7684 AlertManager \u5c31\u6765\u7ba1\u7406\u8fd9\u4e9b\u62a5\u8b66\u4fe1\u606f\uff0c\u5305\u62ec silencing \u3001 inhibition \uff0c\u805a\u5408\u62a5\u8b66\u4fe1\u606f\u8fc7\u540e\u901a\u8fc7 email \u3001 PagerDuty \u3001 HipChat \u3001 Slack \u7b49\u65b9\u5f0f\u53d1\u9001\u6d88\u606f\u63d0\u793a\u3002 \u8ba9 AlertManager \u63d0\u4f9b\u670d\u52a1\u603b\u7684\u6765\u8bf4\u5c31\u4e0b\u97623\u6b65\uff1a \u5b89\u88c5\u548c\u914d\u7f6e AlertManger \u914d\u7f6e Prometheus \u6765\u548c AlertManager \u901a\u4fe1 \u5728 Prometheus \u4e2d\u521b\u5efa\u62a5\u8b66\u89c4\u5219","title":"1 AlertManager \u7b80\u4ecb"},{"location":"chap3/2prometheus_AlertManager/#2-alertmanager","text":"\u4ece\u5b98\u65b9\u6587\u6863 https://prometheus.io/docs/alerting/configuration/ \u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0b\u8f7d alertmanager \u4e8c\u8fdb\u5236\u6587\u4ef6\u8fc7\u540e\uff0c\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u5c31\u53ef\u8fd0\u884c $ ./alertmanager -config.file=simple.yml \u53ef\u4ee5\u901a\u8fc7 -config.file \u6765\u6307\u5b9a\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u8fd9\u91cc\u5728 kubernetes \u5e73\u53f0\u4e0a\u9762\u6765\u8fd0\u884c\u6211\u4eec\u7684 AlertManager \uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7528 docker \u955c\u50cf\u7684\u65b9\u5f0f\u6765\u5b89\u88c5. \u4f7f\u7528\u7684\u955c\u50cf\u662f\uff1a quay.io/prometheus/alertmanager:v0.12.0 \u5982\u679c\u4f60\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\u4e0d\u80fd\u62c9\u53d6\u8be5\u955c\u50cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u53bb\u4e0b\u8f7d AlertManager \u7684 \u6e90\u4ee3\u7801 \uff0c\u7136\u540e\u81ea\u5df1\u6784\u5efa\u6253\u5305\u4e00\u4e2a docker \u955c\u50cf\u4e5f\u662f\u4e00\u6837\u7684\u3002 \u901a\u8fc7 ConfigMap \u6765\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\uff0c\u5982\u4e0b: kind: ConfigMap apiVersion: v1 metadata: name: alertmanager namespace: kube-ops data: config.yml: |- global: resolve_timeout: 5m route: receiver: webhook group_wait: 30s group_interval: 5m repeat_interval: 4h group_by: [alertname] routes: - receiver: webhook group_wait: 10s match: team: node receivers: - name: webhook webhook_configs: - url: 'http://apollo/hooks/dingtalk/' send_resolved: true - url: 'http://apollo/hooks/prome/' send_resolved: true \u6211\u4eec\u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e24\u4e2a webhook \uff0c\u5176\u4e2d\u4e00\u4e2a\u662f \u9489\u9489 \uff0c\u53e6\u5916\u4e00\u4e2a\u662f email \u3002","title":"2 \u5b89\u88c5\u548c\u914d\u7f6eAlertManager"},{"location":"chap3/2prometheus_AlertManager/#3-prometheusalertmanager","text":"\u5728\u6211\u4eec\u4e4b\u524d\u7684 Prometheus \u7684 ConfigMap \u4e2d\u589e\u52a0 AlertManager \u7684\u914d\u7f6e\uff1a alerting: alertmanagers: - static_configs: - targets: [\"localhost:9093\"] \u7531\u4e8e\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u5c06Prometheus\u548cAlertManager\u90e8\u7f72\u5728\u540c\u4e00\u4e2aPOD\u4e2d\uff0c\u800c AlertManager \u7684\u9ed8\u8ba4\u7aef\u53e3\u662f 9093 \uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528 localhost:9093 \u5c31\u53ef\u4ee5\u4e92\u76f8\u901a\u4fe1\u4e86\u3002","title":"3 \u914d\u7f6ePrometheus\u6765\u548cAlertManager\u901a\u4fe1"},{"location":"chap3/2prometheus_AlertManager/#4-prometheus","text":"\u540c\u6837\u7684\u6211\u4eec\u8fd8\u9700\u8981\u6dfb\u52a0\u62a5\u8b66\u89c4\u5219\uff1a rule_files: - /etc/prometheus/rules.yml \u5176\u4e2d rule_files \u5c31\u662f\u7528\u6765\u6307\u5b9a\u62a5\u8b66\u89c4\u5219\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06 rules.yml \u7528 ConfigMap \u7684\u5f62\u5f0f\u6302\u8f7d\u5230 /etc/prometheus \u76ee\u5f55\u4e0b\u9762\u5373\u53ef: rules.yml: | groups: - name: test-rule rules: - alert: NodeFilesystemUsage expr: (node_filesystem_size{device=\"rootfs\"} - node_filesystem_free{device=\"rootfs\"}) / node_filesystem_size{device=\"rootfs\"} * 100 > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High Filesystem usage detected\" description: \"{{$labels.instance}}: Filesystem usage is above 80% (current value is: {{ $value }}\" - alert: NodeMemoryUsage expr: (node_memory_MemTotal - (node_memory_MemFree+node_memory_Buffers+node_memory_Cached )) / node_memory_MemTotal * 100 > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 80% (current value is: {{ $value }}\" - alert: NodeCPUUsage expr: (100 - (avg by (instance) (irate(node_cpu{job=\"kubernetes-node-exporter\",mode=\"idle\"}[5m])) * 100)) > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High CPU usage detected\" description: \"{{$labels.instance}}: CPU usage is above 80% (current value is: {{ $value }}\" \u6211\u4eec\u8fd9\u91cc\u6dfb\u52a0\u4e86 3 \u6761\u6d4b\u8bd5\u7684\u62a5\u8b66\u89c4\u5219\uff0c\u5206\u522b\u662f\u8282\u70b9\u7684 \u6587\u4ef6\u7cfb\u7edf \u3001 \u8282\u70b9\u5185\u5b58 \u548c CPU \u7684\u4f7f\u7528\u91cf\uff0c\u5982\u679c\u5927\u4e8e\u4e8680%\u7684\u8bdd\u5c31\u89e6\u53d1 label \u4e3a team=node \u7684 receiver (\u4e0a\u9762 alertmanager \u914d\u7f6e\u6587\u4ef6\u4e2d)\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u914d\u7f6e\u5c31\u4f1a\u5339\u914d webhook \u8fd9\u4e2a receiver \uff0c\u7136\u540e\u4f1a\u5c06\u62a5\u8b66\u4fe1\u606f POST \u5230\u6211\u4eec\u63d0\u4f9b\u7684\u4e24\u4e2a HOOK \u63a5\u53e3\u4e2d \u4e00\u4e2a\u62a5\u8b66\u4fe1\u606f\u5728\u751f\u547d\u5468\u671f\u5185\u6709\u4e0b\u97623\u4e2d\u72b6\u6001\uff1a inactive : \u8868\u793a\u5f53\u524d\u62a5\u8b66\u4fe1\u606f\u65e2\u4e0d\u662f firing \u72b6\u6001\u4e5f\u4e0d\u662f pending \u72b6\u6001 pending : \u8868\u793a\u5728\u8bbe\u7f6e\u7684\u9608\u503c\u65f6\u95f4\u8303\u56f4\u5185\u88ab\u6fc0\u6d3b\u4e86 firing : \u8868\u793a\u8d85\u8fc7\u8bbe\u7f6e\u7684\u9608\u503c\u65f6\u95f4\u88ab\u6fc0\u6d3b\u4e86 \u6211\u4eec\u76f4\u63a5\u70b9\u51fb\u4e0a\u9762\u7684 expr \u4f1a\u76f4\u63a5\u8df3\u8f6c\u5230 graph \u9875\u9762\u67e5\u8be2\uff0c\u6211\u4eec\u5728\u5236\u5b9a\u62a5\u8b66\u89c4\u5219\u7684\u65f6\u5019\u540c\u6837\u53ef\u4ee5\u5148\u5728 Prometheus \u91cc\u9762\u5148\u6d4b\u8bd5\u6211\u4eec\u7684\u8868\u8fbe\u5f0f: alert-info","title":"4 \u5728 Prometheus \u4e2d\u521b\u5efa\u62a5\u8b66\u89c4\u5219"},{"location":"chap3/2prometheus_AlertManager/#5","text":"\u6574\u4f53\u7684 ConfigMap \u914d\u7f6e\u6587\u4ef6\u5982\u4e0b cm.yaml : apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | global: scrape_interval: 30s scrape_timeout: 30s rule_files: - /etc/prometheus/rules.yml alerting: alertmanagers: - static_configs: - targets: [\"localhost:9093\"] scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'kubernetes-apiservers' kubernetes_sd_configs: - role: endpoints scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token relabel_configs: - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name] action: keep regex: default;kubernetes;https - job_name: 'kubernetes-nodes' scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - target_label: __address__ replacement: kubernetes.default.svc:443 - source_labels: [__meta_kubernetes_node_name] regex: (.+) target_label: __metrics_path__ replacement: /api/v1/nodes/${1}/proxy/metrics - job_name: 'kubernetes-cadvisor' scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - target_label: __address__ replacement: kubernetes.default.svc:443 - source_labels: [__meta_kubernetes_node_name] regex: (.+) target_label: __metrics_path__ replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor - job_name: 'kubernetes-node-exporter' scheme: http tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - source_labels: [__meta_kubernetes_role] action: replace target_label: kubernetes_role - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:31672' target_label: __address__ - job_name: 'kubernetes-service-endpoints' kubernetes_sd_configs: - role: endpoints relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape] action: keep regex: true - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme] action: replace target_label: __scheme__ regex: (https?) - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path] action: replace target_label: __metrics_path__ regex: (.+) - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port] action: replace target_label: __address__ regex: ([^:]+)(?::\\d+)?;(\\d+) replacement: $1:$2 - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: [__meta_kubernetes_namespace] action: replace target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_service_name] action: replace target_label: kubernetes_name - job_name: 'kubernetes-services' metrics_path: /probe params: module: [http_2xx] kubernetes_sd_configs: - role: service relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe] action: keep regex: true - source_labels: [__address__] target_label: __param_target - target_label: __address__ replacement: blackbox-exporter.example.com:9115 - source_labels: [__param_target] target_label: instance - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: [__meta_kubernetes_namespace] target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_service_name] target_label: kubernetes_name rules.yml: | groups: - name: test-rule rules: - alert: NodeFilesystemUsage expr: (node_filesystem_size{device=\"rootfs\"} - node_filesystem_free{device=\"rootfs\"}) / node_filesystem_size{device=\"rootfs\"} * 100 > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High Filesystem usage detected\" description: \"{{$labels.instance}}: Filesystem usage is above 80% (current value is: {{ $value }}\" - alert: NodeMemoryUsage expr: (node_memory_MemTotal - (node_memory_MemFree+node_memory_Buffers+node_memory_Cached )) / node_memory_MemTotal * 100 > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High Memory usage detected\" description: \"{{$labels.instance}}: Memory usage is above 80% (current value is: {{ $value }}\" - alert: NodeCPUUsage expr: (100 - (avg by (instance) (irate(node_cpu{job=\"kubernetes-node-exporter\",mode=\"idle\"}[5m])) * 100)) > 80 for: 2m labels: team: node annotations: summary: \"{{$labels.instance}}: High CPU usage detected\" description: \"{{$labels.instance}}: CPU usage is above 80% (current value is: {{ $value }}\" --- kind: ConfigMap apiVersion: v1 metadata: name: alertmanager namespace: kube-ops data: config.yml: |- global: resolve_timeout: 5m route: receiver: webhook group_wait: 30s group_interval: 5m repeat_interval: 4h group_by: [alertname] routes: - receiver: webhook group_wait: 10s match: team: node receivers: - name: webhook webhook_configs: - url: 'http://apollo/hooks/dingtalk/' send_resolved: true - url: 'http://apollo/hooks/prome/' send_resolved: true \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a $ kubectl apply -f cm.yaml \u7136\u540e\u90e8\u7f72\u7684\u6587\u4ef6 deploy.yaml \u5982\u4e0b\uff1a apiVersion: extensions/v1beta1 kind: Deployment metadata: labels: k8s-app: prometheus name: prometheus namespace: kube-ops spec: replicas: 1 template: metadata: labels: k8s-app: prometheus spec: serviceAccountName: prometheus containers: - image: prom/prometheus:v2.0.0-rc.3 name: prometheus command: - \"/bin/prometheus\" args: - \"--config.file=/etc/prometheus/prometheus.yml\" - \"--storage.tsdb.path=/prometheus\" - \"--storage.tsdb.retention=24h\" ports: - containerPort: 9090 protocol: TCP name: http volumeMounts: - mountPath: \"/prometheus\" name: data - mountPath: \"/etc/prometheus\" name: config-volume resources: requests: cpu: 100m memory: 100Mi limits: cpu: 200m memory: 1Gi - image: quay.io/prometheus/alertmanager:v0.12.0 name: alertmanager args: - \"-config.file=/etc/alertmanager/config.yml\" - \"-storage.path=/alertmanager\" ports: - containerPort: 9093 protocol: TCP name: http volumeMounts: - name: alertmanager-config-volume mountPath: /etc/alertmanager resources: requests: cpu: 50m memory: 50Mi limits: cpu: 200m memory: 200Mi volumes: - name: data emptyDir: {} - configMap: name: prometheus-config name: config-volume - name: alertmanager-config-volume configMap: name: alertmanager \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a $ kubectl apply -f deploy.yaml \u6ce8\u610f\uff1a\u672c\u6587\u7ae0\u7684\u5b9e\u73b0\u90fd\u662f\u9488\u5bf9Prometheus2.x\u7248\u672c\uff0c1.x \u7248\u672c\u914d\u7f6e\u4f1a\u6709\u6240\u4e0d\u540c Prometheus: understanding the delays on alerting","title":"5 \u5168\u90e8\u914d\u7f6e"},{"location":"chap3/3changes_on_Grafana/","text":"\u7b2c\u4e09\u8282 Grafana \u663e\u793a\u53c2\u6570\u8bbe\u7f6e(2018) \u6839\u636e kubernetes json \u6587\u4ef6\u7684\u53c2\u6570\u8bbe\u7f6e\uff0c \u663e\u793a\u5982\u4e0b: \u9700\u8981\u91cd\u65b0\u8bbe\u7f6e Grafana \u4e2d\u7684 Cluster memory usage , Cluster CPU usage , Cluster filesystem usage Option 1 \u5728 json \u6587\u4ef6\u4e2d\u4fee\u6539 kubernetes-pod-monitoring_rev1.json Option 2 \u5728\u754c\u9762\u4e2d\u76f4\u63a5\u4fee\u6539 Cluster memory usage (sum(node_memory_MemTotal_bytes) - sum(node_memory_MemFree_bytes+node_memory_Buffers_bytes+node_memory_Cached_bytes) ) / sum(node_memory_MemTotal_bytes) * 100 Cluster CPU usage sum(sum by (name)( rate(container_cpu_usage_seconds_total{image!=\"\"}[1m] ) )) / count(node_cpu_seconds_total{mode=\"system\"}) * 100 Cluster filesystem usage (sum(node_filesystem_size_bytes{device=\"tmpfs\"}) - sum(node_filesystem_free_bytes{device=\"tmpfs\"}) ) / sum(node_filesystem_size_bytes{device=\"tmpfs\"}) * 100 \u663e\u793a\u5982\u4e0b: \u5982\u4f55\u9a8c\u8bc1\u8fd9\u4e9b\u51fd\u6570\u7684\u6b63\u786e\u6027\uff0c Prometheus \u63d0\u4f9b\u4e86API\u7684\u65b9\u5f0f\u8fdb\u884c\u6570\u636e\u67e5\u8be2\uff0c\u540c\u6837\u53ef\u4ee5\u4f7f\u7528query\u8bed\u8a00\u8fdb\u884c\u590d\u6742\u7684\u67e5\u8be2\u4efb\u52a1\uff0c\u5728\u4e0a\u9762\u7684WEB\u754c\u9762\u4e0a\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u67e5\u8be2\u548c\u56fe\u5f62\u5316\u7684\u5c55\u793a\u529f\u80fd\u3002\uff1a \u5982\u4f55\u67e5\u8be2\u67d0\u4e9b\u51fd\u6570\u7684\u5199\u6cd5\uff0c \u53ef\u4ee5\u518d node \u4e0a\u7684 node-exporter \u7aef\u53e3\u8bbf\u95ee, \u4f8b\u5982 http://192.168.1.138:31672/metrics","title":"\u7b2c\u4e09\u8282 Grafana \u663e\u793a\u53c2\u6570\u8bbe\u7f6e(2018)"},{"location":"chap3/3changes_on_Grafana/#grafana-2018","text":"\u6839\u636e kubernetes json \u6587\u4ef6\u7684\u53c2\u6570\u8bbe\u7f6e\uff0c \u663e\u793a\u5982\u4e0b: \u9700\u8981\u91cd\u65b0\u8bbe\u7f6e Grafana \u4e2d\u7684 Cluster memory usage , Cluster CPU usage , Cluster filesystem usage","title":"\u7b2c\u4e09\u8282 Grafana \u663e\u793a\u53c2\u6570\u8bbe\u7f6e(2018)"},{"location":"chap3/3changes_on_Grafana/#option-1","text":"\u5728 json \u6587\u4ef6\u4e2d\u4fee\u6539 kubernetes-pod-monitoring_rev1.json","title":"Option 1"},{"location":"chap3/3changes_on_Grafana/#option-2","text":"\u5728\u754c\u9762\u4e2d\u76f4\u63a5\u4fee\u6539","title":"Option 2"},{"location":"chap3/3changes_on_Grafana/#cluster-memory-usage","text":"(sum(node_memory_MemTotal_bytes) - sum(node_memory_MemFree_bytes+node_memory_Buffers_bytes+node_memory_Cached_bytes) ) / sum(node_memory_MemTotal_bytes) * 100","title":"Cluster memory usage"},{"location":"chap3/3changes_on_Grafana/#cluster-cpu-usage","text":"sum(sum by (name)( rate(container_cpu_usage_seconds_total{image!=\"\"}[1m] ) )) / count(node_cpu_seconds_total{mode=\"system\"}) * 100","title":"Cluster CPU usage"},{"location":"chap3/3changes_on_Grafana/#cluster-filesystem-usage","text":"(sum(node_filesystem_size_bytes{device=\"tmpfs\"}) - sum(node_filesystem_free_bytes{device=\"tmpfs\"}) ) / sum(node_filesystem_size_bytes{device=\"tmpfs\"}) * 100","title":"Cluster filesystem usage"},{"location":"chap3/3changes_on_Grafana/#_1","text":"\u5982\u4f55\u9a8c\u8bc1\u8fd9\u4e9b\u51fd\u6570\u7684\u6b63\u786e\u6027\uff0c Prometheus \u63d0\u4f9b\u4e86API\u7684\u65b9\u5f0f\u8fdb\u884c\u6570\u636e\u67e5\u8be2\uff0c\u540c\u6837\u53ef\u4ee5\u4f7f\u7528query\u8bed\u8a00\u8fdb\u884c\u590d\u6742\u7684\u67e5\u8be2\u4efb\u52a1\uff0c\u5728\u4e0a\u9762\u7684WEB\u754c\u9762\u4e0a\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u67e5\u8be2\u548c\u56fe\u5f62\u5316\u7684\u5c55\u793a\u529f\u80fd\u3002\uff1a \u5982\u4f55\u67e5\u8be2\u67d0\u4e9b\u51fd\u6570\u7684\u5199\u6cd5\uff0c \u53ef\u4ee5\u518d node \u4e0a\u7684 node-exporter \u7aef\u53e3\u8bbf\u95ee, \u4f8b\u5982 http://192.168.1.138:31672/metrics","title":"\u663e\u793a\u5982\u4e0b:"},{"location":"chap3/41Prometheus_Monitor_OutCluster/","text":"\u7b2c\u5341\u56db\u8282 Prometheus\u76d1\u63a7\u5916\u90e8Kubernetes\u96c6\u7fa4 \u524d\u9762\u6211\u4eec\u7684\u6587\u7ae0\u4e2d\u90fd\u662f\u5c06 Prometheus \u5b89\u88c5\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u6765\u91c7\u96c6\u6570\u636e\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u73af\u5883\u4e2d\u5f88\u591a\u4f01\u4e1a\u662f\u5c06 Prometheus \u5355\u72ec\u90e8\u7f72\u5728\u96c6\u7fa4\u5916\u90e8\u7684\uff0c\u751a\u81f3\u76f4\u63a5\u76d1\u63a7\u591a\u4e2a Kubernetes \u96c6\u7fa4\uff0c\u867d\u7136\u4e0d\u63a8\u8350\u8fd9\u6837\u53bb\u505a\uff0c\u56e0\u4e3a Prometheus \u91c7\u96c6\u7684\u6570\u636e\u91cf\u592a\u5927\uff0c\u6216\u5927\u91cf\u6d88\u8017\u8d44\u6e90\uff0c\u6bd4\u8f83\u63a8\u8350\u7684\u505a\u6cd5\u662f\u7528\u4e0d\u540c\u7684 Prometheus \u5b9e\u4f8b\u76d1\u63a7\u4e0d\u540c\u7684\u96c6\u7fa4\uff0c\u7136\u540e\u7528\u8054\u90a6\u7684\u65b9\u5f0f\u8fdb\u884c\u6c47\u603b\u3002\u4f46\u662f\u4f7f\u7528 Prometheus \u76d1\u63a7\u5916\u90e8\u7684 Kubernetes \u96c6\u7fa4\u8fd9\u4e2a\u9700\u6c42\u8fd8\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u8981\u53bb\u91c7\u96c6 Kubernetes \u96c6\u7fa4 cAdvisor \u7684\u76d1\u63a7\u6570\u636e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 APIServer \u901a\u8fc7 kubelet \u53bb\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u6570\u636e\u3002 \u5982\u679c\u6211\u4eec\u5bf9\u96c6\u7fa4\u5185\u90e8\u7684 Prometheus \u81ea\u52a8\u53d1\u73b0 Kubernetes \u7684\u6570\u636e\u6bd4\u8f83\u719f\u6089\u7684\u8bdd\uff0c\u90a3\u4e48\u76d1\u63a7\u5916\u90e8\u96c6\u7fa4\u7684\u539f\u7406\u4e5f\u662f\u4e00\u6837\u7684\uff0c \u53ea\u662f\u8bbf\u95ee APIServer \u7684\u5f62\u5f0f\u6709 inCluster \u6a21\u5f0f\u53d8\u6210\u4e86 KubeConfig \u7684\u6a21\u5f0f\uff0c inCluster \u6a21\u5f0f\u4e0b\u5728 Pod \u4e2d\u5c31\u5df2\u7ecf\u81ea\u52a8\u6ce8\u5165\u4e86\u8bbf\u95ee\u96c6\u7fa4\u7684 token \u548c ca.crt \u6587\u4ef6\uff0c\u6240\u4ee5\u975e\u5e38\u65b9\u4fbf\uff0c\u90a3\u4e48\u5728\u96c6\u7fa4\u5916\u7684\u8bdd\u5c31\u9700\u8981\u6211\u4eec\u624b\u52a8\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u624d\u80fd\u591f\u505a\u5230\u81ea\u52a8\u53d1\u73b0\u4e86 \u3002 \u63a5\u4e0b\u6765\u5c31\u9996\u5148\u6784\u9020 Prometheus \u8fde\u63a5 APIServer \u7684\u4fe1\u606f\uff0c\u5728\u901a\u8fc7 kubernetes_sd_configs \u505a\u670d\u52a1\u53d1\u73b0\u7684\u65f6\u5019\u53ea\u9700\u8981\u586b\u5165 Kubernetes \u96c6\u7fa4\u7684 api_server \u3001 ca_file \u3001 bearer_token_file \u4fe1\u606f\u5373\u53ef \uff0c\u8981\u60f3\u83b7\u5f97\u8fd9\u51e0\u4e2a\u6587\u4ef6\u4fe1\u606f\u4e5f\u6bd4\u8f83\u7b80\u5355\u3002 \u521b\u5efa\u7528\u4e8e Prometheus \u8bbf\u95ee Kubernetes \u8d44\u6e90\u5bf9\u8c61\u7684 RBAC \u5bf9\u8c61\uff1a # prom.rbac.yaml apiVersion: v1 kind: ServiceAccount metadata: name: prometheus namespace: kube-mon --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: prometheus rules: - apiGroups: - \"\" resources: - nodes - services - endpoints - pods - nodes/proxy verbs: - get - list - watch - apiGroups: - \"extensions\" resources: - ingresses verbs: - get - list - watch - apiGroups: - \"\" resources: - configmaps - nodes/metrics verbs: - get - nonResourceURLs: - /metrics verbs: - get --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: prometheus roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: prometheus subjects: - kind: ServiceAccount name: prometheus namespace: kube-mon \u5728 Kubernetes \u96c6\u7fa4\u4e2d\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl apply -f prom.rbac.yaml \u7136\u540e\u83b7\u53d6\u4e0a\u9762\u7684 Prometheus \u5bf9\u5e94\u7684 Secret \u7684\u4fe1\u606f\uff1a $ kubectl get sa prometheus -n kube-mon -o yaml ...... secrets: - name: prometheus-token-wj7fb $ kubectl describe secret prometheus-token-wj7fb -n kube-mon Name: prometheus-token-wj7fb Namespace: kube-mon ...... Data ==== namespace: 8 bytes token: <token string> ca.crt: 1025 bytes \u4e0a\u9762\u7684 token \u548c ca.crt \u4fe1\u606f\u5c31\u662f\u6211\u4eec\u7528\u4e8e\u8bbf\u95ee APIServer \u7684\u6570\u636e\uff0c\u53ef\u4ee5\u5c06 token \u4fe1\u606f\u4fdd\u5b58\u5230\u4e00\u4e2a\u540d\u4e3a k8s.token \u7684\u6587\u672c\u6587\u4ef6\u4e2d\u3002 \u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a Prometheus \u76d1\u63a7\u5916\u90e8 Kubernetes \u96c6\u7fa4\u6570\u636e\u7684\u4efb\u52a1\uff0c\u5982\u4e0b\u6240\u793a\uff1a # prometheus.yml global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: k8s-cadvisor honor_timestamps: true metrics_path: /metrics scheme: https kubernetes_sd_configs: # kubernetes \u81ea\u52a8\u53d1\u73b0 - api_server: https://10.151.30.11:6443 # apiserver \u5730\u5740 role: node # node \u7c7b\u578b\u7684\u81ea\u52a8\u53d1\u73b0 bearer_token_file: k8s.token tls_config: insecure_skip_verify: true bearer_token_file: k8s.token # \u4e0a\u9762\u751f\u6210\u7684token tls_config: insecure_skip_verify: true relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - separator: ; regex: (.*) target_label: __address__ replacement: 10.151.30.11:6443 action: replace - source_labels: [__meta_kubernetes_node_name] separator: ; regex: (.+) target_label: __metrics_path__ replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor action: replace \u8fd9\u91cc bearer_token_file \u5c31\u662f\u4e0a\u9762\u751f\u6210\u7684 k8s.token \u6587\u4ef6\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528 bearer_token \u76f4\u63a5\u5c06\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u653e\u7f6e\u5728\u8fd9\u91cc\uff0c\u53e6\u5916\u8981\u8bb0\u5f97\u5c06 api_server \u66ff\u6362\u6210\u4f60 Prometheus \u6240\u5728\u7684\u8282\u70b9\u80fd\u8bbf\u95ee\u5230\u7684 APIServer \u5730\u5740\u3002 \u6211\u4eec\u8fd9\u91cc\u76d1\u63a7 cAdvisor \uff0c\u540c\u6837\u53ef\u4ee5\u901a\u8fc7 relabel_configs \u6765\u914d\u7f6e\uff0c\u5c06 __metrics_path__ \u8f6c\u6362\u4e3a /api/v1/nodes/${1}/proxy/metrics/cadvisor \uff0c\u76f8\u5f53\u4e8e\u901a\u8fc7 APIServer \u4ee3\u7406\u5230 Kubelet \u4e0a\u83b7\u53d6\u6570\u636e\u3002 \u5f53\u7136\u5982\u679c\u4f60\u7684 Prometheus \u80fd\u591f\u76f4\u63a5\u8bbf\u95ee\u5230 kubelet \uff0c\u4e5f\u53ef\u4ee5\u914d\u7f6e\u6210\u76f4\u63a5\u8bf7\u6c42\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u670d\u52a1\u53d1\u73b0\u4f7f\u7528 APIServer \uff0c\u91c7\u96c6\u76f4\u63a5\u8d70 Kubelet \u3002 \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u76f4\u63a5\u542f\u52a8 Prometheus \u5373\u53ef\u751f\u6548\uff1a $ ./prometheus --config.file=prometheus.yaml ....... level=info ts=2020-06-29T07:31:44.438Z caller=main.go:695 msg=\"TSDB started\" level=info ts=2020-06-29T07:31:44.438Z caller=main.go:799 msg=\"Loading configuration file\" filename=prometheus.yaml level=info ts=2020-06-29T07:31:44.448Z caller=main.go:827 msg=\"Completed loading of configuration file\" filename=prometheus.yaml level=info ts=2020-06-29T07:31:44.448Z caller=main.go:646 msg=\"Server is ready to receive web requests.\" \u73b0\u5728\u53bb Prometheus \u9875\u9762\u5c31\u53ef\u4ee5\u770b\u5230\u91c7\u96c6\u7684\u5916\u90e8 Kubernetes \u96c6\u7fa4\u7684\u6570\u636e\u4e86\uff1a \u5982\u679c\u4f60\u8981\u91c7\u96c6 node-exporter \u6216\u8005\u81ea\u52a8\u53d1\u73b0 Endpoints \u3001 Pods \u90fd\u662f\u4e00\u6837\u7684\u539f\u7406\u3002","title":"\u7b2c\u5341\u56db\u8282 Prometheus\u76d1\u63a7\u5916\u90e8Kubernetes\u96c6\u7fa4"},{"location":"chap3/41Prometheus_Monitor_OutCluster/#prometheuskubernetes","text":"\u524d\u9762\u6211\u4eec\u7684\u6587\u7ae0\u4e2d\u90fd\u662f\u5c06 Prometheus \u5b89\u88c5\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u6765\u91c7\u96c6\u6570\u636e\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u73af\u5883\u4e2d\u5f88\u591a\u4f01\u4e1a\u662f\u5c06 Prometheus \u5355\u72ec\u90e8\u7f72\u5728\u96c6\u7fa4\u5916\u90e8\u7684\uff0c\u751a\u81f3\u76f4\u63a5\u76d1\u63a7\u591a\u4e2a Kubernetes \u96c6\u7fa4\uff0c\u867d\u7136\u4e0d\u63a8\u8350\u8fd9\u6837\u53bb\u505a\uff0c\u56e0\u4e3a Prometheus \u91c7\u96c6\u7684\u6570\u636e\u91cf\u592a\u5927\uff0c\u6216\u5927\u91cf\u6d88\u8017\u8d44\u6e90\uff0c\u6bd4\u8f83\u63a8\u8350\u7684\u505a\u6cd5\u662f\u7528\u4e0d\u540c\u7684 Prometheus \u5b9e\u4f8b\u76d1\u63a7\u4e0d\u540c\u7684\u96c6\u7fa4\uff0c\u7136\u540e\u7528\u8054\u90a6\u7684\u65b9\u5f0f\u8fdb\u884c\u6c47\u603b\u3002\u4f46\u662f\u4f7f\u7528 Prometheus \u76d1\u63a7\u5916\u90e8\u7684 Kubernetes \u96c6\u7fa4\u8fd9\u4e2a\u9700\u6c42\u8fd8\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u8981\u53bb\u91c7\u96c6 Kubernetes \u96c6\u7fa4 cAdvisor \u7684\u76d1\u63a7\u6570\u636e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 APIServer \u901a\u8fc7 kubelet \u53bb\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u6570\u636e\u3002 \u5982\u679c\u6211\u4eec\u5bf9\u96c6\u7fa4\u5185\u90e8\u7684 Prometheus \u81ea\u52a8\u53d1\u73b0 Kubernetes \u7684\u6570\u636e\u6bd4\u8f83\u719f\u6089\u7684\u8bdd\uff0c\u90a3\u4e48\u76d1\u63a7\u5916\u90e8\u96c6\u7fa4\u7684\u539f\u7406\u4e5f\u662f\u4e00\u6837\u7684\uff0c \u53ea\u662f\u8bbf\u95ee APIServer \u7684\u5f62\u5f0f\u6709 inCluster \u6a21\u5f0f\u53d8\u6210\u4e86 KubeConfig \u7684\u6a21\u5f0f\uff0c inCluster \u6a21\u5f0f\u4e0b\u5728 Pod \u4e2d\u5c31\u5df2\u7ecf\u81ea\u52a8\u6ce8\u5165\u4e86\u8bbf\u95ee\u96c6\u7fa4\u7684 token \u548c ca.crt \u6587\u4ef6\uff0c\u6240\u4ee5\u975e\u5e38\u65b9\u4fbf\uff0c\u90a3\u4e48\u5728\u96c6\u7fa4\u5916\u7684\u8bdd\u5c31\u9700\u8981\u6211\u4eec\u624b\u52a8\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u624d\u80fd\u591f\u505a\u5230\u81ea\u52a8\u53d1\u73b0\u4e86 \u3002 \u63a5\u4e0b\u6765\u5c31\u9996\u5148\u6784\u9020 Prometheus \u8fde\u63a5 APIServer \u7684\u4fe1\u606f\uff0c\u5728\u901a\u8fc7 kubernetes_sd_configs \u505a\u670d\u52a1\u53d1\u73b0\u7684\u65f6\u5019\u53ea\u9700\u8981\u586b\u5165 Kubernetes \u96c6\u7fa4\u7684 api_server \u3001 ca_file \u3001 bearer_token_file \u4fe1\u606f\u5373\u53ef \uff0c\u8981\u60f3\u83b7\u5f97\u8fd9\u51e0\u4e2a\u6587\u4ef6\u4fe1\u606f\u4e5f\u6bd4\u8f83\u7b80\u5355\u3002 \u521b\u5efa\u7528\u4e8e Prometheus \u8bbf\u95ee Kubernetes \u8d44\u6e90\u5bf9\u8c61\u7684 RBAC \u5bf9\u8c61\uff1a # prom.rbac.yaml apiVersion: v1 kind: ServiceAccount metadata: name: prometheus namespace: kube-mon --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: prometheus rules: - apiGroups: - \"\" resources: - nodes - services - endpoints - pods - nodes/proxy verbs: - get - list - watch - apiGroups: - \"extensions\" resources: - ingresses verbs: - get - list - watch - apiGroups: - \"\" resources: - configmaps - nodes/metrics verbs: - get - nonResourceURLs: - /metrics verbs: - get --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: prometheus roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: prometheus subjects: - kind: ServiceAccount name: prometheus namespace: kube-mon \u5728 Kubernetes \u96c6\u7fa4\u4e2d\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl apply -f prom.rbac.yaml \u7136\u540e\u83b7\u53d6\u4e0a\u9762\u7684 Prometheus \u5bf9\u5e94\u7684 Secret \u7684\u4fe1\u606f\uff1a $ kubectl get sa prometheus -n kube-mon -o yaml ...... secrets: - name: prometheus-token-wj7fb $ kubectl describe secret prometheus-token-wj7fb -n kube-mon Name: prometheus-token-wj7fb Namespace: kube-mon ...... Data ==== namespace: 8 bytes token: <token string> ca.crt: 1025 bytes \u4e0a\u9762\u7684 token \u548c ca.crt \u4fe1\u606f\u5c31\u662f\u6211\u4eec\u7528\u4e8e\u8bbf\u95ee APIServer \u7684\u6570\u636e\uff0c\u53ef\u4ee5\u5c06 token \u4fe1\u606f\u4fdd\u5b58\u5230\u4e00\u4e2a\u540d\u4e3a k8s.token \u7684\u6587\u672c\u6587\u4ef6\u4e2d\u3002 \u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a Prometheus \u76d1\u63a7\u5916\u90e8 Kubernetes \u96c6\u7fa4\u6570\u636e\u7684\u4efb\u52a1\uff0c\u5982\u4e0b\u6240\u793a\uff1a # prometheus.yml global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: k8s-cadvisor honor_timestamps: true metrics_path: /metrics scheme: https kubernetes_sd_configs: # kubernetes \u81ea\u52a8\u53d1\u73b0 - api_server: https://10.151.30.11:6443 # apiserver \u5730\u5740 role: node # node \u7c7b\u578b\u7684\u81ea\u52a8\u53d1\u73b0 bearer_token_file: k8s.token tls_config: insecure_skip_verify: true bearer_token_file: k8s.token # \u4e0a\u9762\u751f\u6210\u7684token tls_config: insecure_skip_verify: true relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - separator: ; regex: (.*) target_label: __address__ replacement: 10.151.30.11:6443 action: replace - source_labels: [__meta_kubernetes_node_name] separator: ; regex: (.+) target_label: __metrics_path__ replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor action: replace \u8fd9\u91cc bearer_token_file \u5c31\u662f\u4e0a\u9762\u751f\u6210\u7684 k8s.token \u6587\u4ef6\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528 bearer_token \u76f4\u63a5\u5c06\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u653e\u7f6e\u5728\u8fd9\u91cc\uff0c\u53e6\u5916\u8981\u8bb0\u5f97\u5c06 api_server \u66ff\u6362\u6210\u4f60 Prometheus \u6240\u5728\u7684\u8282\u70b9\u80fd\u8bbf\u95ee\u5230\u7684 APIServer \u5730\u5740\u3002 \u6211\u4eec\u8fd9\u91cc\u76d1\u63a7 cAdvisor \uff0c\u540c\u6837\u53ef\u4ee5\u901a\u8fc7 relabel_configs \u6765\u914d\u7f6e\uff0c\u5c06 __metrics_path__ \u8f6c\u6362\u4e3a /api/v1/nodes/${1}/proxy/metrics/cadvisor \uff0c\u76f8\u5f53\u4e8e\u901a\u8fc7 APIServer \u4ee3\u7406\u5230 Kubelet \u4e0a\u83b7\u53d6\u6570\u636e\u3002 \u5f53\u7136\u5982\u679c\u4f60\u7684 Prometheus \u80fd\u591f\u76f4\u63a5\u8bbf\u95ee\u5230 kubelet \uff0c\u4e5f\u53ef\u4ee5\u914d\u7f6e\u6210\u76f4\u63a5\u8bf7\u6c42\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u670d\u52a1\u53d1\u73b0\u4f7f\u7528 APIServer \uff0c\u91c7\u96c6\u76f4\u63a5\u8d70 Kubelet \u3002 \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u76f4\u63a5\u542f\u52a8 Prometheus \u5373\u53ef\u751f\u6548\uff1a $ ./prometheus --config.file=prometheus.yaml ....... level=info ts=2020-06-29T07:31:44.438Z caller=main.go:695 msg=\"TSDB started\" level=info ts=2020-06-29T07:31:44.438Z caller=main.go:799 msg=\"Loading configuration file\" filename=prometheus.yaml level=info ts=2020-06-29T07:31:44.448Z caller=main.go:827 msg=\"Completed loading of configuration file\" filename=prometheus.yaml level=info ts=2020-06-29T07:31:44.448Z caller=main.go:646 msg=\"Server is ready to receive web requests.\" \u73b0\u5728\u53bb Prometheus \u9875\u9762\u5c31\u53ef\u4ee5\u770b\u5230\u91c7\u96c6\u7684\u5916\u90e8 Kubernetes \u96c6\u7fa4\u7684\u6570\u636e\u4e86\uff1a \u5982\u679c\u4f60\u8981\u91c7\u96c6 node-exporter \u6216\u8005\u81ea\u52a8\u53d1\u73b0 Endpoints \u3001 Pods \u90fd\u662f\u4e00\u6837\u7684\u539f\u7406\u3002","title":"\u7b2c\u5341\u56db\u8282 Prometheus\u76d1\u63a7\u5916\u90e8Kubernetes\u96c6\u7fa4"},{"location":"chap3/4Adv_Prometheus_setup/","text":"\u7b2c\u56db\u8282 \u5728 Kubernetes \u4e2d\u624b\u52a8\u90e8\u7f72 Prometheus (adv) \u5728\u65e9\u671f\u7684\u7248\u672c\u4e2d Kubernetes \u63d0\u4f9b\u4e86 heapster \u3001 influxDB \u3001 grafana \u7684\u7ec4\u5408\u6765\u76d1\u63a7\u7cfb\u7edf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728 Dashboard \u4e2d\u770b\u5230 heapster \u63d0\u4f9b\u7684\u4e00\u4e9b\u56fe\u8868\u4fe1\u606f\uff0c\u5728\u540e\u7eed\u7684\u7248\u672c\u4e2d\u4f1a\u9646\u7eed\u79fb\u9664\u6389 heapster \uff0c\u73b0\u5728\u66f4\u52a0\u6d41\u884c\u7684\u76d1\u63a7\u5de5\u5177\u662f prometheus \uff0c prometheus \u662f Google \u5185\u90e8\u76d1\u63a7\u62a5\u8b66\u7cfb\u7edf\u7684\u5f00\u6e90\u7248\u672c\uff0c\u662f Google SRE \u601d\u60f3\u5728\u5176\u5185\u90e8\u4e0d\u65ad\u5b8c\u5584\u7684\u4ea7\u7269\uff0c\u5b83\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u66f4\u5feb\u548c\u9ad8\u6548\u7684\u53d1\u73b0\u95ee\u9898\uff0c\u5feb\u901f\u7684\u63a5\u5165\u901f\u5ea6\uff0c\u7b80\u5355\u7075\u6d3b\u7684\u914d\u7f6e\u90fd\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u8fd9\u4e00\u5207\uff0c\u800c\u4e14\u662f\u5df2\u7ecf\u6bd5\u4e1a\u7684 CNCF \u9879\u76ee\u3002 1 \u7b80\u4ecb Prometheus \u6700\u521d\u662f SoundCloud \u6784\u5efa\u7684\u5f00\u6e90\u7cfb\u7edf\u76d1\u63a7\u548c\u62a5\u8b66\u5de5\u5177\uff0c\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u4e8e2016\u5e74\u52a0\u5165\u4e86 CNCF \u57fa\u91d1\u4f1a\uff0c\u4f5c\u4e3a\u7ee7 Kubernetes \u4e4b\u540e\u7684\u7b2c\u4e8c\u4e2a\u6258\u7ba1\u9879\u76ee\u3002 2 \u7279\u5f81 Prometheus \u76f8\u6bd4\u4e8e\u5176\u4ed6\u4f20\u7edf\u76d1\u63a7\u5de5\u5177\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a \u5177\u6709\u7531 metric \u540d\u79f0\u548c\u952e/\u503c\u5bf9\u6807\u8bc6\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u591a\u7ef4\u6570\u636e\u6a21\u578b \u6709\u4e00\u4e2a\u7075\u6d3b\u7684\u67e5\u8be2\u8bed\u8a00 \u4e0d\u4f9d\u8d56\u5206\u5e03\u5f0f\u5b58\u50a8\uff0c\u53ea\u548c\u672c\u5730\u78c1\u76d8\u6709\u5173 \u901a\u8fc7 HTTP \u7684\u670d\u52a1\u62c9\u53d6\u65f6\u95f4\u5e8f\u5217\u6570\u636e \u4e5f\u652f\u6301\u63a8\u9001\u7684\u65b9\u5f0f\u6765\u6dfb\u52a0\u65f6\u95f4\u5e8f\u5217\u6570\u636e \u8fd8\u652f\u6301\u901a\u8fc7\u670d\u52a1\u53d1\u73b0\u6216\u9759\u6001\u914d\u7f6e\u53d1\u73b0\u76ee\u6807 \u591a\u79cd\u56fe\u5f62\u548c\u4eea\u8868\u677f\u652f\u6301 3 \u7ec4\u4ef6 Prometheus \u7531\u591a\u4e2a\u7ec4\u4ef6\u7ec4\u6210\uff0c\u4f46\u662f\u5176\u4e2d\u8bb8\u591a\u7ec4\u4ef6\u662f\u53ef\u9009\u7684 Prometheus Server \uff1a\u7528\u4e8e\u6293\u53d6\u6307\u6807\u3001\u5b58\u50a8\u65f6\u95f4\u5e8f\u5217\u6570\u636e exporter \uff1a\u66b4\u9732\u6307\u6807\u8ba9\u4efb\u52a1\u6765\u6293 pushgateway \uff1apush \u7684\u65b9\u5f0f\u5c06\u6307\u6807\u6570\u636e\u63a8\u9001\u5230\u8be5\u7f51\u5173 alertmanager \uff1a\u5904\u7406\u62a5\u8b66\u7684\u62a5\u8b66\u7ec4\u4ef6 adhoc \uff1a\u7528\u4e8e\u6570\u636e\u67e5\u8be2 \u5927\u591a\u6570 Prometheus \u7ec4\u4ef6\u90fd\u662f\u7528 Go \u7f16\u5199\u7684\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u6784\u5efa\u548c\u90e8\u7f72\u4e3a\u9759\u6001\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 4 \u67b6\u6784 \u4e0b\u56fe\u662f Prometheus \u5b98\u65b9\u63d0\u4f9b\u7684\u67b6\u6784\u53ca\u5176\u4e00\u4e9b\u76f8\u5173\u7684\u751f\u6001\u7cfb\u7edf\u7ec4\u4ef6\uff1a \u6574\u4f53\u6d41\u7a0b\u6bd4\u8f83\u7b80\u5355\uff0c Prometheus \u76f4\u63a5\u63a5\u6536\u6216\u8005\u901a\u8fc7\u4e2d\u95f4\u7684 Pushgateway \u7f51\u5173\u88ab\u52a8\u83b7\u53d6\u6307\u6807\u6570\u636e\uff0c\u5728\u672c\u5730\u5b58\u50a8\u6240\u6709\u7684\u83b7\u53d6\u7684\u6307\u6807\u6570\u636e\uff0c\u5e76\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u4e00\u4e9b\u89c4\u5219\u6574\u7406\uff0c\u7528\u6765\u751f\u6210\u4e00\u4e9b\u805a\u5408\u6570\u636e\u6216\u8005\u62a5\u8b66\u4fe1\u606f\uff0cGrafana \u6216\u8005\u5176\u4ed6\u5de5\u5177\u7528\u6765\u53ef\u89c6\u5316\u8fd9\u4e9b\u6570\u636e\u3002 5 \u5b89\u88c5 \u7531\u4e8e Prometheus \u662f Golang \u7f16\u5199\u7684\u7a0b\u5e8f\uff0c\u6240\u4ee5\u8981\u5b89\u88c5\u7684\u8bdd\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0b\u8f7d\u4e0b\u6765\u76f4\u63a5\u6267\u884c\u5373\u53ef\uff0c\u524d\u5f80\u5730\u5740\uff1a https://prometheus.io/download \u4e0b\u8f7d\u6211\u4eec\u5bf9\u5e94\u7684\u7248\u672c\u5373\u53ef\u3002 Prometheus \u662f\u901a\u8fc7\u4e00\u4e2a YAML \u914d\u7f6e\u6587\u4ef6\u6765\u8fdb\u884c\u542f\u52a8\u7684\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\u6765\u542f\u52a8\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a $ ./prometheus --config.file=prometheus.yml \u5176\u4e2d prometheus.yml \u6587\u4ef6\u7684\u57fa\u672c\u914d\u7f6e\u5982\u4e0b\uff1a global: scrape_interval: 15s evaluation_interval: 15s rule_files: # - \"first.rules\" # - \"second.rules\" scrape_configs: - job_name: prometheus static_configs: - targets: ['localhost:9090'] \u4e0a\u9762\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\u5305\u542b\u4e863\u4e2a\u6a21\u5757\uff1a global \u3001 rule_files \u548c scrape_configs \u3002 1.\u5176\u4e2d global \u6a21\u5757\u63a7\u5236 Prometheus Server \u7684\u5168\u5c40\u914d\u7f6e\uff1a scrape_interval \uff1a\u8868\u793a prometheus \u6293\u53d6 \u6307\u6807\u6570\u636e\u7684\u9891\u7387 \uff0c\u9ed8\u8ba4\u662f 15s \uff0c\u6211\u4eec\u53ef\u4ee5\u8986\u76d6\u8fd9\u4e2a\u503c evaluation_interval \uff1a\u7528\u6765 \u63a7\u5236\u8bc4\u4f30\u89c4\u5219\u7684\u9891\u7387 \uff0c prometheus \u4f7f\u7528\u89c4\u5219\u4ea7\u751f\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6216\u8005\u4ea7\u751f\u8b66\u62a5 2. rule_files \u6a21\u5757\u5236\u5b9a\u4e86\u89c4\u5219\u6240\u5728\u7684\u4f4d\u7f6e: prometheus \u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a \u914d\u7f6e\u52a0\u8f7d\u89c4\u5219 \uff0c\u7528\u4e8e\u751f \u6210\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6216\u8005\u62a5\u8b66\u4fe1\u606f\uff0c\u5f53\u524d\u6211\u4eec\u6ca1\u6709\u914d\u7f6e\u4efb\u4f55\u89c4\u5219 \u3002 3. scrape_configs \u7528\u4e8e\u63a7\u5236 prometheus \u76d1\u63a7\u54ea\u4e9b\u8d44\u6e90 \u3002 \u7531\u4e8e prometheus \u901a\u8fc7 HTTP \u7684\u65b9\u5f0f\u6765\u66b4\u9732\u7684\u5b83\u672c\u8eab\u7684\u76d1\u63a7\u6570\u636e\uff0c prometheus \u4e5f\u80fd\u591f\u76d1\u63a7\u672c\u8eab\u7684\u5065\u5eb7\u60c5\u51b5\u3002 \u5728\u9ed8\u8ba4\u7684\u914d\u7f6e\u91cc\u6709\u4e00\u4e2a\u5355\u72ec\u7684 job \uff0c\u53eb\u505a prometheus \uff0c\u5b83\u91c7\u96c6 prometheus \u670d\u52a1\u672c\u8eab\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e \u3002 \u8fd9\u4e2a job \u5305\u542b\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u3001\u9759\u6001\u914d\u7f6e\u7684\u76ee\u6807\uff1a\u76d1\u542c localhost \u4e0a\u7684 9090 \u7aef\u53e3\u3002prometheus \u9ed8\u8ba4\u4f1a\u901a\u8fc7\u76ee\u6807\u7684 /metrics \u8def\u5f84\u91c7\u96c6 metrics \u3002\u6240\u4ee5\uff0c\u9ed8\u8ba4\u7684 job \u901a\u8fc7 URL\uff1a http://localhost:9090/metrics \u91c7\u96c6 metrics \u3002 \u6536\u96c6\u5230\u7684\u65f6\u95f4\u5e8f\u5217\u5305\u542b prometheus \u670d\u52a1\u672c\u8eab\u7684\u72b6\u6001\u548c\u6027\u80fd\u3002\u5982\u679c\u6211\u4eec\u8fd8\u6709\u5176\u4ed6\u7684\u8d44\u6e90\u9700\u8981\u76d1\u63a7\u7684\u8bdd\uff0c\u76f4\u63a5\u914d\u7f6e\u5728\u8be5\u6a21\u5757\u4e0b\u9762\u5c31\u53ef\u4ee5\u4e86\u3002 \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u662f\u8981\u8dd1\u5728 Kubernetes \u7cfb\u7edf\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7528 Docker \u955c\u50cf\u7684\u65b9\u5f0f\u8fd0\u884c\u5373\u53ef\u3002 \u4e3a\u4e86\u80fd\u591f\u65b9\u4fbf\u7684\u7ba1\u7406\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u8fd9\u91cc\u5c06 prometheus.yml \u6587\u4ef6\u7528 ConfigMap \u7684\u5f62\u5f0f\u8fdb\u884c\u7ba1\u7406\uff1a\uff08 prometheus-cm.yaml \uff09 apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] data: prometheus.yml: | gloabl: scrape_configs: \u6211\u4eec\u8fd9\u91cc\u6682\u65f6\u53ea\u914d\u7f6e\u4e86\u5bf9 prometheus \u7684\u76d1\u63a7\uff0c\u7136\u540e\u521b\u5efa\u8be5\u8d44\u6e90\u5bf9\u8c61: $ kubectl create -f prometheus-cm.yaml configmap \"prometheus-config\" created \u914d\u7f6e\u6587\u4ef6\u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u4ee5\u540e\u5982\u679c\u6211\u4eec\u6709\u65b0\u7684\u8d44\u6e90\u9700\u8981\u88ab\u76d1\u63a7\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4e0a\u9762\u7684 ConfigMap \u5bf9\u8c61\u66f4\u65b0\u5373\u53ef\u3002\u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa prometheus \u7684 Pod \u8d44\u6e90\uff1a( prometheus-deploy.yaml ) apiVersion: extensions/v1beta1 kind: Deployment metadata: name: prometheus namespace: kube-ops labels: app: prometheus spec: template: metadata: labels: app: prometheus spec: serviceAccountName: prometheus containers: - image: prom/prometheus:v2.4.3 name: prometheus args: - \"--config.file=/etc/prometheus/prometheus.yml\" - \"--storage.tsdb.path=/prometheus\" - \"--storage.tsdb.retention=24h\" - \"--web.enable-admin-api\" # \u63a7\u5236\u5bf9admin HTTP API\u7684\u8bbf\u95ee\uff0c\u5176\u4e2d\u5305\u62ec\u5220\u9664\u65f6\u95f4\u5e8f\u5217\u7b49\u529f\u80fd - \"--web.enable-lifecycle\" # \u652f\u6301\u70ed\u66f4\u65b0\uff0c\u76f4\u63a5\u6267\u884clocalhost:9090/-/reload\u7acb\u5373\u751f\u6548 ports: - containerPort: 9090 protocol: TCP name: http volumeMounts: - mountPath: \"/prometheus\" subPath: prometheus name: data - mountPath: \"/etc/prometheus\" name: config-volume resources: requests: cpu: 100m memory: 512Mi limits: cpu: 100m memory: 512Mi securityContext: runAsUser: 0 volumes: - name: data persistentVolumeClaim: claimName: prometheus - configMap: name: prometheus-config name: config-volume \u6211\u4eec\u5728\u542f\u52a8\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u9664\u4e86\u6307\u5b9a\u4e86 prometheus.yml \u6587\u4ef6\u4e4b\u5916\uff0c \u8fd8\u901a\u8fc7\u53c2\u6570 storage.tsdb.path \u6307\u5b9a\u4e86 TSDB \u6570\u636e\u7684\u5b58\u50a8\u8def\u5f84\u3002 \u901a\u8fc7 storage.tsdb.retention \u8bbe\u7f6e\u4e86 \u4fdd\u7559\u591a\u957f\u65f6\u95f4\u7684\u6570\u636e \u3002 \u8fd8\u6709\u4e0b\u9762\u7684 web.enable-admin-api \u53c2\u6570\u53ef\u4ee5\u7528\u6765\u5f00\u542f\u5bf9 admin api \u7684\u8bbf\u95ee\u6743\u9650\u3002 \u53c2\u6570 web.enable-lifecycle \u975e\u5e38\u91cd\u8981\uff0c\u7528\u6765\u5f00\u542f\u652f\u6301\u70ed\u66f4\u65b0\u7684\uff0c\u6709\u4e86\u8fd9\u4e2a\u53c2\u6570\u4e4b\u540e\uff0c prometheus.yml \u914d\u7f6e\u6587\u4ef6\u53ea\u8981\u66f4\u65b0\u4e86\uff0c\u901a\u8fc7\u6267\u884c localhost:9090/-/reload \u5c31\u4f1a\u7acb\u5373\u751f\u6548\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u52a0\u4e0a\u8fd9\u4e2a\u53c2\u6570\u3002 \u6211\u4eec\u8fd9\u91cc\u5c06 prometheus.yml \u6587\u4ef6\u5bf9\u5e94\u7684 ConfigMap \u5bf9\u8c61\u901a\u8fc7 volume \u7684\u5f62\u5f0f\u6302\u8f7d\u8fdb\u4e86 Pod \uff0c\u8fd9\u6837 ConfigMap \u66f4\u65b0\u540e\uff0c\u5bf9\u5e94\u7684 Pod \u91cc\u9762\u7684\u6587\u4ef6\u4e5f\u4f1a\u70ed\u66f4\u65b0\u7684. \u7136\u540e\u6211\u4eec\u518d\u6267\u884c\u4e0a\u9762\u7684 reload \u8bf7\u6c42\uff0c Prometheus \u914d\u7f6e\u5c31\u751f\u6548\u4e86\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u4e3a\u4e86\u5c06\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u8fdb\u884c\u6301\u4e45\u5316\uff0c\u6211\u4eec\u5c06\u6570\u636e\u76ee\u5f55\u548c\u4e00\u4e2a pvc \u5bf9\u8c61\u8fdb\u884c\u4e86\u7ed1\u5b9a\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u63d0\u524d\u521b\u5efa\u597d\u8fd9\u4e2a pvc \u5bf9\u8c61\uff1a( prometheus-volume.yaml ) apiVersion: v1 kind: PersistentVolume metadata: name: prometheus spec: capacity: storage: 10Gi accessModes: - ReadWriteOnce persistentVolumeReclaimPolicy: Recycle nfs: server: 10.151.30.57 path: /data/k8s --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: prometheus namespace: kube-ops spec: accessModes: - ReadWriteOnce resources: requests: storage: 10Gi \u6211\u4eec\u8fd9\u91cc\u7b80\u5355\u7684\u901a\u8fc7 NFS \u4f5c\u4e3a\u5b58\u50a8\u540e\u7aef\u521b\u5efa\u4e00\u4e2a pv\u3001pvc \u5bf9\u8c61\uff1a $ kubectl create -f prometheus-volume.yaml \u9664\u4e86\u4e0a\u9762\u7684\u6ce8\u610f\u4e8b\u9879\u5916\uff0c\u6211\u4eec\u8fd9\u91cc\u8fd8\u9700\u8981\u914d\u7f6e rbac \u8ba4\u8bc1\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5728 prometheus \u4e2d\u53bb\u8bbf\u95ee Kubernetes \u7684\u76f8\u5173\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u7ba1\u7406\u4e86\u4e00\u4e2a\u540d\u4e3a prometheus \u7684 serviceAccount \u5bf9\u8c61\uff1a( prometheus-rbac.yaml ) apiVersion: v1 kind: ServiceAccount metadata: name: prometheus namespace: kube-ops --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: prometheus rules: - apiGroups: [\"\"] resources: - nodes - services - endpoints - pods - nodes/proxy verbs: [\"get\", \"list\", \"watch\"] - apiGroups: [\"\"] resources: - configmaps verbs: [\"get\"] - nonResourceURLs: [\"/metics\"] # \u5bf9\u975e\u8d44\u6e90\u578b endpoint metrics \u8fdb\u884c get \u64cd\u4f5c verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: prometheus roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: prometheus subjects: - kind: ServiceAccount name: prometheus namespace: kube-ops \u7531\u4e8e\u6211\u4eec\u8981\u83b7\u53d6\u7684\u8d44\u6e90\u4fe1\u606f\uff0c\u5728\u6bcf\u4e00\u4e2a namespace \u4e0b\u9762\u90fd\u6709\u53ef\u80fd\u5b58\u5728\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f ClusterRole \u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u7684\u6743\u9650\u89c4\u5219\u58f0\u660e\u4e2d\u6709\u4e00\u4e2a nonResourceURLs \u7684\u5c5e\u6027\uff0c\u662f\u7528\u6765\u5bf9\u975e\u8d44\u6e90\u578b metrics \u8fdb\u884c\u64cd\u4f5c\u7684\u6743\u9650\u58f0\u660e\uff0c\u8fd9\u4e2a\u5728\u4ee5\u524d\u6211\u4eec\u5f88\u5c11\u9047\u5230\u8fc7\uff0c\u7136\u540e\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a $ kubectl create -f prometheus-rbac.yaml serviceaccount \"prometheus\" created clusterrole.rbac.authorization.k8s.io \"prometheus\" created clusterrolebinding.rbac.authorization.k8s.io \"prometheus\" created \u8fd8\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u5730\u65b9\u662f\u6211\u4eec\u8fd9\u91cc\u5fc5\u987b\u8981\u6dfb\u52a0\u4e00\u4e2a securityContext \u7684\u5c5e\u6027\u5728 prometheus deployment \uff0c\u5c06\u5176\u4e2d\u7684 runAsUser \u8bbe\u7f6e\u4e3a 0 \uff0c\u8fd9\u662f\u56e0\u4e3a\u73b0\u5728\u7684 prometheus \u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u7528\u6237\u662f nobody \uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u4e0b\u9762\u7684 permission denied \u4e4b\u7c7b\u7684\u6743\u9650\u9519\u8bef\uff1a level=error ts=2018-10-22T14:34:58.632016274Z caller=main.go:617 err=\"opening storage failed: lock DB directory: open /data/lock: permission denied 4.\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u6dfb\u52a0promethues\u7684\u8d44\u6e90\u5bf9\u8c61\u4e86 \uff1a $ kubectl create -f prometheus-deploy.yaml deployment.extensions \"prometheus\" created $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE prometheus-6dd775cbff-zb69l 1/1 Running 0 20m $ kubectl logs -f prometheus-6dd775cbff-zb69l -n kube-ops......level=info ts=2018-10-22T14:44:40.535385503Z caller=main.go:523 msg=\"Server is ready to receive web requests.\" Pod \u521b\u5efa\u6210\u529f\u540e\uff0c\u4e3a\u4e86\u80fd\u591f\u5728\u5916\u90e8\u8bbf\u95ee\u5230 prometheus \u7684\u5916\u90e8\u670d\u52a1\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u521b\u5efa\u4e00\u4e2a Service \u5bf9\u8c61\uff1a( prometheus-svc.yaml ) apiVersion: v1 kind: Service metadata: name: prometheus namespace: kube-ops labels: app: prometheus spec: selector: app: prometheus type: NodePort ports: - name: web port: 9090 targetPort: http \u4e3a\u4e86\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u6211\u4eec\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a NodePort \u7c7b\u578b\u7684\u670d\u52a1\uff0c\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a Ingress \u5bf9\u8c61\uff0c\u901a\u8fc7\u57df\u540d\u6765\u8fdb\u884c\u8bbf\u95ee\uff1a $ kubectl create -f prometheus-svc.yaml service \"prometheus\" created $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.111.118.104 <none> 9090:30987/TCP 24s \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 http://\u4efb\u610f\u8282\u70b9IP:30987 \u8bbf\u95ee prometheus \u7684 \u5916\u90e8\u670d\u52a1\u4e86\u3002 \u4e3a\u4e86\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c prometheus \u6240\u6709\u7684\u6570\u636e\u90fd\u662f\u4f7f\u7528\u7684 UTC \u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u9ed8\u8ba4\u6253\u5f00\u7684 dashboard \u4e2d\u6709\u8fd9\u6837\u4e00\u4e2a\u8b66\u544a\uff0c\u6211\u4eec\u9700\u8981\u5728\u67e5\u8be2\u7684\u65f6\u5019\u6307\u5b9a\u6211\u4eec\u5f53\u524d\u7684\u65f6\u95f4\u624d\u53ef\u4ee5\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u76d1\u63a7\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e9b\u76d1\u63a7\u76ee\u6807 \u7531\u4e8e\u6211\u4eec\u73b0\u5728\u8fd8\u6ca1\u6709\u914d\u7f6e\u4efb\u4f55\u7684\u62a5\u8b66\u4fe1\u606f\uff0c\u6240\u4ee5 Alerts \u83dc\u5355\u4e0b\u9762\u73b0\u5728\u6ca1\u6709\u4efb\u4f55\u6570\u636e\uff0c\u9694\u4e00\u4f1a\u513f\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb Graph \u83dc\u5355\u4e0b\u9762\u67e5\u770b\u6211\u4eec\u6293\u53d6\u7684 prometheus \u672c\u8eab\u7684\u4e00\u4e9b\u76d1\u63a7\u6570\u636e\u4e86\uff0c\u5176\u4e2d insert metrics at cursor \u4e0b\u9762\u5c31\u662f\u6211\u4eec\u641c\u96c6\u5230\u7684\u4e00\u4e9b\u76d1\u63a7\u6570\u636e\u6307\u6807\uff1a \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u5c31\u9009\u62e9 scrape_duration_seconds \u8fd9\u4e2a\u6307\u6807\uff0c\u7136\u540e\u70b9\u51fb Execute\uff0c\u5982\u679c\u8fd9\u4e2a\u65f6\u5019\u6ca1\u6709\u67e5\u8be2\u5230\u4efb\u4f55\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5207\u6362\u5230 Graph \u8fd9\u4e2a tab `\u4e0b\u9762\u91cd\u65b0\u9009\u62e9\u4e0b\u65f6\u95f4\uff0c\u9009\u62e9\u5230\u5f53\u524d\u7684\u65f6\u95f4\u70b9\uff0c\u91cd\u65b0\u6267\u884c\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u56fe\u8868\u6570\u636e\u4e86\uff1a \u9664\u4e86\u7b80\u5355\u7684\u76f4\u63a5\u4f7f\u7528\u91c7\u96c6\u5230\u7684\u4e00\u4e9b\u76d1\u63a7\u6307\u6807\u6570\u636e\u4e4b\u5916\uff0c\u8fd9\u4e2a\u65f6\u5019\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5f3a\u5927\u7684 PromQL \u5de5\u5177\uff0c PromQL \u5176\u5b9e\u5c31\u662f prometheus \u4fbf\u4e8e\u6570\u636e\u805a\u5408\u5c55\u793a\u5f00\u53d1\u7684\u4e00\u5957 ad hoc \u67e5\u8be2\u8bed\u8a00\u7684\uff0c\u4f60\u60f3\u8981\u67e5\u4ec0\u4e48\u627e\u5bf9\u5e94\u51fd\u6570\u53d6\u4f60\u7684\u6570\u636e\u597d\u4e86\u3002","title":"\u7b2c\u56db\u8282 \u5728 Kubernetes \u4e2d\u624b\u52a8\u90e8\u7f72 Prometheus (adv)"},{"location":"chap3/4Adv_Prometheus_setup/#kubernetes-prometheus-adv","text":"\u5728\u65e9\u671f\u7684\u7248\u672c\u4e2d Kubernetes \u63d0\u4f9b\u4e86 heapster \u3001 influxDB \u3001 grafana \u7684\u7ec4\u5408\u6765\u76d1\u63a7\u7cfb\u7edf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728 Dashboard \u4e2d\u770b\u5230 heapster \u63d0\u4f9b\u7684\u4e00\u4e9b\u56fe\u8868\u4fe1\u606f\uff0c\u5728\u540e\u7eed\u7684\u7248\u672c\u4e2d\u4f1a\u9646\u7eed\u79fb\u9664\u6389 heapster \uff0c\u73b0\u5728\u66f4\u52a0\u6d41\u884c\u7684\u76d1\u63a7\u5de5\u5177\u662f prometheus \uff0c prometheus \u662f Google \u5185\u90e8\u76d1\u63a7\u62a5\u8b66\u7cfb\u7edf\u7684\u5f00\u6e90\u7248\u672c\uff0c\u662f Google SRE \u601d\u60f3\u5728\u5176\u5185\u90e8\u4e0d\u65ad\u5b8c\u5584\u7684\u4ea7\u7269\uff0c\u5b83\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u66f4\u5feb\u548c\u9ad8\u6548\u7684\u53d1\u73b0\u95ee\u9898\uff0c\u5feb\u901f\u7684\u63a5\u5165\u901f\u5ea6\uff0c\u7b80\u5355\u7075\u6d3b\u7684\u914d\u7f6e\u90fd\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u8fd9\u4e00\u5207\uff0c\u800c\u4e14\u662f\u5df2\u7ecf\u6bd5\u4e1a\u7684 CNCF \u9879\u76ee\u3002","title":"\u7b2c\u56db\u8282 \u5728 Kubernetes \u4e2d\u624b\u52a8\u90e8\u7f72 Prometheus (adv)"},{"location":"chap3/4Adv_Prometheus_setup/#1","text":"Prometheus \u6700\u521d\u662f SoundCloud \u6784\u5efa\u7684\u5f00\u6e90\u7cfb\u7edf\u76d1\u63a7\u548c\u62a5\u8b66\u5de5\u5177\uff0c\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u4e8e2016\u5e74\u52a0\u5165\u4e86 CNCF \u57fa\u91d1\u4f1a\uff0c\u4f5c\u4e3a\u7ee7 Kubernetes \u4e4b\u540e\u7684\u7b2c\u4e8c\u4e2a\u6258\u7ba1\u9879\u76ee\u3002","title":"1 \u7b80\u4ecb"},{"location":"chap3/4Adv_Prometheus_setup/#2","text":"Prometheus \u76f8\u6bd4\u4e8e\u5176\u4ed6\u4f20\u7edf\u76d1\u63a7\u5de5\u5177\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a \u5177\u6709\u7531 metric \u540d\u79f0\u548c\u952e/\u503c\u5bf9\u6807\u8bc6\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u591a\u7ef4\u6570\u636e\u6a21\u578b \u6709\u4e00\u4e2a\u7075\u6d3b\u7684\u67e5\u8be2\u8bed\u8a00 \u4e0d\u4f9d\u8d56\u5206\u5e03\u5f0f\u5b58\u50a8\uff0c\u53ea\u548c\u672c\u5730\u78c1\u76d8\u6709\u5173 \u901a\u8fc7 HTTP \u7684\u670d\u52a1\u62c9\u53d6\u65f6\u95f4\u5e8f\u5217\u6570\u636e \u4e5f\u652f\u6301\u63a8\u9001\u7684\u65b9\u5f0f\u6765\u6dfb\u52a0\u65f6\u95f4\u5e8f\u5217\u6570\u636e \u8fd8\u652f\u6301\u901a\u8fc7\u670d\u52a1\u53d1\u73b0\u6216\u9759\u6001\u914d\u7f6e\u53d1\u73b0\u76ee\u6807 \u591a\u79cd\u56fe\u5f62\u548c\u4eea\u8868\u677f\u652f\u6301","title":"2 \u7279\u5f81"},{"location":"chap3/4Adv_Prometheus_setup/#3","text":"Prometheus \u7531\u591a\u4e2a\u7ec4\u4ef6\u7ec4\u6210\uff0c\u4f46\u662f\u5176\u4e2d\u8bb8\u591a\u7ec4\u4ef6\u662f\u53ef\u9009\u7684 Prometheus Server \uff1a\u7528\u4e8e\u6293\u53d6\u6307\u6807\u3001\u5b58\u50a8\u65f6\u95f4\u5e8f\u5217\u6570\u636e exporter \uff1a\u66b4\u9732\u6307\u6807\u8ba9\u4efb\u52a1\u6765\u6293 pushgateway \uff1apush \u7684\u65b9\u5f0f\u5c06\u6307\u6807\u6570\u636e\u63a8\u9001\u5230\u8be5\u7f51\u5173 alertmanager \uff1a\u5904\u7406\u62a5\u8b66\u7684\u62a5\u8b66\u7ec4\u4ef6 adhoc \uff1a\u7528\u4e8e\u6570\u636e\u67e5\u8be2 \u5927\u591a\u6570 Prometheus \u7ec4\u4ef6\u90fd\u662f\u7528 Go \u7f16\u5199\u7684\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u6784\u5efa\u548c\u90e8\u7f72\u4e3a\u9759\u6001\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002","title":"3 \u7ec4\u4ef6"},{"location":"chap3/4Adv_Prometheus_setup/#4","text":"\u4e0b\u56fe\u662f Prometheus \u5b98\u65b9\u63d0\u4f9b\u7684\u67b6\u6784\u53ca\u5176\u4e00\u4e9b\u76f8\u5173\u7684\u751f\u6001\u7cfb\u7edf\u7ec4\u4ef6\uff1a \u6574\u4f53\u6d41\u7a0b\u6bd4\u8f83\u7b80\u5355\uff0c Prometheus \u76f4\u63a5\u63a5\u6536\u6216\u8005\u901a\u8fc7\u4e2d\u95f4\u7684 Pushgateway \u7f51\u5173\u88ab\u52a8\u83b7\u53d6\u6307\u6807\u6570\u636e\uff0c\u5728\u672c\u5730\u5b58\u50a8\u6240\u6709\u7684\u83b7\u53d6\u7684\u6307\u6807\u6570\u636e\uff0c\u5e76\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u4e00\u4e9b\u89c4\u5219\u6574\u7406\uff0c\u7528\u6765\u751f\u6210\u4e00\u4e9b\u805a\u5408\u6570\u636e\u6216\u8005\u62a5\u8b66\u4fe1\u606f\uff0cGrafana \u6216\u8005\u5176\u4ed6\u5de5\u5177\u7528\u6765\u53ef\u89c6\u5316\u8fd9\u4e9b\u6570\u636e\u3002","title":"4 \u67b6\u6784"},{"location":"chap3/4Adv_Prometheus_setup/#5","text":"\u7531\u4e8e Prometheus \u662f Golang \u7f16\u5199\u7684\u7a0b\u5e8f\uff0c\u6240\u4ee5\u8981\u5b89\u88c5\u7684\u8bdd\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0b\u8f7d\u4e0b\u6765\u76f4\u63a5\u6267\u884c\u5373\u53ef\uff0c\u524d\u5f80\u5730\u5740\uff1a https://prometheus.io/download \u4e0b\u8f7d\u6211\u4eec\u5bf9\u5e94\u7684\u7248\u672c\u5373\u53ef\u3002 Prometheus \u662f\u901a\u8fc7\u4e00\u4e2a YAML \u914d\u7f6e\u6587\u4ef6\u6765\u8fdb\u884c\u542f\u52a8\u7684\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\u6765\u542f\u52a8\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a $ ./prometheus --config.file=prometheus.yml \u5176\u4e2d prometheus.yml \u6587\u4ef6\u7684\u57fa\u672c\u914d\u7f6e\u5982\u4e0b\uff1a global: scrape_interval: 15s evaluation_interval: 15s rule_files: # - \"first.rules\" # - \"second.rules\" scrape_configs: - job_name: prometheus static_configs: - targets: ['localhost:9090'] \u4e0a\u9762\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\u5305\u542b\u4e863\u4e2a\u6a21\u5757\uff1a global \u3001 rule_files \u548c scrape_configs \u3002","title":"5 \u5b89\u88c5"},{"location":"chap3/4Adv_Prometheus_setup/#1-global-prometheus-server","text":"scrape_interval \uff1a\u8868\u793a prometheus \u6293\u53d6 \u6307\u6807\u6570\u636e\u7684\u9891\u7387 \uff0c\u9ed8\u8ba4\u662f 15s \uff0c\u6211\u4eec\u53ef\u4ee5\u8986\u76d6\u8fd9\u4e2a\u503c evaluation_interval \uff1a\u7528\u6765 \u63a7\u5236\u8bc4\u4f30\u89c4\u5219\u7684\u9891\u7387 \uff0c prometheus \u4f7f\u7528\u89c4\u5219\u4ea7\u751f\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6216\u8005\u4ea7\u751f\u8b66\u62a5","title":"1.\u5176\u4e2d global \u6a21\u5757\u63a7\u5236 Prometheus Server \u7684\u5168\u5c40\u914d\u7f6e\uff1a"},{"location":"chap3/4Adv_Prometheus_setup/#2rule_files","text":"prometheus \u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a \u914d\u7f6e\u52a0\u8f7d\u89c4\u5219 \uff0c\u7528\u4e8e\u751f \u6210\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6216\u8005\u62a5\u8b66\u4fe1\u606f\uff0c\u5f53\u524d\u6211\u4eec\u6ca1\u6709\u914d\u7f6e\u4efb\u4f55\u89c4\u5219 \u3002","title":"2.rule_files \u6a21\u5757\u5236\u5b9a\u4e86\u89c4\u5219\u6240\u5728\u7684\u4f4d\u7f6e:"},{"location":"chap3/4Adv_Prometheus_setup/#3scrape_configs-prometheus","text":"\u7531\u4e8e prometheus \u901a\u8fc7 HTTP \u7684\u65b9\u5f0f\u6765\u66b4\u9732\u7684\u5b83\u672c\u8eab\u7684\u76d1\u63a7\u6570\u636e\uff0c prometheus \u4e5f\u80fd\u591f\u76d1\u63a7\u672c\u8eab\u7684\u5065\u5eb7\u60c5\u51b5\u3002 \u5728\u9ed8\u8ba4\u7684\u914d\u7f6e\u91cc\u6709\u4e00\u4e2a\u5355\u72ec\u7684 job \uff0c\u53eb\u505a prometheus \uff0c\u5b83\u91c7\u96c6 prometheus \u670d\u52a1\u672c\u8eab\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e \u3002 \u8fd9\u4e2a job \u5305\u542b\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u3001\u9759\u6001\u914d\u7f6e\u7684\u76ee\u6807\uff1a\u76d1\u542c localhost \u4e0a\u7684 9090 \u7aef\u53e3\u3002prometheus \u9ed8\u8ba4\u4f1a\u901a\u8fc7\u76ee\u6807\u7684 /metrics \u8def\u5f84\u91c7\u96c6 metrics \u3002\u6240\u4ee5\uff0c\u9ed8\u8ba4\u7684 job \u901a\u8fc7 URL\uff1a http://localhost:9090/metrics \u91c7\u96c6 metrics \u3002 \u6536\u96c6\u5230\u7684\u65f6\u95f4\u5e8f\u5217\u5305\u542b prometheus \u670d\u52a1\u672c\u8eab\u7684\u72b6\u6001\u548c\u6027\u80fd\u3002\u5982\u679c\u6211\u4eec\u8fd8\u6709\u5176\u4ed6\u7684\u8d44\u6e90\u9700\u8981\u76d1\u63a7\u7684\u8bdd\uff0c\u76f4\u63a5\u914d\u7f6e\u5728\u8be5\u6a21\u5757\u4e0b\u9762\u5c31\u53ef\u4ee5\u4e86\u3002 \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u662f\u8981\u8dd1\u5728 Kubernetes \u7cfb\u7edf\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7528 Docker \u955c\u50cf\u7684\u65b9\u5f0f\u8fd0\u884c\u5373\u53ef\u3002 \u4e3a\u4e86\u80fd\u591f\u65b9\u4fbf\u7684\u7ba1\u7406\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u8fd9\u91cc\u5c06 prometheus.yml \u6587\u4ef6\u7528 ConfigMap \u7684\u5f62\u5f0f\u8fdb\u884c\u7ba1\u7406\uff1a\uff08 prometheus-cm.yaml \uff09 apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] data: prometheus.yml: | gloabl: scrape_configs: \u6211\u4eec\u8fd9\u91cc\u6682\u65f6\u53ea\u914d\u7f6e\u4e86\u5bf9 prometheus \u7684\u76d1\u63a7\uff0c\u7136\u540e\u521b\u5efa\u8be5\u8d44\u6e90\u5bf9\u8c61: $ kubectl create -f prometheus-cm.yaml configmap \"prometheus-config\" created \u914d\u7f6e\u6587\u4ef6\u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u4ee5\u540e\u5982\u679c\u6211\u4eec\u6709\u65b0\u7684\u8d44\u6e90\u9700\u8981\u88ab\u76d1\u63a7\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4e0a\u9762\u7684 ConfigMap \u5bf9\u8c61\u66f4\u65b0\u5373\u53ef\u3002\u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa prometheus \u7684 Pod \u8d44\u6e90\uff1a( prometheus-deploy.yaml ) apiVersion: extensions/v1beta1 kind: Deployment metadata: name: prometheus namespace: kube-ops labels: app: prometheus spec: template: metadata: labels: app: prometheus spec: serviceAccountName: prometheus containers: - image: prom/prometheus:v2.4.3 name: prometheus args: - \"--config.file=/etc/prometheus/prometheus.yml\" - \"--storage.tsdb.path=/prometheus\" - \"--storage.tsdb.retention=24h\" - \"--web.enable-admin-api\" # \u63a7\u5236\u5bf9admin HTTP API\u7684\u8bbf\u95ee\uff0c\u5176\u4e2d\u5305\u62ec\u5220\u9664\u65f6\u95f4\u5e8f\u5217\u7b49\u529f\u80fd - \"--web.enable-lifecycle\" # \u652f\u6301\u70ed\u66f4\u65b0\uff0c\u76f4\u63a5\u6267\u884clocalhost:9090/-/reload\u7acb\u5373\u751f\u6548 ports: - containerPort: 9090 protocol: TCP name: http volumeMounts: - mountPath: \"/prometheus\" subPath: prometheus name: data - mountPath: \"/etc/prometheus\" name: config-volume resources: requests: cpu: 100m memory: 512Mi limits: cpu: 100m memory: 512Mi securityContext: runAsUser: 0 volumes: - name: data persistentVolumeClaim: claimName: prometheus - configMap: name: prometheus-config name: config-volume \u6211\u4eec\u5728\u542f\u52a8\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u9664\u4e86\u6307\u5b9a\u4e86 prometheus.yml \u6587\u4ef6\u4e4b\u5916\uff0c \u8fd8\u901a\u8fc7\u53c2\u6570 storage.tsdb.path \u6307\u5b9a\u4e86 TSDB \u6570\u636e\u7684\u5b58\u50a8\u8def\u5f84\u3002 \u901a\u8fc7 storage.tsdb.retention \u8bbe\u7f6e\u4e86 \u4fdd\u7559\u591a\u957f\u65f6\u95f4\u7684\u6570\u636e \u3002 \u8fd8\u6709\u4e0b\u9762\u7684 web.enable-admin-api \u53c2\u6570\u53ef\u4ee5\u7528\u6765\u5f00\u542f\u5bf9 admin api \u7684\u8bbf\u95ee\u6743\u9650\u3002 \u53c2\u6570 web.enable-lifecycle \u975e\u5e38\u91cd\u8981\uff0c\u7528\u6765\u5f00\u542f\u652f\u6301\u70ed\u66f4\u65b0\u7684\uff0c\u6709\u4e86\u8fd9\u4e2a\u53c2\u6570\u4e4b\u540e\uff0c prometheus.yml \u914d\u7f6e\u6587\u4ef6\u53ea\u8981\u66f4\u65b0\u4e86\uff0c\u901a\u8fc7\u6267\u884c localhost:9090/-/reload \u5c31\u4f1a\u7acb\u5373\u751f\u6548\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u52a0\u4e0a\u8fd9\u4e2a\u53c2\u6570\u3002 \u6211\u4eec\u8fd9\u91cc\u5c06 prometheus.yml \u6587\u4ef6\u5bf9\u5e94\u7684 ConfigMap \u5bf9\u8c61\u901a\u8fc7 volume \u7684\u5f62\u5f0f\u6302\u8f7d\u8fdb\u4e86 Pod \uff0c\u8fd9\u6837 ConfigMap \u66f4\u65b0\u540e\uff0c\u5bf9\u5e94\u7684 Pod \u91cc\u9762\u7684\u6587\u4ef6\u4e5f\u4f1a\u70ed\u66f4\u65b0\u7684. \u7136\u540e\u6211\u4eec\u518d\u6267\u884c\u4e0a\u9762\u7684 reload \u8bf7\u6c42\uff0c Prometheus \u914d\u7f6e\u5c31\u751f\u6548\u4e86\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u4e3a\u4e86\u5c06\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u8fdb\u884c\u6301\u4e45\u5316\uff0c\u6211\u4eec\u5c06\u6570\u636e\u76ee\u5f55\u548c\u4e00\u4e2a pvc \u5bf9\u8c61\u8fdb\u884c\u4e86\u7ed1\u5b9a\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u63d0\u524d\u521b\u5efa\u597d\u8fd9\u4e2a pvc \u5bf9\u8c61\uff1a( prometheus-volume.yaml ) apiVersion: v1 kind: PersistentVolume metadata: name: prometheus spec: capacity: storage: 10Gi accessModes: - ReadWriteOnce persistentVolumeReclaimPolicy: Recycle nfs: server: 10.151.30.57 path: /data/k8s --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: prometheus namespace: kube-ops spec: accessModes: - ReadWriteOnce resources: requests: storage: 10Gi \u6211\u4eec\u8fd9\u91cc\u7b80\u5355\u7684\u901a\u8fc7 NFS \u4f5c\u4e3a\u5b58\u50a8\u540e\u7aef\u521b\u5efa\u4e00\u4e2a pv\u3001pvc \u5bf9\u8c61\uff1a $ kubectl create -f prometheus-volume.yaml \u9664\u4e86\u4e0a\u9762\u7684\u6ce8\u610f\u4e8b\u9879\u5916\uff0c\u6211\u4eec\u8fd9\u91cc\u8fd8\u9700\u8981\u914d\u7f6e rbac \u8ba4\u8bc1\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5728 prometheus \u4e2d\u53bb\u8bbf\u95ee Kubernetes \u7684\u76f8\u5173\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u7ba1\u7406\u4e86\u4e00\u4e2a\u540d\u4e3a prometheus \u7684 serviceAccount \u5bf9\u8c61\uff1a( prometheus-rbac.yaml ) apiVersion: v1 kind: ServiceAccount metadata: name: prometheus namespace: kube-ops --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: prometheus rules: - apiGroups: [\"\"] resources: - nodes - services - endpoints - pods - nodes/proxy verbs: [\"get\", \"list\", \"watch\"] - apiGroups: [\"\"] resources: - configmaps verbs: [\"get\"] - nonResourceURLs: [\"/metics\"] # \u5bf9\u975e\u8d44\u6e90\u578b endpoint metrics \u8fdb\u884c get \u64cd\u4f5c verbs: [\"get\"] --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: prometheus roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: prometheus subjects: - kind: ServiceAccount name: prometheus namespace: kube-ops \u7531\u4e8e\u6211\u4eec\u8981\u83b7\u53d6\u7684\u8d44\u6e90\u4fe1\u606f\uff0c\u5728\u6bcf\u4e00\u4e2a namespace \u4e0b\u9762\u90fd\u6709\u53ef\u80fd\u5b58\u5728\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f ClusterRole \u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u7684\u6743\u9650\u89c4\u5219\u58f0\u660e\u4e2d\u6709\u4e00\u4e2a nonResourceURLs \u7684\u5c5e\u6027\uff0c\u662f\u7528\u6765\u5bf9\u975e\u8d44\u6e90\u578b metrics \u8fdb\u884c\u64cd\u4f5c\u7684\u6743\u9650\u58f0\u660e\uff0c\u8fd9\u4e2a\u5728\u4ee5\u524d\u6211\u4eec\u5f88\u5c11\u9047\u5230\u8fc7\uff0c\u7136\u540e\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a $ kubectl create -f prometheus-rbac.yaml serviceaccount \"prometheus\" created clusterrole.rbac.authorization.k8s.io \"prometheus\" created clusterrolebinding.rbac.authorization.k8s.io \"prometheus\" created \u8fd8\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u5730\u65b9\u662f\u6211\u4eec\u8fd9\u91cc\u5fc5\u987b\u8981\u6dfb\u52a0\u4e00\u4e2a securityContext \u7684\u5c5e\u6027\u5728 prometheus deployment \uff0c\u5c06\u5176\u4e2d\u7684 runAsUser \u8bbe\u7f6e\u4e3a 0 \uff0c\u8fd9\u662f\u56e0\u4e3a\u73b0\u5728\u7684 prometheus \u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u7528\u6237\u662f nobody \uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u4e0b\u9762\u7684 permission denied \u4e4b\u7c7b\u7684\u6743\u9650\u9519\u8bef\uff1a level=error ts=2018-10-22T14:34:58.632016274Z caller=main.go:617 err=\"opening storage failed: lock DB directory: open /data/lock: permission denied","title":"3.scrape_configs \u7528\u4e8e\u63a7\u5236 prometheus \u76d1\u63a7\u54ea\u4e9b\u8d44\u6e90\u3002"},{"location":"chap3/4Adv_Prometheus_setup/#4promethues","text":"$ kubectl create -f prometheus-deploy.yaml deployment.extensions \"prometheus\" created $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE prometheus-6dd775cbff-zb69l 1/1 Running 0 20m $ kubectl logs -f prometheus-6dd775cbff-zb69l -n kube-ops......level=info ts=2018-10-22T14:44:40.535385503Z caller=main.go:523 msg=\"Server is ready to receive web requests.\" Pod \u521b\u5efa\u6210\u529f\u540e\uff0c\u4e3a\u4e86\u80fd\u591f\u5728\u5916\u90e8\u8bbf\u95ee\u5230 prometheus \u7684\u5916\u90e8\u670d\u52a1\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u521b\u5efa\u4e00\u4e2a Service \u5bf9\u8c61\uff1a( prometheus-svc.yaml ) apiVersion: v1 kind: Service metadata: name: prometheus namespace: kube-ops labels: app: prometheus spec: selector: app: prometheus type: NodePort ports: - name: web port: 9090 targetPort: http \u4e3a\u4e86\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u6211\u4eec\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a NodePort \u7c7b\u578b\u7684\u670d\u52a1\uff0c\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a Ingress \u5bf9\u8c61\uff0c\u901a\u8fc7\u57df\u540d\u6765\u8fdb\u884c\u8bbf\u95ee\uff1a $ kubectl create -f prometheus-svc.yaml service \"prometheus\" created $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.111.118.104 <none> 9090:30987/TCP 24s \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 http://\u4efb\u610f\u8282\u70b9IP:30987 \u8bbf\u95ee prometheus \u7684 \u5916\u90e8\u670d\u52a1\u4e86\u3002 \u4e3a\u4e86\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c prometheus \u6240\u6709\u7684\u6570\u636e\u90fd\u662f\u4f7f\u7528\u7684 UTC \u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u9ed8\u8ba4\u6253\u5f00\u7684 dashboard \u4e2d\u6709\u8fd9\u6837\u4e00\u4e2a\u8b66\u544a\uff0c\u6211\u4eec\u9700\u8981\u5728\u67e5\u8be2\u7684\u65f6\u5019\u6307\u5b9a\u6211\u4eec\u5f53\u524d\u7684\u65f6\u95f4\u624d\u53ef\u4ee5\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u76d1\u63a7\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e9b\u76d1\u63a7\u76ee\u6807 \u7531\u4e8e\u6211\u4eec\u73b0\u5728\u8fd8\u6ca1\u6709\u914d\u7f6e\u4efb\u4f55\u7684\u62a5\u8b66\u4fe1\u606f\uff0c\u6240\u4ee5 Alerts \u83dc\u5355\u4e0b\u9762\u73b0\u5728\u6ca1\u6709\u4efb\u4f55\u6570\u636e\uff0c\u9694\u4e00\u4f1a\u513f\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb Graph \u83dc\u5355\u4e0b\u9762\u67e5\u770b\u6211\u4eec\u6293\u53d6\u7684 prometheus \u672c\u8eab\u7684\u4e00\u4e9b\u76d1\u63a7\u6570\u636e\u4e86\uff0c\u5176\u4e2d insert metrics at cursor \u4e0b\u9762\u5c31\u662f\u6211\u4eec\u641c\u96c6\u5230\u7684\u4e00\u4e9b\u76d1\u63a7\u6570\u636e\u6307\u6807\uff1a \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u5c31\u9009\u62e9 scrape_duration_seconds \u8fd9\u4e2a\u6307\u6807\uff0c\u7136\u540e\u70b9\u51fb Execute\uff0c\u5982\u679c\u8fd9\u4e2a\u65f6\u5019\u6ca1\u6709\u67e5\u8be2\u5230\u4efb\u4f55\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5207\u6362\u5230 Graph \u8fd9\u4e2a tab `\u4e0b\u9762\u91cd\u65b0\u9009\u62e9\u4e0b\u65f6\u95f4\uff0c\u9009\u62e9\u5230\u5f53\u524d\u7684\u65f6\u95f4\u70b9\uff0c\u91cd\u65b0\u6267\u884c\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u56fe\u8868\u6570\u636e\u4e86\uff1a \u9664\u4e86\u7b80\u5355\u7684\u76f4\u63a5\u4f7f\u7528\u91c7\u96c6\u5230\u7684\u4e00\u4e9b\u76d1\u63a7\u6307\u6807\u6570\u636e\u4e4b\u5916\uff0c\u8fd9\u4e2a\u65f6\u5019\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5f3a\u5927\u7684 PromQL \u5de5\u5177\uff0c PromQL \u5176\u5b9e\u5c31\u662f prometheus \u4fbf\u4e8e\u6570\u636e\u805a\u5408\u5c55\u793a\u5f00\u53d1\u7684\u4e00\u5957 ad hoc \u67e5\u8be2\u8bed\u8a00\u7684\uff0c\u4f60\u60f3\u8981\u67e5\u4ec0\u4e48\u627e\u5bf9\u5e94\u51fd\u6570\u53d6\u4f60\u7684\u6570\u636e\u597d\u4e86\u3002","title":"4.\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u6dfb\u52a0promethues\u7684\u8d44\u6e90\u5bf9\u8c61\u4e86\uff1a"},{"location":"chap3/50PrometheusAlert/","text":"\u7b2c\u5341\u4e00\u8282 Prometheus\u4e2d\u4f7f\u7528PrometheusAlert\u8fdb\u884c\u805a\u5408\u62a5\u8b66 \u672c\u8eabprometheus\u5df2\u7ecf\u6709\u4e86alertmanager\u8fd9\u4e2a\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u4e00\u4e9b\u62a5\u8b66\u5a92\u4ecb\u6bd4\u5982email wechat\u7b49\uff0c\u4e3a\u4ec0\u4e48\u6211\u8fd8\u8fd8\u8981\u4f7f\u7528prometheusalert\u5462\uff1f Prometheus Alert\u662f\u5f00\u6e90\u7684\u8fd0\u7ef4\u544a\u8b66\u4e2d\u5fc3\u6d88\u606f\u8f6c\u53d1\u7cfb\u7edf,\u652f\u6301\u4e3b\u6d41\u7684\u76d1\u63a7\u7cfb\u7edfPrometheus,Zabbix,\u65e5\u5fd7\u7cfb\u7edfGraylog\u548c\u6570\u636e\u53ef\u89c6\u5316\u7cfb\u7edfGrafana\u53d1\u51fa\u7684\u9884\u8b66\u6d88\u606f,\u652f\u6301\u9489\u9489,\u5fae\u4fe1,\u534e\u4e3a\u4e91\u77ed\u4fe1,\u817e\u8baf\u4e91\u77ed\u4fe1,\u817e\u8baf\u4e91\u7535\u8bdd,\u963f\u91cc\u4e91\u77ed\u4fe1,\u963f\u91cc\u4e91\u7535\u8bdd\u7b49\uff0c \u53ef\u4ee5\u770b\u51faprometheusalert\u76f8\u6bd4\u548calertmanager\u5185\u7f6e\u7684\u62a5\u8b66\u5a92\u4ecb\u76f8\u6bd4\u652f\u6301\u7684\u66f4\u5168\u9762\uff0c\u5e76\u4e14\u914d\u7f6e\u548c\u8c03\u8bd5\u66f4\u65b9\u4fbf\uff0cprometheusalert \u5e76\u4e0d\u80fd\u53d6\u4ee3alertmanager\uff0c\u800c\u662f\u8981\u4f5c\u4e3awebhoook\u4e0ealertmanager\u7ed3\u5408\u4f7f\u7528\u3002 #Kubernetes\u4e2d\u8fd0\u884c\u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u884c\u5373\u53ef(\u6ce8\u610f\u9ed8\u8ba4\u7684\u90e8\u7f72\u6a21\u7248\u4e2d\u672a\u6302\u8f7d\u6a21\u7248\u6570\u636e\u5e93\u6587\u4ef6 db/PrometheusAlertDB.db\uff0c\u4e3a\u9632\u6b62\u6a21\u7248\u6570\u636e\u4e22\u5931\uff0c\u8bf7\u81ea\u884c\u589e\u52a0\u6302\u8f7d\u914d\u7f6e ) wget https://raw.githubusercontent.com/feiyu563/PrometheusAlert/master/example/kubernetes/PrometheusAlert-Deployment.yaml \u6ce8\u610f\uff1a\u8fd9\u91cc\u9700\u8981\u4fee\u6539\u4e00\u4e0b\u6587\u4ef6\u4e2dvolumemount\u4e2d\u4f7f\u7528\u7684configmap\u540d\u79f0\uff0c\u53c2\u89c1 https://github.com/feiyu563/PrometheusAlert/issues(2021-01-26) \u4fee\u6539\u540e\u6587\u4ef6\u5982\u4e0b # apiVersion: v1 # kind: Namespace # metadata: # name: monitoring --- apiVersion: v1 data: app.conf: | #---------------------\u2193\u5168\u5c40\u914d\u7f6e----------------------- appname = PrometheusAlert #\u76d1\u542c\u7aef\u53e3 httpport = 8080 runmode = dev #\u8bbe\u7f6e\u4ee3\u7406 proxy = http://123.123.123.123:8080 proxy = #\u5f00\u542fJSON\u8bf7\u6c42 copyrequestbody = true #\u544a\u8b66\u6d88\u606f\u6807\u9898 title=PrometheusAlert #\u94fe\u63a5\u5230\u544a\u8b66\u5e73\u53f0\u5730\u5740 GraylogAlerturl=http://graylog.org #\u9489\u9489\u544a\u8b66 \u544a\u8b66logo\u56fe\u6807\u5730\u5740 logourl=https://raw.githubusercontent.com/feiyu563/PrometheusAlert/master/doc/alert-center.png #\u9489\u9489\u544a\u8b66 \u6062\u590dlogo\u56fe\u6807\u5730\u5740 rlogourl=https://raw.githubusercontent.com/feiyu563/PrometheusAlert/master/doc/alert-center.png #\u77ed\u4fe1\u544a\u8b66\u7ea7\u522b(\u7b49\u4e8e3\u5c31\u8fdb\u884c\u77ed\u4fe1\u544a\u8b66) \u544a\u8b66\u7ea7\u522b\u5b9a\u4e49 0 \u4fe1\u606f,1 \u8b66\u544a,2 \u4e00\u822c\u4e25\u91cd,3 \u4e25\u91cd,4 \u707e\u96be messagelevel=3 #\u7535\u8bdd\u544a\u8b66\u7ea7\u522b(\u7b49\u4e8e4\u5c31\u8fdb\u884c\u8bed\u97f3\u544a\u8b66) \u544a\u8b66\u7ea7\u522b\u5b9a\u4e49 0 \u4fe1\u606f,1 \u8b66\u544a,2 \u4e00\u822c\u4e25\u91cd,3 \u4e25\u91cd,4 \u707e\u96be phonecalllevel=4 #\u9ed8\u8ba4\u62e8\u6253\u53f7\u7801(\u9875\u9762\u6d4b\u8bd5\u77ed\u4fe1\u548c\u7535\u8bdd\u529f\u80fd\u9700\u8981\u914d\u7f6e\u6b64\u9879) defaultphone=xxxxxxxx #\u6545\u969c\u6062\u590d\u662f\u5426\u542f\u7528\u7535\u8bdd\u901a\u77e50\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f phonecallresolved=0 #\u81ea\u52a8\u544a\u8b66\u6291\u5236(\u81ea\u52a8\u544a\u8b66\u6291\u5236\u662f\u9ed8\u8ba4\u540c\u4e00\u4e2a\u544a\u8b66\u6e90\u7684\u544a\u8b66\u4fe1\u606f\u53ea\u53d1\u9001\u544a\u8b66\u7ea7\u522b\u6700\u9ad8\u7684\u7b2c\u4e00\u6761\u544a\u8b66\u4fe1\u606f,\u5176\u4ed6\u6d88\u606f\u9ed8\u8ba4\u5c4f\u853d,\u8fd9\u4e48\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u51cf\u5c11\u76f8\u540c\u544a\u8b66\u6765\u6e90\u7684\u6d88\u606f\u6570\u91cf,\u9632\u6b62\u544a\u8b66\u70b8\u5f39,0\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f) silent=0 #\u662f\u5426\u524d\u53f0\u8f93\u51fafile or console logtype=file #\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84 logpath=logs/prometheusalertcenter.log #\u8f6c\u6362Prometheus,graylog\u544a\u8b66\u6d88\u606f\u7684\u65f6\u533a\u4e3aCST\u65f6\u533a(\u5982\u9ed8\u8ba4\u5df2\u7ecf\u662fCST\u65f6\u533a\uff0c\u8bf7\u52ff\u5f00\u542f) prometheus_cst_time=0 #\u6570\u636e\u5e93\u9a71\u52a8\uff0c\u652f\u6301sqlite3\uff0cmysql,\u5982\u4f7f\u7528mysql\uff0c\u8bf7\u5f00\u542fdb_host,db_user,db_password,db_name\u7684\u6ce8\u91ca db_driver=sqlite3 #db_host=127.0.0.1:3306 #db_user=root #db_password=root #db_name=prometheusalert #---------------------\u2193webhook----------------------- #\u662f\u5426\u5f00\u542f\u9489\u9489\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-dingding=1 #\u9ed8\u8ba4\u9489\u9489\u673a\u5668\u4eba\u5730\u5740 ddurl=https://oapi.dingtalk.com/robot/send?access_token=xxxxx #\u662f\u5426\u5f00\u542f @\u6240\u6709\u4eba(0\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f) dd_isatall=1 #\u662f\u5426\u5f00\u542f\u5fae\u4fe1\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-weixin=0 #\u9ed8\u8ba4\u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5730\u5740 wxurl=https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxx #\u662f\u5426\u5f00\u542f\u98de\u4e66\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-feishu=0 #\u9ed8\u8ba4\u98de\u4e66\u673a\u5668\u4eba\u5730\u5740 fsurl=https://open.feishu.cn/open-apis/bot/hook/xxxxxxxxx #---------------------\u2193\u817e\u8baf\u4e91\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542f\u817e\u8baf\u4e91\u77ed\u4fe1\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-txdx=0 #\u817e\u8baf\u4e91\u77ed\u4fe1\u63a5\u53e3key TXY_DX_appkey=xxxxx #\u817e\u8baf\u4e91\u77ed\u4fe1\u6a21\u7248ID \u817e\u8baf\u4e91\u77ed\u4fe1\u6a21\u7248\u914d\u7f6e\u53ef\u53c2\u8003 prometheus\u544a\u8b66:{1} TXY_DX_tpl_id=xxxxx #\u817e\u8baf\u4e91\u77ed\u4fe1sdk app id TXY_DX_sdkappid=xxxxx #\u817e\u8baf\u4e91\u77ed\u4fe1\u7b7e\u540d \u6839\u636e\u81ea\u5df1\u5ba1\u6838\u901a\u8fc7\u7684\u7b7e\u540d\u6765\u586b\u5199 TXY_DX_sign=\u817e\u8baf\u4e91 #\u662f\u5426\u5f00\u542f\u817e\u8baf\u4e91\u7535\u8bdd\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-txdh=0 #\u817e\u8baf\u4e91\u7535\u8bdd\u63a5\u53e3key TXY_DH_phonecallappkey=xxxxx #\u817e\u8baf\u4e91\u7535\u8bdd\u6a21\u7248ID TXY_DH_phonecalltpl_id=xxxxx #\u817e\u8baf\u4e91\u7535\u8bddsdk app id TXY_DH_phonecallsdkappid=xxxxx #---------------------\u2193\u534e\u4e3a\u4e91\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542f\u534e\u4e3a\u4e91\u77ed\u4fe1\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-hwdx=0 #\u534e\u4e3a\u4e91\u77ed\u4fe1\u63a5\u53e3key HWY_DX_APP_Key=xxxxxxxxxxxxxxxxxxxxxx #\u534e\u4e3a\u4e91\u77ed\u4fe1\u63a5\u53e3Secret HWY_DX_APP_Secret=xxxxxxxxxxxxxxxxxxxxxx #\u534e\u4e3a\u4e91APP\u63a5\u5165\u5730\u5740(\u7aef\u53e3\u63a5\u53e3\u5730\u5740) HWY_DX_APP_Url=https://rtcsms.cn-north-1.myhuaweicloud.com:10743 #\u534e\u4e3a\u4e91\u77ed\u4fe1\u6a21\u677fID HWY_DX_Templateid=xxxxxxxxxxxxxxxxxxxxxx #\u534e\u4e3a\u4e91\u7b7e\u540d\u540d\u79f0\uff0c\u5fc5\u987b\u662f\u5df2\u5ba1\u6838\u901a\u8fc7\u7684\uff0c\u4e0e\u6a21\u677f\u7c7b\u578b\u4e00\u81f4\u7684\u7b7e\u540d\u540d\u79f0,\u6309\u7167\u81ea\u5df1\u7684\u5b9e\u9645\u7b7e\u540d\u586b\u5199 HWY_DX_Signature=\u534e\u4e3a\u4e91 #\u534e\u4e3a\u4e91\u7b7e\u540d\u901a\u9053\u53f7 HWY_DX_Sender=xxxxxxxxxx #---------------------\u2193\u963f\u91cc\u4e91\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542f\u963f\u91cc\u4e91\u77ed\u4fe1\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-alydx=0 #\u963f\u91cc\u4e91\u77ed\u4fe1\u4e3b\u8d26\u53f7AccessKey\u7684ID ALY_DX_AccessKeyId=xxxxxxxxxxxxxxxxxxxxxx #\u963f\u91cc\u4e91\u77ed\u4fe1\u63a5\u53e3\u5bc6\u94a5 ALY_DX_AccessSecret=xxxxxxxxxxxxxxxxxxxxxx #\u963f\u91cc\u4e91\u77ed\u4fe1\u7b7e\u540d\u540d\u79f0 ALY_DX_SignName=\u963f\u91cc\u4e91 #\u963f\u91cc\u4e91\u77ed\u4fe1\u6a21\u677fID ALY_DX_Template=xxxxxxxxxxxxxxxxxxxxxx #\u662f\u5426\u5f00\u542f\u963f\u91cc\u4e91\u7535\u8bdd\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-alydh=0 #\u963f\u91cc\u4e91\u7535\u8bdd\u4e3b\u8d26\u53f7AccessKey\u7684ID ALY_DH_AccessKeyId=xxxxxxxxxxxxxxxxxxxxxx #\u963f\u91cc\u4e91\u7535\u8bdd\u63a5\u53e3\u5bc6\u94a5 ALY_DH_AccessSecret=xxxxxxxxxxxxxxxxxxxxxx #\u963f\u91cc\u4e91\u7535\u8bdd\u88ab\u53eb\u663e\u53f7\uff0c\u5fc5\u987b\u662f\u5df2\u8d2d\u4e70\u7684\u53f7\u7801 ALY_DX_CalledShowNumber=xxxxxxxxx #\u963f\u91cc\u4e91\u7535\u8bdd\u6587\u672c\u8f6c\u8bed\u97f3\uff08TTS\uff09\u6a21\u677fID ALY_DH_TtsCode=xxxxxxxx #---------------------\u2193\u5bb9\u8054\u4e91\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542f\u5bb9\u8054\u4e91\u7535\u8bdd\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f RLY_DH_open-rlydh=0 #\u5bb9\u8054\u4e91\u57fa\u7840\u63a5\u53e3\u5730\u5740 RLY_URL=https://app.cloopen.com:8883/2013-12-26/Accounts/ #\u5bb9\u8054\u4e91\u540e\u53f0SID RLY_ACCOUNT_SID=xxxxxxxxxxx #\u5bb9\u8054\u4e91api-token RLY_ACCOUNT_TOKEN=xxxxxxxxxx #\u5bb9\u8054\u4e91app_id RLY_APP_ID=xxxxxxxxxxxxx #---------------------\u2193\u90ae\u4ef6\u914d\u7f6e----------------------- #\u662f\u5426\u5f00\u542f\u90ae\u4ef6 open-email=0 #\u90ae\u4ef6\u53d1\u4ef6\u670d\u52a1\u5668\u5730\u5740 Email_host=smtp.qq.com #\u90ae\u4ef6\u53d1\u4ef6\u670d\u52a1\u5668\u7aef\u53e3 Email_port=465 #\u90ae\u4ef6\u5e10\u53f7 Email_user=xxxxxxx@qq.com #\u90ae\u4ef6\u5bc6\u7801 Email_password=xxxxxx #\u90ae\u4ef6\u6807\u9898 Email_title=\u8fd0\u7ef4\u544a\u8b66 #\u9ed8\u8ba4\u53d1\u9001\u90ae\u7bb1 Default_emails=xxxxx@qq.com,xxxxx@qq.com #---------------------\u2193\u4e03\u964c\u4e91\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542f\u4e03\u964c\u77ed\u4fe1\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-7moordx=0 #\u4e03\u964c\u8d26\u6237ID 7MOOR_ACCOUNT_ID=Nxxx #\u4e03\u964c\u8d26\u6237APISecret 7MOOR_ACCOUNT_APISECRET=xxx #\u4e03\u964c\u8d26\u6237\u77ed\u4fe1\u6a21\u677f\u7f16\u53f7 7MOOR_DX_TEMPLATENUM=n #\u6ce8\u610f\uff1a\u4e03\u964c\u77ed\u4fe1\u53d8\u91cf\u8fd9\u91cc\u53ea\u7528\u4e00\u4e2avar1\uff0c\u5728\u4ee3\u7801\u91cc\u5199\u6b7b\u4e86\u3002 #----------- #\u662f\u5426\u5f00\u542f\u4e03\u964cwebcall\u8bed\u97f3\u901a\u77e5\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-7moordh=0 #\u8bf7\u5728\u4e03\u964c\u5e73\u53f0\u6dfb\u52a0\u865a\u62df\u670d\u52a1\u53f7\u3001\u6587\u672c\u8282\u70b9 #\u4e03\u964c\u8d26\u6237webcall\u7684\u865a\u62df\u670d\u52a1\u53f7 7MOOR_WEBCALL_SERVICENO=xxx # \u6587\u672c\u8282\u70b9\u91cc\u88ab\u66ff\u6362\u7684\u53d8\u91cf\uff0c\u6211\u914d\u7f6e\u7684\u662ftext\u3002\u5982\u679c\u88ab\u66ff\u6362\u7684\u53d8\u91cf\u4e0d\u662ftext\uff0c\u8bf7\u4fee\u6539\u6b64\u914d\u7f6e 7MOOR_WEBCALL_VOICE_VAR=text #---------------------\u2193telegram\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542ftelegram\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-tg=0 #tg\u673a\u5668\u4ebatoken TG_TOKEN=xxxxx #tg\u6d88\u606f\u6a21\u5f0f \u4e2a\u4eba\u6d88\u606f\u6216\u8005\u9891\u9053\u6d88\u606f 0\u4e3a\u5173\u95ed(\u63a8\u9001\u7ed9\u4e2a\u4eba)\uff0c1\u4e3a\u5f00\u542f(\u63a8\u9001\u7ed9\u9891\u9053) TG_MODE_CHAN=0 #tg\u7528\u6237ID TG_USERID=xxxxx #tg\u9891\u9053name TG_CHANNAME=xxxxx #tg api\u5730\u5740, \u53ef\u4ee5\u914d\u7f6e\u4e3a\u4ee3\u7406\u5730\u5740 #TG_API_PROXY=\"https://api.telegram.org/bot%s/%s\" #---------------------\u2193workwechat\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542fworkwechat\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-workwechat=0 # \u4f01\u4e1aID WorkWechat_CropID=xxxxx # \u5e94\u7528ID WorkWechat_AgentID=xxxx # \u5e94\u7528secret WorkWechat_AgentSecret=xxxx # \u63a5\u53d7\u7528\u6237 WorkWechat_ToUser=\"zhangsan|lisi\" # \u63a5\u53d7\u90e8\u95e8 WorkWechat_ToParty=\"ops|dev\" # \u63a5\u53d7\u6807\u7b7e WorkWechat_ToTag=\"\" # \u6d88\u606f\u7c7b\u578b, \u6682\u65f6\u53ea\u652f\u6301markdown # WorkWechat_Msgtype = \"markdown\" user.csv: | 2019\u5e744\u670810\u65e5,15888888881,\u5c0f\u5f20,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670811\u65e5,15888888882,\u5c0f\u674e,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670812\u65e5,15888888883,\u5c0f\u738b,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670813\u65e5,15888888884,\u5c0f\u5b8b,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 kind: ConfigMap metadata: name: prometheus-alert-center-conf namespace: monitoring --- apiVersion: apps/v1 kind: Deployment metadata: labels: app: prometheus-alert-center alertname: prometheus-alert-center name: prometheus-alert-center # namespace: monitoring spec: replicas: 1 selector: matchLabels: app: prometheus-alert-center alertname: prometheus-alert-center template: metadata: labels: app: prometheus-alert-center alertname: prometheus-alert-center spec: containers: - image: feiyu563/prometheus-alert name: prometheus-alert-center env: - name: TZ value: \"Asia/Shanghai\" ports: - containerPort: 8080 name: http resources: limits: cpu: 200m memory: 200Mi requests: cpu: 100m memory: 100Mi volumeMounts: - name: prometheus-alert-center-conf-map mountPath: /app/conf/app.conf subPath: app.conf - name: prometheus-alert-center-conf-map mountPath: /app/user.csv subPath: user.csv volumes: - name: prometheus-alert-center-conf-map configMap: name: prometheus-alert-center-conf items: - key: app.conf path: app.conf - key: user.csv path: user.csv --- apiVersion: v1 kind: Service metadata: labels: alertname: prometheus-alert-center name: prometheus-alert-center # namespace: monitoring annotations: prometheus.io/scrape: 'true' prometheus.io/port: '8080' spec: ports: - name: http port: 8080 targetPort: http selector: app: prometheus-alert-center --- # apiVersion: networking.k8s.io/v1beta1 # kind: Ingress # metadata: # annotations: # kubernetes.io/ingress.class: nginx # name: prometheus-alert-center # namespace: monitoring # spec: # rules: # - host: alert-center.local # http: # paths: # - backend: # serviceName: prometheus-alert-center # servicePort: 8080 # path: / \u6587\u4ef6\u4e2d\u7684\u6ce8\u91ca\u5f88\u8be6\u7ec6\uff0c \u8fd9\u91cc\u9700\u8981\u989d\u5916\u8bf4\u4e00\u4e0b PrometheusAlert \u540c\u65f6\u652f\u6301\u6309\u7167\u65e5\u671f\u53d1\u9001\u544a\u8b66\u5230\u4e0d\u540c\u53f7\u7801, \u5e76\u4e14\u5df2\u7ecf\u52a0\u5165\u544a\u8b66\u5931\u8d25\u6216\u8005\u88ab\u544a\u8b66\u4eba\u672a\u63a5\u542c\u7535\u8bdd\u540e\u8f6c\u8054\u7cfb\u9ed8\u8ba4\u8054\u7cfb\u4eba defaultphone \u53ea\u9700\u65b0\u5efa ser.csv \u6587\u4ef6, \u5e76\u5c06\u6587\u4ef6\u653e\u5230\u7a0b\u5e8f\u8fd0\u884c\u76ee\u5f55\u4e0b\u5373\u53ef\u81ea\u52a8\u52a0\u8f7d \u540c\u65f6\u8be5\u6587\u4ef6\u4e5f\u662f\u7535\u8bdd\u56de\u8c03\u63a5\u53e3\u6240\u5fc5\u9700\u6587\u4ef6(\u5982\u56de\u8c03\u63a5\u53e3\u8fd4\u56de\u975e0\u72b6\u6001,\u5219\u4f1a\u5728\u6b64\u6587\u4ef6\u4e2d\u5bfb\u627e\u4e0b\u4e00\u53f7\u7801\u8fdb\u884c\u62e8\u6253,\u5982\u5f00\u542f\u56de\u8c03\u529f\u80fd,\u8bf7\u52a1\u5fc5\u521b\u5efa\u8be5\u6587\u4ef6) ps:\u76ee\u524d grafana/graylog \u7684\u7535\u8bdd\u548c\u77ed\u4fe1\u544a\u8b66\u4f9d\u8d56\u4e8e\u8be5\u6587\u4ef6, prometheus\u7535\u8bdd\u548c\u77ed\u4fe1\u544a\u8b66\u4f18\u5148\u4ecerules\u7684mobile\u5b57\u6bb5\u8bfb\u53d6,\u5982\u672a\u914d\u7f6e\u53f7\u7801,\u5219\u4f1a\u4ece user.csv \u4e2d\u8bfb\u53d6,\u5982 user.csv \u4e2d\u4e5f\u672a\u914d\u7f6e,\u5219\u4f1a\u76f4\u63a5\u53d1\u9001\u5230 defaultphone \u5173\u4e8euser.csv\u4e2d\u503c\u73ed\u65f6\u95f4\u5207\u6362\u95ee\u9898,\u9ed8\u8ba4\u6bcf\u65e5\u4e0a\u534810\u70b9\u8fdb\u884c\u5207\u6362\uff0c 2019\u5e744\u670810\u65e5,15888888881,\u5c0f\u5f20,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670811\u65e5,15888888882,\u5c0f\u674e,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670812\u65e5,15888888883,\u5c0f\u738b,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670813\u65e5,15888888884,\u5c0f\u5b8b,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 \u6211\u4eec\u5148\u9700\u8981\u4fee\u6539\u4e00\u4e0bconfigmap\u4e2d\u7684\u62a5\u8b66\u5a92\u4ecb\u5730\u5740,\u7136\u540e\u6267\u884c kubectl apply -f deployment.yaml 1 prometheus\u914d\u7f6e Prometheus\u652f\u6301\u4e24\u79cd\u914d\u7f6e\uff0c\u4efb\u9009\u5176\u4e00\u6216\u8005\u4e24\u8005\u642d\u914d\u5747\u53ef\u3002 1-1 \u901a\u8fc7Prometheus Rules\u65b9\u5f0f \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u4f7f\u7528\u62a5\u8b66\u89c4\u5219\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e9b\u62a5\u8b66\u5a92\u4ecb\u7684\u4fe1\u606f\u3002 \u9996\u5148\u9700\u8981\u5728Alertmanager\u914d\u7f6eWebhook\uff0c\u53ef\u53c2\u8003\u5982\u4e0b\u6a21\u677f\uff1a global: resolve_timeout: 5m route: group_by: ['instance'] group_wait: 10m group_interval: 10s repeat_interval: 10m receiver: 'web.hook.prometheusalert' receivers: - name: 'web.hook.prometheusalert' webhook_configs: - url: 'http://prometheus-alert-center:8080/prometheus/alert' send_resolved: true Prometheus Server \u7684\u544a\u8b66rules\u914d\u7f6e\uff0c\u53ef\u53c2\u8003\u5982\u4e0b\u6a21\u677f\uff1a groups: - name: node_alert rules: - alert: \u4e3b\u673aCPU\u544a\u8b66 expr: node_load1 > 1 labels: name: prometheusalertcenter level: 3 #\u544a\u8b66\u7ea7\u522b,\u544a\u8b66\u7ea7\u522b\u5b9a\u4e49 0 \u4fe1\u606f,1 \u8b66\u544a,2 \u4e00\u822c\u4e25\u91cd,3 \u4e25\u91cd,4 \u707e\u96be annotations: description: \"{{ $labels.instance }} CPU load\u5360\u7528\u8fc7\u9ad8\" #\u544a\u8b66\u4fe1\u606f mobile: 15888888881,15888888882,15888888883 #\u544a\u8b66\u53d1\u9001\u76ee\u6807\u624b\u673a\u53f7(\u9700\u8981\u8bbe\u7f6e\u7535\u8bdd\u548c\u77ed\u4fe1\u544a\u8b66\u7ea7\u522b) ddurl: \"https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" #\u652f\u6301\u6dfb\u52a0\u591a\u4e2a\u9489\u9489\u673a\u5668\u4eba\u544a\u8b66,\u7528,\u53f7\u5206\u5272\u5373\u53ef,\u5982\u679c\u7559\u7a7a\u6216\u8005\u672a\u586b\u5199,\u5219\u9ed8\u8ba4\u53d1\u9001\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\u586b\u5199\u7684\u9489\u9489\u5668\u4eba\u5730\u5740 fsurl: \"https://open.feishu.cn/open-apis/bot/hook/xxxxxxxxx,https://open.feishu.cn/open-apis/bot/hook/xxxxxxxxx\" #\u652f\u6301\u6dfb\u52a0\u591a\u4e2a\u98de\u4e66\u673a\u5668\u4eba\u544a\u8b66,\u7528,\u53f7\u5206\u5272\u5373\u53ef,\u5982\u679c\u7559\u7a7a\u6216\u8005\u672a\u586b\u5199,\u5219\u9ed8\u8ba4\u53d1\u9001\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\u586b\u5199\u7684\u98de\u4e66\u5668\u4eba\u5730\u5740 wxurl: \"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxxxxx-xxxxxx-xxxxxx-xxxxxx,https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxx-xxxx-xxxxxxx-xxxxx\" #\u652f\u6301\u6dfb\u52a0\u591a\u4e2a\u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u544a\u8b66,\u7528,\u53f7\u5206\u5272\u5373\u53ef,\u5982\u679c\u7559\u7a7a\u6216\u8005\u672a\u586b\u5199,\u5219\u9ed8\u8ba4\u53d1\u9001\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\u586b\u5199\u7684\u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5730\u5740 1-2 \u901a\u8fc7Prometheus AlertManager router\u65b9\u5f0f \u9488\u5bf9 /prometheus/router AlertManager router \u6307\u5b9a\u63a5\u6536\u7aef\u63a5\u53e3,\u8be5\u63a5\u53e3\u53ef\u5728url\u4e2d\u76f4\u63a5\u6307\u5b9a\u544a\u8b66\u7684\u63a5\u6536\u7aef,\u76ee\u524d\u652f\u6301\u4e09\u4e2a\u53c2\u6570,\u5206\u522b\u662f:wxurl,ddurl,phone(phone\u7528\u4e8e\u77ed\u4fe1\u548c\u7535\u8bdd\u544a\u8b66) \u5728 Prometheus Alertmanager \u4e2d\u914d\u7f6eWebhook\uff0c\u53ef\u53c2\u8003\u5982\u4e0b\u6a21\u677f\uff1a global: resolve_timeout: 5m route: group_by: ['instance'] group_wait: 10m group_interval: 10s repeat_interval: 10m receiver: 'web.hook.prometheusalert' routes: - receiver: 'prometheusalert-weixin' group_wait: 10s match: level: '1' - receiver: 'prometheusalert-dingding' group_wait: 10s match: level: '2' - receiver: 'prometheusalert-feishu' group_wait: 10s match: level: '3' - receiver: 'prometheusalert-all' group_wait: 10s match: level: '4' receivers: - name: 'web.hook.prometheusalert' webhook_configs: - url: 'http://[prometheusalert_url]:8080/prometheus/alert' - name: 'prometheusalert-weixin' webhook_configs: - url: 'http://[prometheusalert_url]:8080/prometheus/router?wxurl=https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxx' - name: 'prometheusalert-dingding' webhook_configs: - url: 'http://[prometheusalert_url]:8080/prometheus/router?ddurl=https://oapi.dingtalk.com/robot/send?access_token=xxxxx' - name: 'prometheusalert-feishu' webhook_configs: - url: 'http://[prometheusalert_url]:8080/prometheus/router?fsurl=https://open.feishu.cn/open-apis/bot/hook/xxxxxxxxx' - name: 'prometheusalert-all' webhook_configs: - url: 'http://[prometheusalert_url]:8080/prometheus/router?wxurl=https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxx&ddurl=https://oapi.dingtalk.com/robot/send?access_token=xxxxx&phone=15395105573' \u6700\u7ec8\u544a\u8b66\u6548\u679c: 2 \u4f7f\u7528dashboard\u8fdb\u884c\u8c03\u8bd5 depoyment.yaml\u6587\u4ef6\u4e2d\u9ed8\u8ba4\u6ce8\u91ca\u4e86ingress\u76f8\u5173\u8d44\u6e90\uff0c\u6211\u4eec\u9700\u8981\u8c03\u8bd5\u53ef\u4ee5\u53d6\u6d88\u6ce8\u91ca\u4f7f\u7528\u3002 \u6211\u4eec\u53ef\u4ee5\u70b9\u51fb\u4e0a\u56fe\u7684test\u5207\u6362\u5230\u6d4b\u8bd5\u9875\u9762\uff0c\u7136\u540e\u70b9\u51fb\u544a\u8b66\u6d4b\u8bd5\u5373\u53ef\u6d4b\u8bd5\u6211\u4eec\u914d\u7f6e\u7684\u62a5\u8b66\u5a92\u4ecb\u662f\u5426\u80fd\u6b63\u5e38\u53d1\u9001\u544a\u8b66\u6d88\u606f\u3002 \u6211\u4eec\u53ef\u4ee5\u6536\u5230\u5982\u4e0b\u7684\u544a\u8b66\u6d4b\u8bd5\u6d88\u606f","title":"\u7b2c\u5341\u4e00\u8282 Prometheus\u4e2d\u4f7f\u7528PrometheusAlert\u8fdb\u884c\u805a\u5408\u62a5\u8b66"},{"location":"chap3/50PrometheusAlert/#prometheusprometheusalert","text":"\u672c\u8eabprometheus\u5df2\u7ecf\u6709\u4e86alertmanager\u8fd9\u4e2a\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u4e00\u4e9b\u62a5\u8b66\u5a92\u4ecb\u6bd4\u5982email wechat\u7b49\uff0c\u4e3a\u4ec0\u4e48\u6211\u8fd8\u8fd8\u8981\u4f7f\u7528prometheusalert\u5462\uff1f Prometheus Alert\u662f\u5f00\u6e90\u7684\u8fd0\u7ef4\u544a\u8b66\u4e2d\u5fc3\u6d88\u606f\u8f6c\u53d1\u7cfb\u7edf,\u652f\u6301\u4e3b\u6d41\u7684\u76d1\u63a7\u7cfb\u7edfPrometheus,Zabbix,\u65e5\u5fd7\u7cfb\u7edfGraylog\u548c\u6570\u636e\u53ef\u89c6\u5316\u7cfb\u7edfGrafana\u53d1\u51fa\u7684\u9884\u8b66\u6d88\u606f,\u652f\u6301\u9489\u9489,\u5fae\u4fe1,\u534e\u4e3a\u4e91\u77ed\u4fe1,\u817e\u8baf\u4e91\u77ed\u4fe1,\u817e\u8baf\u4e91\u7535\u8bdd,\u963f\u91cc\u4e91\u77ed\u4fe1,\u963f\u91cc\u4e91\u7535\u8bdd\u7b49\uff0c \u53ef\u4ee5\u770b\u51faprometheusalert\u76f8\u6bd4\u548calertmanager\u5185\u7f6e\u7684\u62a5\u8b66\u5a92\u4ecb\u76f8\u6bd4\u652f\u6301\u7684\u66f4\u5168\u9762\uff0c\u5e76\u4e14\u914d\u7f6e\u548c\u8c03\u8bd5\u66f4\u65b9\u4fbf\uff0cprometheusalert \u5e76\u4e0d\u80fd\u53d6\u4ee3alertmanager\uff0c\u800c\u662f\u8981\u4f5c\u4e3awebhoook\u4e0ealertmanager\u7ed3\u5408\u4f7f\u7528\u3002 #Kubernetes\u4e2d\u8fd0\u884c\u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u884c\u5373\u53ef(\u6ce8\u610f\u9ed8\u8ba4\u7684\u90e8\u7f72\u6a21\u7248\u4e2d\u672a\u6302\u8f7d\u6a21\u7248\u6570\u636e\u5e93\u6587\u4ef6 db/PrometheusAlertDB.db\uff0c\u4e3a\u9632\u6b62\u6a21\u7248\u6570\u636e\u4e22\u5931\uff0c\u8bf7\u81ea\u884c\u589e\u52a0\u6302\u8f7d\u914d\u7f6e ) wget https://raw.githubusercontent.com/feiyu563/PrometheusAlert/master/example/kubernetes/PrometheusAlert-Deployment.yaml \u6ce8\u610f\uff1a\u8fd9\u91cc\u9700\u8981\u4fee\u6539\u4e00\u4e0b\u6587\u4ef6\u4e2dvolumemount\u4e2d\u4f7f\u7528\u7684configmap\u540d\u79f0\uff0c\u53c2\u89c1 https://github.com/feiyu563/PrometheusAlert/issues(2021-01-26) \u4fee\u6539\u540e\u6587\u4ef6\u5982\u4e0b # apiVersion: v1 # kind: Namespace # metadata: # name: monitoring --- apiVersion: v1 data: app.conf: | #---------------------\u2193\u5168\u5c40\u914d\u7f6e----------------------- appname = PrometheusAlert #\u76d1\u542c\u7aef\u53e3 httpport = 8080 runmode = dev #\u8bbe\u7f6e\u4ee3\u7406 proxy = http://123.123.123.123:8080 proxy = #\u5f00\u542fJSON\u8bf7\u6c42 copyrequestbody = true #\u544a\u8b66\u6d88\u606f\u6807\u9898 title=PrometheusAlert #\u94fe\u63a5\u5230\u544a\u8b66\u5e73\u53f0\u5730\u5740 GraylogAlerturl=http://graylog.org #\u9489\u9489\u544a\u8b66 \u544a\u8b66logo\u56fe\u6807\u5730\u5740 logourl=https://raw.githubusercontent.com/feiyu563/PrometheusAlert/master/doc/alert-center.png #\u9489\u9489\u544a\u8b66 \u6062\u590dlogo\u56fe\u6807\u5730\u5740 rlogourl=https://raw.githubusercontent.com/feiyu563/PrometheusAlert/master/doc/alert-center.png #\u77ed\u4fe1\u544a\u8b66\u7ea7\u522b(\u7b49\u4e8e3\u5c31\u8fdb\u884c\u77ed\u4fe1\u544a\u8b66) \u544a\u8b66\u7ea7\u522b\u5b9a\u4e49 0 \u4fe1\u606f,1 \u8b66\u544a,2 \u4e00\u822c\u4e25\u91cd,3 \u4e25\u91cd,4 \u707e\u96be messagelevel=3 #\u7535\u8bdd\u544a\u8b66\u7ea7\u522b(\u7b49\u4e8e4\u5c31\u8fdb\u884c\u8bed\u97f3\u544a\u8b66) \u544a\u8b66\u7ea7\u522b\u5b9a\u4e49 0 \u4fe1\u606f,1 \u8b66\u544a,2 \u4e00\u822c\u4e25\u91cd,3 \u4e25\u91cd,4 \u707e\u96be phonecalllevel=4 #\u9ed8\u8ba4\u62e8\u6253\u53f7\u7801(\u9875\u9762\u6d4b\u8bd5\u77ed\u4fe1\u548c\u7535\u8bdd\u529f\u80fd\u9700\u8981\u914d\u7f6e\u6b64\u9879) defaultphone=xxxxxxxx #\u6545\u969c\u6062\u590d\u662f\u5426\u542f\u7528\u7535\u8bdd\u901a\u77e50\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f phonecallresolved=0 #\u81ea\u52a8\u544a\u8b66\u6291\u5236(\u81ea\u52a8\u544a\u8b66\u6291\u5236\u662f\u9ed8\u8ba4\u540c\u4e00\u4e2a\u544a\u8b66\u6e90\u7684\u544a\u8b66\u4fe1\u606f\u53ea\u53d1\u9001\u544a\u8b66\u7ea7\u522b\u6700\u9ad8\u7684\u7b2c\u4e00\u6761\u544a\u8b66\u4fe1\u606f,\u5176\u4ed6\u6d88\u606f\u9ed8\u8ba4\u5c4f\u853d,\u8fd9\u4e48\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u51cf\u5c11\u76f8\u540c\u544a\u8b66\u6765\u6e90\u7684\u6d88\u606f\u6570\u91cf,\u9632\u6b62\u544a\u8b66\u70b8\u5f39,0\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f) silent=0 #\u662f\u5426\u524d\u53f0\u8f93\u51fafile or console logtype=file #\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84 logpath=logs/prometheusalertcenter.log #\u8f6c\u6362Prometheus,graylog\u544a\u8b66\u6d88\u606f\u7684\u65f6\u533a\u4e3aCST\u65f6\u533a(\u5982\u9ed8\u8ba4\u5df2\u7ecf\u662fCST\u65f6\u533a\uff0c\u8bf7\u52ff\u5f00\u542f) prometheus_cst_time=0 #\u6570\u636e\u5e93\u9a71\u52a8\uff0c\u652f\u6301sqlite3\uff0cmysql,\u5982\u4f7f\u7528mysql\uff0c\u8bf7\u5f00\u542fdb_host,db_user,db_password,db_name\u7684\u6ce8\u91ca db_driver=sqlite3 #db_host=127.0.0.1:3306 #db_user=root #db_password=root #db_name=prometheusalert #---------------------\u2193webhook----------------------- #\u662f\u5426\u5f00\u542f\u9489\u9489\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-dingding=1 #\u9ed8\u8ba4\u9489\u9489\u673a\u5668\u4eba\u5730\u5740 ddurl=https://oapi.dingtalk.com/robot/send?access_token=xxxxx #\u662f\u5426\u5f00\u542f @\u6240\u6709\u4eba(0\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f) dd_isatall=1 #\u662f\u5426\u5f00\u542f\u5fae\u4fe1\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-weixin=0 #\u9ed8\u8ba4\u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5730\u5740 wxurl=https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxx #\u662f\u5426\u5f00\u542f\u98de\u4e66\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-feishu=0 #\u9ed8\u8ba4\u98de\u4e66\u673a\u5668\u4eba\u5730\u5740 fsurl=https://open.feishu.cn/open-apis/bot/hook/xxxxxxxxx #---------------------\u2193\u817e\u8baf\u4e91\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542f\u817e\u8baf\u4e91\u77ed\u4fe1\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-txdx=0 #\u817e\u8baf\u4e91\u77ed\u4fe1\u63a5\u53e3key TXY_DX_appkey=xxxxx #\u817e\u8baf\u4e91\u77ed\u4fe1\u6a21\u7248ID \u817e\u8baf\u4e91\u77ed\u4fe1\u6a21\u7248\u914d\u7f6e\u53ef\u53c2\u8003 prometheus\u544a\u8b66:{1} TXY_DX_tpl_id=xxxxx #\u817e\u8baf\u4e91\u77ed\u4fe1sdk app id TXY_DX_sdkappid=xxxxx #\u817e\u8baf\u4e91\u77ed\u4fe1\u7b7e\u540d \u6839\u636e\u81ea\u5df1\u5ba1\u6838\u901a\u8fc7\u7684\u7b7e\u540d\u6765\u586b\u5199 TXY_DX_sign=\u817e\u8baf\u4e91 #\u662f\u5426\u5f00\u542f\u817e\u8baf\u4e91\u7535\u8bdd\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-txdh=0 #\u817e\u8baf\u4e91\u7535\u8bdd\u63a5\u53e3key TXY_DH_phonecallappkey=xxxxx #\u817e\u8baf\u4e91\u7535\u8bdd\u6a21\u7248ID TXY_DH_phonecalltpl_id=xxxxx #\u817e\u8baf\u4e91\u7535\u8bddsdk app id TXY_DH_phonecallsdkappid=xxxxx #---------------------\u2193\u534e\u4e3a\u4e91\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542f\u534e\u4e3a\u4e91\u77ed\u4fe1\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-hwdx=0 #\u534e\u4e3a\u4e91\u77ed\u4fe1\u63a5\u53e3key HWY_DX_APP_Key=xxxxxxxxxxxxxxxxxxxxxx #\u534e\u4e3a\u4e91\u77ed\u4fe1\u63a5\u53e3Secret HWY_DX_APP_Secret=xxxxxxxxxxxxxxxxxxxxxx #\u534e\u4e3a\u4e91APP\u63a5\u5165\u5730\u5740(\u7aef\u53e3\u63a5\u53e3\u5730\u5740) HWY_DX_APP_Url=https://rtcsms.cn-north-1.myhuaweicloud.com:10743 #\u534e\u4e3a\u4e91\u77ed\u4fe1\u6a21\u677fID HWY_DX_Templateid=xxxxxxxxxxxxxxxxxxxxxx #\u534e\u4e3a\u4e91\u7b7e\u540d\u540d\u79f0\uff0c\u5fc5\u987b\u662f\u5df2\u5ba1\u6838\u901a\u8fc7\u7684\uff0c\u4e0e\u6a21\u677f\u7c7b\u578b\u4e00\u81f4\u7684\u7b7e\u540d\u540d\u79f0,\u6309\u7167\u81ea\u5df1\u7684\u5b9e\u9645\u7b7e\u540d\u586b\u5199 HWY_DX_Signature=\u534e\u4e3a\u4e91 #\u534e\u4e3a\u4e91\u7b7e\u540d\u901a\u9053\u53f7 HWY_DX_Sender=xxxxxxxxxx #---------------------\u2193\u963f\u91cc\u4e91\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542f\u963f\u91cc\u4e91\u77ed\u4fe1\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-alydx=0 #\u963f\u91cc\u4e91\u77ed\u4fe1\u4e3b\u8d26\u53f7AccessKey\u7684ID ALY_DX_AccessKeyId=xxxxxxxxxxxxxxxxxxxxxx #\u963f\u91cc\u4e91\u77ed\u4fe1\u63a5\u53e3\u5bc6\u94a5 ALY_DX_AccessSecret=xxxxxxxxxxxxxxxxxxxxxx #\u963f\u91cc\u4e91\u77ed\u4fe1\u7b7e\u540d\u540d\u79f0 ALY_DX_SignName=\u963f\u91cc\u4e91 #\u963f\u91cc\u4e91\u77ed\u4fe1\u6a21\u677fID ALY_DX_Template=xxxxxxxxxxxxxxxxxxxxxx #\u662f\u5426\u5f00\u542f\u963f\u91cc\u4e91\u7535\u8bdd\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-alydh=0 #\u963f\u91cc\u4e91\u7535\u8bdd\u4e3b\u8d26\u53f7AccessKey\u7684ID ALY_DH_AccessKeyId=xxxxxxxxxxxxxxxxxxxxxx #\u963f\u91cc\u4e91\u7535\u8bdd\u63a5\u53e3\u5bc6\u94a5 ALY_DH_AccessSecret=xxxxxxxxxxxxxxxxxxxxxx #\u963f\u91cc\u4e91\u7535\u8bdd\u88ab\u53eb\u663e\u53f7\uff0c\u5fc5\u987b\u662f\u5df2\u8d2d\u4e70\u7684\u53f7\u7801 ALY_DX_CalledShowNumber=xxxxxxxxx #\u963f\u91cc\u4e91\u7535\u8bdd\u6587\u672c\u8f6c\u8bed\u97f3\uff08TTS\uff09\u6a21\u677fID ALY_DH_TtsCode=xxxxxxxx #---------------------\u2193\u5bb9\u8054\u4e91\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542f\u5bb9\u8054\u4e91\u7535\u8bdd\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f RLY_DH_open-rlydh=0 #\u5bb9\u8054\u4e91\u57fa\u7840\u63a5\u53e3\u5730\u5740 RLY_URL=https://app.cloopen.com:8883/2013-12-26/Accounts/ #\u5bb9\u8054\u4e91\u540e\u53f0SID RLY_ACCOUNT_SID=xxxxxxxxxxx #\u5bb9\u8054\u4e91api-token RLY_ACCOUNT_TOKEN=xxxxxxxxxx #\u5bb9\u8054\u4e91app_id RLY_APP_ID=xxxxxxxxxxxxx #---------------------\u2193\u90ae\u4ef6\u914d\u7f6e----------------------- #\u662f\u5426\u5f00\u542f\u90ae\u4ef6 open-email=0 #\u90ae\u4ef6\u53d1\u4ef6\u670d\u52a1\u5668\u5730\u5740 Email_host=smtp.qq.com #\u90ae\u4ef6\u53d1\u4ef6\u670d\u52a1\u5668\u7aef\u53e3 Email_port=465 #\u90ae\u4ef6\u5e10\u53f7 Email_user=xxxxxxx@qq.com #\u90ae\u4ef6\u5bc6\u7801 Email_password=xxxxxx #\u90ae\u4ef6\u6807\u9898 Email_title=\u8fd0\u7ef4\u544a\u8b66 #\u9ed8\u8ba4\u53d1\u9001\u90ae\u7bb1 Default_emails=xxxxx@qq.com,xxxxx@qq.com #---------------------\u2193\u4e03\u964c\u4e91\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542f\u4e03\u964c\u77ed\u4fe1\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-7moordx=0 #\u4e03\u964c\u8d26\u6237ID 7MOOR_ACCOUNT_ID=Nxxx #\u4e03\u964c\u8d26\u6237APISecret 7MOOR_ACCOUNT_APISECRET=xxx #\u4e03\u964c\u8d26\u6237\u77ed\u4fe1\u6a21\u677f\u7f16\u53f7 7MOOR_DX_TEMPLATENUM=n #\u6ce8\u610f\uff1a\u4e03\u964c\u77ed\u4fe1\u53d8\u91cf\u8fd9\u91cc\u53ea\u7528\u4e00\u4e2avar1\uff0c\u5728\u4ee3\u7801\u91cc\u5199\u6b7b\u4e86\u3002 #----------- #\u662f\u5426\u5f00\u542f\u4e03\u964cwebcall\u8bed\u97f3\u901a\u77e5\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-7moordh=0 #\u8bf7\u5728\u4e03\u964c\u5e73\u53f0\u6dfb\u52a0\u865a\u62df\u670d\u52a1\u53f7\u3001\u6587\u672c\u8282\u70b9 #\u4e03\u964c\u8d26\u6237webcall\u7684\u865a\u62df\u670d\u52a1\u53f7 7MOOR_WEBCALL_SERVICENO=xxx # \u6587\u672c\u8282\u70b9\u91cc\u88ab\u66ff\u6362\u7684\u53d8\u91cf\uff0c\u6211\u914d\u7f6e\u7684\u662ftext\u3002\u5982\u679c\u88ab\u66ff\u6362\u7684\u53d8\u91cf\u4e0d\u662ftext\uff0c\u8bf7\u4fee\u6539\u6b64\u914d\u7f6e 7MOOR_WEBCALL_VOICE_VAR=text #---------------------\u2193telegram\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542ftelegram\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-tg=0 #tg\u673a\u5668\u4ebatoken TG_TOKEN=xxxxx #tg\u6d88\u606f\u6a21\u5f0f \u4e2a\u4eba\u6d88\u606f\u6216\u8005\u9891\u9053\u6d88\u606f 0\u4e3a\u5173\u95ed(\u63a8\u9001\u7ed9\u4e2a\u4eba)\uff0c1\u4e3a\u5f00\u542f(\u63a8\u9001\u7ed9\u9891\u9053) TG_MODE_CHAN=0 #tg\u7528\u6237ID TG_USERID=xxxxx #tg\u9891\u9053name TG_CHANNAME=xxxxx #tg api\u5730\u5740, \u53ef\u4ee5\u914d\u7f6e\u4e3a\u4ee3\u7406\u5730\u5740 #TG_API_PROXY=\"https://api.telegram.org/bot%s/%s\" #---------------------\u2193workwechat\u63a5\u53e3----------------------- #\u662f\u5426\u5f00\u542fworkwechat\u544a\u8b66\u901a\u9053,\u53ef\u540c\u65f6\u5f00\u59cb\u591a\u4e2a\u901a\u90530\u4e3a\u5173\u95ed,1\u4e3a\u5f00\u542f open-workwechat=0 # \u4f01\u4e1aID WorkWechat_CropID=xxxxx # \u5e94\u7528ID WorkWechat_AgentID=xxxx # \u5e94\u7528secret WorkWechat_AgentSecret=xxxx # \u63a5\u53d7\u7528\u6237 WorkWechat_ToUser=\"zhangsan|lisi\" # \u63a5\u53d7\u90e8\u95e8 WorkWechat_ToParty=\"ops|dev\" # \u63a5\u53d7\u6807\u7b7e WorkWechat_ToTag=\"\" # \u6d88\u606f\u7c7b\u578b, \u6682\u65f6\u53ea\u652f\u6301markdown # WorkWechat_Msgtype = \"markdown\" user.csv: | 2019\u5e744\u670810\u65e5,15888888881,\u5c0f\u5f20,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670811\u65e5,15888888882,\u5c0f\u674e,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670812\u65e5,15888888883,\u5c0f\u738b,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670813\u65e5,15888888884,\u5c0f\u5b8b,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 kind: ConfigMap metadata: name: prometheus-alert-center-conf namespace: monitoring --- apiVersion: apps/v1 kind: Deployment metadata: labels: app: prometheus-alert-center alertname: prometheus-alert-center name: prometheus-alert-center # namespace: monitoring spec: replicas: 1 selector: matchLabels: app: prometheus-alert-center alertname: prometheus-alert-center template: metadata: labels: app: prometheus-alert-center alertname: prometheus-alert-center spec: containers: - image: feiyu563/prometheus-alert name: prometheus-alert-center env: - name: TZ value: \"Asia/Shanghai\" ports: - containerPort: 8080 name: http resources: limits: cpu: 200m memory: 200Mi requests: cpu: 100m memory: 100Mi volumeMounts: - name: prometheus-alert-center-conf-map mountPath: /app/conf/app.conf subPath: app.conf - name: prometheus-alert-center-conf-map mountPath: /app/user.csv subPath: user.csv volumes: - name: prometheus-alert-center-conf-map configMap: name: prometheus-alert-center-conf items: - key: app.conf path: app.conf - key: user.csv path: user.csv --- apiVersion: v1 kind: Service metadata: labels: alertname: prometheus-alert-center name: prometheus-alert-center # namespace: monitoring annotations: prometheus.io/scrape: 'true' prometheus.io/port: '8080' spec: ports: - name: http port: 8080 targetPort: http selector: app: prometheus-alert-center --- # apiVersion: networking.k8s.io/v1beta1 # kind: Ingress # metadata: # annotations: # kubernetes.io/ingress.class: nginx # name: prometheus-alert-center # namespace: monitoring # spec: # rules: # - host: alert-center.local # http: # paths: # - backend: # serviceName: prometheus-alert-center # servicePort: 8080 # path: / \u6587\u4ef6\u4e2d\u7684\u6ce8\u91ca\u5f88\u8be6\u7ec6\uff0c \u8fd9\u91cc\u9700\u8981\u989d\u5916\u8bf4\u4e00\u4e0b PrometheusAlert \u540c\u65f6\u652f\u6301\u6309\u7167\u65e5\u671f\u53d1\u9001\u544a\u8b66\u5230\u4e0d\u540c\u53f7\u7801, \u5e76\u4e14\u5df2\u7ecf\u52a0\u5165\u544a\u8b66\u5931\u8d25\u6216\u8005\u88ab\u544a\u8b66\u4eba\u672a\u63a5\u542c\u7535\u8bdd\u540e\u8f6c\u8054\u7cfb\u9ed8\u8ba4\u8054\u7cfb\u4eba defaultphone \u53ea\u9700\u65b0\u5efa ser.csv \u6587\u4ef6, \u5e76\u5c06\u6587\u4ef6\u653e\u5230\u7a0b\u5e8f\u8fd0\u884c\u76ee\u5f55\u4e0b\u5373\u53ef\u81ea\u52a8\u52a0\u8f7d \u540c\u65f6\u8be5\u6587\u4ef6\u4e5f\u662f\u7535\u8bdd\u56de\u8c03\u63a5\u53e3\u6240\u5fc5\u9700\u6587\u4ef6(\u5982\u56de\u8c03\u63a5\u53e3\u8fd4\u56de\u975e0\u72b6\u6001,\u5219\u4f1a\u5728\u6b64\u6587\u4ef6\u4e2d\u5bfb\u627e\u4e0b\u4e00\u53f7\u7801\u8fdb\u884c\u62e8\u6253,\u5982\u5f00\u542f\u56de\u8c03\u529f\u80fd,\u8bf7\u52a1\u5fc5\u521b\u5efa\u8be5\u6587\u4ef6) ps:\u76ee\u524d grafana/graylog \u7684\u7535\u8bdd\u548c\u77ed\u4fe1\u544a\u8b66\u4f9d\u8d56\u4e8e\u8be5\u6587\u4ef6, prometheus\u7535\u8bdd\u548c\u77ed\u4fe1\u544a\u8b66\u4f18\u5148\u4ecerules\u7684mobile\u5b57\u6bb5\u8bfb\u53d6,\u5982\u672a\u914d\u7f6e\u53f7\u7801,\u5219\u4f1a\u4ece user.csv \u4e2d\u8bfb\u53d6,\u5982 user.csv \u4e2d\u4e5f\u672a\u914d\u7f6e,\u5219\u4f1a\u76f4\u63a5\u53d1\u9001\u5230 defaultphone \u5173\u4e8euser.csv\u4e2d\u503c\u73ed\u65f6\u95f4\u5207\u6362\u95ee\u9898,\u9ed8\u8ba4\u6bcf\u65e5\u4e0a\u534810\u70b9\u8fdb\u884c\u5207\u6362\uff0c 2019\u5e744\u670810\u65e5,15888888881,\u5c0f\u5f20,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670811\u65e5,15888888882,\u5c0f\u674e,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670812\u65e5,15888888883,\u5c0f\u738b,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 2019\u5e744\u670813\u65e5,15888888884,\u5c0f\u5b8b,15999999999,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u9648,15999999998,\u5907\u7528\u8054\u7cfb\u4eba\u5c0f\u8d75 \u6211\u4eec\u5148\u9700\u8981\u4fee\u6539\u4e00\u4e0bconfigmap\u4e2d\u7684\u62a5\u8b66\u5a92\u4ecb\u5730\u5740,\u7136\u540e\u6267\u884c kubectl apply -f deployment.yaml","title":"\u7b2c\u5341\u4e00\u8282 Prometheus\u4e2d\u4f7f\u7528PrometheusAlert\u8fdb\u884c\u805a\u5408\u62a5\u8b66"},{"location":"chap3/50PrometheusAlert/#1-prometheus","text":"Prometheus\u652f\u6301\u4e24\u79cd\u914d\u7f6e\uff0c\u4efb\u9009\u5176\u4e00\u6216\u8005\u4e24\u8005\u642d\u914d\u5747\u53ef\u3002","title":"1 prometheus\u914d\u7f6e"},{"location":"chap3/50PrometheusAlert/#1-1-prometheus-rules","text":"\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u4f7f\u7528\u62a5\u8b66\u89c4\u5219\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e9b\u62a5\u8b66\u5a92\u4ecb\u7684\u4fe1\u606f\u3002 \u9996\u5148\u9700\u8981\u5728Alertmanager\u914d\u7f6eWebhook\uff0c\u53ef\u53c2\u8003\u5982\u4e0b\u6a21\u677f\uff1a global: resolve_timeout: 5m route: group_by: ['instance'] group_wait: 10m group_interval: 10s repeat_interval: 10m receiver: 'web.hook.prometheusalert' receivers: - name: 'web.hook.prometheusalert' webhook_configs: - url: 'http://prometheus-alert-center:8080/prometheus/alert' send_resolved: true Prometheus Server \u7684\u544a\u8b66rules\u914d\u7f6e\uff0c\u53ef\u53c2\u8003\u5982\u4e0b\u6a21\u677f\uff1a groups: - name: node_alert rules: - alert: \u4e3b\u673aCPU\u544a\u8b66 expr: node_load1 > 1 labels: name: prometheusalertcenter level: 3 #\u544a\u8b66\u7ea7\u522b,\u544a\u8b66\u7ea7\u522b\u5b9a\u4e49 0 \u4fe1\u606f,1 \u8b66\u544a,2 \u4e00\u822c\u4e25\u91cd,3 \u4e25\u91cd,4 \u707e\u96be annotations: description: \"{{ $labels.instance }} CPU load\u5360\u7528\u8fc7\u9ad8\" #\u544a\u8b66\u4fe1\u606f mobile: 15888888881,15888888882,15888888883 #\u544a\u8b66\u53d1\u9001\u76ee\u6807\u624b\u673a\u53f7(\u9700\u8981\u8bbe\u7f6e\u7535\u8bdd\u548c\u77ed\u4fe1\u544a\u8b66\u7ea7\u522b) ddurl: \"https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" #\u652f\u6301\u6dfb\u52a0\u591a\u4e2a\u9489\u9489\u673a\u5668\u4eba\u544a\u8b66,\u7528,\u53f7\u5206\u5272\u5373\u53ef,\u5982\u679c\u7559\u7a7a\u6216\u8005\u672a\u586b\u5199,\u5219\u9ed8\u8ba4\u53d1\u9001\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\u586b\u5199\u7684\u9489\u9489\u5668\u4eba\u5730\u5740 fsurl: \"https://open.feishu.cn/open-apis/bot/hook/xxxxxxxxx,https://open.feishu.cn/open-apis/bot/hook/xxxxxxxxx\" #\u652f\u6301\u6dfb\u52a0\u591a\u4e2a\u98de\u4e66\u673a\u5668\u4eba\u544a\u8b66,\u7528,\u53f7\u5206\u5272\u5373\u53ef,\u5982\u679c\u7559\u7a7a\u6216\u8005\u672a\u586b\u5199,\u5219\u9ed8\u8ba4\u53d1\u9001\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\u586b\u5199\u7684\u98de\u4e66\u5668\u4eba\u5730\u5740 wxurl: \"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxxxxx-xxxxxx-xxxxxx-xxxxxx,https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxx-xxxx-xxxxxxx-xxxxx\" #\u652f\u6301\u6dfb\u52a0\u591a\u4e2a\u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u544a\u8b66,\u7528,\u53f7\u5206\u5272\u5373\u53ef,\u5982\u679c\u7559\u7a7a\u6216\u8005\u672a\u586b\u5199,\u5219\u9ed8\u8ba4\u53d1\u9001\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\u586b\u5199\u7684\u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5730\u5740","title":"1-1 \u901a\u8fc7Prometheus Rules\u65b9\u5f0f"},{"location":"chap3/50PrometheusAlert/#1-2-prometheus-alertmanager-router","text":"\u9488\u5bf9 /prometheus/router AlertManager router \u6307\u5b9a\u63a5\u6536\u7aef\u63a5\u53e3,\u8be5\u63a5\u53e3\u53ef\u5728url\u4e2d\u76f4\u63a5\u6307\u5b9a\u544a\u8b66\u7684\u63a5\u6536\u7aef,\u76ee\u524d\u652f\u6301\u4e09\u4e2a\u53c2\u6570,\u5206\u522b\u662f:wxurl,ddurl,phone(phone\u7528\u4e8e\u77ed\u4fe1\u548c\u7535\u8bdd\u544a\u8b66) \u5728 Prometheus Alertmanager \u4e2d\u914d\u7f6eWebhook\uff0c\u53ef\u53c2\u8003\u5982\u4e0b\u6a21\u677f\uff1a global: resolve_timeout: 5m route: group_by: ['instance'] group_wait: 10m group_interval: 10s repeat_interval: 10m receiver: 'web.hook.prometheusalert' routes: - receiver: 'prometheusalert-weixin' group_wait: 10s match: level: '1' - receiver: 'prometheusalert-dingding' group_wait: 10s match: level: '2' - receiver: 'prometheusalert-feishu' group_wait: 10s match: level: '3' - receiver: 'prometheusalert-all' group_wait: 10s match: level: '4' receivers: - name: 'web.hook.prometheusalert' webhook_configs: - url: 'http://[prometheusalert_url]:8080/prometheus/alert' - name: 'prometheusalert-weixin' webhook_configs: - url: 'http://[prometheusalert_url]:8080/prometheus/router?wxurl=https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxx' - name: 'prometheusalert-dingding' webhook_configs: - url: 'http://[prometheusalert_url]:8080/prometheus/router?ddurl=https://oapi.dingtalk.com/robot/send?access_token=xxxxx' - name: 'prometheusalert-feishu' webhook_configs: - url: 'http://[prometheusalert_url]:8080/prometheus/router?fsurl=https://open.feishu.cn/open-apis/bot/hook/xxxxxxxxx' - name: 'prometheusalert-all' webhook_configs: - url: 'http://[prometheusalert_url]:8080/prometheus/router?wxurl=https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxxx&ddurl=https://oapi.dingtalk.com/robot/send?access_token=xxxxx&phone=15395105573' \u6700\u7ec8\u544a\u8b66\u6548\u679c:","title":"1-2 \u901a\u8fc7Prometheus AlertManager router\u65b9\u5f0f"},{"location":"chap3/50PrometheusAlert/#2-dashboard","text":"depoyment.yaml\u6587\u4ef6\u4e2d\u9ed8\u8ba4\u6ce8\u91ca\u4e86ingress\u76f8\u5173\u8d44\u6e90\uff0c\u6211\u4eec\u9700\u8981\u8c03\u8bd5\u53ef\u4ee5\u53d6\u6d88\u6ce8\u91ca\u4f7f\u7528\u3002 \u6211\u4eec\u53ef\u4ee5\u70b9\u51fb\u4e0a\u56fe\u7684test\u5207\u6362\u5230\u6d4b\u8bd5\u9875\u9762\uff0c\u7136\u540e\u70b9\u51fb\u544a\u8b66\u6d4b\u8bd5\u5373\u53ef\u6d4b\u8bd5\u6211\u4eec\u914d\u7f6e\u7684\u62a5\u8b66\u5a92\u4ecb\u662f\u5426\u80fd\u6b63\u5e38\u53d1\u9001\u544a\u8b66\u6d88\u606f\u3002 \u6211\u4eec\u53ef\u4ee5\u6536\u5230\u5982\u4e0b\u7684\u544a\u8b66\u6d4b\u8bd5\u6d88\u606f","title":"2 \u4f7f\u7528dashboard\u8fdb\u884c\u8c03\u8bd5"},{"location":"chap3/5Adv_Prometheus_monitor/","text":"\u7b2c\u4e94\u8282 \u5e94\u7528\u76d1\u63a7\uff08Metrics/Exporter\u7684\u914d\u7f6e\uff09 Prometheus \u7684\u6570\u636e\u6307\u6807\u662f\u901a\u8fc7\u4e00\u4e2a\u516c\u5f00\u7684 HTTP(S) \u6570\u636e\u63a5\u53e3\u83b7\u53d6\u5230\u7684\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5355\u72ec\u5b89\u88c5\u76d1\u63a7\u7684 agent \uff0c \u53ea\u9700\u8981\u66b4\u9732\u4e00\u4e2a metrics \u63a5\u53e3 \uff0c Prometheus \u5c31\u4f1a\u5b9a\u671f\u53bb\u62c9\u53d6\u6570\u636e\uff1b \u5bf9\u4e8e\u4e00\u4e9b\u666e\u901a\u7684 HTTP \u670d\u52a1\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u91cd\u7528\u8fd9\u4e2a\u670d\u52a1\uff0c\u6dfb\u52a0\u4e00\u4e2a /metrics \u63a5\u53e3\u66b4\u9732\u7ed9 Prometheus \uff1b\u800c\u4e14\u83b7\u53d6\u5230\u7684\u6307\u6807\u6570\u636e\u683c\u5f0f\u662f\u975e\u5e38\u6613\u61c2\u7684\uff0c\u4e0d\u9700\u8981\u592a\u9ad8\u7684\u5b66\u4e60\u6210\u672c\u3002 \u73b0\u5728\u5f88\u591a\u670d\u52a1\u4ece\u4e00\u5f00\u59cb\u5c31\u5185\u7f6e\u4e86\u4e00\u4e2a /metrics \u63a5\u53e3\uff0c\u6bd4\u5982 Kubernetes \u7684\u5404\u4e2a\u7ec4\u4ef6\u3001 istio \u670d\u52a1\u7f51\u683c\u90fd\u76f4\u63a5\u63d0\u4f9b\u4e86\u6570\u636e\u6307\u6807\u63a5\u53e3\u3002 \u6709\u4e00\u4e9b\u670d\u52a1\u5373\u4f7f\u6ca1\u6709\u539f\u751f\u96c6\u6210\u8be5\u63a5\u53e3\uff0c\u4e5f\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b exporter \u6765\u83b7\u53d6\u5230\u6307\u6807\u6570\u636e\uff0c\u6bd4\u5982 mysqld_exporter \u3001 node_exporter \uff0c\u8fd9\u4e9b exporter \u5c31\u6709\u70b9\u7c7b\u4f3c\u4e8e\u4f20\u7edf\u76d1\u63a7\u670d\u52a1\u4e2d\u7684 agent \uff0c\u4f5c\u4e3a\u4e00\u76f4\u670d\u52a1\u5b58\u5728\uff0c\u7528\u6765\u6536\u96c6\u76ee\u6807\u670d\u52a1\u7684\u6307\u6807\u6570\u636e\u7136\u540e\u76f4\u63a5\u66b4\u9732\u7ed9 Prometheus \u3002 1 \u666e\u901a\u5e94\u7528\u76d1\u63a7 \u6211\u4eec\u91c7\u7528\u7684\u662f Traefik \u4f5c\u4e3a\u6211\u4eec\u7684 ingress-controller \uff0c\u662f\u6211\u4eec Kubernetes \u96c6\u7fa4 \u5185\u90e8\u670d\u52a1\u548c\u5916\u90e8\u7528\u6237 \u4e4b\u95f4\u7684\u6865\u6881\u3002 Traefik \u672c\u8eab\u5185\u7f6e\u4e86\u4e00\u4e2a /metrics \u7684\u63a5\u53e3\uff0c\u4f46\u662f\u9700\u8981\u6211\u4eec\u5728\u53c2\u6570\u4e2d\u914d\u7f6e\u5f00\u542f: [metrics] [metrics.prometheus] entryPoint = \"traefik\" buckets = [0.1, 0.3, 1.2, 5.0] 1-1 traefik.toml defaultEntryPoints = [\"http\", \"https\"] [entryPoints] [entryPoints.http] address = \":80\" [entryPoints.http.redirect] entryPoint = \"https\" [entryPoints.https] address = \":443\" [entryPoints.https.tls] [[entryPoints.https.tls.certificates]] CertFile = \"/ssl/tls.crt\" KeyFile = \"/ssl/tls.key\" [metrics] [metrics.prometheus] entryPoint = \"traefik\" buckets = [0.1, 0.3, 1.2, 5.0] \u6211\u4eec\u9700\u8981\u5728 traefik.toml \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e0a\u4e0a\u9762\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7136\u540e\u66f4\u65b0 ConfigMap \u548c Pod \u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff0c $ kubectl delete configmap traefik-conf -n kube-system configmap \"traefik-conf\" deleted $ kubectl create configmap traefik-conf --from-file=traefik.toml -n kube-system configmap \"traefik-conf\" created $ kubectl apply -f traefik.yaml --from-file=traefik.toml Traefik Pod \u8fd0\u884c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684\u670d\u52a1 IP $ kubectl get svc -n kube-system NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE traefik-ingress-service NodePort 10.254.141.152 <none> 80:32221/TCP,8080:32440/TCP 1m $ kubectl get pods -n kube-system -l k8s-app=traefik-ingress-lb -o wide NAME READY STATUS RESTARTS AGE IP NODE traefik-ingress-controller-7b57f48999-x6rgf 1/1 Running 0 7m 172.17.0.13 192.168.1.170 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728 192.168.1.170 \u4f7f\u7528 curl \u68c0\u67e5\u662f\u5426\u5f00\u542f\u4e86 Prometheus \u6307\u6807\u6570\u636e\u63a5\u53e3\uff0c\u6216\u8005\u901a\u8fc7 NodePort \u8bbf\u95ee\u4e5f\u53ef\u4ee5\uff1a $ curl 10.254.141.152:8080 <a href=\"/dashboard/\">Found</a>. $ curl 10.254.141.152:8080/metrics # HELP go_gc_duration_seconds A summary of the GC invocation durations. # TYPE go_gc_duration_seconds summary go_gc_duration_seconds{quantile=\"0\"} 5.2278e-05 go_gc_duration_seconds{quantile=\"0.25\"} 0.00019601 go_gc_duration_seconds{quantile=\"0.5\"} 0.001842359 go_gc_duration_seconds{quantile=\"0.75\"} 0.003759024 go_gc_duration_seconds{quantile=\"1\"} 0.013050517 go_gc_duration_seconds_sum 0.045638715 go_gc_duration_seconds_count 13 # HELP go_goroutines Number of goroutines that currently exist. # TYPE go_goroutines gauge go_goroutines 68 # HELP go_memstats_alloc_bytes Number of bytes allocated and still in use. # TYPE go_memstats_alloc_bytes gauge go_memstats_alloc_bytes 5.160144e+06 # HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed. # TYPE go_memstats_alloc_bytes_total counter go_memstats_alloc_bytes_total 3.9738656e+07 # HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table. # TYPE go_memstats_buck_hash_sys_bytes gauge go_memstats_buck_hash_sys_bytes 1.464133e+06 ... \u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230 Traefik \u7684\u76d1\u63a7\u6570\u636e\u63a5\u53e3\u5df2\u7ecf\u5f00\u542f\u6210\u529f\u4e86\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e2a /metrics \u63a5\u53e3\u914d\u7f6e\u5230 prometheus.yml \u4e2d\u53bb\u4e86\uff0c\u76f4\u63a5\u52a0\u5230\u9ed8\u8ba4\u7684 prometheus \u8fd9\u4e2a job \u4e0b\u9762\uff1a( prometheus-config.yaml ) apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | global: scrape_interval: 30s scrape_timeout: 30s scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'traefik' static_configs: - targets: ['traefik-ingress-service.kube-system.svc.cluster.local:8080'] ... \u5f53\u7136\uff0c\u6211\u4eec\u8fd9\u91cc\u53ea\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u914d\u7f6e\uff0c scrape_configs \u4e0b\u9762\u53ef\u4ee5\u652f\u6301\u5f88\u591a\u53c2\u6570 \uff0c\u4f8b\u5982 basic_auth \u548c bearer_token \uff1a\u6bd4\u5982\u6211\u4eec\u63d0\u4f9b\u7684 /metrics \u63a5\u53e3\u9700\u8981 basic \u8ba4\u8bc1\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u4f20\u7edf\u7684\u7528\u6237\u540d/\u5bc6\u7801\u6216\u8005\u5728\u8bf7\u6c42\u7684 header \u4e2d\u6dfb\u52a0\u5bf9\u5e94\u7684 token \u90fd\u53ef\u4ee5\u652f\u6301 kubernetes_sd_configs \u6216 consul_sd_configs \uff1a\u53ef\u4ee5\u7528\u6765\u81ea\u52a8\u53d1\u73b0\u4e00\u4e9b\u5e94\u7528\u7684\u76d1\u63a7\u6570\u636e \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc Traefik \u5bf9\u5e94\u7684 servicename \u662f traefik-ingress-service \uff0c\u5e76\u4e14\u5728 kube-system \u8fd9\u4e2a namespace \u4e0b\u9762\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u7684 targets \u7684\u8def\u5f84\u914d\u7f6e\u5219\u9700\u8981\u4f7f\u7528 FQDN \u7684\u5f62\u5f0f\uff1a traefik-ingress-service.kube-system.svc.cluster.local \uff0c\u5f53\u7136\u5982\u679c\u4f60\u7684 Traefik \u548c Prometheus \u90fd\u90e8\u7f72\u5728\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u8bdd\uff0c\u5219\u76f4\u63a5\u586b servicename:serviceport \u5373\u53ef\u3002\u7136\u540e\u6211\u4eec\u91cd\u65b0\u66f4\u65b0\u8fd9\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff1a traefik-ingress-service.kube-system.svc.cluster.local $ kubectl delete -f prometheus-config.yaml configmap \"prometheus-config\" deleted $ kubectl create -f prometheus-config.yaml configmap \"prometheus-config\" created \u73b0\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5df2\u7ecf\u66f4\u6539\u4e86\uff0c\u9694\u4e00\u4f1a\u513f\u88ab\u6302\u8f7d\u5230 Pod \u4e2d\u7684 prometheus-deploy.yaml \u6587\u4ef6\u4e5f\u4f1a\u66f4\u65b0\uff0c\u7531\u4e8e\u6211\u4eec\u4e4b\u524d\u7684 Prometheus \u542f\u52a8\u53c2\u6570\u4e2d\u6dfb\u52a0\u4e86 --web.enable-lifecycle \u53c2\u6570\uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u6267\u884c\u4e00\u4e2a reload \u547d\u4ee4\u5373\u53ef\u8ba9\u914d\u7f6e\u751f\u6548\uff1a $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE rometheus NodePort 10.254.35.188 <none> 9090:30900/TCP 15d \u5728 node 192.168.1.179 \u4e0a $ curl -X POST \"http://10.254.35.188:9090/-/reload\" Reloading configuration file... \u7531\u4e8e ConfigMap \u901a\u8fc7 Volume \u7684\u5f62\u5f0f\u6302\u8f7d\u5230 Pod \u4e2d\u53bb\u7684\u70ed\u66f4\u65b0\u9700\u8981\u4e00\u5b9a\u7684\u95f4\u9694\u65f6\u95f4\u624d\u4f1a\u751f\u6548\uff0c\u6240\u4ee5\u9700\u8981\u7a0d\u5fae\u7b49\u4e00\u5c0f\u4f1a\u513f\u3002 http://192.168.1.170:30900/targets reload \u8fd9\u4e2a url \u662f\u4e00\u4e2a POST \u8bf7\u6c42\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u901a\u8fc7 service \u7684 CLUSTER-IP:PORT \u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230\u8fd9\u4e2a\u91cd\u8f7d\u7684\u63a5\u53e3\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u518d\u53bb\u770b Prometheus \u7684 Dashboard \u4e2d\u67e5\u770b\u91c7\u96c6\u7684\u76ee\u6807\u6570\u636e\uff1a \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521a\u521a\u6dfb\u52a0\u7684 traefik \u8fd9\u4e2a\u4efb\u52a1\u5df2\u7ecf\u51fa\u73b0\u4e86\uff0c\u7136\u540e\u540c\u6837\u7684\u6211\u4eec\u53ef\u4ee5\u5207\u6362\u5230 Graph \u4e0b\u9762\u53bb\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e9b Traefik \u7684\u6307\u6807\u6570\u636e\uff0c\u81f3\u4e8e\u8fd9\u4e9b\u6307\u6807\u6570\u636e\u4ee3\u8868\u4ec0\u4e48\u610f\u4e49\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb\u67e5\u770b\u5bf9\u5e94\u7684 /metrics \u63a5\u53e3\uff0c\u91cc\u9762\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u4f1a\u6709\u5bf9\u5e94\u7684\u6ce8\u91ca\u3002 \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5728 Prometheus \u4e0a\u914d\u7f6e\u4e86\u7b2c\u4e00\u4e2a Kubernetes \u5e94\u7528\u3002 2 \u4f7f\u7528 exporter \u76d1\u63a7\u5e94\u7528 \u4e0a\u9762\u6211\u4eec\u4e5f\u8bf4\u8fc7\u6709\u4e00\u4e9b\u5e94\u7528\u53ef\u80fd\u6ca1\u6709\u81ea\u5e26 /metrics \u63a5\u53e3\u4f9b Prometheus \u4f7f\u7528\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5229\u7528 exporter \u670d\u52a1\u6765\u4e3a Prometheus \u63d0\u4f9b\u6307\u6807\u6570\u636e\u4e86\u3002 Prometheus \u5b98\u65b9\u4e3a\u8bb8\u591a\u5e94\u7528\u5c31\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684 exporter \u5e94\u7528\uff0c\u4e5f\u6709\u8bb8\u591a\u7b2c\u4e09\u65b9\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u524d\u5f80\u5b98\u65b9\u7f51\u7ad9\u8fdb\u884c\u67e5\u770b\uff1a exporters \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u901a\u8fc7\u4e00\u4e2a redis-exporter \u7684\u670d\u52a1\u6765\u76d1\u63a7 redis \u670d\u52a1\uff0c\u5bf9\u4e8e\u8fd9\u7c7b\u5e94\u7528\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u4ee5 sidecar \u7684\u5f62\u5f0f\u548c\u4e3b\u5e94\u7528\u90e8\u7f72\u5728\u540c\u4e00\u4e2a Pod \u4e2d\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u6765\u90e8\u7f72\u4e00\u4e2a redis \u5e94\u7528\uff0c\u5e76\u7528 redis-exporter \u7684\u65b9\u5f0f\u6765\u91c7\u96c6\u76d1\u63a7\u6570\u636e\u4f9b Prometheus \u4f7f\u7528\uff0c\u5982\u4e0b\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff1a\uff08 prome-redis.yaml \uff09 apiVersion: extensions/v1beta1 kind: Deployment metadata: name: redis namespace: kube-ops spec: template: metadata: annotations: prometheus.io/scrape: \"true\" prometheus.io/port: \"9121\" labels: app: redis spec: containers: - name: redis image: redis:4 resources: requests: cpu: 100m memory: 100Mi ports: - containerPort: 6379 - name: redis-exporter image: oliver006/redis_exporter:latest resources: requests: cpu: 100m memory: 100Mi ports: - containerPort: 9121 --- kind: Service apiVersion: v1 metadata: name: redis namespace: kube-ops spec: selector: app: redis ports: - name: redis port: 6379 targetPort: 6379 - name: prom port: 9121 targetPort: 9121 \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u6211\u4eec\u5728 redis \u8fd9\u4e2a Pod \u4e2d\u5305\u542b\u4e86\u4e24\u4e2a\u5bb9\u5668\uff0c\u4e00\u4e2a\u5c31\u662f redis \u672c\u8eab\u7684\u4e3b\u5e94\u7528\uff0c\u53e6\u5916\u4e00\u4e2a\u5bb9\u5668\u5c31\u662f redis_exporter \u3002\u73b0\u5728\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u5e94\u7528\uff1a $ kubectl create -f prome-redis.yaml deployment.extensions \"redis\" created service \"redis\" created \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 redis \u7684 Pod \u91cc\u9762\u5305\u542b\u6709\u4e24\u4e2a\u5bb9\u5668\uff1a $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE prometheus-66cf4c9574-8f9f6 1/1 Running 1 5d redis-59bf8cdd76-d5hq7 2/2 Running 0 23m $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.254.35.188 <none> 9090:30900/TCP 5d redis ClusterIP 10.254.9.196 <none> 6379/TCP,9121/TCP 24m \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 9121 \u7aef\u53e3\u6765\u6821\u9a8c\u662f\u5426\u80fd\u591f\u91c7\u96c6\u5230\u6570\u636e( 138 )\uff1a curl 10.254.9.196:9121/metrics # HELP go_gc_duration_seconds A summary of the GC invocation durations. # TYPE go_gc_duration_seconds summary go_gc_duration_seconds{quantile=\"0\"} 0 go_gc_duration_seconds{quantile=\"0.25\"} 0 go_gc_duration_seconds{quantile=\"0.5\"} 0 go_gc_duration_seconds{quantile=\"0.75\"} 0 go_gc_duration_seconds{quantile=\"1\"} 0 go_gc_duration_seconds_sum 0 go_gc_duration_seconds_count 0 ... \u540c\u6837\u7684\uff0c\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\uff1a apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | global: scrape_interval: 30s scrape_timeout: 30s scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'traefik' static_configs: - targets: ['traefik-ingress-service.kube-system.svc.cluster.local:8080'] - job_name: 'redis' static_configs: - targets: ['redis:9121'] \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u7684 redis \u670d\u52a1\u548c Prometheus \u5904\u4e8e\u540c\u4e00\u4e2a namespace \uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u4f7f\u7528 servicename \u5373\u53ef\u3002 $ kubectl delete -f prometheus-config.yaml configmap \"prometheus-config\" deleted $ kubectl create -f prometheus-config.yaml configmap \"prometheus-config\" created \u5728 node 192.168.1.179 \u4e0a $ curl -X POST \"http://10.254.35.188:9090/-/reload\" Reloading configuration file... \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u518d\u53bb\u770b Prometheus \u7684 Dashboard \u4e2d\u67e5\u770b\u91c7\u96c6\u7684\u76ee\u6807\u6570\u636e\uff1a \u53ef\u4ee5\u770b\u5230\u914d\u7f6e\u7684 redis \u8fd9\u4e2a job \u5df2\u7ecf\u751f\u6548\u4e86\u3002\u5207\u6362\u5230 Graph \u4e0b\u9762\u53ef\u4ee5\u770b\u5230\u5f88\u591a\u5173\u4e8e redis \u7684\u6307\u6807\u6570\u636e\uff1a \u6211\u4eec\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u6307\u6807\uff0c\u6bd4\u5982 redis_exporter_scrapes_total \uff0c\u7136\u540e\u70b9\u51fb\u6267\u884c\u5c31\u53ef\u4ee5\u770b\u5230\u5bf9\u5e94\u7684\u6570\u636e\u56fe\u8868\u4e86\uff1a redis scrapes total \u6ce8\u610f\uff0c\u5982\u679c\u65f6\u95f4\u6709\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u5728 Graph \u4e0b\u9762\u8c03\u6574\u4e0b\u65f6\u95f4","title":"\u7b2c\u4e94\u8282 \u5e94\u7528\u76d1\u63a7\uff08Metrics/Exporter\u7684\u914d\u7f6e\uff09"},{"location":"chap3/5Adv_Prometheus_monitor/#metricsexporter","text":"Prometheus \u7684\u6570\u636e\u6307\u6807\u662f\u901a\u8fc7\u4e00\u4e2a\u516c\u5f00\u7684 HTTP(S) \u6570\u636e\u63a5\u53e3\u83b7\u53d6\u5230\u7684\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5355\u72ec\u5b89\u88c5\u76d1\u63a7\u7684 agent \uff0c \u53ea\u9700\u8981\u66b4\u9732\u4e00\u4e2a metrics \u63a5\u53e3 \uff0c Prometheus \u5c31\u4f1a\u5b9a\u671f\u53bb\u62c9\u53d6\u6570\u636e\uff1b \u5bf9\u4e8e\u4e00\u4e9b\u666e\u901a\u7684 HTTP \u670d\u52a1\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u91cd\u7528\u8fd9\u4e2a\u670d\u52a1\uff0c\u6dfb\u52a0\u4e00\u4e2a /metrics \u63a5\u53e3\u66b4\u9732\u7ed9 Prometheus \uff1b\u800c\u4e14\u83b7\u53d6\u5230\u7684\u6307\u6807\u6570\u636e\u683c\u5f0f\u662f\u975e\u5e38\u6613\u61c2\u7684\uff0c\u4e0d\u9700\u8981\u592a\u9ad8\u7684\u5b66\u4e60\u6210\u672c\u3002 \u73b0\u5728\u5f88\u591a\u670d\u52a1\u4ece\u4e00\u5f00\u59cb\u5c31\u5185\u7f6e\u4e86\u4e00\u4e2a /metrics \u63a5\u53e3\uff0c\u6bd4\u5982 Kubernetes \u7684\u5404\u4e2a\u7ec4\u4ef6\u3001 istio \u670d\u52a1\u7f51\u683c\u90fd\u76f4\u63a5\u63d0\u4f9b\u4e86\u6570\u636e\u6307\u6807\u63a5\u53e3\u3002 \u6709\u4e00\u4e9b\u670d\u52a1\u5373\u4f7f\u6ca1\u6709\u539f\u751f\u96c6\u6210\u8be5\u63a5\u53e3\uff0c\u4e5f\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b exporter \u6765\u83b7\u53d6\u5230\u6307\u6807\u6570\u636e\uff0c\u6bd4\u5982 mysqld_exporter \u3001 node_exporter \uff0c\u8fd9\u4e9b exporter \u5c31\u6709\u70b9\u7c7b\u4f3c\u4e8e\u4f20\u7edf\u76d1\u63a7\u670d\u52a1\u4e2d\u7684 agent \uff0c\u4f5c\u4e3a\u4e00\u76f4\u670d\u52a1\u5b58\u5728\uff0c\u7528\u6765\u6536\u96c6\u76ee\u6807\u670d\u52a1\u7684\u6307\u6807\u6570\u636e\u7136\u540e\u76f4\u63a5\u66b4\u9732\u7ed9 Prometheus \u3002","title":"\u7b2c\u4e94\u8282 \u5e94\u7528\u76d1\u63a7\uff08Metrics/Exporter\u7684\u914d\u7f6e\uff09"},{"location":"chap3/5Adv_Prometheus_monitor/#1","text":"\u6211\u4eec\u91c7\u7528\u7684\u662f Traefik \u4f5c\u4e3a\u6211\u4eec\u7684 ingress-controller \uff0c\u662f\u6211\u4eec Kubernetes \u96c6\u7fa4 \u5185\u90e8\u670d\u52a1\u548c\u5916\u90e8\u7528\u6237 \u4e4b\u95f4\u7684\u6865\u6881\u3002 Traefik \u672c\u8eab\u5185\u7f6e\u4e86\u4e00\u4e2a /metrics \u7684\u63a5\u53e3\uff0c\u4f46\u662f\u9700\u8981\u6211\u4eec\u5728\u53c2\u6570\u4e2d\u914d\u7f6e\u5f00\u542f: [metrics] [metrics.prometheus] entryPoint = \"traefik\" buckets = [0.1, 0.3, 1.2, 5.0]","title":"1 \u666e\u901a\u5e94\u7528\u76d1\u63a7"},{"location":"chap3/5Adv_Prometheus_monitor/#1-1-traefiktoml","text":"defaultEntryPoints = [\"http\", \"https\"] [entryPoints] [entryPoints.http] address = \":80\" [entryPoints.http.redirect] entryPoint = \"https\" [entryPoints.https] address = \":443\" [entryPoints.https.tls] [[entryPoints.https.tls.certificates]] CertFile = \"/ssl/tls.crt\" KeyFile = \"/ssl/tls.key\" [metrics] [metrics.prometheus] entryPoint = \"traefik\" buckets = [0.1, 0.3, 1.2, 5.0] \u6211\u4eec\u9700\u8981\u5728 traefik.toml \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e0a\u4e0a\u9762\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7136\u540e\u66f4\u65b0 ConfigMap \u548c Pod \u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff0c $ kubectl delete configmap traefik-conf -n kube-system configmap \"traefik-conf\" deleted $ kubectl create configmap traefik-conf --from-file=traefik.toml -n kube-system configmap \"traefik-conf\" created $ kubectl apply -f traefik.yaml --from-file=traefik.toml Traefik Pod \u8fd0\u884c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684\u670d\u52a1 IP $ kubectl get svc -n kube-system NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE traefik-ingress-service NodePort 10.254.141.152 <none> 80:32221/TCP,8080:32440/TCP 1m $ kubectl get pods -n kube-system -l k8s-app=traefik-ingress-lb -o wide NAME READY STATUS RESTARTS AGE IP NODE traefik-ingress-controller-7b57f48999-x6rgf 1/1 Running 0 7m 172.17.0.13 192.168.1.170 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728 192.168.1.170 \u4f7f\u7528 curl \u68c0\u67e5\u662f\u5426\u5f00\u542f\u4e86 Prometheus \u6307\u6807\u6570\u636e\u63a5\u53e3\uff0c\u6216\u8005\u901a\u8fc7 NodePort \u8bbf\u95ee\u4e5f\u53ef\u4ee5\uff1a $ curl 10.254.141.152:8080 <a href=\"/dashboard/\">Found</a>. $ curl 10.254.141.152:8080/metrics # HELP go_gc_duration_seconds A summary of the GC invocation durations. # TYPE go_gc_duration_seconds summary go_gc_duration_seconds{quantile=\"0\"} 5.2278e-05 go_gc_duration_seconds{quantile=\"0.25\"} 0.00019601 go_gc_duration_seconds{quantile=\"0.5\"} 0.001842359 go_gc_duration_seconds{quantile=\"0.75\"} 0.003759024 go_gc_duration_seconds{quantile=\"1\"} 0.013050517 go_gc_duration_seconds_sum 0.045638715 go_gc_duration_seconds_count 13 # HELP go_goroutines Number of goroutines that currently exist. # TYPE go_goroutines gauge go_goroutines 68 # HELP go_memstats_alloc_bytes Number of bytes allocated and still in use. # TYPE go_memstats_alloc_bytes gauge go_memstats_alloc_bytes 5.160144e+06 # HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed. # TYPE go_memstats_alloc_bytes_total counter go_memstats_alloc_bytes_total 3.9738656e+07 # HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table. # TYPE go_memstats_buck_hash_sys_bytes gauge go_memstats_buck_hash_sys_bytes 1.464133e+06 ... \u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230 Traefik \u7684\u76d1\u63a7\u6570\u636e\u63a5\u53e3\u5df2\u7ecf\u5f00\u542f\u6210\u529f\u4e86\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e2a /metrics \u63a5\u53e3\u914d\u7f6e\u5230 prometheus.yml \u4e2d\u53bb\u4e86\uff0c\u76f4\u63a5\u52a0\u5230\u9ed8\u8ba4\u7684 prometheus \u8fd9\u4e2a job \u4e0b\u9762\uff1a( prometheus-config.yaml ) apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | global: scrape_interval: 30s scrape_timeout: 30s scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'traefik' static_configs: - targets: ['traefik-ingress-service.kube-system.svc.cluster.local:8080'] ... \u5f53\u7136\uff0c\u6211\u4eec\u8fd9\u91cc\u53ea\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u914d\u7f6e\uff0c scrape_configs \u4e0b\u9762\u53ef\u4ee5\u652f\u6301\u5f88\u591a\u53c2\u6570 \uff0c\u4f8b\u5982 basic_auth \u548c bearer_token \uff1a\u6bd4\u5982\u6211\u4eec\u63d0\u4f9b\u7684 /metrics \u63a5\u53e3\u9700\u8981 basic \u8ba4\u8bc1\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u4f20\u7edf\u7684\u7528\u6237\u540d/\u5bc6\u7801\u6216\u8005\u5728\u8bf7\u6c42\u7684 header \u4e2d\u6dfb\u52a0\u5bf9\u5e94\u7684 token \u90fd\u53ef\u4ee5\u652f\u6301 kubernetes_sd_configs \u6216 consul_sd_configs \uff1a\u53ef\u4ee5\u7528\u6765\u81ea\u52a8\u53d1\u73b0\u4e00\u4e9b\u5e94\u7528\u7684\u76d1\u63a7\u6570\u636e \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc Traefik \u5bf9\u5e94\u7684 servicename \u662f traefik-ingress-service \uff0c\u5e76\u4e14\u5728 kube-system \u8fd9\u4e2a namespace \u4e0b\u9762\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u7684 targets \u7684\u8def\u5f84\u914d\u7f6e\u5219\u9700\u8981\u4f7f\u7528 FQDN \u7684\u5f62\u5f0f\uff1a traefik-ingress-service.kube-system.svc.cluster.local \uff0c\u5f53\u7136\u5982\u679c\u4f60\u7684 Traefik \u548c Prometheus \u90fd\u90e8\u7f72\u5728\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u8bdd\uff0c\u5219\u76f4\u63a5\u586b servicename:serviceport \u5373\u53ef\u3002\u7136\u540e\u6211\u4eec\u91cd\u65b0\u66f4\u65b0\u8fd9\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\uff1a traefik-ingress-service.kube-system.svc.cluster.local $ kubectl delete -f prometheus-config.yaml configmap \"prometheus-config\" deleted $ kubectl create -f prometheus-config.yaml configmap \"prometheus-config\" created \u73b0\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5df2\u7ecf\u66f4\u6539\u4e86\uff0c\u9694\u4e00\u4f1a\u513f\u88ab\u6302\u8f7d\u5230 Pod \u4e2d\u7684 prometheus-deploy.yaml \u6587\u4ef6\u4e5f\u4f1a\u66f4\u65b0\uff0c\u7531\u4e8e\u6211\u4eec\u4e4b\u524d\u7684 Prometheus \u542f\u52a8\u53c2\u6570\u4e2d\u6dfb\u52a0\u4e86 --web.enable-lifecycle \u53c2\u6570\uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u6267\u884c\u4e00\u4e2a reload \u547d\u4ee4\u5373\u53ef\u8ba9\u914d\u7f6e\u751f\u6548\uff1a $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE rometheus NodePort 10.254.35.188 <none> 9090:30900/TCP 15d \u5728 node 192.168.1.179 \u4e0a $ curl -X POST \"http://10.254.35.188:9090/-/reload\" Reloading configuration file... \u7531\u4e8e ConfigMap \u901a\u8fc7 Volume \u7684\u5f62\u5f0f\u6302\u8f7d\u5230 Pod \u4e2d\u53bb\u7684\u70ed\u66f4\u65b0\u9700\u8981\u4e00\u5b9a\u7684\u95f4\u9694\u65f6\u95f4\u624d\u4f1a\u751f\u6548\uff0c\u6240\u4ee5\u9700\u8981\u7a0d\u5fae\u7b49\u4e00\u5c0f\u4f1a\u513f\u3002 http://192.168.1.170:30900/targets reload \u8fd9\u4e2a url \u662f\u4e00\u4e2a POST \u8bf7\u6c42\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u901a\u8fc7 service \u7684 CLUSTER-IP:PORT \u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230\u8fd9\u4e2a\u91cd\u8f7d\u7684\u63a5\u53e3\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u518d\u53bb\u770b Prometheus \u7684 Dashboard \u4e2d\u67e5\u770b\u91c7\u96c6\u7684\u76ee\u6807\u6570\u636e\uff1a \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521a\u521a\u6dfb\u52a0\u7684 traefik \u8fd9\u4e2a\u4efb\u52a1\u5df2\u7ecf\u51fa\u73b0\u4e86\uff0c\u7136\u540e\u540c\u6837\u7684\u6211\u4eec\u53ef\u4ee5\u5207\u6362\u5230 Graph \u4e0b\u9762\u53bb\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e9b Traefik \u7684\u6307\u6807\u6570\u636e\uff0c\u81f3\u4e8e\u8fd9\u4e9b\u6307\u6807\u6570\u636e\u4ee3\u8868\u4ec0\u4e48\u610f\u4e49\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb\u67e5\u770b\u5bf9\u5e94\u7684 /metrics \u63a5\u53e3\uff0c\u91cc\u9762\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u4f1a\u6709\u5bf9\u5e94\u7684\u6ce8\u91ca\u3002 \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5728 Prometheus \u4e0a\u914d\u7f6e\u4e86\u7b2c\u4e00\u4e2a Kubernetes \u5e94\u7528\u3002","title":"1-1 traefik.toml"},{"location":"chap3/5Adv_Prometheus_monitor/#2-exporter","text":"\u4e0a\u9762\u6211\u4eec\u4e5f\u8bf4\u8fc7\u6709\u4e00\u4e9b\u5e94\u7528\u53ef\u80fd\u6ca1\u6709\u81ea\u5e26 /metrics \u63a5\u53e3\u4f9b Prometheus \u4f7f\u7528\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5229\u7528 exporter \u670d\u52a1\u6765\u4e3a Prometheus \u63d0\u4f9b\u6307\u6807\u6570\u636e\u4e86\u3002 Prometheus \u5b98\u65b9\u4e3a\u8bb8\u591a\u5e94\u7528\u5c31\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684 exporter \u5e94\u7528\uff0c\u4e5f\u6709\u8bb8\u591a\u7b2c\u4e09\u65b9\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u524d\u5f80\u5b98\u65b9\u7f51\u7ad9\u8fdb\u884c\u67e5\u770b\uff1a exporters \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u901a\u8fc7\u4e00\u4e2a redis-exporter \u7684\u670d\u52a1\u6765\u76d1\u63a7 redis \u670d\u52a1\uff0c\u5bf9\u4e8e\u8fd9\u7c7b\u5e94\u7528\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u4ee5 sidecar \u7684\u5f62\u5f0f\u548c\u4e3b\u5e94\u7528\u90e8\u7f72\u5728\u540c\u4e00\u4e2a Pod \u4e2d\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u6765\u90e8\u7f72\u4e00\u4e2a redis \u5e94\u7528\uff0c\u5e76\u7528 redis-exporter \u7684\u65b9\u5f0f\u6765\u91c7\u96c6\u76d1\u63a7\u6570\u636e\u4f9b Prometheus \u4f7f\u7528\uff0c\u5982\u4e0b\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff1a\uff08 prome-redis.yaml \uff09 apiVersion: extensions/v1beta1 kind: Deployment metadata: name: redis namespace: kube-ops spec: template: metadata: annotations: prometheus.io/scrape: \"true\" prometheus.io/port: \"9121\" labels: app: redis spec: containers: - name: redis image: redis:4 resources: requests: cpu: 100m memory: 100Mi ports: - containerPort: 6379 - name: redis-exporter image: oliver006/redis_exporter:latest resources: requests: cpu: 100m memory: 100Mi ports: - containerPort: 9121 --- kind: Service apiVersion: v1 metadata: name: redis namespace: kube-ops spec: selector: app: redis ports: - name: redis port: 6379 targetPort: 6379 - name: prom port: 9121 targetPort: 9121 \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u6211\u4eec\u5728 redis \u8fd9\u4e2a Pod \u4e2d\u5305\u542b\u4e86\u4e24\u4e2a\u5bb9\u5668\uff0c\u4e00\u4e2a\u5c31\u662f redis \u672c\u8eab\u7684\u4e3b\u5e94\u7528\uff0c\u53e6\u5916\u4e00\u4e2a\u5bb9\u5668\u5c31\u662f redis_exporter \u3002\u73b0\u5728\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u5e94\u7528\uff1a $ kubectl create -f prome-redis.yaml deployment.extensions \"redis\" created service \"redis\" created \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 redis \u7684 Pod \u91cc\u9762\u5305\u542b\u6709\u4e24\u4e2a\u5bb9\u5668\uff1a $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE prometheus-66cf4c9574-8f9f6 1/1 Running 1 5d redis-59bf8cdd76-d5hq7 2/2 Running 0 23m $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.254.35.188 <none> 9090:30900/TCP 5d redis ClusterIP 10.254.9.196 <none> 6379/TCP,9121/TCP 24m \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 9121 \u7aef\u53e3\u6765\u6821\u9a8c\u662f\u5426\u80fd\u591f\u91c7\u96c6\u5230\u6570\u636e( 138 )\uff1a curl 10.254.9.196:9121/metrics # HELP go_gc_duration_seconds A summary of the GC invocation durations. # TYPE go_gc_duration_seconds summary go_gc_duration_seconds{quantile=\"0\"} 0 go_gc_duration_seconds{quantile=\"0.25\"} 0 go_gc_duration_seconds{quantile=\"0.5\"} 0 go_gc_duration_seconds{quantile=\"0.75\"} 0 go_gc_duration_seconds{quantile=\"1\"} 0 go_gc_duration_seconds_sum 0 go_gc_duration_seconds_count 0 ... \u540c\u6837\u7684\uff0c\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\uff1a apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-ops data: prometheus.yml: | global: scrape_interval: 30s scrape_timeout: 30s scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'traefik' static_configs: - targets: ['traefik-ingress-service.kube-system.svc.cluster.local:8080'] - job_name: 'redis' static_configs: - targets: ['redis:9121'] \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u7684 redis \u670d\u52a1\u548c Prometheus \u5904\u4e8e\u540c\u4e00\u4e2a namespace \uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u4f7f\u7528 servicename \u5373\u53ef\u3002 $ kubectl delete -f prometheus-config.yaml configmap \"prometheus-config\" deleted $ kubectl create -f prometheus-config.yaml configmap \"prometheus-config\" created \u5728 node 192.168.1.179 \u4e0a $ curl -X POST \"http://10.254.35.188:9090/-/reload\" Reloading configuration file... \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u518d\u53bb\u770b Prometheus \u7684 Dashboard \u4e2d\u67e5\u770b\u91c7\u96c6\u7684\u76ee\u6807\u6570\u636e\uff1a \u53ef\u4ee5\u770b\u5230\u914d\u7f6e\u7684 redis \u8fd9\u4e2a job \u5df2\u7ecf\u751f\u6548\u4e86\u3002\u5207\u6362\u5230 Graph \u4e0b\u9762\u53ef\u4ee5\u770b\u5230\u5f88\u591a\u5173\u4e8e redis \u7684\u6307\u6807\u6570\u636e\uff1a \u6211\u4eec\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u6307\u6807\uff0c\u6bd4\u5982 redis_exporter_scrapes_total \uff0c\u7136\u540e\u70b9\u51fb\u6267\u884c\u5c31\u53ef\u4ee5\u770b\u5230\u5bf9\u5e94\u7684\u6570\u636e\u56fe\u8868\u4e86\uff1a redis scrapes total \u6ce8\u610f\uff0c\u5982\u679c\u65f6\u95f4\u6709\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u5728 Graph \u4e0b\u9762\u8c03\u6574\u4e0b\u65f6\u95f4","title":"2 \u4f7f\u7528 exporter \u76d1\u63a7\u5e94\u7528"},{"location":"chap3/6Adv_K8S_Nodes_monitor/","text":"\u7b2c\u516d\u8282 \u76d1\u63a7K8S\u96c6\u7fa4\u8282\u70b9&Node-exporter DaemonSet \u600e\u6837\u7528 Promethues \u6765\u76d1\u63a7 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5e94\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e Kubernetes \u96c6\u7fa4\u672c\u8eab\u7684\u76d1\u63a7\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u6211\u4eec\u9700\u8981\u65f6\u65f6\u523b\u523b\u4e86\u89e3\u96c6\u7fa4\u7684\u8fd0\u884c\u72b6\u6001\u3002 \u5bf9\u4e8e\u96c6\u7fa4\u7684\u76d1\u63a7\u4e00\u822c\u6211\u4eec\u9700\u8981\u8003\u8651\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a Kubernetes \u8282\u70b9\u7684\u76d1\u63a7\uff1a\u6bd4\u5982\u8282\u70b9\u7684 cpu \u3001 load \u3001 disk \u3001 memory \u7b49\u6307\u6807 \u5185\u90e8\u7cfb\u7edf\u7ec4\u4ef6\u7684\u72b6\u6001\uff1a\u6bd4\u5982 kube-scheduler \u3001 kube-controller-manager \u3001 kubedns/coredns \u7b49\u7ec4\u4ef6\u7684\u8be6\u7ec6\u8fd0\u884c\u72b6\u6001 \u7f16\u6392\u7ea7\u7684 metrics \uff1a\u6bd4\u5982 Deployment \u7684\u72b6\u6001\u3001\u8d44\u6e90\u8bf7\u6c42\u3001\u8c03\u5ea6\u548c API \u5ef6\u8fdf\u7b49\u6570\u636e\u6307\u6807 1 \u76d1\u63a7\u65b9\u6848 Kubernetes \u96c6\u7fa4\u7684\u76d1\u63a7\u65b9\u6848\u76ee\u524d\u4e3b\u8981\u6709\u4ee5\u4e0b\u96c6\u4e2d\u65b9\u6848\uff1a Heapster \uff1a Heapster \u662f\u4e00\u4e2a\u96c6\u7fa4\u8303\u56f4\u7684\u76d1\u63a7\u548c\u6570\u636e\u805a\u5408\u5de5\u5177\uff0c\u4ee5 Pod \u7684\u5f62\u5f0f\u8fd0\u884c\u5728\u96c6\u7fa4\u4e2d\u3002 \u9664\u4e86 Kubelet/cAdvisor \u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5411 Heapster \u6dfb\u52a0\u5176\u4ed6\u6307\u6807\u6e90\u6570\u636e\uff0c\u6bd4\u5982 kube-state-metrics \uff0c\u6211\u4eec\u4f1a\u5728\u4e0b\u9762\u548c\u5927\u5bb6\u8bb2\u89e3\u7684 \u9700\u8981\u6ce8\u610f\u7684\u662f Heapster \u5df2\u7ecf\u88ab\u5e9f\u5f03\u4e86\uff0c\u540e\u7eed\u7248\u672c\u4e2d\u4f1a\u4f7f\u7528 metrics-server \u4ee3\u66ff\u3002 cAdvisor \uff1a cAdvisor \u662f Google \u5f00\u6e90\u7684\u5bb9\u5668\u8d44\u6e90\u76d1\u63a7\u548c\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u5b83\u662f\u4e13\u95e8\u4e3a\u5bb9\u5668\u800c\u751f\uff0c\u672c\u8eab\u4e5f\u652f\u6301 Docker \u5bb9\u5668\uff0c\u5728 Kubernetes \u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5355\u72ec\u53bb\u5b89\u88c5\uff0c cAdvisor \u4f5c\u4e3a kubelet \u5185\u7f6e\u7684\u4e00\u90e8\u5206\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 Kube-state-metrics \uff1a kube-state-metrics \u901a\u8fc7\u76d1\u542c API Server \u751f\u6210\u6709\u5173\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u6307\u6807\uff0c\u6bd4\u5982 Deployment \u3001 Node \u3001 Pod \uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f kube-state-metrics \u53ea\u662f\u7b80\u5355\u63d0\u4f9b\u4e00\u4e2a metrics \u6570\u636e\uff0c\u5e76\u4e0d\u4f1a\u5b58\u50a8\u8fd9\u4e9b\u6307\u6807\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Prometheus \u6765\u6293\u53d6\u8fd9\u4e9b\u6570\u636e\u7136\u540e\u5b58\u50a8\u3002 metrics-server \uff1a metrics-server \u4e5f\u662f\u4e00\u4e2a\u96c6\u7fa4\u8303\u56f4\u5185\u7684\u8d44\u6e90\u6570\u636e\u805a\u5408\u5de5\u5177\uff0c\u662f Heapster \u7684\u66ff\u4ee3\u54c1\uff0c\u540c\u6837\u7684\uff0c metrics-server \u4e5f\u53ea\u662f\u663e\u793a\u6570\u636e\uff0c\u5e76\u4e0d\u63d0\u4f9b\u6570\u636e\u5b58\u50a8\u670d\u52a1\u3002 \u4e0d\u8fc7 kube-state-metrics \u548c metrics-server \u4e4b\u95f4\u8fd8\u662f\u6709\u5f88\u5927\u4e0d\u540c\u7684\uff0c\u4e8c\u8005\u7684\u4e3b\u8981\u533a\u522b\u5982\u4e0b \uff1a kube-state-metric s \u4e3b\u8981\u5173\u6ce8\u7684\u662f\u4e1a\u52a1\u76f8\u5173\u7684\u4e00\u4e9b\u5143\u6570\u636e\uff0c\u6bd4\u5982 Deployment \u3001 Pod \u3001\u526f\u672c\u72b6\u6001\u7b49 metrics-server \u4e3b\u8981\u5173\u6ce8\u7684\u662f \u8d44\u6e90\u5ea6\u91cf API \u7684\u5b9e\u73b0\uff0c\u6bd4\u5982 CPU\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u3001\u5185\u5b58\u3001\u8bf7\u6c42\u5ef6\u65f6\u7b49\u6307\u6807\u3002 2 \u76d1\u63a7\u96c6\u7fa4\u8282\u70b9 \u73b0\u5728\u6211\u4eec\u5c31\u6765\u5f00\u59cb\u6211\u4eec\u96c6\u7fa4\u7684\u76d1\u63a7\u5de5\u4f5c\uff0c\u9996\u5148\u6765\u76d1\u63a7\u6211\u4eec\u96c6\u7fa4\u7684\u8282\u70b9\uff0c\u8981\u76d1\u63a7\u8282\u70b9\u5176\u5b9e\u6211\u4eec\u5df2\u7ecf\u6709\u5f88\u591a\u975e\u5e38\u6210\u719f\u7684\u65b9\u6848\u4e86\uff0c\u6bd4\u5982 Nagios \u3001 zabbix \uff0c\u751a\u81f3\u6211\u4eec\u81ea\u5df1\u6765\u6536\u96c6\u6570\u636e\u4e5f\u53ef\u4ee5\uff0c\u6211\u4eec\u8fd9\u91cc\u901a\u8fc7 Prometheus \u6765\u91c7\u96c6\u8282\u70b9\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u53ef\u4ee5\u901a\u8fc7 node_exporter \u6765\u83b7\u53d6\uff0c\u987e\u540d\u601d\u4e49\uff0c node_exporter \u6293\u54df\u5c31\u662f\u7528\u4e8e\u91c7\u96c6\u670d\u52a1\u5668\u8282\u70b9\u7684\u5404\u79cd\u8fd0\u884c\u6307\u6807\u7684\uff0c\u76ee\u524d node_exporter \u652f\u6301\u51e0\u4e4e\u6240\u6709\u5e38\u89c1\u7684\u76d1\u63a7\u70b9\uff0c\u6bd4\u5982 conntrack \uff0c cpu \uff0c diskstats \uff0c filesystem \uff0c loadavg \uff0c meminfo \uff0c netstat \u7b49\uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 DaemonSet \u63a7\u5236\u5668\u6765\u90e8\u7f72\u8be5\u670d\u52a1\uff0c\u8fd9\u6837\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u4f1a\u81ea\u52a8\u8fd0\u884c\u4e00\u4e2a\u8fd9\u6837\u7684 Pod \uff0c\u5982\u679c\u6211\u4eec\u4ece\u96c6\u7fa4\u4e2d\u5220\u9664\u6216\u8005\u6dfb\u52a0\u8282\u70b9\u540e\uff0c\u4e5f\u4f1a\u8fdb\u884c\u81ea\u52a8\u6269\u5c55\u3002 \u5728\u90e8\u7f72 node-exporter \u7684\u65f6\u5019\u6709\u4e00\u4e9b\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff0c\u5982\u4e0b\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff1a( prome-node-exporter.yaml ) apiVersion: extensions/v1beta1 kind: DaemonSet metadata: name: node-exporter namespace: kube-ops labels: name: node-exporter spec: template: metadata: labels: name: node-exporter spec: hostPID: true hostIPC: true hostNetwork: true containers: - name: node-exporter image: prom/node-exporter:v0.16.0 ports: - containerPort: 9100 resources: requests: cpu: 0.15 securityContext: privileged: true args: - --path.procfs - /host/proc - --path.sysfs - /host/sys - --collector.filesystem.ignored-mount-points - '\"^/(sys|proc|dev|host|etc)($|/)\"' volumeMounts: - name: dev mountPath: /host/dev - name: proc mountPath: /host/proc - name: sys mountPath: /host/sys - name: rootfs mountPath: /rootfs tolerations: - key: \"node-role.kubernetes.io/master\" operator: \"Exists\" effect: \"NoSchedule\" volumes: - name: proc hostPath: path: /proc - name: dev hostPath: path: /dev - name: sys hostPath: path: /sys - name: rootfs hostPath: path: / \u7531\u4e8e\u6211\u4eec\u8981\u83b7\u53d6\u5230\u7684\u6570\u636e\u662f\u4e3b\u673a\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u800c\u6211\u4eec\u7684 node-exporter \u662f\u8fd0\u884c\u5728\u5bb9\u5668\u4e2d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728 Pod \u4e2d\u9700\u8981\u914d\u7f6e\u4e00\u4e9b Pod \u7684\u5b89\u5168\u7b56\u7565\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u6dfb\u52a0\u4e86 hostPID: true \u3001 hostIPC : true \u3001 hostNetwork: true 3\u4e2a\u7b56\u7565\uff0c\u7528\u6765\u4f7f\u7528\u4e3b\u673a\u7684 PID namespace \u3001 IPC namespace \u4ee5\u53ca\u4e3b\u673a\u7f51\u7edc\uff0c\u8fd9\u4e9b namespace \u5c31\u662f\u7528\u4e8e\u5bb9\u5668\u9694\u79bb\u7684\u5173\u952e\u6280\u672f\uff0c\u8981\u6ce8\u610f\u8fd9\u91cc\u7684 namespace \u548c\u96c6\u7fa4\u4e2d\u7684 namespace \u662f\u4e24\u4e2a\u5b8c\u5168\u4e0d\u76f8\u540c\u7684\u6982\u5ff5\u3002 \u53e6\u5916\u6211\u4eec\u8fd8\u5c06\u4e3b\u673a\u7684 /dev \u3001 /proc \u3001 /sys \u8fd9\u4e9b\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\uff0c\u8fd9\u4e9b\u56e0\u4e3a\u6211\u4eec\u91c7\u96c6\u7684\u5f88\u591a\u8282\u70b9\u6570\u636e\u90fd\u662f\u901a\u8fc7\u8fd9\u4e9b\u6587\u4ef6\u5939\u4e0b\u9762\u7684\u6587\u4ef6\u6765\u83b7\u53d6\u5230\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u5728\u4f7f\u7528 top \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5f53\u524d cpu \u4f7f\u7528\u60c5\u51b5\uff0c\u6570\u636e\u5c31\u6765\u6e90\u4e8e\u6587\u4ef6 /proc/stat \uff0c\u4f7f\u7528 free \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u5176\u6570\u636e\u6765\u6e90\u662f\u6765\u81ea /proc/meminfo \u6587\u4ef6\u3002 \u53e6\u5916\u7531\u4e8e\u6211\u4eec\u96c6\u7fa4\u4f7f\u7528\u7684\u662f kubeadm \u642d\u5efa\u7684\uff0c\u6240\u4ee5\u5982\u679c\u5e0c\u671b master \u8282\u70b9\u4e5f\u4e00\u8d77\u88ab\u76d1\u63a7\uff0c\u5219\u9700\u8981\u6dfb\u52a0\u54cd\u5e94\u7684\u5bb9\u5fcd\uff0c\u5bf9\u4e8e\u6c61\u70b9\u548c\u5bb9\u5fcd\u8fd8\u4e0d\u662f\u5f88\u719f\u6089\u7684\u540c\u5b66\u53ef\u4ee5\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\u56de\u987e\u4e0b\u3002 $ kubectl create -f prome-node-exporter.yaml daemonset.extensions \"node-exporter\" created $ kubectl get pods -n kube-ops -o wide NAME READY STATUS RESTARTS AGE IP NODE node-exporter-jfwfv 1/1 Running 0 30m 10.151.30.63 node02 node-exporter-kr8rt 1/1 Running 0 30m 10.151.30.64 node03 node-exporter-whb7n 1/1 Running 0 20m 10.151.30.57 master prometheus-8566cd9699-gt9wh 1/1 Running 0 4d 10.244.4.39 node02 redis-544b6c8c54-8xd2g 2/2 Running 0 23h 10.244.2.87 node03 \u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728 3 \u4e2a\u8282\u70b9\u4e0a\u90fd\u8fd0\u884c\u4e86\u4e00\u4e2a Pod \uff0c\u6709\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u8bf4\u6211\u4eec\u8fd9\u91cc\u4e0d\u9700\u8981\u521b\u5efa\u4e00\u4e2a Service \u5417\uff1f\u6211\u4eec\u5e94\u8be5\u600e\u6837\u53bb\u83b7\u53d6 /metrics \u6570\u636e\u5462\uff1f\u6211\u4eec\u4e0a\u9762\u662f\u4e0d\u662f\u6307\u5b9a\u4e86 hostNetwork=true \uff0c\u6240\u4ee5\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5c31\u4f1a\u7ed1\u5b9a\u4e00\u4e2a\u7aef\u53e3 9100 \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u7aef\u53e3\u53bb\u83b7\u53d6\u5230\u76d1\u63a7\u6307\u6807\u6570\u636e\uff1a $ curl 127.0.0.1:9100/metrics ... node_filesystem_device_error{device=\"shm\",fstype=\"tmpfs\",mountpoint=\"/rootfs/var/lib/docker/containers/aefe8b1b63c3aa5f27766053ec817415faf8f6f417bb210d266fef0c2da64674/shm\"} 1 node_filesystem_device_error{device=\"shm\",fstype=\"tmpfs\",mountpoint=\"/rootfs/var/lib/docker/containers/c8652ca72230496038a07e4fe4ee47046abb5f88d9d2440f0c8a923d5f3e133c/shm\"} 1 node_filesystem_device_error{device=\"tmpfs\",fstype=\"tmpfs\",mountpoint=\"/dev\"} 0 node_filesystem_device_error{device=\"tmpfs\",fstype=\"tmpfs\",mountpoint=\"/dev/shm\"} 0 ... \u5f53\u7136\u5982\u679c\u4f60\u89c9\u5f97\u4e0a\u9762\u7684\u624b\u52a8\u5b89\u88c5\u65b9\u5f0f\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 Helm \u7684\u65b9\u5f0f\u6765\u5b89\u88c5\uff1a $ helm install --name node-exporter stable/prometheus-node-exporter --namespace kube-ops 3 \u670d\u52a1\u53d1\u73b0 \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc 3 \u4e2a\u8282\u70b9\u4e0a\u9762\u90fd\u8fd0\u884c\u4e86 node-exporter \u7a0b\u5e8f\uff0c\u5982\u679c\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a Service \u6765\u5c06\u6570\u636e\u6536\u96c6\u5230\u4e00\u8d77\u7528\u9759\u6001\u914d\u7f6e\u7684\u65b9\u5f0f\u914d\u7f6e\u5230 Prometheus \u53bb\u4e2d\uff0c\u5c31\u53ea\u4f1a\u663e\u793a\u4e00\u6761\u6570\u636e\uff0c\u6211\u4eec\u5f97\u81ea\u5df1\u5728\u6307\u6807\u6570\u636e\u4e2d\u53bb\u8fc7\u6ee4\u6bcf\u4e2a\u8282\u70b9\u7684\u6570\u636e\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8ba9 Prometheus \u53bb\u81ea\u52a8\u53d1\u73b0\u6211\u4eec\u8282\u70b9\u7684 node-exporter \u7a0b\u5e8f\uff0c\u5e76\u4e14\u6309\u8282\u70b9\u8fdb\u884c\u5206\u7ec4\u5462\uff1f\u662f\u6709\u7684\uff0c\u5c31\u662f\u6211\u4eec\u524d\u9762\u548c\u5927\u5bb6\u63d0\u5230\u8fc7\u7684\u670d\u52a1\u53d1\u73b0\u3002 \u5728 Kubernetes \u4e0b\uff0c Promethues \u901a\u8fc7\u4e0e Kubernetes API \u96c6\u6210\uff0c\u76ee\u524d\u4e3b\u8981\u652f\u63015\u4e2d\u670d\u52a1\u53d1\u73b0\u6a21\u5f0f\uff0c\u5206\u522b\u662f\uff1a Node \u3001 Service \u3001 Pod \u3001 Endpoints \u3001 Ingress \u3002 \u6211\u4eec\u901a\u8fc7 kubectl \u547d\u4ee4\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u83b7\u53d6\u5230\u5f53\u524d\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u4fe1\u606f\uff1a $ kubectl get nodes NAME STATUS ROLES AGE VERSION master Ready master 165d v1.10.0 node02 Ready <none> 85d v1.10.0 node03 Ready <none> 145d v1.10.0 \u4f46\u662f\u8981\u8ba9 Prometheus \u4e5f\u80fd\u591f\u83b7\u53d6\u5230\u5f53\u524d\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u4fe1\u606f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5229\u7528 Node \u7684\u670d\u52a1\u53d1\u73b0\u6a21\u5f0f\uff0c\u540c\u6837\u7684\uff0c\u5728 prometheus.yml \u6587\u4ef6\u4e2d\u914d\u7f6e\u5982\u4e0b\u7684 job \u4efb\u52a1\u5373\u53ef\uff1a - job_name: 'kubernetes-nodes' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node \u901a\u8fc7\u6307\u5b9a kubernetes_sd_configs \u7684\u6a21\u5f0f\u4e3a node \uff0c Prometheus \u5c31\u4f1a\u81ea\u52a8\u4ece Kubernetes \u4e2d\u53d1\u73b0\u6240\u6709\u7684 node \u8282\u70b9\u5e76\u4f5c\u4e3a\u5f53\u524d job \u76d1\u63a7\u7684\u76ee\u6807\u5b9e\u4f8b\uff0c\u53d1\u73b0\u7684\u8282\u70b9 /metrics \u63a5\u53e3\u662f\u9ed8\u8ba4\u7684 kubelet \u7684 HTTP \u63a5\u53e3\uff0c\u53e6\u5916\u8fd9\u91cc\u8fd8\u9700\u8981\u6307\u5b9a\u7528\u4e8e\u8bbf\u95ee Kubernetes API \u7684 ca \u4ee5\u53ca token \u6587\u4ef6\u8def\u5f84\uff0c ca \u8bc1\u4e66\u548c token \u6587\u4ef6\u90fd\u662f Pod \u542f\u52a8\u540e\u96c6\u7fa4\u81ea\u52a8\u6ce8\u5165\u5230 Pod \u4e2d\u7684\u6587 \u4ef6\u3002 prometheus \u7684 ConfigMap \u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u540c\u6837\u7684\u6211\u4eec\u6267\u884c reload \u64cd\u4f5c\uff0c\u8ba9\u914d\u7f6e\u751f\u6548\uff1a $ kubectl delete -f prome-cm.yaml configmap \"prometheus-config\" deleted $ kubectl create -f prome-cm.yaml configmap \"prometheus-config\" created # \u9694\u4e00\u4f1a\u513f\u518d\u6267\u884c\u4e0b\u9762\u7684 reload \u64cd\u4f5c $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.102.74.90 <none> 9090:30358/TCP 5d ...... $ curl -X POST \"http://10.102.74.90:9090/-/reload\" \u914d\u7f6e\u751f\u6548\u540e\uff0c\u6211\u4eec\u518d\u53bb prometheus \u7684 dashboard \u4e2d\u67e5\u770b Targets \u662f\u5426\u80fd\u591f\u6b63\u5e38\u6293\u53d6\u6570\u636e\uff0c\u8bbf\u95ee\u4efb\u610f\u8282\u70b9 IP:30358 \uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684 kubernetes-nodes \u8fd9\u4e2a job \u4efb\u52a1\u5df2\u7ecf\u81ea\u52a8\u53d1\u73b0\u4e86\u6211\u4eec 3 \u4e2a node \u8282\u70b9\uff0c\u4f46\u662f\u5728\u83b7\u53d6\u6570\u636e\u7684\u65f6\u5019\u5931\u8d25\u4e86\uff0c\u51fa\u73b0\u4e86\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u9519\u8bef\u4fe1\u606f\uff1a Get http://10.151.30.57:10250/metrics: net/http: HTTP/1.x transport connection broken: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\" \u8fd9\u4e2a\u662f\u56e0\u4e3a prometheus \u53bb\u53d1\u73b0 Node \u6a21\u5f0f\u7684\u670d\u52a1\u7684\u65f6\u5019\uff0c\u8bbf\u95ee\u7684\u7aef\u53e3\u9ed8\u8ba4\u662f 10250 \uff0c\u800c\u73b0\u5728\u8be5\u7aef\u53e3\u4e0b\u9762\u5df2\u7ecf\u6ca1\u6709\u4e86 /metrics \u6307\u6807\u6570\u636e\u4e86\uff0c\u73b0\u5728 kubelet \u53ea\u8bfb\u7684\u6570\u636e\u63a5\u53e3\u7edf\u4e00\u901a\u8fc7 10255 \u7aef\u53e3\u8fdb\u884c\u66b4\u9732\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u53bb\u66ff\u6362\u6389\u8fd9\u91cc\u7684\u7aef\u53e3\uff0c\u4f46\u662f\u6211\u4eec\u662f\u8981\u66ff\u6362\u6210 10255 \u7aef\u53e3\u5417\uff1f \u4e0d\u662f\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u8981\u53bb\u914d\u7f6e\u4e0a\u9762\u901a\u8fc7 node-exporter \u6293\u53d6\u5230\u7684\u8282\u70b9\u6307\u6807\u6570\u636e\uff0c\u800c\u6211\u4eec\u4e0a\u9762\u662f\u4e0d\u662f\u6307\u5b9a\u4e86 hostNetwork=true \uff0c\u6240\u4ee5\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5c31\u4f1a\u7ed1\u5b9a\u4e00\u4e2a\u7aef\u53e3 9100 \uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5c06\u8fd9\u91cc\u7684 10250 \u66ff\u6362\u6210 9100 \uff0c\u4f46\u662f\u5e94\u8be5\u600e\u6837\u66ff\u6362\u5462\uff1f \u8fd9\u91cc\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5230 Prometheus \u63d0\u4f9b\u7684 relabel_configs \u4e2d\u7684 replace \u80fd\u529b\u4e86\uff0c relabel \u53ef\u4ee5\u5728 Prometheus \u91c7\u96c6\u6570\u636e\u4e4b\u524d\uff0c\u901a\u8fc7 Target \u5b9e\u4f8b\u7684 Metadata \u4fe1\u606f\uff0c\u52a8\u6001\u91cd\u65b0\u5199\u5165 Label \u7684\u503c\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u80fd\u6839\u636e Target \u5b9e\u4f8b\u7684 Metadata \u4fe1\u606f\u9009\u62e9\u662f\u5426\u91c7\u96c6\u6216\u8005\u5ffd\u7565\u8be5 Target \u5b9e\u4f8b\u3002\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u5c31\u53ef\u4ee5\u53bb\u5339\u914d __address__ \u8fd9\u4e2a Label \u6807\u7b7e\uff0c\u7136\u540e\u66ff\u6362\u6389\u5176\u4e2d\u7684\u7aef\u53e3\uff1a - job_name: 'kubernetes-nodes' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:9100' target_label: __address__ action: replace \u8fd9\u91cc\u5c31\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u53bb\u5339\u914d __address__ \uff0c\u7136\u540e\u5c06 host \u90e8\u5206\u4fdd\u7559\u4e0b\u6765\uff0c port \u66ff\u6362\u6210\u4e86 9100 \uff0c\u73b0\u5728\u6211\u4eec\u91cd\u65b0\u66f4\u65b0\u914d\u7f6e\u6587\u4ef6\uff0c\u6267\u884c reload \u64cd\u4f5c\uff0c\u7136\u540e\u518d\u53bb\u770b Prometheus \u7684 Dashboard \u7684 Targets \u8def\u5f84\u4e0b\u9762 kubernetes-nodes \u8fd9\u4e2a job \u4efb\u52a1\u662f\u5426\u6b63\u5e38\u4e86\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u73b0\u5728\u5df2\u7ecf\u6b63\u5e38\u4e86\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u6211\u4eec\u91c7\u96c6\u7684\u6307\u6807\u6570\u636e Label \u6807\u7b7e\u5c31\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684 hostname \uff0c\u8fd9\u5bf9\u4e8e\u6211\u4eec\u5728\u8fdb\u884c\u76d1\u63a7\u5206\u7ec4\u5206\u7c7b\u67e5\u8be2\u7684\u65f6\u5019\u5e26\u6765\u4e86\u5f88\u591a\u4e0d\u65b9\u4fbf\u7684\u5730\u65b9\uff0c\u8981\u662f\u6211\u4eec\u80fd\u591f\u5c06\u96c6\u7fa4\u4e2d Node \u8282\u70b9\u7684 Label \u6807\u7b7e\u4e5f\u80fd\u83b7\u53d6\u5230\u5c31\u5f88\u597d\u4e86\u3002 \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 labelmap \u8fd9\u4e2a\u5c5e\u6027\u6765\u5c06 Kubernetes \u7684 Label \u6807\u7b7e\u6dfb\u52a0\u4e3a Prometheus \u7684\u6307\u6807\u6807\u7b7e\uff1a - job_name: 'kubernetes-nodes' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:9100' target_label: __address__ action: replace - action: labelmap regex: __meta_kubernetes_node_label_(.+) \u6dfb\u52a0\u4e86\u4e00\u4e2a action \u4e3a labelmap \uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u662f __meta_kubernetes_node_label_(.+) \u7684\u914d\u7f6e\uff0c\u8fd9\u91cc\u7684\u610f\u601d\u5c31\u662f\u8868\u8fbe\u5f0f\u4e2d\u5339\u914d\u90fd\u7684\u6570\u636e\u4e5f\u6dfb\u52a0\u5230\u6307\u6807\u6570\u636e\u7684 Label \u6807\u7b7e\u4e2d\u53bb\u3002 \u5bf9\u4e8e kubernetes_sd_configs \u4e0b\u9762\u53ef\u7528\u7684\u6807\u7b7e\u5982\u4e0b\uff1a \u53ef\u7528\u5143\u6807\u7b7e\uff1a __meta_kubernetes_node_name \uff1a\u8282\u70b9\u5bf9\u8c61\u7684\u540d\u79f0 _meta_kubernetes_node_label \uff1a\u8282\u70b9\u5bf9\u8c61\u4e2d\u7684\u6bcf\u4e2a\u6807\u7b7e _meta_kubernetes_node_annotation \uff1a\u6765\u81ea\u8282\u70b9\u5bf9\u8c61\u7684\u6bcf\u4e2a\u6ce8\u91ca _meta_kubernetes_node_address \uff1a\u6bcf\u4e2a\u8282\u70b9\u5730\u5740\u7c7b\u578b\u7684\u7b2c\u4e00\u4e2a\u5730\u5740\uff08\u5982\u679c\u5b58\u5728\uff09 \u5173\u4e8e kubernets_sd_configs \u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a kubernetes_sd_config \u5916\u7531\u4e8e kubelet \u4e5f\u81ea\u5e26\u4e86\u4e00\u4e9b\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u5c31\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u7684 10255 \u7aef\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4e5f\u628a kubelet \u7684\u76d1\u63a7\u4efb\u52a1\u4e5f\u4e00\u5e76\u914d\u7f6e\u4e0a\uff1a - job_name: 'kubernetes-nodes' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:9100' target_label: __address__ action: replace - action: labelmap regex: __meta_kubernetes_node_label_(.+) - job_name: 'kubernetes-kubelet' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:10255' target_label: __address__ action: replace - action: labelmap regex: __meta_kubernetes_node_label_(.+) \u73b0\u5728\u6211\u4eec\u518d\u53bb\u66f4\u65b0\u4e0b\u914d\u7f6e\u6587\u4ef6\uff0c\u6267\u884c reload \u64cd\u4f5c\uff0c\u8ba9\u914d\u7f6e\u751f\u6548\uff0c\u7136\u540e\u8bbf\u95ee Prometheus \u7684 Dashboard \u67e5\u770b Targets \u8def\u5f84\uff1a \u73b0\u5728\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u4e0a\u9762\u6dfb\u52a0\u7684 kubernetes-kubelet \u548c kubernetes-nodes \u8fd9\u4e24\u4e2a job \u4efb\u52a1\u90fd\u5df2\u7ecf\u914d\u7f6e\u6210\u529f\u4e86\uff0c\u800c\u4e14\u4e8c\u8005\u7684 Labels \u6807\u7b7e\u90fd\u548c\u96c6\u7fa4\u7684 node \u8282\u70b9\u6807\u7b7e\u4fdd\u6301\u4e00\u81f4\u4e86\u3002 \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5207\u6362\u5230 Graph \u8def\u5f84\u4e0b\u9762\u67e5\u770b\u91c7\u96c6\u7684\u4e00\u4e9b\u6307\u6807\u6570\u636e\u4e86\uff0c\u6bd4\u5982\u67e5\u8be2 node_load1 \u6307\u6807\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5c063\u4e2a node \u8282\u70b9\u5bf9\u5e94\u7684 node_load1 \u6307\u6807\u6570\u636e\u90fd\u67e5\u8be2\u51fa\u6765\u4e86\uff0c\u540c\u6837\u7684\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 PromQL \u8bed\u53e5\u6765\u8fdb\u884c\u66f4\u590d\u6742\u7684\u4e00\u4e9b\u805a\u5408\u67e5\u8be2\u64cd\u4f5c\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e\u6211\u4eec\u7684 Labels \u6807\u7b7e\u5bf9\u6307\u6807\u6570\u636e\u8fdb\u884c\u805a\u5408\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u53ea\u67e5\u8be2 node03 \u8282\u70b9\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8868\u8fbe\u5f0f node_load1{instance=\"node03\"} \u6765\u8fdb\u884c\u67e5\u8be2\uff1a \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u628a Kubernetes \u96c6\u7fa4\u8282\u70b9\u7684\u4f7f\u7528 Prometheus \u76d1\u63a7\u8d77\u6765\u4e86","title":"\u7b2c\u516d\u8282 \u76d1\u63a7K8S\u96c6\u7fa4\u8282\u70b9&Node-exporter DaemonSet"},{"location":"chap3/6Adv_K8S_Nodes_monitor/#k8snode-exporter-daemonset","text":"\u600e\u6837\u7528 Promethues \u6765\u76d1\u63a7 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u5e94\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e Kubernetes \u96c6\u7fa4\u672c\u8eab\u7684\u76d1\u63a7\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u6211\u4eec\u9700\u8981\u65f6\u65f6\u523b\u523b\u4e86\u89e3\u96c6\u7fa4\u7684\u8fd0\u884c\u72b6\u6001\u3002 \u5bf9\u4e8e\u96c6\u7fa4\u7684\u76d1\u63a7\u4e00\u822c\u6211\u4eec\u9700\u8981\u8003\u8651\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a Kubernetes \u8282\u70b9\u7684\u76d1\u63a7\uff1a\u6bd4\u5982\u8282\u70b9\u7684 cpu \u3001 load \u3001 disk \u3001 memory \u7b49\u6307\u6807 \u5185\u90e8\u7cfb\u7edf\u7ec4\u4ef6\u7684\u72b6\u6001\uff1a\u6bd4\u5982 kube-scheduler \u3001 kube-controller-manager \u3001 kubedns/coredns \u7b49\u7ec4\u4ef6\u7684\u8be6\u7ec6\u8fd0\u884c\u72b6\u6001 \u7f16\u6392\u7ea7\u7684 metrics \uff1a\u6bd4\u5982 Deployment \u7684\u72b6\u6001\u3001\u8d44\u6e90\u8bf7\u6c42\u3001\u8c03\u5ea6\u548c API \u5ef6\u8fdf\u7b49\u6570\u636e\u6307\u6807","title":"\u7b2c\u516d\u8282 \u76d1\u63a7K8S\u96c6\u7fa4\u8282\u70b9&amp;Node-exporter DaemonSet"},{"location":"chap3/6Adv_K8S_Nodes_monitor/#1","text":"Kubernetes \u96c6\u7fa4\u7684\u76d1\u63a7\u65b9\u6848\u76ee\u524d\u4e3b\u8981\u6709\u4ee5\u4e0b\u96c6\u4e2d\u65b9\u6848\uff1a Heapster \uff1a Heapster \u662f\u4e00\u4e2a\u96c6\u7fa4\u8303\u56f4\u7684\u76d1\u63a7\u548c\u6570\u636e\u805a\u5408\u5de5\u5177\uff0c\u4ee5 Pod \u7684\u5f62\u5f0f\u8fd0\u884c\u5728\u96c6\u7fa4\u4e2d\u3002 \u9664\u4e86 Kubelet/cAdvisor \u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5411 Heapster \u6dfb\u52a0\u5176\u4ed6\u6307\u6807\u6e90\u6570\u636e\uff0c\u6bd4\u5982 kube-state-metrics \uff0c\u6211\u4eec\u4f1a\u5728\u4e0b\u9762\u548c\u5927\u5bb6\u8bb2\u89e3\u7684 \u9700\u8981\u6ce8\u610f\u7684\u662f Heapster \u5df2\u7ecf\u88ab\u5e9f\u5f03\u4e86\uff0c\u540e\u7eed\u7248\u672c\u4e2d\u4f1a\u4f7f\u7528 metrics-server \u4ee3\u66ff\u3002 cAdvisor \uff1a cAdvisor \u662f Google \u5f00\u6e90\u7684\u5bb9\u5668\u8d44\u6e90\u76d1\u63a7\u548c\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u5b83\u662f\u4e13\u95e8\u4e3a\u5bb9\u5668\u800c\u751f\uff0c\u672c\u8eab\u4e5f\u652f\u6301 Docker \u5bb9\u5668\uff0c\u5728 Kubernetes \u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5355\u72ec\u53bb\u5b89\u88c5\uff0c cAdvisor \u4f5c\u4e3a kubelet \u5185\u7f6e\u7684\u4e00\u90e8\u5206\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 Kube-state-metrics \uff1a kube-state-metrics \u901a\u8fc7\u76d1\u542c API Server \u751f\u6210\u6709\u5173\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u6307\u6807\uff0c\u6bd4\u5982 Deployment \u3001 Node \u3001 Pod \uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f kube-state-metrics \u53ea\u662f\u7b80\u5355\u63d0\u4f9b\u4e00\u4e2a metrics \u6570\u636e\uff0c\u5e76\u4e0d\u4f1a\u5b58\u50a8\u8fd9\u4e9b\u6307\u6807\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Prometheus \u6765\u6293\u53d6\u8fd9\u4e9b\u6570\u636e\u7136\u540e\u5b58\u50a8\u3002 metrics-server \uff1a metrics-server \u4e5f\u662f\u4e00\u4e2a\u96c6\u7fa4\u8303\u56f4\u5185\u7684\u8d44\u6e90\u6570\u636e\u805a\u5408\u5de5\u5177\uff0c\u662f Heapster \u7684\u66ff\u4ee3\u54c1\uff0c\u540c\u6837\u7684\uff0c metrics-server \u4e5f\u53ea\u662f\u663e\u793a\u6570\u636e\uff0c\u5e76\u4e0d\u63d0\u4f9b\u6570\u636e\u5b58\u50a8\u670d\u52a1\u3002 \u4e0d\u8fc7 kube-state-metrics \u548c metrics-server \u4e4b\u95f4\u8fd8\u662f\u6709\u5f88\u5927\u4e0d\u540c\u7684\uff0c\u4e8c\u8005\u7684\u4e3b\u8981\u533a\u522b\u5982\u4e0b \uff1a kube-state-metric s \u4e3b\u8981\u5173\u6ce8\u7684\u662f\u4e1a\u52a1\u76f8\u5173\u7684\u4e00\u4e9b\u5143\u6570\u636e\uff0c\u6bd4\u5982 Deployment \u3001 Pod \u3001\u526f\u672c\u72b6\u6001\u7b49 metrics-server \u4e3b\u8981\u5173\u6ce8\u7684\u662f \u8d44\u6e90\u5ea6\u91cf API \u7684\u5b9e\u73b0\uff0c\u6bd4\u5982 CPU\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u3001\u5185\u5b58\u3001\u8bf7\u6c42\u5ef6\u65f6\u7b49\u6307\u6807\u3002","title":"1 \u76d1\u63a7\u65b9\u6848"},{"location":"chap3/6Adv_K8S_Nodes_monitor/#2","text":"\u73b0\u5728\u6211\u4eec\u5c31\u6765\u5f00\u59cb\u6211\u4eec\u96c6\u7fa4\u7684\u76d1\u63a7\u5de5\u4f5c\uff0c\u9996\u5148\u6765\u76d1\u63a7\u6211\u4eec\u96c6\u7fa4\u7684\u8282\u70b9\uff0c\u8981\u76d1\u63a7\u8282\u70b9\u5176\u5b9e\u6211\u4eec\u5df2\u7ecf\u6709\u5f88\u591a\u975e\u5e38\u6210\u719f\u7684\u65b9\u6848\u4e86\uff0c\u6bd4\u5982 Nagios \u3001 zabbix \uff0c\u751a\u81f3\u6211\u4eec\u81ea\u5df1\u6765\u6536\u96c6\u6570\u636e\u4e5f\u53ef\u4ee5\uff0c\u6211\u4eec\u8fd9\u91cc\u901a\u8fc7 Prometheus \u6765\u91c7\u96c6\u8282\u70b9\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u53ef\u4ee5\u901a\u8fc7 node_exporter \u6765\u83b7\u53d6\uff0c\u987e\u540d\u601d\u4e49\uff0c node_exporter \u6293\u54df\u5c31\u662f\u7528\u4e8e\u91c7\u96c6\u670d\u52a1\u5668\u8282\u70b9\u7684\u5404\u79cd\u8fd0\u884c\u6307\u6807\u7684\uff0c\u76ee\u524d node_exporter \u652f\u6301\u51e0\u4e4e\u6240\u6709\u5e38\u89c1\u7684\u76d1\u63a7\u70b9\uff0c\u6bd4\u5982 conntrack \uff0c cpu \uff0c diskstats \uff0c filesystem \uff0c loadavg \uff0c meminfo \uff0c netstat \u7b49\uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 DaemonSet \u63a7\u5236\u5668\u6765\u90e8\u7f72\u8be5\u670d\u52a1\uff0c\u8fd9\u6837\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u4f1a\u81ea\u52a8\u8fd0\u884c\u4e00\u4e2a\u8fd9\u6837\u7684 Pod \uff0c\u5982\u679c\u6211\u4eec\u4ece\u96c6\u7fa4\u4e2d\u5220\u9664\u6216\u8005\u6dfb\u52a0\u8282\u70b9\u540e\uff0c\u4e5f\u4f1a\u8fdb\u884c\u81ea\u52a8\u6269\u5c55\u3002 \u5728\u90e8\u7f72 node-exporter \u7684\u65f6\u5019\u6709\u4e00\u4e9b\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff0c\u5982\u4e0b\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff1a( prome-node-exporter.yaml ) apiVersion: extensions/v1beta1 kind: DaemonSet metadata: name: node-exporter namespace: kube-ops labels: name: node-exporter spec: template: metadata: labels: name: node-exporter spec: hostPID: true hostIPC: true hostNetwork: true containers: - name: node-exporter image: prom/node-exporter:v0.16.0 ports: - containerPort: 9100 resources: requests: cpu: 0.15 securityContext: privileged: true args: - --path.procfs - /host/proc - --path.sysfs - /host/sys - --collector.filesystem.ignored-mount-points - '\"^/(sys|proc|dev|host|etc)($|/)\"' volumeMounts: - name: dev mountPath: /host/dev - name: proc mountPath: /host/proc - name: sys mountPath: /host/sys - name: rootfs mountPath: /rootfs tolerations: - key: \"node-role.kubernetes.io/master\" operator: \"Exists\" effect: \"NoSchedule\" volumes: - name: proc hostPath: path: /proc - name: dev hostPath: path: /dev - name: sys hostPath: path: /sys - name: rootfs hostPath: path: / \u7531\u4e8e\u6211\u4eec\u8981\u83b7\u53d6\u5230\u7684\u6570\u636e\u662f\u4e3b\u673a\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u800c\u6211\u4eec\u7684 node-exporter \u662f\u8fd0\u884c\u5728\u5bb9\u5668\u4e2d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728 Pod \u4e2d\u9700\u8981\u914d\u7f6e\u4e00\u4e9b Pod \u7684\u5b89\u5168\u7b56\u7565\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u6dfb\u52a0\u4e86 hostPID: true \u3001 hostIPC : true \u3001 hostNetwork: true 3\u4e2a\u7b56\u7565\uff0c\u7528\u6765\u4f7f\u7528\u4e3b\u673a\u7684 PID namespace \u3001 IPC namespace \u4ee5\u53ca\u4e3b\u673a\u7f51\u7edc\uff0c\u8fd9\u4e9b namespace \u5c31\u662f\u7528\u4e8e\u5bb9\u5668\u9694\u79bb\u7684\u5173\u952e\u6280\u672f\uff0c\u8981\u6ce8\u610f\u8fd9\u91cc\u7684 namespace \u548c\u96c6\u7fa4\u4e2d\u7684 namespace \u662f\u4e24\u4e2a\u5b8c\u5168\u4e0d\u76f8\u540c\u7684\u6982\u5ff5\u3002 \u53e6\u5916\u6211\u4eec\u8fd8\u5c06\u4e3b\u673a\u7684 /dev \u3001 /proc \u3001 /sys \u8fd9\u4e9b\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\uff0c\u8fd9\u4e9b\u56e0\u4e3a\u6211\u4eec\u91c7\u96c6\u7684\u5f88\u591a\u8282\u70b9\u6570\u636e\u90fd\u662f\u901a\u8fc7\u8fd9\u4e9b\u6587\u4ef6\u5939\u4e0b\u9762\u7684\u6587\u4ef6\u6765\u83b7\u53d6\u5230\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u5728\u4f7f\u7528 top \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5f53\u524d cpu \u4f7f\u7528\u60c5\u51b5\uff0c\u6570\u636e\u5c31\u6765\u6e90\u4e8e\u6587\u4ef6 /proc/stat \uff0c\u4f7f\u7528 free \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u5176\u6570\u636e\u6765\u6e90\u662f\u6765\u81ea /proc/meminfo \u6587\u4ef6\u3002 \u53e6\u5916\u7531\u4e8e\u6211\u4eec\u96c6\u7fa4\u4f7f\u7528\u7684\u662f kubeadm \u642d\u5efa\u7684\uff0c\u6240\u4ee5\u5982\u679c\u5e0c\u671b master \u8282\u70b9\u4e5f\u4e00\u8d77\u88ab\u76d1\u63a7\uff0c\u5219\u9700\u8981\u6dfb\u52a0\u54cd\u5e94\u7684\u5bb9\u5fcd\uff0c\u5bf9\u4e8e\u6c61\u70b9\u548c\u5bb9\u5fcd\u8fd8\u4e0d\u662f\u5f88\u719f\u6089\u7684\u540c\u5b66\u53ef\u4ee5\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\u56de\u987e\u4e0b\u3002 $ kubectl create -f prome-node-exporter.yaml daemonset.extensions \"node-exporter\" created $ kubectl get pods -n kube-ops -o wide NAME READY STATUS RESTARTS AGE IP NODE node-exporter-jfwfv 1/1 Running 0 30m 10.151.30.63 node02 node-exporter-kr8rt 1/1 Running 0 30m 10.151.30.64 node03 node-exporter-whb7n 1/1 Running 0 20m 10.151.30.57 master prometheus-8566cd9699-gt9wh 1/1 Running 0 4d 10.244.4.39 node02 redis-544b6c8c54-8xd2g 2/2 Running 0 23h 10.244.2.87 node03 \u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728 3 \u4e2a\u8282\u70b9\u4e0a\u90fd\u8fd0\u884c\u4e86\u4e00\u4e2a Pod \uff0c\u6709\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u8bf4\u6211\u4eec\u8fd9\u91cc\u4e0d\u9700\u8981\u521b\u5efa\u4e00\u4e2a Service \u5417\uff1f\u6211\u4eec\u5e94\u8be5\u600e\u6837\u53bb\u83b7\u53d6 /metrics \u6570\u636e\u5462\uff1f\u6211\u4eec\u4e0a\u9762\u662f\u4e0d\u662f\u6307\u5b9a\u4e86 hostNetwork=true \uff0c\u6240\u4ee5\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5c31\u4f1a\u7ed1\u5b9a\u4e00\u4e2a\u7aef\u53e3 9100 \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u7aef\u53e3\u53bb\u83b7\u53d6\u5230\u76d1\u63a7\u6307\u6807\u6570\u636e\uff1a $ curl 127.0.0.1:9100/metrics ... node_filesystem_device_error{device=\"shm\",fstype=\"tmpfs\",mountpoint=\"/rootfs/var/lib/docker/containers/aefe8b1b63c3aa5f27766053ec817415faf8f6f417bb210d266fef0c2da64674/shm\"} 1 node_filesystem_device_error{device=\"shm\",fstype=\"tmpfs\",mountpoint=\"/rootfs/var/lib/docker/containers/c8652ca72230496038a07e4fe4ee47046abb5f88d9d2440f0c8a923d5f3e133c/shm\"} 1 node_filesystem_device_error{device=\"tmpfs\",fstype=\"tmpfs\",mountpoint=\"/dev\"} 0 node_filesystem_device_error{device=\"tmpfs\",fstype=\"tmpfs\",mountpoint=\"/dev/shm\"} 0 ... \u5f53\u7136\u5982\u679c\u4f60\u89c9\u5f97\u4e0a\u9762\u7684\u624b\u52a8\u5b89\u88c5\u65b9\u5f0f\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 Helm \u7684\u65b9\u5f0f\u6765\u5b89\u88c5\uff1a $ helm install --name node-exporter stable/prometheus-node-exporter --namespace kube-ops","title":"2 \u76d1\u63a7\u96c6\u7fa4\u8282\u70b9"},{"location":"chap3/6Adv_K8S_Nodes_monitor/#3","text":"\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc 3 \u4e2a\u8282\u70b9\u4e0a\u9762\u90fd\u8fd0\u884c\u4e86 node-exporter \u7a0b\u5e8f\uff0c\u5982\u679c\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a Service \u6765\u5c06\u6570\u636e\u6536\u96c6\u5230\u4e00\u8d77\u7528\u9759\u6001\u914d\u7f6e\u7684\u65b9\u5f0f\u914d\u7f6e\u5230 Prometheus \u53bb\u4e2d\uff0c\u5c31\u53ea\u4f1a\u663e\u793a\u4e00\u6761\u6570\u636e\uff0c\u6211\u4eec\u5f97\u81ea\u5df1\u5728\u6307\u6807\u6570\u636e\u4e2d\u53bb\u8fc7\u6ee4\u6bcf\u4e2a\u8282\u70b9\u7684\u6570\u636e\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8ba9 Prometheus \u53bb\u81ea\u52a8\u53d1\u73b0\u6211\u4eec\u8282\u70b9\u7684 node-exporter \u7a0b\u5e8f\uff0c\u5e76\u4e14\u6309\u8282\u70b9\u8fdb\u884c\u5206\u7ec4\u5462\uff1f\u662f\u6709\u7684\uff0c\u5c31\u662f\u6211\u4eec\u524d\u9762\u548c\u5927\u5bb6\u63d0\u5230\u8fc7\u7684\u670d\u52a1\u53d1\u73b0\u3002 \u5728 Kubernetes \u4e0b\uff0c Promethues \u901a\u8fc7\u4e0e Kubernetes API \u96c6\u6210\uff0c\u76ee\u524d\u4e3b\u8981\u652f\u63015\u4e2d\u670d\u52a1\u53d1\u73b0\u6a21\u5f0f\uff0c\u5206\u522b\u662f\uff1a Node \u3001 Service \u3001 Pod \u3001 Endpoints \u3001 Ingress \u3002 \u6211\u4eec\u901a\u8fc7 kubectl \u547d\u4ee4\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u83b7\u53d6\u5230\u5f53\u524d\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u4fe1\u606f\uff1a $ kubectl get nodes NAME STATUS ROLES AGE VERSION master Ready master 165d v1.10.0 node02 Ready <none> 85d v1.10.0 node03 Ready <none> 145d v1.10.0 \u4f46\u662f\u8981\u8ba9 Prometheus \u4e5f\u80fd\u591f\u83b7\u53d6\u5230\u5f53\u524d\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u4fe1\u606f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5229\u7528 Node \u7684\u670d\u52a1\u53d1\u73b0\u6a21\u5f0f\uff0c\u540c\u6837\u7684\uff0c\u5728 prometheus.yml \u6587\u4ef6\u4e2d\u914d\u7f6e\u5982\u4e0b\u7684 job \u4efb\u52a1\u5373\u53ef\uff1a - job_name: 'kubernetes-nodes' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node \u901a\u8fc7\u6307\u5b9a kubernetes_sd_configs \u7684\u6a21\u5f0f\u4e3a node \uff0c Prometheus \u5c31\u4f1a\u81ea\u52a8\u4ece Kubernetes \u4e2d\u53d1\u73b0\u6240\u6709\u7684 node \u8282\u70b9\u5e76\u4f5c\u4e3a\u5f53\u524d job \u76d1\u63a7\u7684\u76ee\u6807\u5b9e\u4f8b\uff0c\u53d1\u73b0\u7684\u8282\u70b9 /metrics \u63a5\u53e3\u662f\u9ed8\u8ba4\u7684 kubelet \u7684 HTTP \u63a5\u53e3\uff0c\u53e6\u5916\u8fd9\u91cc\u8fd8\u9700\u8981\u6307\u5b9a\u7528\u4e8e\u8bbf\u95ee Kubernetes API \u7684 ca \u4ee5\u53ca token \u6587\u4ef6\u8def\u5f84\uff0c ca \u8bc1\u4e66\u548c token \u6587\u4ef6\u90fd\u662f Pod \u542f\u52a8\u540e\u96c6\u7fa4\u81ea\u52a8\u6ce8\u5165\u5230 Pod \u4e2d\u7684\u6587 \u4ef6\u3002 prometheus \u7684 ConfigMap \u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u540c\u6837\u7684\u6211\u4eec\u6267\u884c reload \u64cd\u4f5c\uff0c\u8ba9\u914d\u7f6e\u751f\u6548\uff1a $ kubectl delete -f prome-cm.yaml configmap \"prometheus-config\" deleted $ kubectl create -f prome-cm.yaml configmap \"prometheus-config\" created # \u9694\u4e00\u4f1a\u513f\u518d\u6267\u884c\u4e0b\u9762\u7684 reload \u64cd\u4f5c $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.102.74.90 <none> 9090:30358/TCP 5d ...... $ curl -X POST \"http://10.102.74.90:9090/-/reload\" \u914d\u7f6e\u751f\u6548\u540e\uff0c\u6211\u4eec\u518d\u53bb prometheus \u7684 dashboard \u4e2d\u67e5\u770b Targets \u662f\u5426\u80fd\u591f\u6b63\u5e38\u6293\u53d6\u6570\u636e\uff0c\u8bbf\u95ee\u4efb\u610f\u8282\u70b9 IP:30358 \uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684 kubernetes-nodes \u8fd9\u4e2a job \u4efb\u52a1\u5df2\u7ecf\u81ea\u52a8\u53d1\u73b0\u4e86\u6211\u4eec 3 \u4e2a node \u8282\u70b9\uff0c\u4f46\u662f\u5728\u83b7\u53d6\u6570\u636e\u7684\u65f6\u5019\u5931\u8d25\u4e86\uff0c\u51fa\u73b0\u4e86\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u9519\u8bef\u4fe1\u606f\uff1a Get http://10.151.30.57:10250/metrics: net/http: HTTP/1.x transport connection broken: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\" \u8fd9\u4e2a\u662f\u56e0\u4e3a prometheus \u53bb\u53d1\u73b0 Node \u6a21\u5f0f\u7684\u670d\u52a1\u7684\u65f6\u5019\uff0c\u8bbf\u95ee\u7684\u7aef\u53e3\u9ed8\u8ba4\u662f 10250 \uff0c\u800c\u73b0\u5728\u8be5\u7aef\u53e3\u4e0b\u9762\u5df2\u7ecf\u6ca1\u6709\u4e86 /metrics \u6307\u6807\u6570\u636e\u4e86\uff0c\u73b0\u5728 kubelet \u53ea\u8bfb\u7684\u6570\u636e\u63a5\u53e3\u7edf\u4e00\u901a\u8fc7 10255 \u7aef\u53e3\u8fdb\u884c\u66b4\u9732\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u53bb\u66ff\u6362\u6389\u8fd9\u91cc\u7684\u7aef\u53e3\uff0c\u4f46\u662f\u6211\u4eec\u662f\u8981\u66ff\u6362\u6210 10255 \u7aef\u53e3\u5417\uff1f \u4e0d\u662f\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u8981\u53bb\u914d\u7f6e\u4e0a\u9762\u901a\u8fc7 node-exporter \u6293\u53d6\u5230\u7684\u8282\u70b9\u6307\u6807\u6570\u636e\uff0c\u800c\u6211\u4eec\u4e0a\u9762\u662f\u4e0d\u662f\u6307\u5b9a\u4e86 hostNetwork=true \uff0c\u6240\u4ee5\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5c31\u4f1a\u7ed1\u5b9a\u4e00\u4e2a\u7aef\u53e3 9100 \uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5c06\u8fd9\u91cc\u7684 10250 \u66ff\u6362\u6210 9100 \uff0c\u4f46\u662f\u5e94\u8be5\u600e\u6837\u66ff\u6362\u5462\uff1f \u8fd9\u91cc\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5230 Prometheus \u63d0\u4f9b\u7684 relabel_configs \u4e2d\u7684 replace \u80fd\u529b\u4e86\uff0c relabel \u53ef\u4ee5\u5728 Prometheus \u91c7\u96c6\u6570\u636e\u4e4b\u524d\uff0c\u901a\u8fc7 Target \u5b9e\u4f8b\u7684 Metadata \u4fe1\u606f\uff0c\u52a8\u6001\u91cd\u65b0\u5199\u5165 Label \u7684\u503c\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u80fd\u6839\u636e Target \u5b9e\u4f8b\u7684 Metadata \u4fe1\u606f\u9009\u62e9\u662f\u5426\u91c7\u96c6\u6216\u8005\u5ffd\u7565\u8be5 Target \u5b9e\u4f8b\u3002\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u5c31\u53ef\u4ee5\u53bb\u5339\u914d __address__ \u8fd9\u4e2a Label \u6807\u7b7e\uff0c\u7136\u540e\u66ff\u6362\u6389\u5176\u4e2d\u7684\u7aef\u53e3\uff1a - job_name: 'kubernetes-nodes' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:9100' target_label: __address__ action: replace \u8fd9\u91cc\u5c31\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u53bb\u5339\u914d __address__ \uff0c\u7136\u540e\u5c06 host \u90e8\u5206\u4fdd\u7559\u4e0b\u6765\uff0c port \u66ff\u6362\u6210\u4e86 9100 \uff0c\u73b0\u5728\u6211\u4eec\u91cd\u65b0\u66f4\u65b0\u914d\u7f6e\u6587\u4ef6\uff0c\u6267\u884c reload \u64cd\u4f5c\uff0c\u7136\u540e\u518d\u53bb\u770b Prometheus \u7684 Dashboard \u7684 Targets \u8def\u5f84\u4e0b\u9762 kubernetes-nodes \u8fd9\u4e2a job \u4efb\u52a1\u662f\u5426\u6b63\u5e38\u4e86\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u73b0\u5728\u5df2\u7ecf\u6b63\u5e38\u4e86\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u6211\u4eec\u91c7\u96c6\u7684\u6307\u6807\u6570\u636e Label \u6807\u7b7e\u5c31\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684 hostname \uff0c\u8fd9\u5bf9\u4e8e\u6211\u4eec\u5728\u8fdb\u884c\u76d1\u63a7\u5206\u7ec4\u5206\u7c7b\u67e5\u8be2\u7684\u65f6\u5019\u5e26\u6765\u4e86\u5f88\u591a\u4e0d\u65b9\u4fbf\u7684\u5730\u65b9\uff0c\u8981\u662f\u6211\u4eec\u80fd\u591f\u5c06\u96c6\u7fa4\u4e2d Node \u8282\u70b9\u7684 Label \u6807\u7b7e\u4e5f\u80fd\u83b7\u53d6\u5230\u5c31\u5f88\u597d\u4e86\u3002 \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 labelmap \u8fd9\u4e2a\u5c5e\u6027\u6765\u5c06 Kubernetes \u7684 Label \u6807\u7b7e\u6dfb\u52a0\u4e3a Prometheus \u7684\u6307\u6807\u6807\u7b7e\uff1a - job_name: 'kubernetes-nodes' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:9100' target_label: __address__ action: replace - action: labelmap regex: __meta_kubernetes_node_label_(.+) \u6dfb\u52a0\u4e86\u4e00\u4e2a action \u4e3a labelmap \uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u662f __meta_kubernetes_node_label_(.+) \u7684\u914d\u7f6e\uff0c\u8fd9\u91cc\u7684\u610f\u601d\u5c31\u662f\u8868\u8fbe\u5f0f\u4e2d\u5339\u914d\u90fd\u7684\u6570\u636e\u4e5f\u6dfb\u52a0\u5230\u6307\u6807\u6570\u636e\u7684 Label \u6807\u7b7e\u4e2d\u53bb\u3002 \u5bf9\u4e8e kubernetes_sd_configs \u4e0b\u9762\u53ef\u7528\u7684\u6807\u7b7e\u5982\u4e0b\uff1a \u53ef\u7528\u5143\u6807\u7b7e\uff1a __meta_kubernetes_node_name \uff1a\u8282\u70b9\u5bf9\u8c61\u7684\u540d\u79f0 _meta_kubernetes_node_label \uff1a\u8282\u70b9\u5bf9\u8c61\u4e2d\u7684\u6bcf\u4e2a\u6807\u7b7e _meta_kubernetes_node_annotation \uff1a\u6765\u81ea\u8282\u70b9\u5bf9\u8c61\u7684\u6bcf\u4e2a\u6ce8\u91ca _meta_kubernetes_node_address \uff1a\u6bcf\u4e2a\u8282\u70b9\u5730\u5740\u7c7b\u578b\u7684\u7b2c\u4e00\u4e2a\u5730\u5740\uff08\u5982\u679c\u5b58\u5728\uff09 \u5173\u4e8e kubernets_sd_configs \u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a kubernetes_sd_config \u5916\u7531\u4e8e kubelet \u4e5f\u81ea\u5e26\u4e86\u4e00\u4e9b\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u5c31\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u7684 10255 \u7aef\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4e5f\u628a kubelet \u7684\u76d1\u63a7\u4efb\u52a1\u4e5f\u4e00\u5e76\u914d\u7f6e\u4e0a\uff1a - job_name: 'kubernetes-nodes' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:9100' target_label: __address__ action: replace - action: labelmap regex: __meta_kubernetes_node_label_(.+) - job_name: 'kubernetes-kubelet' tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: node relabel_configs: - source_labels: [__address__] regex: '(.*):10250' replacement: '${1}:10255' target_label: __address__ action: replace - action: labelmap regex: __meta_kubernetes_node_label_(.+) \u73b0\u5728\u6211\u4eec\u518d\u53bb\u66f4\u65b0\u4e0b\u914d\u7f6e\u6587\u4ef6\uff0c\u6267\u884c reload \u64cd\u4f5c\uff0c\u8ba9\u914d\u7f6e\u751f\u6548\uff0c\u7136\u540e\u8bbf\u95ee Prometheus \u7684 Dashboard \u67e5\u770b Targets \u8def\u5f84\uff1a \u73b0\u5728\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u4e0a\u9762\u6dfb\u52a0\u7684 kubernetes-kubelet \u548c kubernetes-nodes \u8fd9\u4e24\u4e2a job \u4efb\u52a1\u90fd\u5df2\u7ecf\u914d\u7f6e\u6210\u529f\u4e86\uff0c\u800c\u4e14\u4e8c\u8005\u7684 Labels \u6807\u7b7e\u90fd\u548c\u96c6\u7fa4\u7684 node \u8282\u70b9\u6807\u7b7e\u4fdd\u6301\u4e00\u81f4\u4e86\u3002 \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5207\u6362\u5230 Graph \u8def\u5f84\u4e0b\u9762\u67e5\u770b\u91c7\u96c6\u7684\u4e00\u4e9b\u6307\u6807\u6570\u636e\u4e86\uff0c\u6bd4\u5982\u67e5\u8be2 node_load1 \u6307\u6807\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5c063\u4e2a node \u8282\u70b9\u5bf9\u5e94\u7684 node_load1 \u6307\u6807\u6570\u636e\u90fd\u67e5\u8be2\u51fa\u6765\u4e86\uff0c\u540c\u6837\u7684\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 PromQL \u8bed\u53e5\u6765\u8fdb\u884c\u66f4\u590d\u6742\u7684\u4e00\u4e9b\u805a\u5408\u67e5\u8be2\u64cd\u4f5c\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e\u6211\u4eec\u7684 Labels \u6807\u7b7e\u5bf9\u6307\u6807\u6570\u636e\u8fdb\u884c\u805a\u5408\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u53ea\u67e5\u8be2 node03 \u8282\u70b9\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8868\u8fbe\u5f0f node_load1{instance=\"node03\"} \u6765\u8fdb\u884c\u67e5\u8be2\uff1a \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u628a Kubernetes \u96c6\u7fa4\u8282\u70b9\u7684\u4f7f\u7528 Prometheus \u76d1\u63a7\u8d77\u6765\u4e86","title":"3 \u670d\u52a1\u53d1\u73b0"},{"location":"chap3/7Adv_K8S_Resource_monitor/","text":"\u7b2c\u4e03\u8282 \u76d1\u63a7\u5e38\u7528\u8d44\u6e90\u5bf9\u8c61\uff08\u5bb9\u5668/apiserver/Service\u76d1\u63a7/kube-state-metric\uff09 \u4e0a\u4e00\u7bc7\u6211\u4eec\u5b66\u4e60\u4e86\u600e\u6837\u7528 Prometheus \u6765\u81ea\u52a8\u53d1\u73b0 Kubernetes \u96c6\u7fa4\u7684\u8282\u70b9\uff0c\u7528\u5230\u4e86 Prometheus \u9488\u5bf9 Kubernetes \u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236 kubernetes_sd_configs \u7684\u4f7f \u7528\uff0c\u6b64\u7bc7\u6587\u7ae0\u6211\u4eec\u4e86\u89e3\u4e0b\u600e\u6837\u5728 Prometheus \u4e2d\u6765\u81ea\u52a8\u76d1\u63a7 Kubernetes \u4e2d\u7684\u4e00\u4e9b\u5e38\u7528\u8d44\u6e90\u5bf9\u8c61\u3002 \u524d\u9762\u6211\u4eec\u548c\u5927\u5bb6\u4ecb\u7ecd\u8fc7\u4e86\u5728 Prometheus \u4e2d\u7528 \u9759\u6001\u7684\u65b9\u5f0f \u6765\u76d1\u63a7 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u666e\u901a\u5e94\u7528\uff0c \u4f46\u662f\u5982\u679c\u9488\u5bf9\u96c6\u7fa4\u4e2d\u4f17\u591a\u7684\u8d44\u6e90\u5bf9\u8c61\u90fd\u91c7\u7528\u9759\u6001\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u914d\u7f6e\u7684\u8bdd\u663e\u7136\u662f\u4e0d\u73b0\u5b9e\u7684 \uff0c\u6240\u4ee5\u540c\u6837\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230 Prometheus \u63d0\u4f9b\u7684\u5176\u4ed6\u7c7b\u578b\u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236\u3002 1 \u5bb9\u5668\u76d1\u63a7 \u8bf4\u5230\u5bb9\u5668\u76d1\u63a7\u6211\u4eec\u81ea\u7136\u4f1a\u60f3\u5230 cAdvisor \uff0c\u6211\u4eec\u524d\u9762\u4e5f\u8bf4\u8fc7 cAdvisor \u5df2\u7ecf\u5185\u7f6e\u5728\u4e86 kubelet \u7ec4\u4ef6\u4e4b\u4e2d\uff0c \u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u5355\u72ec\u53bb\u5b89\u88c5\uff0c cAdvisor \u7684\u6570\u636e\u8def\u5f84\u4e3a /api/v1/nodes/<node>/proxy/metrics , \u540c\u6837\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 node \u7684\u670d\u52a1\u53d1\u73b0\u6a21\u5f0f\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0b\u9762\u90fd\u6709 kubelet \uff0c\u81ea\u7136\u90fd\u6709 cAdvisor \u91c7\u96c6\u5230\u7684\u6570\u636e\u6307\u6807\uff0c\u914d\u7f6e\u5982\u4e0b\uff1a - job_name: 'kubernetes-cadvisor' kubernetes_sd_configs: - role: node scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - target_label: __address__ replacement: kubernetes.default.svc:443 - source_labels: [__meta_kubernetes_node_name] regex: (.+) target_label: __metrics_path__ replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor \u4e0a\u9762\u7684\u914d\u7f6e\u548c\u6211\u4eec\u4e4b\u524d\u914d\u7f6e node-exporter \u7684\u65f6\u5019\u51e0\u4e4e\u662f\u4e00\u6837\u7684. \u533a\u522b\u662f\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e86 https \u7684\u534f\u8bae\uff0c\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\u914d\u7f6e\u4e86 ca.cart \u548c token \u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e24\u4e2a\u6587\u4ef6\u662f Pod \u542f\u52a8\u540e\u81ea\u52a8\u6ce8\u5165\u8fdb\u6765\u7684\uff0c\u901a\u8fc7\u8fd9\u4e24\u4e2a\u6587\u4ef6\u6211\u4eec\u53ef\u4ee5\u5728 Pod \u4e2d\u8bbf\u95ee apiserver \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u7684 __address__ \u4e0d\u5728\u662f nodeip \u4e86\uff0c\u800c\u662f kubernetes \u5728 \u96c6\u7fa4\u4e2d\u7684\u670d\u52a1\u5730\u5740 \uff0c\u7136\u540e\u52a0\u4e0a __metrics_path__ \u7684\u8bbf\u95ee\u8def\u5f84\uff1a /api/v1/nodes/${1}/proxy/metrics/cadvisor \uff0c\u73b0\u5728\u540c\u6837\u66f4\u65b0\u4e0b\u914d\u7f6e\uff0c\u7136\u540e\u67e5\u770b Targets \u8def\u5f84\uff1a \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5207\u6362\u5230 Graph \u8def\u5f84\u4e0b\u9762\u67e5\u8be2\u5bb9\u5668\u76f8\u5173\u6570\u636e\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u6765\u67e5\u8be2\u96c6\u7fa4\u4e2d\u6240\u6709 Pod \u7684 CPU \u4f7f\u7528\u60c5\u51b5\uff0c\u8fd9\u91cc\u7528\u7684\u6570\u636e\u6307\u6807\u662f container_cpu_usage_seconds_total \uff0c\u7136\u540e\u53bb\u9664\u4e00\u4e9b\u65e0\u6548\u7684\u6570\u636e\uff0c\u67e5\u8be21\u5206\u949f\b\u5185\u7684\u6570\u636e\uff0c\u7531\u4e8e\u67e5\u8be2\u5230\u7684\u6570\u636e\u90fd\u662f\u5bb9\u5668\u76f8\u5173\u7684\uff0c\u6700\u597d\u8981\u5b89\u88c5 Pod \u6765\u8fdb\u884c\u805a\u5408\uff0c\u5bf9\u5e94\u7684 promQL \u8bed\u53e5\u5982\u4e0b\uff1a sum by (pod_name)(rate(container_cpu_usage_seconds_total{image!=\"\", pod_name!=\"\"}[1m] )) prometheus cadvisor graph \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u7ed3\u679c\u5c31\u662f\u96c6\u7fa4\u4e2d\u7684\u6240\u6709 Pod \u57281\u5206\u949f\u4e4b\u5185\u7684 CPU \u4f7f\u7528\u60c5\u51b5\u7684\u66f2\u7ebf\u56fe\uff0c\u5f53\u7136\u8fd8\u6709\u5f88\u591a\u6570\u636e\u53ef\u4ee5\u83b7\u53d6\u5230\uff0c\u6211\u4eec\u540e\u9762\u5728\u9700\u8981\u7684\u65f6\u5019\u518d\u548c\u5927\u5bb6\u4ecb\u7ecd\u3002 2 apiserver \u76d1\u63a7 apiserver \u4f5c\u4e3a Kubernetes \u6700\u6838\u5fc3\u7684\u7ec4\u4ef6\uff0c\u5f53\u7136\u4ed6\u7684\u76d1\u63a7\u4e5f\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\uff0c\u5bf9\u4e8e apiserver \u7684\u76d1\u63a7\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 kubernetes \u7684 Service \u6765\u83b7\u53d6\uff1a $ kubectl get services NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes ClusterIP 10.254.0.1 <none> 443/TCP 34d \u4e0a\u9762\u8fd9\u4e2a Service \u5c31\u662f\u6211\u4eec\u96c6\u7fa4\u7684 apiserver \u5728\u96c6\u7fa4\u5185\u90e8\u7684 Service \u5730\u5740\uff0c\u8981\u81ea\u52a8\u53d1\u73b0 Service \u7c7b\u578b\u7684\u670d\u52a1\uff0c\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230 role \u4e3a Endpoints \u7684 kubernetes_sd_configs \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 ConfigMap \u5bf9\u8c61\u4e2d\u6dfb\u52a0\u4e0a\u4e00\u4e2a Endpoints \u7c7b\u578b\u7684\u670d\u52a1\u7684\u76d1\u63a7\u4efb\u52a1\uff1a - job_name: 'kubernetes-apiservers' kubernetes_sd_configs: - role: endpoints \u4e0a\u9762\u8fd9\u4e2a\u4efb\u52a1\u662f\u5b9a\u4e49\u7684\u4e00\u4e2a\u7c7b\u578b\u4e3a endpoints \u7684 kubernetes_sd_configs \uff0c\u6dfb\u52a0\u5230 Prometheus \u7684 ConfigMap \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u66f4\u65b0\u914d\u7f6e\uff1a $ kubectl delete -f prome-cm.yaml $ kubectl create -f prome-cm.yaml # \u9694\u4e00\u4f1a\u513f\u6267\u884creload\u64cd\u4f5c $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.102.74.90 <none> 9090:30358/TCP 14d $ curl -X POST \"http://10.102.74.90:9090/-/reload\" \u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u518d\u53bb\u67e5\u770b Prometheus \u7684 Dashboard \u7684 target \u9875\u9762\uff1a \u6211\u4eec\u53ef\u4ee5\b\u770b\u5230 kubernetes-apiservers \u4e0b\u9762\u51fa\u73b0\u4e86\u5f88\u591a\u5b9e\u4f8b\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684\u662f Endpoints \u7c7b\u578b\u7684\u670d\u52a1\u53d1\u73b0\uff0c\u6240\u4ee5 Prometheus \u628a\u6240\u6709\u7684 Endpoints \u670d\u52a1\u90fd\u6293\u53d6\u8fc7\u6765\u4e86\uff0c\u540c\u6837\u7684\uff0c\u4e0a\u9762\u6211\u4eec\u9700\u8981\u7684\u670d\u52a1\u540d\u4e3a kubernetes \u8fd9\u4e2a apiserver \u7684\u670d\u52a1\u4e5f\u5728\u8fd9\u4e2a\u5217\u8868\u4e4b\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u600e\u6837\u6765\u8fc7\u6ee4\u51fa\u8fd9\u4e2a\u670d\u52a1\u6765\u5462\uff1f \u8fd8\u8bb0\u5f97\u4e0a\u8282\u8bfe\u7684 relabel_configs \u5417\uff1f \u6ca1\u9519\uff0c\u540c\u6837\u6211\u4eec\u9700\u8981\u4f7f\u7528\u8fd9\u4e2a\u914d\u7f6e\uff0c\u53ea\u662f\u6211\u4eec\u8fd9\u91cc\u4e0d\u662f\u4f7f\u7528 replace \u8fd9\u4e2a\u52a8\u4f5c\u4e86\uff0c\u800c\u662f keep \uff0c\u5c31\u662f\u53ea\u628a\u7b26\u5408\u6211\u4eec\u8981\u6c42\u7684\u7ed9\u4fdd\u7559\u4e0b\u6765\uff0c\u54ea\u4e9b\u624d\u662f\u7b26\u5408\u6211\u4eec\u8981\u6c42\u7684\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u628a\u9f20\u6807\u653e\u7f6e\u5728\u4efb\u610f\u4e00\u4e2a target \u4e0a\uff0c\u53ef\u4ee5\u67e5\u770b\u5230 Before relabeling \u91cc\u9762\u6240\u6709\u7684\u5143\u6570\u636e\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u8fc7\u6ee4\u7684\u670d\u52a1\u662f default \u8fd9\u4e2a namespace \u4e0b\u9762\uff0c\u670d\u52a1\u540d\u4e3a kubernetes \u7684\u5143\u6570\u636e\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u5bf9\u5e94\u7684 __meta_kubernetes_namespace \u548c __meta_kubernetes_service_name \u8fd9\u4e24\u4e2a\u5143\u6570\u636e\u6765 relabel prometheus before label \u53e6\u5916\u7531\u4e8e kubernetes \u8fd9\u4e2a\u670d\u52a1\u5bf9\u5e94\u7684\u7aef\u53e3\u662f 443 \uff0c\u9700\u8981\u4f7f\u7528 https \u534f\u8bae\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4f7f\u7528 https \u7684\u534f\u8bae\uff0c\u5bf9\u5e94\u7684\u5c31\u9700\u8981\u5c06\u5bf9\u5e94\u7684 ca \u8bc1\u4e66\u914d\u7f6e\u4e0a\uff0c\u5982\u4e0b\uff1a - job_name: 'kubernetes-apiservers' kubernetes_sd_configs: - role: endpoints scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token relabel_configs: - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name] action: keep regex: default;kubernetes;https \u73b0\u5728\u91cd\u65b0\u66f4\u65b0\u914d\u7f6e\u6587\u4ef6\u3001\u91cd\u65b0\u52a0\u8f7d Prometheus \uff0c\u5207\u6362\u5230 Prometheus \u7684 Targets \u8def\u5f84\u4e0b\u67e5\u770b\uff1a promethues apiserver \u73b0\u5728\u53ef\u4ee5\u770b\u5230 kubernetes-apiserver \u8fd9\u4e2a\u4efb\u52a1\u4e0b\u9762\u53ea\u6709 apiserver \u8fd9\u4e00\u4e2a\u5b9e\u4f8b\u4e86\uff0c\u8bc1\u660e\u6211\u4eec\u7684 relabel \u662f\u6210\u529f\u7684\uff0c\u73b0\u5728\u6211\u4eec\u5207\u6362\u5230 graph \u8def\u5f84\u4e0b\u9762\u67e5\u770b\u4e0b\u91c7\u96c6\u5230\u6570\u636e\uff0c\u6bd4\u5982\u67e5\u8be2 apiserver \u7684\u603b\u7684\u8bf7\u6c42\u6570\uff1a sum(rate(apiserver_request_count[1m])) \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u5230\u4e86 promql \u91cc\u9762\u7684 rate \u548c sum\u51fd\u6570\uff0c\b\u8868\u793a\u7684\u610f\u601d\u662f apiserver \u57281\u5206\u949f\u5185\u603b\u7684\u8bf7\u6c42\u6570\u3002 apiserver request count \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u5bf9 Kubernetes APIServer \u7684\u76d1\u63a7\u3002 \u53e6\u5916\u5982\u679c\u6211\u4eec\u8981\u6765\u76d1\u63a7\u5176\u4ed6\u7cfb\u7edf\u7ec4\u4ef6\uff0c\u6bd4\u5982 kube-controller-manager \u3001 kube-scheduler \u7684\u8bdd\u5e94\u8be5\u600e\u4e48\u505a\u5462\uff1f \u7531\u4e8e apiserver \u670d\u52a1 namespace \u5728 default \u4f7f\u7528\u9ed8\u8ba4\u7684 Service kubernetes \uff0c\u800c\u5176\u4f59\u7ec4\u4ef6\u670d\u52a1\u5728 kube-system \u8fd9\u4e2a\b namespace \u4e0b\u9762\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u6765\u76d1\u63a7\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u8bdd\uff0c\u9700\u8981\u624b\u52a8\u521b\u5efa\u5355\u72ec\u7684 Service \uff0c\u5176\u4e2d kube-sheduler \u7684\u6307\u6807\u6570\u636e\u7aef\u53e3\u4e3a 10251 \uff0c kube-controller-manager \u5bf9\u5e94\u7684\u7aef\u53e3\u4e3a 10252 \uff0c\u5927\u5bb6\u53ef\u4ee5\b\u5c1d\u8bd5\u4e0b\u81ea\u5df1\u6765\u914d\u7f6e\u4e0b\u8fd9\u51e0\u4e2a\u7cfb\u7edf\u7ec4\u4ef6\u3002 3 Service \u7684\u76d1\u63a7 \u4e0a\u9762\u7684 apiserver \u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u7279\u6b8a\u7684 Service \uff0c\u73b0\u5728\u6211\u4eec\u540c\u6837\u6765\u914d\u7f6e\u4e00\u4e2a\u4efb\u52a1\u7528\u6765\u4e13\u95e8\u53d1\u73b0\u666e\u901a\u7c7b\u578b\u7684 Service \uff1a - job_name: 'kubernetes-service-endpoints' kubernetes_sd_configs: - role: endpoints relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape] action: keep regex: true - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme] action: replace target_label: __scheme__ regex: (https?) - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path] action: replace target_label: __metrics_path__ regex: (.+) - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port] action: replace target_label: __address__ regex: ([^:]+)(?::\\d+)?;(\\d+) replacement: $1:$2 - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: [__meta_kubernetes_namespace] action: replace target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_service_name] action: replace target_label: kubernetes_name \u6ce8\u610f\u6211\u4eec\u8fd9\u91cc\b\u5728 relabel_configs \u533a\u57df\u505a\u4e86\u5927\u91cf\u7684\u914d\u7f6e\uff0c\u7279\u522b\u662f\u7b2c\u4e00\u4e2a\u4fdd\u7559 __meta_kubernetes_service_annotation_prometheus_io_scrape \u4e3a true \u7684\u624d\u4fdd\u7559\u4e0b\u6765\uff0c\u8fd9\u5c31\u662f\b\u8bf4\u8981\u60f3\u81ea\u52a8\u53d1\u73b0\b\u96c6\u7fa4\u4e2d\u7684 Service \uff0c\u5c31\u9700\u8981\u6211\u4eec\u5728 Service \u7684 annotation \u533a\u57df\u6dfb\u52a0 prometheus.io/scrape=true \u7684\u58f0\u660e. \u73b0\u5728\u6211\u4eec\b\u5148\u5c06\u4e0a\u9762\u7684\u914d\u7f6e\u66f4\u65b0\uff0c\u67e5\u770b\u4e0b\u6548\u679c\uff1a service endpoints \u6211\u4eec\u53ef\u4ee5\u770b\u5230 kubernetes-service-endpoints \u8fd9\u4e00\u4e2a\u4efb\u52a1\u4e0b\u9762\u53ea\u53d1\u73b0\u4e86\u4e00\u4e2a\u670d\u52a1\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728 relabel_configs \b\u4e2d\u8fc7\u6ee4\u4e86 annotation \u6709 prometheus.io/scrape=true \u7684 Service \uff0c\u800c\u73b0\u5728\u6211\u4eec\u7cfb\u7edf\u4e2d\u53ea\u6709\u8fd9\u6837\u4e00\u4e2a\u670d\u52a1\u7b26\u5408\u8981\u6c42\uff0c\u6240\u4ee5\u53ea\u51fa\u73b0\u4e86\u4e00\u4e2a\u5b9e\u4f8b\u3002 kind: Service apiVersion: v1 metadata: name: redis namespace: kube-ops annotations: prometheus.io/scrape: \"true\" prometheus.io/port: \"9121\" spec: selector: app: redis ports: - name: redis port: 6379 targetPort: 6379 - name: prom port: 9121 targetPort: 9121 \u7531\u4e8e redis \u670d\u52a1\u7684 metrics \u63a5\u53e3\u5728 9121 \u8fd9\u4e2a redis-exporter \u670d\u52a1\u4e0a\u9762\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a prometheus.io/port=9121 \u8fd9\u6837\u7684 annotations \uff0c\u7136\u540e\u66f4\u65b0\u8fd9\u4e2a Service \uff1a $ kubectl apply -f prome-redis-exporter.yaml deployment.extensions \"redis\" unchanged service \"redis\" changed \u8fd9\u6837\u4ee5\u540e\u6211\u4eec\u6709\u4e86\u65b0\u7684\u670d\u52a1\uff0c\u670d\u52a1\u672c\u8eab\u63d0\u4f9b\u4e86 /metrics \u63a5\u53e3\uff0c\u6211\u4eec\u5c31\u5b8c\u5168\u4e0d\u9700\u8981\u7528\u9759\u6001\u7684\u65b9\u5f0f\u53bb\u914d\u7f6e\u4e86\uff0c\b\u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4e4b\u524d\u914d\u7f6e\u7684 redis \u7684\u9759\u6001\u914d\u7f6e\u53bb\u6389\u4e86\u3002 \u540c\u6837\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u53bb\u5c1d\u8bd5\u4e0b\u53bb\u914d\u7f6e\u4e0b\u81ea\u52a8\u53d1\u73b0 Pod\u3001ingress \u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u3002 4 kube-state-metrics \u4e0a\u9762\u6211\u4eec\u914d\u7f6e\u4e86\u81ea\u52a8\u53d1\u73b0 Service \uff08Pod\u4e5f\u662f\u4e00\u6837\u7684\uff09\u7684\u76d1\u63a7\uff0c\u4f46\u662f\u8fd9\u4e9b\u76d1\u63a7\u6570\u636e\u90fd\u662f\u5e94\u7528\u5185\u90e8\u7684\u76d1\u63a7\uff0c\u9700\u8981\u5e94\u7528\u672c\u8eab\u63d0\u4f9b\u4e00\u4e2a /metrics \u63a5\u53e3\uff0c\u6216\u8005\u5bf9\u5e94\u7684 exporter \u6765\u66b4\u9732\u5bf9\u5e94\u7684\u6307\u6807\u6570\u636e\uff0c\u4f46\u662f\u5728 Kubernetes \u96c6\u7fa4\u4e0a Pod \u3001 DaemonSet \u3001 Deployment \u3001 Job \u3001 CronJob \u7b49\u5404\u79cd\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u4e5f\u9700\u8981\u76d1\u63a7\uff0c\u8fd9\u4e5f\u53cd\u6620\u4e86\u4f7f\u7528\u8fd9\u4e9b\u8d44\u6e90\u90e8\u7f72\u7684\u5e94\u7528\u7684\u72b6\u6001\u3002 \u4f46\u901a\u8fc7\u67e5\u770b\u524d\u9762\u4ece\u96c6\u7fa4\u4e2d\u62c9\u53d6\u7684\u6307\u6807(\u8fd9\u4e9b\u6307\u6807\u4e3b\u8981\u6765\u81ea apiserver \u548c kubelet \u4e2d\u96c6\u6210\u7684 cAdvisor )\uff0c\u5e76\u6ca1\u6709\u5177\u4f53\u7684\u5404\u79cd\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u6307\u6807\u3002\u5bf9\u4e8e Prometheus \u6765\u8bf4\uff0c\u5f53\u7136\u662f\u9700\u8981\u5f15\u5165\u65b0\u7684 exporter \u6765\u66b4\u9732\u8fd9\u4e9b\u6307\u6807\uff0c Kubernetes \u63d0\u4f9b\u4e86\u4e00\u4e2a kube-state-metrics \u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u3002 kube-state-metrics \u5df2\u7ecf\u7ed9\u51fa\u4e86\u5728 Kubernetes \u90e8\u7f72\u7684 manifest \u5b9a\u4e49\u6587\u4ef6\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u4ee3\u7801 Clone \u5230\u96c6\u7fa4\u4e2d(\u80fd\u7528 kubectl \u5de5\u5177\u64cd\u4f5c\u5c31\u884c): $ git clone https://github.com/kubernetes/kube-state-metrics.git $ cd kube-state-metrics/kubernetes $ kubectl create -f . clusterrolebinding.rbac.authorization.k8s.io \"kube-state-metrics\" created clusterrole.rbac.authorization.k8s.io \"kube-state-metrics\" created deployment.apps \"kube-state-metrics\" created rolebinding.rbac.authorization.k8s.io \"kube-state-metrics\" created role.rbac.authorization.k8s.io \"kube-state-metrics-resizer\" created serviceaccount \"kube-state-metrics\" created service \"kube-state-metrics\" created \u5c06 kube-state-metrics \u90e8\u7f72\u5230 Kubernetes \u4e0a\u4e4b\u540e\uff0c\u5c31\u4f1a\u53d1\u73b0 Kubernetes \u96c6\u7fa4\u4e2d\u7684 Prometheus \u4f1a\u5728 kubernetes-service-endpoints \u8fd9\u4e2a job \u4e0b\u81ea\u52a8\u670d\u52a1\u53d1\u73b0 kube-state-metrics \uff0c\u5e76\u5f00\u59cb\u62c9\u53d6 metrics \uff0c\u8fd9\u662f\u56e0\u4e3a\u90e8\u7f72 kube-state-metrics \u7684 manifest \u5b9a\u4e49\u6587\u4ef6 kube-state-metrics-service.yaml \u5bf9 Service \u7684\u5b9a\u4e49\u5305\u542b prometheus.io/scrape: 'true' \u8fd9\u6837\u7684\u4e00\u4e2a annotation \uff0c\u56e0\u6b64 kube-state-metrics \u7684 endpoint \u53ef\u4ee5\u88ab Prometheus \u81ea\u52a8\u670d\u52a1\u53d1\u73b0","title":"\u7b2c\u4e03\u8282 \u76d1\u63a7\u5e38\u7528\u8d44\u6e90\u5bf9\u8c61\uff08\u5bb9\u5668/apiserver/Service\u76d1\u63a7/kube-state-metric\uff09"},{"location":"chap3/7Adv_K8S_Resource_monitor/#apiserverservicekube-state-metric","text":"\u4e0a\u4e00\u7bc7\u6211\u4eec\u5b66\u4e60\u4e86\u600e\u6837\u7528 Prometheus \u6765\u81ea\u52a8\u53d1\u73b0 Kubernetes \u96c6\u7fa4\u7684\u8282\u70b9\uff0c\u7528\u5230\u4e86 Prometheus \u9488\u5bf9 Kubernetes \u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236 kubernetes_sd_configs \u7684\u4f7f \u7528\uff0c\u6b64\u7bc7\u6587\u7ae0\u6211\u4eec\u4e86\u89e3\u4e0b\u600e\u6837\u5728 Prometheus \u4e2d\u6765\u81ea\u52a8\u76d1\u63a7 Kubernetes \u4e2d\u7684\u4e00\u4e9b\u5e38\u7528\u8d44\u6e90\u5bf9\u8c61\u3002 \u524d\u9762\u6211\u4eec\u548c\u5927\u5bb6\u4ecb\u7ecd\u8fc7\u4e86\u5728 Prometheus \u4e2d\u7528 \u9759\u6001\u7684\u65b9\u5f0f \u6765\u76d1\u63a7 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u666e\u901a\u5e94\u7528\uff0c \u4f46\u662f\u5982\u679c\u9488\u5bf9\u96c6\u7fa4\u4e2d\u4f17\u591a\u7684\u8d44\u6e90\u5bf9\u8c61\u90fd\u91c7\u7528\u9759\u6001\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u914d\u7f6e\u7684\u8bdd\u663e\u7136\u662f\u4e0d\u73b0\u5b9e\u7684 \uff0c\u6240\u4ee5\u540c\u6837\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230 Prometheus \u63d0\u4f9b\u7684\u5176\u4ed6\u7c7b\u578b\u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236\u3002","title":"\u7b2c\u4e03\u8282 \u76d1\u63a7\u5e38\u7528\u8d44\u6e90\u5bf9\u8c61\uff08\u5bb9\u5668/apiserver/Service\u76d1\u63a7/kube-state-metric\uff09"},{"location":"chap3/7Adv_K8S_Resource_monitor/#1","text":"\u8bf4\u5230\u5bb9\u5668\u76d1\u63a7\u6211\u4eec\u81ea\u7136\u4f1a\u60f3\u5230 cAdvisor \uff0c\u6211\u4eec\u524d\u9762\u4e5f\u8bf4\u8fc7 cAdvisor \u5df2\u7ecf\u5185\u7f6e\u5728\u4e86 kubelet \u7ec4\u4ef6\u4e4b\u4e2d\uff0c \u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u5355\u72ec\u53bb\u5b89\u88c5\uff0c cAdvisor \u7684\u6570\u636e\u8def\u5f84\u4e3a /api/v1/nodes/<node>/proxy/metrics , \u540c\u6837\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 node \u7684\u670d\u52a1\u53d1\u73b0\u6a21\u5f0f\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0b\u9762\u90fd\u6709 kubelet \uff0c\u81ea\u7136\u90fd\u6709 cAdvisor \u91c7\u96c6\u5230\u7684\u6570\u636e\u6307\u6807\uff0c\u914d\u7f6e\u5982\u4e0b\uff1a - job_name: 'kubernetes-cadvisor' kubernetes_sd_configs: - role: node scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - target_label: __address__ replacement: kubernetes.default.svc:443 - source_labels: [__meta_kubernetes_node_name] regex: (.+) target_label: __metrics_path__ replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor \u4e0a\u9762\u7684\u914d\u7f6e\u548c\u6211\u4eec\u4e4b\u524d\u914d\u7f6e node-exporter \u7684\u65f6\u5019\u51e0\u4e4e\u662f\u4e00\u6837\u7684. \u533a\u522b\u662f\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e86 https \u7684\u534f\u8bae\uff0c\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\u914d\u7f6e\u4e86 ca.cart \u548c token \u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e24\u4e2a\u6587\u4ef6\u662f Pod \u542f\u52a8\u540e\u81ea\u52a8\u6ce8\u5165\u8fdb\u6765\u7684\uff0c\u901a\u8fc7\u8fd9\u4e24\u4e2a\u6587\u4ef6\u6211\u4eec\u53ef\u4ee5\u5728 Pod \u4e2d\u8bbf\u95ee apiserver \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u7684 __address__ \u4e0d\u5728\u662f nodeip \u4e86\uff0c\u800c\u662f kubernetes \u5728 \u96c6\u7fa4\u4e2d\u7684\u670d\u52a1\u5730\u5740 \uff0c\u7136\u540e\u52a0\u4e0a __metrics_path__ \u7684\u8bbf\u95ee\u8def\u5f84\uff1a /api/v1/nodes/${1}/proxy/metrics/cadvisor \uff0c\u73b0\u5728\u540c\u6837\u66f4\u65b0\u4e0b\u914d\u7f6e\uff0c\u7136\u540e\u67e5\u770b Targets \u8def\u5f84\uff1a \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5207\u6362\u5230 Graph \u8def\u5f84\u4e0b\u9762\u67e5\u8be2\u5bb9\u5668\u76f8\u5173\u6570\u636e\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u6765\u67e5\u8be2\u96c6\u7fa4\u4e2d\u6240\u6709 Pod \u7684 CPU \u4f7f\u7528\u60c5\u51b5\uff0c\u8fd9\u91cc\u7528\u7684\u6570\u636e\u6307\u6807\u662f container_cpu_usage_seconds_total \uff0c\u7136\u540e\u53bb\u9664\u4e00\u4e9b\u65e0\u6548\u7684\u6570\u636e\uff0c\u67e5\u8be21\u5206\u949f\b\u5185\u7684\u6570\u636e\uff0c\u7531\u4e8e\u67e5\u8be2\u5230\u7684\u6570\u636e\u90fd\u662f\u5bb9\u5668\u76f8\u5173\u7684\uff0c\u6700\u597d\u8981\u5b89\u88c5 Pod \u6765\u8fdb\u884c\u805a\u5408\uff0c\u5bf9\u5e94\u7684 promQL \u8bed\u53e5\u5982\u4e0b\uff1a sum by (pod_name)(rate(container_cpu_usage_seconds_total{image!=\"\", pod_name!=\"\"}[1m] )) prometheus cadvisor graph \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u7ed3\u679c\u5c31\u662f\u96c6\u7fa4\u4e2d\u7684\u6240\u6709 Pod \u57281\u5206\u949f\u4e4b\u5185\u7684 CPU \u4f7f\u7528\u60c5\u51b5\u7684\u66f2\u7ebf\u56fe\uff0c\u5f53\u7136\u8fd8\u6709\u5f88\u591a\u6570\u636e\u53ef\u4ee5\u83b7\u53d6\u5230\uff0c\u6211\u4eec\u540e\u9762\u5728\u9700\u8981\u7684\u65f6\u5019\u518d\u548c\u5927\u5bb6\u4ecb\u7ecd\u3002","title":"1 \u5bb9\u5668\u76d1\u63a7"},{"location":"chap3/7Adv_K8S_Resource_monitor/#2-apiserver","text":"apiserver \u4f5c\u4e3a Kubernetes \u6700\u6838\u5fc3\u7684\u7ec4\u4ef6\uff0c\u5f53\u7136\u4ed6\u7684\u76d1\u63a7\u4e5f\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\uff0c\u5bf9\u4e8e apiserver \u7684\u76d1\u63a7\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 kubernetes \u7684 Service \u6765\u83b7\u53d6\uff1a $ kubectl get services NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes ClusterIP 10.254.0.1 <none> 443/TCP 34d \u4e0a\u9762\u8fd9\u4e2a Service \u5c31\u662f\u6211\u4eec\u96c6\u7fa4\u7684 apiserver \u5728\u96c6\u7fa4\u5185\u90e8\u7684 Service \u5730\u5740\uff0c\u8981\u81ea\u52a8\u53d1\u73b0 Service \u7c7b\u578b\u7684\u670d\u52a1\uff0c\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230 role \u4e3a Endpoints \u7684 kubernetes_sd_configs \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 ConfigMap \u5bf9\u8c61\u4e2d\u6dfb\u52a0\u4e0a\u4e00\u4e2a Endpoints \u7c7b\u578b\u7684\u670d\u52a1\u7684\u76d1\u63a7\u4efb\u52a1\uff1a - job_name: 'kubernetes-apiservers' kubernetes_sd_configs: - role: endpoints \u4e0a\u9762\u8fd9\u4e2a\u4efb\u52a1\u662f\u5b9a\u4e49\u7684\u4e00\u4e2a\u7c7b\u578b\u4e3a endpoints \u7684 kubernetes_sd_configs \uff0c\u6dfb\u52a0\u5230 Prometheus \u7684 ConfigMap \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u66f4\u65b0\u914d\u7f6e\uff1a $ kubectl delete -f prome-cm.yaml $ kubectl create -f prome-cm.yaml # \u9694\u4e00\u4f1a\u513f\u6267\u884creload\u64cd\u4f5c $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prometheus NodePort 10.102.74.90 <none> 9090:30358/TCP 14d $ curl -X POST \"http://10.102.74.90:9090/-/reload\" \u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u518d\u53bb\u67e5\u770b Prometheus \u7684 Dashboard \u7684 target \u9875\u9762\uff1a \u6211\u4eec\u53ef\u4ee5\b\u770b\u5230 kubernetes-apiservers \u4e0b\u9762\u51fa\u73b0\u4e86\u5f88\u591a\u5b9e\u4f8b\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684\u662f Endpoints \u7c7b\u578b\u7684\u670d\u52a1\u53d1\u73b0\uff0c\u6240\u4ee5 Prometheus \u628a\u6240\u6709\u7684 Endpoints \u670d\u52a1\u90fd\u6293\u53d6\u8fc7\u6765\u4e86\uff0c\u540c\u6837\u7684\uff0c\u4e0a\u9762\u6211\u4eec\u9700\u8981\u7684\u670d\u52a1\u540d\u4e3a kubernetes \u8fd9\u4e2a apiserver \u7684\u670d\u52a1\u4e5f\u5728\u8fd9\u4e2a\u5217\u8868\u4e4b\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u600e\u6837\u6765\u8fc7\u6ee4\u51fa\u8fd9\u4e2a\u670d\u52a1\u6765\u5462\uff1f \u8fd8\u8bb0\u5f97\u4e0a\u8282\u8bfe\u7684 relabel_configs \u5417\uff1f \u6ca1\u9519\uff0c\u540c\u6837\u6211\u4eec\u9700\u8981\u4f7f\u7528\u8fd9\u4e2a\u914d\u7f6e\uff0c\u53ea\u662f\u6211\u4eec\u8fd9\u91cc\u4e0d\u662f\u4f7f\u7528 replace \u8fd9\u4e2a\u52a8\u4f5c\u4e86\uff0c\u800c\u662f keep \uff0c\u5c31\u662f\u53ea\u628a\u7b26\u5408\u6211\u4eec\u8981\u6c42\u7684\u7ed9\u4fdd\u7559\u4e0b\u6765\uff0c\u54ea\u4e9b\u624d\u662f\u7b26\u5408\u6211\u4eec\u8981\u6c42\u7684\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u628a\u9f20\u6807\u653e\u7f6e\u5728\u4efb\u610f\u4e00\u4e2a target \u4e0a\uff0c\u53ef\u4ee5\u67e5\u770b\u5230 Before relabeling \u91cc\u9762\u6240\u6709\u7684\u5143\u6570\u636e\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u8fc7\u6ee4\u7684\u670d\u52a1\u662f default \u8fd9\u4e2a namespace \u4e0b\u9762\uff0c\u670d\u52a1\u540d\u4e3a kubernetes \u7684\u5143\u6570\u636e\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u5bf9\u5e94\u7684 __meta_kubernetes_namespace \u548c __meta_kubernetes_service_name \u8fd9\u4e24\u4e2a\u5143\u6570\u636e\u6765 relabel prometheus before label \u53e6\u5916\u7531\u4e8e kubernetes \u8fd9\u4e2a\u670d\u52a1\u5bf9\u5e94\u7684\u7aef\u53e3\u662f 443 \uff0c\u9700\u8981\u4f7f\u7528 https \u534f\u8bae\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4f7f\u7528 https \u7684\u534f\u8bae\uff0c\u5bf9\u5e94\u7684\u5c31\u9700\u8981\u5c06\u5bf9\u5e94\u7684 ca \u8bc1\u4e66\u914d\u7f6e\u4e0a\uff0c\u5982\u4e0b\uff1a - job_name: 'kubernetes-apiservers' kubernetes_sd_configs: - role: endpoints scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token relabel_configs: - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name] action: keep regex: default;kubernetes;https \u73b0\u5728\u91cd\u65b0\u66f4\u65b0\u914d\u7f6e\u6587\u4ef6\u3001\u91cd\u65b0\u52a0\u8f7d Prometheus \uff0c\u5207\u6362\u5230 Prometheus \u7684 Targets \u8def\u5f84\u4e0b\u67e5\u770b\uff1a promethues apiserver \u73b0\u5728\u53ef\u4ee5\u770b\u5230 kubernetes-apiserver \u8fd9\u4e2a\u4efb\u52a1\u4e0b\u9762\u53ea\u6709 apiserver \u8fd9\u4e00\u4e2a\u5b9e\u4f8b\u4e86\uff0c\u8bc1\u660e\u6211\u4eec\u7684 relabel \u662f\u6210\u529f\u7684\uff0c\u73b0\u5728\u6211\u4eec\u5207\u6362\u5230 graph \u8def\u5f84\u4e0b\u9762\u67e5\u770b\u4e0b\u91c7\u96c6\u5230\u6570\u636e\uff0c\u6bd4\u5982\u67e5\u8be2 apiserver \u7684\u603b\u7684\u8bf7\u6c42\u6570\uff1a sum(rate(apiserver_request_count[1m])) \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u5230\u4e86 promql \u91cc\u9762\u7684 rate \u548c sum\u51fd\u6570\uff0c\b\u8868\u793a\u7684\u610f\u601d\u662f apiserver \u57281\u5206\u949f\u5185\u603b\u7684\u8bf7\u6c42\u6570\u3002 apiserver request count \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u5bf9 Kubernetes APIServer \u7684\u76d1\u63a7\u3002 \u53e6\u5916\u5982\u679c\u6211\u4eec\u8981\u6765\u76d1\u63a7\u5176\u4ed6\u7cfb\u7edf\u7ec4\u4ef6\uff0c\u6bd4\u5982 kube-controller-manager \u3001 kube-scheduler \u7684\u8bdd\u5e94\u8be5\u600e\u4e48\u505a\u5462\uff1f \u7531\u4e8e apiserver \u670d\u52a1 namespace \u5728 default \u4f7f\u7528\u9ed8\u8ba4\u7684 Service kubernetes \uff0c\u800c\u5176\u4f59\u7ec4\u4ef6\u670d\u52a1\u5728 kube-system \u8fd9\u4e2a\b namespace \u4e0b\u9762\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u6765\u76d1\u63a7\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u8bdd\uff0c\u9700\u8981\u624b\u52a8\u521b\u5efa\u5355\u72ec\u7684 Service \uff0c\u5176\u4e2d kube-sheduler \u7684\u6307\u6807\u6570\u636e\u7aef\u53e3\u4e3a 10251 \uff0c kube-controller-manager \u5bf9\u5e94\u7684\u7aef\u53e3\u4e3a 10252 \uff0c\u5927\u5bb6\u53ef\u4ee5\b\u5c1d\u8bd5\u4e0b\u81ea\u5df1\u6765\u914d\u7f6e\u4e0b\u8fd9\u51e0\u4e2a\u7cfb\u7edf\u7ec4\u4ef6\u3002","title":"2 apiserver \u76d1\u63a7"},{"location":"chap3/7Adv_K8S_Resource_monitor/#3-service","text":"\u4e0a\u9762\u7684 apiserver \u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u7279\u6b8a\u7684 Service \uff0c\u73b0\u5728\u6211\u4eec\u540c\u6837\u6765\u914d\u7f6e\u4e00\u4e2a\u4efb\u52a1\u7528\u6765\u4e13\u95e8\u53d1\u73b0\u666e\u901a\u7c7b\u578b\u7684 Service \uff1a - job_name: 'kubernetes-service-endpoints' kubernetes_sd_configs: - role: endpoints relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape] action: keep regex: true - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme] action: replace target_label: __scheme__ regex: (https?) - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path] action: replace target_label: __metrics_path__ regex: (.+) - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port] action: replace target_label: __address__ regex: ([^:]+)(?::\\d+)?;(\\d+) replacement: $1:$2 - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: [__meta_kubernetes_namespace] action: replace target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_service_name] action: replace target_label: kubernetes_name \u6ce8\u610f\u6211\u4eec\u8fd9\u91cc\b\u5728 relabel_configs \u533a\u57df\u505a\u4e86\u5927\u91cf\u7684\u914d\u7f6e\uff0c\u7279\u522b\u662f\u7b2c\u4e00\u4e2a\u4fdd\u7559 __meta_kubernetes_service_annotation_prometheus_io_scrape \u4e3a true \u7684\u624d\u4fdd\u7559\u4e0b\u6765\uff0c\u8fd9\u5c31\u662f\b\u8bf4\u8981\u60f3\u81ea\u52a8\u53d1\u73b0\b\u96c6\u7fa4\u4e2d\u7684 Service \uff0c\u5c31\u9700\u8981\u6211\u4eec\u5728 Service \u7684 annotation \u533a\u57df\u6dfb\u52a0 prometheus.io/scrape=true \u7684\u58f0\u660e. \u73b0\u5728\u6211\u4eec\b\u5148\u5c06\u4e0a\u9762\u7684\u914d\u7f6e\u66f4\u65b0\uff0c\u67e5\u770b\u4e0b\u6548\u679c\uff1a service endpoints \u6211\u4eec\u53ef\u4ee5\u770b\u5230 kubernetes-service-endpoints \u8fd9\u4e00\u4e2a\u4efb\u52a1\u4e0b\u9762\u53ea\u53d1\u73b0\u4e86\u4e00\u4e2a\u670d\u52a1\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728 relabel_configs \b\u4e2d\u8fc7\u6ee4\u4e86 annotation \u6709 prometheus.io/scrape=true \u7684 Service \uff0c\u800c\u73b0\u5728\u6211\u4eec\u7cfb\u7edf\u4e2d\u53ea\u6709\u8fd9\u6837\u4e00\u4e2a\u670d\u52a1\u7b26\u5408\u8981\u6c42\uff0c\u6240\u4ee5\u53ea\u51fa\u73b0\u4e86\u4e00\u4e2a\u5b9e\u4f8b\u3002 kind: Service apiVersion: v1 metadata: name: redis namespace: kube-ops annotations: prometheus.io/scrape: \"true\" prometheus.io/port: \"9121\" spec: selector: app: redis ports: - name: redis port: 6379 targetPort: 6379 - name: prom port: 9121 targetPort: 9121 \u7531\u4e8e redis \u670d\u52a1\u7684 metrics \u63a5\u53e3\u5728 9121 \u8fd9\u4e2a redis-exporter \u670d\u52a1\u4e0a\u9762\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a prometheus.io/port=9121 \u8fd9\u6837\u7684 annotations \uff0c\u7136\u540e\u66f4\u65b0\u8fd9\u4e2a Service \uff1a $ kubectl apply -f prome-redis-exporter.yaml deployment.extensions \"redis\" unchanged service \"redis\" changed \u8fd9\u6837\u4ee5\u540e\u6211\u4eec\u6709\u4e86\u65b0\u7684\u670d\u52a1\uff0c\u670d\u52a1\u672c\u8eab\u63d0\u4f9b\u4e86 /metrics \u63a5\u53e3\uff0c\u6211\u4eec\u5c31\u5b8c\u5168\u4e0d\u9700\u8981\u7528\u9759\u6001\u7684\u65b9\u5f0f\u53bb\u914d\u7f6e\u4e86\uff0c\b\u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4e4b\u524d\u914d\u7f6e\u7684 redis \u7684\u9759\u6001\u914d\u7f6e\u53bb\u6389\u4e86\u3002 \u540c\u6837\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u53bb\u5c1d\u8bd5\u4e0b\u53bb\u914d\u7f6e\u4e0b\u81ea\u52a8\u53d1\u73b0 Pod\u3001ingress \u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u3002","title":"3 Service \u7684\u76d1\u63a7"},{"location":"chap3/7Adv_K8S_Resource_monitor/#4-kube-state-metrics","text":"\u4e0a\u9762\u6211\u4eec\u914d\u7f6e\u4e86\u81ea\u52a8\u53d1\u73b0 Service \uff08Pod\u4e5f\u662f\u4e00\u6837\u7684\uff09\u7684\u76d1\u63a7\uff0c\u4f46\u662f\u8fd9\u4e9b\u76d1\u63a7\u6570\u636e\u90fd\u662f\u5e94\u7528\u5185\u90e8\u7684\u76d1\u63a7\uff0c\u9700\u8981\u5e94\u7528\u672c\u8eab\u63d0\u4f9b\u4e00\u4e2a /metrics \u63a5\u53e3\uff0c\u6216\u8005\u5bf9\u5e94\u7684 exporter \u6765\u66b4\u9732\u5bf9\u5e94\u7684\u6307\u6807\u6570\u636e\uff0c\u4f46\u662f\u5728 Kubernetes \u96c6\u7fa4\u4e0a Pod \u3001 DaemonSet \u3001 Deployment \u3001 Job \u3001 CronJob \u7b49\u5404\u79cd\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u4e5f\u9700\u8981\u76d1\u63a7\uff0c\u8fd9\u4e5f\u53cd\u6620\u4e86\u4f7f\u7528\u8fd9\u4e9b\u8d44\u6e90\u90e8\u7f72\u7684\u5e94\u7528\u7684\u72b6\u6001\u3002 \u4f46\u901a\u8fc7\u67e5\u770b\u524d\u9762\u4ece\u96c6\u7fa4\u4e2d\u62c9\u53d6\u7684\u6307\u6807(\u8fd9\u4e9b\u6307\u6807\u4e3b\u8981\u6765\u81ea apiserver \u548c kubelet \u4e2d\u96c6\u6210\u7684 cAdvisor )\uff0c\u5e76\u6ca1\u6709\u5177\u4f53\u7684\u5404\u79cd\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u6307\u6807\u3002\u5bf9\u4e8e Prometheus \u6765\u8bf4\uff0c\u5f53\u7136\u662f\u9700\u8981\u5f15\u5165\u65b0\u7684 exporter \u6765\u66b4\u9732\u8fd9\u4e9b\u6307\u6807\uff0c Kubernetes \u63d0\u4f9b\u4e86\u4e00\u4e2a kube-state-metrics \u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u3002 kube-state-metrics \u5df2\u7ecf\u7ed9\u51fa\u4e86\u5728 Kubernetes \u90e8\u7f72\u7684 manifest \u5b9a\u4e49\u6587\u4ef6\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u4ee3\u7801 Clone \u5230\u96c6\u7fa4\u4e2d(\u80fd\u7528 kubectl \u5de5\u5177\u64cd\u4f5c\u5c31\u884c): $ git clone https://github.com/kubernetes/kube-state-metrics.git $ cd kube-state-metrics/kubernetes $ kubectl create -f . clusterrolebinding.rbac.authorization.k8s.io \"kube-state-metrics\" created clusterrole.rbac.authorization.k8s.io \"kube-state-metrics\" created deployment.apps \"kube-state-metrics\" created rolebinding.rbac.authorization.k8s.io \"kube-state-metrics\" created role.rbac.authorization.k8s.io \"kube-state-metrics-resizer\" created serviceaccount \"kube-state-metrics\" created service \"kube-state-metrics\" created \u5c06 kube-state-metrics \u90e8\u7f72\u5230 Kubernetes \u4e0a\u4e4b\u540e\uff0c\u5c31\u4f1a\u53d1\u73b0 Kubernetes \u96c6\u7fa4\u4e2d\u7684 Prometheus \u4f1a\u5728 kubernetes-service-endpoints \u8fd9\u4e2a job \u4e0b\u81ea\u52a8\u670d\u52a1\u53d1\u73b0 kube-state-metrics \uff0c\u5e76\u5f00\u59cb\u62c9\u53d6 metrics \uff0c\u8fd9\u662f\u56e0\u4e3a\u90e8\u7f72 kube-state-metrics \u7684 manifest \u5b9a\u4e49\u6587\u4ef6 kube-state-metrics-service.yaml \u5bf9 Service \u7684\u5b9a\u4e49\u5305\u542b prometheus.io/scrape: 'true' \u8fd9\u6837\u7684\u4e00\u4e2a annotation \uff0c\u56e0\u6b64 kube-state-metrics \u7684 endpoint \u53ef\u4ee5\u88ab Prometheus \u81ea\u52a8\u670d\u52a1\u53d1\u73b0","title":"4 kube-state-metrics"},{"location":"chap3/8Adv_K8S_Grafana/","text":"\u7b2c\u516b\u8282 Grafana \u5728 Kubernetes \u4e2d\u7684\u4f7f\u7528 1 \u5b89\u88c5 grafana \u662f\u4e00\u4e2a\u53ef\u89c6\u5316\u9762\u677f\uff0c\u6709\u7740\u975e\u5e38\u6f02\u4eae\u7684\u56fe\u8868\u548c\u5e03\u5c40\u5c55\u793a\uff0c\u529f\u80fd\u9f50\u5168\u7684\u5ea6\u91cf\u4eea\u8868\u76d8\u548c\u56fe\u5f62\u7f16\u8f91\u5668\uff0c\u652f\u6301 Graphite \u3001 zabbix \u3001 InfluxDB \u3001 Prometheus \u3001 OpenTSDB \u3001 Elasticsearch \u7b49\u4f5c\u4e3a\u6570\u636e\u6e90\uff0c\u6bd4 Prometheus \u81ea\u5e26\u7684\u56fe\u8868\u5c55\u793a\u529f\u80fd\u5f3a\u5927\u592a\u591a\uff0c\u66f4\u52a0\u7075\u6d3b\uff0c\u6709\u4e30\u5bcc\u7684\u63d2\u4ef6\uff0c\u529f\u80fd\u66f4\u52a0\u5f3a\u5927\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06 grafana \u5b89\u88c5\u5230 Kubernetes \u96c6\u7fa4\u4e2d\uff0c\u7b2c\u4e00\u6b65\u540c\u6837\u662f\u53bb\u67e5\u770b grafana \u7684 docker \u955c\u50cf\u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 dockerhub \u4e0a\u53bb\u641c\u7d22\uff0c\u4e5f\u53ef\u4ee5\u5728\u5b98\u7f51\u53bb\u67e5\u770b\u76f8\u5173\u8d44\u6599\uff0c\u955c\u50cf\u5730\u5740\u5982\u4e0b\uff1a https://hub.docker.com/r/grafana/grafana/ \uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ecb\u7ecd\u4e2d\u8fd0\u884c grafana \u5bb9\u5668\u7684\u547d\u4ee4\u975e\u5e38\u7b80\u5355\uff1a $ docker run -d --name=grafana -p 3000:3000 grafana/grafana \u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u662f Changelog \u4e2d v5.1.0 \u7248\u672c\u7684\u66f4\u65b0\u4ecb\u7ecd\uff1a Major restructuring of the container Usage of chown removed File permissions incompatibility with previous versions user id changed from 104 to 472 group id changed from 107 to 472 Runs as the grafana user by default (instead of root) All default volumes removed \u7279\u522b\u9700\u8981\u6ce8\u610f \u7b2c3\u6761 \uff0c userid \u548c groupid \u90fd\u6709\u6240\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u8fd9\u4e2a\u53d8\u5316\u3002\u73b0\u5728\u6211\u4eec\u5c06\u8fd9\u4e2a\u5bb9\u5668\u8f6c\u5316\u6210 Kubernetes \u4e2d\u7684 Pod\uff1a( grafana.yaml ) apiVersion: extensions/v1beta1 kind: Deployment metadata: name: grafana namespace: kube-ops labels: app: grafana spec: revisionHistoryLimit: 10 template: metadata: labels: app: grafana spec: containers: - name: grafana image: grafana/grafana:5.3.4 imagePullPolicy: IfNotPresent ports: - containerPort: 3000 name: grafana env: - name: GF_SECURITY_ADMIN_USER value: admin - name: GF_SECURITY_ADMIN_PASSWORD value: admin321 readinessProbe: failureThreshold: 10 httpGet: path: /api/health port: 3000 scheme: HTTP initialDelaySeconds: 60 periodSeconds: 10 successThreshold: 1 timeoutSeconds: 30 livenessProbe: failureThreshold: 3 httpGet: path: /api/health port: 3000 scheme: HTTP periodSeconds: 10 successThreshold: 1 timeoutSeconds: 1 resources: limits: cpu: 100m memory: 256Mi requests: cpu: 100m memory: 256Mi volumeMounts: - mountPath: /var/lib/grafana subPath: grafana name: storage securityContext: fsGroup: 472 runAsUser: 472 volumes: - name: storage persistentVolumeClaim: claimName: grafana \u6211\u4eec\u4f7f\u7528\u4e86\u6700\u65b0\u7684\u955c\u50cf grafana/grafana:5.3.4 \uff0c\u7136\u540e\u6dfb\u52a0\u4e86\u76d1\u63a7\u68c0\u67e5\u3001\u8d44\u6e90\u58f0\u660e\uff0c \u53e6\u5916\u4e24\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u73af\u5883\u53d8\u91cf GF_SECURITY_ADMIN_USER \u548c GF_SECURITY_ADMIN_PASSWORD \uff0c\u7528\u6765\u914d\u7f6e grafana \u7684\u7ba1\u7406\u5458 \u7528\u6237 \u548c \u5bc6\u7801 \u7684 \u7531\u4e8e grafana \u5c06 dashboard \u3001 \u63d2\u4ef6 \u8fd9\u4e9b\u6570\u636e\u4fdd\u5b58\u5728 /var/lib/grafana \u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\u7684 \uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u5982\u679c\u9700\u8981\u505a\u6570\u636e\u6301\u4e45\u5316\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u9488\u5bf9\u8fd9\u4e2a\u76ee\u5f55\u8fdb\u884c volume \u6302\u8f7d\u58f0\u660e\uff0c \u5176\u4ed6\u7684\u548c\u6211\u4eec\u4e4b\u524d\u7684 Deployment \u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u7531\u4e8e\u4e0a\u9762\u6211\u4eec\u521a\u521a\u63d0\u5230\u7684 Changelog \u4e2d grafana \u7684 userid \u548c groupid \u6709\u6240\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u589e\u52a0\u4e00\u4e2a securityContext \u7684\u58f0\u660e\u6765\u8fdb\u884c\u58f0\u660e\u3002 securityContext: fsGroup: 472 runAsUser: 472 \u5f53\u7136\u5982\u679c\u8981\u4f7f\u7528\u4e00\u4e2a pvc \u5bf9\u8c61\u6765\u6301\u4e45\u5316\u6570\u636e\uff0c\u6211\u4eec\u5c31\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u53ef\u7528\u7684 pv \u4f9b pvc \u7ed1\u5b9a\u4f7f\u7528\uff1a\uff08 grafana-volume.yaml \uff09 \u5f53\u7136\u5982\u679c\u8981\u4f7f\u7528\u4e00\u4e2a pvc \u5bf9\u8c61\u6765\u6301\u4e45\u5316\u6570\u636e\uff0c\u6211\u4eec\u5c31\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u53ef\u7528\u7684 pv \u4f9b pvc \u7ed1\u5b9a\u4f7f\u7528\uff1a\uff08 grafana-volume.yaml \uff09 apiVersion: v1 kind: PersistentVolume metadata: name: grafana spec: capacity: storage: 1Gi accessModes: - ReadWriteOnce persistentVolumeReclaimPolicy: Recycle nfs: server: 10.151.30.57 path: /data/k8s --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: grafana namespace: kube-ops spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5916\u66b4\u9732 grafana \u8fd9\u4e2a\u670d\u52a1\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c\u5f53\u7136\u7528 NodePort \u6216\u8005\u518d\u5efa\u7acb\u4e00\u4e2a ingress \u5bf9\u8c61\u90fd\u662f\u53ef\u884c\u7684\uff1a( grafana-svc.yaml ) apiVersion: v1 kind: Service metadata: name: grafana namespace: kube-ops labels: app: grafana spec: type: NodePort ports: - port: 3000 selector: app: grafana \u73b0\u5728\u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl create -f grafana-volume.yaml persistentvolume \"grafana\" created persistentvolumeclaim \"grafana\" created $ kubectl create -f grafana-deploy.yaml deployment.extensions \"grafana\" created $ kubectl create -f grafana-svc.yaml service \"grafana\" created \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b grafana \u5bf9\u5e94\u7684 Pod \u662f\u5426\u6b63\u5e38 $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE grafana-5f7b965b55-wxvvk 0/1 CrashLoopBackOff 1 22s \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u7684\u72b6\u6001\u662f CrashLoopBackOff \uff0c\u5e76\u6ca1\u6709\u6b63\u5e38\u542f\u52a8\uff0c\u6211\u4eec\u67e5\u770b\u4e0b\u8fd9\u4e2a Pod \u7684\u65e5\u5fd7\uff1a $ kubectl logs -f grafana-5f7b965b55-wxvvk -n kube-ops GF_PATHS_DATA='/var/lib/grafana' is not writable. You may have issues with file permissions, more information here: http://docs.grafana.org/installation/docker/#migration-from-a-previous-version-of-the-docker-container-to-5-1-or-later mkdir: cannot create directory '/var/lib/grafana/plugins': Permission denied \u4e0a\u9762\u7684\u9519\u8bef\u662f\u57285.1\u7248\u672c\u4e4b\u540e\u624d\u4f1a\u51fa\u73b0\u7684\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u7684\u7248\u672c\u6765\u89c4\u907f\u8fd9\u4e2a\u95ee\u9898\u3002 \u53ef\u4ee5\u770b\u5230\u662f\u65e5\u5fd7\u4e2d\u9519\u8bef\u5f88\u660e\u663e\u5c31\u662f /var/lib/grafana \u76ee\u5f55\u7684\u6743\u9650\u95ee\u9898\uff0c\u8fd9\u8fd8\u662f\u56e0\u4e3a 5.1\u7248\u672c \u540e groupid \u66f4\u6539\u4e86\u5f15\u8d77\u7684\u95ee\u9898\uff0c\u6211\u4eec\u8fd9\u91cc\u589e\u52a0\u4e86 securityContext \uff0c\u4f46\u662f\u6211\u4eec\u5c06\u76ee\u5f55 /var/lib/grafana \u6302\u8f7d\u5230 pvc \u8fd9\u8fb9\u540e\u76ee\u5f55\u7684\u62e5\u6709\u8005\u5e76\u4e0d\u662f\u4e0a\u9762\u7684 grafana(472) \u8fd9\u4e2a\u7528\u6237\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u66f4\u6539\u4e0b\u8fd9\u4e2a\u76ee\u5f55\u7684\u6240\u5c5e\u7528\u6237\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a Job \u4efb\u52a1 \u53bb\u66f4\u6539\u4e0b\u8be5\u76ee\u5f55\u7684\u6240\u5c5e\u7528\u6237\uff1a\uff08 grafana-chown-job.yaml \uff09 apiVersion: batch/v1 kind: Job metadata: name: grafana-chown namespace: kube-ops spec: template: spec: restartPolicy: Never containers: - name: grafana-chown command: [\"chown\", \"-R\", \"472:472\", \"/var/lib/grafana\"] image: busybox imagePullPolicy: IfNotPresent volumeMounts: - name: storage subPath: grafana mountPath: /var/lib/grafana volumes: - name: storage persistentVolumeClaim: claimName: grafana \u4e0a\u9762\u6211\u4eec\u5229\u7528\u4e00\u4e2a busybox \u955c\u50cf\u5c06 /var/lib/grafana \u76ee\u5f55\u66f4\u6539\u6210\u4e86 472 \u8fd9\u4e2a user \u548c group \uff0c\u4e0d\u8fc7\u8fd8\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e0b\u9762\u7684 volumeMounts \u548c volumes \u9700\u8981\u548c\u4e0a\u9762\u7684 Deployment \u5bf9\u5e94\u4e0a\u3002 \u73b0\u5728\u6211\u4eec\u5220\u9664\u4e4b\u524d\u521b\u5efa\u7684 Deployment \u5bf9\u8c61\uff0c\u91cd\u65b0\u521b\u5efa\uff1a $ kubectl delete -f grafana-deploy.yaml deployment.extensions \"grafana\" deleted $ kubectl create -f grafana-deploy.yaml deployment.extensions \"grafana\" created $ kubectl create -f grafana-chown-job.yaml job.batch \"grafana-chown\" created \u91cd\u65b0\u6267\u884c\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0b\u4e0a\u9762\u7684\u521b\u5efa\u7684\u8d44\u6e90\u5bf9\u8c61\u662f\u5426\u6b63\u786e\u4e86\uff1a $ kubectl get pod -n kube-ops NAME READY STATUS RESTARTS AGE grafana-79477fbb7c-2mb84 1/1 Running 0 2m grafana-chown-k8zt7 0/1 Completed 0 2m \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a\u72b6\u6001\u4e3a Completed \u7684 Pod \uff0c \u8fd9\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u7528\u6765\u66f4\u6539 grafana \u76ee\u5f55\u6743\u9650\u7684 Pod \uff0c\u662f\u4e00\u4e2a Job \u4efb\u52a1\uff0c\u6240\u4ee5\u6267\u884c\u6210\u529f\u540e\u5c31\u9000\u51fa\u4e86\uff0c\u72b6\u6001\u53d8\u6210\u4e86 Completed \uff0c\u800c\u4e0a\u9762\u7684 grafana \u7684 Pod \u4e5f\u5df2\u7ecf\u662f Running \u72b6\u6001\u4e86\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0b\u8be5 Pod \u7684\u65e5\u5fd7\u786e\u8ba4\u4e0b\uff1a $ kubectl logs -f grafana-79477fbb7c-2mb84 -n kube-ops t=2018-11-14T19:57:31+0000 lvl=info msg=\"Starting Grafana\" logger=server version=5.3.4 commit=69630b9 compiled=2018-11-13T12:19:12+0000 ...... logger=settings var=\"GF_SECURITY_ADMIN_USER=admin\" t=2018-11-14T19:57:31+0000 lvl=info msg=\"Config overridden from Environment variable\" ...... t=2018-11-14T19:57:32+0000 lvl=info msg=\"Initializing Stream Manager\" t=2018-11-14T19:57:32+0000 lvl=info msg=\"HTTP Server Listen\" logger=http.server address=0.0.0.0:3000 protocol=http subUrl= socket= \u770b\u5230\u4e0a\u9762\u7684\u65e5\u5fd7\u4fe1\u606f\u5c31\u8bc1\u660e\u6211\u4eec\u7684 grafana \u7684 Pod \u5df2\u7ecf\u6b63\u5e38\u542f\u52a8\u8d77\u6765\u4e86\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u67e5\u770b Service \u5bf9\u8c61\uff1a $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE grafana NodePort 10.97.46.27 <none> 3000:30105/TCP 1h \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528 http://<\u4efb\u610f\u8282\u70b9IP:30105> \u6765\u8bbf\u95ee grafana \u8fd9\u4e2a\u670d\u52a1\u4e86\uff1a \u7531\u4e8e\u4e0a\u9762\u6211\u4eec\u914d\u7f6e\u4e86\u7ba1\u7406\u5458\u7684\uff0c\u6240\u4ee5\u7b2c\u4e00\u6b21\u6253\u5f00\u7684\u65f6\u5019\u4f1a\u8df3\u8f6c\u5230\u767b\u5f55\u754c\u9762\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7528\u4e0a\u9762\u6211\u4eec\u914d\u7f6e\u7684\u4e24\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u503c\u6765\u8fdb\u884c\u767b\u5f55\u4e86\uff0c\u767b\u5f55\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u8fdb\u5165\u5230\u4e0b\u9762 Grafana \u7684\u9996\u9875\uff1a \u914d\u7f6e \u5728\u4e0a\u9762\u7684\u9996\u9875\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u5b89\u88c5\u4e86 Grafana \uff0c\u63a5\u4e0b\u6765\u70b9\u51fb Add data source \u8fdb\u5165\u6dfb\u52a0\u6570\u636e\u6e90\u754c\u9762\u3002 2 \u6570\u636e\u6e90 \u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u914d\u7f6e\u7684\u6570\u636e\u6e90\u662f Prometheus \uff0c\b\u6240\u4ee5\u9009\u62e9\u8fd9\u4e2a Type \u5373\u53ef\uff0c\u7ed9\u6539\u6570\u636e\u6e90\u6dfb\u52a0\u4e00\u4e2a name\uff1aprometheus-ds \uff0c\u6700\u4e3b\u8981\u7684\u662f\u4e0b\u9762 HTTP \u533a\u57df\u662f\u914d\u7f6e\u6570\u636e\u6e90\u7684\u8bbf\u95ee\u6a21\u5f0f\u3002 \u8bbf\u95ee\u6a21\u5f0f\u662f\u7528\u6765\u63a7\u5236\u5982\u4f55\u5904\u7406\u5bf9\u6570\u636e\u6e90\u7684\u8bf7\u6c42\u7684\uff1a \u670d\u52a1\u5668( Server )\u8bbf\u95ee\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09\uff1a\u6240\u6709\u8bf7\u6c42\u90fd\u5c06\u4ece\u6d4f\u89c8\u5668\u53d1\u9001\u5230 Grafana \u540e\u7aef\u7684\u670d\u52a1\u5668\uff0c\u540e\u8005\u53c8\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u6570\u636e\u6e90\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\b\u907f\u514d\u4e00\u4e9b\u8de8\u57df\u95ee\u9898\uff0c\u5176\u5b9e\u5c31\u662f\u5728 Grafana \u540e\u7aef\u505a\u4e86\u4e00\u6b21\u8f6c\u53d1\uff0c\u9700\u8981\u4ece Grafana \u540e\u7aef\u670d\u52a1\u5668\u8bbf\u95ee\u8be5 URL \u3002 \u6d4f\u89c8\u5668( Browser )\u8bbf\u95ee\u6a21\u5f0f\uff1a\u6240\u6709\u8bf7\u6c42\u90fd\u5c06\u4ece\u6d4f\u89c8\u5668\u76f4\u63a5\u53d1\u9001\u5230\u6570\u636e\u6e90\uff0c\u4f46\u662f\u6709\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u8de8\u57df\u7684\u9650\u5236\uff0c\u4f7f\u7528\u6b64\u8bbf\u95ee\u6a21\u5f0f\uff0c\u9700\u8981\u4ece\u6d4f\u89c8\u5668\u76f4\u63a5\u8bbf\u95ee\u8be5 URL\u3002 \u7531\u4e8e\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9 Prometheus \u901a\u8fc7 NodePort \u7684\u65b9\u5f0f\u7684\u5bf9\u5916\u66b4\u9732\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u662f\u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee\u6a21\u5f0f\u76f4\u63a5\u8bbf\u95ee Prometheus \u7684\u5916\u7f51\u5730\u5740\uff0c \u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u663e\u7136\u4e0d\u662f\u6700\u597d\u7684\uff0c\u76f8\u5f53\u4e8e\u8d70\u7684\u662f\u5916\u7f51 . \u800c\u6211\u4eec\u8fd9\u91cc Prometheus \u548c Grafana \u90fd\u5904\u4e8e kube-ops \u8fd9\u540c\u4e00\u4e2a\b namespace \u4e0b\u9762\uff0c \u662f\u5728\u96c6\u7fa4\u5185\u90e8\u76f4\u63a5\b\u901a\u8fc7 DNS \u7684\u5f62\u5f0f\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4e86\uff0c\u800c\u4e14\u8fd8\u90fd\u662f\u8d70\u7684\u5185\u7f51\u6d41\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u7528\u670d\u52a1\u5668\u8bbf\u95ee\u6a21\u5f0f\u663e\u7136\u66f4\u597d \uff0c\u6570\u636e\u6e90\u5730\u5740\uff1a http://prometheus:9090 \uff08\u56e0\u4e3a\u5728\u540c\u4e00\u4e2a namespace \u4e0b\u9762\u6240\u4ee5\u76f4\u63a5\u7528\b Service \b\u540d\u4e5f\u53ef\u4ee5 \uff0c \u7136\u540e\u5176\u4ed6\u7684\u914d\u7f6e\u4fe1\u606f\u5c31\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4e86\uff0c\u6bd4\u5982 Auth \u8ba4\u8bc1 \uff0c\u6211\u4eec\u8fd9\u91cc\u6ca1\u6709\uff0c\u6240\u4ee5\u8df3\u8fc7\u5373\u53ef\uff0c\u70b9\u51fb\u6700\u4e0b\u65b9\u7684 Save & Test \u63d0\u793a\u6210\u529f\u8bc1\u660e\u6211\u4eec\u7684\u6570\u636e\u6e90\u914d\u7f6e\u6b63\u786e\uff1a \u6570\u636e\u6e90\u6dfb\u52a0\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u6765\u6dfb\u52a0 Dashboard \u4e86\u3002 3 Dashboard \u540c\u6837\uff0c\u5207\u6362\u5230\u4e3b\u9875\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u624b\u52a8\b\u65b0\u5efa\u4e00\u4e2a Dashboard \uff0c\u9664\u6b64\u4e4b\u5916\uff0c grafana \u7684\u5b98\u65b9\u7f51\u7ad9\u4e0a\u8fd8\u6709\u5f88\u591a\u516c\u5171\u7684 \bDashboard \u53ef\u4ee5\u4f9b\u6211\u4eec\u4f7f\u7528\uff0c\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528 Kubernetes cluster monitoring (via Prometheus) \u8fd9\u4e2a Dashboard \u6765\u5c55\u793a Kubernetes \u96c6\u7fa4\u7684\u76d1\u63a7\u4fe1\u606f\uff0c\u5728\u5de6\u4fa7\u4fa7\u8fb9\u680f Create \u4e2d\u70b9\u51fb import \u5bfc\u5165\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7f16\u53f7 162 \u7684 dashboard \u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u7136\u540e\u8fd9\u91cc\u91cd\u65b0\u4e0a\u4f20\u5373\u53ef\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e0a\u9762\u7684\u6587\u672c\u6846\u4e2d\u76f4\u63a5\u8f93\u5165162\u7f16\u53f7\u56de\u8f66\u5373\u53ef\uff0c\u5bfc\u5165\u8fd9\u4e2a dashboard \uff1a \u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u6267\u884c\u4e0a\u9762\u7684 import \u4e4b\u524d\u8981\u8bb0\u5f97\u9009\u62e9\u6211\u4eec\u7684 prometheus-ds \u8fd9\u4e2a\u540d\u5b57\u7684\u6570\u636e\u6e90\uff0c\u6267\u884c import \u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u5230 dashboard \u9875\u9762\uff1a \b\u6211\u4eec\u53ef\u4ee5\u770b\u5230 dashboard \u9875\u9762\u4e0a\u51fa\u73b0\u4e86\u5f88\u591a\u6f02\u4eae\u7684\u56fe\u8868\uff0c\u4f46\u662f\u770b\u4e0a\u53bb\u6570\u636e\u4e0d\u6b63\u5e38\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a dashboard \u91cc\u9762\u9700\u8981\u7684\u6570\u636e\u6307\u6807\u540d\u79f0\u548c\u6211\u4eec\b Prometheus \u91cc\u9762\u91c7\u96c6\u5230\u7684\u6570\u636e\u6307\u6807\u4e0d\u4e00\u81f4\u9020\u6210\u7684\uff0c\u6bd4\u5982\uff0c \u7b2c\u4e00\u4e2a Cluster memory usage (\u96c6\u7fa4\u5185\u5b58\u4f7f\u7528\u60c5\u51b5) \uff0c\u6211\u4eec\u53ef\u4ee5\u70b9\u51fb\u6807\u9898 -> Edit \uff0c\u8fdb\u5165\u7f16\u8f91\u8fd9\u4e2a\u56fe\u8868\u7684\u7f16\u8f91\u9875\u9762\uff1a \u8fdb\u5165\u7f16\u8f91\u9875\u9762\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u56fe\u8868\u7684\u67e5\u8be2\u8bed\u53e5\uff1a (sum(node_memory_MemTotal) - sum(node_memory_MemFree+node_memory_Buffers+node_memory_Cached) ) / sum(node_memory_MemTotal) * 100 \u8fd9\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u5728 Prometheus \u91cc\u9762\u67e5\u8be2\u7684 promQL \u8bed\u53e5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u67e5\u8be2\u8bed\u53e5\u590d\u5236\u5230 Prometheus \u7684 Graph \u9875\u9762\u8fdb\u884c\u67e5\u8be2\uff0c\u5176\u5b9e\u53ef\u4ee5\u9884\u60f3\u5230\u662f\u6ca1\u6709\u5bf9\u5e94\u7684\u6570\u636e\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7528 node_exporter \u91c7\u96c6\u5230\u7684\u6570\u636e\u6307\u6807\u4e0d\u662f node_memory_MemTotal \u5173\u952e\u5b57\uff0c\u800c\u662f node_memory_MemTotal_bytes \uff0c\u5c06\u4e0a\u9762\u7684 promQL \u8bed\u53e5\u505a\u76f8\u5e94\u7684\u66f4\u6539\uff1a (sum(node_memory_MemTotal_bytes) - sum(node_memory_MemFree_bytes + node_memory_Buffers_bytes+node_memory_Cached_bytes)) / sum(node_memory_MemTotal_bytes) * 100 \u8fd9\u4e2a\u8bed\u53e5\u7684\u610f\u601d\u5c31\u662f(\u6574\u4e2a\u96c6\u7fa4\u7684\u5185\u5b58-(\u6574\u4e2a\u96c6\u7fa4\b\u5269\u4f59\u7684\u5185\u5b58\u4ee5\u53caBuffer\u548cCached))/\u6574\u4e2a\u96c6\u7fa4\u7684\u5185\u5b58\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u603b\u7684\u96c6\u7fa4\u5185\u5b58\u4f7f\u7528\u767e\u5206\u6bd4\u3002 \u5c06\u4e0a\u9762 grafana \u7684promQL\u8bed\u53e5\u66ff\u6362\u6389\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u56fe\u8868\u6b63\u5e38\u4e86\uff1a \u540c\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u6539\b\u540e\u9762\u7684 CPU \u548c FileSystem \u7684\u4f7f\u7528\u7387\uff1a \u540c\u6837\u4e0b\u9762\u7684 Pod CPU Usage \u7528\u6765\u5c55\u793a Pod CPU \u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u5bf9\u5e94\u7684 promQL \u8bed\u53e5\u5982\u4e0b\uff0c\u6839\u636e pod_name \u6765\u8fdb\u884c\u7edf\u8ba1\uff1a sum by (pod_name)(rate(container_cpu_usage_seconds_total{image!=\"\", pod_name!=\"\"}[1m])) \u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\u66ff\u6362 grafana \u4e2d\u7684 dashboard \u56fe\u8868\u4e2d\u7684\u67e5\u8be2\u8bed\u53e5\uff1a \u5176\u4ed6\u7684\u4e5f\u6309\u7167\u6211\u4eec\u7684\u5b9e\u9645\u9700\u6c42\u91cd\u65b0\u7f16\u8f91\u4e0b\b\u5c31\u53ef\u4ee5\uff0c\u4e0b\u56fe\u662f\u6700\u7ec8\u6574\u4e2a dashboard \u7684\u6548\u679c\u56fe\uff1a \u6700\u540e\u8981\u8bb0\u5f97\u4fdd\u5b58\u8fd9\u4e2a dashboard \uff0c\u4e0b\u9762\u7684\u94fe\u63a5\u662f\u6211\u4fee\u6539\u540e\u7684 dashboard json \u6587\u4ef6\u5730\u5740\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u4e0b\u6765\u5bfc\u5165\u5230 grafana \u5f53\u4e2d\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u6539\uff1a k8s-cluster-grafana-dashboard.json \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u524d\u5f80 grafana dashboard \u7684\u9875\u9762\u53bb\u641c\u7d22\u5176\u4ed6\u7684\u5173\u4e8e Kubernetes \u7684\u76d1\u63a7\u9875\u9762\uff0c\u5730\u5740\uff1a https://grafana.com/dashboards \uff0c\u6bd4\u5982id \u4e3a 747 \u548c 741 \u7684\u8fd9\u4e24\u4e2a dashboard \u3002 4 \u63d2\u4ef6 \u4e0a\u9762\u662f\u6211\u4eec\u6700\u5e38\u7528\u7684 grafana \u5f53\u4e2d\u7684 dashboard \u7684\u529f\u80fd\u7684\u4f7f\u7528\uff0c\u7136\u540e\u6211\u4eec\u4e5f\u53ef\u4ee5\u6765\u8fdb\u884c\u4e00\u4e9b\u5176\u4ed6\u7684\u7cfb\u7edf\u7ba1\u7406\uff0c\u6bd4\u5982\u6dfb\u52a0\u7528\u6237\uff0c\u4e3a\u7528\u6237\u6dfb\u52a0\u6743\u9650\u7b49\u7b49\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b89\u88c5\u4e00\u4e9b\u5176\u4ed6\u63d2\u4ef6\uff0c\u6bd4\u5982 grafana \u5c31\u6709\u4e00\u4e2a\u4e13\u95e8\u9488\u5bf9 Kubernetes \u96c6\u7fa4\u76d1\u63a7\u7684\u63d2\u4ef6\uff1a grafana-kubernetes-app \u8981\u5b89\u88c5\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u9700\u8981\u5230 grafana \u7684 Pod \u91cc\u9762\u53bb\u6267\u884c\u5b89\u88c5\u547d\u4ee4\uff1a $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE grafana-79477fbb7c-v4prs 1/1 Running 0 23m # kubectl exec -it pod-name bin/bash -n kube-ops $ kubectl exec -it grafana-79477fbb7c-v4prs /bin/bash -n kube-ops grafana@grafana-79477fbb7c-v4prs:/usr/share/grafana$ grafana-cli plugins install grafana-kubernetes-app installing grafana-kubernetes-app @ 1.0.1 from url: https://grafana.com/api/plugins/grafana-kubernetes-app/versions/1.0.1/download into: /var/lib/grafana/plugins \u2714 Installed grafana-kubernetes-app successfully Restart grafana after installing plugins . <service grafana-server restart> grafana@grafana-79477fbb7c-v4prs:/usr/share/grafana$ \u5b89\u88c5\u5b8c\u6210\u540e\u9700\u8981\u91cd\u542f grafana \u624d\u4f1a\u751f\u6548\uff0c\u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u5220\u9664 Pod \uff0c\u91cd\u5efa\u5373\u53ef\uff0c\u7136\u540e\u56de\u5230 grafana \u9875\u9762\u4e2d\uff0c\u5207\u6362\u5230 plugins \u9875\u9762\u53ef\u4ee5\u53d1\u73b0\u4e0b\u9762\u591a\u4e86\u4e00\u4e2a Kubernetes \u7684\u63d2\u4ef6\uff0c\u70b9\u51fb\u8fdb\u6765\u542f\u7528\u5373\u53ef\uff0c\u7136\u540e\u70b9\u51fb Next up\b \u65c1\u8fb9\u7684\u94fe\u63a5\u914d\u7f6e\u96c6\u7fa4 \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684 Kubernetes \u96c6\u7fa4\uff0c \u8fd9\u91cc\u9700\u8981\u586b\u5199\u96c6\u7fa4\u7684\u8bbf\u95ee\u5730\u5740\uff1a https://kubernetes.default \uff0c\u7136\u540e\u6bd4\u8f83\u91cd\u8981\u7684\u662f\u96c6\u7fa4\u8bbf\u95ee\u7684\u8bc1\u4e66\uff0c\u52fe\u9009\u4e0a TLS Client Auth \u548c With CA Cert \u8fd9\u4e24\u9879 \u3002 \u96c6\u7fa4\u8bbf\u95ee\u7684\u8bc1\u4e66\u6587\u4ef6\uff0c\u7528\u6211\u4eec\u8bbf\u95ee\u96c6\u7fa4\u7684 kubectl \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u8bc1\u4e66\u4fe1\u606f (~/.kube/config) \u5373\u53ef\uff0c\u5176\u4e2d\u5c5e\u6027 certificate-authority-data \u3001 client-certificate-data \u3001 client-key-data \u5c31\u5bf9\u5e94\u8fd9 CA \u8bc1\u4e66 \u3001 Client \u8bc1\u4e66 \u3001 Client \u79c1\u94a5 \uff0c\u4e0d\u8fc7 config \u6587\u4ef6\u91cc\u9762\u7684\u5185\u5bb9\u662f base64 \u7f16\u7801\u8fc7\u540e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u586b\u5199\u7684\u65f6\u5019\u8981\u505a base64 \u89e3\u7801\u3002 \u53e6\u5916\u9700\u8981\u5c06\u89e3\u7801\u8fc7\u540e\u7684\\n\u6362\u6210\u6362\u884c\u7b26\uff0c\u4e0d\u7136\u8ba4\u8bc1\u4f1a\u5931\u8d25\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u70b9\u51fb Deploy \uff0c\u7136\u540e\u70b9\u51fbSave\uff0c\u5c31\u53ef\u4ee5\b\u83b7\u53d6\u5230\u96c6\u7fa4\u7684\u76d1\u63a7\u8d44\u6e90\u4fe1\u606f\u4e86\u3002 \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u5c55\u793a\u4e86\u6574\u4e2a\u96c6\u7fa4\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\b\u67e5\u770b\u4e0a\u9762\u7684\u4e00\u4e9b Dashboard : 5 \u62a5\u8b66 grafana 4 \u7248\u672c\u4ee5\u4e0a\u5c31\u652f\u6301\u4e86\u62a5\u8b66\u529f\u80fd\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u5229\u7528 grafana \u4f5c\u4e3a\u76d1\u63a7\u9762\u677f\u66f4\u4e3a\u5b8c\u6574\uff0c\u56e0\u4e3a\u62a5\u8b66\u662f\u76d1\u63a7\u7cfb\u7edf\u4e2d\u5fc5\u4e0d\u53ef\u5c11\u7684\u73af\u8282\uff0c grafana \u652f\u6301\u5f88\u591a\u79cd\u5f62\u5f0f\u7684\u62a5\u8b66\u529f\u80fd\uff0c\u6bd4\u5982 email \u3001 \u9489\u9489 \u3001 slack \u3001 webhook \u7b49\u7b49\uff0c\u6211\u4eec\u8fd9\u91cc\u6765\u6d4b\u8bd5\u4e0b email \u548c \u9489\u9489 \u3002 5-1 email \u62a5\u8b66 \u8981\u542f\u7528 email \u62a5\u8b66\u9700\u8981\u5728\u542f\u52a8\u914d\u7f6e\u6587\u4ef6\u4e2d /etc/grafana/grafan.ini \u5f00\u542f SMTP \u670d\u52a1\uff0c\u6211\u4eec\u8fd9\u91cc\u540c\u6837\u5229\u7528\u4e00\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\u6302\u8f7d\u5230 grafana Pod \u4e2d\uff1a\uff08 grafana-cm.yaml \uff09 apiVersion: v1 kind: ConfigMap metadata: name: grafana-config namespace: kube-ops data: grafana.ini: | [server] root_url = http://<\u4f60grafana\u7684url\u5730\u5740> [smtp] enabled = true host = smtp.gmail.com user = xichao2017@gmail.com password = <\u90ae\u7bb1\u5bc6\u7801> skip_verify = true from_address = xichao2017@gmail.com [alerting] enabled = true execute_alerts = true \u4e0a\u9762\u914d\u7f6e\u4e86\u6211\u7684 gmail \u90ae\u7bb1\uff0c\u5f00\u542f\u62a5\u8b66\u529f\u80fd\uff0c\u5f53\u7136\u6211\u4eec\u8fd8\u5f97\u5c06\u8fd9\u4e2a ConfigMap \u6587\u4ef6\u6302\u8f7d\u5230 Pod \u4e2d\u53bb\uff1a volumeMounts: - mountPath: \"/etc/grafana\" name: config volumes: - name: config configMap: name: grafana-config \u521b\u5efa ConfigMap \u5bf9\u8c61\uff0c\u66f4\u65b0 Deployment \uff1a $ kubectl create -f grafana-cm.yaml $ kubectl apply -f grafana-deploy.yaml \u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u5728 grafana \u7684 ui \u4e2d Alert \u9875\u9762\u6d4b\u8bd5\u90ae\u4ef6\u62a5\u8b66\uff1a \u53d1\u9001\u6d4b\u8bd5\b\u540e\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u5c31\u53ef\u4ee5\u6536\u5230\u6d4b\u8bd5\u62a5\u8b66\u90ae\u4ef6\uff1a 5-2 \u9489\u9489\u62a5\u8b66 \u4e0a\u9762\u6211\u4eec\u4e5f\u8bf4\u4e86 grafana \u4e5f\u662f\u652f\u6301\u9489\u9489\u62a5\u8b66\u7684\uff0c\u5728\u9489\u9489\u7fa4\u91cc\u9762\u6dfb\u52a0\u7fa4\u673a\u5668\u4eba\uff0c\u9009\u62e9\u6700\u540e\u7684\u81ea\u5b9a\u4e49\u673a\u5668\u4eba\uff1a \u6dfb\u52a0\u5b8c\u6210\u540e\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a webhook \u7684\u5730\u5740\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a webhook \u5730\u5740\u6dfb\u52a0\u5230\u4e0a\u9762 grafana web_ui \b \u7684\u62a5\u8b66\u6d4b\u8bd5\u9875\u9762\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5c31\u53ef\u4ee5\u5728\u9489\u9489\u7fa4\u91cc\u9762\u6536\u5230\u62a5\u8b66\u6d4b\u8bd5\u4fe1\u606f\u4e86\uff1a 5-3 \u914d\u7f6e \u76ee\u524d\u53ea\u6709 Graph \u652f\u6301\u62a5\u8b66\u529f\u80fd\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9 Graph \u76f8\u5173\u56fe\u8868\uff0c\u70b9\u51fb\u7f16\u8f91\uff0c\u8fdb\u5165 Graph \u7f16\u8f91\u9875\u9762\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a Alert \u6a21\u5757\uff0c\u5207\u6362\u8fc7\u6765\u521b\u5efa\u62a5\u8b66\uff1a \u7136\u540e\u914d\u7f6e\u76f8\u5173\u53c2\u6570\uff1a Alert \u540d\u79f0\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u3002 \u6267\u884c\u7684\u9891\u7387\uff0c\u8fd9\u91cc\u6211\u9009\u62e9\u6bcf60s\u68c0\u6d4b\u4e00\u6b21\u3002 \u5224\u65ad\u6807\u51c6\uff0c\u9ed8\u8ba4\u662f avg\uff0c\u8fd9\u91cc\u662f\u4e0b\u62c9\u6846\uff0c\u81ea\u5df1\u6309\u9700\u6c42\u9009\u62e9\u3002 query\uff08A,5m,now\uff09\uff0c\u5b57\u6bcdA\u4ee3\u8868\u9009\u62e9\u7684metrics \u4e2d\u8bbe\u7f6e\u7684 sql\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u5176\u5b83\u5728 metrics\u4e2d\u8bbe\u7f6e\u7684\uff0c\u4f46\u8fd9\u91cc\u662f\u5355\u9009\u30025m\u4ee3\u8868\u4ece\u73b0\u5728\u8d77\u5f80\u4e4b\u524d\u7684\u4e94\u5206\u949f\uff0c\u53735m\u4e4b\u524d\u7684\u90a3\u4e2a\u70b9\u4e3a\u65f6\u95f4\u7684\u8d77\u59cb\u70b9\uff0c now \u4e3a\u65f6\u95f4\u7684\u7ed3\u675f\u70b9\uff0c\u6b64\u5916\u8fd9\u91cc\u53ef\u4ee5\u81ea\u5df1\u624b\u52a8\u8f93\u5165\u65f6\u95f4\u3002 \u8bbe\u7f6e\u7684\u9884\u8b66\u4e34\u754c\u70b9\uff0c\u8fd9\u91cc\u624b\u52a8\u8f93\u5165\uff0c\u548c6\u662f\u540c\u6837\u529f\u80fd\uff0c \u53ef\u4ee5\u624b\u52a8\u79fb\u52a8\uff0c\u4e24\u79cd\u64cd\u4f5c\u662f\u7b49\u540c\u7684\u3002 \u7136\u540e\u9700\u8981\u8bbe\u7f6e\u62a5\u8b66\u53d1\u9001\u4fe1\u606f\uff0c\u70b9\u51fb\u4fa7\u8fb9\u7684 Notifications : \u5176\u4e2d Send to \u5c31\u662f\u524d\u9762\u6211\u4eec\u914d\u7f6e\u8fc7\u7684\u53d1\u9001\u90ae\u4ef6\u548c\u9489\u9489\u7684\u62a5\u8b66\u9891\u9053\u7684\u540d\u79f0\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\u9700\u8981\u4fdd\u5b58\u4e0b\u8fd9\u4e2a graph \uff0c\u5426\u5219\u53d1\u9001\u62a5\u8b66\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u7136\u540e\u70b9\u51fb Alert \u533a\u57df\u7684 Test Rule \u53ef\u4ee5\u6765\u6d4b\u8bd5\u62a5\u8b66\u89c4\u5219\uff0c\u7136\u540e\u90ae\u4ef6\u548c\u9489\u9489\u6b63\u5e38\u6765\u8bf4\u5c31\u53ef\u4ee5\u6536\u5230\u62a5\u8b66\u4fe1\u606f\u4e86\u3002 \u90ae\u4ef6\u62a5\u8b66\u4fe1\u606f\uff1a \u9489\u9489\u62a5\u8b66\u4fe1\u606f\uff1a \u5230\u8fd9\u91cc\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528 grafana \u6765\u5c55\u793a Kubernetes \u96c6\u7fa4\u7684\u76d1\u63a7\u56fe\u8868\u4fe1\u606f\u4ee5\u53ca\u62a5\u8b66\u914d\u7f6e\uff0c\u4f46\u662f\u6211\u4eec\u660e\u663e\u53ef\u4ee5\u611f\u89c9\u5230 grafana \u7684\u4f18\u52bf\u5728\u4e8e\u56fe\u8868\u7684\u5c55\u793a\uff0c\u62a5\u8b66\u529f\u80fd\u6709\u70b9\u5f31\uff0c\u6240\u4ee5\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u751f\u4ea7\u73af\u5883\u6211\u4eec\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 grafana \u7684\u62a5\u8b66\u529f\u80fd\uff0c\u66f4\u591a\u7684\u662f\u4f7f\u7528\u529f\u80fd\u66f4\u52a0\u5f3a\u5927\u7684 AlertManager \u3002","title":"\u7b2c\u516b\u8282 Grafana \u5728 Kubernetes \u4e2d\u7684\u4f7f\u7528"},{"location":"chap3/8Adv_K8S_Grafana/#grafana-kubernetes","text":"","title":"\u7b2c\u516b\u8282 Grafana \u5728 Kubernetes \u4e2d\u7684\u4f7f\u7528"},{"location":"chap3/8Adv_K8S_Grafana/#1","text":"grafana \u662f\u4e00\u4e2a\u53ef\u89c6\u5316\u9762\u677f\uff0c\u6709\u7740\u975e\u5e38\u6f02\u4eae\u7684\u56fe\u8868\u548c\u5e03\u5c40\u5c55\u793a\uff0c\u529f\u80fd\u9f50\u5168\u7684\u5ea6\u91cf\u4eea\u8868\u76d8\u548c\u56fe\u5f62\u7f16\u8f91\u5668\uff0c\u652f\u6301 Graphite \u3001 zabbix \u3001 InfluxDB \u3001 Prometheus \u3001 OpenTSDB \u3001 Elasticsearch \u7b49\u4f5c\u4e3a\u6570\u636e\u6e90\uff0c\u6bd4 Prometheus \u81ea\u5e26\u7684\u56fe\u8868\u5c55\u793a\u529f\u80fd\u5f3a\u5927\u592a\u591a\uff0c\u66f4\u52a0\u7075\u6d3b\uff0c\u6709\u4e30\u5bcc\u7684\u63d2\u4ef6\uff0c\u529f\u80fd\u66f4\u52a0\u5f3a\u5927\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06 grafana \u5b89\u88c5\u5230 Kubernetes \u96c6\u7fa4\u4e2d\uff0c\u7b2c\u4e00\u6b65\u540c\u6837\u662f\u53bb\u67e5\u770b grafana \u7684 docker \u955c\u50cf\u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 dockerhub \u4e0a\u53bb\u641c\u7d22\uff0c\u4e5f\u53ef\u4ee5\u5728\u5b98\u7f51\u53bb\u67e5\u770b\u76f8\u5173\u8d44\u6599\uff0c\u955c\u50cf\u5730\u5740\u5982\u4e0b\uff1a https://hub.docker.com/r/grafana/grafana/ \uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ecb\u7ecd\u4e2d\u8fd0\u884c grafana \u5bb9\u5668\u7684\u547d\u4ee4\u975e\u5e38\u7b80\u5355\uff1a $ docker run -d --name=grafana -p 3000:3000 grafana/grafana \u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u662f Changelog \u4e2d v5.1.0 \u7248\u672c\u7684\u66f4\u65b0\u4ecb\u7ecd\uff1a Major restructuring of the container Usage of chown removed File permissions incompatibility with previous versions user id changed from 104 to 472 group id changed from 107 to 472 Runs as the grafana user by default (instead of root) All default volumes removed \u7279\u522b\u9700\u8981\u6ce8\u610f \u7b2c3\u6761 \uff0c userid \u548c groupid \u90fd\u6709\u6240\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u8fd9\u4e2a\u53d8\u5316\u3002\u73b0\u5728\u6211\u4eec\u5c06\u8fd9\u4e2a\u5bb9\u5668\u8f6c\u5316\u6210 Kubernetes \u4e2d\u7684 Pod\uff1a( grafana.yaml ) apiVersion: extensions/v1beta1 kind: Deployment metadata: name: grafana namespace: kube-ops labels: app: grafana spec: revisionHistoryLimit: 10 template: metadata: labels: app: grafana spec: containers: - name: grafana image: grafana/grafana:5.3.4 imagePullPolicy: IfNotPresent ports: - containerPort: 3000 name: grafana env: - name: GF_SECURITY_ADMIN_USER value: admin - name: GF_SECURITY_ADMIN_PASSWORD value: admin321 readinessProbe: failureThreshold: 10 httpGet: path: /api/health port: 3000 scheme: HTTP initialDelaySeconds: 60 periodSeconds: 10 successThreshold: 1 timeoutSeconds: 30 livenessProbe: failureThreshold: 3 httpGet: path: /api/health port: 3000 scheme: HTTP periodSeconds: 10 successThreshold: 1 timeoutSeconds: 1 resources: limits: cpu: 100m memory: 256Mi requests: cpu: 100m memory: 256Mi volumeMounts: - mountPath: /var/lib/grafana subPath: grafana name: storage securityContext: fsGroup: 472 runAsUser: 472 volumes: - name: storage persistentVolumeClaim: claimName: grafana \u6211\u4eec\u4f7f\u7528\u4e86\u6700\u65b0\u7684\u955c\u50cf grafana/grafana:5.3.4 \uff0c\u7136\u540e\u6dfb\u52a0\u4e86\u76d1\u63a7\u68c0\u67e5\u3001\u8d44\u6e90\u58f0\u660e\uff0c \u53e6\u5916\u4e24\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u73af\u5883\u53d8\u91cf GF_SECURITY_ADMIN_USER \u548c GF_SECURITY_ADMIN_PASSWORD \uff0c\u7528\u6765\u914d\u7f6e grafana \u7684\u7ba1\u7406\u5458 \u7528\u6237 \u548c \u5bc6\u7801 \u7684 \u7531\u4e8e grafana \u5c06 dashboard \u3001 \u63d2\u4ef6 \u8fd9\u4e9b\u6570\u636e\u4fdd\u5b58\u5728 /var/lib/grafana \u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\u7684 \uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u5982\u679c\u9700\u8981\u505a\u6570\u636e\u6301\u4e45\u5316\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u9488\u5bf9\u8fd9\u4e2a\u76ee\u5f55\u8fdb\u884c volume \u6302\u8f7d\u58f0\u660e\uff0c \u5176\u4ed6\u7684\u548c\u6211\u4eec\u4e4b\u524d\u7684 Deployment \u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u7531\u4e8e\u4e0a\u9762\u6211\u4eec\u521a\u521a\u63d0\u5230\u7684 Changelog \u4e2d grafana \u7684 userid \u548c groupid \u6709\u6240\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u589e\u52a0\u4e00\u4e2a securityContext \u7684\u58f0\u660e\u6765\u8fdb\u884c\u58f0\u660e\u3002 securityContext: fsGroup: 472 runAsUser: 472 \u5f53\u7136\u5982\u679c\u8981\u4f7f\u7528\u4e00\u4e2a pvc \u5bf9\u8c61\u6765\u6301\u4e45\u5316\u6570\u636e\uff0c\u6211\u4eec\u5c31\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u53ef\u7528\u7684 pv \u4f9b pvc \u7ed1\u5b9a\u4f7f\u7528\uff1a\uff08 grafana-volume.yaml \uff09 \u5f53\u7136\u5982\u679c\u8981\u4f7f\u7528\u4e00\u4e2a pvc \u5bf9\u8c61\u6765\u6301\u4e45\u5316\u6570\u636e\uff0c\u6211\u4eec\u5c31\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u53ef\u7528\u7684 pv \u4f9b pvc \u7ed1\u5b9a\u4f7f\u7528\uff1a\uff08 grafana-volume.yaml \uff09 apiVersion: v1 kind: PersistentVolume metadata: name: grafana spec: capacity: storage: 1Gi accessModes: - ReadWriteOnce persistentVolumeReclaimPolicy: Recycle nfs: server: 10.151.30.57 path: /data/k8s --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: grafana namespace: kube-ops spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5916\u66b4\u9732 grafana \u8fd9\u4e2a\u670d\u52a1\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c\u5f53\u7136\u7528 NodePort \u6216\u8005\u518d\u5efa\u7acb\u4e00\u4e2a ingress \u5bf9\u8c61\u90fd\u662f\u53ef\u884c\u7684\uff1a( grafana-svc.yaml ) apiVersion: v1 kind: Service metadata: name: grafana namespace: kube-ops labels: app: grafana spec: type: NodePort ports: - port: 3000 selector: app: grafana \u73b0\u5728\u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl create -f grafana-volume.yaml persistentvolume \"grafana\" created persistentvolumeclaim \"grafana\" created $ kubectl create -f grafana-deploy.yaml deployment.extensions \"grafana\" created $ kubectl create -f grafana-svc.yaml service \"grafana\" created \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b grafana \u5bf9\u5e94\u7684 Pod \u662f\u5426\u6b63\u5e38 $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE grafana-5f7b965b55-wxvvk 0/1 CrashLoopBackOff 1 22s \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u7684\u72b6\u6001\u662f CrashLoopBackOff \uff0c\u5e76\u6ca1\u6709\u6b63\u5e38\u542f\u52a8\uff0c\u6211\u4eec\u67e5\u770b\u4e0b\u8fd9\u4e2a Pod \u7684\u65e5\u5fd7\uff1a $ kubectl logs -f grafana-5f7b965b55-wxvvk -n kube-ops GF_PATHS_DATA='/var/lib/grafana' is not writable. You may have issues with file permissions, more information here: http://docs.grafana.org/installation/docker/#migration-from-a-previous-version-of-the-docker-container-to-5-1-or-later mkdir: cannot create directory '/var/lib/grafana/plugins': Permission denied \u4e0a\u9762\u7684\u9519\u8bef\u662f\u57285.1\u7248\u672c\u4e4b\u540e\u624d\u4f1a\u51fa\u73b0\u7684\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u7684\u7248\u672c\u6765\u89c4\u907f\u8fd9\u4e2a\u95ee\u9898\u3002 \u53ef\u4ee5\u770b\u5230\u662f\u65e5\u5fd7\u4e2d\u9519\u8bef\u5f88\u660e\u663e\u5c31\u662f /var/lib/grafana \u76ee\u5f55\u7684\u6743\u9650\u95ee\u9898\uff0c\u8fd9\u8fd8\u662f\u56e0\u4e3a 5.1\u7248\u672c \u540e groupid \u66f4\u6539\u4e86\u5f15\u8d77\u7684\u95ee\u9898\uff0c\u6211\u4eec\u8fd9\u91cc\u589e\u52a0\u4e86 securityContext \uff0c\u4f46\u662f\u6211\u4eec\u5c06\u76ee\u5f55 /var/lib/grafana \u6302\u8f7d\u5230 pvc \u8fd9\u8fb9\u540e\u76ee\u5f55\u7684\u62e5\u6709\u8005\u5e76\u4e0d\u662f\u4e0a\u9762\u7684 grafana(472) \u8fd9\u4e2a\u7528\u6237\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u66f4\u6539\u4e0b\u8fd9\u4e2a\u76ee\u5f55\u7684\u6240\u5c5e\u7528\u6237\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a Job \u4efb\u52a1 \u53bb\u66f4\u6539\u4e0b\u8be5\u76ee\u5f55\u7684\u6240\u5c5e\u7528\u6237\uff1a\uff08 grafana-chown-job.yaml \uff09 apiVersion: batch/v1 kind: Job metadata: name: grafana-chown namespace: kube-ops spec: template: spec: restartPolicy: Never containers: - name: grafana-chown command: [\"chown\", \"-R\", \"472:472\", \"/var/lib/grafana\"] image: busybox imagePullPolicy: IfNotPresent volumeMounts: - name: storage subPath: grafana mountPath: /var/lib/grafana volumes: - name: storage persistentVolumeClaim: claimName: grafana \u4e0a\u9762\u6211\u4eec\u5229\u7528\u4e00\u4e2a busybox \u955c\u50cf\u5c06 /var/lib/grafana \u76ee\u5f55\u66f4\u6539\u6210\u4e86 472 \u8fd9\u4e2a user \u548c group \uff0c\u4e0d\u8fc7\u8fd8\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e0b\u9762\u7684 volumeMounts \u548c volumes \u9700\u8981\u548c\u4e0a\u9762\u7684 Deployment \u5bf9\u5e94\u4e0a\u3002 \u73b0\u5728\u6211\u4eec\u5220\u9664\u4e4b\u524d\u521b\u5efa\u7684 Deployment \u5bf9\u8c61\uff0c\u91cd\u65b0\u521b\u5efa\uff1a $ kubectl delete -f grafana-deploy.yaml deployment.extensions \"grafana\" deleted $ kubectl create -f grafana-deploy.yaml deployment.extensions \"grafana\" created $ kubectl create -f grafana-chown-job.yaml job.batch \"grafana-chown\" created \u91cd\u65b0\u6267\u884c\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0b\u4e0a\u9762\u7684\u521b\u5efa\u7684\u8d44\u6e90\u5bf9\u8c61\u662f\u5426\u6b63\u786e\u4e86\uff1a $ kubectl get pod -n kube-ops NAME READY STATUS RESTARTS AGE grafana-79477fbb7c-2mb84 1/1 Running 0 2m grafana-chown-k8zt7 0/1 Completed 0 2m \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a\u72b6\u6001\u4e3a Completed \u7684 Pod \uff0c \u8fd9\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u7528\u6765\u66f4\u6539 grafana \u76ee\u5f55\u6743\u9650\u7684 Pod \uff0c\u662f\u4e00\u4e2a Job \u4efb\u52a1\uff0c\u6240\u4ee5\u6267\u884c\u6210\u529f\u540e\u5c31\u9000\u51fa\u4e86\uff0c\u72b6\u6001\u53d8\u6210\u4e86 Completed \uff0c\u800c\u4e0a\u9762\u7684 grafana \u7684 Pod \u4e5f\u5df2\u7ecf\u662f Running \u72b6\u6001\u4e86\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0b\u8be5 Pod \u7684\u65e5\u5fd7\u786e\u8ba4\u4e0b\uff1a $ kubectl logs -f grafana-79477fbb7c-2mb84 -n kube-ops t=2018-11-14T19:57:31+0000 lvl=info msg=\"Starting Grafana\" logger=server version=5.3.4 commit=69630b9 compiled=2018-11-13T12:19:12+0000 ...... logger=settings var=\"GF_SECURITY_ADMIN_USER=admin\" t=2018-11-14T19:57:31+0000 lvl=info msg=\"Config overridden from Environment variable\" ...... t=2018-11-14T19:57:32+0000 lvl=info msg=\"Initializing Stream Manager\" t=2018-11-14T19:57:32+0000 lvl=info msg=\"HTTP Server Listen\" logger=http.server address=0.0.0.0:3000 protocol=http subUrl= socket= \u770b\u5230\u4e0a\u9762\u7684\u65e5\u5fd7\u4fe1\u606f\u5c31\u8bc1\u660e\u6211\u4eec\u7684 grafana \u7684 Pod \u5df2\u7ecf\u6b63\u5e38\u542f\u52a8\u8d77\u6765\u4e86\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u67e5\u770b Service \u5bf9\u8c61\uff1a $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE grafana NodePort 10.97.46.27 <none> 3000:30105/TCP 1h \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528 http://<\u4efb\u610f\u8282\u70b9IP:30105> \u6765\u8bbf\u95ee grafana \u8fd9\u4e2a\u670d\u52a1\u4e86\uff1a \u7531\u4e8e\u4e0a\u9762\u6211\u4eec\u914d\u7f6e\u4e86\u7ba1\u7406\u5458\u7684\uff0c\u6240\u4ee5\u7b2c\u4e00\u6b21\u6253\u5f00\u7684\u65f6\u5019\u4f1a\u8df3\u8f6c\u5230\u767b\u5f55\u754c\u9762\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7528\u4e0a\u9762\u6211\u4eec\u914d\u7f6e\u7684\u4e24\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u503c\u6765\u8fdb\u884c\u767b\u5f55\u4e86\uff0c\u767b\u5f55\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u8fdb\u5165\u5230\u4e0b\u9762 Grafana \u7684\u9996\u9875\uff1a \u914d\u7f6e \u5728\u4e0a\u9762\u7684\u9996\u9875\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u5b89\u88c5\u4e86 Grafana \uff0c\u63a5\u4e0b\u6765\u70b9\u51fb Add data source \u8fdb\u5165\u6dfb\u52a0\u6570\u636e\u6e90\u754c\u9762\u3002","title":"1 \u5b89\u88c5"},{"location":"chap3/8Adv_K8S_Grafana/#2","text":"\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u914d\u7f6e\u7684\u6570\u636e\u6e90\u662f Prometheus \uff0c\b\u6240\u4ee5\u9009\u62e9\u8fd9\u4e2a Type \u5373\u53ef\uff0c\u7ed9\u6539\u6570\u636e\u6e90\u6dfb\u52a0\u4e00\u4e2a name\uff1aprometheus-ds \uff0c\u6700\u4e3b\u8981\u7684\u662f\u4e0b\u9762 HTTP \u533a\u57df\u662f\u914d\u7f6e\u6570\u636e\u6e90\u7684\u8bbf\u95ee\u6a21\u5f0f\u3002 \u8bbf\u95ee\u6a21\u5f0f\u662f\u7528\u6765\u63a7\u5236\u5982\u4f55\u5904\u7406\u5bf9\u6570\u636e\u6e90\u7684\u8bf7\u6c42\u7684\uff1a \u670d\u52a1\u5668( Server )\u8bbf\u95ee\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09\uff1a\u6240\u6709\u8bf7\u6c42\u90fd\u5c06\u4ece\u6d4f\u89c8\u5668\u53d1\u9001\u5230 Grafana \u540e\u7aef\u7684\u670d\u52a1\u5668\uff0c\u540e\u8005\u53c8\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u6570\u636e\u6e90\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\b\u907f\u514d\u4e00\u4e9b\u8de8\u57df\u95ee\u9898\uff0c\u5176\u5b9e\u5c31\u662f\u5728 Grafana \u540e\u7aef\u505a\u4e86\u4e00\u6b21\u8f6c\u53d1\uff0c\u9700\u8981\u4ece Grafana \u540e\u7aef\u670d\u52a1\u5668\u8bbf\u95ee\u8be5 URL \u3002 \u6d4f\u89c8\u5668( Browser )\u8bbf\u95ee\u6a21\u5f0f\uff1a\u6240\u6709\u8bf7\u6c42\u90fd\u5c06\u4ece\u6d4f\u89c8\u5668\u76f4\u63a5\u53d1\u9001\u5230\u6570\u636e\u6e90\uff0c\u4f46\u662f\u6709\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u8de8\u57df\u7684\u9650\u5236\uff0c\u4f7f\u7528\u6b64\u8bbf\u95ee\u6a21\u5f0f\uff0c\u9700\u8981\u4ece\u6d4f\u89c8\u5668\u76f4\u63a5\u8bbf\u95ee\u8be5 URL\u3002 \u7531\u4e8e\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9 Prometheus \u901a\u8fc7 NodePort \u7684\u65b9\u5f0f\u7684\u5bf9\u5916\u66b4\u9732\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u662f\u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee\u6a21\u5f0f\u76f4\u63a5\u8bbf\u95ee Prometheus \u7684\u5916\u7f51\u5730\u5740\uff0c \u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u663e\u7136\u4e0d\u662f\u6700\u597d\u7684\uff0c\u76f8\u5f53\u4e8e\u8d70\u7684\u662f\u5916\u7f51 . \u800c\u6211\u4eec\u8fd9\u91cc Prometheus \u548c Grafana \u90fd\u5904\u4e8e kube-ops \u8fd9\u540c\u4e00\u4e2a\b namespace \u4e0b\u9762\uff0c \u662f\u5728\u96c6\u7fa4\u5185\u90e8\u76f4\u63a5\b\u901a\u8fc7 DNS \u7684\u5f62\u5f0f\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4e86\uff0c\u800c\u4e14\u8fd8\u90fd\u662f\u8d70\u7684\u5185\u7f51\u6d41\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u7528\u670d\u52a1\u5668\u8bbf\u95ee\u6a21\u5f0f\u663e\u7136\u66f4\u597d \uff0c\u6570\u636e\u6e90\u5730\u5740\uff1a http://prometheus:9090 \uff08\u56e0\u4e3a\u5728\u540c\u4e00\u4e2a namespace \u4e0b\u9762\u6240\u4ee5\u76f4\u63a5\u7528\b Service \b\u540d\u4e5f\u53ef\u4ee5 \uff0c \u7136\u540e\u5176\u4ed6\u7684\u914d\u7f6e\u4fe1\u606f\u5c31\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4e86\uff0c\u6bd4\u5982 Auth \u8ba4\u8bc1 \uff0c\u6211\u4eec\u8fd9\u91cc\u6ca1\u6709\uff0c\u6240\u4ee5\u8df3\u8fc7\u5373\u53ef\uff0c\u70b9\u51fb\u6700\u4e0b\u65b9\u7684 Save & Test \u63d0\u793a\u6210\u529f\u8bc1\u660e\u6211\u4eec\u7684\u6570\u636e\u6e90\u914d\u7f6e\u6b63\u786e\uff1a \u6570\u636e\u6e90\u6dfb\u52a0\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u6765\u6dfb\u52a0 Dashboard \u4e86\u3002","title":"2 \u6570\u636e\u6e90"},{"location":"chap3/8Adv_K8S_Grafana/#3-dashboard","text":"\u540c\u6837\uff0c\u5207\u6362\u5230\u4e3b\u9875\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u624b\u52a8\b\u65b0\u5efa\u4e00\u4e2a Dashboard \uff0c\u9664\u6b64\u4e4b\u5916\uff0c grafana \u7684\u5b98\u65b9\u7f51\u7ad9\u4e0a\u8fd8\u6709\u5f88\u591a\u516c\u5171\u7684 \bDashboard \u53ef\u4ee5\u4f9b\u6211\u4eec\u4f7f\u7528\uff0c\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528 Kubernetes cluster monitoring (via Prometheus) \u8fd9\u4e2a Dashboard \u6765\u5c55\u793a Kubernetes \u96c6\u7fa4\u7684\u76d1\u63a7\u4fe1\u606f\uff0c\u5728\u5de6\u4fa7\u4fa7\u8fb9\u680f Create \u4e2d\u70b9\u51fb import \u5bfc\u5165\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7f16\u53f7 162 \u7684 dashboard \u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u7136\u540e\u8fd9\u91cc\u91cd\u65b0\u4e0a\u4f20\u5373\u53ef\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e0a\u9762\u7684\u6587\u672c\u6846\u4e2d\u76f4\u63a5\u8f93\u5165162\u7f16\u53f7\u56de\u8f66\u5373\u53ef\uff0c\u5bfc\u5165\u8fd9\u4e2a dashboard \uff1a \u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u6267\u884c\u4e0a\u9762\u7684 import \u4e4b\u524d\u8981\u8bb0\u5f97\u9009\u62e9\u6211\u4eec\u7684 prometheus-ds \u8fd9\u4e2a\u540d\u5b57\u7684\u6570\u636e\u6e90\uff0c\u6267\u884c import \u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u5230 dashboard \u9875\u9762\uff1a \b\u6211\u4eec\u53ef\u4ee5\u770b\u5230 dashboard \u9875\u9762\u4e0a\u51fa\u73b0\u4e86\u5f88\u591a\u6f02\u4eae\u7684\u56fe\u8868\uff0c\u4f46\u662f\u770b\u4e0a\u53bb\u6570\u636e\u4e0d\u6b63\u5e38\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a dashboard \u91cc\u9762\u9700\u8981\u7684\u6570\u636e\u6307\u6807\u540d\u79f0\u548c\u6211\u4eec\b Prometheus \u91cc\u9762\u91c7\u96c6\u5230\u7684\u6570\u636e\u6307\u6807\u4e0d\u4e00\u81f4\u9020\u6210\u7684\uff0c\u6bd4\u5982\uff0c \u7b2c\u4e00\u4e2a Cluster memory usage (\u96c6\u7fa4\u5185\u5b58\u4f7f\u7528\u60c5\u51b5) \uff0c\u6211\u4eec\u53ef\u4ee5\u70b9\u51fb\u6807\u9898 -> Edit \uff0c\u8fdb\u5165\u7f16\u8f91\u8fd9\u4e2a\u56fe\u8868\u7684\u7f16\u8f91\u9875\u9762\uff1a \u8fdb\u5165\u7f16\u8f91\u9875\u9762\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u56fe\u8868\u7684\u67e5\u8be2\u8bed\u53e5\uff1a (sum(node_memory_MemTotal) - sum(node_memory_MemFree+node_memory_Buffers+node_memory_Cached) ) / sum(node_memory_MemTotal) * 100 \u8fd9\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u5728 Prometheus \u91cc\u9762\u67e5\u8be2\u7684 promQL \u8bed\u53e5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u67e5\u8be2\u8bed\u53e5\u590d\u5236\u5230 Prometheus \u7684 Graph \u9875\u9762\u8fdb\u884c\u67e5\u8be2\uff0c\u5176\u5b9e\u53ef\u4ee5\u9884\u60f3\u5230\u662f\u6ca1\u6709\u5bf9\u5e94\u7684\u6570\u636e\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7528 node_exporter \u91c7\u96c6\u5230\u7684\u6570\u636e\u6307\u6807\u4e0d\u662f node_memory_MemTotal \u5173\u952e\u5b57\uff0c\u800c\u662f node_memory_MemTotal_bytes \uff0c\u5c06\u4e0a\u9762\u7684 promQL \u8bed\u53e5\u505a\u76f8\u5e94\u7684\u66f4\u6539\uff1a (sum(node_memory_MemTotal_bytes) - sum(node_memory_MemFree_bytes + node_memory_Buffers_bytes+node_memory_Cached_bytes)) / sum(node_memory_MemTotal_bytes) * 100 \u8fd9\u4e2a\u8bed\u53e5\u7684\u610f\u601d\u5c31\u662f(\u6574\u4e2a\u96c6\u7fa4\u7684\u5185\u5b58-(\u6574\u4e2a\u96c6\u7fa4\b\u5269\u4f59\u7684\u5185\u5b58\u4ee5\u53caBuffer\u548cCached))/\u6574\u4e2a\u96c6\u7fa4\u7684\u5185\u5b58\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u603b\u7684\u96c6\u7fa4\u5185\u5b58\u4f7f\u7528\u767e\u5206\u6bd4\u3002 \u5c06\u4e0a\u9762 grafana \u7684promQL\u8bed\u53e5\u66ff\u6362\u6389\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u56fe\u8868\u6b63\u5e38\u4e86\uff1a \u540c\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u6539\b\u540e\u9762\u7684 CPU \u548c FileSystem \u7684\u4f7f\u7528\u7387\uff1a \u540c\u6837\u4e0b\u9762\u7684 Pod CPU Usage \u7528\u6765\u5c55\u793a Pod CPU \u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u5bf9\u5e94\u7684 promQL \u8bed\u53e5\u5982\u4e0b\uff0c\u6839\u636e pod_name \u6765\u8fdb\u884c\u7edf\u8ba1\uff1a sum by (pod_name)(rate(container_cpu_usage_seconds_total{image!=\"\", pod_name!=\"\"}[1m])) \u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\u66ff\u6362 grafana \u4e2d\u7684 dashboard \u56fe\u8868\u4e2d\u7684\u67e5\u8be2\u8bed\u53e5\uff1a \u5176\u4ed6\u7684\u4e5f\u6309\u7167\u6211\u4eec\u7684\u5b9e\u9645\u9700\u6c42\u91cd\u65b0\u7f16\u8f91\u4e0b\b\u5c31\u53ef\u4ee5\uff0c\u4e0b\u56fe\u662f\u6700\u7ec8\u6574\u4e2a dashboard \u7684\u6548\u679c\u56fe\uff1a \u6700\u540e\u8981\u8bb0\u5f97\u4fdd\u5b58\u8fd9\u4e2a dashboard \uff0c\u4e0b\u9762\u7684\u94fe\u63a5\u662f\u6211\u4fee\u6539\u540e\u7684 dashboard json \u6587\u4ef6\u5730\u5740\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u4e0b\u6765\u5bfc\u5165\u5230 grafana \u5f53\u4e2d\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u6539\uff1a k8s-cluster-grafana-dashboard.json \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u524d\u5f80 grafana dashboard \u7684\u9875\u9762\u53bb\u641c\u7d22\u5176\u4ed6\u7684\u5173\u4e8e Kubernetes \u7684\u76d1\u63a7\u9875\u9762\uff0c\u5730\u5740\uff1a https://grafana.com/dashboards \uff0c\u6bd4\u5982id \u4e3a 747 \u548c 741 \u7684\u8fd9\u4e24\u4e2a dashboard \u3002","title":"3 Dashboard"},{"location":"chap3/8Adv_K8S_Grafana/#4","text":"\u4e0a\u9762\u662f\u6211\u4eec\u6700\u5e38\u7528\u7684 grafana \u5f53\u4e2d\u7684 dashboard \u7684\u529f\u80fd\u7684\u4f7f\u7528\uff0c\u7136\u540e\u6211\u4eec\u4e5f\u53ef\u4ee5\u6765\u8fdb\u884c\u4e00\u4e9b\u5176\u4ed6\u7684\u7cfb\u7edf\u7ba1\u7406\uff0c\u6bd4\u5982\u6dfb\u52a0\u7528\u6237\uff0c\u4e3a\u7528\u6237\u6dfb\u52a0\u6743\u9650\u7b49\u7b49\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b89\u88c5\u4e00\u4e9b\u5176\u4ed6\u63d2\u4ef6\uff0c\u6bd4\u5982 grafana \u5c31\u6709\u4e00\u4e2a\u4e13\u95e8\u9488\u5bf9 Kubernetes \u96c6\u7fa4\u76d1\u63a7\u7684\u63d2\u4ef6\uff1a grafana-kubernetes-app \u8981\u5b89\u88c5\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u9700\u8981\u5230 grafana \u7684 Pod \u91cc\u9762\u53bb\u6267\u884c\u5b89\u88c5\u547d\u4ee4\uff1a $ kubectl get pods -n kube-ops NAME READY STATUS RESTARTS AGE grafana-79477fbb7c-v4prs 1/1 Running 0 23m # kubectl exec -it pod-name bin/bash -n kube-ops $ kubectl exec -it grafana-79477fbb7c-v4prs /bin/bash -n kube-ops grafana@grafana-79477fbb7c-v4prs:/usr/share/grafana$ grafana-cli plugins install grafana-kubernetes-app installing grafana-kubernetes-app @ 1.0.1 from url: https://grafana.com/api/plugins/grafana-kubernetes-app/versions/1.0.1/download into: /var/lib/grafana/plugins \u2714 Installed grafana-kubernetes-app successfully Restart grafana after installing plugins . <service grafana-server restart> grafana@grafana-79477fbb7c-v4prs:/usr/share/grafana$ \u5b89\u88c5\u5b8c\u6210\u540e\u9700\u8981\u91cd\u542f grafana \u624d\u4f1a\u751f\u6548\uff0c\u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u5220\u9664 Pod \uff0c\u91cd\u5efa\u5373\u53ef\uff0c\u7136\u540e\u56de\u5230 grafana \u9875\u9762\u4e2d\uff0c\u5207\u6362\u5230 plugins \u9875\u9762\u53ef\u4ee5\u53d1\u73b0\u4e0b\u9762\u591a\u4e86\u4e00\u4e2a Kubernetes \u7684\u63d2\u4ef6\uff0c\u70b9\u51fb\u8fdb\u6765\u542f\u7528\u5373\u53ef\uff0c\u7136\u540e\u70b9\u51fb Next up\b \u65c1\u8fb9\u7684\u94fe\u63a5\u914d\u7f6e\u96c6\u7fa4 \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684 Kubernetes \u96c6\u7fa4\uff0c \u8fd9\u91cc\u9700\u8981\u586b\u5199\u96c6\u7fa4\u7684\u8bbf\u95ee\u5730\u5740\uff1a https://kubernetes.default \uff0c\u7136\u540e\u6bd4\u8f83\u91cd\u8981\u7684\u662f\u96c6\u7fa4\u8bbf\u95ee\u7684\u8bc1\u4e66\uff0c\u52fe\u9009\u4e0a TLS Client Auth \u548c With CA Cert \u8fd9\u4e24\u9879 \u3002 \u96c6\u7fa4\u8bbf\u95ee\u7684\u8bc1\u4e66\u6587\u4ef6\uff0c\u7528\u6211\u4eec\u8bbf\u95ee\u96c6\u7fa4\u7684 kubectl \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u8bc1\u4e66\u4fe1\u606f (~/.kube/config) \u5373\u53ef\uff0c\u5176\u4e2d\u5c5e\u6027 certificate-authority-data \u3001 client-certificate-data \u3001 client-key-data \u5c31\u5bf9\u5e94\u8fd9 CA \u8bc1\u4e66 \u3001 Client \u8bc1\u4e66 \u3001 Client \u79c1\u94a5 \uff0c\u4e0d\u8fc7 config \u6587\u4ef6\u91cc\u9762\u7684\u5185\u5bb9\u662f base64 \u7f16\u7801\u8fc7\u540e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u586b\u5199\u7684\u65f6\u5019\u8981\u505a base64 \u89e3\u7801\u3002 \u53e6\u5916\u9700\u8981\u5c06\u89e3\u7801\u8fc7\u540e\u7684\\n\u6362\u6210\u6362\u884c\u7b26\uff0c\u4e0d\u7136\u8ba4\u8bc1\u4f1a\u5931\u8d25\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u70b9\u51fb Deploy \uff0c\u7136\u540e\u70b9\u51fbSave\uff0c\u5c31\u53ef\u4ee5\b\u83b7\u53d6\u5230\u96c6\u7fa4\u7684\u76d1\u63a7\u8d44\u6e90\u4fe1\u606f\u4e86\u3002 \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u5c55\u793a\u4e86\u6574\u4e2a\u96c6\u7fa4\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\b\u67e5\u770b\u4e0a\u9762\u7684\u4e00\u4e9b Dashboard :","title":"4 \u63d2\u4ef6"},{"location":"chap3/8Adv_K8S_Grafana/#5","text":"grafana 4 \u7248\u672c\u4ee5\u4e0a\u5c31\u652f\u6301\u4e86\u62a5\u8b66\u529f\u80fd\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u5229\u7528 grafana \u4f5c\u4e3a\u76d1\u63a7\u9762\u677f\u66f4\u4e3a\u5b8c\u6574\uff0c\u56e0\u4e3a\u62a5\u8b66\u662f\u76d1\u63a7\u7cfb\u7edf\u4e2d\u5fc5\u4e0d\u53ef\u5c11\u7684\u73af\u8282\uff0c grafana \u652f\u6301\u5f88\u591a\u79cd\u5f62\u5f0f\u7684\u62a5\u8b66\u529f\u80fd\uff0c\u6bd4\u5982 email \u3001 \u9489\u9489 \u3001 slack \u3001 webhook \u7b49\u7b49\uff0c\u6211\u4eec\u8fd9\u91cc\u6765\u6d4b\u8bd5\u4e0b email \u548c \u9489\u9489 \u3002","title":"5 \u62a5\u8b66"},{"location":"chap3/8Adv_K8S_Grafana/#5-1-email","text":"\u8981\u542f\u7528 email \u62a5\u8b66\u9700\u8981\u5728\u542f\u52a8\u914d\u7f6e\u6587\u4ef6\u4e2d /etc/grafana/grafan.ini \u5f00\u542f SMTP \u670d\u52a1\uff0c\u6211\u4eec\u8fd9\u91cc\u540c\u6837\u5229\u7528\u4e00\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\u6302\u8f7d\u5230 grafana Pod \u4e2d\uff1a\uff08 grafana-cm.yaml \uff09 apiVersion: v1 kind: ConfigMap metadata: name: grafana-config namespace: kube-ops data: grafana.ini: | [server] root_url = http://<\u4f60grafana\u7684url\u5730\u5740> [smtp] enabled = true host = smtp.gmail.com user = xichao2017@gmail.com password = <\u90ae\u7bb1\u5bc6\u7801> skip_verify = true from_address = xichao2017@gmail.com [alerting] enabled = true execute_alerts = true \u4e0a\u9762\u914d\u7f6e\u4e86\u6211\u7684 gmail \u90ae\u7bb1\uff0c\u5f00\u542f\u62a5\u8b66\u529f\u80fd\uff0c\u5f53\u7136\u6211\u4eec\u8fd8\u5f97\u5c06\u8fd9\u4e2a ConfigMap \u6587\u4ef6\u6302\u8f7d\u5230 Pod \u4e2d\u53bb\uff1a volumeMounts: - mountPath: \"/etc/grafana\" name: config volumes: - name: config configMap: name: grafana-config \u521b\u5efa ConfigMap \u5bf9\u8c61\uff0c\u66f4\u65b0 Deployment \uff1a $ kubectl create -f grafana-cm.yaml $ kubectl apply -f grafana-deploy.yaml \u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u5728 grafana \u7684 ui \u4e2d Alert \u9875\u9762\u6d4b\u8bd5\u90ae\u4ef6\u62a5\u8b66\uff1a \u53d1\u9001\u6d4b\u8bd5\b\u540e\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u5c31\u53ef\u4ee5\u6536\u5230\u6d4b\u8bd5\u62a5\u8b66\u90ae\u4ef6\uff1a","title":"5-1 email \u62a5\u8b66"},{"location":"chap3/8Adv_K8S_Grafana/#5-2","text":"\u4e0a\u9762\u6211\u4eec\u4e5f\u8bf4\u4e86 grafana \u4e5f\u662f\u652f\u6301\u9489\u9489\u62a5\u8b66\u7684\uff0c\u5728\u9489\u9489\u7fa4\u91cc\u9762\u6dfb\u52a0\u7fa4\u673a\u5668\u4eba\uff0c\u9009\u62e9\u6700\u540e\u7684\u81ea\u5b9a\u4e49\u673a\u5668\u4eba\uff1a \u6dfb\u52a0\u5b8c\u6210\u540e\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a webhook \u7684\u5730\u5740\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a webhook \u5730\u5740\u6dfb\u52a0\u5230\u4e0a\u9762 grafana web_ui \b \u7684\u62a5\u8b66\u6d4b\u8bd5\u9875\u9762\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5c31\u53ef\u4ee5\u5728\u9489\u9489\u7fa4\u91cc\u9762\u6536\u5230\u62a5\u8b66\u6d4b\u8bd5\u4fe1\u606f\u4e86\uff1a","title":"5-2 \u9489\u9489\u62a5\u8b66"},{"location":"chap3/8Adv_K8S_Grafana/#5-3","text":"\u76ee\u524d\u53ea\u6709 Graph \u652f\u6301\u62a5\u8b66\u529f\u80fd\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9 Graph \u76f8\u5173\u56fe\u8868\uff0c\u70b9\u51fb\u7f16\u8f91\uff0c\u8fdb\u5165 Graph \u7f16\u8f91\u9875\u9762\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a Alert \u6a21\u5757\uff0c\u5207\u6362\u8fc7\u6765\u521b\u5efa\u62a5\u8b66\uff1a \u7136\u540e\u914d\u7f6e\u76f8\u5173\u53c2\u6570\uff1a Alert \u540d\u79f0\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u3002 \u6267\u884c\u7684\u9891\u7387\uff0c\u8fd9\u91cc\u6211\u9009\u62e9\u6bcf60s\u68c0\u6d4b\u4e00\u6b21\u3002 \u5224\u65ad\u6807\u51c6\uff0c\u9ed8\u8ba4\u662f avg\uff0c\u8fd9\u91cc\u662f\u4e0b\u62c9\u6846\uff0c\u81ea\u5df1\u6309\u9700\u6c42\u9009\u62e9\u3002 query\uff08A,5m,now\uff09\uff0c\u5b57\u6bcdA\u4ee3\u8868\u9009\u62e9\u7684metrics \u4e2d\u8bbe\u7f6e\u7684 sql\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u5176\u5b83\u5728 metrics\u4e2d\u8bbe\u7f6e\u7684\uff0c\u4f46\u8fd9\u91cc\u662f\u5355\u9009\u30025m\u4ee3\u8868\u4ece\u73b0\u5728\u8d77\u5f80\u4e4b\u524d\u7684\u4e94\u5206\u949f\uff0c\u53735m\u4e4b\u524d\u7684\u90a3\u4e2a\u70b9\u4e3a\u65f6\u95f4\u7684\u8d77\u59cb\u70b9\uff0c now \u4e3a\u65f6\u95f4\u7684\u7ed3\u675f\u70b9\uff0c\u6b64\u5916\u8fd9\u91cc\u53ef\u4ee5\u81ea\u5df1\u624b\u52a8\u8f93\u5165\u65f6\u95f4\u3002 \u8bbe\u7f6e\u7684\u9884\u8b66\u4e34\u754c\u70b9\uff0c\u8fd9\u91cc\u624b\u52a8\u8f93\u5165\uff0c\u548c6\u662f\u540c\u6837\u529f\u80fd\uff0c \u53ef\u4ee5\u624b\u52a8\u79fb\u52a8\uff0c\u4e24\u79cd\u64cd\u4f5c\u662f\u7b49\u540c\u7684\u3002 \u7136\u540e\u9700\u8981\u8bbe\u7f6e\u62a5\u8b66\u53d1\u9001\u4fe1\u606f\uff0c\u70b9\u51fb\u4fa7\u8fb9\u7684 Notifications : \u5176\u4e2d Send to \u5c31\u662f\u524d\u9762\u6211\u4eec\u914d\u7f6e\u8fc7\u7684\u53d1\u9001\u90ae\u4ef6\u548c\u9489\u9489\u7684\u62a5\u8b66\u9891\u9053\u7684\u540d\u79f0\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\u9700\u8981\u4fdd\u5b58\u4e0b\u8fd9\u4e2a graph \uff0c\u5426\u5219\u53d1\u9001\u62a5\u8b66\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u7136\u540e\u70b9\u51fb Alert \u533a\u57df\u7684 Test Rule \u53ef\u4ee5\u6765\u6d4b\u8bd5\u62a5\u8b66\u89c4\u5219\uff0c\u7136\u540e\u90ae\u4ef6\u548c\u9489\u9489\u6b63\u5e38\u6765\u8bf4\u5c31\u53ef\u4ee5\u6536\u5230\u62a5\u8b66\u4fe1\u606f\u4e86\u3002 \u90ae\u4ef6\u62a5\u8b66\u4fe1\u606f\uff1a \u9489\u9489\u62a5\u8b66\u4fe1\u606f\uff1a \u5230\u8fd9\u91cc\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528 grafana \u6765\u5c55\u793a Kubernetes \u96c6\u7fa4\u7684\u76d1\u63a7\u56fe\u8868\u4fe1\u606f\u4ee5\u53ca\u62a5\u8b66\u914d\u7f6e\uff0c\u4f46\u662f\u6211\u4eec\u660e\u663e\u53ef\u4ee5\u611f\u89c9\u5230 grafana \u7684\u4f18\u52bf\u5728\u4e8e\u56fe\u8868\u7684\u5c55\u793a\uff0c\u62a5\u8b66\u529f\u80fd\u6709\u70b9\u5f31\uff0c\u6240\u4ee5\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u751f\u4ea7\u73af\u5883\u6211\u4eec\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 grafana \u7684\u62a5\u8b66\u529f\u80fd\uff0c\u66f4\u591a\u7684\u662f\u4f7f\u7528\u529f\u80fd\u66f4\u52a0\u5f3a\u5927\u7684 AlertManager \u3002","title":"5-3 \u914d\u7f6e"},{"location":"chap4/11Adv_Prometheus_Operator/","text":"\u7b2c\u4e00\u8282 Prometheus Operator \u521d\u4f53\u9a8c \u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u5b66\u4e60\u4e86\u7528\u81ea\u5b9a\u4e49\u7684\u65b9\u5f0f\u6765\u5bf9 Kubernetes \u96c6\u7fa4\u8fdb\u884c\u76d1\u63a7\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u4e00\u4e9b\u7f3a\u9677\uff0c\u6bd4\u5982 Prometheus \u3001 AlertManager \u8fd9\u4e9b\u7ec4\u4ef6\u670d\u52a1\u672c\u8eab\u7684\u9ad8\u53ef\u7528\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u5b8c\u5168\u53ef\u4ee5\u7528\u81ea\u5b9a\u4e49\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u8fd9\u4e9b\u9700\u6c42\uff0c\u6211\u4eec\u4e5f\u77e5\u9053 Promethues \u5728\u4ee3\u7801\u4e0a\u5c31\u5df2\u7ecf\u5bf9 Kubernetes \u6709\u4e86\u539f\u751f\u7684\u652f\u6301\uff0c\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u53d1\u73b0\u7684\u5f62\u5f0f\u6765\u81ea\u52a8\u76d1\u63a7\u96c6\u7fa4\uff0c \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53e6\u5916\u4e00\u79cd\u66f4\u52a0\u9ad8\u7ea7\u7684\u65b9\u5f0f\u6765\u90e8\u7f72 Prometheus\uff1aOperator \u6846\u67b6\u3002 1 Operator Operator \u662f\u7531 CoreOS \u516c\u53f8\u5f00\u53d1\u7684\uff0c\u7528\u6765\u6269\u5c55 Kubernetes API \uff0c\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u63a7\u5236\u5668\uff0c \u5b83\u7528\u6765\u521b\u5efa\u3001\u914d\u7f6e\u548c\u7ba1\u7406\u590d\u6742\u7684\u6709\u72b6\u6001\u5e94\u7528\uff0c\u5982\u6570\u636e\u5e93\u3001\u7f13\u5b58\u548c\u76d1\u63a7\u7cfb\u7edf\u3002 Operator \u57fa\u4e8e Kubernetes \u7684\u8d44\u6e90\u548c\u63a7\u5236\u5668\u6982\u5ff5\u4e4b\u4e0a\u6784\u5efa\uff0c\u4f46\u540c\u65f6\u53c8\u5305\u542b\u4e86\u5e94\u7528\u7a0b\u5e8f\u7279\u5b9a\u7684\u4e00\u4e9b\u4e13\u4e1a\u77e5\u8bc6\uff0c\u6bd4\u5982\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u7684 Operator \uff0c\u5219\u5fc5\u987b\u5bf9\u521b\u5efa\u7684\u6570\u636e\u5e93\u7684\u5404\u79cd\u8fd0\u7ef4\u65b9\u5f0f\u975e\u5e38\u4e86\u89e3\uff0c\u521b\u5efa Operator \u7684\u5173\u952e\u662f CRD \uff08\u81ea\u5b9a\u4e49\u8d44\u6e90\uff09\u7684\u8bbe\u8ba1\u3002 CRD \u662f\u5bf9 Kubernetes API \u7684\u6269\u5c55\uff0c Kubernetes \u4e2d\u7684\u6bcf\u4e2a\u8d44\u6e90\u90fd\u662f\u4e00\u4e2a API \u5bf9\u8c61\u7684\u96c6\u5408\uff0c\u4f8b\u5982\u6211\u4eec\u5728 YAML \u6587\u4ef6\u91cc\u5b9a\u4e49\u7684\u90a3\u4e9b spec \u90fd\u662f\u5bf9 Kubernetes \u4e2d\u7684\u8d44\u6e90\u5bf9\u8c61\u7684\u5b9a\u4e49\uff0c\u6240\u6709\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u53ef\u4ee5\u8ddf Kubernetes \u4e2d\u5185\u5efa\u7684\u8d44\u6e90\u4e00\u6837\u4f7f\u7528 kubectl \u64cd\u4f5c\u3002 Operator \u662f\u5c06\u8fd0\u7ef4\u4eba\u5458\u5bf9\u8f6f\u4ef6\u64cd\u4f5c\u7684\u77e5\u8bc6\u7ed9 \u4ee3\u7801\u5316 \uff0c\u540c\u65f6\u5229\u7528 Kubernetes \u5f3a\u5927\u7684\u62bd\u8c61\u6765\u7ba1\u7406\u5927\u89c4\u6a21\u7684\u8f6f\u4ef6\u5e94\u7528\u3002\u76ee\u524dCoreOS\u5b98\u65b9\u63d0\u4f9b\u4e86 \u51e0\u79cdOperator\u7684\u5b9e\u73b0 \uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u6211\u4eec\u4eca\u5929\u7684\u4e3b\u89d2\uff1a Prometheus Operator \uff0c Operator \u7684\u6838\u5fc3\u5b9e\u73b0\u5c31\u662f\u57fa\u4e8e Kubernetes \u7684\u4ee5\u4e0b\u4e24\u4e2a\u6982\u5ff5\uff1a \u8d44\u6e90\uff1a\u5bf9\u8c61\u7684\u72b6\u6001\u5b9a\u4e49 \u63a7\u5236\u5668\uff1a\u89c2\u6d4b\u3001\u5206\u6790\u548c\u884c\u52a8\uff0c\u4ee5\u8c03\u8282\u8d44\u6e90\u7684\u5206\u5e03 \u5f53\u7136\u6211\u4eec\u5982\u679c\u6709\u5bf9\u5e94\u7684\u9700\u6c42\u4e5f\u5b8c\u5168\u53ef\u4ee5\u81ea\u5df1\u53bb\u5b9e\u73b0\u4e00\u4e2a Operator \uff0c\u63a5\u4e0b\u6765\u6211\u5c31\u6765\u7ed9\u5927\u5bb6\u8be6\u7ec6\u4ecb\u7ecd\u4e0b Prometheus-Operator \u7684\u4f7f\u7528\u65b9\u6cd5\u3002 2 \u4ecb\u7ecd \u9996\u5148\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e0b Prometheus-Operator \u7684\u67b6\u6784\u56fe\uff1a \u4e0a\u56fe\u662f Prometheus-Operator \u5b98\u65b9\u63d0\u4f9b\u7684\u67b6\u6784\u56fe\uff0c\u5176\u4e2d Operator \u662f\u6700\u6838\u5fc3\u7684\u90e8\u5206\uff0c\u4f5c\u4e3a\u4e00\u4e2a \u63a7\u5236\u5668 \uff0c\u4ed6\u4f1a\u53bb\u521b\u5efa Prometheus \u3001 ServiceMonitor \u3001 AlertManager \u4ee5\u53ca PrometheusRule 4\u4e2a CRD \u8d44\u6e90\u5bf9\u8c61 \uff0c\u7136\u540e\u4f1a\u4e00\u76f4\u76d1\u63a7\u5e76\u7ef4\u6301\u8fd9 4 \u4e2a\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u3002 \u5176\u4e2d\u521b\u5efa\u7684 prometheus \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u5c31\u662f\u4f5c\u4e3a Prometheus Server \u5b58\u5728\uff0c \u800c ServiceMonitor \u5c31\u662f exporter \u7684\u5404\u79cd\u62bd\u8c61\uff0c exporter \u524d\u9762\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\uff0c\u662f\u7528\u6765\u63d0\u4f9b\u4e13\u95e8\u63d0\u4f9b metrics \u6570\u636e\u63a5\u53e3\u7684\u5de5\u5177\uff0c Prometheus \u5c31\u662f\u901a\u8fc7 ServiceMonitor \u63d0\u4f9b\u7684 metrics \u6570\u636e\u63a5\u53e3\u53bb pull \u6570\u636e\u7684\uff0c\u5f53\u7136 alertmanager \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u5c31\u662f\u5bf9\u5e94\u7684 AlertManager \u7684\u62bd\u8c61\uff0c\u800c PrometheusRule \u662f\u7528\u6765\u88ab Prometheus \u5b9e\u4f8b\u4f7f\u7528\u7684\u62a5\u8b66\u89c4\u5219\u6587\u4ef6\u3002 \u8fd9\u6837\u6211\u4eec\u8981\u5728\u96c6\u7fa4\u4e2d\u76d1\u63a7\u4ec0\u4e48\u6570\u636e\uff0c\u5c31\u53d8\u6210\u4e86\u76f4\u63a5\u53bb\u64cd\u4f5c Kubernetes \u96c6\u7fa4\u7684\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u662f\u4e0d\u662f\u65b9\u4fbf\u5f88\u591a\u4e86\u3002\u4e0a\u56fe\u4e2d\u7684 Service \u548c ServiceMonitor \u90fd\u662f Kubernetes \u7684\u8d44\u6e90\uff0c\u4e00\u4e2a ServiceMonitor \u53ef\u4ee5\u901a\u8fc7 labelSelector \u7684\u65b9\u5f0f\u53bb\u5339\u914d\u4e00\u7c7b Service \uff0c Prometheus \u4e5f\u53ef\u4ee5\u901a\u8fc7 labelSelector \u53bb\u5339\u914d\u591a\u4e2a ServiceMonitor \u3002 2 \u5b89\u88c5 \u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u901a\u8fc7 Prometheus-Operator \u7684\u6e90\u7801\u6765\u8fdb\u884c\u5b89\u88c5\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528 Helm \u6765\u8fdb\u884c\u4e00\u952e\u5b89\u88c5\uff0c\u6211\u4eec\u91c7\u7528\u6e90\u7801\u5b89\u88c5\u53ef\u4ee5\u53bb\u4e86\u89e3\u66f4\u591a\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\u9996\u9875\u5c06\u6e90\u7801 Clone \u4e0b\u6765\uff1a $ git clone https://github.com/coreos/prometheus-operator $ cd contrib/kube-prometheus/manifests/ $ ls 00namespace-namespace.yaml node-exporter-clusterRole.yaml 0prometheus-operator-0alertmanagerCustomResourceDefinition.yaml node-exporter-daemonset.yaml ...... \u8fdb\u5165\u5230 manifests \u76ee\u5f55\u4e0b\u9762\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\u5305\u542b\u6211\u4eec\u6240\u6709\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5176\u4e2d\u7684\u6587\u4ef6 prometheus-serviceMonitorKubelet.yaml \u8fdb\u884c\u7b80\u5355\u7684\u4fee\u6539. \u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a ServiceMonitor \u662f\u5173\u8054\u7684 kubelet \u7684 10250 \u7aef\u53e3\u53bb\u91c7\u96c6\u7684\u8282\u70b9\u6570\u636e\uff0c\u800c\u6211\u4eec\u524d\u9762\u8bf4\u8fc7\u4e3a\u4e86\u5b89\u5168\uff0c\u8fd9\u4e2a metrics \u6570\u636e\u5df2\u7ecf\u8fc1\u79fb\u5230 10255 \u8fd9\u4e2a\u53ea\u8bfb\u7aef\u53e3\u4e0a\u9762\u53bb\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6587\u4ef6\u4e2d\u7684 https-metrics \u66f4\u6539\u6210 http-metrics \u5373\u53ef\uff0c\u8fd9\u4e2a\u5728 Prometheus-Operator \u5bf9\u8282\u70b9\u7aef\u70b9\u540c\u6b65\u7684\u4ee3\u7801\u4e2d\u6709\u76f8\u5173\u5b9a\u4e49\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5 \u70b9\u6b64\u67e5\u770b\u5b8c\u6574\u4ee3\u7801 \uff1a Subsets: []v1.EndpointSubset{ { Ports: []v1.EndpointPort{ { Name: \"https-metrics\", Port: 10250, }, { Name: \"http-metrics\", Port: 10255, }, { Name: \"cadvisor\", Port: 4194, }, }, }, }, \u4fee\u6539\u5b8c\u6210\u540e\uff0c\u76f4\u63a5\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u9762\u6267\u884c\u521b\u5efa\u8d44\u6e90\u547d\u4ee4\u5373\u53ef\uff1a $ kubectl apply -f . \u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a monitoring \u7684 namespace \uff0c\u6240\u4ee5\u8d44\u6e90\u5bf9\u8c61\u5bf9\u5c06\u90e8\u7f72\u5728\u6539\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\uff0c\u6b64\u5916 Operator \u4f1a\u81ea\u52a8\u521b\u5efa4\u4e2a CRD \u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl get crd |grep coreos alertmanagers.monitoring.coreos.com 5d prometheuses.monitoring.coreos.com 5d prometheusrules.monitoring.coreos.com 5d servicemonitors.monitoring.coreos.com 5d \u53ef\u4ee5\u5728 monitoring \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u67e5\u770b\u6240\u6709\u7684 Pod \uff0c\u5176\u4e2d alertmanager \u548c prometheus \u662f\u7528 StatefulSet \u63a7\u5236\u5668\u7ba1\u7406\u7684\uff0c\u5176\u4e2d\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u6838\u5fc3\u7684 prometheus-operator \u7684 Pod\uff0c\u7528 \u6765\u63a7\u5236\u5176\u4ed6\u8d44\u6e90\u5bf9\u8c61\u548c\u76d1\u542c\u5bf9\u8c61\u53d8\u5316\u7684\uff1a $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE alertmanager-main-0 2/2 Running 0 21h alertmanager-main-1 2/2 Running 0 21h alertmanager-main-2 2/2 Running 0 21h grafana-df9bfd765-f4dvw 1/1 Running 0 22h kube-state-metrics-77c9658489-ntj66 4/4 Running 0 20h node-exporter-4sr7f 2/2 Running 0 21h node-exporter-9mh2r 2/2 Running 0 21h node-exporter-m2gkp 2/2 Running 0 21h prometheus-adapter-dc548cc6-r6lhb 1/1 Running 0 22h prometheus-k8s-0 3/3 Running 1 21h prometheus-k8s-1 3/3 Running 1 21h prometheus-operator-bdf79ff67-9dc48 1/1 Running 0 21h \u67e5\u770b\u521b\u5efa\u7684 Service : $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager-main ClusterIP 10.110.204.224 <none> 9093/TCP 23h alertmanager-operated ClusterIP None <none> 9093/TCP,6783/TCP 23h grafana ClusterIP 10.98.191.31 <none> 3000/TCP 23h kube-state-metrics ClusterIP None <none> 8443/TCP,9443/TCP 23h node-exporter ClusterIP None <none> 9100/TCP 23h prometheus-adapter ClusterIP 10.107.201.172 <none> 443/TCP 23h prometheus-k8s ClusterIP 10.107.105.53 <none> 9090/TCP 23h prometheus-operated ClusterIP None <none> 9090/TCP 23h prometheus-operator ClusterIP None <none> 8080/TCP 23h \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u9488\u5bf9 grafana \u548c prometheus \u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a ClusterIP \u7684 Service \uff0c\u5f53\u7136\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u5916\u7f51\u8bbf\u95ee\u8fd9\u4e24\u4e2a\u670d\u52a1\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5bf9\u5e94\u7684 Ingress \u5bf9\u8c61\u6216\u8005\u4f7f\u7528 NodePort \u7c7b\u578b\u7684 Service \uff0c\u6211\u4eec\u8fd9\u91cc\u4e3a\u4e86\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 NodePort \u7c7b\u578b\u7684\u670d\u52a1\u5373\u53ef\uff0c\u7f16\u8f91 grafana \u548c prometheus-k8s \u8fd9\u4e24\u4e2a Service \uff0c\u5c06\u670d\u52a1\u7c7b\u578b\u66f4\u6539\u4e3a NodePort : $ kubectl edit svc grafana -n monitoring $ kubectl edit svc prometheus-k8s -n monitoring $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE grafana NodePort 10.98.191.31 <none> 3000:32333/TCP 23h prometheus-k8s NodePort 10.107.105.53 <none> 9090:30166/TCP 23h ...... kubectl edit svc -n # \u76f4\u63a5\u5c06service\u7684clusterIP\u6539\u4e3anodeport \u66f4\u6539\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 NodeIP:NodePort \u53bb\u8bbf\u95ee\u4e0a\u9762\u7684\u4e24\u4e2a\u670d\u52a1\u4e86\uff0c\u6bd4\u5982\u67e5\u770b prometheus \u7684 targets \u9875\u9762\uff1a 3 \u914d\u7f6e \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5927\u90e8\u5206\u7684\u914d\u7f6e\u90fd\u662f\u6b63\u5e38\u7684\uff0c\u53ea\u6709\u4e24\u4e09\u4e2a\u6ca1\u6709\u7ba1\u7406\u5230\u5bf9\u5e94\u7684\u76d1\u63a7\u76ee\u6807\uff0c\u6bd4\u5982 kube-controller-manager \u548c kube-scheduler \u8fd9\u4e24\u4e2a\u7cfb\u7edf\u7ec4\u4ef6\uff0c\u8fd9\u5c31\u548c ServiceMonitor \u7684\u5b9a\u4e49\u6709\u5173\u7cfb\u4e86 \uff0c \u6211\u4eec\u5148\u6765\u67e5\u770b\u4e0b kube-scheduler \u7ec4\u4ef6\u5bf9\u5e94\u7684 ServiceMonitor \u8d44\u6e90\u7684\u5b9a\u4e49\uff1a( prometheus-serviceMonitorKubeScheduler.yaml ) apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: labels: k8s-app: kube-scheduler name: kube-scheduler namespace: monitoring spec: endpoints: - interval: 30s # \u6bcf30s\u83b7\u53d6\u4e00\u6b21\u4fe1\u606f port: http-metrics # \u5bf9\u5e94service\u7684\u7aef\u53e3\u540d jobLabel: k8s-app namespaceSelector: # \u8868\u793a\u53bb\u5339\u914d\u67d0\u4e00\u547d\u540d\u7a7a\u95f4\u4e2d\u7684service\uff0c\u5982\u679c\u60f3\u4ece\u6240\u6709\u7684namespace\u4e2d\u5339\u914d\u7528any: true matchNames: - kube-system selector: # \u5339\u914d\u7684 Service \u7684labels\uff0c\u5982\u679c\u4f7f\u7528mathLabels\uff0c\u5219\u4e0b\u9762\u7684\u6240\u6709\u6807\u7b7e\u90fd\u5339\u914d\u65f6\u624d\u4f1a\u5339\u914d\u8be5service\uff0c\u5982\u679c\u4f7f\u7528matchExpressions\uff0c\u5219\u81f3\u5c11\u5339\u914d\u4e00\u4e2a\u6807\u7b7e\u7684service\u90fd\u4f1a\u88ab\u9009\u62e9 matchLabels: k8s-app: kube-scheduler \u4e0a\u9762\u662f\u4e00\u4e2a\u5178\u578b\u7684 ServiceMonitor \u8d44\u6e90\u6587\u4ef6\u7684\u58f0\u660e\u65b9\u5f0f\uff0c\u4e0a\u9762\u6211\u4eec\u901a\u8fc7 selector.matchLabels \u5728 kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5339\u914d\u5177\u6709 k8s-app=kube-scheduler \u8fd9\u6837\u7684 Service \uff0c\u4f46\u662f\u6211\u4eec\u7cfb\u7edf\u4e2d\u6839\u672c\u5c31\u6ca1\u6709\u5bf9\u5e94\u7684 Service \uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u624b\u52a8\u521b\u5efa\u4e00\u4e2a Service \uff1a\uff08 prometheus-kubeSchedulerService.yaml \uff09 apiVersion: v1 kind: Service metadata: namespace: kube-system name: kube-scheduler labels: k8s-app: kube-scheduler spec: selector: component: kube-scheduler ports: - name: http-metrics port: 10251 targetPort: 10251 protocol: TCP 10251 \u662f kube-scheduler \u7ec4\u4ef6 metrics \u6570\u636e\u6240\u5728\u7684\u7aef\u53e3\uff0c 10252 \u662f kube-controller-manager \u7ec4\u4ef6\u7684\u76d1\u63a7\u6570\u636e\u6240\u5728\u7aef\u53e3\u3002 \u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f\u4e0a\u9762 labels \u548c selector \u90e8\u5206\uff0c labels \u533a\u57df\u7684\u914d\u7f6e\u5fc5\u987b\u548c\u6211\u4eec\u4e0a\u9762\u7684 ServiceMonitor \u5bf9\u8c61\u4e2d\u7684 selector \u4fdd\u6301\u4e00\u81f4\uff0c selector \u4e0b\u9762\u914d\u7f6e\u7684\u662f component=kube-scheduler \uff0c\u4e3a\u4ec0\u4e48\u4f1a\u662f\u8fd9\u4e2a label \u6807\u7b7e\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb describe \u4e0b kube-scheduler \u8fd9\u4e2a Pod \uff1a $ kubectl describe pod kube-scheduler-master -n kube-system Name: kube-scheduler-master Namespace: kube-system Node: master/10.151.30.57 Start Time: Sun, 05 Aug 2018 18:13:32 +0800 Labels: component=kube-scheduler tier=control-plane ...... \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a Pod \u5177\u6709 component=kube-scheduler \u548c tier=control-plane \u8fd9\u4e24\u4e2a\u6807\u7b7e\uff0c\u800c\u524d\u9762\u8fd9\u4e2a\u6807\u7b7e\u5177\u6709\u66f4\u552f\u4e00\u7684\u7279\u6027\uff0c\u6240\u4ee5\u4f7f\u7528\u524d\u9762\u8fd9\u4e2a\u6807\u7b7e\u8f83\u597d\uff0c\u8fd9\u6837\u4e0a\u9762\u521b\u5efa\u7684 Service \u5c31\u53ef\u4ee5\u548c\u6211\u4eec\u7684 Pod \u8fdb\u884c\u5173\u8054\u4e86\uff0c\u76f4\u63a5\u521b\u5efa\u5373\u53ef\uff1a $ kubectl create -f prometheus-kubeSchedulerService.yaml $ kubectl get svc -n kube-system -l k8s-app=kube-scheduler NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kube-scheduler ClusterIP 10.102.119.231 <none> 10251/TCP 18m \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u5c0f\u4f1a\u513f\u540e\u53bb prometheus \u67e5\u770b targets \u4e0b\u9762 kube-scheduler \u7684\u72b6\u6001\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u73b0\u5728\u5df2\u7ecf\u53d1\u73b0\u4e86 target \uff0c\u4f46\u662f\u6293\u53d6\u6570\u636e\u7ed3\u679c\u51fa\u9519\u4e86\uff0c\u8fd9\u4e2a\u9519\u8bef\u662f\u56e0\u4e3a\u6211\u4eec\u96c6\u7fa4\u662f\u4f7f\u7528 kubeadm \u642d\u5efa\u7684\uff0c\u5176\u4e2d kube-scheduler \u9ed8\u8ba4\u662f\u7ed1\u5b9a\u5728 127.0.0.1 \u4e0a\u9762\u7684\uff0c\u800c\u4e0a\u9762\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u662f\u60f3\u901a\u8fc7\u8282\u70b9\u7684 IP \u53bb\u8bbf\u95ee\uff0c\u6240\u4ee5\u8bbf\u95ee\u88ab\u62d2\u7edd\u4e86\uff0c\u6211\u4eec\u53ea\u8981\u628a kube-scheduler \u7ed1\u5b9a\u7684\u5730\u5740\u66f4\u6539\u6210 0.0.0.0 \u5373\u53ef\u6ee1\u8db3\u8981\u6c42\uff0c\u7531\u4e8e kube-scheduler \u662f\u4ee5\u9759\u6001 Pod \u7684\u5f62\u5f0f\u8fd0\u884c\u5728\u96c6\u7fa4\u4e2d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u66f4\u6539\u9759\u6001 Pod \u76ee\u5f55\u4e0b\u9762\u5bf9\u5e94\u7684 YAML \u6587\u4ef6\u5373\u53ef\uff1a $ ls /etc/kubernetes/manifests/ etcd.yaml kube-apiserver.yaml kube-controller-manager.yaml kube-scheduler.yaml \u5c06 kube-scheduler.yaml \u6587\u4ef6\u4e2d -command \u7684 --address \u5730\u5740\u66f4\u6539\u6210 0.0.0.0 \uff1a containers: - command: - kube-scheduler - --leader-elect=true - --kubeconfig=/etc/kubernetes/scheduler.conf - --address=0.0.0.0 \u4fee\u6539\u5b8c\u6210\u540e\u6211\u4eec\u5c06\u8be5\u6587\u4ef6\u4ece\u5f53\u524d\u6587\u4ef6\u5939\u4e2d\u79fb\u9664\uff0c\u9694\u4e00\u4f1a\u513f\u518d\u79fb\u56de\u8be5\u76ee\u5f55\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u66f4\u65b0\u4e86 \uff0c\u7136\u540e\u518d\u53bb\u770b prometheus \u4e2d kube-scheduler \u8fd9\u4e2a target \u662f\u5426\u5df2\u7ecf\u6b63\u5e38\u4e86\uff1a \u5927\u5bb6\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\u5c1d\u8bd5\u53bb\u4fee\u590d\u4e0b kube-controller-manager \u7ec4\u4ef6\u7684\u76d1\u63a7\u3002 \u4e0a\u9762\u7684\u76d1\u63a7\u6570\u636e\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u53bb\u67e5\u770b\u4e0b grafana \u4e0b\u9762\u7684 dashboard \uff0c\u540c\u6837\u4f7f\u7528\u4e0a\u9762\u7684 NodePort \u8bbf\u95ee\u5373\u53ef\uff0c \u7b2c\u4e00\u6b21\u767b\u5f55\u4f7f\u7528 admin:admin \u767b\u5f55\u5373\u53ef \uff0c\u8fdb\u5165\u9996\u9875\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0\u5df2\u7ecf\u548c\u6211\u4eec\u7684 Prometheus \u6570\u636e\u6e90\u5173\u8054\u4e0a\u4e86\uff0c\u6b63\u5e38\u6765\u8bf4\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u76d1\u63a7\u56fe\u8868\u4e86\uff1a","title":"\u7b2c\u4e00\u8282 Prometheus Operator \u521d\u4f53\u9a8c"},{"location":"chap4/11Adv_Prometheus_Operator/#prometheus-operator","text":"\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u5b66\u4e60\u4e86\u7528\u81ea\u5b9a\u4e49\u7684\u65b9\u5f0f\u6765\u5bf9 Kubernetes \u96c6\u7fa4\u8fdb\u884c\u76d1\u63a7\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u4e00\u4e9b\u7f3a\u9677\uff0c\u6bd4\u5982 Prometheus \u3001 AlertManager \u8fd9\u4e9b\u7ec4\u4ef6\u670d\u52a1\u672c\u8eab\u7684\u9ad8\u53ef\u7528\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u5b8c\u5168\u53ef\u4ee5\u7528\u81ea\u5b9a\u4e49\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u8fd9\u4e9b\u9700\u6c42\uff0c\u6211\u4eec\u4e5f\u77e5\u9053 Promethues \u5728\u4ee3\u7801\u4e0a\u5c31\u5df2\u7ecf\u5bf9 Kubernetes \u6709\u4e86\u539f\u751f\u7684\u652f\u6301\uff0c\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u53d1\u73b0\u7684\u5f62\u5f0f\u6765\u81ea\u52a8\u76d1\u63a7\u96c6\u7fa4\uff0c \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53e6\u5916\u4e00\u79cd\u66f4\u52a0\u9ad8\u7ea7\u7684\u65b9\u5f0f\u6765\u90e8\u7f72 Prometheus\uff1aOperator \u6846\u67b6\u3002","title":"\u7b2c\u4e00\u8282 Prometheus Operator \u521d\u4f53\u9a8c"},{"location":"chap4/11Adv_Prometheus_Operator/#1-operator","text":"Operator \u662f\u7531 CoreOS \u516c\u53f8\u5f00\u53d1\u7684\uff0c\u7528\u6765\u6269\u5c55 Kubernetes API \uff0c\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u63a7\u5236\u5668\uff0c \u5b83\u7528\u6765\u521b\u5efa\u3001\u914d\u7f6e\u548c\u7ba1\u7406\u590d\u6742\u7684\u6709\u72b6\u6001\u5e94\u7528\uff0c\u5982\u6570\u636e\u5e93\u3001\u7f13\u5b58\u548c\u76d1\u63a7\u7cfb\u7edf\u3002 Operator \u57fa\u4e8e Kubernetes \u7684\u8d44\u6e90\u548c\u63a7\u5236\u5668\u6982\u5ff5\u4e4b\u4e0a\u6784\u5efa\uff0c\u4f46\u540c\u65f6\u53c8\u5305\u542b\u4e86\u5e94\u7528\u7a0b\u5e8f\u7279\u5b9a\u7684\u4e00\u4e9b\u4e13\u4e1a\u77e5\u8bc6\uff0c\u6bd4\u5982\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u7684 Operator \uff0c\u5219\u5fc5\u987b\u5bf9\u521b\u5efa\u7684\u6570\u636e\u5e93\u7684\u5404\u79cd\u8fd0\u7ef4\u65b9\u5f0f\u975e\u5e38\u4e86\u89e3\uff0c\u521b\u5efa Operator \u7684\u5173\u952e\u662f CRD \uff08\u81ea\u5b9a\u4e49\u8d44\u6e90\uff09\u7684\u8bbe\u8ba1\u3002 CRD \u662f\u5bf9 Kubernetes API \u7684\u6269\u5c55\uff0c Kubernetes \u4e2d\u7684\u6bcf\u4e2a\u8d44\u6e90\u90fd\u662f\u4e00\u4e2a API \u5bf9\u8c61\u7684\u96c6\u5408\uff0c\u4f8b\u5982\u6211\u4eec\u5728 YAML \u6587\u4ef6\u91cc\u5b9a\u4e49\u7684\u90a3\u4e9b spec \u90fd\u662f\u5bf9 Kubernetes \u4e2d\u7684\u8d44\u6e90\u5bf9\u8c61\u7684\u5b9a\u4e49\uff0c\u6240\u6709\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u53ef\u4ee5\u8ddf Kubernetes \u4e2d\u5185\u5efa\u7684\u8d44\u6e90\u4e00\u6837\u4f7f\u7528 kubectl \u64cd\u4f5c\u3002 Operator \u662f\u5c06\u8fd0\u7ef4\u4eba\u5458\u5bf9\u8f6f\u4ef6\u64cd\u4f5c\u7684\u77e5\u8bc6\u7ed9 \u4ee3\u7801\u5316 \uff0c\u540c\u65f6\u5229\u7528 Kubernetes \u5f3a\u5927\u7684\u62bd\u8c61\u6765\u7ba1\u7406\u5927\u89c4\u6a21\u7684\u8f6f\u4ef6\u5e94\u7528\u3002\u76ee\u524dCoreOS\u5b98\u65b9\u63d0\u4f9b\u4e86 \u51e0\u79cdOperator\u7684\u5b9e\u73b0 \uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u6211\u4eec\u4eca\u5929\u7684\u4e3b\u89d2\uff1a Prometheus Operator \uff0c Operator \u7684\u6838\u5fc3\u5b9e\u73b0\u5c31\u662f\u57fa\u4e8e Kubernetes \u7684\u4ee5\u4e0b\u4e24\u4e2a\u6982\u5ff5\uff1a \u8d44\u6e90\uff1a\u5bf9\u8c61\u7684\u72b6\u6001\u5b9a\u4e49 \u63a7\u5236\u5668\uff1a\u89c2\u6d4b\u3001\u5206\u6790\u548c\u884c\u52a8\uff0c\u4ee5\u8c03\u8282\u8d44\u6e90\u7684\u5206\u5e03 \u5f53\u7136\u6211\u4eec\u5982\u679c\u6709\u5bf9\u5e94\u7684\u9700\u6c42\u4e5f\u5b8c\u5168\u53ef\u4ee5\u81ea\u5df1\u53bb\u5b9e\u73b0\u4e00\u4e2a Operator \uff0c\u63a5\u4e0b\u6765\u6211\u5c31\u6765\u7ed9\u5927\u5bb6\u8be6\u7ec6\u4ecb\u7ecd\u4e0b Prometheus-Operator \u7684\u4f7f\u7528\u65b9\u6cd5\u3002","title":"1 Operator"},{"location":"chap4/11Adv_Prometheus_Operator/#2","text":"\u9996\u5148\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e0b Prometheus-Operator \u7684\u67b6\u6784\u56fe\uff1a \u4e0a\u56fe\u662f Prometheus-Operator \u5b98\u65b9\u63d0\u4f9b\u7684\u67b6\u6784\u56fe\uff0c\u5176\u4e2d Operator \u662f\u6700\u6838\u5fc3\u7684\u90e8\u5206\uff0c\u4f5c\u4e3a\u4e00\u4e2a \u63a7\u5236\u5668 \uff0c\u4ed6\u4f1a\u53bb\u521b\u5efa Prometheus \u3001 ServiceMonitor \u3001 AlertManager \u4ee5\u53ca PrometheusRule 4\u4e2a CRD \u8d44\u6e90\u5bf9\u8c61 \uff0c\u7136\u540e\u4f1a\u4e00\u76f4\u76d1\u63a7\u5e76\u7ef4\u6301\u8fd9 4 \u4e2a\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u3002 \u5176\u4e2d\u521b\u5efa\u7684 prometheus \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u5c31\u662f\u4f5c\u4e3a Prometheus Server \u5b58\u5728\uff0c \u800c ServiceMonitor \u5c31\u662f exporter \u7684\u5404\u79cd\u62bd\u8c61\uff0c exporter \u524d\u9762\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\uff0c\u662f\u7528\u6765\u63d0\u4f9b\u4e13\u95e8\u63d0\u4f9b metrics \u6570\u636e\u63a5\u53e3\u7684\u5de5\u5177\uff0c Prometheus \u5c31\u662f\u901a\u8fc7 ServiceMonitor \u63d0\u4f9b\u7684 metrics \u6570\u636e\u63a5\u53e3\u53bb pull \u6570\u636e\u7684\uff0c\u5f53\u7136 alertmanager \u8fd9\u79cd\u8d44\u6e90\u5bf9\u8c61\u5c31\u662f\u5bf9\u5e94\u7684 AlertManager \u7684\u62bd\u8c61\uff0c\u800c PrometheusRule \u662f\u7528\u6765\u88ab Prometheus \u5b9e\u4f8b\u4f7f\u7528\u7684\u62a5\u8b66\u89c4\u5219\u6587\u4ef6\u3002 \u8fd9\u6837\u6211\u4eec\u8981\u5728\u96c6\u7fa4\u4e2d\u76d1\u63a7\u4ec0\u4e48\u6570\u636e\uff0c\u5c31\u53d8\u6210\u4e86\u76f4\u63a5\u53bb\u64cd\u4f5c Kubernetes \u96c6\u7fa4\u7684\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u662f\u4e0d\u662f\u65b9\u4fbf\u5f88\u591a\u4e86\u3002\u4e0a\u56fe\u4e2d\u7684 Service \u548c ServiceMonitor \u90fd\u662f Kubernetes \u7684\u8d44\u6e90\uff0c\u4e00\u4e2a ServiceMonitor \u53ef\u4ee5\u901a\u8fc7 labelSelector \u7684\u65b9\u5f0f\u53bb\u5339\u914d\u4e00\u7c7b Service \uff0c Prometheus \u4e5f\u53ef\u4ee5\u901a\u8fc7 labelSelector \u53bb\u5339\u914d\u591a\u4e2a ServiceMonitor \u3002","title":"2 \u4ecb\u7ecd"},{"location":"chap4/11Adv_Prometheus_Operator/#2_1","text":"\u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u901a\u8fc7 Prometheus-Operator \u7684\u6e90\u7801\u6765\u8fdb\u884c\u5b89\u88c5\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528 Helm \u6765\u8fdb\u884c\u4e00\u952e\u5b89\u88c5\uff0c\u6211\u4eec\u91c7\u7528\u6e90\u7801\u5b89\u88c5\u53ef\u4ee5\u53bb\u4e86\u89e3\u66f4\u591a\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\u9996\u9875\u5c06\u6e90\u7801 Clone \u4e0b\u6765\uff1a $ git clone https://github.com/coreos/prometheus-operator $ cd contrib/kube-prometheus/manifests/ $ ls 00namespace-namespace.yaml node-exporter-clusterRole.yaml 0prometheus-operator-0alertmanagerCustomResourceDefinition.yaml node-exporter-daemonset.yaml ...... \u8fdb\u5165\u5230 manifests \u76ee\u5f55\u4e0b\u9762\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\u5305\u542b\u6211\u4eec\u6240\u6709\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5176\u4e2d\u7684\u6587\u4ef6 prometheus-serviceMonitorKubelet.yaml \u8fdb\u884c\u7b80\u5355\u7684\u4fee\u6539. \u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a ServiceMonitor \u662f\u5173\u8054\u7684 kubelet \u7684 10250 \u7aef\u53e3\u53bb\u91c7\u96c6\u7684\u8282\u70b9\u6570\u636e\uff0c\u800c\u6211\u4eec\u524d\u9762\u8bf4\u8fc7\u4e3a\u4e86\u5b89\u5168\uff0c\u8fd9\u4e2a metrics \u6570\u636e\u5df2\u7ecf\u8fc1\u79fb\u5230 10255 \u8fd9\u4e2a\u53ea\u8bfb\u7aef\u53e3\u4e0a\u9762\u53bb\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6587\u4ef6\u4e2d\u7684 https-metrics \u66f4\u6539\u6210 http-metrics \u5373\u53ef\uff0c\u8fd9\u4e2a\u5728 Prometheus-Operator \u5bf9\u8282\u70b9\u7aef\u70b9\u540c\u6b65\u7684\u4ee3\u7801\u4e2d\u6709\u76f8\u5173\u5b9a\u4e49\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5 \u70b9\u6b64\u67e5\u770b\u5b8c\u6574\u4ee3\u7801 \uff1a Subsets: []v1.EndpointSubset{ { Ports: []v1.EndpointPort{ { Name: \"https-metrics\", Port: 10250, }, { Name: \"http-metrics\", Port: 10255, }, { Name: \"cadvisor\", Port: 4194, }, }, }, }, \u4fee\u6539\u5b8c\u6210\u540e\uff0c\u76f4\u63a5\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u9762\u6267\u884c\u521b\u5efa\u8d44\u6e90\u547d\u4ee4\u5373\u53ef\uff1a $ kubectl apply -f . \u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a monitoring \u7684 namespace \uff0c\u6240\u4ee5\u8d44\u6e90\u5bf9\u8c61\u5bf9\u5c06\u90e8\u7f72\u5728\u6539\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\uff0c\u6b64\u5916 Operator \u4f1a\u81ea\u52a8\u521b\u5efa4\u4e2a CRD \u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl get crd |grep coreos alertmanagers.monitoring.coreos.com 5d prometheuses.monitoring.coreos.com 5d prometheusrules.monitoring.coreos.com 5d servicemonitors.monitoring.coreos.com 5d \u53ef\u4ee5\u5728 monitoring \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u67e5\u770b\u6240\u6709\u7684 Pod \uff0c\u5176\u4e2d alertmanager \u548c prometheus \u662f\u7528 StatefulSet \u63a7\u5236\u5668\u7ba1\u7406\u7684\uff0c\u5176\u4e2d\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u6838\u5fc3\u7684 prometheus-operator \u7684 Pod\uff0c\u7528 \u6765\u63a7\u5236\u5176\u4ed6\u8d44\u6e90\u5bf9\u8c61\u548c\u76d1\u542c\u5bf9\u8c61\u53d8\u5316\u7684\uff1a $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE alertmanager-main-0 2/2 Running 0 21h alertmanager-main-1 2/2 Running 0 21h alertmanager-main-2 2/2 Running 0 21h grafana-df9bfd765-f4dvw 1/1 Running 0 22h kube-state-metrics-77c9658489-ntj66 4/4 Running 0 20h node-exporter-4sr7f 2/2 Running 0 21h node-exporter-9mh2r 2/2 Running 0 21h node-exporter-m2gkp 2/2 Running 0 21h prometheus-adapter-dc548cc6-r6lhb 1/1 Running 0 22h prometheus-k8s-0 3/3 Running 1 21h prometheus-k8s-1 3/3 Running 1 21h prometheus-operator-bdf79ff67-9dc48 1/1 Running 0 21h \u67e5\u770b\u521b\u5efa\u7684 Service : $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager-main ClusterIP 10.110.204.224 <none> 9093/TCP 23h alertmanager-operated ClusterIP None <none> 9093/TCP,6783/TCP 23h grafana ClusterIP 10.98.191.31 <none> 3000/TCP 23h kube-state-metrics ClusterIP None <none> 8443/TCP,9443/TCP 23h node-exporter ClusterIP None <none> 9100/TCP 23h prometheus-adapter ClusterIP 10.107.201.172 <none> 443/TCP 23h prometheus-k8s ClusterIP 10.107.105.53 <none> 9090/TCP 23h prometheus-operated ClusterIP None <none> 9090/TCP 23h prometheus-operator ClusterIP None <none> 8080/TCP 23h \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u9488\u5bf9 grafana \u548c prometheus \u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a ClusterIP \u7684 Service \uff0c\u5f53\u7136\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u5916\u7f51\u8bbf\u95ee\u8fd9\u4e24\u4e2a\u670d\u52a1\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5bf9\u5e94\u7684 Ingress \u5bf9\u8c61\u6216\u8005\u4f7f\u7528 NodePort \u7c7b\u578b\u7684 Service \uff0c\u6211\u4eec\u8fd9\u91cc\u4e3a\u4e86\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 NodePort \u7c7b\u578b\u7684\u670d\u52a1\u5373\u53ef\uff0c\u7f16\u8f91 grafana \u548c prometheus-k8s \u8fd9\u4e24\u4e2a Service \uff0c\u5c06\u670d\u52a1\u7c7b\u578b\u66f4\u6539\u4e3a NodePort : $ kubectl edit svc grafana -n monitoring $ kubectl edit svc prometheus-k8s -n monitoring $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE grafana NodePort 10.98.191.31 <none> 3000:32333/TCP 23h prometheus-k8s NodePort 10.107.105.53 <none> 9090:30166/TCP 23h ...... kubectl edit svc -n # \u76f4\u63a5\u5c06service\u7684clusterIP\u6539\u4e3anodeport \u66f4\u6539\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 NodeIP:NodePort \u53bb\u8bbf\u95ee\u4e0a\u9762\u7684\u4e24\u4e2a\u670d\u52a1\u4e86\uff0c\u6bd4\u5982\u67e5\u770b prometheus \u7684 targets \u9875\u9762\uff1a","title":"2 \u5b89\u88c5"},{"location":"chap4/11Adv_Prometheus_Operator/#3","text":"\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5927\u90e8\u5206\u7684\u914d\u7f6e\u90fd\u662f\u6b63\u5e38\u7684\uff0c\u53ea\u6709\u4e24\u4e09\u4e2a\u6ca1\u6709\u7ba1\u7406\u5230\u5bf9\u5e94\u7684\u76d1\u63a7\u76ee\u6807\uff0c\u6bd4\u5982 kube-controller-manager \u548c kube-scheduler \u8fd9\u4e24\u4e2a\u7cfb\u7edf\u7ec4\u4ef6\uff0c\u8fd9\u5c31\u548c ServiceMonitor \u7684\u5b9a\u4e49\u6709\u5173\u7cfb\u4e86 \uff0c \u6211\u4eec\u5148\u6765\u67e5\u770b\u4e0b kube-scheduler \u7ec4\u4ef6\u5bf9\u5e94\u7684 ServiceMonitor \u8d44\u6e90\u7684\u5b9a\u4e49\uff1a( prometheus-serviceMonitorKubeScheduler.yaml ) apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: labels: k8s-app: kube-scheduler name: kube-scheduler namespace: monitoring spec: endpoints: - interval: 30s # \u6bcf30s\u83b7\u53d6\u4e00\u6b21\u4fe1\u606f port: http-metrics # \u5bf9\u5e94service\u7684\u7aef\u53e3\u540d jobLabel: k8s-app namespaceSelector: # \u8868\u793a\u53bb\u5339\u914d\u67d0\u4e00\u547d\u540d\u7a7a\u95f4\u4e2d\u7684service\uff0c\u5982\u679c\u60f3\u4ece\u6240\u6709\u7684namespace\u4e2d\u5339\u914d\u7528any: true matchNames: - kube-system selector: # \u5339\u914d\u7684 Service \u7684labels\uff0c\u5982\u679c\u4f7f\u7528mathLabels\uff0c\u5219\u4e0b\u9762\u7684\u6240\u6709\u6807\u7b7e\u90fd\u5339\u914d\u65f6\u624d\u4f1a\u5339\u914d\u8be5service\uff0c\u5982\u679c\u4f7f\u7528matchExpressions\uff0c\u5219\u81f3\u5c11\u5339\u914d\u4e00\u4e2a\u6807\u7b7e\u7684service\u90fd\u4f1a\u88ab\u9009\u62e9 matchLabels: k8s-app: kube-scheduler \u4e0a\u9762\u662f\u4e00\u4e2a\u5178\u578b\u7684 ServiceMonitor \u8d44\u6e90\u6587\u4ef6\u7684\u58f0\u660e\u65b9\u5f0f\uff0c\u4e0a\u9762\u6211\u4eec\u901a\u8fc7 selector.matchLabels \u5728 kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5339\u914d\u5177\u6709 k8s-app=kube-scheduler \u8fd9\u6837\u7684 Service \uff0c\u4f46\u662f\u6211\u4eec\u7cfb\u7edf\u4e2d\u6839\u672c\u5c31\u6ca1\u6709\u5bf9\u5e94\u7684 Service \uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u624b\u52a8\u521b\u5efa\u4e00\u4e2a Service \uff1a\uff08 prometheus-kubeSchedulerService.yaml \uff09 apiVersion: v1 kind: Service metadata: namespace: kube-system name: kube-scheduler labels: k8s-app: kube-scheduler spec: selector: component: kube-scheduler ports: - name: http-metrics port: 10251 targetPort: 10251 protocol: TCP 10251 \u662f kube-scheduler \u7ec4\u4ef6 metrics \u6570\u636e\u6240\u5728\u7684\u7aef\u53e3\uff0c 10252 \u662f kube-controller-manager \u7ec4\u4ef6\u7684\u76d1\u63a7\u6570\u636e\u6240\u5728\u7aef\u53e3\u3002 \u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f\u4e0a\u9762 labels \u548c selector \u90e8\u5206\uff0c labels \u533a\u57df\u7684\u914d\u7f6e\u5fc5\u987b\u548c\u6211\u4eec\u4e0a\u9762\u7684 ServiceMonitor \u5bf9\u8c61\u4e2d\u7684 selector \u4fdd\u6301\u4e00\u81f4\uff0c selector \u4e0b\u9762\u914d\u7f6e\u7684\u662f component=kube-scheduler \uff0c\u4e3a\u4ec0\u4e48\u4f1a\u662f\u8fd9\u4e2a label \u6807\u7b7e\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb describe \u4e0b kube-scheduler \u8fd9\u4e2a Pod \uff1a $ kubectl describe pod kube-scheduler-master -n kube-system Name: kube-scheduler-master Namespace: kube-system Node: master/10.151.30.57 Start Time: Sun, 05 Aug 2018 18:13:32 +0800 Labels: component=kube-scheduler tier=control-plane ...... \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a Pod \u5177\u6709 component=kube-scheduler \u548c tier=control-plane \u8fd9\u4e24\u4e2a\u6807\u7b7e\uff0c\u800c\u524d\u9762\u8fd9\u4e2a\u6807\u7b7e\u5177\u6709\u66f4\u552f\u4e00\u7684\u7279\u6027\uff0c\u6240\u4ee5\u4f7f\u7528\u524d\u9762\u8fd9\u4e2a\u6807\u7b7e\u8f83\u597d\uff0c\u8fd9\u6837\u4e0a\u9762\u521b\u5efa\u7684 Service \u5c31\u53ef\u4ee5\u548c\u6211\u4eec\u7684 Pod \u8fdb\u884c\u5173\u8054\u4e86\uff0c\u76f4\u63a5\u521b\u5efa\u5373\u53ef\uff1a $ kubectl create -f prometheus-kubeSchedulerService.yaml $ kubectl get svc -n kube-system -l k8s-app=kube-scheduler NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kube-scheduler ClusterIP 10.102.119.231 <none> 10251/TCP 18m \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u5c0f\u4f1a\u513f\u540e\u53bb prometheus \u67e5\u770b targets \u4e0b\u9762 kube-scheduler \u7684\u72b6\u6001\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u73b0\u5728\u5df2\u7ecf\u53d1\u73b0\u4e86 target \uff0c\u4f46\u662f\u6293\u53d6\u6570\u636e\u7ed3\u679c\u51fa\u9519\u4e86\uff0c\u8fd9\u4e2a\u9519\u8bef\u662f\u56e0\u4e3a\u6211\u4eec\u96c6\u7fa4\u662f\u4f7f\u7528 kubeadm \u642d\u5efa\u7684\uff0c\u5176\u4e2d kube-scheduler \u9ed8\u8ba4\u662f\u7ed1\u5b9a\u5728 127.0.0.1 \u4e0a\u9762\u7684\uff0c\u800c\u4e0a\u9762\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u662f\u60f3\u901a\u8fc7\u8282\u70b9\u7684 IP \u53bb\u8bbf\u95ee\uff0c\u6240\u4ee5\u8bbf\u95ee\u88ab\u62d2\u7edd\u4e86\uff0c\u6211\u4eec\u53ea\u8981\u628a kube-scheduler \u7ed1\u5b9a\u7684\u5730\u5740\u66f4\u6539\u6210 0.0.0.0 \u5373\u53ef\u6ee1\u8db3\u8981\u6c42\uff0c\u7531\u4e8e kube-scheduler \u662f\u4ee5\u9759\u6001 Pod \u7684\u5f62\u5f0f\u8fd0\u884c\u5728\u96c6\u7fa4\u4e2d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u66f4\u6539\u9759\u6001 Pod \u76ee\u5f55\u4e0b\u9762\u5bf9\u5e94\u7684 YAML \u6587\u4ef6\u5373\u53ef\uff1a $ ls /etc/kubernetes/manifests/ etcd.yaml kube-apiserver.yaml kube-controller-manager.yaml kube-scheduler.yaml \u5c06 kube-scheduler.yaml \u6587\u4ef6\u4e2d -command \u7684 --address \u5730\u5740\u66f4\u6539\u6210 0.0.0.0 \uff1a containers: - command: - kube-scheduler - --leader-elect=true - --kubeconfig=/etc/kubernetes/scheduler.conf - --address=0.0.0.0 \u4fee\u6539\u5b8c\u6210\u540e\u6211\u4eec\u5c06\u8be5\u6587\u4ef6\u4ece\u5f53\u524d\u6587\u4ef6\u5939\u4e2d\u79fb\u9664\uff0c\u9694\u4e00\u4f1a\u513f\u518d\u79fb\u56de\u8be5\u76ee\u5f55\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u66f4\u65b0\u4e86 \uff0c\u7136\u540e\u518d\u53bb\u770b prometheus \u4e2d kube-scheduler \u8fd9\u4e2a target \u662f\u5426\u5df2\u7ecf\u6b63\u5e38\u4e86\uff1a \u5927\u5bb6\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\u5c1d\u8bd5\u53bb\u4fee\u590d\u4e0b kube-controller-manager \u7ec4\u4ef6\u7684\u76d1\u63a7\u3002 \u4e0a\u9762\u7684\u76d1\u63a7\u6570\u636e\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u53bb\u67e5\u770b\u4e0b grafana \u4e0b\u9762\u7684 dashboard \uff0c\u540c\u6837\u4f7f\u7528\u4e0a\u9762\u7684 NodePort \u8bbf\u95ee\u5373\u53ef\uff0c \u7b2c\u4e00\u6b21\u767b\u5f55\u4f7f\u7528 admin:admin \u767b\u5f55\u5373\u53ef \uff0c\u8fdb\u5165\u9996\u9875\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0\u5df2\u7ecf\u548c\u6211\u4eec\u7684 Prometheus \u6570\u636e\u6e90\u5173\u8054\u4e0a\u4e86\uff0c\u6b63\u5e38\u6765\u8bf4\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u76d1\u63a7\u56fe\u8868\u4e86\uff1a","title":"3 \u914d\u7f6e"},{"location":"chap4/13Adv_Prometheus_Operator_etcd/","text":"\u7b2c\u4e8c\u8282 \u4f7f\u7528 Prometheus Operator \u76d1\u63a7 etcd \u9664\u4e86 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u4e00\u4e9b\u8d44\u6e90\u5bf9\u8c61\u3001\u8282\u70b9\u4ee5\u53ca\u7ec4\u4ef6\u9700\u8981\u76d1\u63a7\uff0c\u6709\u7684\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u8fd8\u9700\u8981\u6839\u636e\u5b9e\u9645\u7684\u4e1a\u52a1\u9700\u6c42\u53bb\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u9879\uff0c\u6dfb\u52a0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u76d1\u63a7\u7684\u6b65\u9aa4\u4e5f\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002 \u7b2c\u4e00\u6b65 \u5efa\u7acb\u4e00\u4e2a ServiceMonitor \u5bf9\u8c61\uff0c\u7528\u4e8e Prometheus \u6dfb\u52a0\u76d1\u63a7\u9879 \u7b2c\u4e8c\u6b65 \u4e3a ServiceMonitor \u5bf9\u8c61\u5173\u8054 metrics \u6570\u636e\u63a5\u53e3\u7684\u4e00\u4e2a Service \u5bf9\u8c61 \u7b2c\u4e09\u6b65 \u786e\u4fdd Service \u5bf9\u8c61\u53ef\u4ee5\u6b63\u786e\u83b7\u53d6\u5230 metrics \u6570\u636e \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u4e3a\u5927\u5bb6\u6f14\u793a\u5982\u4f55\u6dfb\u52a0 etcd \u96c6\u7fa4\u7684\u76d1\u63a7\u3002 \u65e0\u8bba\u662f Kubernetes \u96c6\u7fa4\u5916\u7684\u8fd8\u662f\u4f7f\u7528 Kubeadm \u5b89\u88c5\u5728\u96c6\u7fa4\u5185\u90e8\u7684 etcd \u96c6\u7fa4\uff0c\u6211\u4eec\u8fd9\u91cc\u90fd\u5c06\u5176\u89c6\u4f5c\u96c6\u7fa4\u5916\u7684\u72ec\u7acb\u96c6\u7fa4\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4e8c\u8005\u7684\u4f7f\u7528\u65b9\u6cd5\u6ca1\u4ec0\u4e48\u7279\u6b8a\u4e4b\u5904\u3002 1 etcd \u8bc1\u4e66 \u5bf9\u4e8e etcd \u96c6\u7fa4\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u5b89\u5168\u90fd\u4f1a\u5f00\u542f https \u8bc1\u4e66\u8ba4\u8bc1\u7684\u65b9\u5f0f\uff0c\u6240\u4ee5\u8981\u60f3\u8ba9 Prometheus \u8bbf\u95ee\u5230 etcd \u96c6\u7fa4\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5c31\u9700\u8981\u63d0\u4f9b\u76f8\u5e94\u7684\u8bc1\u4e66\u6821\u9a8c\u3002 \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u6f14\u793a\u73af\u5883\u4f7f\u7528\u7684\u662f Kubeadm \u642d\u5efa\u7684\u96c6\u7fa4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl \u5de5\u5177\u53bb\u83b7\u53d6 etcd \u542f\u52a8\u7684\u65f6\u5019\u4f7f\u7528\u7684\u8bc1\u4e66\u8def\u5f84\uff1a $ kubectl get pods -n kube-system NAME READY STATUS RESTARTS AGE etcd-master 1/1 Running 0 2h $ kubectl get pod etcd-master -n kube-system -o yaml ...... spec: containers: - command: - etcd - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt - --listen-client-urls=https://127.0.0.1:2379 - --advertise-client-urls=https://127.0.0.1:2379 - --client-cert-auth=true - --peer-client-cert-auth=true - --data-dir=/var/lib/etcd - --cert-file=/etc/kubernetes/pki/etcd/server.crt - --key-file=/etc/kubernetes/pki/etcd/server.key - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt image: k8s.gcr.io/etcd-amd64:3.1.12 imagePullPolicy: IfNotPresent livenessProbe: exec: command: - /bin/sh - -ec - ETCDCTL_API=3 etcdctl --endpoints=127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt --key=/etc/kubernetes/pki/etcd/healthcheck-client.key get foo failureThreshold: 8 initialDelaySeconds: 15 periodSeconds: 10 successThreshold: 1 timeoutSeconds: 15 name: etcd resources: {} terminationMessagePath: /dev/termination-log terminationMessagePolicy: File volumeMounts: - mountPath: /var/lib/etcd name: etcd-data - mountPath: /etc/kubernetes/pki/etcd name: etcd-certs ...... tolerations: - effect: NoExecute operator: Exists volumes: - hostPath: path: /var/lib/etcd type: DirectoryOrCreate name: etcd-data - hostPath: path: /etc/kubernetes/pki/etcd type: DirectoryOrCreate name: etcd-certs ...... - o yaml Output format \u6211\u4eec\u53ef\u4ee5\u770b\u5230 etcd \u4f7f\u7528\u7684\u8bc1\u4e66\u90fd\u5bf9\u5e94\u5728\u8282\u70b9\u7684 /etc/kubernetes/pki/etcd \u8fd9\u4e2a\u8def\u5f84\u4e0b\u9762\uff0c\u6240\u4ee5\u9996\u5148\u6211\u4eec\u5c06\u9700\u8981\u4f7f\u7528\u5230\u7684\u8bc1\u4e66\u901a\u8fc7 secret \u5bf9\u8c61\u4fdd\u5b58\u5230\u96c6\u7fa4\u4e2d\u53bb\uff1a (\u5728 etcd \u8fd0\u884c\u7684\u8282\u70b9) $ kubectl -n monitoring create secret generic etcd-certs --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.crt --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.key --from-file=/etc/kubernetes/pki/etcd/ca.crt secret \"etcd-certs\" created secret generic Create a secret based on a file, directory, or specified literal value. When creating a secret based on a file, the key will default to the basename of the file, and the value will default to the file content. If the basename is an invalid key or you wish to chose your own, you may specify an alternate key. kubectl create secret generic my-secret --from-file=path/to/bar --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.crt --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.key --from-file=/etc/kubernetes/pki/etcd/ca.crts \u7136\u540e\u5c06\u4e0a\u9762\u521b\u5efa\u7684 etcd-certs \u5bf9\u8c61\u914d\u7f6e\u5230 prometheus \u8d44\u6e90\u5bf9\u8c61\u4e2d\uff0c\u76f4\u63a5\u66f4\u65b0 prometheus \u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a $ kubectl edit prometheus k8s -n monitoring -n monitoring namespace \u6dfb\u52a0\u5982\u4e0b\u7684 secrets \u5c5e\u6027\uff1a nodeSelector: beta.kubernetes.io/os: linux replicas: 2 secrets: - etcd-certs \u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Prometheus \u7684 Pod \u4e2d\u83b7\u53d6\u5230\u4e0a\u9762\u521b\u5efa\u7684 etcd \u8bc1\u4e66\u6587\u4ef6\u4e86\uff0c\u5177\u4f53\u7684\u8def\u5f84\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165 Pod \u4e2d\u67e5\u770b\uff1a $ kubectl exec -it prometheus-k8s-0 /bin/sh -n monitoring Defaulting container name to prometheus. Use 'kubectl describe pod/prometheus-k8s-0 -n monitoring' to see all of the containers in this pod. $ ls /etc/prometheus/secrets/etcd-certs/ ca.crt healthcheck-client.crt healthcheck-client.key 2 \u521b\u5efa ServiceMonitor \u73b0\u5728 Prometheus \u8bbf\u95ee etcd \u96c6\u7fa4\u7684\u8bc1\u4e66\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u521b\u5efa ServiceMonitor \u5bf9\u8c61\u5373\u53ef\uff08 prometheus-serviceMonitorEtcd.yaml \uff09 apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: etcd-k8s namespace: monitoring labels: k8s-app: etcd-k8s spec: jobLabel: k8s-app endpoints: - port: port interval: 30s scheme: https tlsConfig: caFile: /etc/prometheus/secrets/etcd-certs/ca.crt certFile: /etc/kubernetes/pki/etcd/healthcheck-client.crt keyFile: /etc/kubernetes/pki/etcd/healthcheck-client.key insecureSkipVerify: true selector: matchLabels: k8s-app: etcd namespaceSelector: matchNames: - kube-system \u4e0a\u9762\u6211\u4eec\u5728 monitoring \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a etcd-k8s \u7684 ServiceMonitor \u5bf9\u8c61\uff0c\u57fa\u672c\u5c5e\u6027\u548c\u524d\u9762\u7ae0\u8282\u4e2d\u7684\u4e00\u81f4\uff0c \u5339\u914d kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 k8s-app=etcd \u8fd9\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c \u548c\u524d\u9762\u4e0d\u592a\u4e00\u6837\u7684\u5730\u65b9\u662f endpoints \u5c5e\u6027\u7684\u5199\u6cd5\uff0c\u914d\u7f6e\u4e0a\u8bbf\u95ee etcd \u7684\u76f8\u5173\u8bc1\u4e66\uff0c endpoints \u5c5e\u6027\u4e0b\u9762\u53ef\u4ee5\u914d\u7f6e\u5f88\u591a\u6293\u53d6\u7684\u53c2\u6570\uff0c\u6bd4\u5982 relabel \u3001 proxyUrl \uff0c tlsConfig \u8868\u793a\u7528\u4e8e\u914d\u7f6e\u6293\u53d6\u76d1\u63a7\u6570\u636e\u7aef\u70b9\u7684 tls \u8ba4\u8bc1\uff0c \u7531\u4e8e\u8bc1\u4e66 serverName \u548c etcd \u4e2d\u7b7e\u53d1\u7684\u53ef\u80fd\u4e0d\u5339\u914d\uff0c\u6240\u4ee5\u52a0\u4e0a\u4e86 insecureSkipVerify=true \u5173\u4e8e ServiceMonitor \u5c5e\u6027\u7684\u66f4\u591a\u7528\u6cd5\u53ef\u4ee5\u67e5\u770b\u6587\u6863\uff1a https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md \u4e86\u89e3\u66f4\u591a \u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a ServiceMonitor \u5bf9\u8c61\uff1a $ kubectl create -f prometheus-serviceMonitorEtcd.yaml servicemonitor.monitoring.coreos.com \"etcd-k8s\" created 3 \u521b\u5efa Service ServiceMonitor \u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u4f46\u662f\u73b0\u5728\u8fd8\u6ca1\u6709\u5173\u8054\u7684\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c\u6240\u4ee5\u9700\u8981\u6211\u4eec\u53bb\u624b\u52a8\u521b\u5efa\u4e00\u4e2a Service \u5bf9\u8c61\uff08prometheus-etcdService.yaml\uff09\uff1a apiVersion: v1 kind: Service metadata: name: etcd-k8s namespace: kube-system labels: k8s-app: etcd spec: type: ClusterIP clusterIP: None ports: - name: port port: 2379 protocol: TCP --- apiVersion: v1 kind: Endpoints metadata: name: etcd-k8s namespace: kube-system labels: k8s-app: etcd subsets: - addresses: - ip: 10.151.30.57 nodeName: etc-master ports: - name: port port: 2379 protocol: TCP \u6211\u4eec\u8fd9\u91cc\u521b\u5efa\u7684 Service \u6ca1\u6709\u91c7\u7528\u524d\u9762\u901a\u8fc7 label \u6807\u7b7e\u7684\u5f62\u5f0f\u53bb\u5339\u914d Pod \u7684\u505a\u6cd5\uff0c\u56e0\u4e3a\u524d\u9762\u6211\u4eec\u8bf4\u8fc7\u5f88\u591a\u65f6\u5019\u6211\u4eec\u521b\u5efa\u7684 etcd \u96c6\u7fa4\u662f\u72ec\u7acb\u4e8e\u96c6\u7fa4\u4e4b\u5916\u7684\uff0c \u8fd9\u79cd\u60c5\u51b5\u4e0b\u9762\u6211\u4eec\u5c31\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a Endpoints \uff0c \u8981\u6ce8\u610f metadata \u533a\u57df\u7684\u5185\u5bb9\u8981\u548c Service \u4fdd\u6301\u4e00\u81f4 \uff0c Service \u7684 clusterIP \u8bbe\u7f6e\u4e3a None \uff0c\u5bf9\u6539\u77e5\u8bc6\u70b9\u4e0d\u592a\u719f\u6089\u7684\uff0c\u53ef\u4ee5\u53bb\u67e5\u770b\u6211\u4eec\u524d\u9762\u5173\u4e8e Service \u90e8\u5206\u7684\u8bb2\u89e3 \u3002 Endpoints \u7684 subsets \u4e2d\u586b\u5199 etcd \u96c6\u7fa4\u7684\u5730\u5740\u5373\u53ef\uff0c \u6211\u4eec\u8fd9\u91cc\u662f\u5355\u8282\u70b9\u7684\uff0c\u586b\u5199\u4e00\u4e2a\u5373\u53ef \uff0c \u76f4\u63a5\u521b\u5efa\u8be5 Service \u8d44\u6e90\uff1a $ kubectl create -f prometheus-etcdService.yaml \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u4f1a\u513f\u53bb Prometheus \u7684 Dashboard \u4e2d\u67e5\u770b targets \uff0c\u4fbf\u4f1a\u6709 etcd \u7684\u76d1\u63a7\u9879\u4e86\uff1a \u53ef\u4ee5\u770b\u5230\u8fd8\u662f\u6709\u4e00\u4e2a\u660e\u663e\u7684\u9519\u8bef\uff0c\u548c\u6211\u4eec\u4e0a\u8282\u8bfe\u76d1\u63a7 kube-scheduler \u7684\u9519\u8bef\u6bd4\u8f83\u7c7b\u4f3c\u4e8e\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u7684 etcd \u7684\u662f\u76d1\u542c\u5728 127.0.0.1 \u8fd9\u4e2a IP \u4e0a\u9762\u7684\uff0c\u6240\u4ee5\u8bbf\u95ee\u4f1a\u62d2\u7edd\uff1a --listen-client-urls=https://127.0.0.1:2379 \u540c\u6837\u6211\u4eec\u53ea\u9700\u8981\u5728 /etc/kubernetes/manifest/ \u76ee\u5f55\u4e0b\u9762\uff08static pod \u9ed8\u8ba4\u7684\u76ee\u5f55\uff09\u7684 etcd.yaml \u6587\u4ef6\u4e2d\u5c06\u4e0a\u9762\u7684 listen-client-urls \u66f4\u6539\u6210 0.0.0.0 \u5373\u53ef\uff1a $ ls /etc/kubernetes/manifests/ etcd.yaml kube-apiserver.yaml kube-controller-manager.yaml kube-scheduler.yaml --listen-client-urls=https://0.0.0.0:2379 \u91cd\u542f etcd\uff0c\u751f\u6548\u540e\uff0c\u67e5\u770b etcd \u8fd9\u4e2a\u76d1\u63a7\u4efb\u52a1\u5c31\u6b63\u5e38\u4e86\uff1a \u6570\u636e\u91c7\u96c6\u5230\u540e\uff0c\u53ef\u4ee5\u5728 grafana \u4e2d\u5bfc\u5165\u7f16\u53f7\u4e3a 3070 \u7684 dashboard \uff0c\u83b7\u53d6\u5230 etcd \u7684\u76d1\u63a7\u56fe\u8868\u3002","title":"\u7b2c\u4e8c\u8282 \u4f7f\u7528 Prometheus Operator \u76d1\u63a7 etcd"},{"location":"chap4/13Adv_Prometheus_Operator_etcd/#prometheus-operator-etcd","text":"\u9664\u4e86 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u4e00\u4e9b\u8d44\u6e90\u5bf9\u8c61\u3001\u8282\u70b9\u4ee5\u53ca\u7ec4\u4ef6\u9700\u8981\u76d1\u63a7\uff0c\u6709\u7684\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u8fd8\u9700\u8981\u6839\u636e\u5b9e\u9645\u7684\u4e1a\u52a1\u9700\u6c42\u53bb\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u9879\uff0c\u6dfb\u52a0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u76d1\u63a7\u7684\u6b65\u9aa4\u4e5f\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002 \u7b2c\u4e00\u6b65 \u5efa\u7acb\u4e00\u4e2a ServiceMonitor \u5bf9\u8c61\uff0c\u7528\u4e8e Prometheus \u6dfb\u52a0\u76d1\u63a7\u9879 \u7b2c\u4e8c\u6b65 \u4e3a ServiceMonitor \u5bf9\u8c61\u5173\u8054 metrics \u6570\u636e\u63a5\u53e3\u7684\u4e00\u4e2a Service \u5bf9\u8c61 \u7b2c\u4e09\u6b65 \u786e\u4fdd Service \u5bf9\u8c61\u53ef\u4ee5\u6b63\u786e\u83b7\u53d6\u5230 metrics \u6570\u636e \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u4e3a\u5927\u5bb6\u6f14\u793a\u5982\u4f55\u6dfb\u52a0 etcd \u96c6\u7fa4\u7684\u76d1\u63a7\u3002 \u65e0\u8bba\u662f Kubernetes \u96c6\u7fa4\u5916\u7684\u8fd8\u662f\u4f7f\u7528 Kubeadm \u5b89\u88c5\u5728\u96c6\u7fa4\u5185\u90e8\u7684 etcd \u96c6\u7fa4\uff0c\u6211\u4eec\u8fd9\u91cc\u90fd\u5c06\u5176\u89c6\u4f5c\u96c6\u7fa4\u5916\u7684\u72ec\u7acb\u96c6\u7fa4\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4e8c\u8005\u7684\u4f7f\u7528\u65b9\u6cd5\u6ca1\u4ec0\u4e48\u7279\u6b8a\u4e4b\u5904\u3002","title":"\u7b2c\u4e8c\u8282 \u4f7f\u7528 Prometheus Operator \u76d1\u63a7 etcd"},{"location":"chap4/13Adv_Prometheus_Operator_etcd/#1-etcd","text":"\u5bf9\u4e8e etcd \u96c6\u7fa4\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u5b89\u5168\u90fd\u4f1a\u5f00\u542f https \u8bc1\u4e66\u8ba4\u8bc1\u7684\u65b9\u5f0f\uff0c\u6240\u4ee5\u8981\u60f3\u8ba9 Prometheus \u8bbf\u95ee\u5230 etcd \u96c6\u7fa4\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5c31\u9700\u8981\u63d0\u4f9b\u76f8\u5e94\u7684\u8bc1\u4e66\u6821\u9a8c\u3002 \u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u6f14\u793a\u73af\u5883\u4f7f\u7528\u7684\u662f Kubeadm \u642d\u5efa\u7684\u96c6\u7fa4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl \u5de5\u5177\u53bb\u83b7\u53d6 etcd \u542f\u52a8\u7684\u65f6\u5019\u4f7f\u7528\u7684\u8bc1\u4e66\u8def\u5f84\uff1a $ kubectl get pods -n kube-system NAME READY STATUS RESTARTS AGE etcd-master 1/1 Running 0 2h $ kubectl get pod etcd-master -n kube-system -o yaml ...... spec: containers: - command: - etcd - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt - --listen-client-urls=https://127.0.0.1:2379 - --advertise-client-urls=https://127.0.0.1:2379 - --client-cert-auth=true - --peer-client-cert-auth=true - --data-dir=/var/lib/etcd - --cert-file=/etc/kubernetes/pki/etcd/server.crt - --key-file=/etc/kubernetes/pki/etcd/server.key - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt image: k8s.gcr.io/etcd-amd64:3.1.12 imagePullPolicy: IfNotPresent livenessProbe: exec: command: - /bin/sh - -ec - ETCDCTL_API=3 etcdctl --endpoints=127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt --key=/etc/kubernetes/pki/etcd/healthcheck-client.key get foo failureThreshold: 8 initialDelaySeconds: 15 periodSeconds: 10 successThreshold: 1 timeoutSeconds: 15 name: etcd resources: {} terminationMessagePath: /dev/termination-log terminationMessagePolicy: File volumeMounts: - mountPath: /var/lib/etcd name: etcd-data - mountPath: /etc/kubernetes/pki/etcd name: etcd-certs ...... tolerations: - effect: NoExecute operator: Exists volumes: - hostPath: path: /var/lib/etcd type: DirectoryOrCreate name: etcd-data - hostPath: path: /etc/kubernetes/pki/etcd type: DirectoryOrCreate name: etcd-certs ...... - o yaml Output format \u6211\u4eec\u53ef\u4ee5\u770b\u5230 etcd \u4f7f\u7528\u7684\u8bc1\u4e66\u90fd\u5bf9\u5e94\u5728\u8282\u70b9\u7684 /etc/kubernetes/pki/etcd \u8fd9\u4e2a\u8def\u5f84\u4e0b\u9762\uff0c\u6240\u4ee5\u9996\u5148\u6211\u4eec\u5c06\u9700\u8981\u4f7f\u7528\u5230\u7684\u8bc1\u4e66\u901a\u8fc7 secret \u5bf9\u8c61\u4fdd\u5b58\u5230\u96c6\u7fa4\u4e2d\u53bb\uff1a (\u5728 etcd \u8fd0\u884c\u7684\u8282\u70b9) $ kubectl -n monitoring create secret generic etcd-certs --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.crt --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.key --from-file=/etc/kubernetes/pki/etcd/ca.crt secret \"etcd-certs\" created secret generic Create a secret based on a file, directory, or specified literal value. When creating a secret based on a file, the key will default to the basename of the file, and the value will default to the file content. If the basename is an invalid key or you wish to chose your own, you may specify an alternate key. kubectl create secret generic my-secret --from-file=path/to/bar --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.crt --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.key --from-file=/etc/kubernetes/pki/etcd/ca.crts \u7136\u540e\u5c06\u4e0a\u9762\u521b\u5efa\u7684 etcd-certs \u5bf9\u8c61\u914d\u7f6e\u5230 prometheus \u8d44\u6e90\u5bf9\u8c61\u4e2d\uff0c\u76f4\u63a5\u66f4\u65b0 prometheus \u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a $ kubectl edit prometheus k8s -n monitoring -n monitoring namespace \u6dfb\u52a0\u5982\u4e0b\u7684 secrets \u5c5e\u6027\uff1a nodeSelector: beta.kubernetes.io/os: linux replicas: 2 secrets: - etcd-certs \u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Prometheus \u7684 Pod \u4e2d\u83b7\u53d6\u5230\u4e0a\u9762\u521b\u5efa\u7684 etcd \u8bc1\u4e66\u6587\u4ef6\u4e86\uff0c\u5177\u4f53\u7684\u8def\u5f84\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165 Pod \u4e2d\u67e5\u770b\uff1a $ kubectl exec -it prometheus-k8s-0 /bin/sh -n monitoring Defaulting container name to prometheus. Use 'kubectl describe pod/prometheus-k8s-0 -n monitoring' to see all of the containers in this pod. $ ls /etc/prometheus/secrets/etcd-certs/ ca.crt healthcheck-client.crt healthcheck-client.key","title":"1 etcd \u8bc1\u4e66"},{"location":"chap4/13Adv_Prometheus_Operator_etcd/#2-servicemonitor","text":"\u73b0\u5728 Prometheus \u8bbf\u95ee etcd \u96c6\u7fa4\u7684\u8bc1\u4e66\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u521b\u5efa ServiceMonitor \u5bf9\u8c61\u5373\u53ef\uff08 prometheus-serviceMonitorEtcd.yaml \uff09 apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: etcd-k8s namespace: monitoring labels: k8s-app: etcd-k8s spec: jobLabel: k8s-app endpoints: - port: port interval: 30s scheme: https tlsConfig: caFile: /etc/prometheus/secrets/etcd-certs/ca.crt certFile: /etc/kubernetes/pki/etcd/healthcheck-client.crt keyFile: /etc/kubernetes/pki/etcd/healthcheck-client.key insecureSkipVerify: true selector: matchLabels: k8s-app: etcd namespaceSelector: matchNames: - kube-system \u4e0a\u9762\u6211\u4eec\u5728 monitoring \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a etcd-k8s \u7684 ServiceMonitor \u5bf9\u8c61\uff0c\u57fa\u672c\u5c5e\u6027\u548c\u524d\u9762\u7ae0\u8282\u4e2d\u7684\u4e00\u81f4\uff0c \u5339\u914d kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 k8s-app=etcd \u8fd9\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c \u548c\u524d\u9762\u4e0d\u592a\u4e00\u6837\u7684\u5730\u65b9\u662f endpoints \u5c5e\u6027\u7684\u5199\u6cd5\uff0c\u914d\u7f6e\u4e0a\u8bbf\u95ee etcd \u7684\u76f8\u5173\u8bc1\u4e66\uff0c endpoints \u5c5e\u6027\u4e0b\u9762\u53ef\u4ee5\u914d\u7f6e\u5f88\u591a\u6293\u53d6\u7684\u53c2\u6570\uff0c\u6bd4\u5982 relabel \u3001 proxyUrl \uff0c tlsConfig \u8868\u793a\u7528\u4e8e\u914d\u7f6e\u6293\u53d6\u76d1\u63a7\u6570\u636e\u7aef\u70b9\u7684 tls \u8ba4\u8bc1\uff0c \u7531\u4e8e\u8bc1\u4e66 serverName \u548c etcd \u4e2d\u7b7e\u53d1\u7684\u53ef\u80fd\u4e0d\u5339\u914d\uff0c\u6240\u4ee5\u52a0\u4e0a\u4e86 insecureSkipVerify=true \u5173\u4e8e ServiceMonitor \u5c5e\u6027\u7684\u66f4\u591a\u7528\u6cd5\u53ef\u4ee5\u67e5\u770b\u6587\u6863\uff1a https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md \u4e86\u89e3\u66f4\u591a \u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a ServiceMonitor \u5bf9\u8c61\uff1a $ kubectl create -f prometheus-serviceMonitorEtcd.yaml servicemonitor.monitoring.coreos.com \"etcd-k8s\" created","title":"2 \u521b\u5efa ServiceMonitor"},{"location":"chap4/13Adv_Prometheus_Operator_etcd/#3-service","text":"ServiceMonitor \u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u4f46\u662f\u73b0\u5728\u8fd8\u6ca1\u6709\u5173\u8054\u7684\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c\u6240\u4ee5\u9700\u8981\u6211\u4eec\u53bb\u624b\u52a8\u521b\u5efa\u4e00\u4e2a Service \u5bf9\u8c61\uff08prometheus-etcdService.yaml\uff09\uff1a apiVersion: v1 kind: Service metadata: name: etcd-k8s namespace: kube-system labels: k8s-app: etcd spec: type: ClusterIP clusterIP: None ports: - name: port port: 2379 protocol: TCP --- apiVersion: v1 kind: Endpoints metadata: name: etcd-k8s namespace: kube-system labels: k8s-app: etcd subsets: - addresses: - ip: 10.151.30.57 nodeName: etc-master ports: - name: port port: 2379 protocol: TCP \u6211\u4eec\u8fd9\u91cc\u521b\u5efa\u7684 Service \u6ca1\u6709\u91c7\u7528\u524d\u9762\u901a\u8fc7 label \u6807\u7b7e\u7684\u5f62\u5f0f\u53bb\u5339\u914d Pod \u7684\u505a\u6cd5\uff0c\u56e0\u4e3a\u524d\u9762\u6211\u4eec\u8bf4\u8fc7\u5f88\u591a\u65f6\u5019\u6211\u4eec\u521b\u5efa\u7684 etcd \u96c6\u7fa4\u662f\u72ec\u7acb\u4e8e\u96c6\u7fa4\u4e4b\u5916\u7684\uff0c \u8fd9\u79cd\u60c5\u51b5\u4e0b\u9762\u6211\u4eec\u5c31\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a Endpoints \uff0c \u8981\u6ce8\u610f metadata \u533a\u57df\u7684\u5185\u5bb9\u8981\u548c Service \u4fdd\u6301\u4e00\u81f4 \uff0c Service \u7684 clusterIP \u8bbe\u7f6e\u4e3a None \uff0c\u5bf9\u6539\u77e5\u8bc6\u70b9\u4e0d\u592a\u719f\u6089\u7684\uff0c\u53ef\u4ee5\u53bb\u67e5\u770b\u6211\u4eec\u524d\u9762\u5173\u4e8e Service \u90e8\u5206\u7684\u8bb2\u89e3 \u3002 Endpoints \u7684 subsets \u4e2d\u586b\u5199 etcd \u96c6\u7fa4\u7684\u5730\u5740\u5373\u53ef\uff0c \u6211\u4eec\u8fd9\u91cc\u662f\u5355\u8282\u70b9\u7684\uff0c\u586b\u5199\u4e00\u4e2a\u5373\u53ef \uff0c \u76f4\u63a5\u521b\u5efa\u8be5 Service \u8d44\u6e90\uff1a $ kubectl create -f prometheus-etcdService.yaml \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u4f1a\u513f\u53bb Prometheus \u7684 Dashboard \u4e2d\u67e5\u770b targets \uff0c\u4fbf\u4f1a\u6709 etcd \u7684\u76d1\u63a7\u9879\u4e86\uff1a \u53ef\u4ee5\u770b\u5230\u8fd8\u662f\u6709\u4e00\u4e2a\u660e\u663e\u7684\u9519\u8bef\uff0c\u548c\u6211\u4eec\u4e0a\u8282\u8bfe\u76d1\u63a7 kube-scheduler \u7684\u9519\u8bef\u6bd4\u8f83\u7c7b\u4f3c\u4e8e\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u7684 etcd \u7684\u662f\u76d1\u542c\u5728 127.0.0.1 \u8fd9\u4e2a IP \u4e0a\u9762\u7684\uff0c\u6240\u4ee5\u8bbf\u95ee\u4f1a\u62d2\u7edd\uff1a --listen-client-urls=https://127.0.0.1:2379 \u540c\u6837\u6211\u4eec\u53ea\u9700\u8981\u5728 /etc/kubernetes/manifest/ \u76ee\u5f55\u4e0b\u9762\uff08static pod \u9ed8\u8ba4\u7684\u76ee\u5f55\uff09\u7684 etcd.yaml \u6587\u4ef6\u4e2d\u5c06\u4e0a\u9762\u7684 listen-client-urls \u66f4\u6539\u6210 0.0.0.0 \u5373\u53ef\uff1a $ ls /etc/kubernetes/manifests/ etcd.yaml kube-apiserver.yaml kube-controller-manager.yaml kube-scheduler.yaml --listen-client-urls=https://0.0.0.0:2379 \u91cd\u542f etcd\uff0c\u751f\u6548\u540e\uff0c\u67e5\u770b etcd \u8fd9\u4e2a\u76d1\u63a7\u4efb\u52a1\u5c31\u6b63\u5e38\u4e86\uff1a \u6570\u636e\u91c7\u96c6\u5230\u540e\uff0c\u53ef\u4ee5\u5728 grafana \u4e2d\u5bfc\u5165\u7f16\u53f7\u4e3a 3070 \u7684 dashboard \uff0c\u83b7\u53d6\u5230 etcd \u7684\u76d1\u63a7\u56fe\u8868\u3002","title":"3 \u521b\u5efa Service"},{"location":"chap4/14Adv_Prometheus_Operator_alarm/","text":"\u7b2c\u4e09\u8282 Prometheus Operator \u81ea\u5b9a\u4e49\u62a5\u8b66 1 \u914d\u7f6e PrometheusRule \u73b0\u5728\u6211\u4eec\u77e5\u9053\u600e\u4e48\u81ea\u5b9a\u4e49\u4e00\u4e2a ServiceMonitor \u5bf9\u8c61\u4e86\uff0c \u4f46\u662f\u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\u7684\u8bdd\u5462 \uff1f\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u53bb\u67e5\u770b Prometheus Dashboard \u7684 Alert \u9875\u9762\u4e0b\u9762\u5c31\u5df2\u7ecf\u6709\u4e00\u4e9b\u62a5\u8b66\u89c4\u5219\u4e86\uff0c\u8fd8\u6709\u4e00\u4e9b\u662f\u5df2\u7ecf\u89e6\u53d1\u89c4\u5219\u7684 \u4f46\u662f\u8fd9\u4e9b\u62a5\u8b66\u4fe1\u606f\u662f\u54ea\u91cc\u6765\u7684\u5462\uff1f\u4ed6\u4eec\u5e94\u8be5\u7528\u600e\u6837\u7684\u65b9\u5f0f\u901a\u77e5\u6211\u4eec\u5462\uff1f \u6211\u4eec\u77e5\u9053\u4e4b\u524d\u6211\u4eec\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u65b9\u5f0f\u53ef\u4ee5\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u4e4b\u4e2d\u6307\u5b9a AlertManager \u5b9e\u4f8b\u548c \u62a5\u8b66\u7684 rules \u6587\u4ef6\uff0c\u73b0\u5728\u6211\u4eec\u901a\u8fc7 Operator \u90e8\u7f72\u7684\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u5728 Prometheus Dashboard \u7684 Config \u9875\u9762\u4e0b\u9762\u67e5\u770b\u5173\u4e8e AlertManager \u7684\u914d\u7f6e\uff1a alerting: alert_relabel_configs: - separator: ; regex: prometheus_replica replacement: $1 action: labeldrop alertmanagers: - kubernetes_sd_configs: - role: endpoints namespaces: names: - monitoring scheme: http path_prefix: / timeout: 10s relabel_configs: - source_labels: [__meta_kubernetes_service_name] separator: ; regex: alertmanager-main replacement: $1 action: keep - source_labels: [__meta_kubernetes_endpoint_port_name] separator: ; regex: web replacement: $1 action: keep rule_files: - /etc/prometheus/rules/prometheus-k8s-rulefiles-0/*.yaml \u4e0a\u9762 alertmanagers \u5b9e\u4f8b\u7684\u914d\u7f6e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u662f\u901a\u8fc7\u89d2\u8272\u4e3a endpoints \u7684 kubernetes \u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236\u83b7\u53d6\u7684\uff0c\u5339\u914d\u7684\u662f\u670d\u52a1\u540d\u4e3a alertmanager-main \uff0c\u7aef\u53e3\u540d\u672a web \u7684 Service \u670d\u52a1\uff0c\u6211\u4eec\u67e5\u770b\u4e0b alertmanager-main \u8fd9\u4e2a Service \uff1a kubectl describe svc alertmanager-main -n monitoring Name: alertmanager-main Namespace: monitoring Labels: alertmanager=main Annotations: kubectl.kubernetes.io/last-applied-configuration={\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"alertmanager\":\"main\"},\"name\":\"alertmanager-main\",\"namespace\":\"monitoring\"},... Selector: alertmanager=main,app=alertmanager Type: NodePort IP: 10.104.156.29 Port: web 9093/TCP TargetPort: web/TCP NodePort: web 31918/TCP Endpoints: 10.244.2.34:9093,10.244.2.37:9093,10.244.4.109:9093 Session Affinity: None External Traffic Policy: Cluster Events: <none> \u53ef\u4ee5\u770b\u5230\u670d\u52a1\u540d\u6b63\u662f alertmanager-main \uff0c Port \u5b9a\u4e49\u7684\u540d\u79f0\u4e5f\u662f web \uff0c\u7b26\u5408\u4e0a\u9762\u7684\u89c4\u5219\uff0c\u6240\u4ee5 Prometheus \u548c AlertManager \u7ec4\u4ef6\u5c31\u6b63\u786e\u5173\u8054\u4e0a\u4e86\u3002\u800c\u5bf9\u5e94\u7684\u62a5\u8b66\u89c4\u5219\u6587\u4ef6\u4f4d\u4e8e\uff1a /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ \u76ee\u5f55\u4e0b\u9762\u6240\u6709\u7684 YAML \u6587\u4ef6\u3002\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165 Prometheus \u7684 Pod \u4e2d\u9a8c\u8bc1\u4e0b\u8be5\u76ee\u5f55\u4e0b\u9762\u662f\u5426\u6709 YAML \u6587\u4ef6\uff1a $ kubectl exec -it prometheus-k8s-0 /bin/sh -n monitoring Defaulting container name to prometheus. Use 'kubectl describe pod/prometheus-k8s-0 -n monitoring' to see all of the containers in this pod. /prometheus $ ls /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ monitoring-prometheus-k8s-rules.yaml /prometheus $ cat /etc/prometheus/rules/prometheus-k8s-rulefiles-0/monitoring-pr ometheus-k8s-rules.yaml groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate ...... \u8fd9\u4e2a YAML \u6587\u4ef6\u5b9e\u9645\u4e0a\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684\u4e00\u4e2a PrometheusRule \u6587\u4ef6\u5305\u542b\u7684\uff1a $ cat prometheus-rules.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: prometheus-k8s-rules namespace: monitoring spec: groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate \u6211\u4eec\u8fd9\u91cc\u7684 PrometheusRule \u7684 name \u4e3a prometheus-k8s-rules \uff0c namespace \u4e3a monitoring . \u6211\u4eec\u53ef\u4ee5\u731c\u60f3\u5230\u6211\u4eec\u521b\u5efa\u4e00\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u540e\uff0c\u4f1a\u81ea\u52a8\u5728\u4e0a\u9762\u7684 prometheus-k8s-rulefiles-0 \u76ee\u5f55\u4e0b\u9762\u751f\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684 <namespace>-<name>.yaml \u6587\u4ef6\uff0c \u6240\u4ee5\u5982\u679c\u4ee5\u540e\u6211\u4eec\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u62a5\u8b66\u9009\u9879\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48 Prometheus \u80fd\u591f\u8bc6\u522b\u8fd9\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u5462\uff1f\u8fd9\u5c31\u9700\u8981\u67e5\u770b\u6211\u4eec\u521b\u5efa\u7684 prometheus \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u91cc\u9762\u6709\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u5c5e\u6027 ruleSelector \uff0c\u7528\u6765\u5339\u914d rule \u89c4\u5219\u7684\u8fc7\u6ee4\u5668\uff0c\u8981\u6c42\u5339\u914d\u5177\u6709 prometheus=k8s \u548c role=alert-rules \u6807\u7b7e\u7684 PrometheusRule \u8d44\u6e90\u5bf9\u8c61. ruleSelector: matchLabels: prometheus: k8s role: alert-rules \u6240\u4ee5\u6211\u4eec\u8981\u60f3\u81ea\u5b9a\u4e49\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\uff0c\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5177\u6709 prometheus=k8s \u548c role=alert-rules \u6807\u7b7e\u7684 PrometheusRule \u5bf9\u8c61\u5c31\u884c\u4e86\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a etcd \u662f\u5426\u53ef\u7528\u7684\u62a5\u8b66\uff0c\u6211\u4eec\u77e5\u9053 etcd \u6574\u4e2a\u96c6\u7fa4\u6709\u4e00\u534a\u4ee5\u4e0a\u7684\u8282\u70b9\u53ef\u7528\u7684\u8bdd\u96c6\u7fa4\u5c31\u662f\u53ef\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5224\u65ad\u5982\u679c\u4e0d\u53ef\u7528\u7684 etcd \u6570\u91cf\u8d85\u8fc7\u4e86\u4e00\u534a\u90a3\u4e48\u5c31\u89e6\u53d1\u62a5\u8b66\uff0c\u521b\u5efa\u6587\u4ef6 prometheus-etcdRules.yaml \uff1a apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s // `prometheus=k8s` \u548c `role=alert-rules` role: alert-rules name: etcd-rules namespace: monitoring spec: groups: - name: etcd rules: - alert: EtcdClusterUnavailable annotations: summary: etcd cluster small description: If one more etcd peer goes down the cluster will be unavailable expr: | count(up{job=\"etcd\"} == 0) > (count(up{job=\"etcd\"}) / 2 - 1) for: 3m labels: severity: critical \u6ce8\u610f label \u6807\u7b7e\u4e00\u5b9a\u81f3\u5c11\u8981\u6709 prometheus=k8s \u548c role=alert-rules \uff0c\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u4f1a\u513f\u518d\u53bb\u5bb9\u5668\u4e2d\u67e5\u770b\u4e0b rules \u6587\u4ef6\u5939\uff1a kubectl exec -it prometheus-k8s-0 /bin/sh -n monitoring Defaulting container name to prometheus. Use 'kubectl describe pod/prometheus-k8s-0 -n monitoring' to see all of the containers in this pod. /prometheus $ ls /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ monitoring-etcd-rules.yaml monitoring-prometheus-k8s-rules.yaml \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521b\u5efa\u7684 rule \u6587\u4ef6\u5df2\u7ecf\u88ab\u6ce8\u5165\u5230\u4e86\u5bf9\u5e94\u7684 rulefiles \u6587\u4ef6\u5939\u4e0b\u9762\u4e86\uff0c\u8bc1\u660e\u6211\u4eec\u4e0a\u9762\u7684\u8bbe\u60f3\u662f\u6b63\u786e\u7684\u3002\u7136\u540e\u518d\u53bb Prometheus Dashboard \u7684 Alert \u9875\u9762\u4e0b\u9762\u5c31\u53ef\u4ee5\u67e5\u770b\u5230\u4e0a\u9762\u6211\u4eec\u65b0\u5efa\u7684\u62a5\u8b66\u89c4\u5219\u4e86\uff1a 2 \u914d\u7f6e\u62a5\u8b66 \u6211\u4eec\u77e5\u9053\u4e86\u5982\u4f55\u53bb\u6dfb\u52a0\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\u914d\u7f6e\u9879\uff0c\u4f46\u662f\u8fd9\u4e9b\u62a5\u8b66\u4fe1\u606f\u7528\u600e\u6837\u7684\u65b9\u5f0f\u53bb\u53d1\u9001\u5462\uff1f\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u77e5\u9053\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 AlertManager \u7684\u914d\u7f6e\u6587\u4ef6\u53bb\u914d\u7f6e\u5404\u79cd\u62a5\u8b66\u63a5\u6536\u5668\uff0c\u73b0\u5728\u6211\u4eec\u662f\u901a\u8fc7 Operator \u63d0\u4f9b\u7684 alertmanager \u8d44\u6e90\u5bf9\u8c61\u521b\u5efa\u7684\u7ec4\u4ef6\uff0c\u5e94\u8be5\u600e\u6837\u53bb\u4fee\u6539\u914d\u7f6e\u5462\uff1f \u9996\u5148\u6211\u4eec\u5c06 alertmanager-main \u8fd9\u4e2a Service \u6539\u4e3a NodePort \u7c7b\u578b\u7684 Service \u4fee\u6539\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u5728\u9875\u9762\u4e0a\u7684 status \u8def\u5f84\u4e0b\u9762\u67e5\u770b AlertManager \u7684\u914d\u7f6e\u4fe1\u606f: \u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\u5b9e\u9645\u4e0a\u662f\u6765\u81ea\u4e8e\u6211\u4eec\u4e4b\u524d\u5728 prometheus-operator/contrib/kube-prometheus/manifests \u76ee\u5f55\u4e0b\u9762\u521b\u5efa\u7684 alertmanager-secret.yaml \u6587\u4ef6\uff1a apiVersion: v1 data: alertmanager.yaml: Imdsb2JhbCI6IAogICJyZXNvbHZlX3RpbWVvdXQiOiAiNW0iCiJyZWNlaXZlcnMiOiAKLSAibmFtZSI6ICJudWxsIgoicm91dGUiOiAKICAiZ3JvdXBfYnkiOiAKICAtICJqb2IiCiAgImdyb3VwX2ludGVydmFsIjogIjVtIgogICJncm91cF93YWl0IjogIjMwcyIKICAicmVjZWl2ZXIiOiAibnVsbCIKICAicmVwZWF0X2ludGVydmFsIjogIjEyaCIKICAicm91dGVzIjogCiAgLSAibWF0Y2giOiAKICAgICAgImFsZXJ0bmFtZSI6ICJEZWFkTWFuc1N3aXRjaCIKICAgICJyZWNlaXZlciI6ICJudWxsIg== kind: Secret metadata: name: alertmanager-main namespace: monitoring type: Opaque \u53ef\u4ee5\u5c06 alertmanager.yaml \u5bf9\u5e94\u7684 value \u503c\u505a\u4e00\u4e2a base64 \u89e3\u7801\uff1a $ echo \"Imdsb2JhbCI6IAogICJyZXNvbHZlX3RpbWVvdXQiOiAiNW0iCiJyZWNlaXZlcnMiOiAKLSAibmFtZSI6ICJudWxsIgoicm91dGUiOiAKICAiZ3JvdXBfYnkiOiAKICAtICJqb2IiCiAgImdyb3VwX2ludGVydmFsIjogIjVtIgogICJncm91cF93YWl0IjogIjMwcyIKICAicmVjZWl2ZXIiOiAibnVsbCIKICAicmVwZWF0X2ludGVydmFsIjogIjEyaCIKICAicm91dGVzIjogCiAgLSAibWF0Y2giOiAKICAgICAgImFsZXJ0bmFtZSI6ICJEZWFkTWFuc1N3aXRjaCIKICAgICJyZWNlaXZlciI6ICJudWxsIg==\" | base64 -D \"global\": \"resolve_timeout\": \"5m\" \"receivers\": - \"name\": \"null\" \"route\": \"group_by\": - \"job\" \"group_interval\": \"5m\" \"group_wait\": \"30s\" \"receiver\": \"null\" \"repeat_interval\": \"12h\" \"routes\": - \"match\": \"alertname\": \"DeadMansSwitch\" \"receiver\": \"null\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5185\u5bb9\u548c\u4e0a\u9762\u67e5\u770b\u7684\u914d\u7f6e\u4fe1\u606f\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u8981\u6dfb\u52a0\u81ea\u5df1\u7684\u63a5\u6536\u5668\uff0c\u6216\u8005\u6a21\u677f\u6d88\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u6539\u8fd9\u4e2a\u6587\u4ef6\uff1a global: resolve_timeout: 5m smtp_smarthost: 'smtp.gmail.com' smtp_from: 'xichao2014@gmail.com' smtp_auth_username: 'xichao2014@gmail.com' smtp_auth_password: '<\u90ae\u7bb1\u5bc6\u7801>' smtp_hello: 'gmail.com' smtp_require_tls: false route: group_by: ['job', 'severity'] group_wait: 30s group_interval: 5m repeat_interval: 12h receiver: default routes: - receiver: webhook match: alertname: CoreDNSDown receivers: - name: 'default' email_configs: - to: 'xichao2017@gmail.com' send_resolved: true - name: 'webhook' webhook_configs: - url: 'http://dingtalk-hook.kube-ops:5000' send_resolved: true \u5c06\u4e0a\u9762\u6587\u4ef6\u4fdd\u5b58\u4e3a alertmanager.yaml \uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e2a\u6587\u4ef6\u521b\u5efa\u4e00\u4e2a Secret \u5bf9\u8c61\uff1a # \u5148\u5c06\u4e4b\u524d\u7684 secret \u5bf9\u8c61\u5220\u9664 $ kubectl delete secret alertmanager-main -n monitoring secret \"alertmanager-main\" deleted $ kubectl create secret generic alertmanager-main --from-file=alertmanager.yaml -n monitoring secret \"alertmanager-main\" created \u6211\u4eec\u6dfb\u52a0\u4e86\u4e24\u4e2a\u63a5\u6536\u5668\uff0c\u9ed8\u8ba4\u7684\u901a\u8fc7\u90ae\u7bb1\u8fdb\u884c\u53d1\u9001\uff0c\u5bf9\u4e8e CoreDNSDown \u8fd9\u4e2a\u62a5\u8b66\u6211\u4eec\u901a\u8fc7 webhook \u6765\u8fdb\u884c\u53d1\u9001\uff0c\u8fd9\u4e2a webhook \u5c31\u662f\u6211\u4eec\u524d\u9762\u8bfe\u7a0b\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e2a\u9489\u9489\u63a5\u6536\u7684 Server \uff0c\u4e0a\u9762\u7684\u6b65\u9aa4\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u5f88\u5feb\u6211\u4eec\u5c31\u4f1a\u6536\u5230\u4e00\u6761\u9489\u9489\u6d88\u606f\uff1a \u540c\u6837\u90ae\u7bb1\u4e2d\u4e5f\u4f1a\u6536\u5230\u62a5\u8b66\u4fe1\u606f\uff1a \u6211\u4eec\u518d\u6b21\u67e5\u770b AlertManager \u9875\u9762\u7684 status \u9875\u9762\u7684\u914d\u7f6e\u4fe1\u606f\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u53d8\u6210\u4e0a\u9762\u6211\u4eec\u7684\u914d\u7f6e\u4fe1\u606f\u4e86\uff1a Config AlertManager \u914d\u7f6e\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f( .tmpl\u6587\u4ef6 )\uff0c\u8fd9\u4e9b\u6a21\u677f\u53ef\u4ee5\u4e0e alertmanager.yaml \u914d\u7f6e\u6587\u4ef6\u4e00\u8d77\u6dfb\u52a0\u5230 Secret \u5bf9\u8c61\u4e2d\uff0c\u6bd4\u5982\uff1a apiVersion\uff1av1 kind\uff1asecret metadata\uff1a name\uff1aalertmanager-example data\uff1a alertmanager.yaml\uff1a{BASE64_CONFIG} template_1.tmpl\uff1a{BASE64_TEMPLATE_1} template_2.tmpl\uff1a{BASE64_TEMPLATE_2} ... \u6a21\u677f\u4f1a\u88ab\u653e\u7f6e\u5230\u4e0e\u914d\u7f6e\u6587\u4ef6\u76f8\u540c\u7684\u8def\u5f84\uff0c\u5f53\u7136\u8981\u4f7f\u7528\u8fd9\u4e9b\u6a21\u677f\u6587\u4ef6\uff0c\u8fd8\u9700\u8981\u5728 alertmanager.yam l \u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\uff1a templates: - '*.tmpl' \u521b\u5efa\u6210\u529f\u540e\uff0c Secret \u5bf9\u8c61\u5c06\u4f1a\u6302\u8f7d\u5230 AlertManager \u5bf9\u8c61\u521b\u5efa\u7684 AlertManager Pod \u4e2d\u53bb\u3002","title":"\u7b2c\u4e09\u8282 Prometheus Operator \u81ea\u5b9a\u4e49\u62a5\u8b66"},{"location":"chap4/14Adv_Prometheus_Operator_alarm/#prometheus-operator","text":"","title":"\u7b2c\u4e09\u8282 Prometheus Operator \u81ea\u5b9a\u4e49\u62a5\u8b66"},{"location":"chap4/14Adv_Prometheus_Operator_alarm/#1-prometheusrule","text":"\u73b0\u5728\u6211\u4eec\u77e5\u9053\u600e\u4e48\u81ea\u5b9a\u4e49\u4e00\u4e2a ServiceMonitor \u5bf9\u8c61\u4e86\uff0c \u4f46\u662f\u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\u7684\u8bdd\u5462 \uff1f\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u53bb\u67e5\u770b Prometheus Dashboard \u7684 Alert \u9875\u9762\u4e0b\u9762\u5c31\u5df2\u7ecf\u6709\u4e00\u4e9b\u62a5\u8b66\u89c4\u5219\u4e86\uff0c\u8fd8\u6709\u4e00\u4e9b\u662f\u5df2\u7ecf\u89e6\u53d1\u89c4\u5219\u7684 \u4f46\u662f\u8fd9\u4e9b\u62a5\u8b66\u4fe1\u606f\u662f\u54ea\u91cc\u6765\u7684\u5462\uff1f\u4ed6\u4eec\u5e94\u8be5\u7528\u600e\u6837\u7684\u65b9\u5f0f\u901a\u77e5\u6211\u4eec\u5462\uff1f \u6211\u4eec\u77e5\u9053\u4e4b\u524d\u6211\u4eec\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u65b9\u5f0f\u53ef\u4ee5\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u4e4b\u4e2d\u6307\u5b9a AlertManager \u5b9e\u4f8b\u548c \u62a5\u8b66\u7684 rules \u6587\u4ef6\uff0c\u73b0\u5728\u6211\u4eec\u901a\u8fc7 Operator \u90e8\u7f72\u7684\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u5728 Prometheus Dashboard \u7684 Config \u9875\u9762\u4e0b\u9762\u67e5\u770b\u5173\u4e8e AlertManager \u7684\u914d\u7f6e\uff1a alerting: alert_relabel_configs: - separator: ; regex: prometheus_replica replacement: $1 action: labeldrop alertmanagers: - kubernetes_sd_configs: - role: endpoints namespaces: names: - monitoring scheme: http path_prefix: / timeout: 10s relabel_configs: - source_labels: [__meta_kubernetes_service_name] separator: ; regex: alertmanager-main replacement: $1 action: keep - source_labels: [__meta_kubernetes_endpoint_port_name] separator: ; regex: web replacement: $1 action: keep rule_files: - /etc/prometheus/rules/prometheus-k8s-rulefiles-0/*.yaml \u4e0a\u9762 alertmanagers \u5b9e\u4f8b\u7684\u914d\u7f6e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u662f\u901a\u8fc7\u89d2\u8272\u4e3a endpoints \u7684 kubernetes \u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236\u83b7\u53d6\u7684\uff0c\u5339\u914d\u7684\u662f\u670d\u52a1\u540d\u4e3a alertmanager-main \uff0c\u7aef\u53e3\u540d\u672a web \u7684 Service \u670d\u52a1\uff0c\u6211\u4eec\u67e5\u770b\u4e0b alertmanager-main \u8fd9\u4e2a Service \uff1a kubectl describe svc alertmanager-main -n monitoring Name: alertmanager-main Namespace: monitoring Labels: alertmanager=main Annotations: kubectl.kubernetes.io/last-applied-configuration={\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"alertmanager\":\"main\"},\"name\":\"alertmanager-main\",\"namespace\":\"monitoring\"},... Selector: alertmanager=main,app=alertmanager Type: NodePort IP: 10.104.156.29 Port: web 9093/TCP TargetPort: web/TCP NodePort: web 31918/TCP Endpoints: 10.244.2.34:9093,10.244.2.37:9093,10.244.4.109:9093 Session Affinity: None External Traffic Policy: Cluster Events: <none> \u53ef\u4ee5\u770b\u5230\u670d\u52a1\u540d\u6b63\u662f alertmanager-main \uff0c Port \u5b9a\u4e49\u7684\u540d\u79f0\u4e5f\u662f web \uff0c\u7b26\u5408\u4e0a\u9762\u7684\u89c4\u5219\uff0c\u6240\u4ee5 Prometheus \u548c AlertManager \u7ec4\u4ef6\u5c31\u6b63\u786e\u5173\u8054\u4e0a\u4e86\u3002\u800c\u5bf9\u5e94\u7684\u62a5\u8b66\u89c4\u5219\u6587\u4ef6\u4f4d\u4e8e\uff1a /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ \u76ee\u5f55\u4e0b\u9762\u6240\u6709\u7684 YAML \u6587\u4ef6\u3002\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165 Prometheus \u7684 Pod \u4e2d\u9a8c\u8bc1\u4e0b\u8be5\u76ee\u5f55\u4e0b\u9762\u662f\u5426\u6709 YAML \u6587\u4ef6\uff1a $ kubectl exec -it prometheus-k8s-0 /bin/sh -n monitoring Defaulting container name to prometheus. Use 'kubectl describe pod/prometheus-k8s-0 -n monitoring' to see all of the containers in this pod. /prometheus $ ls /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ monitoring-prometheus-k8s-rules.yaml /prometheus $ cat /etc/prometheus/rules/prometheus-k8s-rulefiles-0/monitoring-pr ometheus-k8s-rules.yaml groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate ...... \u8fd9\u4e2a YAML \u6587\u4ef6\u5b9e\u9645\u4e0a\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684\u4e00\u4e2a PrometheusRule \u6587\u4ef6\u5305\u542b\u7684\uff1a $ cat prometheus-rules.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: prometheus-k8s-rules namespace: monitoring spec: groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate \u6211\u4eec\u8fd9\u91cc\u7684 PrometheusRule \u7684 name \u4e3a prometheus-k8s-rules \uff0c namespace \u4e3a monitoring . \u6211\u4eec\u53ef\u4ee5\u731c\u60f3\u5230\u6211\u4eec\u521b\u5efa\u4e00\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u540e\uff0c\u4f1a\u81ea\u52a8\u5728\u4e0a\u9762\u7684 prometheus-k8s-rulefiles-0 \u76ee\u5f55\u4e0b\u9762\u751f\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684 <namespace>-<name>.yaml \u6587\u4ef6\uff0c \u6240\u4ee5\u5982\u679c\u4ee5\u540e\u6211\u4eec\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u62a5\u8b66\u9009\u9879\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48 Prometheus \u80fd\u591f\u8bc6\u522b\u8fd9\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u5462\uff1f\u8fd9\u5c31\u9700\u8981\u67e5\u770b\u6211\u4eec\u521b\u5efa\u7684 prometheus \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u91cc\u9762\u6709\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u5c5e\u6027 ruleSelector \uff0c\u7528\u6765\u5339\u914d rule \u89c4\u5219\u7684\u8fc7\u6ee4\u5668\uff0c\u8981\u6c42\u5339\u914d\u5177\u6709 prometheus=k8s \u548c role=alert-rules \u6807\u7b7e\u7684 PrometheusRule \u8d44\u6e90\u5bf9\u8c61. ruleSelector: matchLabels: prometheus: k8s role: alert-rules \u6240\u4ee5\u6211\u4eec\u8981\u60f3\u81ea\u5b9a\u4e49\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\uff0c\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5177\u6709 prometheus=k8s \u548c role=alert-rules \u6807\u7b7e\u7684 PrometheusRule \u5bf9\u8c61\u5c31\u884c\u4e86\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a etcd \u662f\u5426\u53ef\u7528\u7684\u62a5\u8b66\uff0c\u6211\u4eec\u77e5\u9053 etcd \u6574\u4e2a\u96c6\u7fa4\u6709\u4e00\u534a\u4ee5\u4e0a\u7684\u8282\u70b9\u53ef\u7528\u7684\u8bdd\u96c6\u7fa4\u5c31\u662f\u53ef\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5224\u65ad\u5982\u679c\u4e0d\u53ef\u7528\u7684 etcd \u6570\u91cf\u8d85\u8fc7\u4e86\u4e00\u534a\u90a3\u4e48\u5c31\u89e6\u53d1\u62a5\u8b66\uff0c\u521b\u5efa\u6587\u4ef6 prometheus-etcdRules.yaml \uff1a apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s // `prometheus=k8s` \u548c `role=alert-rules` role: alert-rules name: etcd-rules namespace: monitoring spec: groups: - name: etcd rules: - alert: EtcdClusterUnavailable annotations: summary: etcd cluster small description: If one more etcd peer goes down the cluster will be unavailable expr: | count(up{job=\"etcd\"} == 0) > (count(up{job=\"etcd\"}) / 2 - 1) for: 3m labels: severity: critical \u6ce8\u610f label \u6807\u7b7e\u4e00\u5b9a\u81f3\u5c11\u8981\u6709 prometheus=k8s \u548c role=alert-rules \uff0c\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u4f1a\u513f\u518d\u53bb\u5bb9\u5668\u4e2d\u67e5\u770b\u4e0b rules \u6587\u4ef6\u5939\uff1a kubectl exec -it prometheus-k8s-0 /bin/sh -n monitoring Defaulting container name to prometheus. Use 'kubectl describe pod/prometheus-k8s-0 -n monitoring' to see all of the containers in this pod. /prometheus $ ls /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ monitoring-etcd-rules.yaml monitoring-prometheus-k8s-rules.yaml \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521b\u5efa\u7684 rule \u6587\u4ef6\u5df2\u7ecf\u88ab\u6ce8\u5165\u5230\u4e86\u5bf9\u5e94\u7684 rulefiles \u6587\u4ef6\u5939\u4e0b\u9762\u4e86\uff0c\u8bc1\u660e\u6211\u4eec\u4e0a\u9762\u7684\u8bbe\u60f3\u662f\u6b63\u786e\u7684\u3002\u7136\u540e\u518d\u53bb Prometheus Dashboard \u7684 Alert \u9875\u9762\u4e0b\u9762\u5c31\u53ef\u4ee5\u67e5\u770b\u5230\u4e0a\u9762\u6211\u4eec\u65b0\u5efa\u7684\u62a5\u8b66\u89c4\u5219\u4e86\uff1a","title":"1 \u914d\u7f6e PrometheusRule"},{"location":"chap4/14Adv_Prometheus_Operator_alarm/#2","text":"\u6211\u4eec\u77e5\u9053\u4e86\u5982\u4f55\u53bb\u6dfb\u52a0\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\u914d\u7f6e\u9879\uff0c\u4f46\u662f\u8fd9\u4e9b\u62a5\u8b66\u4fe1\u606f\u7528\u600e\u6837\u7684\u65b9\u5f0f\u53bb\u53d1\u9001\u5462\uff1f\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u77e5\u9053\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 AlertManager \u7684\u914d\u7f6e\u6587\u4ef6\u53bb\u914d\u7f6e\u5404\u79cd\u62a5\u8b66\u63a5\u6536\u5668\uff0c\u73b0\u5728\u6211\u4eec\u662f\u901a\u8fc7 Operator \u63d0\u4f9b\u7684 alertmanager \u8d44\u6e90\u5bf9\u8c61\u521b\u5efa\u7684\u7ec4\u4ef6\uff0c\u5e94\u8be5\u600e\u6837\u53bb\u4fee\u6539\u914d\u7f6e\u5462\uff1f \u9996\u5148\u6211\u4eec\u5c06 alertmanager-main \u8fd9\u4e2a Service \u6539\u4e3a NodePort \u7c7b\u578b\u7684 Service \u4fee\u6539\u5b8c\u6210\u540e\u6211\u4eec\u53ef\u4ee5\u5728\u9875\u9762\u4e0a\u7684 status \u8def\u5f84\u4e0b\u9762\u67e5\u770b AlertManager \u7684\u914d\u7f6e\u4fe1\u606f: \u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\u5b9e\u9645\u4e0a\u662f\u6765\u81ea\u4e8e\u6211\u4eec\u4e4b\u524d\u5728 prometheus-operator/contrib/kube-prometheus/manifests \u76ee\u5f55\u4e0b\u9762\u521b\u5efa\u7684 alertmanager-secret.yaml \u6587\u4ef6\uff1a apiVersion: v1 data: alertmanager.yaml: Imdsb2JhbCI6IAogICJyZXNvbHZlX3RpbWVvdXQiOiAiNW0iCiJyZWNlaXZlcnMiOiAKLSAibmFtZSI6ICJudWxsIgoicm91dGUiOiAKICAiZ3JvdXBfYnkiOiAKICAtICJqb2IiCiAgImdyb3VwX2ludGVydmFsIjogIjVtIgogICJncm91cF93YWl0IjogIjMwcyIKICAicmVjZWl2ZXIiOiAibnVsbCIKICAicmVwZWF0X2ludGVydmFsIjogIjEyaCIKICAicm91dGVzIjogCiAgLSAibWF0Y2giOiAKICAgICAgImFsZXJ0bmFtZSI6ICJEZWFkTWFuc1N3aXRjaCIKICAgICJyZWNlaXZlciI6ICJudWxsIg== kind: Secret metadata: name: alertmanager-main namespace: monitoring type: Opaque \u53ef\u4ee5\u5c06 alertmanager.yaml \u5bf9\u5e94\u7684 value \u503c\u505a\u4e00\u4e2a base64 \u89e3\u7801\uff1a $ echo \"Imdsb2JhbCI6IAogICJyZXNvbHZlX3RpbWVvdXQiOiAiNW0iCiJyZWNlaXZlcnMiOiAKLSAibmFtZSI6ICJudWxsIgoicm91dGUiOiAKICAiZ3JvdXBfYnkiOiAKICAtICJqb2IiCiAgImdyb3VwX2ludGVydmFsIjogIjVtIgogICJncm91cF93YWl0IjogIjMwcyIKICAicmVjZWl2ZXIiOiAibnVsbCIKICAicmVwZWF0X2ludGVydmFsIjogIjEyaCIKICAicm91dGVzIjogCiAgLSAibWF0Y2giOiAKICAgICAgImFsZXJ0bmFtZSI6ICJEZWFkTWFuc1N3aXRjaCIKICAgICJyZWNlaXZlciI6ICJudWxsIg==\" | base64 -D \"global\": \"resolve_timeout\": \"5m\" \"receivers\": - \"name\": \"null\" \"route\": \"group_by\": - \"job\" \"group_interval\": \"5m\" \"group_wait\": \"30s\" \"receiver\": \"null\" \"repeat_interval\": \"12h\" \"routes\": - \"match\": \"alertname\": \"DeadMansSwitch\" \"receiver\": \"null\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5185\u5bb9\u548c\u4e0a\u9762\u67e5\u770b\u7684\u914d\u7f6e\u4fe1\u606f\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u8981\u6dfb\u52a0\u81ea\u5df1\u7684\u63a5\u6536\u5668\uff0c\u6216\u8005\u6a21\u677f\u6d88\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u6539\u8fd9\u4e2a\u6587\u4ef6\uff1a global: resolve_timeout: 5m smtp_smarthost: 'smtp.gmail.com' smtp_from: 'xichao2014@gmail.com' smtp_auth_username: 'xichao2014@gmail.com' smtp_auth_password: '<\u90ae\u7bb1\u5bc6\u7801>' smtp_hello: 'gmail.com' smtp_require_tls: false route: group_by: ['job', 'severity'] group_wait: 30s group_interval: 5m repeat_interval: 12h receiver: default routes: - receiver: webhook match: alertname: CoreDNSDown receivers: - name: 'default' email_configs: - to: 'xichao2017@gmail.com' send_resolved: true - name: 'webhook' webhook_configs: - url: 'http://dingtalk-hook.kube-ops:5000' send_resolved: true \u5c06\u4e0a\u9762\u6587\u4ef6\u4fdd\u5b58\u4e3a alertmanager.yaml \uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e2a\u6587\u4ef6\u521b\u5efa\u4e00\u4e2a Secret \u5bf9\u8c61\uff1a # \u5148\u5c06\u4e4b\u524d\u7684 secret \u5bf9\u8c61\u5220\u9664 $ kubectl delete secret alertmanager-main -n monitoring secret \"alertmanager-main\" deleted $ kubectl create secret generic alertmanager-main --from-file=alertmanager.yaml -n monitoring secret \"alertmanager-main\" created \u6211\u4eec\u6dfb\u52a0\u4e86\u4e24\u4e2a\u63a5\u6536\u5668\uff0c\u9ed8\u8ba4\u7684\u901a\u8fc7\u90ae\u7bb1\u8fdb\u884c\u53d1\u9001\uff0c\u5bf9\u4e8e CoreDNSDown \u8fd9\u4e2a\u62a5\u8b66\u6211\u4eec\u901a\u8fc7 webhook \u6765\u8fdb\u884c\u53d1\u9001\uff0c\u8fd9\u4e2a webhook \u5c31\u662f\u6211\u4eec\u524d\u9762\u8bfe\u7a0b\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e2a\u9489\u9489\u63a5\u6536\u7684 Server \uff0c\u4e0a\u9762\u7684\u6b65\u9aa4\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u5f88\u5feb\u6211\u4eec\u5c31\u4f1a\u6536\u5230\u4e00\u6761\u9489\u9489\u6d88\u606f\uff1a \u540c\u6837\u90ae\u7bb1\u4e2d\u4e5f\u4f1a\u6536\u5230\u62a5\u8b66\u4fe1\u606f\uff1a \u6211\u4eec\u518d\u6b21\u67e5\u770b AlertManager \u9875\u9762\u7684 status \u9875\u9762\u7684\u914d\u7f6e\u4fe1\u606f\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u53d8\u6210\u4e0a\u9762\u6211\u4eec\u7684\u914d\u7f6e\u4fe1\u606f\u4e86\uff1a","title":"2 \u914d\u7f6e\u62a5\u8b66"},{"location":"chap4/14Adv_Prometheus_Operator_alarm/#config","text":"AlertManager \u914d\u7f6e\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f( .tmpl\u6587\u4ef6 )\uff0c\u8fd9\u4e9b\u6a21\u677f\u53ef\u4ee5\u4e0e alertmanager.yaml \u914d\u7f6e\u6587\u4ef6\u4e00\u8d77\u6dfb\u52a0\u5230 Secret \u5bf9\u8c61\u4e2d\uff0c\u6bd4\u5982\uff1a apiVersion\uff1av1 kind\uff1asecret metadata\uff1a name\uff1aalertmanager-example data\uff1a alertmanager.yaml\uff1a{BASE64_CONFIG} template_1.tmpl\uff1a{BASE64_TEMPLATE_1} template_2.tmpl\uff1a{BASE64_TEMPLATE_2} ... \u6a21\u677f\u4f1a\u88ab\u653e\u7f6e\u5230\u4e0e\u914d\u7f6e\u6587\u4ef6\u76f8\u540c\u7684\u8def\u5f84\uff0c\u5f53\u7136\u8981\u4f7f\u7528\u8fd9\u4e9b\u6a21\u677f\u6587\u4ef6\uff0c\u8fd8\u9700\u8981\u5728 alertmanager.yam l \u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\uff1a templates: - '*.tmpl' \u521b\u5efa\u6210\u529f\u540e\uff0c Secret \u5bf9\u8c61\u5c06\u4f1a\u6302\u8f7d\u5230 AlertManager \u5bf9\u8c61\u521b\u5efa\u7684 AlertManager Pod \u4e2d\u53bb\u3002","title":"Config"},{"location":"chap4/22Customize_Alert_Email/","text":"\u7b2c\u56db\u8282 Add Custom Alert and Send Alert Email with Alertmanager 1 Add Custom Alert (prometheus operator) Step one: Check ruleSelector from prometheus-operator Why Should I do this, please check reference \u914d\u7f6e PrometheusRule kubectl get Prometheus monitoring-prometheus-oper-prometheus -n monitoring -oyaml ... ruleSelector: matchLabels: app: prometheus-operator release: monitoring ... Step two: Custom Alert info for git_proxy in Ubertest Cluster apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: app: prometheus-operator release: monitoring name: gitproxy-memory-rules namespace: monitoring spec: groups: - name: gitproxy rules: - alert: GitproxyMemoryHigh annotations: summary: gitproxy memory is over 2gb in 30 minutes description: gitproxy pod memory is unusually high and normally below 1gb expr: | (avg_over_time(container_memory_usage_bytes{namespace=\"management\", container_name=\"gitproxy\"}[30m]) / (1024*1024)) > 2048 labels: severity: critical $ kubectl apply -f gitproxy_memory_rule.yaml prometheusrule.monitoring.coreos.com/gitproxy-memory-rules configured Step Three: Check alert works or not Option one $ kubectl -n monitoring port-forward prometheus-monitoring-prometheus-oper-prometheus-0 9090:9090 Option two $ kubectl exec prometheus-monitoring-prometheus-oper-prometheus-0 -n monitoring -it sh # cd /etc/prometheus/rules/prometheus-monitoring-prometheus-oper-prometheus-rulefiles-0/ # ls -la Reference: https://timber.io/blog/promql-for-humans/ 2 Send alert email Step one Check origin alert email config $ kubectl get secret -n monitoring alertmanager-monitoring-prometheus-oper-alertmanager -oyaml apiVersion: v1 data: alertmanager.yaml: Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0KcmVjZWl2ZXJzOgotIG5hbWU6ICJudWxsIgpyb3V0ZToKICBncm91cF9ieToKICAtIGpvYgogIGdyb3VwX2ludGVydmFsO iA1bQogIGdyb3VwX3dhaXQ6IDMwcwogIHJlY2VpdmVyOiAibnVsbCIKICByZXBlYXRfaW50ZXJ2YWw6IDEyaAogIHJvdXRlczoKICAtIG1hdGNoOgogICAgICBhbGVydG5hbWU6IFdhdGNoZG9nCiAgICB yZWNlaXZlcjogIm51bGwiCg== kind: Secret metadata: creationTimestamp: \"2019-08-07T07:42:14Z\" labels: app: prometheus-operator-alertmanager chart: prometheus-operator-6.2.0 heritage: Tiller release: monitoring name: alertmanager-monitoring-prometheus-oper-alertmanager namespace: monitoring resourceVersion: \"69027563\" selfLink: /api/v1/namespaces/monitoring/secrets/alertmanager-monitoring-prometheus-oper-alertmanager uid: dfca9306-b8e6-11e9-9cbe-fe2458f1cc65 type: Opaque alertmanager.yaml $ echo Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0KcmVjZWl2ZXJzOgotIG5hbWU6ICJudWxsIgpyb3V0ZToKICBncm91cF9ieToKICAtIGpvYgogIGdyb3VwX2ludGVydmFsOiA1bQogIGdyb3VwX3dhaXQ6IDMwcwogIHJlY2VpdmVyOiAibnVsbCIKICByZXBlYXRfaW50ZXJ2YWw6IDEyaAogIHJvdXRlczoKICAtIG1hdGNoOgogICAgICBhbGVydG5hbWU6IFdhdGNoZG9nCiAgICByZWNlaXZlcjogIm51bGwiCg== | base64 -D global: resolve_timeout: 5m receivers: - name: \"null\" route: group_by: - job group_interval: 5m group_wait: 30s receiver: \"null\" repeat_interval: 12h routes: - match: alertname: Watchdog receiver: \"null\" Step two: Custom own email config # https://prometheus.io/docs/alerting/configuration/ global: resolve_timeout: 5m smtp_from: 'noreply@sap.com' # can only be set up as noreply@sap.com, otherwise the email will not sent smtp_smarthost: 'mailhost.pgdev.sap.corp:25' # public smtp server for sap smtp_require_tls: false route: # group_by: ['prometheus'] group_wait: 30s group_interval: 1h repeat_interval: 12h # Set repeat_interval as 6h, since ubertest is internal tool for us receiver: jam_devops routes: - receiver: jam_devops match: alertname: GitproxyMemoryHigh receivers: - name: 'jam_devops' email_configs: # - to: 'DL_@global.corp.sap' # This is Jam Devops Team DL - to: 'j@sap.com' send_resolved: true headers: Subject: 'Ubertest-Alert{{ template \"email.default.subject\" . }}' # Special header for ubertest cluster # inhibit_rules: - source_match: severity: 'critical' target_match_re: severity: 'warning|none' # Since prometheus is common label in alertmanager, so critical will inhibit all \"warning|none\" severity equal: ['prometheus'] # Since severity cannot inhibit severity, # I need change policy from severity to alertname which inside severity - source_match: alertname: 'KubeControllerManagerDown' target_match: alertname: 'KubeDaemonSetRolloutStuck' equal: ['prometheus'] # KubeSchedulerDown and KubeControllerManagerDown inhibit each other - source_match: alertname: 'KubeControllerManagerDown' target_match: alertname: 'KubeSchedulerDown' equal: ['prometheus'] - source_match: alertname: 'KubeSchedulerDown' target_match: alertname: 'KubeControllerManagerDown' equal: ['prometheus'] - source_match: alertname: 'GitproxyMemoryHigh' target_match_re: severity: 'critical' equal: ['prometheus'] Speical settings smtp_from: 'noreply@sap.com' Subject: 'Ubertest-Alert{{ template \"email.default.subject\" . }}' inhibit_rules: Step three: Delete old and apply new Why Should I do this, please check reference \u914d\u7f6e\u62a5\u8b66 $ kubectl create secret generic alertmanager-monitoring-prometheus-oper-alertmanager -n monitoring --from-file=alertmanager.yaml $ kubectl delete secret alertmanager-monitoring-prometheus-oper-alertmanager -n monitoring $ kubectl logs alertmanager-monitoring-prometheus-oper-alertmanager-0 -n monitoring -c alertmanager Step four: Check works or not $ kubectl logs alertmanager-monitoring-prometheus-oper-alertmanager-0 -n monitoring -c alertmanager ... level=info ts=2019-11-08T05:18:34.894500263Z caller=coordinator.go:131 component=configuration msg=\"Completed loading of configuration file\" file=/etc/alertmanager/config/alertmanager.yaml ... $ kubectl -n monitoring port-forward alertmanager-monitoring-prometheus-oper-alertmanager-0 9093:9093 http://localhost:9093/#/status Config global: resolve_timeout: 5m http_config: {} smtp_from: noreply@sap.com smtp_hello: localhost smtp_smarthost: mailhost.pgdev.sap.corp:25 pagerduty_url: https://events.pagerduty.com/v2/enqueue hipchat_api_url: https://api.hipchat.com/ opsgenie_api_url: https://api.opsgenie.com/ wechat_api_url: https://qyapi.weixin.qq.com/cgi-bin/ victorops_api_url: https://alert.victorops.com/integrations/generic/20131114/alert/ route: receiver: jam_devops routes: - receiver: jam_devops match: alertname: GitproxyMemoryHigh group_wait: 30s group_interval: 5m repeat_interval: 6h inhibit_rules: - source_match: severity: critical target_match_re: severity: warning|none equal: - prometheus - source_match: alertname: KubeControllerManagerDown target_match: alertname: KubeDaemonSetRolloutStuck equal: - prometheus - source_match: alertname: KubeControllerManagerDown target_match: alertname: KubeSchedulerDown equal: - prometheus - source_match: alertname: KubeSchedulerDown target_match: alertname: KubeControllerManagerDown equal: - prometheus receivers: - name: jam_devops email_configs: - send_resolved: true to: *** from: noreply@sap.com hello: localhost smarthost: mailhost.pgdev.sap.corp:25 headers: From: noreply@sap.com Subject: Ubertest-Alert{{ template \"email.default.subject\" . }} To: *** html: '{{ template \"email.default.html\" . }}' require_tls: false templates: [] Reference: alert-example-github","title":"\u7b2c\u56db\u8282 Add Custom Alert and Send Alert Email with Alertmanager"},{"location":"chap4/22Customize_Alert_Email/#add-custom-alert-and-send-alert-email-with-alertmanager","text":"","title":"\u7b2c\u56db\u8282 Add Custom Alert and Send Alert Email with Alertmanager"},{"location":"chap4/22Customize_Alert_Email/#1-add-custom-alert-prometheus-operator","text":"","title":"1 Add Custom Alert (prometheus operator)"},{"location":"chap4/22Customize_Alert_Email/#step-one-check-ruleselector-from-prometheus-operator","text":"Why Should I do this, please check reference \u914d\u7f6e PrometheusRule kubectl get Prometheus monitoring-prometheus-oper-prometheus -n monitoring -oyaml ... ruleSelector: matchLabels: app: prometheus-operator release: monitoring ...","title":"Step one: Check ruleSelector from prometheus-operator"},{"location":"chap4/22Customize_Alert_Email/#step-two-custom-alert-info-for-git_proxy-in-ubertest-cluster","text":"apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: app: prometheus-operator release: monitoring name: gitproxy-memory-rules namespace: monitoring spec: groups: - name: gitproxy rules: - alert: GitproxyMemoryHigh annotations: summary: gitproxy memory is over 2gb in 30 minutes description: gitproxy pod memory is unusually high and normally below 1gb expr: | (avg_over_time(container_memory_usage_bytes{namespace=\"management\", container_name=\"gitproxy\"}[30m]) / (1024*1024)) > 2048 labels: severity: critical $ kubectl apply -f gitproxy_memory_rule.yaml prometheusrule.monitoring.coreos.com/gitproxy-memory-rules configured","title":"Step two: Custom Alert info for git_proxy in Ubertest Cluster"},{"location":"chap4/22Customize_Alert_Email/#step-three-check-alert-works-or-not","text":"Option one $ kubectl -n monitoring port-forward prometheus-monitoring-prometheus-oper-prometheus-0 9090:9090 Option two $ kubectl exec prometheus-monitoring-prometheus-oper-prometheus-0 -n monitoring -it sh # cd /etc/prometheus/rules/prometheus-monitoring-prometheus-oper-prometheus-rulefiles-0/ # ls -la Reference: https://timber.io/blog/promql-for-humans/","title":"Step Three: Check alert works or not"},{"location":"chap4/22Customize_Alert_Email/#2-send-alert-email","text":"","title":"2 Send alert email"},{"location":"chap4/22Customize_Alert_Email/#step-one-check-origin-alert-email-config","text":"$ kubectl get secret -n monitoring alertmanager-monitoring-prometheus-oper-alertmanager -oyaml apiVersion: v1 data: alertmanager.yaml: Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0KcmVjZWl2ZXJzOgotIG5hbWU6ICJudWxsIgpyb3V0ZToKICBncm91cF9ieToKICAtIGpvYgogIGdyb3VwX2ludGVydmFsO iA1bQogIGdyb3VwX3dhaXQ6IDMwcwogIHJlY2VpdmVyOiAibnVsbCIKICByZXBlYXRfaW50ZXJ2YWw6IDEyaAogIHJvdXRlczoKICAtIG1hdGNoOgogICAgICBhbGVydG5hbWU6IFdhdGNoZG9nCiAgICB yZWNlaXZlcjogIm51bGwiCg== kind: Secret metadata: creationTimestamp: \"2019-08-07T07:42:14Z\" labels: app: prometheus-operator-alertmanager chart: prometheus-operator-6.2.0 heritage: Tiller release: monitoring name: alertmanager-monitoring-prometheus-oper-alertmanager namespace: monitoring resourceVersion: \"69027563\" selfLink: /api/v1/namespaces/monitoring/secrets/alertmanager-monitoring-prometheus-oper-alertmanager uid: dfca9306-b8e6-11e9-9cbe-fe2458f1cc65 type: Opaque alertmanager.yaml $ echo Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0KcmVjZWl2ZXJzOgotIG5hbWU6ICJudWxsIgpyb3V0ZToKICBncm91cF9ieToKICAtIGpvYgogIGdyb3VwX2ludGVydmFsOiA1bQogIGdyb3VwX3dhaXQ6IDMwcwogIHJlY2VpdmVyOiAibnVsbCIKICByZXBlYXRfaW50ZXJ2YWw6IDEyaAogIHJvdXRlczoKICAtIG1hdGNoOgogICAgICBhbGVydG5hbWU6IFdhdGNoZG9nCiAgICByZWNlaXZlcjogIm51bGwiCg== | base64 -D global: resolve_timeout: 5m receivers: - name: \"null\" route: group_by: - job group_interval: 5m group_wait: 30s receiver: \"null\" repeat_interval: 12h routes: - match: alertname: Watchdog receiver: \"null\"","title":"Step one Check origin alert email config"},{"location":"chap4/22Customize_Alert_Email/#step-two-custom-own-email-config","text":"# https://prometheus.io/docs/alerting/configuration/ global: resolve_timeout: 5m smtp_from: 'noreply@sap.com' # can only be set up as noreply@sap.com, otherwise the email will not sent smtp_smarthost: 'mailhost.pgdev.sap.corp:25' # public smtp server for sap smtp_require_tls: false route: # group_by: ['prometheus'] group_wait: 30s group_interval: 1h repeat_interval: 12h # Set repeat_interval as 6h, since ubertest is internal tool for us receiver: jam_devops routes: - receiver: jam_devops match: alertname: GitproxyMemoryHigh receivers: - name: 'jam_devops' email_configs: # - to: 'DL_@global.corp.sap' # This is Jam Devops Team DL - to: 'j@sap.com' send_resolved: true headers: Subject: 'Ubertest-Alert{{ template \"email.default.subject\" . }}' # Special header for ubertest cluster # inhibit_rules: - source_match: severity: 'critical' target_match_re: severity: 'warning|none' # Since prometheus is common label in alertmanager, so critical will inhibit all \"warning|none\" severity equal: ['prometheus'] # Since severity cannot inhibit severity, # I need change policy from severity to alertname which inside severity - source_match: alertname: 'KubeControllerManagerDown' target_match: alertname: 'KubeDaemonSetRolloutStuck' equal: ['prometheus'] # KubeSchedulerDown and KubeControllerManagerDown inhibit each other - source_match: alertname: 'KubeControllerManagerDown' target_match: alertname: 'KubeSchedulerDown' equal: ['prometheus'] - source_match: alertname: 'KubeSchedulerDown' target_match: alertname: 'KubeControllerManagerDown' equal: ['prometheus'] - source_match: alertname: 'GitproxyMemoryHigh' target_match_re: severity: 'critical' equal: ['prometheus']","title":"Step two: Custom own email config"},{"location":"chap4/22Customize_Alert_Email/#speical-settings","text":"smtp_from: 'noreply@sap.com' Subject: 'Ubertest-Alert{{ template \"email.default.subject\" . }}' inhibit_rules:","title":"Speical settings"},{"location":"chap4/22Customize_Alert_Email/#step-three-delete-old-and-apply-new","text":"Why Should I do this, please check reference \u914d\u7f6e\u62a5\u8b66 $ kubectl create secret generic alertmanager-monitoring-prometheus-oper-alertmanager -n monitoring --from-file=alertmanager.yaml $ kubectl delete secret alertmanager-monitoring-prometheus-oper-alertmanager -n monitoring $ kubectl logs alertmanager-monitoring-prometheus-oper-alertmanager-0 -n monitoring -c alertmanager","title":"Step three: Delete old and apply new"},{"location":"chap4/22Customize_Alert_Email/#step-four-check-works-or-not","text":"$ kubectl logs alertmanager-monitoring-prometheus-oper-alertmanager-0 -n monitoring -c alertmanager ... level=info ts=2019-11-08T05:18:34.894500263Z caller=coordinator.go:131 component=configuration msg=\"Completed loading of configuration file\" file=/etc/alertmanager/config/alertmanager.yaml ... $ kubectl -n monitoring port-forward alertmanager-monitoring-prometheus-oper-alertmanager-0 9093:9093 http://localhost:9093/#/status Config global: resolve_timeout: 5m http_config: {} smtp_from: noreply@sap.com smtp_hello: localhost smtp_smarthost: mailhost.pgdev.sap.corp:25 pagerduty_url: https://events.pagerduty.com/v2/enqueue hipchat_api_url: https://api.hipchat.com/ opsgenie_api_url: https://api.opsgenie.com/ wechat_api_url: https://qyapi.weixin.qq.com/cgi-bin/ victorops_api_url: https://alert.victorops.com/integrations/generic/20131114/alert/ route: receiver: jam_devops routes: - receiver: jam_devops match: alertname: GitproxyMemoryHigh group_wait: 30s group_interval: 5m repeat_interval: 6h inhibit_rules: - source_match: severity: critical target_match_re: severity: warning|none equal: - prometheus - source_match: alertname: KubeControllerManagerDown target_match: alertname: KubeDaemonSetRolloutStuck equal: - prometheus - source_match: alertname: KubeControllerManagerDown target_match: alertname: KubeSchedulerDown equal: - prometheus - source_match: alertname: KubeSchedulerDown target_match: alertname: KubeControllerManagerDown equal: - prometheus receivers: - name: jam_devops email_configs: - send_resolved: true to: *** from: noreply@sap.com hello: localhost smarthost: mailhost.pgdev.sap.corp:25 headers: From: noreply@sap.com Subject: Ubertest-Alert{{ template \"email.default.subject\" . }} To: *** html: '{{ template \"email.default.html\" . }}' require_tls: false templates: []","title":"Step four: Check works or not"},{"location":"chap4/22Customize_Alert_Email/#reference","text":"alert-example-github","title":"Reference:"},{"location":"chap4/24Kubernetes_Prometheus_blackbox/","text":"\u7b2c\u4e94\u8282 Prometheus \u9ed1\u76d2\u76d1\u63a7 \u524d\u9762\u6211\u4eec\u4e3b\u8981\u4ecb\u7ecd\u4e86 Prometheus \u4e0b\u5982\u4f55\u8fdb\u884c \u767d\u76d2\u76d1\u63a7 \uff0c\u6211\u4eec\u76d1\u63a7\u4e3b\u673a\u7684\u8d44\u6e90\u7528\u91cf\u3001\u5bb9\u5668\u7684\u8fd0\u884c\u72b6\u6001\u3001\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\u7684\u8fd0\u884c\u6570\u636e\u3001\u81ea\u52a8\u53d1\u73b0 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u8d44\u6e90\u7b49\u7b49\uff0c \u8fd9\u4e9b\u90fd\u662f\u652f\u6301\u4e1a\u52a1\u548c\u670d\u52a1\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u901a\u8fc7\u767d\u76d2\u80fd\u591f\u4e86\u89e3\u5176\u5185\u90e8\u7684\u5b9e\u9645\u8fd0\u884c\u72b6\u6001\uff0c\u901a\u8fc7\u5bf9\u76d1\u63a7\u6307\u6807\u7684\u89c2\u5bdf\u80fd\u591f\u9884\u5224\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u4ece\u800c\u5bf9\u6f5c\u5728\u7684\u4e0d\u786e\u5b9a\u56e0\u7d20\u8fdb\u884c\u4f18\u5316 \u800c\u4ece\u5b8c\u6574\u7684\u76d1\u63a7\u903b\u8f91\u7684\u89d2\u5ea6\uff0c\u9664\u4e86\u5927\u91cf\u7684\u5e94\u7528\u767d\u76d2\u76d1\u63a7\u4ee5\u5916\uff0c \u8fd8\u5e94\u8be5\u6dfb\u52a0\u9002\u5f53\u7684 Blackbox \uff08\u9ed1\u76d2\uff09\u76d1\u63a7\uff0c\u9ed1\u76d2\u76d1\u63a7\u5373\u4ee5\u7528\u6237\u7684\u8eab\u4efd\u6d4b\u8bd5\u670d\u52a1\u7684\u5916\u90e8\u53ef\u89c1\u6027\uff0c\u5e38\u89c1\u7684\u9ed1\u76d2\u76d1\u63a7\u5305\u62ec HTTP \u63a2\u9488 \u3001 TCP \u63a2\u9488 \u7b49\u7528\u4e8e\u68c0\u6d4b\u7ad9\u70b9\u6216\u8005\u670d\u52a1\u7684\u53ef\u8bbf\u95ee\u6027\uff0c\u4ee5\u53ca\u8bbf\u95ee\u6548\u7387\u7b49 \u3002 \u9ed1\u76d2\u76d1\u63a7\u76f8\u8f83\u4e8e\u767d\u76d2\u76d1\u63a7\u6700\u5927\u7684\u4e0d\u540c\u5728\u4e8e\u9ed1\u76d2\u76d1\u63a7\u662f\u4ee5\u6545\u969c\u4e3a\u5bfc\u5411\u5f53\u6545\u969c\u53d1\u751f\u65f6\uff0c\u9ed1\u76d2\u76d1\u63a7\u80fd\u5feb\u901f\u53d1\u73b0\u6545\u969c\uff0c\u800c\u767d\u76d2\u76d1\u63a7\u5219\u4fa7\u91cd\u4e8e\u4e3b\u52a8\u53d1\u73b0\u6216\u8005\u9884\u6d4b\u6f5c\u5728\u7684\u95ee\u9898\u3002\u4e00\u4e2a\u5b8c\u5584\u7684\u76d1\u63a7\u76ee\u6807\u662f\u8981\u80fd\u591f\u4ece\u767d\u76d2\u7684\u89d2\u5ea6\u53d1\u73b0\u6f5c\u5728\u95ee\u9898\uff0c\u80fd\u591f\u5728\u9ed1\u76d2\u7684\u89d2\u5ea6\u5feb\u901f\u53d1\u73b0\u5df2\u7ecf\u53d1\u751f\u7684\u95ee\u9898 \u3002 Blackbox Exporter \u662f Prometheus \u793e\u533a\u63d0\u4f9b\u7684\u5b98\u65b9\u9ed1\u76d2\u76d1\u63a7\u89e3\u51b3\u65b9\u6848\uff0c\u5176\u5141\u8bb8\u7528\u6237\u901a\u8fc7\uff1a HTTP \u3001 HTTPS \u3001 DNS \u3001 TCP \u4ee5\u53ca ICMP \u7684\u65b9\u5f0f\u5bf9\u7f51\u7edc\u8fdb\u884c\u63a2\u6d4b Marvelous Prometheus Blackbox alerts 2 \u5feb\u901f\u5b89\u88c5 helm-prometheus-operator kubectl create ns kube-mon helm install prom-blackbox stable/prometheus-operator -f prometheus-operator-values.yml --namespace kube-mon prometheus-operator-values.yml # We don't need the alertmanager for this demo alertmanager: enabled: false # This configuration means all ServiceMonitors in the namespsace will be picked up # Use with caution! prometheus: prometheusSpec: serviceMonitorSelectorNilUsesHelmValues: false serviceMonitorSelector: {} $ helm install prom-blackbox stable/prometheus-operator -f prometheus-operator-values.yml --namespace kube-mon NAME: prom-blackbox LAST DEPLOYED: Tue Dec 17 10:17:02 2019 NAMESPACE: kube-mon STATUS: deployed REVISION: 1 NOTES: The Prometheus Operator has been installed. Check its status by running: kubectl --namespace kube-mon get pods -l \"release=prom-blackbox\" Visit https://github.com/coreos/prometheus-operator for instructions on how 2-1 \u5feb\u901f\u5b89\u88c5 blackbox-exporter \u670d\u52a1 \u540c\u6837\u9996\u5148\u9700\u8981\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u8fd0\u884c blackbox-exporter \u670d\u52a1\uff0c\u540c\u6837\u901a\u8fc7\u4e00\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\u6765\u4e3a Blackbox \u63d0\u4f9b\u914d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\uff1a\uff08 prome-blackbox.yaml \uff09 apiVersion: v1 kind: ConfigMap metadata: name: blackbox-config namespace: kube-mon data: blackbox.yml: |- modules: http_2xx: # http \u68c0\u6d4b\u6a21\u5757 Blockbox-Exporter \u4e2d\u6240\u6709\u7684\u63a2\u9488\u5747\u662f\u4ee5 Module \u7684\u4fe1\u606f\u8fdb\u884c\u914d\u7f6e prober: http timeout: 10s http: valid_http_versions: [\"HTTP/1.1\", \"HTTP/2\"] valid_status_codes: [200] # \u8fd9\u91cc\u6700\u597d\u4f5c\u4e00\u4e2a\u8fd4\u56de\u72b6\u6001\u7801\uff0c\u5728grafana\u4f5c\u56fe\u65f6\uff0c\u6709\u660e\u793a---\u9648\u521a\u6ce8\u91ca\u3002 method: GET preferred_ip_protocol: \"ip4\" http_post_2xx: # http post \u76d1\u6d4b\u6a21\u5757 prober: http timeout: 10s http: valid_http_versions: [\"HTTP/1.1\", \"HTTP/2\"] method: POST preferred_ip_protocol: \"ip4\" tcp_connect: # TCP \u68c0\u6d4b\u6a21\u5757 prober: tcp timeout: 10s dns: # DNS \u68c0\u6d4b\u6a21\u5757 prober: dns dns: transport_protocol: \"tcp\" # \u9ed8\u8ba4\u662f udp preferred_ip_protocol: \"ip4\" # \u9ed8\u8ba4\u662f ip6 query_name: \"kubernetes.default.svc.cluster.local\" --- apiVersion: apps/v1 kind: Deployment metadata: name: blackbox namespace: kube-mon spec: selector: matchLabels: app: blackbox template: metadata: labels: app: blackbox spec: containers: - image: prom/blackbox-exporter:v0.16.0 name: blackbox args: - --config.file=/etc/blackbox_exporter/blackbox.yml # ConfigMap \u4e2d\u7684\u914d\u7f6e\u6587\u4ef6 - --log.level=error # \u9519\u8bef\u7ea7\u522b\u63a7\u5236 ports: - containerPort: 9115 volumeMounts: - name: config mountPath: /etc/blackbox_exporter volumes: - name: config configMap: name: blackbox-config --- apiVersion: v1 kind: Service metadata: name: blackbox namespace: kube-mon spec: selector: app: blackbox ports: - port: 9115 targetPort: 9115 \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\uff1a $ kubectl apply -f content/monitor/manifests/install/prome-blackbox.yaml configmap/blackbox-config created deployment.apps/blackbox created service/blackbox created \u7136\u540e\u9700\u8981\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165\u5bf9 BlackBox \u7684\u6293\u53d6\u8bbe\u7f6e\uff0c 3 \u4f20\u7edf k8s-Prometheus \u65b9\u5f0f apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-mon data: prometheus.yml: | global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: \"kubernetes-service-dns\" metrics_path: /probe # \u4e0d\u662f metrics\uff0c\u662f probe params: module: [dns] # \u4f7f\u7528 DNS \u6a21\u5757 static_configs: - targets: - kube-dns.kube-system:53 # \u4e0d\u8981\u7701\u7565\u7aef\u53e3\u53f7 relabel_configs: - source_labels: [__address__] target_label: __param_target - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: blackbox:9115 # \u670d\u52a1\u5730\u5740\uff0c\u548c\u4e0a\u9762\u7684 Service \u5b9a\u4e49\u4fdd\u6301\u4e00\u81f4 \u9996\u5148\u83b7\u53d6 targets \u5b9e\u4f8b\u7684 __address__ \u503c\u5199\u8fdb __param_target , __param_<name> \u5f62\u5f0f\u7684\u6807\u7b7e\u91cc\u7684 name \u548c\u5b83\u7684\u503c\u4f1a\u88ab\u6dfb\u52a0\u5230\u53d1\u9001\u5230\u9ed1\u76d2\u7684 http \u7684 header \u7684 params \u5f53\u4f5c\u952e\u503c\uff0c\u4f8b\u5982 __param_module \u5bf9\u5e94 params \u91cc\u7684 module \u3002 \u7136\u540e\u83b7\u53d6 __param_target \u7684\u503c\uff0c\u5e76\u8986\u5199\u5230 instance \u6807\u7b7e\u4e2d\uff0c \u8986\u5199 Target \u5b9e\u4f8b\u7684 __address__ \u6807\u7b7e\u503c\u4e3a BlackBox Exporter \u5b9e\u4f8b\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u5411 blackbox:9115 \u53d1\u9001\u8bf7\u6c42\u83b7\u53d6\u5b9e\u4f8b\u7684 metrics \u4fe1\u606f\u3002 \u7136\u540e\u66f4\u65b0\u914d\u7f6e\uff1a $ kubectl apply -f prometheus-cm.yaml configmap/prometheus-config configured # \u9694\u4e00\u4f1a\u513f\u6267\u884c reload \u64cd\u4f5c $ curl -X POST \"http://10.244.3.174:9090/-/reload\" # promethues pod ip and suppose hot reload \u6253\u5f00 Prometheus \u7684 Target \u9875\u9762\uff0c\u5c31\u4f1a\u770b\u5230 \u4e0a\u9762\u5b9a\u4e49\u7684 kubernetes-service-dns \u4efb\u52a1\u4e86\uff1a Prometheus-Opeartor \u7ed5\u8fc7 ServiceMonitor \u65b9\u5f0f Reference: Additional Scrape Configuration Creating an additional configuration: prometheus-additional.yaml - job_name: \"kubernetes-service-dns\" metrics_path: /probe # \u4e0d\u662f metrics\uff0c\u662f probe params: module: [dns] # \u4f7f\u7528 DNS \u6a21\u5757 static_configs: - targets: - kube-dns.kube-system:53 # \u4e0d\u8981\u7701\u7565\u7aef\u53e3\u53f7 relabel_configs: - source_labels: [__address__] target_label: __param_target - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: blackbox:9115 # \u670d\u52a1\u5730\u5740\uff0c\u548c\u4e0a\u9762\u7684 Service \u5b9a\u4e49\u4fdd\u6301\u4e00\u81f4 kubectl create secret --namesapce kube-mon generic additional-scrape-configs --from-file=prometheus-additional.yaml --dry-run -oyaml > additional-scrape-configs.yaml additional-scrape-configs.yaml apiVersion: v1 data: prometheus-additional.yaml: ...... kind: Secret metadata: creationTimestamp: null name: additional-scrape-configs namespace: kube-mon $ kubectl apply -f additional-scrape-configs.yaml secret/additional-scrape-configs created Finally, reference this additional configuration in your prometheus.yaml CRD . $ kubectl get prometheus -n kube-mon NAME AGE prom-blackbox-prometheus-o-prometheus 6h34m $ kubectl edit Prometheus prom-blackbox-prometheus-o-prometheus -n kube-mon ... ruleNamespaceSelector: {} ruleSelector: matchLabels: app: prometheus-operator release: prom-blackbox securityContext: ... # \u9694\u4e00\u4f1a\u513f\u6267\u884c kubectl port-forward svc/prom-blackbox-prometheus-o-prometheus -n kube-mon 9090:9090 \u56de\u5230 Graph \u9875\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528 probe_success{job=\"kubernetes-service-dns\"} \u6765\u67e5\u770b\u68c0\u6d4b\u7ed3\u679c\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5bf9 DNS \u7684\u9ed1\u76d2\u76d1\u63a7\u3002 \u9664\u4e86 DNS \u7684\u914d\u7f6e\u5916\uff0c\u4e0a\u9762\u6211\u4eec\u8fd8\u914d\u7f6e\u4e86\u4e00\u4e2a http_2xx \u7684\u6a21\u5757\uff0c\u4e5f\u5c31\u662f HTTP \u63a2\u9488\uff0c HTTP \u63a2\u9488\u662f\u8fdb\u884c\u9ed1\u76d2\u76d1\u63a7\u65f6\u6700\u5e38\u7528\u7684\u63a2\u9488\u4e4b\u4e00\uff0c\u901a\u8fc7 HTTP \u63a2\u9488\u80fd\u591f\u5bf9\u7f51\u7ad9\u6216\u8005 HTTP \u670d\u52a1\u5efa\u7acb\u6709\u6548\u7684\u76d1\u63a7\uff0c\u5305\u62ec\u5176\u672c\u8eab\u7684\u53ef\u7528\u6027\uff0c\u4ee5\u53ca\u7528\u6237\u4f53\u9a8c\u76f8\u5173\u7684\u5982\u54cd\u5e94\u65f6\u95f4\u7b49\u7b49\u3002\u9664\u4e86\u80fd\u591f\u5728\u670d\u52a1\u51fa\u73b0\u5f02\u5e38\u7684\u65f6\u5019\u53ca\u65f6\u62a5\u8b66\uff0c\u8fd8\u80fd\u5e2e\u52a9\u7cfb\u7edf\u7ba1\u7406\u5458\u5206\u6790\u548c\u4f18\u5316\u7f51\u7ad9\u4f53\u9a8c\u3002 \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ed6\u6765\u5bf9 http \u670d\u52a1\u8fdb\u884c\u68c0\u6d4b\u3002 \u56e0\u4e3a\u524d\u9762\u5df2\u7ecf\u7ed9 Blackbox \u914d\u7f6e\u4e86 http_2xx \u6a21\u5757\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u9700\u8981\u5728 Prometheus \u4e2d\u52a0\u5165\u6293\u53d6\u4efb\u52a1\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408\u524d\u9762\u7684 Prometheus \u7684\u670d\u52a1\u53d1\u73b0\u529f\u80fd\u6765\u505a\u9ed1\u76d2\u76d1\u63a7\uff0c\u5bf9\u4e8e Service \u548c Ingress \u7c7b\u578b\u7684\u670d\u52a1\u53d1\u73b0\uff0c\u7528\u6765\u8fdb\u884c\u9ed1\u76d2\u76d1\u63a7\u662f\u975e\u5e38\u5408\u9002\u7684\uff0c\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a prometheus-additional.yaml - job_name: \"kubernetes-service-dns\" metrics_path: /probe params: module: [dns] static_configs: - targets: - kube-dns.kube-system:53 relabel_configs: - source_labels: [__address__] target_label: __param_target - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: blackbox:9115 - job_name: 'kubernetes-http-services' metrics_path: /probe params: module: [http_2xx] # \u4f7f\u7528\u5b9a\u4e49\u7684http\u6a21\u5757 kubernetes_sd_configs: - role: service # service \u7c7b\u578b\u7684\u670d\u52a1\u53d1\u73b0 relabel_configs: # \u53ea\u6709service\u7684annotation\u4e2d\u914d\u7f6e\u4e86 prometheus.io/http_probe=true \u7684\u624d\u8fdb\u884c\u53d1\u73b0 - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_http_probe] action: keep regex: true - source_labels: [__address__] target_label: __param_target - target_label: __address__ replacement: blackbox:9115 - source_labels: [__param_target] target_label: instance - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: [__meta_kubernetes_namespace] target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_service_name] target_label: kubernetes_name - job_name: 'kubernetes-ingresses' metrics_path: /probe params: module: [http_2xx] # \u4f7f\u7528\u5b9a\u4e49\u7684http\u6a21\u5757 kubernetes_sd_configs: - role: ingress # ingress \u7c7b\u578b\u7684\u670d\u52a1\u53d1\u73b0 relabel_configs: # \u53ea\u6709ingress\u7684annotation\u4e2d\u914d\u7f6e\u4e86 prometheus.io/http_probe=true\u7684\u624d\u8fdb\u884c\u53d1\u73b0 - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_http_probe] action: keep regex: true - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path] regex: (.+);(.+);(.+) replacement: ${1}://${2}${3} target_label: __param_target - target_label: __address__ replacement: blackbox:9115 - source_labels: [__param_target] target_label: instance - action: labelmap regex: __meta_kubernetes_ingress_label_(.+) - source_labels: [__meta_kubernetes_namespace] target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_ingress_name] target_label: kubernetes_name \u6211\u4eec\u7ed3\u5408\u524d\u9762\u7684\u670d\u52a1\u53d1\u73b0\u529f\u80fd\uff0c\u901a\u8fc7\u8fc7\u6ee4 prometheus.io/http_probe=true \u7684 Service \u548c Ingress \u624d\u8fdb\u884c HTTP \u63a2\u9488\u7c7b\u578b\u7684\u9ed1\u76d2\u76d1\u63a7\uff0c\u5176\u4ed6\u914d\u7f6e\u548c\u4e0a\u9762\u914d\u7f6e dns \u76d1\u63a7\u7684\u65f6\u5019\u662f\u4e00\u81f4\u7684\u3002\u7136\u540e\u66f4\u65b0\u914d\u7f6e\uff1a kubectl delete secret additional-scrape-configs -n kube-mon kubectl create secret --namespace kube-mon generic additional-scrape-configs --from-file=prometheus-additional.yaml --dry-run -oyaml > additional-scrape-configs.yaml additional-scrape-configs.yaml apiVersion: v1 data: prometheus-additional.yaml: LSBqb2JfbmFtZTogImt1YmVybmV0ZXMtc2VydmljZS1kbnMiCiAgbWV0cmljc19wYXRoOiAvcHJvYmUgCiAgcGFyYW1zOgogICAgbW9kdWxlOiBbZG5zXQogIHN0YXRpY19jb25maWdzOgogIC0gdGFyZ2V0czoKICAgIC0ga3ViZS1kbnMua3ViZS1zeXN0ZW06NTMKICByZWxhYmVsX2NvbmZpZ3M6CiAgLSBzb3VyY2VfbGFiZWxzOiBbX19hZGRyZXNzX19dCiAgICB0YXJnZXRfbGFiZWw6IF9fcGFyYW1fdGFyZ2V0CiAgLSBzb3VyY2VfbGFiZWxzOiBbX19wYXJhbV90YXJnZXRdCiAgICB0YXJnZXRfbGFiZWw6IGluc3RhbmNlCiAgLSB0YXJnZXRfbGFiZWw6IF9fYWRkcmVzc19fCiAgICByZXBsYWNlbWVudDogYmxhY2tib3g6OTExNQoKLSBqb2JfbmFtZTogJ2t1YmVybmV0ZXMtaHR0cC1zZXJ2aWNlcycKICBtZXRyaWNzX3BhdGg6IC9wcm9iZQogIHBhcmFtczoKICAgIG1vZHVsZTogW2h0dHBfMnh4XSAgIyDkvb/nlKjlrprkuYnnmoRodHRw5qih5Z2XCiAga3ViZXJuZXRlc19zZF9jb25maWdzOgogIC0gcm9sZTogc2VydmljZSAgIyBzZXJ2aWNlIOexu+Wei+eahOacjeWKoeWPkeeOsAogIHJlbGFiZWxfY29uZmlnczoKICAjIOWPquaciXNlcnZpY2XnmoRhbm5vdGF0aW9u5Lit6YWN572u5LqGIHByb21ldGhldXMuaW8vaHR0cF9wcm9iZT10cnVlIOeahOaJjei/m+ihjOWPkeeOsAogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfYW5ub3RhdGlvbl9wcm9tZXRoZXVzX2lvX2h0dHBfcHJvYmVdCiAgICBhY3Rpb246IGtlZXAKICAgIHJlZ2V4OiB0cnVlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19hZGRyZXNzX19dCiAgICB0YXJnZXRfbGFiZWw6IF9fcGFyYW1fdGFyZ2V0CiAgLSB0YXJnZXRfbGFiZWw6IF9fYWRkcmVzc19fCiAgICByZXBsYWNlbWVudDogYmxhY2tib3g6OTExNQogIC0gc291cmNlX2xhYmVsczogW19fcGFyYW1fdGFyZ2V0XQogICAgdGFyZ2V0X2xhYmVsOiBpbnN0YW5jZQogIC0gYWN0aW9uOiBsYWJlbG1hcAogICAgcmVnZXg6IF9fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbGFiZWxfKC4rKQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25hbWVzcGFjZV0KICAgIHRhcmdldF9sYWJlbDoga3ViZXJuZXRlc19uYW1lc3BhY2UKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX25hbWVdCiAgICB0YXJnZXRfbGFiZWw6IGt1YmVybmV0ZXNfbmFtZQoKLSBqb2JfbmFtZTogJ2t1YmVybmV0ZXMtaW5ncmVzc2VzJwogIG1ldHJpY3NfcGF0aDogL3Byb2JlCiAgcGFyYW1zOgogICAgbW9kdWxlOiBbaHR0cF8yeHhdICAjIOS9v+eUqOWumuS5ieeahGh0dHDmqKHlnZcKICBrdWJlcm5ldGVzX3NkX2NvbmZpZ3M6CiAgLSByb2xlOiBpbmdyZXNzICAjIGluZ3Jlc3Mg57G75Z6L55qE5pyN5Yqh5Y+R546wCiAgcmVsYWJlbF9jb25maWdzOgogICMg5Y+q5pyJaW5ncmVzc+eahGFubm90YXRpb27kuK3phY3nva7kuoYgcHJvbWV0aGV1cy5pby9odHRwX3Byb2JlPXRydWXnmoTmiY3ov5vooYzlj5HnjrAKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19pbmdyZXNzX2Fubm90YXRpb25fcHJvbWV0aGV1c19pb19odHRwX3Byb2JlXQogICAgYWN0aW9uOiBrZWVwCiAgICByZWdleDogdHJ1ZQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX2luZ3Jlc3Nfc2NoZW1lLF9fYWRkcmVzc19fLF9fbWV0YV9rdWJlcm5ldGVzX2luZ3Jlc3NfcGF0aF0KICAgIHJlZ2V4OiAoLispOyguKyk7KC4rKQogICAgcmVwbGFjZW1lbnQ6ICR7MX06Ly8kezJ9JHszfQogICAgdGFyZ2V0X2xhYmVsOiBfX3BhcmFtX3RhcmdldAogIC0gdGFyZ2V0X2xhYmVsOiBfX2FkZHJlc3NfXwogICAgcmVwbGFjZW1lbnQ6IGJsYWNrYm94OjkxMTUKICAtIHNvdXJjZV9sYWJlbHM6IFtfX3BhcmFtX3RhcmdldF0KICAgIHRhcmdldF9sYWJlbDogaW5zdGFuY2UKICAtIGFjdGlvbjogbGFiZWxtYXAKICAgIHJlZ2V4OiBfX21ldGFfa3ViZXJuZXRlc19pbmdyZXNzX2xhYmVsXyguKykKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19uYW1lc3BhY2VdCiAgICB0YXJnZXRfbGFiZWw6IGt1YmVybmV0ZXNfbmFtZXNwYWNlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfaW5ncmVzc19uYW1lXQogICAgdGFyZ2V0X2xhYmVsOiBrdWJlcm5ldGVzX25hbWU= kind: Secret metadata: creationTimestamp: null name: additional-scrape-configs namespace: kube-mon $ kubectl apply -f additional-scrape-configs.yaml secret/additional-scrape-configs created \u6253\u5f00 Prometheus \u7684 Target \u9875\u9762\uff0c\u7b49\u4e00\u4f1a\u513f\u5c31\u4f1a\u770b\u5230 \u4e0a\u9762\u5b9a\u4e49\u7684\u4e24\u4e2a\u4efb\u52a1\u4e86\uff1a \u4f46\u662f\u73b0\u5728\u8fd8\u6ca1\u6709\u4efb\u4f55\u6570\u636e\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e0a\u9762\u662f\u5339\u914d __meta_kubernetes_ingress_annotation_prometheus_io_http_probe \u8fd9\u4e2a\u5143\u4fe1\u606f\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u9700\u8981\u8ba9\u8fd9\u4e24\u4e2a\u4efb\u52a1\u53d1\u73b0\u7684\u8bdd\u9700\u8981\u5728 Service \u6216\u8005 Ingress \u4e2d\u914d\u7f6e\u5bf9\u5e94\u7684 annotation \uff1a annotation: prometheus.io/http-probe: \"true\" \u6bd4\u5982\u5728\u6211\u4eec\u81ea\u5df1\u7684\u4e00\u4e2a Ingress \u5bf9\u8c61\u4e2d\u6dfb\u52a0\u4e0a\u9762\u8fd9\u4e2a annotation\uff1a $ kubectl edit ingress fe apiVersion: extensions/v1beta1 kind: Ingress metadata: annotations: ... kubernetes.io/ingress.class: nginx prometheus.io/http-probe: \"true\" # \u7528\u4e8e\u9ed1\u76d2\u76d1\u63a7 creationTimestamp: \"2019-11-29T08:41:58Z\" generation: 1 name: fe namespace: default resourceVersion: \"909843\" selfLink: /apis/extensions/v1beta1/namespaces/default/ingresses/fe uid: 146e0a5d-b934-42f0-9534-fa790714b5f2 ... \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u67e5\u770b\u5230 Ingress \u8fd9\u4e2a\u4efb\u52a1\u4e0b\u9762\u5df2\u7ecf\u6709\u6293\u53d6\u4efb\u52a1\u4e86\uff1a \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 probe_duration_seconds \u6765\u68c0\u67e5\u76d1\u63a7\u7ed3\u679c\uff1a probe_duration_seconds{instance=\"http://todo.jxi.com/\"} \u5bf9\u4e8e Service \u662f\u4e00\u6837\u7684\uff0c\u5f53\u7136\u5982\u679c\u4f60\u9700\u8981\u5bf9\u76d1\u63a7\u7684\u8def\u5f84\u3001\u7aef\u53e3\u8fd9\u4e9b\u505a\u63a7\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5728 relabel_configs \u4e2d\u53bb\u505a\u76f8\u5e94\u7684\u914d\u7f6e\uff0c\u6bd4\u5982\u6211\u4eec\u60f3\u5bf9 Service \u7684\u9ed1\u76d2\u505a\u81ea\u5b9a\u4e49\u914d\u7f6e\uff0c\u53ef\u4ee5\u60f3\u4e0b\u9762\u8fd9\u6837\u914d\u7f6e\uff1a - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace, __meta_kubernetes_service_annotation_prometheus_io_http_probe_port, __meta_kubernetes_service_annotation_prometheus_io_http_probe_path] action: replace target_label: __param_target regex: (.+);(.+);(.+);(.+) replacement: $1.$2:$3$4 \u8fd9\u6837\u6211\u4eec\u5c31\u9700\u8981\u5728 Service \u4e2d\u914d\u7f6e\u8fd9\u6837\u7684 annotation \u4e86\uff1a annotation: prometheus.io/http-probe: \"true\" prometheus.io/http-probe-port: \"8080\" prometheus.io/http-probe-path: \"/healthz\" \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86 HTTP \u63a2\u9488\u7684\u9ed1\u76d2\u76d1\u63a7\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u914d\u7f6e TCP \u7684\u76d1\u63a7\uff0c\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u914d\u7f6e\u4e86\u8fd9\u4e2a\u6a21\u5757\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u53bb\u914d\u7f6e\u4e0b\u3002 Prometheus \u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u4ed3\u5e93\uff1ahttps://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml Blackbox \u7684\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u53c2\u8003\uff1ahttps://github.com/prometheus/blackbox_exporter/blob/master/example.yml","title":"\u7b2c\u4e94\u8282 Prometheus \u9ed1\u76d2\u76d1\u63a7"},{"location":"chap4/24Kubernetes_Prometheus_blackbox/#prometheus","text":"\u524d\u9762\u6211\u4eec\u4e3b\u8981\u4ecb\u7ecd\u4e86 Prometheus \u4e0b\u5982\u4f55\u8fdb\u884c \u767d\u76d2\u76d1\u63a7 \uff0c\u6211\u4eec\u76d1\u63a7\u4e3b\u673a\u7684\u8d44\u6e90\u7528\u91cf\u3001\u5bb9\u5668\u7684\u8fd0\u884c\u72b6\u6001\u3001\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\u7684\u8fd0\u884c\u6570\u636e\u3001\u81ea\u52a8\u53d1\u73b0 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u8d44\u6e90\u7b49\u7b49\uff0c \u8fd9\u4e9b\u90fd\u662f\u652f\u6301\u4e1a\u52a1\u548c\u670d\u52a1\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u901a\u8fc7\u767d\u76d2\u80fd\u591f\u4e86\u89e3\u5176\u5185\u90e8\u7684\u5b9e\u9645\u8fd0\u884c\u72b6\u6001\uff0c\u901a\u8fc7\u5bf9\u76d1\u63a7\u6307\u6807\u7684\u89c2\u5bdf\u80fd\u591f\u9884\u5224\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u4ece\u800c\u5bf9\u6f5c\u5728\u7684\u4e0d\u786e\u5b9a\u56e0\u7d20\u8fdb\u884c\u4f18\u5316 \u800c\u4ece\u5b8c\u6574\u7684\u76d1\u63a7\u903b\u8f91\u7684\u89d2\u5ea6\uff0c\u9664\u4e86\u5927\u91cf\u7684\u5e94\u7528\u767d\u76d2\u76d1\u63a7\u4ee5\u5916\uff0c \u8fd8\u5e94\u8be5\u6dfb\u52a0\u9002\u5f53\u7684 Blackbox \uff08\u9ed1\u76d2\uff09\u76d1\u63a7\uff0c\u9ed1\u76d2\u76d1\u63a7\u5373\u4ee5\u7528\u6237\u7684\u8eab\u4efd\u6d4b\u8bd5\u670d\u52a1\u7684\u5916\u90e8\u53ef\u89c1\u6027\uff0c\u5e38\u89c1\u7684\u9ed1\u76d2\u76d1\u63a7\u5305\u62ec HTTP \u63a2\u9488 \u3001 TCP \u63a2\u9488 \u7b49\u7528\u4e8e\u68c0\u6d4b\u7ad9\u70b9\u6216\u8005\u670d\u52a1\u7684\u53ef\u8bbf\u95ee\u6027\uff0c\u4ee5\u53ca\u8bbf\u95ee\u6548\u7387\u7b49 \u3002 \u9ed1\u76d2\u76d1\u63a7\u76f8\u8f83\u4e8e\u767d\u76d2\u76d1\u63a7\u6700\u5927\u7684\u4e0d\u540c\u5728\u4e8e\u9ed1\u76d2\u76d1\u63a7\u662f\u4ee5\u6545\u969c\u4e3a\u5bfc\u5411\u5f53\u6545\u969c\u53d1\u751f\u65f6\uff0c\u9ed1\u76d2\u76d1\u63a7\u80fd\u5feb\u901f\u53d1\u73b0\u6545\u969c\uff0c\u800c\u767d\u76d2\u76d1\u63a7\u5219\u4fa7\u91cd\u4e8e\u4e3b\u52a8\u53d1\u73b0\u6216\u8005\u9884\u6d4b\u6f5c\u5728\u7684\u95ee\u9898\u3002\u4e00\u4e2a\u5b8c\u5584\u7684\u76d1\u63a7\u76ee\u6807\u662f\u8981\u80fd\u591f\u4ece\u767d\u76d2\u7684\u89d2\u5ea6\u53d1\u73b0\u6f5c\u5728\u95ee\u9898\uff0c\u80fd\u591f\u5728\u9ed1\u76d2\u7684\u89d2\u5ea6\u5feb\u901f\u53d1\u73b0\u5df2\u7ecf\u53d1\u751f\u7684\u95ee\u9898 \u3002 Blackbox Exporter \u662f Prometheus \u793e\u533a\u63d0\u4f9b\u7684\u5b98\u65b9\u9ed1\u76d2\u76d1\u63a7\u89e3\u51b3\u65b9\u6848\uff0c\u5176\u5141\u8bb8\u7528\u6237\u901a\u8fc7\uff1a HTTP \u3001 HTTPS \u3001 DNS \u3001 TCP \u4ee5\u53ca ICMP \u7684\u65b9\u5f0f\u5bf9\u7f51\u7edc\u8fdb\u884c\u63a2\u6d4b Marvelous Prometheus Blackbox alerts","title":"\u7b2c\u4e94\u8282 Prometheus \u9ed1\u76d2\u76d1\u63a7"},{"location":"chap4/24Kubernetes_Prometheus_blackbox/#2-helm-prometheus-operator","text":"kubectl create ns kube-mon helm install prom-blackbox stable/prometheus-operator -f prometheus-operator-values.yml --namespace kube-mon prometheus-operator-values.yml # We don't need the alertmanager for this demo alertmanager: enabled: false # This configuration means all ServiceMonitors in the namespsace will be picked up # Use with caution! prometheus: prometheusSpec: serviceMonitorSelectorNilUsesHelmValues: false serviceMonitorSelector: {} $ helm install prom-blackbox stable/prometheus-operator -f prometheus-operator-values.yml --namespace kube-mon NAME: prom-blackbox LAST DEPLOYED: Tue Dec 17 10:17:02 2019 NAMESPACE: kube-mon STATUS: deployed REVISION: 1 NOTES: The Prometheus Operator has been installed. Check its status by running: kubectl --namespace kube-mon get pods -l \"release=prom-blackbox\" Visit https://github.com/coreos/prometheus-operator for instructions on how","title":"2 \u5feb\u901f\u5b89\u88c5 helm-prometheus-operator"},{"location":"chap4/24Kubernetes_Prometheus_blackbox/#2-1-blackbox-exporter","text":"\u540c\u6837\u9996\u5148\u9700\u8981\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u8fd0\u884c blackbox-exporter \u670d\u52a1\uff0c\u540c\u6837\u901a\u8fc7\u4e00\u4e2a ConfigMap \u8d44\u6e90\u5bf9\u8c61\u6765\u4e3a Blackbox \u63d0\u4f9b\u914d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\uff1a\uff08 prome-blackbox.yaml \uff09 apiVersion: v1 kind: ConfigMap metadata: name: blackbox-config namespace: kube-mon data: blackbox.yml: |- modules: http_2xx: # http \u68c0\u6d4b\u6a21\u5757 Blockbox-Exporter \u4e2d\u6240\u6709\u7684\u63a2\u9488\u5747\u662f\u4ee5 Module \u7684\u4fe1\u606f\u8fdb\u884c\u914d\u7f6e prober: http timeout: 10s http: valid_http_versions: [\"HTTP/1.1\", \"HTTP/2\"] valid_status_codes: [200] # \u8fd9\u91cc\u6700\u597d\u4f5c\u4e00\u4e2a\u8fd4\u56de\u72b6\u6001\u7801\uff0c\u5728grafana\u4f5c\u56fe\u65f6\uff0c\u6709\u660e\u793a---\u9648\u521a\u6ce8\u91ca\u3002 method: GET preferred_ip_protocol: \"ip4\" http_post_2xx: # http post \u76d1\u6d4b\u6a21\u5757 prober: http timeout: 10s http: valid_http_versions: [\"HTTP/1.1\", \"HTTP/2\"] method: POST preferred_ip_protocol: \"ip4\" tcp_connect: # TCP \u68c0\u6d4b\u6a21\u5757 prober: tcp timeout: 10s dns: # DNS \u68c0\u6d4b\u6a21\u5757 prober: dns dns: transport_protocol: \"tcp\" # \u9ed8\u8ba4\u662f udp preferred_ip_protocol: \"ip4\" # \u9ed8\u8ba4\u662f ip6 query_name: \"kubernetes.default.svc.cluster.local\" --- apiVersion: apps/v1 kind: Deployment metadata: name: blackbox namespace: kube-mon spec: selector: matchLabels: app: blackbox template: metadata: labels: app: blackbox spec: containers: - image: prom/blackbox-exporter:v0.16.0 name: blackbox args: - --config.file=/etc/blackbox_exporter/blackbox.yml # ConfigMap \u4e2d\u7684\u914d\u7f6e\u6587\u4ef6 - --log.level=error # \u9519\u8bef\u7ea7\u522b\u63a7\u5236 ports: - containerPort: 9115 volumeMounts: - name: config mountPath: /etc/blackbox_exporter volumes: - name: config configMap: name: blackbox-config --- apiVersion: v1 kind: Service metadata: name: blackbox namespace: kube-mon spec: selector: app: blackbox ports: - port: 9115 targetPort: 9115 \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\uff1a $ kubectl apply -f content/monitor/manifests/install/prome-blackbox.yaml configmap/blackbox-config created deployment.apps/blackbox created service/blackbox created \u7136\u540e\u9700\u8981\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165\u5bf9 BlackBox \u7684\u6293\u53d6\u8bbe\u7f6e\uff0c","title":"2-1 \u5feb\u901f\u5b89\u88c5 blackbox-exporter \u670d\u52a1"},{"location":"chap4/24Kubernetes_Prometheus_blackbox/#3-k8s-prometheus","text":"apiVersion: v1 kind: ConfigMap metadata: name: prometheus-config namespace: kube-mon data: prometheus.yml: | global: scrape_interval: 15s scrape_timeout: 15s scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: \"kubernetes-service-dns\" metrics_path: /probe # \u4e0d\u662f metrics\uff0c\u662f probe params: module: [dns] # \u4f7f\u7528 DNS \u6a21\u5757 static_configs: - targets: - kube-dns.kube-system:53 # \u4e0d\u8981\u7701\u7565\u7aef\u53e3\u53f7 relabel_configs: - source_labels: [__address__] target_label: __param_target - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: blackbox:9115 # \u670d\u52a1\u5730\u5740\uff0c\u548c\u4e0a\u9762\u7684 Service \u5b9a\u4e49\u4fdd\u6301\u4e00\u81f4 \u9996\u5148\u83b7\u53d6 targets \u5b9e\u4f8b\u7684 __address__ \u503c\u5199\u8fdb __param_target , __param_<name> \u5f62\u5f0f\u7684\u6807\u7b7e\u91cc\u7684 name \u548c\u5b83\u7684\u503c\u4f1a\u88ab\u6dfb\u52a0\u5230\u53d1\u9001\u5230\u9ed1\u76d2\u7684 http \u7684 header \u7684 params \u5f53\u4f5c\u952e\u503c\uff0c\u4f8b\u5982 __param_module \u5bf9\u5e94 params \u91cc\u7684 module \u3002 \u7136\u540e\u83b7\u53d6 __param_target \u7684\u503c\uff0c\u5e76\u8986\u5199\u5230 instance \u6807\u7b7e\u4e2d\uff0c \u8986\u5199 Target \u5b9e\u4f8b\u7684 __address__ \u6807\u7b7e\u503c\u4e3a BlackBox Exporter \u5b9e\u4f8b\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u5411 blackbox:9115 \u53d1\u9001\u8bf7\u6c42\u83b7\u53d6\u5b9e\u4f8b\u7684 metrics \u4fe1\u606f\u3002 \u7136\u540e\u66f4\u65b0\u914d\u7f6e\uff1a $ kubectl apply -f prometheus-cm.yaml configmap/prometheus-config configured # \u9694\u4e00\u4f1a\u513f\u6267\u884c reload \u64cd\u4f5c $ curl -X POST \"http://10.244.3.174:9090/-/reload\" # promethues pod ip and suppose hot reload \u6253\u5f00 Prometheus \u7684 Target \u9875\u9762\uff0c\u5c31\u4f1a\u770b\u5230 \u4e0a\u9762\u5b9a\u4e49\u7684 kubernetes-service-dns \u4efb\u52a1\u4e86\uff1a","title":"3 \u4f20\u7edf k8s-Prometheus  \u65b9\u5f0f"},{"location":"chap4/24Kubernetes_Prometheus_blackbox/#prometheus-opeartor-servicemonitor","text":"Reference: Additional Scrape Configuration Creating an additional configuration: prometheus-additional.yaml - job_name: \"kubernetes-service-dns\" metrics_path: /probe # \u4e0d\u662f metrics\uff0c\u662f probe params: module: [dns] # \u4f7f\u7528 DNS \u6a21\u5757 static_configs: - targets: - kube-dns.kube-system:53 # \u4e0d\u8981\u7701\u7565\u7aef\u53e3\u53f7 relabel_configs: - source_labels: [__address__] target_label: __param_target - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: blackbox:9115 # \u670d\u52a1\u5730\u5740\uff0c\u548c\u4e0a\u9762\u7684 Service \u5b9a\u4e49\u4fdd\u6301\u4e00\u81f4 kubectl create secret --namesapce kube-mon generic additional-scrape-configs --from-file=prometheus-additional.yaml --dry-run -oyaml > additional-scrape-configs.yaml additional-scrape-configs.yaml apiVersion: v1 data: prometheus-additional.yaml: ...... kind: Secret metadata: creationTimestamp: null name: additional-scrape-configs namespace: kube-mon $ kubectl apply -f additional-scrape-configs.yaml secret/additional-scrape-configs created Finally, reference this additional configuration in your prometheus.yaml CRD . $ kubectl get prometheus -n kube-mon NAME AGE prom-blackbox-prometheus-o-prometheus 6h34m $ kubectl edit Prometheus prom-blackbox-prometheus-o-prometheus -n kube-mon ... ruleNamespaceSelector: {} ruleSelector: matchLabels: app: prometheus-operator release: prom-blackbox securityContext: ... # \u9694\u4e00\u4f1a\u513f\u6267\u884c kubectl port-forward svc/prom-blackbox-prometheus-o-prometheus -n kube-mon 9090:9090 \u56de\u5230 Graph \u9875\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528 probe_success{job=\"kubernetes-service-dns\"} \u6765\u67e5\u770b\u68c0\u6d4b\u7ed3\u679c\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5bf9 DNS \u7684\u9ed1\u76d2\u76d1\u63a7\u3002 \u9664\u4e86 DNS \u7684\u914d\u7f6e\u5916\uff0c\u4e0a\u9762\u6211\u4eec\u8fd8\u914d\u7f6e\u4e86\u4e00\u4e2a http_2xx \u7684\u6a21\u5757\uff0c\u4e5f\u5c31\u662f HTTP \u63a2\u9488\uff0c HTTP \u63a2\u9488\u662f\u8fdb\u884c\u9ed1\u76d2\u76d1\u63a7\u65f6\u6700\u5e38\u7528\u7684\u63a2\u9488\u4e4b\u4e00\uff0c\u901a\u8fc7 HTTP \u63a2\u9488\u80fd\u591f\u5bf9\u7f51\u7ad9\u6216\u8005 HTTP \u670d\u52a1\u5efa\u7acb\u6709\u6548\u7684\u76d1\u63a7\uff0c\u5305\u62ec\u5176\u672c\u8eab\u7684\u53ef\u7528\u6027\uff0c\u4ee5\u53ca\u7528\u6237\u4f53\u9a8c\u76f8\u5173\u7684\u5982\u54cd\u5e94\u65f6\u95f4\u7b49\u7b49\u3002\u9664\u4e86\u80fd\u591f\u5728\u670d\u52a1\u51fa\u73b0\u5f02\u5e38\u7684\u65f6\u5019\u53ca\u65f6\u62a5\u8b66\uff0c\u8fd8\u80fd\u5e2e\u52a9\u7cfb\u7edf\u7ba1\u7406\u5458\u5206\u6790\u548c\u4f18\u5316\u7f51\u7ad9\u4f53\u9a8c\u3002 \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ed6\u6765\u5bf9 http \u670d\u52a1\u8fdb\u884c\u68c0\u6d4b\u3002 \u56e0\u4e3a\u524d\u9762\u5df2\u7ecf\u7ed9 Blackbox \u914d\u7f6e\u4e86 http_2xx \u6a21\u5757\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u9700\u8981\u5728 Prometheus \u4e2d\u52a0\u5165\u6293\u53d6\u4efb\u52a1\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408\u524d\u9762\u7684 Prometheus \u7684\u670d\u52a1\u53d1\u73b0\u529f\u80fd\u6765\u505a\u9ed1\u76d2\u76d1\u63a7\uff0c\u5bf9\u4e8e Service \u548c Ingress \u7c7b\u578b\u7684\u670d\u52a1\u53d1\u73b0\uff0c\u7528\u6765\u8fdb\u884c\u9ed1\u76d2\u76d1\u63a7\u662f\u975e\u5e38\u5408\u9002\u7684\uff0c\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a prometheus-additional.yaml - job_name: \"kubernetes-service-dns\" metrics_path: /probe params: module: [dns] static_configs: - targets: - kube-dns.kube-system:53 relabel_configs: - source_labels: [__address__] target_label: __param_target - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: blackbox:9115 - job_name: 'kubernetes-http-services' metrics_path: /probe params: module: [http_2xx] # \u4f7f\u7528\u5b9a\u4e49\u7684http\u6a21\u5757 kubernetes_sd_configs: - role: service # service \u7c7b\u578b\u7684\u670d\u52a1\u53d1\u73b0 relabel_configs: # \u53ea\u6709service\u7684annotation\u4e2d\u914d\u7f6e\u4e86 prometheus.io/http_probe=true \u7684\u624d\u8fdb\u884c\u53d1\u73b0 - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_http_probe] action: keep regex: true - source_labels: [__address__] target_label: __param_target - target_label: __address__ replacement: blackbox:9115 - source_labels: [__param_target] target_label: instance - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: [__meta_kubernetes_namespace] target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_service_name] target_label: kubernetes_name - job_name: 'kubernetes-ingresses' metrics_path: /probe params: module: [http_2xx] # \u4f7f\u7528\u5b9a\u4e49\u7684http\u6a21\u5757 kubernetes_sd_configs: - role: ingress # ingress \u7c7b\u578b\u7684\u670d\u52a1\u53d1\u73b0 relabel_configs: # \u53ea\u6709ingress\u7684annotation\u4e2d\u914d\u7f6e\u4e86 prometheus.io/http_probe=true\u7684\u624d\u8fdb\u884c\u53d1\u73b0 - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_http_probe] action: keep regex: true - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path] regex: (.+);(.+);(.+) replacement: ${1}://${2}${3} target_label: __param_target - target_label: __address__ replacement: blackbox:9115 - source_labels: [__param_target] target_label: instance - action: labelmap regex: __meta_kubernetes_ingress_label_(.+) - source_labels: [__meta_kubernetes_namespace] target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_ingress_name] target_label: kubernetes_name \u6211\u4eec\u7ed3\u5408\u524d\u9762\u7684\u670d\u52a1\u53d1\u73b0\u529f\u80fd\uff0c\u901a\u8fc7\u8fc7\u6ee4 prometheus.io/http_probe=true \u7684 Service \u548c Ingress \u624d\u8fdb\u884c HTTP \u63a2\u9488\u7c7b\u578b\u7684\u9ed1\u76d2\u76d1\u63a7\uff0c\u5176\u4ed6\u914d\u7f6e\u548c\u4e0a\u9762\u914d\u7f6e dns \u76d1\u63a7\u7684\u65f6\u5019\u662f\u4e00\u81f4\u7684\u3002\u7136\u540e\u66f4\u65b0\u914d\u7f6e\uff1a kubectl delete secret additional-scrape-configs -n kube-mon kubectl create secret --namespace kube-mon generic additional-scrape-configs --from-file=prometheus-additional.yaml --dry-run -oyaml > additional-scrape-configs.yaml additional-scrape-configs.yaml apiVersion: v1 data: prometheus-additional.yaml: LSBqb2JfbmFtZTogImt1YmVybmV0ZXMtc2VydmljZS1kbnMiCiAgbWV0cmljc19wYXRoOiAvcHJvYmUgCiAgcGFyYW1zOgogICAgbW9kdWxlOiBbZG5zXQogIHN0YXRpY19jb25maWdzOgogIC0gdGFyZ2V0czoKICAgIC0ga3ViZS1kbnMua3ViZS1zeXN0ZW06NTMKICByZWxhYmVsX2NvbmZpZ3M6CiAgLSBzb3VyY2VfbGFiZWxzOiBbX19hZGRyZXNzX19dCiAgICB0YXJnZXRfbGFiZWw6IF9fcGFyYW1fdGFyZ2V0CiAgLSBzb3VyY2VfbGFiZWxzOiBbX19wYXJhbV90YXJnZXRdCiAgICB0YXJnZXRfbGFiZWw6IGluc3RhbmNlCiAgLSB0YXJnZXRfbGFiZWw6IF9fYWRkcmVzc19fCiAgICByZXBsYWNlbWVudDogYmxhY2tib3g6OTExNQoKLSBqb2JfbmFtZTogJ2t1YmVybmV0ZXMtaHR0cC1zZXJ2aWNlcycKICBtZXRyaWNzX3BhdGg6IC9wcm9iZQogIHBhcmFtczoKICAgIG1vZHVsZTogW2h0dHBfMnh4XSAgIyDkvb/nlKjlrprkuYnnmoRodHRw5qih5Z2XCiAga3ViZXJuZXRlc19zZF9jb25maWdzOgogIC0gcm9sZTogc2VydmljZSAgIyBzZXJ2aWNlIOexu+Wei+eahOacjeWKoeWPkeeOsAogIHJlbGFiZWxfY29uZmlnczoKICAjIOWPquaciXNlcnZpY2XnmoRhbm5vdGF0aW9u5Lit6YWN572u5LqGIHByb21ldGhldXMuaW8vaHR0cF9wcm9iZT10cnVlIOeahOaJjei/m+ihjOWPkeeOsAogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfYW5ub3RhdGlvbl9wcm9tZXRoZXVzX2lvX2h0dHBfcHJvYmVdCiAgICBhY3Rpb246IGtlZXAKICAgIHJlZ2V4OiB0cnVlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19hZGRyZXNzX19dCiAgICB0YXJnZXRfbGFiZWw6IF9fcGFyYW1fdGFyZ2V0CiAgLSB0YXJnZXRfbGFiZWw6IF9fYWRkcmVzc19fCiAgICByZXBsYWNlbWVudDogYmxhY2tib3g6OTExNQogIC0gc291cmNlX2xhYmVsczogW19fcGFyYW1fdGFyZ2V0XQogICAgdGFyZ2V0X2xhYmVsOiBpbnN0YW5jZQogIC0gYWN0aW9uOiBsYWJlbG1hcAogICAgcmVnZXg6IF9fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbGFiZWxfKC4rKQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25hbWVzcGFjZV0KICAgIHRhcmdldF9sYWJlbDoga3ViZXJuZXRlc19uYW1lc3BhY2UKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX25hbWVdCiAgICB0YXJnZXRfbGFiZWw6IGt1YmVybmV0ZXNfbmFtZQoKLSBqb2JfbmFtZTogJ2t1YmVybmV0ZXMtaW5ncmVzc2VzJwogIG1ldHJpY3NfcGF0aDogL3Byb2JlCiAgcGFyYW1zOgogICAgbW9kdWxlOiBbaHR0cF8yeHhdICAjIOS9v+eUqOWumuS5ieeahGh0dHDmqKHlnZcKICBrdWJlcm5ldGVzX3NkX2NvbmZpZ3M6CiAgLSByb2xlOiBpbmdyZXNzICAjIGluZ3Jlc3Mg57G75Z6L55qE5pyN5Yqh5Y+R546wCiAgcmVsYWJlbF9jb25maWdzOgogICMg5Y+q5pyJaW5ncmVzc+eahGFubm90YXRpb27kuK3phY3nva7kuoYgcHJvbWV0aGV1cy5pby9odHRwX3Byb2JlPXRydWXnmoTmiY3ov5vooYzlj5HnjrAKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19pbmdyZXNzX2Fubm90YXRpb25fcHJvbWV0aGV1c19pb19odHRwX3Byb2JlXQogICAgYWN0aW9uOiBrZWVwCiAgICByZWdleDogdHJ1ZQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX2luZ3Jlc3Nfc2NoZW1lLF9fYWRkcmVzc19fLF9fbWV0YV9rdWJlcm5ldGVzX2luZ3Jlc3NfcGF0aF0KICAgIHJlZ2V4OiAoLispOyguKyk7KC4rKQogICAgcmVwbGFjZW1lbnQ6ICR7MX06Ly8kezJ9JHszfQogICAgdGFyZ2V0X2xhYmVsOiBfX3BhcmFtX3RhcmdldAogIC0gdGFyZ2V0X2xhYmVsOiBfX2FkZHJlc3NfXwogICAgcmVwbGFjZW1lbnQ6IGJsYWNrYm94OjkxMTUKICAtIHNvdXJjZV9sYWJlbHM6IFtfX3BhcmFtX3RhcmdldF0KICAgIHRhcmdldF9sYWJlbDogaW5zdGFuY2UKICAtIGFjdGlvbjogbGFiZWxtYXAKICAgIHJlZ2V4OiBfX21ldGFfa3ViZXJuZXRlc19pbmdyZXNzX2xhYmVsXyguKykKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19uYW1lc3BhY2VdCiAgICB0YXJnZXRfbGFiZWw6IGt1YmVybmV0ZXNfbmFtZXNwYWNlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfaW5ncmVzc19uYW1lXQogICAgdGFyZ2V0X2xhYmVsOiBrdWJlcm5ldGVzX25hbWU= kind: Secret metadata: creationTimestamp: null name: additional-scrape-configs namespace: kube-mon $ kubectl apply -f additional-scrape-configs.yaml secret/additional-scrape-configs created \u6253\u5f00 Prometheus \u7684 Target \u9875\u9762\uff0c\u7b49\u4e00\u4f1a\u513f\u5c31\u4f1a\u770b\u5230 \u4e0a\u9762\u5b9a\u4e49\u7684\u4e24\u4e2a\u4efb\u52a1\u4e86\uff1a \u4f46\u662f\u73b0\u5728\u8fd8\u6ca1\u6709\u4efb\u4f55\u6570\u636e\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e0a\u9762\u662f\u5339\u914d __meta_kubernetes_ingress_annotation_prometheus_io_http_probe \u8fd9\u4e2a\u5143\u4fe1\u606f\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u9700\u8981\u8ba9\u8fd9\u4e24\u4e2a\u4efb\u52a1\u53d1\u73b0\u7684\u8bdd\u9700\u8981\u5728 Service \u6216\u8005 Ingress \u4e2d\u914d\u7f6e\u5bf9\u5e94\u7684 annotation \uff1a annotation: prometheus.io/http-probe: \"true\" \u6bd4\u5982\u5728\u6211\u4eec\u81ea\u5df1\u7684\u4e00\u4e2a Ingress \u5bf9\u8c61\u4e2d\u6dfb\u52a0\u4e0a\u9762\u8fd9\u4e2a annotation\uff1a $ kubectl edit ingress fe apiVersion: extensions/v1beta1 kind: Ingress metadata: annotations: ... kubernetes.io/ingress.class: nginx prometheus.io/http-probe: \"true\" # \u7528\u4e8e\u9ed1\u76d2\u76d1\u63a7 creationTimestamp: \"2019-11-29T08:41:58Z\" generation: 1 name: fe namespace: default resourceVersion: \"909843\" selfLink: /apis/extensions/v1beta1/namespaces/default/ingresses/fe uid: 146e0a5d-b934-42f0-9534-fa790714b5f2 ... \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u67e5\u770b\u5230 Ingress \u8fd9\u4e2a\u4efb\u52a1\u4e0b\u9762\u5df2\u7ecf\u6709\u6293\u53d6\u4efb\u52a1\u4e86\uff1a \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 probe_duration_seconds \u6765\u68c0\u67e5\u76d1\u63a7\u7ed3\u679c\uff1a probe_duration_seconds{instance=\"http://todo.jxi.com/\"} \u5bf9\u4e8e Service \u662f\u4e00\u6837\u7684\uff0c\u5f53\u7136\u5982\u679c\u4f60\u9700\u8981\u5bf9\u76d1\u63a7\u7684\u8def\u5f84\u3001\u7aef\u53e3\u8fd9\u4e9b\u505a\u63a7\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5728 relabel_configs \u4e2d\u53bb\u505a\u76f8\u5e94\u7684\u914d\u7f6e\uff0c\u6bd4\u5982\u6211\u4eec\u60f3\u5bf9 Service \u7684\u9ed1\u76d2\u505a\u81ea\u5b9a\u4e49\u914d\u7f6e\uff0c\u53ef\u4ee5\u60f3\u4e0b\u9762\u8fd9\u6837\u914d\u7f6e\uff1a - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace, __meta_kubernetes_service_annotation_prometheus_io_http_probe_port, __meta_kubernetes_service_annotation_prometheus_io_http_probe_path] action: replace target_label: __param_target regex: (.+);(.+);(.+);(.+) replacement: $1.$2:$3$4 \u8fd9\u6837\u6211\u4eec\u5c31\u9700\u8981\u5728 Service \u4e2d\u914d\u7f6e\u8fd9\u6837\u7684 annotation \u4e86\uff1a annotation: prometheus.io/http-probe: \"true\" prometheus.io/http-probe-port: \"8080\" prometheus.io/http-probe-path: \"/healthz\" \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86 HTTP \u63a2\u9488\u7684\u9ed1\u76d2\u76d1\u63a7\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u914d\u7f6e TCP \u7684\u76d1\u63a7\uff0c\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u914d\u7f6e\u4e86\u8fd9\u4e2a\u6a21\u5757\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u53bb\u914d\u7f6e\u4e0b\u3002 Prometheus \u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u4ed3\u5e93\uff1ahttps://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml Blackbox \u7684\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u53c2\u8003\uff1ahttps://github.com/prometheus/blackbox_exporter/blob/master/example.yml","title":"Prometheus-Opeartor \u7ed5\u8fc7 ServiceMonitor \u65b9\u5f0f"},{"location":"chap4/32Prometheus_troubleshoot_Servicemonitor/","text":"\u7b2c\u516d\u8282 Troubleshooting ServiceMonitor changes When creating/deleting/modifying ServiceMonitor objects it is sometimes not as obvious what piece is not working properly. This section gives a step by step guide how to troubleshoot such actions on a ServiceMonitor object. 1 Overview of ServiceMonitor tagging and related elements A common problem related to ServiceMonitor identification by Prometheus is related to an incorrect tagging , that does not match the Prometheus custom resource definition scope, or lack of permission for the Prometheus ServiceAccount to get, list, watch Services and Endpoints from the target application being monitored. As a general guideline consider the diagram below, giving an example of a Deployment and Service called my-app , being monitored by Prometheus based on a ServiceMonitor named my-service-monitor : Note: The ServiceMonitor references a Service (not a Deployment , or a Pod ), by labels and by the port name in the Service . This port name is optional in Kubernetes, but must be specified for the ServiceMonitor to work. It is not the same as the port name on the Pod or container , although it can be. 2 Has my ServiceMonitor been picked up by Prometheus? ServiceMonitor objects are selected by the serviceMonitorSelector of a Prometheus object. The name of a ServiceMonitor is encoded in the Prometheus configuration, so you can simply grep whether it is present there. The configuration generated by the Prometheus Operator is stored in a Kubernetes Secret , named after the Prometheus object name prefixed with prometheus- and is located in the same namespace as the Prometheus object. For example for a Prometheus object called k8s one can find out if the ServiceMonitor named elasticsearch has been picked up with: kubectl -n monitoring get secret prometheus-k8s -ojson | jq -r '.data[\"prometheus.yaml.gz\"]' | base64 -d | gunzip | grep \"elasticsearch\" - job_name: default/elasticsearch/0 regex: elasticsearch-exporter","title":"\u7b2c\u516d\u8282 Troubleshooting ServiceMonitor changes"},{"location":"chap4/32Prometheus_troubleshoot_Servicemonitor/#troubleshooting-servicemonitor-changes","text":"When creating/deleting/modifying ServiceMonitor objects it is sometimes not as obvious what piece is not working properly. This section gives a step by step guide how to troubleshoot such actions on a ServiceMonitor object.","title":"\u7b2c\u516d\u8282 Troubleshooting ServiceMonitor changes"},{"location":"chap4/32Prometheus_troubleshoot_Servicemonitor/#1-overview-of-servicemonitor-tagging-and-related-elements","text":"A common problem related to ServiceMonitor identification by Prometheus is related to an incorrect tagging , that does not match the Prometheus custom resource definition scope, or lack of permission for the Prometheus ServiceAccount to get, list, watch Services and Endpoints from the target application being monitored. As a general guideline consider the diagram below, giving an example of a Deployment and Service called my-app , being monitored by Prometheus based on a ServiceMonitor named my-service-monitor :","title":"1 Overview of ServiceMonitor tagging and related elements"},{"location":"chap4/32Prometheus_troubleshoot_Servicemonitor/#note","text":"The ServiceMonitor references a Service (not a Deployment , or a Pod ), by labels and by the port name in the Service . This port name is optional in Kubernetes, but must be specified for the ServiceMonitor to work. It is not the same as the port name on the Pod or container , although it can be.","title":"Note:"},{"location":"chap4/32Prometheus_troubleshoot_Servicemonitor/#2-has-my-servicemonitor-been-picked-up-by-prometheus","text":"ServiceMonitor objects are selected by the serviceMonitorSelector of a Prometheus object. The name of a ServiceMonitor is encoded in the Prometheus configuration, so you can simply grep whether it is present there. The configuration generated by the Prometheus Operator is stored in a Kubernetes Secret , named after the Prometheus object name prefixed with prometheus- and is located in the same namespace as the Prometheus object. For example for a Prometheus object called k8s one can find out if the ServiceMonitor named elasticsearch has been picked up with: kubectl -n monitoring get secret prometheus-k8s -ojson | jq -r '.data[\"prometheus.yaml.gz\"]' | base64 -d | gunzip | grep \"elasticsearch\" - job_name: default/elasticsearch/0 regex: elasticsearch-exporter","title":"2 Has my ServiceMonitor been picked up by Prometheus?"},{"location":"chap4/43Prometheus_operator_ssl_exporter/","text":"\u7b2c\u4e03\u8282 \u4f7f\u7528 ssl_exporter \u76d1\u63a7K8S\u96c6\u7fa4\u8bc1\u4e66 \u4f7f\u7528kubeadm\u642d\u5efa\u7684\u96c6\u7fa4\u9ed8\u8ba4\u8bc1\u4e66\u6709\u6548\u671f\u662f1\u5e74\uff0c\u7eed\u8d39\u8bc1\u4e66\u5176\u5b9e\u662f\u4e00\u4ef6\u5f88\u5feb\u7684\u4e8b\u60c5\u3002\u4f46\u662f\u5c31\u6015\u51fa\u4e8b\u4e86\u624d\u53d1\u73b0\uff0c\u6bd5\u7adf\u4f5c\u4e3a\u4e13\u4e1a\u642c\u7816\u5de5\u7a0b\u5e08\uff0c\u6bcf\u5929\u90fd\u5f88\u5fd9\u7684\u3002 \u9274\u4e8e\u6b64\uff0c\u76d1\u63a7\u96c6\u7fa4\u8bc1\u4e66\u6709\u6548\u671f\u662f\u4e00\u4ef6\u4e0d\u5f97\u4e0d\u505a\u7684\u4e8b\u60c5\u3002Prometheus\u4f5c\u4e3a\u4e91\u539f\u751f\u9886\u57df\u7684\u738b\u8005\uff0c\u5982\u679c\u80fd\u7528\u5b83\u6765\u76d1\u63a7\u8bc1\u4e66\u6709\u6548\u671f\u5e76\u80fd\u53ca\u65f6\u544a\u8b66\uff0c\u90a3\u5c31\u518d\u597d\u4e0d\u8fc7\u4e86\u3002 ssl_exporter \u5c31\u662f\u6765\u505a\u8fd9\u4e2a\u4e8b\u60c5\u7684\u3002 ssh_exporter \u662f\u4e00\u4e2aPrometheus Exporter\u80fd\u63d0\u4f9b\u591a\u79cd\u9488\u5bf9 SSL \u7684\u68c0\u6d4b\u624b\u6bb5\uff0c \u5305\u62ec\uff1ahttps \u8bc1\u4e66\u751f\u6548/\u5931\u6548\u65f6\u95f4\u3001\u6587\u4ef6\u8bc1\u4e66\u751f\u6548/\u5931\u6548\u65f6\u95f4\uff0cOCSP \u7b49\u76f8\u5173\u6307\u6807\u3002 \u4e0b\u9762\u5c31\u6765\u76d1\u542c\u96c6\u7fa4\u8bc1\u4e66\u7684\u6709\u6548\u671f\u3002 1 \u5b89\u88c5 apiVersion: v1 kind: Service metadata: labels: name: ssl-exporter name: ssl-exporter spec: ports: - name: ssl-exporter protocol: TCP port: 9219 targetPort: 9219 selector: app: ssl-exporter --- apiVersion: apps/v1 kind: Deployment metadata: name: ssl-exporter spec: replicas: 1 selector: matchLabels: app: ssl-exporter template: metadata: name: ssl-exporter labels: app: ssl-exporter spec: initContainers: # Install kube ca cert as a root CA - name: ca image: alpine command: - sh - -c - | set -e apk add --update ca-certificates cp /var/run/secrets/kubernetes.io/serviceaccount/ca.crt /usr/local/share/ca-certificates/kube-ca.crt update-ca-certificates cp /etc/ssl/certs/* /ssl-certs volumeMounts: - name: ssl-certs mountPath: /ssl-certs containers: - name: ssl-exporter image: ribbybibby/ssl-exporter:v0.6.0 ports: - name: tcp containerPort: 9219 volumeMounts: - name: ssl-certs mountPath: /etc/ssl/certs volumes: - name: ssl-certs emptyDir: {} \u6267\u884c kubectl apply -f . \u5b89\u88c5\u5373\u53ef\u3002 \u5f85Pod\u6b63\u5e38\u8fd0\u884c\uff0c\u5982\u4e0b\uff1a # kubectl get po -n monitoring -l app=ssl-exporter NAME READY STATUS RESTARTS AGE ssl-exporter-7ff4759679-f4qbs 1/1 Running 0 21m \u7136\u540e\u914d\u7f6eprometheus\u6293\u53d6\u89c4\u5219\u3002 !! \u7531\u4e8e\u6211\u7684Prometheus\u662f\u901a\u8fc7Prometheus Operator\u90e8\u7f72\u7684\uff0c\u6240\u4ee5\u901a\u8fc7additional\u7684\u65b9\u5f0f\u8fdb\u884c\u6293\u53d6\u3002 \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 prometheus-additional.yaml \uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a - job_name: ssl-exporter metrics_path: /probe static_configs: - targets: - kubernetes.default.svc:443 relabel_configs: - source_labels: [__address__] target_label: __param_target - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: ssl-exporter.monitoring:9219 \u7136\u540e\u521b\u5efasecret\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a kubectl delete secret additional-config -n monitoring kubectl -n monitoring create secret generic additional-config --from-file=prometheus-additional.yaml \u7136\u540e\u4fee\u6539 prometheus-prometheus.yaml \u914d\u7f6e\u6587\u4ef6\uff0c\u65b0\u589e\u5982\u4e0b\u5185\u5bb9\uff1a additionalScrapeConfigs: name: additional-config key: prometheus-additional.yaml prometheus-prometheus.yaml \u7684\u6574\u4f53\u914d\u7f6e\u5982\u4e0b\uff1a apiVersion: monitoring.coreos.com/v1 kind: Prometheus metadata: labels: prometheus: k8s name: k8s namespace: monitoring spec: alerting: alertmanagers: - name: alertmanager-main namespace: monitoring port: web baseImage: quay.io/prometheus/prometheus nodeSelector: kubernetes.io/os: linux podMonitorNamespaceSelector: {} podMonitorSelector: {} replicas: 2 resources: requests: memory: 400Mi ruleSelector: matchLabels: prometheus: k8s role: alert-rules securityContext: fsGroup: 2000 runAsNonRoot: true runAsUser: 1000 additionalScrapeConfigs: name: additional-config key: prometheus-additional.yaml serviceAccountName: prometheus-k8s serviceMonitorNamespaceSelector: {} serviceMonitorSelector: {} version: v2.11.0 storage: volumeClaimTemplate: spec: storageClassName: managed-nfs-storage resources: requests: storage: 10Gi \u7136\u540e\u91cd\u65b0\u6267\u884c prometheus-prometheus.yaml \u6587\u4ef6\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a kubectl apply -f prometheus-prometheus.yaml \u73b0\u5728\u53ef\u4ee5\u5728prometheus\u7684web\u754c\u9762\u770b\u5230\u6b63\u5e38\u7684\u6293\u53d6\u4efb\u52a1\u4e86\uff0c\u5982\u4e0b\uff1a \u7136\u540e\u901a\u8fc7 (ssl_cert_not_after-time())/3600/24 \u5373\u53ef\u770b\u5230\u8bc1\u4e66\u8fd8\u6709\u591a\u4e45\u5931\u6548\u3002 \u901a\u8fc7 ssl_tls_connect_success \u53ef\u4ee5\u89c2\u6d4bssl\u94fe\u63a5\u662f\u5426\u6b63\u5e38\u3002 2 \u544a\u8b66 \u4e0a\u9762\u5df2\u7ecf\u5b89\u88c5 ssl_exporter \u6210\u529f\uff0c\u5e76\u4e14\u80fd\u6b63\u5e38\u76d1\u63a7\u6570\u636e\u4e86\uff0c\u4e0b\u9762\u5c31\u914d\u7f6e\u4e00\u4e9b\u544a\u8b66\u89c4\u5219\uff0c\u4ee5\u4fbf\u4e8e\u8fd0\u7ef4\u80fd\u5feb\u901f\u77e5\u9053\u8fd9\u4e2a\u4e8b\u60c5\u3002 apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: name: monitoring-ssl-tls-rules namespace: monitoring labels: prometheus: k8s role: alert-rules spec: groups: - name: check_ssl_validity rules: - alert: \"K8S\u96c6\u7fa4\u8bc1\u4e66\u572830\u5929\u540e\u8fc7\u671f\" expr: (ssl_cert_not_after-time())/3600/24 <30 for: 1h labels: severity: critical annotations: description: 'K8S\u96c6\u7fa4\u7684\u8bc1\u4e66\u8fd8\u6709{{ printf \"%.1f\" $value }}\u5929\u5c31\u8fc7\u671f\u4e86,\u8bf7\u5c3d\u5feb\u66f4\u65b0\u8bc1\u4e66' summary: \"K8S\u96c6\u7fa4\u8bc1\u4e66\u8bc1\u4e66\u8fc7\u671f\u8b66\u544a\" - name: ssl_connect_status rules: - alert: \"K8S\u96c6\u7fa4\u8bc1\u4e66\u53ef\u7528\u6027\u5f02\u5e38\" expr: ssl_tls_connect_success == 0 for: 1m labels: severity: critical annotations: summary: \"K8S\u96c6\u7fa4\u8bc1\u4e66\u8fde\u63a5\u5f02\u5e38\" description: \"K8S\u96c6\u7fa4 {{ $labels.instance }} \u8bc1\u4e66\u8fde\u63a5\u5f02\u5e38\" \u5982\u4e0b\u5c55\u793a\u89c4\u5219\u6b63\u5e38\uff0c\u5728\u5f02\u5e38\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u63a5\u6536\u5230\u544a\u8b66\u4e86\u3002","title":"\u7b2c\u4e03\u8282 \u4f7f\u7528ssl_exporter\u76d1\u63a7K8S\u96c6\u7fa4\u8bc1\u4e66"},{"location":"chap4/43Prometheus_operator_ssl_exporter/#ssl_exporterk8s","text":"\u4f7f\u7528kubeadm\u642d\u5efa\u7684\u96c6\u7fa4\u9ed8\u8ba4\u8bc1\u4e66\u6709\u6548\u671f\u662f1\u5e74\uff0c\u7eed\u8d39\u8bc1\u4e66\u5176\u5b9e\u662f\u4e00\u4ef6\u5f88\u5feb\u7684\u4e8b\u60c5\u3002\u4f46\u662f\u5c31\u6015\u51fa\u4e8b\u4e86\u624d\u53d1\u73b0\uff0c\u6bd5\u7adf\u4f5c\u4e3a\u4e13\u4e1a\u642c\u7816\u5de5\u7a0b\u5e08\uff0c\u6bcf\u5929\u90fd\u5f88\u5fd9\u7684\u3002 \u9274\u4e8e\u6b64\uff0c\u76d1\u63a7\u96c6\u7fa4\u8bc1\u4e66\u6709\u6548\u671f\u662f\u4e00\u4ef6\u4e0d\u5f97\u4e0d\u505a\u7684\u4e8b\u60c5\u3002Prometheus\u4f5c\u4e3a\u4e91\u539f\u751f\u9886\u57df\u7684\u738b\u8005\uff0c\u5982\u679c\u80fd\u7528\u5b83\u6765\u76d1\u63a7\u8bc1\u4e66\u6709\u6548\u671f\u5e76\u80fd\u53ca\u65f6\u544a\u8b66\uff0c\u90a3\u5c31\u518d\u597d\u4e0d\u8fc7\u4e86\u3002 ssl_exporter \u5c31\u662f\u6765\u505a\u8fd9\u4e2a\u4e8b\u60c5\u7684\u3002 ssh_exporter \u662f\u4e00\u4e2aPrometheus Exporter\u80fd\u63d0\u4f9b\u591a\u79cd\u9488\u5bf9 SSL \u7684\u68c0\u6d4b\u624b\u6bb5\uff0c \u5305\u62ec\uff1ahttps \u8bc1\u4e66\u751f\u6548/\u5931\u6548\u65f6\u95f4\u3001\u6587\u4ef6\u8bc1\u4e66\u751f\u6548/\u5931\u6548\u65f6\u95f4\uff0cOCSP \u7b49\u76f8\u5173\u6307\u6807\u3002 \u4e0b\u9762\u5c31\u6765\u76d1\u542c\u96c6\u7fa4\u8bc1\u4e66\u7684\u6709\u6548\u671f\u3002","title":"\u7b2c\u4e03\u8282 \u4f7f\u7528ssl_exporter\u76d1\u63a7K8S\u96c6\u7fa4\u8bc1\u4e66"},{"location":"chap4/43Prometheus_operator_ssl_exporter/#1","text":"apiVersion: v1 kind: Service metadata: labels: name: ssl-exporter name: ssl-exporter spec: ports: - name: ssl-exporter protocol: TCP port: 9219 targetPort: 9219 selector: app: ssl-exporter --- apiVersion: apps/v1 kind: Deployment metadata: name: ssl-exporter spec: replicas: 1 selector: matchLabels: app: ssl-exporter template: metadata: name: ssl-exporter labels: app: ssl-exporter spec: initContainers: # Install kube ca cert as a root CA - name: ca image: alpine command: - sh - -c - | set -e apk add --update ca-certificates cp /var/run/secrets/kubernetes.io/serviceaccount/ca.crt /usr/local/share/ca-certificates/kube-ca.crt update-ca-certificates cp /etc/ssl/certs/* /ssl-certs volumeMounts: - name: ssl-certs mountPath: /ssl-certs containers: - name: ssl-exporter image: ribbybibby/ssl-exporter:v0.6.0 ports: - name: tcp containerPort: 9219 volumeMounts: - name: ssl-certs mountPath: /etc/ssl/certs volumes: - name: ssl-certs emptyDir: {} \u6267\u884c kubectl apply -f . \u5b89\u88c5\u5373\u53ef\u3002 \u5f85Pod\u6b63\u5e38\u8fd0\u884c\uff0c\u5982\u4e0b\uff1a # kubectl get po -n monitoring -l app=ssl-exporter NAME READY STATUS RESTARTS AGE ssl-exporter-7ff4759679-f4qbs 1/1 Running 0 21m \u7136\u540e\u914d\u7f6eprometheus\u6293\u53d6\u89c4\u5219\u3002 !! \u7531\u4e8e\u6211\u7684Prometheus\u662f\u901a\u8fc7Prometheus Operator\u90e8\u7f72\u7684\uff0c\u6240\u4ee5\u901a\u8fc7additional\u7684\u65b9\u5f0f\u8fdb\u884c\u6293\u53d6\u3002 \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 prometheus-additional.yaml \uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a - job_name: ssl-exporter metrics_path: /probe static_configs: - targets: - kubernetes.default.svc:443 relabel_configs: - source_labels: [__address__] target_label: __param_target - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: ssl-exporter.monitoring:9219 \u7136\u540e\u521b\u5efasecret\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a kubectl delete secret additional-config -n monitoring kubectl -n monitoring create secret generic additional-config --from-file=prometheus-additional.yaml \u7136\u540e\u4fee\u6539 prometheus-prometheus.yaml \u914d\u7f6e\u6587\u4ef6\uff0c\u65b0\u589e\u5982\u4e0b\u5185\u5bb9\uff1a additionalScrapeConfigs: name: additional-config key: prometheus-additional.yaml prometheus-prometheus.yaml \u7684\u6574\u4f53\u914d\u7f6e\u5982\u4e0b\uff1a apiVersion: monitoring.coreos.com/v1 kind: Prometheus metadata: labels: prometheus: k8s name: k8s namespace: monitoring spec: alerting: alertmanagers: - name: alertmanager-main namespace: monitoring port: web baseImage: quay.io/prometheus/prometheus nodeSelector: kubernetes.io/os: linux podMonitorNamespaceSelector: {} podMonitorSelector: {} replicas: 2 resources: requests: memory: 400Mi ruleSelector: matchLabels: prometheus: k8s role: alert-rules securityContext: fsGroup: 2000 runAsNonRoot: true runAsUser: 1000 additionalScrapeConfigs: name: additional-config key: prometheus-additional.yaml serviceAccountName: prometheus-k8s serviceMonitorNamespaceSelector: {} serviceMonitorSelector: {} version: v2.11.0 storage: volumeClaimTemplate: spec: storageClassName: managed-nfs-storage resources: requests: storage: 10Gi \u7136\u540e\u91cd\u65b0\u6267\u884c prometheus-prometheus.yaml \u6587\u4ef6\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a kubectl apply -f prometheus-prometheus.yaml \u73b0\u5728\u53ef\u4ee5\u5728prometheus\u7684web\u754c\u9762\u770b\u5230\u6b63\u5e38\u7684\u6293\u53d6\u4efb\u52a1\u4e86\uff0c\u5982\u4e0b\uff1a \u7136\u540e\u901a\u8fc7 (ssl_cert_not_after-time())/3600/24 \u5373\u53ef\u770b\u5230\u8bc1\u4e66\u8fd8\u6709\u591a\u4e45\u5931\u6548\u3002 \u901a\u8fc7 ssl_tls_connect_success \u53ef\u4ee5\u89c2\u6d4bssl\u94fe\u63a5\u662f\u5426\u6b63\u5e38\u3002","title":"1 \u5b89\u88c5"},{"location":"chap4/43Prometheus_operator_ssl_exporter/#2","text":"\u4e0a\u9762\u5df2\u7ecf\u5b89\u88c5 ssl_exporter \u6210\u529f\uff0c\u5e76\u4e14\u80fd\u6b63\u5e38\u76d1\u63a7\u6570\u636e\u4e86\uff0c\u4e0b\u9762\u5c31\u914d\u7f6e\u4e00\u4e9b\u544a\u8b66\u89c4\u5219\uff0c\u4ee5\u4fbf\u4e8e\u8fd0\u7ef4\u80fd\u5feb\u901f\u77e5\u9053\u8fd9\u4e2a\u4e8b\u60c5\u3002 apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: name: monitoring-ssl-tls-rules namespace: monitoring labels: prometheus: k8s role: alert-rules spec: groups: - name: check_ssl_validity rules: - alert: \"K8S\u96c6\u7fa4\u8bc1\u4e66\u572830\u5929\u540e\u8fc7\u671f\" expr: (ssl_cert_not_after-time())/3600/24 <30 for: 1h labels: severity: critical annotations: description: 'K8S\u96c6\u7fa4\u7684\u8bc1\u4e66\u8fd8\u6709{{ printf \"%.1f\" $value }}\u5929\u5c31\u8fc7\u671f\u4e86,\u8bf7\u5c3d\u5feb\u66f4\u65b0\u8bc1\u4e66' summary: \"K8S\u96c6\u7fa4\u8bc1\u4e66\u8bc1\u4e66\u8fc7\u671f\u8b66\u544a\" - name: ssl_connect_status rules: - alert: \"K8S\u96c6\u7fa4\u8bc1\u4e66\u53ef\u7528\u6027\u5f02\u5e38\" expr: ssl_tls_connect_success == 0 for: 1m labels: severity: critical annotations: summary: \"K8S\u96c6\u7fa4\u8bc1\u4e66\u8fde\u63a5\u5f02\u5e38\" description: \"K8S\u96c6\u7fa4 {{ $labels.instance }} \u8bc1\u4e66\u8fde\u63a5\u5f02\u5e38\" \u5982\u4e0b\u5c55\u793a\u89c4\u5219\u6b63\u5e38\uff0c\u5728\u5f02\u5e38\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u63a5\u6536\u5230\u544a\u8b66\u4e86\u3002","title":"2 \u544a\u8b66"},{"location":"chap4/44Prometheus_KubeNurse/","text":"\u7b2c\u516b\u8282 Operator2021-\u4f7f\u7528KubeNurse\u8fdb\u884c\u96c6\u7fa4\u7f51\u7edc\u76d1\u63a7 https://github.com/postfinance/kubenurse https://github.com/postfinance/kubenurse/tree/master/examples 1 \u524d\u8a00 \u5728Kubernetes\u4e2d\uff0c\u7f51\u7edc\u662f\u901a\u8fc7\u7b2c\u4e09\u65b9\u7f51\u7edc\u63d2\u4ef6\u6765\u63d0\u4f9b\uff0c\u8fd9\u4e9b\u4e09\u65b9\u63d2\u4ef6\u672c\u8eab\u7684\u5b9e\u73b0\u5c31\u6bd4\u8f83\u590d\u6742\uff0c\u4ee5\u81f3\u4e8e\u5728\u6392\u67e5\u7f51\u7edc\u95ee\u9898\u65f6\u5e38\u5e38\u78b0\u58c1\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u4ec0\u4e48\u65b9\u5f0f\u6765\u76d1\u63a7\u96c6\u7fa4\u4e2d\u6240\u6709\u7684\u7f51\u7edc\u8fde\u63a5\u5462\uff1f kubenurse\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u9879\u76ee\uff0c\u5b83\u901a\u8fc7\u76d1\u89c6\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u7f51\u7edc\u8fde\u63a5\uff0c\u5e76\u63d0\u4f9b\u76d1\u63a7\u6307\u6807\u4f9bPrometheus\u91c7\u96c6\u3002 2 Kubenurse kubenurse\u7684\u90e8\u7f72\u975e\u5e38\u7b80\u5355\uff0c\u4f7f\u7528Daemonset\u5f62\u5f0f\u90e8\u7f72\u5230\u96c6\u7fa4\u8282\u70b9\u4e0a\uff0cYaml\u6587\u4ef6\u5728\u9879\u76ee\u7684example\u76ee\u5f55\u4e0b\u3002 \u90e8\u7f72\u6210\u529f\u540e\uff0c\u6bcf5\u79d2\u949f\u4f1a\u5bf9/alive\u53d1\u4e00\u6b21\u68c0\u67e5\u8bf7\u6c42\uff0c\u7136\u540e\u5176\u5185\u90e8\u4f1a\u8fd0\u884c\u5404\u79cd\u65b9\u6cd5\u5168\u65b9\u4f4d\u5bf9\u96c6\u7fa4\u7f51\u7edc\u8fdb\u884c\u68c0\u6d4b\uff0c\u4e3a\u4e86\u9632\u6b62\u8fc7\u591a\u7684\u7f51\u7edc\u6d41\u91cf\uff0c\u4f1a\u5bf9\u68c0\u67e5\u7ed3\u679c\u7f13\u5b583\u79d2\u3002 \u5176\u68c0\u6d4b\u673a\u5236\u5982\u4e0b\uff1a \u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff0ckubenurse\u4f1a\u5bf9ingress\u3001dns\u3001apiserver\u3001kube-proxy\u8fdb\u884c\u7f51\u7edc\u63a2\u6d4b\u3002 \u6240\u6709\u7684\u68c0\u67e5\u90fd\u4f1a\u521b\u5efa\u516c\u5f00\u7684\u6307\u6807\uff0c\u8fd9\u4e9b\u6307\u6807\u53ef\u7528\u4e8e\u68c0\u6d4b\uff1a SDN\u7f51\u7edc\u5ef6\u8fdf\u4ee5\u53ca\u9519\u8bef Kubelet\u4e4b\u95f4\u7684\u7f51\u7edc\u5ef6\u8fdf\u4ee5\u53ca\u9519\u8bef Pod\u4e0eapiserver\u901a\u4fe1\u95ee\u9898 Ingress\u5f80\u8fd4\u7f51\u7edc\u5ef6\u8fdf\u4ee5\u53ca\u9519\u8bef Service\u5f80\u8fd4\u7f51\u7edc\u5ef6\u8fdf\u4ee5\u53ca\u9519\u8bef\uff08kube-proxy\uff09 Kube-apiserver\u95ee\u9898 Kube-dns\uff08CoreDns\uff09\u9519\u8bef \u5916\u90e8DNS\u89e3\u6790\u9519\u8bef\uff08ingress url\u89e3\u6790\uff09 \u7136\u540e\u8fd9\u4e9b\u6570\u636e\u4e3b\u8981\u901a\u8fc7\u4e24\u4e2a\u76d1\u63a7\u6307\u6807\u6765\u4f53\u73b0\uff1a kubenurse_errors_total \uff1a\u6309\u9519\u8bef\u7c7b\u578b\u5212\u5206\u7684\u9519\u8bef\u8ba1\u6570\u5668 kubenurse_request_duration \uff1a\u6309\u7c7b\u578b\u5212\u5206\u7684\u8bf7\u6c42\u65f6\u95f4\u5206\u5e03 \u8fd9\u4e9b\u6307\u6807\u90fd\u662f\u901a\u8fc7Type\u7c7b\u578b\u8fdb\u884c\u6807\u8bc6\uff0c\u5bf9\u5e94\u51e0\u79cd\u4e0d\u540c\u7684\u68c0\u6d4b\u76ee\u6807\uff1a api_server_direct \uff1a\u4ece\u8282\u70b9\u76f4\u63a5\u68c0\u6d4b API Server api_server_dns \uff1a\u4ece\u8282\u70b9\u901a\u8fc7 DNS \u68c0\u6d4b API Server me_ingress \uff1a\u901a\u8fc7 Ingress \u68c0\u6d4b\u672c\u670d\u52a1 Service me_service \uff1a\u4f7f\u7528 Service \u68c0\u6d4b\u672c\u670d\u52a1 Service path_$KUBELET_HOSTNAME \uff1a\u8282\u70b9\u4e4b\u95f4\u7684\u4e92\u76f8\u68c0\u6d4b \u7136\u540e\u8fd9\u4e9b\u6307\u6807\u5206\u522b\u6309P50\uff0cP90\uff0cP99\u5206\u4f4d\u6570\u8fdb\u884c\u5212\u5206\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\u6765\u786e\u8ba4\u96c6\u7fa4\u7f51\u7edc\u72b6\u51b5\u4e86\u3002 2 Promethuse-operator 2021 \u5b89\u88c5 helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm repo update $ helm repo list NAME URL loki https://grafana.github.io/loki/charts argocd-helm https://chao-xi.github.io/helm/ istio https://storage.googleapis.com/istio-release/releases/1.3.6/charts incubator http://mirror.azure.cn/kubernetes/charts-incubator/ argo https://argoproj.github.io/argo-helm traefik https://containous.github.io/traefik-helm-chart oteemocharts https://oteemo.github.io/charts hashicorp https://helm.releases.hashicorp.com prometheus-community https://prometheus-community.github.io/helm-charts helm-values \u2502 \u2514\u2500\u2500 prometheus-operator-values.yml prometheus-operator-values.yml # We don't need the alertmanager for this demo alertmanager: enabled: false # This configuration means all ServiceMonitors in the namespsace will be picked up # Use with caution! prometheus: prometheusSpec: serviceMonitorSelectorNilUsesHelmValues: false serviceMonitorSelector: {} grafana: persistence: enabled: true type: pvc size: 5G storageClassName: \"hostpath\" prometheusOperator: admissionWebhooks: enabled: false prometheus-node-exporter: hostRootFsMount: false # prometheus-node-exporter: # hostRootFsMount: false Installed Error Error: failed to start container \"node-exporter\": Error response from daemon: path / is mounted on / but it is not a shared or slave mount https://github.com/prometheus-community/helm-charts/issues/467 prometheus-node-exporter: hostRootFsMount: false Or kubectl patch ds kube-prom-prometheus-node-exporter --type \"json\" -p '[{\"op\": \"remove\", \"path\" : \"/spec/template/spec/containers/0/volumeMounts/2/mountPropagation\"}]' -n monitoring Installation helm install kube-prom prometheus-community/kube-prometheus-stack -f helm-values/prometheus-operator-values.yml --namespace monitoring Upgrade helm upgrade kube-prom prometheus-community/kube-prometheus-stack -f helm-values/prometheus-operator-values.yml --namespace monitoring $ kubectl get pod -n monitoring NAME READY STATUS RESTARTS AGE kube-prom-grafana-854d497c4b-gcd2j 2/2 Running 10 4h39m kube-prom-grafana-test 0/1 Error 0 4h39m kube-prom-kube-prometheus-operator-6b84867b8b-wpfpp 1/1 Running 6 4h39m kube-prom-kube-state-metrics-77866d67c5-kl44g 1/1 Running 2 4h39m kube-prom-prometheus-node-exporter-qkplq 1/1 Running 0 40s prometheus-kube-prom-kube-prometheus-prometheus-0 2/2 Running 11 4h38m 3 KubeNurse \u5b89\u88c5\u90e8\u7f72 \u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528\u5b98\u65b9\u7684\u90e8\u7f72\u6587\u4ef6\u8fdb\u884c\u90e8\u7f72\u3002\u4e0d\u8fc7\u9700\u8981\u66f4\u6539\u51e0\u4e2a\u5730\u65b9\u3002\uff081\uff09\u9996\u5148\u5c06\u4ee3\u7801clone\u5230\u672c\u5730 git clone https://github.com/postfinance/kubenurse.git \u8fdb\u5165example\u76ee\u5f55\uff0c\u4fee\u6539 ingress.yaml \u914d\u7f6e\uff0c\u4e3b\u8981\u662f\u6dfb\u52a0\u57df\u540d\uff0c\u5982\u4e0b\u3002 --- apiVersion: extensions/v1beta1 kind: Ingress metadata: annotations: kubernetes.io/ingress.class: nginx name: kubenurse namespace: kube-system spec: rules: - host: kubenurse-test.xxx.cn http: paths: - backend: serviceName: kubenurse servicePort: 8080 \u66f4\u65b0 daemonset.yaml \u914d\u7f6e\uff0c\u4e3b\u8981\u662f\u66f4\u6539ingress\u7684\u5165\u53e3\u57df\u540d\uff0c\u5982\u4e0b\u3002 --- apiVersion: apps/v1 kind: DaemonSet metadata: labels: app: kubenurse name: kubenurse namespace: kube-system spec: selector: matchLabels: app: kubenurse template: metadata: labels: app: kubenurse annotations: prometheus.io/path: \"/metrics\" prometheus.io/port: \"8080\" prometheus.io/scheme: \"http\" prometheus.io/scrape: \"true\" spec: serviceAccountName: nurse containers: - name: kubenurse env: # - name: KUBENURSE_INGRESS_URL # value: https://kubenurse.example.com - name: KUBENURSE_SERVICE_URL value: http://kubenurse.kube-system.svc.cluster.local:8080 - name: KUBENURSE_NAMESPACE value: kube-system - name: KUBENURSE_NEIGHBOUR_FILTER value: \"app=kubenurse\" image: \"postfinance/kubenurse:v1.2.0\" ports: - containerPort: 8080 protocol: TCP tolerations: - effect: NoSchedule key: node-role.kubernetes.io/master operator: Equal - effect: NoSchedule key: node-role.kubernetes.io/control-plane operator: Equal rbac.yaml --- apiVersion: rbac.authorization.k8s.io/v1 kind: RoleBinding metadata: name: nurse namespace: kube-system roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: view subjects: - kind: ServiceAccount name: nurse namespace: kube-system service.yaml --- apiVersion: v1 kind: Service metadata: labels: app: kubenurse name: kubenurse namespace: kube-system spec: ports: - name: 8080-8080 port: 8080 protocol: TCP targetPort: 8080 selector: app: kubenurse serviceaccount.yaml --- apiVersion: v1 kind: ServiceAccount metadata: name: nurse namespace: kube-system \u65b0\u521b\u5efa\u4e00\u4e2aServiceMonitor\uff0c\u7528\u4e8e\u83b7\u53d6\u6307\u6807\u6570\u636e\uff0c\u5982\u4e0b\uff1a ServiceMonitor.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: kubenurse namespace: monitoring labels: k8s-app: kubenurse spec: jobLabel: k8s-app endpoints: - port: \"8080-8080\" interval: 30s scheme: http selector: matchLabels: app: kubenurse namespaceSelector: matchNames: - kube-system \u90e8\u7f72\u5e94\u7528\uff0c\u5728example\u76ee\u5f55\u4e0b\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 \u7b49\u5f85\u6240\u6709\u5e94\u7528\u53d8\u6210running\uff0c\u5982\u4e0b\u3002 $ kubectl get all -n kube-system -l app=kubenurse NAME READY STATUS RESTARTS AGE pod/kubenurse-cvk69 1/1 Running 0 15h NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/kubenurse ClusterIP 10.108.126.242 <none> 8080/TCP 15h NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE daemonset.apps/kubenurse 1 1 1 1 1 <none> 15h \u5230prometheus\u4e0a\u67e5\u770b\u662f\u5426\u6b63\u5e38\u83b7\u53d6\u6570\u636e\u3002 $ kubectl port-forward svc/kube-prom-kube-prometheus-prometheus -n monitoring 9090:9090 Forwarding from 127.0.0.1:9090 -> 9090 Forwarding from [::1]:9090 -> 9090 \u67e5\u770b\u6307\u6807\u662f\u5426\u6b63\u5e38\u3002 \u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u5728grafana\u4e0a\u753b\u56fe\uff0c\u5c55\u793a\u76d1\u63a7\u6570\u636e\u4e86\uff0c\u5982\u4e0b\u3002","title":"\u7b2c\u516b\u8282 Operator2021-\u4f7f\u7528KubeNurse\u8fdb\u884c\u96c6\u7fa4\u7f51\u7edc\u76d1\u63a7"},{"location":"chap4/44Prometheus_KubeNurse/#operator2021-kubenurse","text":"https://github.com/postfinance/kubenurse https://github.com/postfinance/kubenurse/tree/master/examples","title":"\u7b2c\u516b\u8282 Operator2021-\u4f7f\u7528KubeNurse\u8fdb\u884c\u96c6\u7fa4\u7f51\u7edc\u76d1\u63a7"},{"location":"chap4/44Prometheus_KubeNurse/#1","text":"\u5728Kubernetes\u4e2d\uff0c\u7f51\u7edc\u662f\u901a\u8fc7\u7b2c\u4e09\u65b9\u7f51\u7edc\u63d2\u4ef6\u6765\u63d0\u4f9b\uff0c\u8fd9\u4e9b\u4e09\u65b9\u63d2\u4ef6\u672c\u8eab\u7684\u5b9e\u73b0\u5c31\u6bd4\u8f83\u590d\u6742\uff0c\u4ee5\u81f3\u4e8e\u5728\u6392\u67e5\u7f51\u7edc\u95ee\u9898\u65f6\u5e38\u5e38\u78b0\u58c1\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u4ec0\u4e48\u65b9\u5f0f\u6765\u76d1\u63a7\u96c6\u7fa4\u4e2d\u6240\u6709\u7684\u7f51\u7edc\u8fde\u63a5\u5462\uff1f kubenurse\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u9879\u76ee\uff0c\u5b83\u901a\u8fc7\u76d1\u89c6\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u7f51\u7edc\u8fde\u63a5\uff0c\u5e76\u63d0\u4f9b\u76d1\u63a7\u6307\u6807\u4f9bPrometheus\u91c7\u96c6\u3002","title":"1 \u524d\u8a00"},{"location":"chap4/44Prometheus_KubeNurse/#2-kubenurse","text":"kubenurse\u7684\u90e8\u7f72\u975e\u5e38\u7b80\u5355\uff0c\u4f7f\u7528Daemonset\u5f62\u5f0f\u90e8\u7f72\u5230\u96c6\u7fa4\u8282\u70b9\u4e0a\uff0cYaml\u6587\u4ef6\u5728\u9879\u76ee\u7684example\u76ee\u5f55\u4e0b\u3002 \u90e8\u7f72\u6210\u529f\u540e\uff0c\u6bcf5\u79d2\u949f\u4f1a\u5bf9/alive\u53d1\u4e00\u6b21\u68c0\u67e5\u8bf7\u6c42\uff0c\u7136\u540e\u5176\u5185\u90e8\u4f1a\u8fd0\u884c\u5404\u79cd\u65b9\u6cd5\u5168\u65b9\u4f4d\u5bf9\u96c6\u7fa4\u7f51\u7edc\u8fdb\u884c\u68c0\u6d4b\uff0c\u4e3a\u4e86\u9632\u6b62\u8fc7\u591a\u7684\u7f51\u7edc\u6d41\u91cf\uff0c\u4f1a\u5bf9\u68c0\u67e5\u7ed3\u679c\u7f13\u5b583\u79d2\u3002 \u5176\u68c0\u6d4b\u673a\u5236\u5982\u4e0b\uff1a \u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff0ckubenurse\u4f1a\u5bf9ingress\u3001dns\u3001apiserver\u3001kube-proxy\u8fdb\u884c\u7f51\u7edc\u63a2\u6d4b\u3002 \u6240\u6709\u7684\u68c0\u67e5\u90fd\u4f1a\u521b\u5efa\u516c\u5f00\u7684\u6307\u6807\uff0c\u8fd9\u4e9b\u6307\u6807\u53ef\u7528\u4e8e\u68c0\u6d4b\uff1a SDN\u7f51\u7edc\u5ef6\u8fdf\u4ee5\u53ca\u9519\u8bef Kubelet\u4e4b\u95f4\u7684\u7f51\u7edc\u5ef6\u8fdf\u4ee5\u53ca\u9519\u8bef Pod\u4e0eapiserver\u901a\u4fe1\u95ee\u9898 Ingress\u5f80\u8fd4\u7f51\u7edc\u5ef6\u8fdf\u4ee5\u53ca\u9519\u8bef Service\u5f80\u8fd4\u7f51\u7edc\u5ef6\u8fdf\u4ee5\u53ca\u9519\u8bef\uff08kube-proxy\uff09 Kube-apiserver\u95ee\u9898 Kube-dns\uff08CoreDns\uff09\u9519\u8bef \u5916\u90e8DNS\u89e3\u6790\u9519\u8bef\uff08ingress url\u89e3\u6790\uff09 \u7136\u540e\u8fd9\u4e9b\u6570\u636e\u4e3b\u8981\u901a\u8fc7\u4e24\u4e2a\u76d1\u63a7\u6307\u6807\u6765\u4f53\u73b0\uff1a kubenurse_errors_total \uff1a\u6309\u9519\u8bef\u7c7b\u578b\u5212\u5206\u7684\u9519\u8bef\u8ba1\u6570\u5668 kubenurse_request_duration \uff1a\u6309\u7c7b\u578b\u5212\u5206\u7684\u8bf7\u6c42\u65f6\u95f4\u5206\u5e03 \u8fd9\u4e9b\u6307\u6807\u90fd\u662f\u901a\u8fc7Type\u7c7b\u578b\u8fdb\u884c\u6807\u8bc6\uff0c\u5bf9\u5e94\u51e0\u79cd\u4e0d\u540c\u7684\u68c0\u6d4b\u76ee\u6807\uff1a api_server_direct \uff1a\u4ece\u8282\u70b9\u76f4\u63a5\u68c0\u6d4b API Server api_server_dns \uff1a\u4ece\u8282\u70b9\u901a\u8fc7 DNS \u68c0\u6d4b API Server me_ingress \uff1a\u901a\u8fc7 Ingress \u68c0\u6d4b\u672c\u670d\u52a1 Service me_service \uff1a\u4f7f\u7528 Service \u68c0\u6d4b\u672c\u670d\u52a1 Service path_$KUBELET_HOSTNAME \uff1a\u8282\u70b9\u4e4b\u95f4\u7684\u4e92\u76f8\u68c0\u6d4b \u7136\u540e\u8fd9\u4e9b\u6307\u6807\u5206\u522b\u6309P50\uff0cP90\uff0cP99\u5206\u4f4d\u6570\u8fdb\u884c\u5212\u5206\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\u6765\u786e\u8ba4\u96c6\u7fa4\u7f51\u7edc\u72b6\u51b5\u4e86\u3002","title":"2 Kubenurse"},{"location":"chap4/44Prometheus_KubeNurse/#2-promethuse-operator-2021","text":"helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm repo update $ helm repo list NAME URL loki https://grafana.github.io/loki/charts argocd-helm https://chao-xi.github.io/helm/ istio https://storage.googleapis.com/istio-release/releases/1.3.6/charts incubator http://mirror.azure.cn/kubernetes/charts-incubator/ argo https://argoproj.github.io/argo-helm traefik https://containous.github.io/traefik-helm-chart oteemocharts https://oteemo.github.io/charts hashicorp https://helm.releases.hashicorp.com prometheus-community https://prometheus-community.github.io/helm-charts helm-values \u2502 \u2514\u2500\u2500 prometheus-operator-values.yml prometheus-operator-values.yml # We don't need the alertmanager for this demo alertmanager: enabled: false # This configuration means all ServiceMonitors in the namespsace will be picked up # Use with caution! prometheus: prometheusSpec: serviceMonitorSelectorNilUsesHelmValues: false serviceMonitorSelector: {} grafana: persistence: enabled: true type: pvc size: 5G storageClassName: \"hostpath\" prometheusOperator: admissionWebhooks: enabled: false prometheus-node-exporter: hostRootFsMount: false # prometheus-node-exporter: # hostRootFsMount: false Installed Error Error: failed to start container \"node-exporter\": Error response from daemon: path / is mounted on / but it is not a shared or slave mount https://github.com/prometheus-community/helm-charts/issues/467 prometheus-node-exporter: hostRootFsMount: false Or kubectl patch ds kube-prom-prometheus-node-exporter --type \"json\" -p '[{\"op\": \"remove\", \"path\" : \"/spec/template/spec/containers/0/volumeMounts/2/mountPropagation\"}]' -n monitoring","title":"2 Promethuse-operator 2021 \u5b89\u88c5"},{"location":"chap4/44Prometheus_KubeNurse/#installation","text":"helm install kube-prom prometheus-community/kube-prometheus-stack -f helm-values/prometheus-operator-values.yml --namespace monitoring Upgrade helm upgrade kube-prom prometheus-community/kube-prometheus-stack -f helm-values/prometheus-operator-values.yml --namespace monitoring $ kubectl get pod -n monitoring NAME READY STATUS RESTARTS AGE kube-prom-grafana-854d497c4b-gcd2j 2/2 Running 10 4h39m kube-prom-grafana-test 0/1 Error 0 4h39m kube-prom-kube-prometheus-operator-6b84867b8b-wpfpp 1/1 Running 6 4h39m kube-prom-kube-state-metrics-77866d67c5-kl44g 1/1 Running 2 4h39m kube-prom-prometheus-node-exporter-qkplq 1/1 Running 0 40s prometheus-kube-prom-kube-prometheus-prometheus-0 2/2 Running 11 4h38m","title":"Installation"},{"location":"chap4/44Prometheus_KubeNurse/#3-kubenurse","text":"\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528\u5b98\u65b9\u7684\u90e8\u7f72\u6587\u4ef6\u8fdb\u884c\u90e8\u7f72\u3002\u4e0d\u8fc7\u9700\u8981\u66f4\u6539\u51e0\u4e2a\u5730\u65b9\u3002\uff081\uff09\u9996\u5148\u5c06\u4ee3\u7801clone\u5230\u672c\u5730 git clone https://github.com/postfinance/kubenurse.git \u8fdb\u5165example\u76ee\u5f55\uff0c\u4fee\u6539 ingress.yaml \u914d\u7f6e\uff0c\u4e3b\u8981\u662f\u6dfb\u52a0\u57df\u540d\uff0c\u5982\u4e0b\u3002 --- apiVersion: extensions/v1beta1 kind: Ingress metadata: annotations: kubernetes.io/ingress.class: nginx name: kubenurse namespace: kube-system spec: rules: - host: kubenurse-test.xxx.cn http: paths: - backend: serviceName: kubenurse servicePort: 8080 \u66f4\u65b0 daemonset.yaml \u914d\u7f6e\uff0c\u4e3b\u8981\u662f\u66f4\u6539ingress\u7684\u5165\u53e3\u57df\u540d\uff0c\u5982\u4e0b\u3002 --- apiVersion: apps/v1 kind: DaemonSet metadata: labels: app: kubenurse name: kubenurse namespace: kube-system spec: selector: matchLabels: app: kubenurse template: metadata: labels: app: kubenurse annotations: prometheus.io/path: \"/metrics\" prometheus.io/port: \"8080\" prometheus.io/scheme: \"http\" prometheus.io/scrape: \"true\" spec: serviceAccountName: nurse containers: - name: kubenurse env: # - name: KUBENURSE_INGRESS_URL # value: https://kubenurse.example.com - name: KUBENURSE_SERVICE_URL value: http://kubenurse.kube-system.svc.cluster.local:8080 - name: KUBENURSE_NAMESPACE value: kube-system - name: KUBENURSE_NEIGHBOUR_FILTER value: \"app=kubenurse\" image: \"postfinance/kubenurse:v1.2.0\" ports: - containerPort: 8080 protocol: TCP tolerations: - effect: NoSchedule key: node-role.kubernetes.io/master operator: Equal - effect: NoSchedule key: node-role.kubernetes.io/control-plane operator: Equal rbac.yaml --- apiVersion: rbac.authorization.k8s.io/v1 kind: RoleBinding metadata: name: nurse namespace: kube-system roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: view subjects: - kind: ServiceAccount name: nurse namespace: kube-system service.yaml --- apiVersion: v1 kind: Service metadata: labels: app: kubenurse name: kubenurse namespace: kube-system spec: ports: - name: 8080-8080 port: 8080 protocol: TCP targetPort: 8080 selector: app: kubenurse serviceaccount.yaml --- apiVersion: v1 kind: ServiceAccount metadata: name: nurse namespace: kube-system \u65b0\u521b\u5efa\u4e00\u4e2aServiceMonitor\uff0c\u7528\u4e8e\u83b7\u53d6\u6307\u6807\u6570\u636e\uff0c\u5982\u4e0b\uff1a ServiceMonitor.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: kubenurse namespace: monitoring labels: k8s-app: kubenurse spec: jobLabel: k8s-app endpoints: - port: \"8080-8080\" interval: 30s scheme: http selector: matchLabels: app: kubenurse namespaceSelector: matchNames: - kube-system \u90e8\u7f72\u5e94\u7528\uff0c\u5728example\u76ee\u5f55\u4e0b\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 \u7b49\u5f85\u6240\u6709\u5e94\u7528\u53d8\u6210running\uff0c\u5982\u4e0b\u3002 $ kubectl get all -n kube-system -l app=kubenurse NAME READY STATUS RESTARTS AGE pod/kubenurse-cvk69 1/1 Running 0 15h NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/kubenurse ClusterIP 10.108.126.242 <none> 8080/TCP 15h NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE daemonset.apps/kubenurse 1 1 1 1 1 <none> 15h \u5230prometheus\u4e0a\u67e5\u770b\u662f\u5426\u6b63\u5e38\u83b7\u53d6\u6570\u636e\u3002 $ kubectl port-forward svc/kube-prom-kube-prometheus-prometheus -n monitoring 9090:9090 Forwarding from 127.0.0.1:9090 -> 9090 Forwarding from [::1]:9090 -> 9090 \u67e5\u770b\u6307\u6807\u662f\u5426\u6b63\u5e38\u3002 \u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u5728grafana\u4e0a\u753b\u56fe\uff0c\u5c55\u793a\u76d1\u63a7\u6570\u636e\u4e86\uff0c\u5982\u4e0b\u3002","title":"3 KubeNurse \u5b89\u88c5\u90e8\u7f72"},{"location":"chap4/45Prom-operator_2021/","text":"\u7b2c\u4e5d\u8282 Prometheus Operator\u5b89\u88c5\u914d\u7f6e(2021) \u4f46\u5b9e\u9645\u4e0a\u5bf9\u4e0a Kubernetes \u6765\u8bf4\uff0c\u8fd8\u6709\u66f4\u7b80\u5355\u65b9\u5f0f\u6765\u76d1\u63a7\u62a5\u8b66\uff0c\u90a3\u5c31\u662f Prometheus Operator( https://prometheus-operator.dev/ )\u3002 Prometheus Operator \u4e3a\u76d1\u63a7 Kubernetes \u8d44\u6e90\u548c Prometheus \u5b9e\u4f8b\u7684\u7ba1\u7406\u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u5b9a\u4e49\uff0c\u7b80\u5316\u5728 Kubernetes \u4e0a\u90e8\u7f72\u3001\u7ba1\u7406\u548c\u8fd0\u884c Prometheus \u548c Alertmanager \u96c6\u7fa4\u3002 1 \u4ecb\u7ecd Prometheus Operator \u4e3a Kubernetes \u63d0\u4f9b\u4e86\u5bf9 Prometheus \u673a\u5668\u76f8\u5173\u76d1\u63a7\u7ec4\u4ef6\u7684\u672c\u5730\u90e8\u7f72\u548c\u7ba1\u7406\u65b9\u6848\uff0c\u8be5\u9879\u76ee\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u7b80\u5316\u548c\u81ea\u52a8\u5316\u57fa\u4e8e Prometheus \u7684\u76d1\u63a7\u6808\u914d\u7f6e\uff0c\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u529f\u80fd\uff1a Kubernetes \u81ea\u5b9a\u4e49\u8d44\u6e90\uff1a\u4f7f\u7528 Kubernetes CRD \u6765\u90e8\u7f72\u548c\u7ba1\u7406 Prometheus\u3001Alertmanager \u548c\u76f8\u5173\u7ec4\u4ef6\u3002 \u7b80\u5316\u7684\u90e8\u7f72\u914d\u7f6e\uff1a\u76f4\u63a5\u901a\u8fc7 Kubernetes \u8d44\u6e90\u6e05\u5355\u914d\u7f6e Prometheus\uff0c\u6bd4\u5982\u7248\u672c\u3001\u6301\u4e45\u5316\u3001\u526f\u672c\u3001\u4fdd\u7559\u7b56\u7565\u7b49\u7b49\u914d\u7f6e\u3002 Prometheus \u76d1\u63a7\u76ee\u6807\u914d\u7f6e\uff1a\u57fa\u4e8e\u719f\u77e5\u7684 Kubernetes \u6807\u7b7e\u67e5\u8be2\u81ea\u52a8\u751f\u6210\u76d1\u63a7\u76ee\u6807\u914d\u7f6e\uff0c\u65e0\u9700\u5b66\u4e60 Prometheus \u7279\u5730\u7684\u914d\u7f6e\u3002 \u9996\u5148\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e0b Prometheus Operator \u7684\u67b6\u6784\u56fe\uff1a \u4e0a\u56fe\u662f Prometheus-Operator \u5b98\u65b9\u63d0\u4f9b\u7684\u67b6\u6784\u56fe\uff0c\u5404\u7ec4\u4ef6\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u884c\u5728 Kubernetes \u96c6\u7fa4\u4e2d\uff0c\u5176\u4e2d Operator \u662f\u6700\u6838\u5fc3\u7684\u90e8\u5206\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u63a7\u5236\u5668\uff0c\u4ed6\u4f1a\u53bb\u521b\u5efa Prometheus\u3001ServiceMonitor\u3001AlertManager \u4ee5\u53ca PrometheusRule \u7b49 CRD \u8d44\u6e90\u5bf9\u8c61\uff0c\u7136\u540e\u4f1a\u4e00\u76f4 Watch \u5e76\u7ef4\u6301\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u3002 \u5728\u6700\u65b0\u7248\u672c\u7684 Operator \u4e2d\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u51e0\u4e2a CRD \u8d44\u6e90\u5bf9\u8c61\uff1a Prometheus Alertmanager ServiceMonitor PodMonitor Probe ThanosRuler PrometheusRule AlertmanagerConfig 1-1 Prometheus \u8be5 CRD \u58f0\u660e\u5b9a\u4e49\u4e86 Prometheus \u671f\u671b\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684\u914d\u7f6e\uff0c\u63d0\u4f9b\u4e86\u914d\u7f6e\u9009\u9879\u6765\u914d\u7f6e\u526f\u672c\u3001\u6301\u4e45\u5316\u3001\u62a5\u8b66\u5b9e\u4f8b\u7b49\u3002 \u5bf9\u4e8e\u6bcf\u4e2a Prometheus CRD \u8d44\u6e90\uff0cOperator \u90fd\u4f1a\u4ee5 StatefulSet \u5f62\u5f0f\u5728\u76f8\u540c\u7684\u547d\u540d\u7a7a\u95f4\u4e0b\u90e8\u7f72\u5bf9\u5e94\u914d\u7f6e\u7684\u8d44\u6e90\uff0cPrometheus Pod \u7684\u914d\u7f6e\u662f\u901a\u8fc7\u4e00\u4e2a\u5305\u542b Prometheus \u914d\u7f6e\u7684\u540d\u4e3a <prometheus-name> \u7684 Secret \u5bf9\u8c61\u58f0\u660e\u6302\u8f7d\u7684 \u3002 \u8be5 CRD \u6839\u636e\u6807\u7b7e\u9009\u62e9\u6765\u6307\u5b9a\u90e8\u7f72\u7684 Prometheus \u5b9e\u4f8b\u5e94\u8be5\u8986\u76d6\u54ea\u4e9b ServiceMonitor \uff0c\u7136\u540e Operator \u4f1a\u6839\u636e\u5305\u542b\u7684 ServiceMonitors \u751f\u6210\u914d\u7f6e\uff0c\u5e76\u5728\u5305\u542b\u914d\u7f6e\u7684 Secret \u4e2d\u8fdb\u884c\u66f4\u65b0\u3002 \u5982\u679c\u672a\u63d0\u4f9b\u5bf9 ServiceMonitor \u7684\u9009\u62e9\uff0c\u5219 Operator \u4f1a\u5c06 Secret \u7684\u7ba1\u7406\u7559\u7ed9\u7528\u6237\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5b9a\u4e49\u914d\u7f6e\uff0c\u540c\u65f6\u8fd8\u80fd\u4eab\u53d7 Operator \u7ba1\u7406 Operator \u7684\u8bbe\u7f6e\u80fd\u529b \u3002 1-2 Alertmanager \u8be5 CRD \u5b9a\u4e49\u4e86\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684 Alertmanager \u7684\u914d\u7f6e\uff0c\u540c\u6837\u63d0\u4f9b\u4e86\u591a\u79cd\u914d\u7f6e\uff0c\u5305\u62ec\u6301\u4e45\u5316\u5b58\u50a8\u3002 \u5bf9\u4e8e\u6bcf\u4e2a Alertmanager \u8d44\u6e90\uff0cOperator \u90fd\u4f1a\u5728\u76f8\u540c\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u90e8\u7f72\u4e00\u4e2a\u5bf9\u5e94\u914d\u7f6e\u7684 StatefulSet\uff0c Alertmanager Pods \u88ab\u914d\u7f6e\u4e3a\u5305\u542b\u4e00\u4e2a\u540d\u4e3a <alertmanager-name> \u7684 Secret\uff0c\u8be5 Secret \u4ee5 alertmanager.yaml \u4e3a key \u7684\u65b9\u5f0f\u4fdd\u5b58\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u5f53\u6709\u4e24\u4e2a\u6216\u66f4\u591a\u914d\u7f6e\u7684\u526f\u672c\u65f6\uff0cOperator \u4f1a\u5728\u9ad8\u53ef\u7528\u6a21\u5f0f\u4e0b\u8fd0\u884c Alertmanager \u5b9e\u4f8b\u3002 1-3 ThanosRuler \u8be5 CRD \u5b9a\u4e49\u4e86\u4e00\u4e2a Thanos Ruler \u7ec4\u4ef6\u7684\u914d\u7f6e\uff0c\u4ee5\u65b9\u4fbf\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u8fd0\u884c\u3002 \u901a\u8fc7 Thanos Ruler\uff0c\u53ef\u4ee5\u8de8\u591a\u4e2aPrometheus \u5b9e\u4f8b\u5904\u7406\u8bb0\u5f55\u548c\u8b66\u62a5\u89c4\u5219\u3002 \u4e00\u4e2a ThanosRuler \u5b9e\u4f8b\u81f3\u5c11\u9700\u8981\u4e00\u4e2a queryEndpoint \uff0c\u5b83\u6307\u5411 Thanos Queriers \u6216 Prometheus \u5b9e\u4f8b\u7684\u4f4d\u7f6e\u3002 queryEndpoints \u7528\u4e8e\u914d\u7f6e Thanos \u8fd0\u884c\u65f6\u7684 --query \u53c2\u6570\uff0c\u66f4\u591a\u4fe1\u606f\u4e5f\u53ef\u4ee5\u5728 Thanos \u6587\u6863\u4e2d\u627e\u5230 \u3002 1-4 ServiceMonitor \u8be5 CRD \u5b9a\u4e49\u4e86\u5982\u4f55\u76d1\u63a7\u4e00\u7ec4\u52a8\u6001\u7684\u670d\u52a1\uff0c\u4f7f\u7528\u6807\u7b7e\u9009\u62e9\u6765\u5b9a\u4e49\u54ea\u4e9b Service \u88ab\u9009\u62e9\u8fdb\u884c\u76d1\u63a7\u3002\u8fd9\u53ef\u4ee5\u8ba9\u56e2\u961f\u5236\u5b9a\u4e00\u4e2a\u5982\u4f55\u66b4\u9732\u76d1\u63a7\u6307\u6807\u7684\u89c4\u8303\uff0c\u7136\u540e\u6309\u7167\u8fd9\u4e9b\u89c4\u8303\u81ea\u52a8\u53d1\u73b0\u65b0\u7684\u670d\u52a1\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u914d\u7f6e\u3002 \u4e3a\u4e86\u8ba9 Prometheus \u76d1\u63a7 Kubernetes \u5185\u7684\u4efb\u4f55\u5e94\u7528\uff0c \u9700\u8981\u5b58\u5728\u4e00\u4e2a Endpoints \u5bf9\u8c61\uff0cEndpoints \u5bf9\u8c61\u672c\u8d28\u4e0a\u662fIP\u5730\u5740\u7684\u5217\u8868\uff0c\u901a\u5e38 Endpoints \u5bf9\u8c61\u662f\u7531 Service \u5bf9\u8c61\u6765\u81ea\u52a8\u586b\u5145\u7684\uff0cService \u5bf9\u8c61\u901a\u8fc7\u6807\u7b7e\u9009\u62e9\u5668\u5339\u914d Pod\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230Endpoints \u5bf9\u8c61\u4e2d \u3002 \u4e00\u4e2a Service \u53ef\u4ee5\u66b4\u9732\u4e00\u4e2a\u6216\u591a\u4e2a\u7aef\u53e3\uff0c\u8fd9\u4e9b\u7aef\u53e3\u7531\u591a\u4e2a Endpoints \u5217\u8868\u652f\u6301\uff0c\u8fd9\u4e9b\u7aef\u70b9\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u662f\u6307\u5411\u4e00\u4e2a Pod\u3002 Prometheus Operator \u5f15\u5165\u7684\u8fd9\u4e2a ServiceMonitor \u5bf9\u8c61\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e9b Endpoints \u5bf9\u8c61\uff0c\u5e76\u914d\u7f6e Prometheus \u76d1\u63a7\u8fd9\u4e9b Pod\u3002 ServiceMonitorSpec \u7684 endpoints \u90e8\u5206\u5c31\u662f\u7528\u4e8e\u914d\u7f6e\u8fd9\u4e9b Endpoints \u7684\u54ea\u4e9b\u7aef\u53e3\u5c06\u88ab scrape \u6307\u6807\u7684 \u3002 \u6ce8\u610f\uff1aendpoints\uff08\u5c0f\u5199\uff09\u662f ServiceMonitor CRD \u4e2d\u7684\u5b57\u6bb5\uff0c\u800c Endpoints\uff08\u5927\u5199\uff09\u662f Kubernetes \u7684\u4e00\u79cd\u5bf9\u8c61\u3002 ServiceMonitors \u4ee5\u53ca\u88ab\u53d1\u73b0\u7684\u76ee\u6807\u90fd\u53ef\u4ee5\u6765\u81ea\u4efb\u4f55\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u5bf9\u4e8e\u5141\u8bb8\u8de8\u547d\u540d\u7a7a\u95f4\u76d1\u63a7\u7684\u573a\u666f\u975e\u5e38\u91cd\u8981\u3002 \u4f7f\u7528 PrometheusSpec \u7684 ServiceMonitorNamespaceSelector \uff0c\u53ef\u4ee5\u9650\u5236\u5404\u81ea\u7684 Prometheus \u670d\u52a1\u5668\u9009\u62e9\u7684 ServiceMonitors \u7684\u547d\u540d\u7a7a\u95f4\u3002 \u4f7f\u7528 ServiceMonitorSpec \u7684 namespaceSelector \uff0c\u53ef\u4ee5\u9650\u5236 Endpoints \u5bf9\u8c61\u88ab\u5141\u8bb8\u4ece\u54ea\u4e9b\u547d\u540d\u7a7a\u95f4\u4e2d\u53d1\u73b0\uff0c\u8981\u5728\u6240\u6709\u547d\u540d\u7a7a\u95f4\u4e2d\u53d1\u73b0\u76ee\u6807\uff0c namespaceSelector \u5fc5\u987b\u4e3a\u7a7a\uff1a spec: namespaceSelector: any: true 1-5 PodMonitor \u8be5 CRD \u7528\u4e8e\u5b9a\u4e49\u5982\u4f55\u76d1\u63a7\u4e00\u7ec4\u52a8\u6001 pods\uff0c\u4f7f\u7528\u6807\u7b7e\u9009\u62e9\u6765\u5b9a\u4e49\u54ea\u4e9b pods \u88ab\u9009\u62e9\u8fdb\u884c\u76d1\u63a7 \u3002\u540c\u6837\u56e2\u961f\u4e2d\u53ef\u4ee5\u5236\u5b9a\u4e00\u4e9b\u89c4\u8303\u6765\u66b4\u9732\u76d1\u63a7\u7684\u6307\u6807\u3002 Pod \u662f\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u5728\u4e00\u4e9b\u7aef\u53e3\u4e0a\u66b4\u9732Prometheus\u6307\u6807 \u3002 \u7531 Prometheus Operator \u5f15\u5165\u7684 PodMonitor \u5bf9\u8c61\u4f1a\u53d1\u73b0\u8fd9\u4e9b Pod\uff0c\u5e76\u4e3a Prometheus \u670d\u52a1\u5668\u751f\u6210\u76f8\u5173\u914d\u7f6e\uff0c\u4ee5\u4fbf\u76d1\u63a7\u5b83\u4eec\u3002 PodMonitorSpec \u4e2d\u7684 PodMetricsEndpoints \u90e8\u5206\uff0c\u7528\u4e8e\u914d\u7f6e Pod \u7684\u54ea\u4e9b\u7aef\u53e3\u5c06\u88ab scrape \u6307\u6807\uff0c\u4ee5\u53ca\u4f7f\u7528\u54ea\u4e9b\u53c2\u6570\u3002 PodMonitors \u548c\u53d1\u73b0\u7684\u76ee\u6807\u53ef\u4ee5\u6765\u81ea\u4efb\u4f55\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u540c\u6837\u5bf9\u4e8e\u5141\u8bb8\u8de8\u547d\u540d\u7a7a\u95f4\u7684\u76d1\u63a7\u7528\u4f8b\u662f\u5f88\u91cd\u8981\u7684\u3002 \u4f7f\u7528 PodMonitorSpec \u7684 namespaceSelector \uff0c\u53ef\u4ee5\u9650\u5236 Pod \u88ab\u5141\u8bb8\u53d1\u73b0\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8981\u5728\u6240\u6709\u547d\u540d\u7a7a\u95f4\u4e2d\u53d1\u73b0\u76ee\u6807\uff0c namespaceSelector \u5fc5\u987b\u4e3a\u7a7a \uff1a spec: namespaceSelector: any: true PodMonitor \u548c ServieMonitor \u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u4e0d\u9700\u8981\u6709\u5bf9\u5e94\u7684 Service\u3002 1-6 Probe \u8be5 CRD \u7528\u4e8e\u5b9a\u4e49\u5982\u4f55\u76d1\u63a7\u4e00\u7ec4 Ingress \u548c\u9759\u6001\u76ee\u6807\u3002\u9664\u4e86 target \u4e4b\u5916\uff0c Probe \u5bf9\u8c61\u8fd8\u9700\u8981\u4e00\u4e2a prober \uff0c\u5b83\u662f\u76d1\u63a7\u7684\u76ee\u6807\u5e76\u4e3a Prometheus \u63d0\u4f9b\u6307\u6807\u7684\u670d\u52a1 \u3002\u4f8b\u5982\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 blackbox-exporter \u6765\u63d0\u4f9b\u8fd9\u4e2a\u670d\u52a1\u3002 1-7 PrometheusRule \u7528\u4e8e\u914d\u7f6e Prometheus \u7684 Rule \u89c4\u5219\u6587\u4ef6\uff0c\u5305\u62ec recording rules \u548c alerting\uff0c\u53ef\u4ee5\u81ea\u52a8\u88ab Prometheus \u52a0\u8f7d\u3002 1-8 AlertmanagerConfig \u5728\u4ee5\u524d\u7684\u7248\u672c\u4e2d\u8981\u914d\u7f6e Alertmanager \u90fd\u662f\u901a\u8fc7 Configmap \u6765\u5b8c\u6210\u7684\uff0c\u5728 v0.43 \u7248\u672c\u540e\u65b0\u589e\u8be5 CRD\uff0c\u53ef\u4ee5\u5c06 Alertmanager \u7684\u914d\u7f6e\u5206\u5272\u6210\u4e0d\u540c\u7684\u5b50\u5bf9\u8c61\u8fdb\u884c\u914d\u7f6e\uff0c\u5141\u8bb8\u5c06\u62a5\u8b66\u8def\u7531\u5230\u81ea\u5b9a\u4e49 Receiver \u4e0a\uff0c\u5e76\u914d\u7f6e\u6291\u5236\u89c4\u5219\u3002 AlertmanagerConfig \u53ef\u4ee5\u5728\u547d\u540d\u7a7a\u95f4\u7ea7\u522b\u4e0a\u5b9a\u4e49\uff0c\u4e3a Alertmanager \u63d0\u4f9b\u4e00\u4e2a\u805a\u5408\u7684\u914d\u7f6e\u3002\u8fd9\u91cc\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5982\u4f55\u4f7f\u7528\u5b83\u7684\u4f8b\u5b50\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u8fd9\u4e2a CRD \u8fd8\u4e0d\u7a33\u5b9a\u3002 \u8fd9\u6837\u6211\u4eec\u8981\u5728\u96c6\u7fa4\u4e2d\u76d1\u63a7\u4ec0\u4e48\u6570\u636e\uff0c\u5c31\u53d8\u6210\u4e86\u76f4\u63a5\u53bb\u64cd\u4f5c Kubernetes \u96c6\u7fa4\u7684\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u662f\u8fd9\u6837\u6bd4\u4e4b\u524d\u624b\u52a8\u7684\u65b9\u5f0f\u5c31\u65b9\u4fbf\u5f88\u591a\u4e86\u3002 2 \u5b89\u88c5 \u4e3a\u4e86\u4f7f\u7528 Prometheus-Operator\uff0c\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u4f7f\u7528 kube-prometheus \u8fd9\u4e2a\u9879\u76ee\u6765\u8fdb\u884c\u5b89\u88c5\uff0c\u8be5\u9879\u76ee\u548c Prometheus-Operator \u7684\u533a\u522b\u5c31\u7c7b\u4f3c\u4e8e Linux \u5185\u6838\u548c CentOS/Ubuntu \u8fd9\u4e9b\u53d1\u884c\u7248\u7684\u5173\u7cfb\uff0c\u771f\u6b63\u8d77\u4f5c\u7528\u7684\u662f Operator \u53bb\u5b9e\u73b0\u7684\uff0c\u800c kube-prometheus \u53ea\u662f\u5229\u7528 Operator \u7f16\u5199\u4e86\u4e00\u7cfb\u5217\u5e38\u7528\u7684\u76d1\u63a7\u8d44\u6e90\u6e05\u5355\u3002 \u9996\u5148 clone \u9879\u76ee\u4ee3\u7801\uff0c\u5207\u6362\u5230\u5f53\u524d\u6700\u65b0\u7684 v0.7.0 \u7248\u672c\uff1a $ git clone https://github.com/prometheus-operator/kube-prometheus.git $ cd kube-prometheus && git checkout v0.7.0 \u9996\u5148\u521b\u5efa\u9700\u8981\u7684\u547d\u540d\u7a7a\u95f4\u548c CRDs\uff0c\u7b49\u5f85\u5b83\u4eec\u53ef\u7528\u540e\u518d\u521b\u5efa\u5176\u4f59\u8d44\u6e90\uff1a $ kubectl apply -f manifests/setup $ until kubectl get servicemonitors --all-namespaces ; do date; sleep 1; echo \"\"; done $ kubectl apply -f manifests/ \u8fdb\u5165\u5230 manifests \u76ee\u5f55\u4e0b\u9762\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5b89\u88c5 setup \u76ee\u5f55\u4e0b\u9762\u7684 CRD \u548c Operator \u8d44\u6e90\u5bf9\u8c61\uff0c\u7b49\u5f85\u5b83\u4eec\u53ef\u7528\u540e\u518d\u521b\u5efa\u5176\u4f59\u8d44\u6e90\uff1a $ kubectl apply -f setup/ $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE prometheus-operator-7649c7454f-wqtx7 2/2 Running 0 2m42s \u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a monitoring \u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4ee5\u53ca\u76f8\u5173\u7684 CRD \u8d44\u6e90\u5bf9\u8c61\u58f0\u660e\u548c Prometheus Operator \u63a7\u5236\u5668\u3002 \u524d\u9762\u7ae0\u8282\u4e2d\u6211\u4eec\u8bb2\u89e3\u8fc7 CRD \u548c Operator \u7684\u4f7f\u7528\uff0c\u5f53\u6211\u4eec\u58f0\u660e\u5b8c CRD \u8fc7\u540e\uff0c\u5c31\u53ef\u4ee5\u6765\u81ea\u5b9a\u4e49\u8d44\u6e90\u6e05\u5355\u4e86\uff0c\u4f46\u662f\u8981\u8ba9\u6211\u4eec\u58f0\u660e\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u5bf9\u8c61\u751f\u6548\u5c31\u9700\u8981\u5b89\u88c5\u5bf9\u5e94\u7684 Operator \u63a7\u5236\u5668\uff0c\u8fd9\u91cc\u6211\u4eec\u90fd\u5df2\u7ecf\u5b89\u88c5\u4e86\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u6765\u7528 CRD \u521b\u5efa\u771f\u6b63\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u5bf9\u8c61\u4e86\u3002 \u5728 manifests \u76ee\u5f55\u4e0b\u9762\u7684\u5c31\u662f\u6211\u4eec\u8981\u53bb\u521b\u5efa\u7684 Prometheus\u3001Alertmanager \u4ee5\u53ca\u5404\u79cd\u76d1\u63a7\u5bf9\u8c61\u7684\u8d44\u6e90\u6e05\u5355\uff0c\u76f4\u63a5\u5b89\u88c5\u5373\u53ef\uff1a $ kubectl apply -f manifests/ \u8fd9\u4f1a\u81ea\u52a8\u5b89\u88c5 node-exporter \u3001 kube-state-metrics \u3001 grafana \u3001 prometheus-adapter \u4ee5\u53ca prometheus \u548c alertmanager \u7b49\u5927\u91cf\u7ec4\u4ef6\uff0c\u800c\u4e14 prometheus \u548c alertmanager \u8fd8\u662f\u591a\u526f\u672c\u7684\u3002 $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE alertmanager-main-0 2/2 Running 0 12m alertmanager-main-1 2/2 Running 0 12m alertmanager-main-2 2/2 Running 0 12m grafana-f8cd57fcf-kbnsj 1/1 Running 0 12m kube-state-metrics-587bfd4f97-pwk5p 3/3 Running 0 12m node-exporter-djwtz 2/2 Running 0 12m node-exporter-k7zl9 2/2 Running 0 12m node-exporter-rlnjt 2/2 Running 0 12m prometheus-adapter-69b8496df6-vq7bl 1/1 Running 0 12m prometheus-k8s-0 2/2 Running 0 12m prometheus-k8s-1 1/2 Running 0 12m prometheus-operator-7649c7454f-wqtx7 2/2 Running 0 16m $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager-main ClusterIP 10.104.5.112 <none> 9093/TCP 4m58s alertmanager-operated ClusterIP None <none> 9093/TCP,9094/TCP,9094/UDP 4m58s grafana ClusterIP 10.107.173.231 <none> 3000/TCP 4m52s kube-state-metrics ClusterIP None <none> 8443/TCP,9443/TCP 4m51s node-exporter ClusterIP None <none> 9100/TCP 4m51s prometheus-adapter ClusterIP 10.104.205.68 <none> 443/TCP 4m50s prometheus-k8s ClusterIP 10.105.168.183 <none> 9090/TCP 4m49s prometheus-operated ClusterIP None <none> 9090/TCP 4m50s prometheus-operator ClusterIP None <none> 8443/TCP \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u9488\u5bf9 grafana\u3001alertmanager \u548c prometheus \u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a ClusterIP \u7684 Service\uff0c\u5f53\u7136\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u5916\u7f51\u8bbf\u95ee\u8fd9\u4e24\u4e2a\u670d\u52a1\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5bf9\u5e94\u7684 Ingress \u5bf9\u8c61\u6216\u8005\u4f7f\u7528 NodePort \u7c7b\u578b\u7684 Service\uff0c \u6211\u4eec\u8fd9\u91cc\u4e3a\u4e86\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 NodePort \u7c7b\u578b\u7684\u670d\u52a1\u5373\u53ef\uff0c\u7f16\u8f91 grafana \u3001 alertmanager-main \u548c prometheus-k8s \u8fd93\u4e2a Service\uff0c\u5c06\u670d\u52a1\u7c7b\u578b\u66f4\u6539\u4e3a NodePort: # \u5c06 type: ClusterIP \u66f4\u6539\u4e3a type: NodePort $ kubectl edit svc grafana -n monitoring $ kubectl edit svc alertmanager-main -n monitoring $ kubectl edit svc prometheus-k8s -n monitoring $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager-main NodePort 10.111.28.173 <none> 9093:30733/TCP 18m grafana NodePort 10.99.62.32 <none> 3000:32150/TCP 17m prometheus-k8s NodePort 10.111.105.155 <none> 9090:30206/TCP 17m ...... \u66f4\u6539\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684 NodePort \u53bb\u8bbf\u95ee\u5bf9\u5e94\u7684\u670d\u52a1\u4e86\uff0c\u6bd4\u5982\u67e5\u770b prometheus \u7684\u670d\u52a1\u53d1\u73b0\u9875\u9762\uff1a \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u76d1\u63a7\u4e0a\u4e86\u5f88\u591a\u6307\u6807\u6570\u636e\u4e86\uff0c\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u5230 Prometheus \u662f\u4e24\u4e2a\u526f\u672c\uff0c\u6211\u4eec\u8fd9\u91cc\u901a\u8fc7 Service \u53bb\u8bbf\u95ee\uff0c\u6309\u6b63\u5e38\u6765\u8bf4\u8bf7\u6c42\u662f\u4f1a\u53bb\u8f6e\u8be2\u8bbf\u95ee\u540e\u7aef\u7684\u4e24\u4e2a Prometheus \u5b9e\u4f8b\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd9\u91cc\u8bbf\u95ee\u7684\u65f6\u5019\u59cb\u7ec8\u662f\u8def\u7531\u5230\u540e\u7aef\u7684\u4e00\u4e2a\u5b9e\u4f8b\u4e0a\u53bb\uff0c \u56e0\u4e3a\u8fd9\u91cc\u7684 Service \u5728\u521b\u5efa\u7684\u65f6\u5019\u6dfb\u52a0\u4e86 sessionAffinity: ClientIP \u8fd9\u6837\u7684\u5c5e\u6027\uff0c\u4f1a\u6839\u636e ClientIP \u6765\u505a session \u4eb2\u548c\u6027 \uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u62c5\u5fc3\u8bf7\u6c42\u4f1a\u5230\u4e0d\u540c\u7684\u526f\u672c\u4e0a\u53bb\uff1a apiVersion: v1 kind: Service metadata: labels: prometheus: k8s name: prometheus-k8s namespace: monitoring spec: ports: - name: web port: 9090 targetPort: web selector: app: prometheus prometheus: k8s sessionAffinity: ClientIP \u4e3a\u4ec0\u4e48\u4f1a\u62c5\u5fc3\u8bf7\u6c42\u4f1a\u5230\u4e0d\u540c\u7684\u526f\u672c\u4e0a\u53bb\u5462\uff1f\u6b63\u5e38\u591a\u526f\u672c\u5e94\u8be5\u662f\u770b\u6210\u9ad8\u53ef\u7528\u7684\u5e38\u7528\u65b9\u6848\uff0c\u7406\u8bba\u4e0a\u6765\u8bf4\u4e0d\u540c\u526f\u672c\u672c\u5730\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f Prometheus \u7684\u4e3b\u52a8 Pull \u62c9\u53d6\u76d1\u63a7\u6307\u6807\u7684\u65b9\u5f0f\uff0c\u7531\u4e8e\u6293\u53d6\u65f6\u95f4\u4e0d\u80fd\u5b8c\u5168\u4e00\u81f4\uff0c\u5373\u4f7f\u4e00\u81f4\u4e5f\u4e0d\u4e00\u5b9a\u5c31\u80fd\u4fdd\u8bc1\u7f51\u7edc\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u6240\u4ee5\u6700\u7ec8\u4e0d\u540c\u526f\u672c\u4e0b\u5b58\u50a8\u7684\u6570\u636e\u5f88\u5927\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u914d\u7f6e\u4e86 session \u4eb2\u548c\u6027\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u5728\u8bbf\u95ee\u6570\u636e\u7684\u65f6\u5019\u59cb\u7ec8\u662f\u4e00\u81f4\u7684\u3002 3 \u914d\u7f6e \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u76d1\u63a7\u6307\u6807\u5927\u90e8\u5206\u7684\u914d\u7f6e\u90fd\u662f\u6b63\u5e38\u7684\uff0c\u53ea\u6709\u4e24\u4e09\u4e2a\u6ca1\u6709\u7ba1\u7406\u5230\u5bf9\u5e94\u7684\u76d1\u63a7\u76ee\u6807\uff0c\u6bd4\u5982 kube-controller-manager \u548c kube-scheduler \u8fd9\u4e24\u4e2a\u7cfb\u7edf\u7ec4\u4ef6\u3002 \u8fd9\u5176\u5b9e\u5c31\u548c ServiceMonitor \u7684\u5b9a\u4e49\u6709\u5173\u7cfb\u4e86\uff0c\u6211\u4eec\u5148\u6765\u67e5\u770b\u4e0b kube-scheduler \u7ec4\u4ef6\u5bf9\u5e94\u7684 ServiceMonitor \u8d44\u6e90\u7684\u5b9a\u4e49\uff1a # manifests/prometheus-serviceMonitorKubeScheduler.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: labels: k8s-app: kube-scheduler name: kube-scheduler namespace: monitoring spec: endpoints: - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token # token \u6587\u4ef6 interval: 30s # \u6bcf30s\u83b7\u53d6\u4e00\u6b21\u4fe1\u606f port: https-metrics # \u5bf9\u5e94 service \u7684\u7aef\u53e3\u540d scheme: https # \u6ce8\u610f\u662f\u4f7f\u7528 https \u534f\u8bae tlsConfig: # \u8df3\u8fc7\u5b89\u5168\u6821\u9a8c insecureSkipVerify: true jobLabel: k8s-app # \u7528\u4e8e\u4ece\u4e2d\u68c0\u7d22\u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e namespaceSelector: # \u8868\u793a\u53bb\u5339\u914d\u67d0\u4e00\u547d\u540d\u7a7a\u95f4\u4e2d\u7684 Service\uff0c\u5982\u679c\u60f3\u4ece\u6240\u6709\u7684namespace\u4e2d\u5339\u914d\u7528any:true matchNames: - kube-system selector: # \u5339\u914d\u7684 Service \u7684 labels\uff0c\u5982\u679c\u4f7f\u7528 mathLabels\uff0c\u5219\u4e0b\u9762\u7684\u6240\u6709\u6807\u7b7e\u90fd\u5339\u914d\u65f6\u624d\u4f1a\u5339\u914d\u8be5 service\uff0c\u5982\u679c\u4f7f\u7528 matchExpressions\uff0c\u5219\u81f3\u5c11\u5339\u914d\u4e00\u4e2a\u6807\u7b7e\u7684 service \u90fd\u4f1a\u88ab\u9009\u62e9 matchLabels: k8s-app: kube-scheduler \u4e0a\u9762\u662f\u4e00\u4e2a\u5178\u578b\u7684 ServiceMonitor \u8d44\u6e90\u5bf9\u8c61\u7684\u58f0\u660e\u65b9\u5f0f\uff0c\u4e0a\u9762\u6211\u4eec\u901a\u8fc7 selector.matchLabels \u5728 kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5339\u914d\u5177\u6709 k8s-app=kube-scheduler \u8fd9\u6837\u7684 Service \uff0c\u4f46\u662f\u6211\u4eec\u7cfb\u7edf\u4e2d\u6839\u672c\u5c31\u6ca1\u6709\u5bf9\u5e94\u7684 Service\uff1a $ kubectl get svc -n kube-system -l k8s-app=kube-scheduler No resources found in kube-system namespace. \u6240\u4ee5\u6211\u4eec\u9700\u8981\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c\u624d\u80fd\u4e0e ServiceMonitor \u8fdb\u884c\u5173\u8054\uff1a # prometheus-kubeSchedulerService.yaml apiVersion: v1 kind: Service metadata: namespace: kube-system name: kube-scheduler labels: # \u5fc5\u987b\u548c\u4e0a\u9762\u7684 ServiceMonitor \u4e0b\u9762\u7684 matchLabels \u4fdd\u6301\u4e00\u81f4 k8s-app: kube-scheduler spec: selector: component: kube-scheduler ports: - name: https-metrics port: 10259 targetPort: 10259 # \u9700\u8981\u6ce8\u610f\u73b0\u5728\u7248\u672c\u9ed8\u8ba4\u7684\u5b89\u5168\u7aef\u53e3\u662f10259 \u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f\u4e0a\u9762 labels \u548c selector \u90e8\u5206\uff0clabels \u533a\u57df\u7684\u914d\u7f6e\u5fc5\u987b\u548c\u6211\u4eec\u4e0a\u9762\u7684 ServiceMonitor \u5bf9\u8c61\u4e2d\u7684 selector \u4fdd\u6301\u4e00\u81f4\uff0c selector \u4e0b\u9762\u914d\u7f6e\u7684\u662f component=kube-scheduler \uff0c\u4e3a\u4ec0\u4e48\u4f1a\u662f\u8fd9\u4e2a label \u6807\u7b7e\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb describe \u4e0b kube-scheduler \u8fd9\u4e2a Pod \uff1a $ kubectl describe pod kube-scheduler-master1 -n kube-system Name: kube-scheduler-master1 Namespace: kube-system Priority: 2000001000 Priority Class Name: system-node-critical Node: master1/192.168.31.75 Start Time: Mon, 29 Mar 2021 18:15:46 +0800 Labels: component=kube-scheduler tier=control-plane ...... \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a Pod \u5177\u6709 component=kube-scheduler \u548c tier=control-plane \u8fd9\u4e24\u4e2a\u6807\u7b7e\uff0c\u800c\u524d\u9762\u8fd9\u4e2a\u6807\u7b7e\u5177\u6709\u66f4\u552f\u4e00\u7684\u7279\u6027\uff0c\u6240\u4ee5\u4f7f\u7528\u524d\u9762\u8fd9\u4e2a\u6807\u7b7e\u8f83\u597d\uff0c\u8fd9\u6837\u4e0a\u9762\u521b\u5efa\u7684 Service \u5c31\u53ef\u4ee5\u548c\u6211\u4eec\u7684 Pod \u8fdb\u884c\u5173\u8054\u4e86 \uff0c\u76f4\u63a5\u521b\u5efa\u5373\u53ef\uff1a $ kubectl apply -f prometheus-kubeSchedulerService.yaml $ kubectl get svc -n kube-system -l k8s-app=kube-scheduler NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kube-scheduler ClusterIP 10.100.66.246 <none> 10251/TCP 2m2s \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u5c0f\u4f1a\u513f\u540e\u53bb Prometheus \u9875\u9762\u4e0a\u67e5\u770b targets \u4e0b\u9762 kube-scheduler \u5df2\u7ecf\u6709\u91c7\u96c6\u7684\u76ee\u6807\u4e86\uff0c \u4f46\u662f\u62a5\u4e86 connect: connection refused \u8fd9\u6837\u7684\u9519\u8bef \uff1a \u8fd9\u662f\u56e0\u4e3a kube-scheduler \u542f\u52a8\u7684\u65f6\u5019\u9ed8\u8ba4\u7ed1\u5b9a\u7684\u662f 127.0.0.1 \u5730\u5740\uff0c\u6240\u4ee5\u8981\u901a\u8fc7 IP \u5730\u5740\u53bb\u8bbf\u95ee\u5c31\u88ab\u62d2\u7edd\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b master \u8282\u70b9\u4e0a\u7684\u9759\u6001 Pod \u8d44\u6e90\u6e05\u5355\u6765\u786e\u8ba4\u8fd9\u4e00\u70b9\uff1a # /etc/kubernetes/manifests/kube-scheduler.yaml apiVersion: v1 kind: Pod metadata: creationTimestamp: null labels: component: kube-scheduler tier: control-plane name: kube-scheduler namespace: kube-system spec: containers: - command: - kube-scheduler - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf - --bind-address=127.0.0.1 # \u7ed1\u5b9a\u4e86127.0.0.1 - --kubeconfig=/etc/kubernetes/scheduler.conf - --leader-elect=true - --port=0 # \u5982\u679c\u4e3a0\uff0c\u5219\u4e0d\u63d0\u4f9b HTTP \u670d\u52a1\uff0c--secure-port \u9ed8\u8ba4\u503c\uff1a10259\uff0c\u901a\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u4e3a HTTPS \u670d\u52a1\u7684\u7aef\u53e3\uff0c\u5982\u679c\u4e3a 0\uff0c\u5219\u4e0d\u63d0\u4f9b HTTPS\u3002 ...... \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u4e0a\u9762\u7684 --bind-address=127.0.0.1 \u66f4\u6539\u4e3a --bind-address=0.0.0.0 \u5373\u53ef\uff0c\u66f4\u6539\u540e kube-scheduler \u4f1a\u81ea\u52a8\u91cd\u542f\uff0c\u91cd\u542f\u5b8c\u6210\u540e\u518d\u53bb\u67e5\u770b Prometheus \u4e0a\u9762\u7684\u91c7\u96c6\u76ee\u6807\u5c31\u6b63\u5e38\u4e86\u3002 \u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u5f0f\u6765\u4fee\u590d\u4e0b kube-controller-manager \u7ec4\u4ef6\u7684\u76d1\u63a7\uff0c\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 Service \u5bf9\u8c61\uff0c\u53ea\u662f\u7aef\u53e3\u6539\u6210 10257 \uff1a # prometheus-kubeControllerManagerService.yaml apiVersion: v1 kind: Service metadata: namespace: kube-system name: kube-controller-manager labels: k8s-app: kube-controller-manager spec: selector: component: kube-controller-manager ports: - name: https-metrics port: 10257 targetPort: 10257 # controller-manager \u7684\u5b89\u5168\u7aef\u53e3\u4e3a10257 \u7136\u540e\u5c06 kube-controller-manager \u9759\u6001 Pod \u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u4e2d\u7684\u53c2\u6570 --bind-address=127.0.0.1 \u66f4\u6539\u4e3a --bind-address=0.0.0.0 \u3002 \u4e0a\u9762\u7684\u76d1\u63a7\u6570\u636e\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u67e5\u770b\u4e0b Grafana \u4e0b\u9762\u7684\u76d1\u63a7\u56fe\u8868\u4e86\uff0c\u540c\u6837\u4f7f\u7528\u4e0a\u9762\u7684 NodePort \u8bbf\u95ee\u5373\u53ef\uff0c\u7b2c\u4e00\u6b21\u767b\u5f55\u4f7f\u7528 admin:admin \u767b\u5f55\u5373\u53ef\uff0c\u8fdb\u5165\u9996\u9875\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5176\u5b9e Grafana \u5df2\u7ecf\u6709\u5f88\u591a\u914d\u7f6e\u597d\u7684\u76d1\u63a7\u56fe\u8868\u4e86\u3002 \u6211\u4eec\u53ef\u4ee5\u968f\u4fbf\u9009\u62e9\u4e00\u4e2a Dashboard \u67e5\u770b\u76d1\u63a7\u56fe\u8868\u4fe1\u606f\u3002 \u5982\u679c\u8981\u6e05\u7406 Prometheus-Operator\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\uff1a $ kubectl delete -f manifests/ $ kubectl delete -f manifests/setup/","title":"\u7b2c\u4e5d\u8282 Prometheus Operator\u5b89\u88c5\u914d\u7f6e(2021)"},{"location":"chap4/45Prom-operator_2021/#prometheus-operator2021","text":"\u4f46\u5b9e\u9645\u4e0a\u5bf9\u4e0a Kubernetes \u6765\u8bf4\uff0c\u8fd8\u6709\u66f4\u7b80\u5355\u65b9\u5f0f\u6765\u76d1\u63a7\u62a5\u8b66\uff0c\u90a3\u5c31\u662f Prometheus Operator( https://prometheus-operator.dev/ )\u3002 Prometheus Operator \u4e3a\u76d1\u63a7 Kubernetes \u8d44\u6e90\u548c Prometheus \u5b9e\u4f8b\u7684\u7ba1\u7406\u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u5b9a\u4e49\uff0c\u7b80\u5316\u5728 Kubernetes \u4e0a\u90e8\u7f72\u3001\u7ba1\u7406\u548c\u8fd0\u884c Prometheus \u548c Alertmanager \u96c6\u7fa4\u3002","title":"\u7b2c\u4e5d\u8282 Prometheus Operator\u5b89\u88c5\u914d\u7f6e(2021)"},{"location":"chap4/45Prom-operator_2021/#1","text":"Prometheus Operator \u4e3a Kubernetes \u63d0\u4f9b\u4e86\u5bf9 Prometheus \u673a\u5668\u76f8\u5173\u76d1\u63a7\u7ec4\u4ef6\u7684\u672c\u5730\u90e8\u7f72\u548c\u7ba1\u7406\u65b9\u6848\uff0c\u8be5\u9879\u76ee\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u7b80\u5316\u548c\u81ea\u52a8\u5316\u57fa\u4e8e Prometheus \u7684\u76d1\u63a7\u6808\u914d\u7f6e\uff0c\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u529f\u80fd\uff1a Kubernetes \u81ea\u5b9a\u4e49\u8d44\u6e90\uff1a\u4f7f\u7528 Kubernetes CRD \u6765\u90e8\u7f72\u548c\u7ba1\u7406 Prometheus\u3001Alertmanager \u548c\u76f8\u5173\u7ec4\u4ef6\u3002 \u7b80\u5316\u7684\u90e8\u7f72\u914d\u7f6e\uff1a\u76f4\u63a5\u901a\u8fc7 Kubernetes \u8d44\u6e90\u6e05\u5355\u914d\u7f6e Prometheus\uff0c\u6bd4\u5982\u7248\u672c\u3001\u6301\u4e45\u5316\u3001\u526f\u672c\u3001\u4fdd\u7559\u7b56\u7565\u7b49\u7b49\u914d\u7f6e\u3002 Prometheus \u76d1\u63a7\u76ee\u6807\u914d\u7f6e\uff1a\u57fa\u4e8e\u719f\u77e5\u7684 Kubernetes \u6807\u7b7e\u67e5\u8be2\u81ea\u52a8\u751f\u6210\u76d1\u63a7\u76ee\u6807\u914d\u7f6e\uff0c\u65e0\u9700\u5b66\u4e60 Prometheus \u7279\u5730\u7684\u914d\u7f6e\u3002 \u9996\u5148\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e0b Prometheus Operator \u7684\u67b6\u6784\u56fe\uff1a \u4e0a\u56fe\u662f Prometheus-Operator \u5b98\u65b9\u63d0\u4f9b\u7684\u67b6\u6784\u56fe\uff0c\u5404\u7ec4\u4ef6\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u884c\u5728 Kubernetes \u96c6\u7fa4\u4e2d\uff0c\u5176\u4e2d Operator \u662f\u6700\u6838\u5fc3\u7684\u90e8\u5206\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u63a7\u5236\u5668\uff0c\u4ed6\u4f1a\u53bb\u521b\u5efa Prometheus\u3001ServiceMonitor\u3001AlertManager \u4ee5\u53ca PrometheusRule \u7b49 CRD \u8d44\u6e90\u5bf9\u8c61\uff0c\u7136\u540e\u4f1a\u4e00\u76f4 Watch \u5e76\u7ef4\u6301\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u3002 \u5728\u6700\u65b0\u7248\u672c\u7684 Operator \u4e2d\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u51e0\u4e2a CRD \u8d44\u6e90\u5bf9\u8c61\uff1a Prometheus Alertmanager ServiceMonitor PodMonitor Probe ThanosRuler PrometheusRule AlertmanagerConfig","title":"1 \u4ecb\u7ecd"},{"location":"chap4/45Prom-operator_2021/#1-1-prometheus","text":"\u8be5 CRD \u58f0\u660e\u5b9a\u4e49\u4e86 Prometheus \u671f\u671b\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684\u914d\u7f6e\uff0c\u63d0\u4f9b\u4e86\u914d\u7f6e\u9009\u9879\u6765\u914d\u7f6e\u526f\u672c\u3001\u6301\u4e45\u5316\u3001\u62a5\u8b66\u5b9e\u4f8b\u7b49\u3002 \u5bf9\u4e8e\u6bcf\u4e2a Prometheus CRD \u8d44\u6e90\uff0cOperator \u90fd\u4f1a\u4ee5 StatefulSet \u5f62\u5f0f\u5728\u76f8\u540c\u7684\u547d\u540d\u7a7a\u95f4\u4e0b\u90e8\u7f72\u5bf9\u5e94\u914d\u7f6e\u7684\u8d44\u6e90\uff0cPrometheus Pod \u7684\u914d\u7f6e\u662f\u901a\u8fc7\u4e00\u4e2a\u5305\u542b Prometheus \u914d\u7f6e\u7684\u540d\u4e3a <prometheus-name> \u7684 Secret \u5bf9\u8c61\u58f0\u660e\u6302\u8f7d\u7684 \u3002 \u8be5 CRD \u6839\u636e\u6807\u7b7e\u9009\u62e9\u6765\u6307\u5b9a\u90e8\u7f72\u7684 Prometheus \u5b9e\u4f8b\u5e94\u8be5\u8986\u76d6\u54ea\u4e9b ServiceMonitor \uff0c\u7136\u540e Operator \u4f1a\u6839\u636e\u5305\u542b\u7684 ServiceMonitors \u751f\u6210\u914d\u7f6e\uff0c\u5e76\u5728\u5305\u542b\u914d\u7f6e\u7684 Secret \u4e2d\u8fdb\u884c\u66f4\u65b0\u3002 \u5982\u679c\u672a\u63d0\u4f9b\u5bf9 ServiceMonitor \u7684\u9009\u62e9\uff0c\u5219 Operator \u4f1a\u5c06 Secret \u7684\u7ba1\u7406\u7559\u7ed9\u7528\u6237\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5b9a\u4e49\u914d\u7f6e\uff0c\u540c\u65f6\u8fd8\u80fd\u4eab\u53d7 Operator \u7ba1\u7406 Operator \u7684\u8bbe\u7f6e\u80fd\u529b \u3002","title":"1-1 Prometheus"},{"location":"chap4/45Prom-operator_2021/#1-2-alertmanager","text":"\u8be5 CRD \u5b9a\u4e49\u4e86\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684 Alertmanager \u7684\u914d\u7f6e\uff0c\u540c\u6837\u63d0\u4f9b\u4e86\u591a\u79cd\u914d\u7f6e\uff0c\u5305\u62ec\u6301\u4e45\u5316\u5b58\u50a8\u3002 \u5bf9\u4e8e\u6bcf\u4e2a Alertmanager \u8d44\u6e90\uff0cOperator \u90fd\u4f1a\u5728\u76f8\u540c\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u90e8\u7f72\u4e00\u4e2a\u5bf9\u5e94\u914d\u7f6e\u7684 StatefulSet\uff0c Alertmanager Pods \u88ab\u914d\u7f6e\u4e3a\u5305\u542b\u4e00\u4e2a\u540d\u4e3a <alertmanager-name> \u7684 Secret\uff0c\u8be5 Secret \u4ee5 alertmanager.yaml \u4e3a key \u7684\u65b9\u5f0f\u4fdd\u5b58\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u5f53\u6709\u4e24\u4e2a\u6216\u66f4\u591a\u914d\u7f6e\u7684\u526f\u672c\u65f6\uff0cOperator \u4f1a\u5728\u9ad8\u53ef\u7528\u6a21\u5f0f\u4e0b\u8fd0\u884c Alertmanager \u5b9e\u4f8b\u3002","title":"1-2 Alertmanager"},{"location":"chap4/45Prom-operator_2021/#1-3-thanosruler","text":"\u8be5 CRD \u5b9a\u4e49\u4e86\u4e00\u4e2a Thanos Ruler \u7ec4\u4ef6\u7684\u914d\u7f6e\uff0c\u4ee5\u65b9\u4fbf\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u8fd0\u884c\u3002 \u901a\u8fc7 Thanos Ruler\uff0c\u53ef\u4ee5\u8de8\u591a\u4e2aPrometheus \u5b9e\u4f8b\u5904\u7406\u8bb0\u5f55\u548c\u8b66\u62a5\u89c4\u5219\u3002 \u4e00\u4e2a ThanosRuler \u5b9e\u4f8b\u81f3\u5c11\u9700\u8981\u4e00\u4e2a queryEndpoint \uff0c\u5b83\u6307\u5411 Thanos Queriers \u6216 Prometheus \u5b9e\u4f8b\u7684\u4f4d\u7f6e\u3002 queryEndpoints \u7528\u4e8e\u914d\u7f6e Thanos \u8fd0\u884c\u65f6\u7684 --query \u53c2\u6570\uff0c\u66f4\u591a\u4fe1\u606f\u4e5f\u53ef\u4ee5\u5728 Thanos \u6587\u6863\u4e2d\u627e\u5230 \u3002","title":"1-3 ThanosRuler"},{"location":"chap4/45Prom-operator_2021/#1-4-servicemonitor","text":"\u8be5 CRD \u5b9a\u4e49\u4e86\u5982\u4f55\u76d1\u63a7\u4e00\u7ec4\u52a8\u6001\u7684\u670d\u52a1\uff0c\u4f7f\u7528\u6807\u7b7e\u9009\u62e9\u6765\u5b9a\u4e49\u54ea\u4e9b Service \u88ab\u9009\u62e9\u8fdb\u884c\u76d1\u63a7\u3002\u8fd9\u53ef\u4ee5\u8ba9\u56e2\u961f\u5236\u5b9a\u4e00\u4e2a\u5982\u4f55\u66b4\u9732\u76d1\u63a7\u6307\u6807\u7684\u89c4\u8303\uff0c\u7136\u540e\u6309\u7167\u8fd9\u4e9b\u89c4\u8303\u81ea\u52a8\u53d1\u73b0\u65b0\u7684\u670d\u52a1\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u914d\u7f6e\u3002 \u4e3a\u4e86\u8ba9 Prometheus \u76d1\u63a7 Kubernetes \u5185\u7684\u4efb\u4f55\u5e94\u7528\uff0c \u9700\u8981\u5b58\u5728\u4e00\u4e2a Endpoints \u5bf9\u8c61\uff0cEndpoints \u5bf9\u8c61\u672c\u8d28\u4e0a\u662fIP\u5730\u5740\u7684\u5217\u8868\uff0c\u901a\u5e38 Endpoints \u5bf9\u8c61\u662f\u7531 Service \u5bf9\u8c61\u6765\u81ea\u52a8\u586b\u5145\u7684\uff0cService \u5bf9\u8c61\u901a\u8fc7\u6807\u7b7e\u9009\u62e9\u5668\u5339\u914d Pod\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230Endpoints \u5bf9\u8c61\u4e2d \u3002 \u4e00\u4e2a Service \u53ef\u4ee5\u66b4\u9732\u4e00\u4e2a\u6216\u591a\u4e2a\u7aef\u53e3\uff0c\u8fd9\u4e9b\u7aef\u53e3\u7531\u591a\u4e2a Endpoints \u5217\u8868\u652f\u6301\uff0c\u8fd9\u4e9b\u7aef\u70b9\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u662f\u6307\u5411\u4e00\u4e2a Pod\u3002 Prometheus Operator \u5f15\u5165\u7684\u8fd9\u4e2a ServiceMonitor \u5bf9\u8c61\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e9b Endpoints \u5bf9\u8c61\uff0c\u5e76\u914d\u7f6e Prometheus \u76d1\u63a7\u8fd9\u4e9b Pod\u3002 ServiceMonitorSpec \u7684 endpoints \u90e8\u5206\u5c31\u662f\u7528\u4e8e\u914d\u7f6e\u8fd9\u4e9b Endpoints \u7684\u54ea\u4e9b\u7aef\u53e3\u5c06\u88ab scrape \u6307\u6807\u7684 \u3002 \u6ce8\u610f\uff1aendpoints\uff08\u5c0f\u5199\uff09\u662f ServiceMonitor CRD \u4e2d\u7684\u5b57\u6bb5\uff0c\u800c Endpoints\uff08\u5927\u5199\uff09\u662f Kubernetes \u7684\u4e00\u79cd\u5bf9\u8c61\u3002 ServiceMonitors \u4ee5\u53ca\u88ab\u53d1\u73b0\u7684\u76ee\u6807\u90fd\u53ef\u4ee5\u6765\u81ea\u4efb\u4f55\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u5bf9\u4e8e\u5141\u8bb8\u8de8\u547d\u540d\u7a7a\u95f4\u76d1\u63a7\u7684\u573a\u666f\u975e\u5e38\u91cd\u8981\u3002 \u4f7f\u7528 PrometheusSpec \u7684 ServiceMonitorNamespaceSelector \uff0c\u53ef\u4ee5\u9650\u5236\u5404\u81ea\u7684 Prometheus \u670d\u52a1\u5668\u9009\u62e9\u7684 ServiceMonitors \u7684\u547d\u540d\u7a7a\u95f4\u3002 \u4f7f\u7528 ServiceMonitorSpec \u7684 namespaceSelector \uff0c\u53ef\u4ee5\u9650\u5236 Endpoints \u5bf9\u8c61\u88ab\u5141\u8bb8\u4ece\u54ea\u4e9b\u547d\u540d\u7a7a\u95f4\u4e2d\u53d1\u73b0\uff0c\u8981\u5728\u6240\u6709\u547d\u540d\u7a7a\u95f4\u4e2d\u53d1\u73b0\u76ee\u6807\uff0c namespaceSelector \u5fc5\u987b\u4e3a\u7a7a\uff1a spec: namespaceSelector: any: true","title":"1-4 ServiceMonitor"},{"location":"chap4/45Prom-operator_2021/#1-5-podmonitor","text":"\u8be5 CRD \u7528\u4e8e\u5b9a\u4e49\u5982\u4f55\u76d1\u63a7\u4e00\u7ec4\u52a8\u6001 pods\uff0c\u4f7f\u7528\u6807\u7b7e\u9009\u62e9\u6765\u5b9a\u4e49\u54ea\u4e9b pods \u88ab\u9009\u62e9\u8fdb\u884c\u76d1\u63a7 \u3002\u540c\u6837\u56e2\u961f\u4e2d\u53ef\u4ee5\u5236\u5b9a\u4e00\u4e9b\u89c4\u8303\u6765\u66b4\u9732\u76d1\u63a7\u7684\u6307\u6807\u3002 Pod \u662f\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u5728\u4e00\u4e9b\u7aef\u53e3\u4e0a\u66b4\u9732Prometheus\u6307\u6807 \u3002 \u7531 Prometheus Operator \u5f15\u5165\u7684 PodMonitor \u5bf9\u8c61\u4f1a\u53d1\u73b0\u8fd9\u4e9b Pod\uff0c\u5e76\u4e3a Prometheus \u670d\u52a1\u5668\u751f\u6210\u76f8\u5173\u914d\u7f6e\uff0c\u4ee5\u4fbf\u76d1\u63a7\u5b83\u4eec\u3002 PodMonitorSpec \u4e2d\u7684 PodMetricsEndpoints \u90e8\u5206\uff0c\u7528\u4e8e\u914d\u7f6e Pod \u7684\u54ea\u4e9b\u7aef\u53e3\u5c06\u88ab scrape \u6307\u6807\uff0c\u4ee5\u53ca\u4f7f\u7528\u54ea\u4e9b\u53c2\u6570\u3002 PodMonitors \u548c\u53d1\u73b0\u7684\u76ee\u6807\u53ef\u4ee5\u6765\u81ea\u4efb\u4f55\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u540c\u6837\u5bf9\u4e8e\u5141\u8bb8\u8de8\u547d\u540d\u7a7a\u95f4\u7684\u76d1\u63a7\u7528\u4f8b\u662f\u5f88\u91cd\u8981\u7684\u3002 \u4f7f\u7528 PodMonitorSpec \u7684 namespaceSelector \uff0c\u53ef\u4ee5\u9650\u5236 Pod \u88ab\u5141\u8bb8\u53d1\u73b0\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8981\u5728\u6240\u6709\u547d\u540d\u7a7a\u95f4\u4e2d\u53d1\u73b0\u76ee\u6807\uff0c namespaceSelector \u5fc5\u987b\u4e3a\u7a7a \uff1a spec: namespaceSelector: any: true PodMonitor \u548c ServieMonitor \u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u4e0d\u9700\u8981\u6709\u5bf9\u5e94\u7684 Service\u3002","title":"1-5 PodMonitor"},{"location":"chap4/45Prom-operator_2021/#1-6-probe","text":"\u8be5 CRD \u7528\u4e8e\u5b9a\u4e49\u5982\u4f55\u76d1\u63a7\u4e00\u7ec4 Ingress \u548c\u9759\u6001\u76ee\u6807\u3002\u9664\u4e86 target \u4e4b\u5916\uff0c Probe \u5bf9\u8c61\u8fd8\u9700\u8981\u4e00\u4e2a prober \uff0c\u5b83\u662f\u76d1\u63a7\u7684\u76ee\u6807\u5e76\u4e3a Prometheus \u63d0\u4f9b\u6307\u6807\u7684\u670d\u52a1 \u3002\u4f8b\u5982\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 blackbox-exporter \u6765\u63d0\u4f9b\u8fd9\u4e2a\u670d\u52a1\u3002","title":"1-6 Probe"},{"location":"chap4/45Prom-operator_2021/#1-7-prometheusrule","text":"\u7528\u4e8e\u914d\u7f6e Prometheus \u7684 Rule \u89c4\u5219\u6587\u4ef6\uff0c\u5305\u62ec recording rules \u548c alerting\uff0c\u53ef\u4ee5\u81ea\u52a8\u88ab Prometheus \u52a0\u8f7d\u3002","title":"1-7 PrometheusRule"},{"location":"chap4/45Prom-operator_2021/#1-8-alertmanagerconfig","text":"\u5728\u4ee5\u524d\u7684\u7248\u672c\u4e2d\u8981\u914d\u7f6e Alertmanager \u90fd\u662f\u901a\u8fc7 Configmap \u6765\u5b8c\u6210\u7684\uff0c\u5728 v0.43 \u7248\u672c\u540e\u65b0\u589e\u8be5 CRD\uff0c\u53ef\u4ee5\u5c06 Alertmanager \u7684\u914d\u7f6e\u5206\u5272\u6210\u4e0d\u540c\u7684\u5b50\u5bf9\u8c61\u8fdb\u884c\u914d\u7f6e\uff0c\u5141\u8bb8\u5c06\u62a5\u8b66\u8def\u7531\u5230\u81ea\u5b9a\u4e49 Receiver \u4e0a\uff0c\u5e76\u914d\u7f6e\u6291\u5236\u89c4\u5219\u3002 AlertmanagerConfig \u53ef\u4ee5\u5728\u547d\u540d\u7a7a\u95f4\u7ea7\u522b\u4e0a\u5b9a\u4e49\uff0c\u4e3a Alertmanager \u63d0\u4f9b\u4e00\u4e2a\u805a\u5408\u7684\u914d\u7f6e\u3002\u8fd9\u91cc\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5982\u4f55\u4f7f\u7528\u5b83\u7684\u4f8b\u5b50\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u8fd9\u4e2a CRD \u8fd8\u4e0d\u7a33\u5b9a\u3002 \u8fd9\u6837\u6211\u4eec\u8981\u5728\u96c6\u7fa4\u4e2d\u76d1\u63a7\u4ec0\u4e48\u6570\u636e\uff0c\u5c31\u53d8\u6210\u4e86\u76f4\u63a5\u53bb\u64cd\u4f5c Kubernetes \u96c6\u7fa4\u7684\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u662f\u8fd9\u6837\u6bd4\u4e4b\u524d\u624b\u52a8\u7684\u65b9\u5f0f\u5c31\u65b9\u4fbf\u5f88\u591a\u4e86\u3002","title":"1-8 AlertmanagerConfig"},{"location":"chap4/45Prom-operator_2021/#2","text":"\u4e3a\u4e86\u4f7f\u7528 Prometheus-Operator\uff0c\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u4f7f\u7528 kube-prometheus \u8fd9\u4e2a\u9879\u76ee\u6765\u8fdb\u884c\u5b89\u88c5\uff0c\u8be5\u9879\u76ee\u548c Prometheus-Operator \u7684\u533a\u522b\u5c31\u7c7b\u4f3c\u4e8e Linux \u5185\u6838\u548c CentOS/Ubuntu \u8fd9\u4e9b\u53d1\u884c\u7248\u7684\u5173\u7cfb\uff0c\u771f\u6b63\u8d77\u4f5c\u7528\u7684\u662f Operator \u53bb\u5b9e\u73b0\u7684\uff0c\u800c kube-prometheus \u53ea\u662f\u5229\u7528 Operator \u7f16\u5199\u4e86\u4e00\u7cfb\u5217\u5e38\u7528\u7684\u76d1\u63a7\u8d44\u6e90\u6e05\u5355\u3002 \u9996\u5148 clone \u9879\u76ee\u4ee3\u7801\uff0c\u5207\u6362\u5230\u5f53\u524d\u6700\u65b0\u7684 v0.7.0 \u7248\u672c\uff1a $ git clone https://github.com/prometheus-operator/kube-prometheus.git $ cd kube-prometheus && git checkout v0.7.0 \u9996\u5148\u521b\u5efa\u9700\u8981\u7684\u547d\u540d\u7a7a\u95f4\u548c CRDs\uff0c\u7b49\u5f85\u5b83\u4eec\u53ef\u7528\u540e\u518d\u521b\u5efa\u5176\u4f59\u8d44\u6e90\uff1a $ kubectl apply -f manifests/setup $ until kubectl get servicemonitors --all-namespaces ; do date; sleep 1; echo \"\"; done $ kubectl apply -f manifests/ \u8fdb\u5165\u5230 manifests \u76ee\u5f55\u4e0b\u9762\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5b89\u88c5 setup \u76ee\u5f55\u4e0b\u9762\u7684 CRD \u548c Operator \u8d44\u6e90\u5bf9\u8c61\uff0c\u7b49\u5f85\u5b83\u4eec\u53ef\u7528\u540e\u518d\u521b\u5efa\u5176\u4f59\u8d44\u6e90\uff1a $ kubectl apply -f setup/ $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE prometheus-operator-7649c7454f-wqtx7 2/2 Running 0 2m42s \u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a monitoring \u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4ee5\u53ca\u76f8\u5173\u7684 CRD \u8d44\u6e90\u5bf9\u8c61\u58f0\u660e\u548c Prometheus Operator \u63a7\u5236\u5668\u3002 \u524d\u9762\u7ae0\u8282\u4e2d\u6211\u4eec\u8bb2\u89e3\u8fc7 CRD \u548c Operator \u7684\u4f7f\u7528\uff0c\u5f53\u6211\u4eec\u58f0\u660e\u5b8c CRD \u8fc7\u540e\uff0c\u5c31\u53ef\u4ee5\u6765\u81ea\u5b9a\u4e49\u8d44\u6e90\u6e05\u5355\u4e86\uff0c\u4f46\u662f\u8981\u8ba9\u6211\u4eec\u58f0\u660e\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u5bf9\u8c61\u751f\u6548\u5c31\u9700\u8981\u5b89\u88c5\u5bf9\u5e94\u7684 Operator \u63a7\u5236\u5668\uff0c\u8fd9\u91cc\u6211\u4eec\u90fd\u5df2\u7ecf\u5b89\u88c5\u4e86\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u6765\u7528 CRD \u521b\u5efa\u771f\u6b63\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u5bf9\u8c61\u4e86\u3002 \u5728 manifests \u76ee\u5f55\u4e0b\u9762\u7684\u5c31\u662f\u6211\u4eec\u8981\u53bb\u521b\u5efa\u7684 Prometheus\u3001Alertmanager \u4ee5\u53ca\u5404\u79cd\u76d1\u63a7\u5bf9\u8c61\u7684\u8d44\u6e90\u6e05\u5355\uff0c\u76f4\u63a5\u5b89\u88c5\u5373\u53ef\uff1a $ kubectl apply -f manifests/ \u8fd9\u4f1a\u81ea\u52a8\u5b89\u88c5 node-exporter \u3001 kube-state-metrics \u3001 grafana \u3001 prometheus-adapter \u4ee5\u53ca prometheus \u548c alertmanager \u7b49\u5927\u91cf\u7ec4\u4ef6\uff0c\u800c\u4e14 prometheus \u548c alertmanager \u8fd8\u662f\u591a\u526f\u672c\u7684\u3002 $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE alertmanager-main-0 2/2 Running 0 12m alertmanager-main-1 2/2 Running 0 12m alertmanager-main-2 2/2 Running 0 12m grafana-f8cd57fcf-kbnsj 1/1 Running 0 12m kube-state-metrics-587bfd4f97-pwk5p 3/3 Running 0 12m node-exporter-djwtz 2/2 Running 0 12m node-exporter-k7zl9 2/2 Running 0 12m node-exporter-rlnjt 2/2 Running 0 12m prometheus-adapter-69b8496df6-vq7bl 1/1 Running 0 12m prometheus-k8s-0 2/2 Running 0 12m prometheus-k8s-1 1/2 Running 0 12m prometheus-operator-7649c7454f-wqtx7 2/2 Running 0 16m $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager-main ClusterIP 10.104.5.112 <none> 9093/TCP 4m58s alertmanager-operated ClusterIP None <none> 9093/TCP,9094/TCP,9094/UDP 4m58s grafana ClusterIP 10.107.173.231 <none> 3000/TCP 4m52s kube-state-metrics ClusterIP None <none> 8443/TCP,9443/TCP 4m51s node-exporter ClusterIP None <none> 9100/TCP 4m51s prometheus-adapter ClusterIP 10.104.205.68 <none> 443/TCP 4m50s prometheus-k8s ClusterIP 10.105.168.183 <none> 9090/TCP 4m49s prometheus-operated ClusterIP None <none> 9090/TCP 4m50s prometheus-operator ClusterIP None <none> 8443/TCP \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u9488\u5bf9 grafana\u3001alertmanager \u548c prometheus \u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a ClusterIP \u7684 Service\uff0c\u5f53\u7136\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u5916\u7f51\u8bbf\u95ee\u8fd9\u4e24\u4e2a\u670d\u52a1\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5bf9\u5e94\u7684 Ingress \u5bf9\u8c61\u6216\u8005\u4f7f\u7528 NodePort \u7c7b\u578b\u7684 Service\uff0c \u6211\u4eec\u8fd9\u91cc\u4e3a\u4e86\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 NodePort \u7c7b\u578b\u7684\u670d\u52a1\u5373\u53ef\uff0c\u7f16\u8f91 grafana \u3001 alertmanager-main \u548c prometheus-k8s \u8fd93\u4e2a Service\uff0c\u5c06\u670d\u52a1\u7c7b\u578b\u66f4\u6539\u4e3a NodePort: # \u5c06 type: ClusterIP \u66f4\u6539\u4e3a type: NodePort $ kubectl edit svc grafana -n monitoring $ kubectl edit svc alertmanager-main -n monitoring $ kubectl edit svc prometheus-k8s -n monitoring $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager-main NodePort 10.111.28.173 <none> 9093:30733/TCP 18m grafana NodePort 10.99.62.32 <none> 3000:32150/TCP 17m prometheus-k8s NodePort 10.111.105.155 <none> 9090:30206/TCP 17m ...... \u66f4\u6539\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684 NodePort \u53bb\u8bbf\u95ee\u5bf9\u5e94\u7684\u670d\u52a1\u4e86\uff0c\u6bd4\u5982\u67e5\u770b prometheus \u7684\u670d\u52a1\u53d1\u73b0\u9875\u9762\uff1a \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u76d1\u63a7\u4e0a\u4e86\u5f88\u591a\u6307\u6807\u6570\u636e\u4e86\uff0c\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u5230 Prometheus \u662f\u4e24\u4e2a\u526f\u672c\uff0c\u6211\u4eec\u8fd9\u91cc\u901a\u8fc7 Service \u53bb\u8bbf\u95ee\uff0c\u6309\u6b63\u5e38\u6765\u8bf4\u8bf7\u6c42\u662f\u4f1a\u53bb\u8f6e\u8be2\u8bbf\u95ee\u540e\u7aef\u7684\u4e24\u4e2a Prometheus \u5b9e\u4f8b\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd9\u91cc\u8bbf\u95ee\u7684\u65f6\u5019\u59cb\u7ec8\u662f\u8def\u7531\u5230\u540e\u7aef\u7684\u4e00\u4e2a\u5b9e\u4f8b\u4e0a\u53bb\uff0c \u56e0\u4e3a\u8fd9\u91cc\u7684 Service \u5728\u521b\u5efa\u7684\u65f6\u5019\u6dfb\u52a0\u4e86 sessionAffinity: ClientIP \u8fd9\u6837\u7684\u5c5e\u6027\uff0c\u4f1a\u6839\u636e ClientIP \u6765\u505a session \u4eb2\u548c\u6027 \uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u62c5\u5fc3\u8bf7\u6c42\u4f1a\u5230\u4e0d\u540c\u7684\u526f\u672c\u4e0a\u53bb\uff1a apiVersion: v1 kind: Service metadata: labels: prometheus: k8s name: prometheus-k8s namespace: monitoring spec: ports: - name: web port: 9090 targetPort: web selector: app: prometheus prometheus: k8s sessionAffinity: ClientIP \u4e3a\u4ec0\u4e48\u4f1a\u62c5\u5fc3\u8bf7\u6c42\u4f1a\u5230\u4e0d\u540c\u7684\u526f\u672c\u4e0a\u53bb\u5462\uff1f\u6b63\u5e38\u591a\u526f\u672c\u5e94\u8be5\u662f\u770b\u6210\u9ad8\u53ef\u7528\u7684\u5e38\u7528\u65b9\u6848\uff0c\u7406\u8bba\u4e0a\u6765\u8bf4\u4e0d\u540c\u526f\u672c\u672c\u5730\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f Prometheus \u7684\u4e3b\u52a8 Pull \u62c9\u53d6\u76d1\u63a7\u6307\u6807\u7684\u65b9\u5f0f\uff0c\u7531\u4e8e\u6293\u53d6\u65f6\u95f4\u4e0d\u80fd\u5b8c\u5168\u4e00\u81f4\uff0c\u5373\u4f7f\u4e00\u81f4\u4e5f\u4e0d\u4e00\u5b9a\u5c31\u80fd\u4fdd\u8bc1\u7f51\u7edc\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u6240\u4ee5\u6700\u7ec8\u4e0d\u540c\u526f\u672c\u4e0b\u5b58\u50a8\u7684\u6570\u636e\u5f88\u5927\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u914d\u7f6e\u4e86 session \u4eb2\u548c\u6027\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u5728\u8bbf\u95ee\u6570\u636e\u7684\u65f6\u5019\u59cb\u7ec8\u662f\u4e00\u81f4\u7684\u3002","title":"2 \u5b89\u88c5"},{"location":"chap4/45Prom-operator_2021/#3","text":"\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u76d1\u63a7\u6307\u6807\u5927\u90e8\u5206\u7684\u914d\u7f6e\u90fd\u662f\u6b63\u5e38\u7684\uff0c\u53ea\u6709\u4e24\u4e09\u4e2a\u6ca1\u6709\u7ba1\u7406\u5230\u5bf9\u5e94\u7684\u76d1\u63a7\u76ee\u6807\uff0c\u6bd4\u5982 kube-controller-manager \u548c kube-scheduler \u8fd9\u4e24\u4e2a\u7cfb\u7edf\u7ec4\u4ef6\u3002 \u8fd9\u5176\u5b9e\u5c31\u548c ServiceMonitor \u7684\u5b9a\u4e49\u6709\u5173\u7cfb\u4e86\uff0c\u6211\u4eec\u5148\u6765\u67e5\u770b\u4e0b kube-scheduler \u7ec4\u4ef6\u5bf9\u5e94\u7684 ServiceMonitor \u8d44\u6e90\u7684\u5b9a\u4e49\uff1a # manifests/prometheus-serviceMonitorKubeScheduler.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: labels: k8s-app: kube-scheduler name: kube-scheduler namespace: monitoring spec: endpoints: - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token # token \u6587\u4ef6 interval: 30s # \u6bcf30s\u83b7\u53d6\u4e00\u6b21\u4fe1\u606f port: https-metrics # \u5bf9\u5e94 service \u7684\u7aef\u53e3\u540d scheme: https # \u6ce8\u610f\u662f\u4f7f\u7528 https \u534f\u8bae tlsConfig: # \u8df3\u8fc7\u5b89\u5168\u6821\u9a8c insecureSkipVerify: true jobLabel: k8s-app # \u7528\u4e8e\u4ece\u4e2d\u68c0\u7d22\u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e namespaceSelector: # \u8868\u793a\u53bb\u5339\u914d\u67d0\u4e00\u547d\u540d\u7a7a\u95f4\u4e2d\u7684 Service\uff0c\u5982\u679c\u60f3\u4ece\u6240\u6709\u7684namespace\u4e2d\u5339\u914d\u7528any:true matchNames: - kube-system selector: # \u5339\u914d\u7684 Service \u7684 labels\uff0c\u5982\u679c\u4f7f\u7528 mathLabels\uff0c\u5219\u4e0b\u9762\u7684\u6240\u6709\u6807\u7b7e\u90fd\u5339\u914d\u65f6\u624d\u4f1a\u5339\u914d\u8be5 service\uff0c\u5982\u679c\u4f7f\u7528 matchExpressions\uff0c\u5219\u81f3\u5c11\u5339\u914d\u4e00\u4e2a\u6807\u7b7e\u7684 service \u90fd\u4f1a\u88ab\u9009\u62e9 matchLabels: k8s-app: kube-scheduler \u4e0a\u9762\u662f\u4e00\u4e2a\u5178\u578b\u7684 ServiceMonitor \u8d44\u6e90\u5bf9\u8c61\u7684\u58f0\u660e\u65b9\u5f0f\uff0c\u4e0a\u9762\u6211\u4eec\u901a\u8fc7 selector.matchLabels \u5728 kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5339\u914d\u5177\u6709 k8s-app=kube-scheduler \u8fd9\u6837\u7684 Service \uff0c\u4f46\u662f\u6211\u4eec\u7cfb\u7edf\u4e2d\u6839\u672c\u5c31\u6ca1\u6709\u5bf9\u5e94\u7684 Service\uff1a $ kubectl get svc -n kube-system -l k8s-app=kube-scheduler No resources found in kube-system namespace. \u6240\u4ee5\u6211\u4eec\u9700\u8981\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c\u624d\u80fd\u4e0e ServiceMonitor \u8fdb\u884c\u5173\u8054\uff1a # prometheus-kubeSchedulerService.yaml apiVersion: v1 kind: Service metadata: namespace: kube-system name: kube-scheduler labels: # \u5fc5\u987b\u548c\u4e0a\u9762\u7684 ServiceMonitor \u4e0b\u9762\u7684 matchLabels \u4fdd\u6301\u4e00\u81f4 k8s-app: kube-scheduler spec: selector: component: kube-scheduler ports: - name: https-metrics port: 10259 targetPort: 10259 # \u9700\u8981\u6ce8\u610f\u73b0\u5728\u7248\u672c\u9ed8\u8ba4\u7684\u5b89\u5168\u7aef\u53e3\u662f10259 \u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f\u4e0a\u9762 labels \u548c selector \u90e8\u5206\uff0clabels \u533a\u57df\u7684\u914d\u7f6e\u5fc5\u987b\u548c\u6211\u4eec\u4e0a\u9762\u7684 ServiceMonitor \u5bf9\u8c61\u4e2d\u7684 selector \u4fdd\u6301\u4e00\u81f4\uff0c selector \u4e0b\u9762\u914d\u7f6e\u7684\u662f component=kube-scheduler \uff0c\u4e3a\u4ec0\u4e48\u4f1a\u662f\u8fd9\u4e2a label \u6807\u7b7e\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u53bb describe \u4e0b kube-scheduler \u8fd9\u4e2a Pod \uff1a $ kubectl describe pod kube-scheduler-master1 -n kube-system Name: kube-scheduler-master1 Namespace: kube-system Priority: 2000001000 Priority Class Name: system-node-critical Node: master1/192.168.31.75 Start Time: Mon, 29 Mar 2021 18:15:46 +0800 Labels: component=kube-scheduler tier=control-plane ...... \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a Pod \u5177\u6709 component=kube-scheduler \u548c tier=control-plane \u8fd9\u4e24\u4e2a\u6807\u7b7e\uff0c\u800c\u524d\u9762\u8fd9\u4e2a\u6807\u7b7e\u5177\u6709\u66f4\u552f\u4e00\u7684\u7279\u6027\uff0c\u6240\u4ee5\u4f7f\u7528\u524d\u9762\u8fd9\u4e2a\u6807\u7b7e\u8f83\u597d\uff0c\u8fd9\u6837\u4e0a\u9762\u521b\u5efa\u7684 Service \u5c31\u53ef\u4ee5\u548c\u6211\u4eec\u7684 Pod \u8fdb\u884c\u5173\u8054\u4e86 \uff0c\u76f4\u63a5\u521b\u5efa\u5373\u53ef\uff1a $ kubectl apply -f prometheus-kubeSchedulerService.yaml $ kubectl get svc -n kube-system -l k8s-app=kube-scheduler NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kube-scheduler ClusterIP 10.100.66.246 <none> 10251/TCP 2m2s \u521b\u5efa\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u5c0f\u4f1a\u513f\u540e\u53bb Prometheus \u9875\u9762\u4e0a\u67e5\u770b targets \u4e0b\u9762 kube-scheduler \u5df2\u7ecf\u6709\u91c7\u96c6\u7684\u76ee\u6807\u4e86\uff0c \u4f46\u662f\u62a5\u4e86 connect: connection refused \u8fd9\u6837\u7684\u9519\u8bef \uff1a \u8fd9\u662f\u56e0\u4e3a kube-scheduler \u542f\u52a8\u7684\u65f6\u5019\u9ed8\u8ba4\u7ed1\u5b9a\u7684\u662f 127.0.0.1 \u5730\u5740\uff0c\u6240\u4ee5\u8981\u901a\u8fc7 IP \u5730\u5740\u53bb\u8bbf\u95ee\u5c31\u88ab\u62d2\u7edd\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b master \u8282\u70b9\u4e0a\u7684\u9759\u6001 Pod \u8d44\u6e90\u6e05\u5355\u6765\u786e\u8ba4\u8fd9\u4e00\u70b9\uff1a # /etc/kubernetes/manifests/kube-scheduler.yaml apiVersion: v1 kind: Pod metadata: creationTimestamp: null labels: component: kube-scheduler tier: control-plane name: kube-scheduler namespace: kube-system spec: containers: - command: - kube-scheduler - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf - --bind-address=127.0.0.1 # \u7ed1\u5b9a\u4e86127.0.0.1 - --kubeconfig=/etc/kubernetes/scheduler.conf - --leader-elect=true - --port=0 # \u5982\u679c\u4e3a0\uff0c\u5219\u4e0d\u63d0\u4f9b HTTP \u670d\u52a1\uff0c--secure-port \u9ed8\u8ba4\u503c\uff1a10259\uff0c\u901a\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u4e3a HTTPS \u670d\u52a1\u7684\u7aef\u53e3\uff0c\u5982\u679c\u4e3a 0\uff0c\u5219\u4e0d\u63d0\u4f9b HTTPS\u3002 ...... \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u4e0a\u9762\u7684 --bind-address=127.0.0.1 \u66f4\u6539\u4e3a --bind-address=0.0.0.0 \u5373\u53ef\uff0c\u66f4\u6539\u540e kube-scheduler \u4f1a\u81ea\u52a8\u91cd\u542f\uff0c\u91cd\u542f\u5b8c\u6210\u540e\u518d\u53bb\u67e5\u770b Prometheus \u4e0a\u9762\u7684\u91c7\u96c6\u76ee\u6807\u5c31\u6b63\u5e38\u4e86\u3002 \u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u5f0f\u6765\u4fee\u590d\u4e0b kube-controller-manager \u7ec4\u4ef6\u7684\u76d1\u63a7\uff0c\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 Service \u5bf9\u8c61\uff0c\u53ea\u662f\u7aef\u53e3\u6539\u6210 10257 \uff1a # prometheus-kubeControllerManagerService.yaml apiVersion: v1 kind: Service metadata: namespace: kube-system name: kube-controller-manager labels: k8s-app: kube-controller-manager spec: selector: component: kube-controller-manager ports: - name: https-metrics port: 10257 targetPort: 10257 # controller-manager \u7684\u5b89\u5168\u7aef\u53e3\u4e3a10257 \u7136\u540e\u5c06 kube-controller-manager \u9759\u6001 Pod \u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u4e2d\u7684\u53c2\u6570 --bind-address=127.0.0.1 \u66f4\u6539\u4e3a --bind-address=0.0.0.0 \u3002 \u4e0a\u9762\u7684\u76d1\u63a7\u6570\u636e\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u67e5\u770b\u4e0b Grafana \u4e0b\u9762\u7684\u76d1\u63a7\u56fe\u8868\u4e86\uff0c\u540c\u6837\u4f7f\u7528\u4e0a\u9762\u7684 NodePort \u8bbf\u95ee\u5373\u53ef\uff0c\u7b2c\u4e00\u6b21\u767b\u5f55\u4f7f\u7528 admin:admin \u767b\u5f55\u5373\u53ef\uff0c\u8fdb\u5165\u9996\u9875\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5176\u5b9e Grafana \u5df2\u7ecf\u6709\u5f88\u591a\u914d\u7f6e\u597d\u7684\u76d1\u63a7\u56fe\u8868\u4e86\u3002 \u6211\u4eec\u53ef\u4ee5\u968f\u4fbf\u9009\u62e9\u4e00\u4e2a Dashboard \u67e5\u770b\u76d1\u63a7\u56fe\u8868\u4fe1\u606f\u3002 \u5982\u679c\u8981\u6e05\u7406 Prometheus-Operator\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u5373\u53ef\uff1a $ kubectl delete -f manifests/ $ kubectl delete -f manifests/setup/","title":"3 \u914d\u7f6e"},{"location":"chap4/46Prometheus_traefik/","text":"\u7b2c\u5341\u8282 Traefik\u4e4b\u4f7f\u7528Prometheus Operator\u8fdb\u884c\u76d1\u63a7\u62a5\u8b662021 \u672c\u6587\u6211\u4eec\u5c06\u63a2\u8ba8\u5982\u4f55\u4f7f\u7528 Prometheus \u548c Grafana \u4ece Traefik \u63d0\u4f9b\u7684 metrics \u6307\u6807\u4e2d\u8fdb\u884c\u76d1\u63a7\u62a5\u8b66\u3002 \u5b89\u88c5 \u9996\u5148\u4f60\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u8bbf\u95ee\u7684 Kubernetes \u96c6\u7fa4\u3002 1 \u90e8\u7f72 Traefik \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u66f4\u52a0\u7b80\u5355\u7684 Helm \u65b9\u5f0f\u6765\u5b89\u88c5\u90e8\u7f72 Traefik\u3002\u9996\u5148\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5c06 Traefik \u6dfb\u52a0\u5230 Helm \u7684\u4ed3\u5e93\u4e2d\uff1a $ helm repo add traefik https://helm.traefik.io/traefik $ helm repo update \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728 kube-system \u547d\u540d\u7a7a\u95f4\u4e0b\u6765\u90e8\u7f72\u6700\u65b0\u7248\u672c\u7684 Traefik \uff0c\u5728\u6211\u4eec\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u786e\u4fdd\u5728\u96c6\u7fa4\u4e2d\u542f\u7528\u4e86 Prometheus \u6307\u6807\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ed9 Helm \u4f20\u9012 --metrics.prometheus=true \u6807\u5fd7\u6765\u5b9e\u73b0\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u6240\u6709\u914d\u7f6e\u90fd\u653e\u7f6e\u5230\u4e0b\u9762\u7684 traefik-values.yaml \u6587\u4ef6\u4e2d\uff1a traefik-values.yaml # \u7b80\u5355\u4f7f\u7528 hostPort \u6a21\u5f0f ports: web: port: 8000 hostPort: 80 websecure: port: 8443 hostPort: 443 service: enabled: false # \u4e0d\u66b4\u9732 dashboard dashboard: # Enable the dashboard on Traefik enable: true ingressRoute: false # ingressRoute: # dashboard: # enabled: false # \u5f00\u542f prometheus \u76d1\u63a7\u6307\u6807 additionalArguments: - --api.debug=true - --metrics.prometheus=true # kubeadm \u5b89\u88c5\u7684\u96c6\u7fa4\u9ed8\u8ba4\u60c5\u51b5\u4e0bmaster\u662f\u6709\u6c61\u70b9\uff0c\u9700\u8981\u5bb9\u5fcd\u8fd9\u4e2a\u6c61\u70b9\u624d\u53ef\u4ee5\u90e8\u7f72 # \u8fd9\u91cc\u6211\u4eec\u5c06 traefik \u56fa\u5b9a\u5728 master \u8282\u70b9 tolerations: - key: \"node-role.kubernetes.io/master\" operator: \"Equal\" effect: \"NoSchedule\" nodeSelector: kubernetes.io/hostname: \"docker-desktop\" https://github.com/traefik/traefik-helm-chart/blob/43d63f418836d7aaac03cfca5b54f4287c8acf9c/traefik/values.yaml \u76f4\u63a5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u547d\u4ee4\u5b89\u88c5\uff1a $ helm install traefik traefik/traefik -n kube-system -f traefik-values.yaml NAME: traefik LAST DEPLOYED: Tue Apr 6 14:37:54 2021 NAMESPACE: kube-system STATUS: deployed REVISION: 1 TEST SUITE: None \u7531\u4e8e\u6211\u4eec\u9ed8\u8ba4\u6ca1\u6709\u4e3a Traefik \u7684 Dashboard \u521b\u5efa IngressRoute \u5bf9\u8c61\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 port-forward \u6765\u4e34\u65f6\u8bbf\u95ee\u5373\u53ef\uff0c\u5f53\u7136\u9996\u5148\u9700\u8981\u4e3a Traefik Dashboard \u521b\u5efa\u4e00\u4e2a Service\uff1a traefik-dashboard-service.yaml # traefik-dashboard-service.yaml apiVersion: v1 kind: Service metadata: name: traefik-dashboard namespace: kube-system labels: app.kubernetes.io/instance: traefik app.kubernetes.io/name: traefik-dashboard spec: type: ClusterIP ports: - name: traefik port: 9000 targetPort: traefik protocol: TCP selector: app.kubernetes.io/instance: traefik app.kubernetes.io/name: traefik $ kubectl get all -n kube-system | grep traefik pod/traefik-79765f8cc6-rjqtc 1/1 Running 0 144m service/traefik-dashboard ClusterIP 10.99.59.98 <none> 9000/TCP 169m deployment.apps/traefik 1/1 1 1 144m replicaset.apps/traefik-79765f8cc6 1 1 1 144m \u76f4\u63a5\u521b\u5efa\uff0c\u7136\u540e\u4f7f\u7528\u7aef\u53e3\u8f6c\u53d1\u6765\u8bbf\u95ee\uff1a $ kubectl apply -f traefik-dashboard-service.yaml $ kubectl port-forward service/traefik-dashboard 9000:9000 -n kube-system Forwarding from 127.0.0.1:9000 -> 9000 Forwarding from [::1]:9000 -> 9000 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u5668 http://127.0.0.1:9000/dashboard/ \uff08 \u6ce8\u610f URL \u4e2d\u7684\u5c3e\u90e8\u659c\u6760\uff0c\u8fd9\u662f\u5fc5\u987b\u7684 \uff09\u8bbf\u95ee Traefik Dashboard \u4e86\uff0c\u73b0\u5728\u5e94\u8be5\u53ef\u4ee5\u770b\u5230\u5728\u4eea\u8868\u677f\u7684 Features \u90e8\u5206\u542f\u7528\u4e86 Prometheus \u6307\u6807\u3002 \u6b64\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u8bbf\u95ee http://127.0.0.1:9000/metrics \u7aef\u70b9\u6765\u67e5\u770b Traefik \u63d0\u4f9b\u7684\u4e00\u4e9b metrics \u6307\u6807\uff1a \u90e8\u7f72 Prometheus Stack helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm repo update \u4e0a\u8ff0\u8d44\u6e90\u5e93\u63d0\u4f9b\u4e86\u8bb8\u591a Chart\uff0c\u8981\u67e5\u770b\u5b8c\u6574\u7684\u5217\u8868\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u641c\u7d22\u547d\u4ee4\uff1a $ helm search repo prometheus-community NAME CHART VERSION APP VERSION DESCRIPTION prometheus-community/alertmanager 0.8.0 v0.21.0 The Alertmanager handles alerts sent by client ... prometheus-community/kube-prometheus-stack 14.5.0 0.46.0 kube-prometheus-stack collects Kubernetes manif... prometheus-community/prometheus 13.6.0 2.24.0 Prometheus is a monitoring system and time seri... prometheus-community/prometheus-adapter 2.12.1 v0.8.3 A Helm chart for k8s prometheus adapter prometheus-community/prometheus-blackbox-exporter 4.10.2 0.18.0 Prometheus Blackbox Exporter prometheus-community/prometheus-cloudwatch-expo... 0.14.1 0.10.0 A Helm chart for prometheus cloudwatch-exporter prometheus-community/prometheus-consul-exporter 0.4.0 0.4.0 A Helm chart for the Prometheus Consul Exporter prometheus-community/prometheus-couchdb-exporter 0.2.0 1.0 A Helm chart to export the metrics from couchdb... prometheus-community/prometheus-druid-exporter 0.9.0 v0.8.0 Druid exporter to monitor druid metrics with Pr... prometheus-community/prometheus-elasticsearch-e... 4.4.0 1.1.0 Elasticsearch stats exporter for Prometheus prometheus-community/prometheus-kafka-exporter 1.0.0 v1.2.0 A Helm chart to export the metrics from Kafka i... prometheus-community/prometheus-mongodb-exporter 2.8.1 v0.10.0 A Prometheus exporter for MongoDB metrics prometheus-community/prometheus-mysql-exporter 1.1.0 v0.12.1 A Helm chart for prometheus mysql exporter with... prometheus-community/prometheus-nats-exporter 2.6.0 0.7.0 A Helm chart for prometheus-nats-exporter prometheus-community/prometheus-node-exporter 1.16.2 1.1.2 A Helm chart for prometheus node-exporter prometheus-community/prometheus-operator 9.3.2 0.38.1 DEPRECATED - This chart will be renamed. See ht... prometheus-community/prometheus-pingdom-exporter 2.3.2 20190610-1 A Helm chart for Prometheus Pingdom Exporter \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5b89\u88c5\u7684\u662f kube-prometheus-stack \u8fd9\u4e2a Chart\uff0c\u5b83\u4f1a\u90e8\u7f72\u6240\u9700\u8981\u7684\u76f8\u5173\u7ec4\u4ef6\uff1a $ helm install kube-prom prometheus-community/kube-prometheus-stack -n monitoring Promethuse-operator 2021 \u5b89\u88c5 2 \u914d\u7f6e Traefik \u76d1\u63a7 Prometheus Operator \u63d0\u4f9b\u4e86 ServiceMonitor \u8fd9\u4e2a CRD \u6765\u914d\u7f6e\u76d1\u63a7\u6307\u6807\u7684\u91c7\u96c6\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u8c61\uff1a traefik-service-monitor.yaml # traefik-service-monitor.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: traefik namespace: default labels: app: traefik release: prometheus-stack spec: jobLabel: traefik-metrics selector: matchLabels: app.kubernetes.io/instance: traefik app.kubernetes.io/name: traefik-dashboard namespaceSelector: matchNames: - kube-system endpoints: - port: traefik path: /metrics \u6839\u636e\u4e0a\u9762\u7684\u914d\u7f6e\uff0c Prometheus \u5c06\u83b7\u53d6 traefik-dashboard \u670d\u52a1\u7684 /metrics \u7aef\u70b9\u3002 \u4e3b\u8981\u6ce8\u610f\u7684\u662f traefik-dashboard \u670d\u52a1\u662f\u5728 kube-system \u547d\u540d\u7a7a\u95f4\u4e2d\u521b\u5efa\u7684\uff0c\u800c ServiceMonitor \u5219\u90e8\u7f72\u5728\u9ed8\u8ba4\u7684 default \u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u6240\u4ee5\u8fd9\u91cc\u9762\u6211\u4eec\u4f7f\u7528\u4e86 namespaceSelector \u8fdb\u884c\u547d\u540d\u7a7a\u95f4\u5339\u914d\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u6765\u9a8c\u8bc1\u4e00\u4e0b Prometheus \u662f\u5426\u5df2\u7ecf\u5f00\u59cb\u6293\u53d6 Traefik \u7684\u6307\u6807\u4e86\u3002 3 \u914d\u7f6e Traefik \u62a5\u8b66 \u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\uff0c\u5f53\u6761\u4ef6\u5339\u914d\u7684\u65f6\u5019\u4f1a\u89e6\u53d1\u62a5\u8b66\uff0c\u540c\u6837 Prometheus Operator \u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a PrometheusRule \u7684 CRD \u5bf9\u8c61\u6765\u914d\u7f6e\u62a5\u8b66\u89c4\u5219 \uff1a traefik-rules.yaml # traefik-rules.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: annotations: meta.helm.sh/release-name: kube-prom meta.helm.sh/release-namespace: monitoring labels: app: kube-prometheus-stack release: kube-prom name: traefik-alert-rules namespace: monitoring spec: groups: - name: Traefik rules: - alert: TooManyRequest expr: avg(traefik_entrypoint_open_connections{job=\"traefik-dashboard\",namespace=\"kube-system\"}) > 5 for: 1m labels: severity: critical \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u89c4\u5219\uff1a\u5982\u679c1\u5206\u949f\u5185\u6709\u8d85\u8fc75\u4e2a open connections \u673a\u4f1a\u89e6\u53d1\u4e00\u4e2a TooManyRequest \u62a5\u8b66\uff0c\u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a\u5bf9\u8c61\u5373\u53ef\uff1a $ kubectl apply -f traefik-rules.yaml \u6ce8\u610f\uff1a PrometheusRule\u7684annotations&labels \u53ef\u4ee5\u501f\u9274\u5176\u5b83\u5df2\u7ecf\u8fd0\u884c\u7684rule kubectl get PrometheusRule kube-prom-kube-prometheus-prometheus-operator -n monitoring -oyaml annotations: meta.helm.sh/release-name: kube-prom meta.helm.sh/release-namespace: monitoring labels: app: kube-prometheus-stack release: kube-prom name: traefik-alert-rules namespace: monitoring \u67e5\u770bPrometheusRule\u662f\u5426\u5b89\u88c5\u6210\u529f kubectl exec prometheus-kube-prom-kube-prometheus-prometheus-0 -n monitoring -it sh cd /etc/prometheus/rules/prometheus-kube-prom-kube-prometheus-prometheus-rulefiles-0 $ ls -la ... monitoring-traefik-alert-rules.yaml \u521b\u5efa\u5b8c\u6210\u540e\u6b63\u5e38\u5728 Promethues \u7684 Dashboard \u4e0b\u7684 Status > Rules \u9875\u9762\u5c31\u53ef\u4ee5\u770b\u5230\u5bf9\u5e94\u7684\u62a5\u8b66\u89c4\u5219\uff1a 4 Grafana \u914d\u7f6e \u524d\u9762\u4f7f\u7528 kube-prometheus-stack \u8fd9\u4e2a Helm Chart \u90e8\u7f72\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u90e8\u7f72\u4e0a\u4e86 Grafana\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u4e3a Traefik \u7684\u76d1\u63a7\u6307\u6807\u914d\u7f6e\u4e00\u4e2a Dashboard\uff0c\u540c\u6837\u9996\u5148\u6211\u4eec\u4f7f\u7528\u7aef\u53e3\u8f6c\u53d1\u7684\u65b9\u5f0f\u6765\u8bbf\u95ee Grafana\uff1a kubectl port-forward svc/kube-prom-grafana 10080:80 -n monitoring \u7136\u540e\u8bbf\u95ee Grafana GUI\uff08http://localhost:10080 \uff09\u65f6\uff0c\u5b83\u4f1a\u8981\u6c42\u8f93\u5165\u767b\u5f55\u540d\u548c\u5bc6\u7801\uff0c \u9ed8\u8ba4\u7684\u767b\u5f55\u7528\u6237\u540d\u662f admin \uff0c\u5bc6\u7801\u662f prom-operator \uff0c\u5bc6\u7801\u53ef\u4ee5\u4ece\u540d\u4e3a prometheus-operator-grafana \u7684 Kubernetes Secret \u5bf9\u8c61\u4e2d\u83b7\u53d6\u3002 \u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u4e3a Traefik \u81ea\u5b9a\u4e49\u4e00\u4e2a Dashboard\uff0c\u4e5f\u53ef\u4ee5\u4ece Grafana \u7684\u5b98\u65b9\u793e\u533a\u4e2d\u5bfc\u5165\u4e00\u4e2a\u5408\u9002\u7684\u5373\u53ef\uff0c\u70b9\u51fb\u5de6\u4fa7\u5bfc\u822a\u680f\u4e0a\u7684\u56db\u65b9\u5f62\u56fe\u6807\uff0c\u5bfc\u822a\u5230 Dashboards > Manage\uff0c\u5373\u53ef\u6dfb\u52a0\u4eea\u8868\u76d8\u3002 \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 Import \u6309\u94ae\uff0c\u8f93\u5165 11462 \u4f5c\u4e3a Dashboard \u7684 ID\uff0c\u5bf9\u5e94\u7528\u6237 timoreymann \u8d21\u732e\u7684 Traefik 2 \u4eea\u8868\u76d8 \u3002 \u70b9\u51fb Load \u540e\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u5bfc\u5165\u7684\u4eea\u8868\u76d8\u7684\u76f8\u5173\u4fe1\u606f\u3002 \u5728\u6700\u4e0b\u9762\u6709\u4e00\u4e2a\u4e0b\u62c9\u83dc\u5355\uff0c\u9009\u62e9 Prometheus \u6570\u636e\u6e90\uff0c\u7136\u540e\u70b9\u51fb Import\uff0c\u5373\u53ef\u751f\u6210\u5982\u4e0b\u6240\u793a\u7684 Dashboard\u3002 5 \u6d4b\u8bd5 \u73b0\u5728\uff0cTraefik \u5df2\u7ecf\u5f00\u59cb\u5de5\u4f5c\u4e86\uff0c\u5e76\u4e14\u6307\u6807\u4e5f\u88ab Prometheus \u548c Grafana \u83b7\u53d6\u5230\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6765\u6d4b\u8bd5\u3002\u8fd9\u91cc\u6211\u4eec\u90e8\u7f72 HTTPBin \u670d\u52a1\uff0c\u5b83\u63d0\u4f9b\u4e86\u8bb8\u591a\u7aef\u70b9\uff0c\u53ef\u7528\u4e8e\u6a21\u62df\u4e0d\u540c\u7c7b\u578b\u7684\u7528\u6237\u6d41\u91cf\u3002\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # httpbin.yaml apiVersion: apps/v1 kind: Deployment metadata: name: httpbin labels: app: httpbin spec: replicas: 1 selector: matchLabels: app: httpbin template: metadata: labels: app: httpbin spec: containers: - image: kennethreitz/httpbin name: httpbin ports: - containerPort: 80 --- apiVersion: v1 kind: Service metadata: name: httpbin spec: ports: - name: http port: 8000 targetPort: 80 selector: app: httpbin --- apiVersion: traefik.containo.us/v1alpha1 kind: IngressRoute metadata: name: httpbin spec: entryPoints: - web routes: - match: Host(`httpbin.local`) kind: Rule services: - name: httpbin port: 8000 ``` \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\uff1a $ kubectl apply -f httpbin.yaml deployment.apps/httpbin created service/httpbin created ingressroute.traefik.containo.us/httpbin created httpbin \u8def\u7531\u4f1a\u5339\u914d `httpbin.local` \u7684\u4e3b\u673a\u540d\uff0c\u7136\u540e\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9 httpbin Service\uff1a $ curl -I http://192.168.65.4 -H \"host:httpbin.local\" HTTP/1.1 200 OK Access-Control-Allow-Credentials: true Access-Control-Allow-Origin: * Content-Length: 9593 Content-Type: text/html; charset=utf-8 Date: Mon, 05 Apr 2021 05:43:16 GMT Server: gunicorn/19.9.0 \u6211\u4eec\u8fd9\u91cc\u90e8\u7f72\u7684 Traefik \u4f7f\u7528\u7684\u662f hostPort \u6a21\u5f0f\uff0c\u56fa\u5b9a\u5230 master \u8282\u70b9\u4e0a\u9762\u7684\uff0c\u8fd9\u91cc\u7684 IP \u5730\u5740 192.168.65.4 \u5c31\u662f master \u8282\u70b9\u7684 IP \u5730\u5740\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 ab \u6765\u8bbf\u95ee HTTPBin \u670d\u52a1\u6a21\u62df\u4e00\u4e9b\u6d41\u91cf\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u4f1a\u4ea7\u751f\u5bf9\u5e94\u7684\u6307\u6807\uff0c\u6267\u884c\u4ee5\u4e0b\u811a\u672c\uff1a $ ab -c 5 -n 10000 -m PATCH -H \"host:httpbin.local\" -H \"accept: application/json\" http://192.168.31.75/patch $ ab -c 5 -n 10000 -m GET -H \"host:httpbin.local\" -H \"accept: application/json\" http://192.168.31.75/get $ ab -c 5 -n 10000 -m POST -H \"host:httpbin.local\" -H \"accept: application/json\" http://192.168.31.75/post \u6b63\u5e38\u4e00\u6bb5\u65f6\u95f4\u540e\u518d\u53bb\u67e5\u770b Grafana \u7684 Dashboard \u53ef\u4ee5\u770b\u5230\u663e\u793a\u4e86\u66f4\u591a\u7684\u4fe1\u606f\uff1a \u5305\u62ec\uff1a\u6b63\u5e38\u8fd0\u884c\u7684\u65f6\u95f4\u3001\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u3001\u8bf7\u6c42\u603b\u6570\u3001\u57fa\u4e8e HTTP \u65b9\u6cd5\u548c\u670d\u52a1\u7684\u8bf7\u6c42\u8ba1\u6570\u7b49\u3002 ![Alt Image Text](../images/46_10.png \"Body image\") \u6700\u540e\uff0c\u5f53\u6211\u4eec\u6d4b\u8bd5\u5e94\u7528\u6d41\u91cf\u65f6\uff0c`Prometheus` \u53ef\u80fd\u4f1a\u89e6\u53d1\u62a5\u8b66\uff0c\u4e4b\u524d\u521b\u5efa\u7684 `TooManyRequest` \u62a5\u8b66\u5c06\u663e\u793a\u5728 Alertmanager \u4eea\u8868\u677f\u4e0a\uff0c\u7136\u540e\u53ef\u4ee5\u81ea\u5df1\u6839\u636e\u9700\u8981\u914d\u7f6e\u63a5\u6536\u62a5\u8b66\u4fe1\u606f\u7684 Receiver \u5373\u53ef\u3002 $ kubectl port-forward service/prometheus-stack-kube-prom-alertmanager 9093:9093 Forwarding from 127.0.0.1:9093 -> 9093 ``` 6 \u603b\u7ed3 \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u5c06 Traefik \u8fde\u63a5\u5230 Prometheus \u548c Grafana \u4ee5\u4ece Traefik \u6307\u6807\u4e2d\u521b\u5efa\u53ef\u89c6\u5316\u7684\u8fc7\u7a0b\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u5f53\u719f\u6089\u8fd9\u4e9b\u5de5\u5177\u540e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u6c42\u521b\u5efa\u4e00\u4e9b Dashboard\uff0c\u66b4\u9732\u4f60\u7684\u73af\u5883\u7684\u4e00\u4e9b\u5173\u952e\u6570\u636e\u3002","title":"\u7b2c\u5341\u8282 Traefik\u4e4b\u4f7f\u7528Prometheus Operator\u8fdb\u884c\u76d1\u63a7\u62a5\u8b662021"},{"location":"chap4/46Prometheus_traefik/#traefikprometheus-operator2021","text":"\u672c\u6587\u6211\u4eec\u5c06\u63a2\u8ba8\u5982\u4f55\u4f7f\u7528 Prometheus \u548c Grafana \u4ece Traefik \u63d0\u4f9b\u7684 metrics \u6307\u6807\u4e2d\u8fdb\u884c\u76d1\u63a7\u62a5\u8b66\u3002","title":"\u7b2c\u5341\u8282 Traefik\u4e4b\u4f7f\u7528Prometheus Operator\u8fdb\u884c\u76d1\u63a7\u62a5\u8b662021"},{"location":"chap4/46Prometheus_traefik/#_1","text":"\u9996\u5148\u4f60\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u8bbf\u95ee\u7684 Kubernetes \u96c6\u7fa4\u3002","title":"\u5b89\u88c5"},{"location":"chap4/46Prometheus_traefik/#1-traefik","text":"\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u66f4\u52a0\u7b80\u5355\u7684 Helm \u65b9\u5f0f\u6765\u5b89\u88c5\u90e8\u7f72 Traefik\u3002\u9996\u5148\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5c06 Traefik \u6dfb\u52a0\u5230 Helm \u7684\u4ed3\u5e93\u4e2d\uff1a $ helm repo add traefik https://helm.traefik.io/traefik $ helm repo update \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728 kube-system \u547d\u540d\u7a7a\u95f4\u4e0b\u6765\u90e8\u7f72\u6700\u65b0\u7248\u672c\u7684 Traefik \uff0c\u5728\u6211\u4eec\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u786e\u4fdd\u5728\u96c6\u7fa4\u4e2d\u542f\u7528\u4e86 Prometheus \u6307\u6807\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ed9 Helm \u4f20\u9012 --metrics.prometheus=true \u6807\u5fd7\u6765\u5b9e\u73b0\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u6240\u6709\u914d\u7f6e\u90fd\u653e\u7f6e\u5230\u4e0b\u9762\u7684 traefik-values.yaml \u6587\u4ef6\u4e2d\uff1a traefik-values.yaml # \u7b80\u5355\u4f7f\u7528 hostPort \u6a21\u5f0f ports: web: port: 8000 hostPort: 80 websecure: port: 8443 hostPort: 443 service: enabled: false # \u4e0d\u66b4\u9732 dashboard dashboard: # Enable the dashboard on Traefik enable: true ingressRoute: false # ingressRoute: # dashboard: # enabled: false # \u5f00\u542f prometheus \u76d1\u63a7\u6307\u6807 additionalArguments: - --api.debug=true - --metrics.prometheus=true # kubeadm \u5b89\u88c5\u7684\u96c6\u7fa4\u9ed8\u8ba4\u60c5\u51b5\u4e0bmaster\u662f\u6709\u6c61\u70b9\uff0c\u9700\u8981\u5bb9\u5fcd\u8fd9\u4e2a\u6c61\u70b9\u624d\u53ef\u4ee5\u90e8\u7f72 # \u8fd9\u91cc\u6211\u4eec\u5c06 traefik \u56fa\u5b9a\u5728 master \u8282\u70b9 tolerations: - key: \"node-role.kubernetes.io/master\" operator: \"Equal\" effect: \"NoSchedule\" nodeSelector: kubernetes.io/hostname: \"docker-desktop\" https://github.com/traefik/traefik-helm-chart/blob/43d63f418836d7aaac03cfca5b54f4287c8acf9c/traefik/values.yaml \u76f4\u63a5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u547d\u4ee4\u5b89\u88c5\uff1a $ helm install traefik traefik/traefik -n kube-system -f traefik-values.yaml NAME: traefik LAST DEPLOYED: Tue Apr 6 14:37:54 2021 NAMESPACE: kube-system STATUS: deployed REVISION: 1 TEST SUITE: None \u7531\u4e8e\u6211\u4eec\u9ed8\u8ba4\u6ca1\u6709\u4e3a Traefik \u7684 Dashboard \u521b\u5efa IngressRoute \u5bf9\u8c61\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 port-forward \u6765\u4e34\u65f6\u8bbf\u95ee\u5373\u53ef\uff0c\u5f53\u7136\u9996\u5148\u9700\u8981\u4e3a Traefik Dashboard \u521b\u5efa\u4e00\u4e2a Service\uff1a traefik-dashboard-service.yaml # traefik-dashboard-service.yaml apiVersion: v1 kind: Service metadata: name: traefik-dashboard namespace: kube-system labels: app.kubernetes.io/instance: traefik app.kubernetes.io/name: traefik-dashboard spec: type: ClusterIP ports: - name: traefik port: 9000 targetPort: traefik protocol: TCP selector: app.kubernetes.io/instance: traefik app.kubernetes.io/name: traefik $ kubectl get all -n kube-system | grep traefik pod/traefik-79765f8cc6-rjqtc 1/1 Running 0 144m service/traefik-dashboard ClusterIP 10.99.59.98 <none> 9000/TCP 169m deployment.apps/traefik 1/1 1 1 144m replicaset.apps/traefik-79765f8cc6 1 1 1 144m \u76f4\u63a5\u521b\u5efa\uff0c\u7136\u540e\u4f7f\u7528\u7aef\u53e3\u8f6c\u53d1\u6765\u8bbf\u95ee\uff1a $ kubectl apply -f traefik-dashboard-service.yaml $ kubectl port-forward service/traefik-dashboard 9000:9000 -n kube-system Forwarding from 127.0.0.1:9000 -> 9000 Forwarding from [::1]:9000 -> 9000 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u5668 http://127.0.0.1:9000/dashboard/ \uff08 \u6ce8\u610f URL \u4e2d\u7684\u5c3e\u90e8\u659c\u6760\uff0c\u8fd9\u662f\u5fc5\u987b\u7684 \uff09\u8bbf\u95ee Traefik Dashboard \u4e86\uff0c\u73b0\u5728\u5e94\u8be5\u53ef\u4ee5\u770b\u5230\u5728\u4eea\u8868\u677f\u7684 Features \u90e8\u5206\u542f\u7528\u4e86 Prometheus \u6307\u6807\u3002 \u6b64\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u8bbf\u95ee http://127.0.0.1:9000/metrics \u7aef\u70b9\u6765\u67e5\u770b Traefik \u63d0\u4f9b\u7684\u4e00\u4e9b metrics \u6307\u6807\uff1a","title":"1 \u90e8\u7f72 Traefik"},{"location":"chap4/46Prometheus_traefik/#prometheus-stack","text":"helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm repo update \u4e0a\u8ff0\u8d44\u6e90\u5e93\u63d0\u4f9b\u4e86\u8bb8\u591a Chart\uff0c\u8981\u67e5\u770b\u5b8c\u6574\u7684\u5217\u8868\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u641c\u7d22\u547d\u4ee4\uff1a $ helm search repo prometheus-community NAME CHART VERSION APP VERSION DESCRIPTION prometheus-community/alertmanager 0.8.0 v0.21.0 The Alertmanager handles alerts sent by client ... prometheus-community/kube-prometheus-stack 14.5.0 0.46.0 kube-prometheus-stack collects Kubernetes manif... prometheus-community/prometheus 13.6.0 2.24.0 Prometheus is a monitoring system and time seri... prometheus-community/prometheus-adapter 2.12.1 v0.8.3 A Helm chart for k8s prometheus adapter prometheus-community/prometheus-blackbox-exporter 4.10.2 0.18.0 Prometheus Blackbox Exporter prometheus-community/prometheus-cloudwatch-expo... 0.14.1 0.10.0 A Helm chart for prometheus cloudwatch-exporter prometheus-community/prometheus-consul-exporter 0.4.0 0.4.0 A Helm chart for the Prometheus Consul Exporter prometheus-community/prometheus-couchdb-exporter 0.2.0 1.0 A Helm chart to export the metrics from couchdb... prometheus-community/prometheus-druid-exporter 0.9.0 v0.8.0 Druid exporter to monitor druid metrics with Pr... prometheus-community/prometheus-elasticsearch-e... 4.4.0 1.1.0 Elasticsearch stats exporter for Prometheus prometheus-community/prometheus-kafka-exporter 1.0.0 v1.2.0 A Helm chart to export the metrics from Kafka i... prometheus-community/prometheus-mongodb-exporter 2.8.1 v0.10.0 A Prometheus exporter for MongoDB metrics prometheus-community/prometheus-mysql-exporter 1.1.0 v0.12.1 A Helm chart for prometheus mysql exporter with... prometheus-community/prometheus-nats-exporter 2.6.0 0.7.0 A Helm chart for prometheus-nats-exporter prometheus-community/prometheus-node-exporter 1.16.2 1.1.2 A Helm chart for prometheus node-exporter prometheus-community/prometheus-operator 9.3.2 0.38.1 DEPRECATED - This chart will be renamed. See ht... prometheus-community/prometheus-pingdom-exporter 2.3.2 20190610-1 A Helm chart for Prometheus Pingdom Exporter \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5b89\u88c5\u7684\u662f kube-prometheus-stack \u8fd9\u4e2a Chart\uff0c\u5b83\u4f1a\u90e8\u7f72\u6240\u9700\u8981\u7684\u76f8\u5173\u7ec4\u4ef6\uff1a $ helm install kube-prom prometheus-community/kube-prometheus-stack -n monitoring Promethuse-operator 2021 \u5b89\u88c5","title":"\u90e8\u7f72 Prometheus Stack"},{"location":"chap4/46Prometheus_traefik/#2-traefik","text":"Prometheus Operator \u63d0\u4f9b\u4e86 ServiceMonitor \u8fd9\u4e2a CRD \u6765\u914d\u7f6e\u76d1\u63a7\u6307\u6807\u7684\u91c7\u96c6\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u8c61\uff1a traefik-service-monitor.yaml # traefik-service-monitor.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: traefik namespace: default labels: app: traefik release: prometheus-stack spec: jobLabel: traefik-metrics selector: matchLabels: app.kubernetes.io/instance: traefik app.kubernetes.io/name: traefik-dashboard namespaceSelector: matchNames: - kube-system endpoints: - port: traefik path: /metrics \u6839\u636e\u4e0a\u9762\u7684\u914d\u7f6e\uff0c Prometheus \u5c06\u83b7\u53d6 traefik-dashboard \u670d\u52a1\u7684 /metrics \u7aef\u70b9\u3002 \u4e3b\u8981\u6ce8\u610f\u7684\u662f traefik-dashboard \u670d\u52a1\u662f\u5728 kube-system \u547d\u540d\u7a7a\u95f4\u4e2d\u521b\u5efa\u7684\uff0c\u800c ServiceMonitor \u5219\u90e8\u7f72\u5728\u9ed8\u8ba4\u7684 default \u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u6240\u4ee5\u8fd9\u91cc\u9762\u6211\u4eec\u4f7f\u7528\u4e86 namespaceSelector \u8fdb\u884c\u547d\u540d\u7a7a\u95f4\u5339\u914d\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u6765\u9a8c\u8bc1\u4e00\u4e0b Prometheus \u662f\u5426\u5df2\u7ecf\u5f00\u59cb\u6293\u53d6 Traefik \u7684\u6307\u6807\u4e86\u3002","title":"2 \u914d\u7f6e Traefik \u76d1\u63a7"},{"location":"chap4/46Prometheus_traefik/#3-traefik","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\uff0c\u5f53\u6761\u4ef6\u5339\u914d\u7684\u65f6\u5019\u4f1a\u89e6\u53d1\u62a5\u8b66\uff0c\u540c\u6837 Prometheus Operator \u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a PrometheusRule \u7684 CRD \u5bf9\u8c61\u6765\u914d\u7f6e\u62a5\u8b66\u89c4\u5219 \uff1a traefik-rules.yaml # traefik-rules.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: annotations: meta.helm.sh/release-name: kube-prom meta.helm.sh/release-namespace: monitoring labels: app: kube-prometheus-stack release: kube-prom name: traefik-alert-rules namespace: monitoring spec: groups: - name: Traefik rules: - alert: TooManyRequest expr: avg(traefik_entrypoint_open_connections{job=\"traefik-dashboard\",namespace=\"kube-system\"}) > 5 for: 1m labels: severity: critical \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u89c4\u5219\uff1a\u5982\u679c1\u5206\u949f\u5185\u6709\u8d85\u8fc75\u4e2a open connections \u673a\u4f1a\u89e6\u53d1\u4e00\u4e2a TooManyRequest \u62a5\u8b66\uff0c\u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a\u5bf9\u8c61\u5373\u53ef\uff1a $ kubectl apply -f traefik-rules.yaml \u6ce8\u610f\uff1a PrometheusRule\u7684annotations&labels \u53ef\u4ee5\u501f\u9274\u5176\u5b83\u5df2\u7ecf\u8fd0\u884c\u7684rule kubectl get PrometheusRule kube-prom-kube-prometheus-prometheus-operator -n monitoring -oyaml annotations: meta.helm.sh/release-name: kube-prom meta.helm.sh/release-namespace: monitoring labels: app: kube-prometheus-stack release: kube-prom name: traefik-alert-rules namespace: monitoring","title":"3 \u914d\u7f6e Traefik \u62a5\u8b66"},{"location":"chap4/46Prometheus_traefik/#prometheusrule","text":"kubectl exec prometheus-kube-prom-kube-prometheus-prometheus-0 -n monitoring -it sh cd /etc/prometheus/rules/prometheus-kube-prom-kube-prometheus-prometheus-rulefiles-0 $ ls -la ... monitoring-traefik-alert-rules.yaml \u521b\u5efa\u5b8c\u6210\u540e\u6b63\u5e38\u5728 Promethues \u7684 Dashboard \u4e0b\u7684 Status > Rules \u9875\u9762\u5c31\u53ef\u4ee5\u770b\u5230\u5bf9\u5e94\u7684\u62a5\u8b66\u89c4\u5219\uff1a","title":"\u67e5\u770bPrometheusRule\u662f\u5426\u5b89\u88c5\u6210\u529f"},{"location":"chap4/46Prometheus_traefik/#4-grafana","text":"\u524d\u9762\u4f7f\u7528 kube-prometheus-stack \u8fd9\u4e2a Helm Chart \u90e8\u7f72\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u90e8\u7f72\u4e0a\u4e86 Grafana\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u4e3a Traefik \u7684\u76d1\u63a7\u6307\u6807\u914d\u7f6e\u4e00\u4e2a Dashboard\uff0c\u540c\u6837\u9996\u5148\u6211\u4eec\u4f7f\u7528\u7aef\u53e3\u8f6c\u53d1\u7684\u65b9\u5f0f\u6765\u8bbf\u95ee Grafana\uff1a kubectl port-forward svc/kube-prom-grafana 10080:80 -n monitoring \u7136\u540e\u8bbf\u95ee Grafana GUI\uff08http://localhost:10080 \uff09\u65f6\uff0c\u5b83\u4f1a\u8981\u6c42\u8f93\u5165\u767b\u5f55\u540d\u548c\u5bc6\u7801\uff0c \u9ed8\u8ba4\u7684\u767b\u5f55\u7528\u6237\u540d\u662f admin \uff0c\u5bc6\u7801\u662f prom-operator \uff0c\u5bc6\u7801\u53ef\u4ee5\u4ece\u540d\u4e3a prometheus-operator-grafana \u7684 Kubernetes Secret \u5bf9\u8c61\u4e2d\u83b7\u53d6\u3002 \u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u4e3a Traefik \u81ea\u5b9a\u4e49\u4e00\u4e2a Dashboard\uff0c\u4e5f\u53ef\u4ee5\u4ece Grafana \u7684\u5b98\u65b9\u793e\u533a\u4e2d\u5bfc\u5165\u4e00\u4e2a\u5408\u9002\u7684\u5373\u53ef\uff0c\u70b9\u51fb\u5de6\u4fa7\u5bfc\u822a\u680f\u4e0a\u7684\u56db\u65b9\u5f62\u56fe\u6807\uff0c\u5bfc\u822a\u5230 Dashboards > Manage\uff0c\u5373\u53ef\u6dfb\u52a0\u4eea\u8868\u76d8\u3002 \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 Import \u6309\u94ae\uff0c\u8f93\u5165 11462 \u4f5c\u4e3a Dashboard \u7684 ID\uff0c\u5bf9\u5e94\u7528\u6237 timoreymann \u8d21\u732e\u7684 Traefik 2 \u4eea\u8868\u76d8 \u3002 \u70b9\u51fb Load \u540e\uff0c\u4f60\u5e94\u8be5\u770b\u5230\u5bfc\u5165\u7684\u4eea\u8868\u76d8\u7684\u76f8\u5173\u4fe1\u606f\u3002 \u5728\u6700\u4e0b\u9762\u6709\u4e00\u4e2a\u4e0b\u62c9\u83dc\u5355\uff0c\u9009\u62e9 Prometheus \u6570\u636e\u6e90\uff0c\u7136\u540e\u70b9\u51fb Import\uff0c\u5373\u53ef\u751f\u6210\u5982\u4e0b\u6240\u793a\u7684 Dashboard\u3002","title":"4 Grafana \u914d\u7f6e"},{"location":"chap4/46Prometheus_traefik/#5","text":"\u73b0\u5728\uff0cTraefik \u5df2\u7ecf\u5f00\u59cb\u5de5\u4f5c\u4e86\uff0c\u5e76\u4e14\u6307\u6807\u4e5f\u88ab Prometheus \u548c Grafana \u83b7\u53d6\u5230\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6765\u6d4b\u8bd5\u3002\u8fd9\u91cc\u6211\u4eec\u90e8\u7f72 HTTPBin \u670d\u52a1\uff0c\u5b83\u63d0\u4f9b\u4e86\u8bb8\u591a\u7aef\u70b9\uff0c\u53ef\u7528\u4e8e\u6a21\u62df\u4e0d\u540c\u7c7b\u578b\u7684\u7528\u6237\u6d41\u91cf\u3002\u5bf9\u5e94\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a # httpbin.yaml apiVersion: apps/v1 kind: Deployment metadata: name: httpbin labels: app: httpbin spec: replicas: 1 selector: matchLabels: app: httpbin template: metadata: labels: app: httpbin spec: containers: - image: kennethreitz/httpbin name: httpbin ports: - containerPort: 80 --- apiVersion: v1 kind: Service metadata: name: httpbin spec: ports: - name: http port: 8000 targetPort: 80 selector: app: httpbin --- apiVersion: traefik.containo.us/v1alpha1 kind: IngressRoute metadata: name: httpbin spec: entryPoints: - web routes: - match: Host(`httpbin.local`) kind: Rule services: - name: httpbin port: 8000 ``` \u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u8d44\u6e90\u6e05\u5355\uff1a $ kubectl apply -f httpbin.yaml deployment.apps/httpbin created service/httpbin created ingressroute.traefik.containo.us/httpbin created httpbin \u8def\u7531\u4f1a\u5339\u914d `httpbin.local` \u7684\u4e3b\u673a\u540d\uff0c\u7136\u540e\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9 httpbin Service\uff1a $ curl -I http://192.168.65.4 -H \"host:httpbin.local\" HTTP/1.1 200 OK Access-Control-Allow-Credentials: true Access-Control-Allow-Origin: * Content-Length: 9593 Content-Type: text/html; charset=utf-8 Date: Mon, 05 Apr 2021 05:43:16 GMT Server: gunicorn/19.9.0 \u6211\u4eec\u8fd9\u91cc\u90e8\u7f72\u7684 Traefik \u4f7f\u7528\u7684\u662f hostPort \u6a21\u5f0f\uff0c\u56fa\u5b9a\u5230 master \u8282\u70b9\u4e0a\u9762\u7684\uff0c\u8fd9\u91cc\u7684 IP \u5730\u5740 192.168.65.4 \u5c31\u662f master \u8282\u70b9\u7684 IP \u5730\u5740\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 ab \u6765\u8bbf\u95ee HTTPBin \u670d\u52a1\u6a21\u62df\u4e00\u4e9b\u6d41\u91cf\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u4f1a\u4ea7\u751f\u5bf9\u5e94\u7684\u6307\u6807\uff0c\u6267\u884c\u4ee5\u4e0b\u811a\u672c\uff1a $ ab -c 5 -n 10000 -m PATCH -H \"host:httpbin.local\" -H \"accept: application/json\" http://192.168.31.75/patch $ ab -c 5 -n 10000 -m GET -H \"host:httpbin.local\" -H \"accept: application/json\" http://192.168.31.75/get $ ab -c 5 -n 10000 -m POST -H \"host:httpbin.local\" -H \"accept: application/json\" http://192.168.31.75/post \u6b63\u5e38\u4e00\u6bb5\u65f6\u95f4\u540e\u518d\u53bb\u67e5\u770b Grafana \u7684 Dashboard \u53ef\u4ee5\u770b\u5230\u663e\u793a\u4e86\u66f4\u591a\u7684\u4fe1\u606f\uff1a \u5305\u62ec\uff1a\u6b63\u5e38\u8fd0\u884c\u7684\u65f6\u95f4\u3001\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u3001\u8bf7\u6c42\u603b\u6570\u3001\u57fa\u4e8e HTTP \u65b9\u6cd5\u548c\u670d\u52a1\u7684\u8bf7\u6c42\u8ba1\u6570\u7b49\u3002 ![Alt Image Text](../images/46_10.png \"Body image\") \u6700\u540e\uff0c\u5f53\u6211\u4eec\u6d4b\u8bd5\u5e94\u7528\u6d41\u91cf\u65f6\uff0c`Prometheus` \u53ef\u80fd\u4f1a\u89e6\u53d1\u62a5\u8b66\uff0c\u4e4b\u524d\u521b\u5efa\u7684 `TooManyRequest` \u62a5\u8b66\u5c06\u663e\u793a\u5728 Alertmanager \u4eea\u8868\u677f\u4e0a\uff0c\u7136\u540e\u53ef\u4ee5\u81ea\u5df1\u6839\u636e\u9700\u8981\u914d\u7f6e\u63a5\u6536\u62a5\u8b66\u4fe1\u606f\u7684 Receiver \u5373\u53ef\u3002 $ kubectl port-forward service/prometheus-stack-kube-prom-alertmanager 9093:9093 Forwarding from 127.0.0.1:9093 -> 9093 ```","title":"5 \u6d4b\u8bd5"},{"location":"chap4/46Prometheus_traefik/#6","text":"\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u5c06 Traefik \u8fde\u63a5\u5230 Prometheus \u548c Grafana \u4ee5\u4ece Traefik \u6307\u6807\u4e2d\u521b\u5efa\u53ef\u89c6\u5316\u7684\u8fc7\u7a0b\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u5f53\u719f\u6089\u8fd9\u4e9b\u5de5\u5177\u540e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u6c42\u521b\u5efa\u4e00\u4e9b Dashboard\uff0c\u66b4\u9732\u4f60\u7684\u73af\u5883\u7684\u4e00\u4e9b\u5173\u952e\u6570\u636e\u3002","title":"6 \u603b\u7ed3"},{"location":"chap4/47Prometheus_opt_AlertmanagerConfig/","text":"\u7b2c\u5341\u4e00\u8282 Operator\u4f7f\u7528AlertmanagerConfig\u8fdb\u884c\u62a5\u8b66\u914d\u7f6e Prometheus Dashboard \u7684 Alert \u9875\u9762\u4e0b\u9762\u5c31\u5df2\u7ecf\u6709\u5f88\u591a\u62a5\u8b66\u89c4\u5219\u4e86\uff0c\u8fd9\u4e00\u7cfb\u5217\u7684\u89c4\u5219\u5176\u5b9e\u90fd\u6765\u81ea\u4e8e\u9879\u76ee https://github.com/kubernetes-monitoring/kubernetes-mixin \uff0c\u6211\u4eec\u90fd\u901a\u8fc7 Prometheus Operator \u5b89\u88c5\u914d\u7f6e\u4e0a\u4e86\u3002 1 \u914d\u7f6e PrometheusRule \u4f46\u662f\u8fd9\u4e9b\u62a5\u8b66\u4fe1\u606f\u662f\u54ea\u91cc\u6765\u7684\u5462\uff1f\u4ed6\u4eec\u5e94\u8be5\u7528\u600e\u6837\u7684\u65b9\u5f0f\u901a\u77e5\u6211\u4eec\u5462\uff1f \u6211\u4eec\u77e5\u9053\u4e4b\u524d\u6211\u4eec\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u65b9\u5f0f\u53ef\u4ee5\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u4e4b\u4e2d\u6307\u5b9a AlertManager \u5b9e\u4f8b\u548c \u62a5\u8b66\u7684 rules \u6587\u4ef6\uff0c\u73b0\u5728\u6211\u4eec\u901a\u8fc7 Operator \u90e8\u7f72\u7684\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u5728 Prometheus Dashboard \u7684 Config \u9875\u9762\u4e0b\u9762\u67e5\u770b\u5173\u4e8e AlertManager \u7684\u914d\u7f6e\uff1a alerting: alert_relabel_configs: - separator: ; regex: prometheus_replica replacement: $1 action: labeldrop alertmanagers: - kubernetes_sd_configs: - role: endpoints namespaces: names: - monitoring scheme: http path_prefix: / timeout: 10s api_version: v1 relabel_configs: - source_labels: [__meta_kubernetes_service_name] separator: ; regex: alertmanager-main replacement: $1 action: keep - source_labels: [__meta_kubernetes_endpoint_port_name] separator: ; regex: web replacement: $1 action: keep rule_files: - /etc/prometheus/rules/prometheus-k8s-rulefiles-0/*.yaml \u4e0a\u9762 alertmanagers \u7684\u914d\u7f6e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u662f\u901a\u8fc7 role \u4e3a endpoints \u7684 kubernetes \u7684\u81ea\u52a8\u53d1\u73b0\u673a\u5236\u83b7\u53d6\u7684\uff0c\u5339\u914d\u7684\u662f\u670d\u52a1\u540d\u4e3a alertmanager-main \uff0c\u7aef\u53e3\u540d\u4e3a web \u7684 Service \u670d\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b alertmanager-main \u8fd9\u4e2a Service \uff1a $ kubectl describe svc alertmanager-main -n monitoring Name: alertmanager-main Namespace: monitoring Labels: alertmanager=main Annotations: kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"alertmanager\":\"main\"},\"name\":\"alertmanager-main\",\"namespace\":\"... Selector: alertmanager=main,app=alertmanager Type: NodePort IP: 10.106.211.33 Port: web 9093/TCP TargetPort: web/TCP NodePort: web 31742/TCP Endpoints: 10.244.3.119:9093,10.244.4.112:9093,10.244.8.164:9093 Session Affinity: ClientIP External Traffic Policy: Cluster Events: <none> \u53ef\u4ee5\u770b\u5230\u670d\u52a1\u540d\u6b63\u662f alertmanager-main \uff0cPort \u5b9a\u4e49\u7684\u540d\u79f0\u4e5f\u662f web \uff0c\u7b26\u5408\u4e0a\u9762\u7684\u89c4\u5219\uff0c\u6240\u4ee5 Prometheus \u548c AlertManager \u7ec4\u4ef6\u5c31\u6b63\u786e\u5173\u8054\u4e0a\u4e86\u3002 \u800c\u5bf9\u5e94\u7684\u62a5\u8b66\u89c4\u5219\u6587\u4ef6\u4f4d\u4e8e\uff1a /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ \u76ee\u5f55\u4e0b\u9762\u6240\u6709\u7684 YAML \u6587\u4ef6\u3002 \u6211\u4eec\u53ef\u4ee5\u8fdb\u5165 Prometheus \u7684 Pod \u4e2d\u9a8c\u8bc1\u4e0b\u8be5\u76ee\u5f55\u4e0b\u9762\u662f\u5426\u6709 YAML \u6587\u4ef6\uff1a $ kubectl exec -it prometheus-k8s-0 /bin/sh -n monitoring Defaulting container name to prometheus. Use 'kubectl describe pod/prometheus-k8s-0 -n monitoring' to see all of the containers in this pod. /prometheus $ ls /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ monitoring-prometheus-k8s-rules.yaml /prometheus $ cat /etc/prometheus/rules/prometheus-k8s-rulefiles-0/monitoring-pr ometheus-k8s-rules.yaml groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate ...... \u8fd9\u4e2a YAML \u6587\u4ef6\u5b9e\u9645\u4e0a\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684\u4e00\u4e2a PrometheusRule \u6587\u4ef6\u5305\u542b\u7684\u5185\u5bb9\uff1a $ cat prometheus-rules.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: prometheus-k8s-rules namespace: monitoring spec: groups: - name: node-exporter.rules rules: - expr: | count without (cpu) ( count without (mode) ( node_cpu_seconds_total{job=\"node-exporter\"} ) ) record: instance:node_num_cpu:sum - expr: | ...... \u6211\u4eec\u8fd9\u91cc\u7684 PrometheusRule \u7684 name \u4e3a prometheus-k8s-rules \uff0cnamespace \u4e3a monitoring\uff0c\u6211\u4eec\u53ef\u4ee5\u731c\u60f3\u5230\u6211\u4eec\u521b\u5efa\u4e00\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u540e\uff0c\u4f1a\u81ea\u52a8\u5728\u4e0a\u9762\u7684 prometheus-k8s-rulefiles-0 \u76ee\u5f55\u4e0b\u9762\u751f\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684 <namespace>-<name>.yaml \u6587\u4ef6\uff0c\u6240\u4ee5\u5982\u679c\u4ee5\u540e\u6211\u4eec\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u62a5\u8b66\u9009\u9879\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\u3002 \u81f3\u4e8e\u4e3a\u4ec0\u4e48 Prometheus \u80fd\u591f\u8bc6\u522b\u8fd9\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u5462\uff1f\u8fd9\u5c31\u9700\u8981\u67e5\u770b\u6211\u4eec\u521b\u5efa\u7684 prometheus \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u91cc\u9762\u6709\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u5c5e\u6027 ruleSelector\uff0c\u7528\u6765\u5339\u914d rule \u89c4\u5219\u7684\u8fc7\u6ee4\u5668\uff0c\u8981\u6c42\u5339\u914d\u5177\u6709 prometheus=k8s \u548c role=alert-rules \u6807\u7b7e\u7684 PrometheusRule \u8d44\u6e90\u5bf9\u8c61\uff0c\u73b0\u5728\u660e\u767d\u4e86\u5427\uff1f ruleSelector: matchLabels: prometheus: k8s role: alert-rules \u6240\u4ee5\u6211\u4eec\u8981\u60f3\u81ea\u5b9a\u4e49\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\uff0c\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5177\u6709 prometheus=k8s \u548c role=alert-rules \u6807\u7b7e\u7684 PrometheusRule \u5bf9\u8c61\u5c31\u884c\u4e86\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a etcd \u662f\u5426\u53ef\u7528\u7684\u62a5\u8b66\uff0c\u6211\u4eec\u77e5\u9053 etcd \u6574\u4e2a\u96c6\u7fa4\u6709\u4e00\u534a\u4ee5\u4e0a\u7684\u8282\u70b9\u53ef\u7528\u7684\u8bdd\u96c6\u7fa4\u5c31\u662f\u53ef\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5224\u65ad\u5982\u679c\u4e0d\u53ef\u7528\u7684 etcd \u6570\u91cf\u8d85\u8fc7\u4e86\u4e00\u534a\u90a3\u4e48\u5c31\u89e6\u53d1\u62a5\u8b66\uff0c\u521b\u5efa\u6587\u4ef6 prometheus-etcdRules.yaml \uff1a apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: etcd-rules namespace: monitoring spec: groups: - name: etcd rules: - alert: EtcdClusterUnavailable annotations: summary: etcd cluster small description: If one more etcd peer goes down the cluster will be unavailable expr: | count(up{job=\"etcd\"} == 0) > (count(up{job=\"etcd\"}) / 2 - 1) for: 3m labels: severity: critical \u6ce8\u610f label \u6807\u7b7e\u4e00\u5b9a\u81f3\u5c11\u8981\u6709 prometheus=k8s \u548c role=alert-rules \uff0c\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u4f1a\u513f\u518d\u53bb\u5bb9\u5668\u4e2d\u67e5\u770b\u4e0b rules \u6587\u4ef6\u5939\uff1a $ kubectl apply -f prometheus-etcdRules.yaml prometheusrule.monitoring.coreos.com/etcd-rules created $ kubectl exec -it prometheus-k8s-0 /bin/sh -n monitoring Defaulting container name to prometheus. Use 'kubectl describe pod/prometheus-k8s-0 -n monitoring' to see all of the containers in this pod. /prometheus $ ls /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ monitoring-etcd-rules.yaml monitoring-prometheus-k8s-rules.yaml \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521b\u5efa\u7684 rule \u6587\u4ef6\u5df2\u7ecf\u88ab\u6ce8\u5165\u5230\u4e86\u5bf9\u5e94\u7684 rulefiles \u6587\u4ef6\u5939\u4e0b\u9762\u4e86\uff0c\u8bc1\u660e\u6211\u4eec\u4e0a\u9762\u7684\u8bbe\u60f3\u662f\u6b63\u786e\u7684\u3002\u7136\u540e\u518d\u53bb Prometheus Dashboard \u7684 Alert \u9875\u9762\u4e0b\u9762\u5c31\u53ef\u4ee5\u67e5\u770b\u5230\u4e0a\u9762\u6211\u4eec\u65b0\u5efa\u7684\u62a5\u8b66\u89c4\u5219\u4e86\uff1a 2 \u914d\u7f6e\u62a5\u8b66 \u6211\u4eec\u77e5\u9053\u4e86\u5982\u4f55\u53bb\u6dfb\u52a0\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\u914d\u7f6e\u9879\uff0c\u4f46\u662f\u8fd9\u4e9b\u62a5\u8b66\u4fe1\u606f\u7528\u600e\u6837\u7684\u65b9\u5f0f\u53bb\u53d1\u9001\u5462\uff1f\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u77e5\u9053\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 AlertManager \u7684\u914d\u7f6e\u6587\u4ef6\u53bb\u914d\u7f6e\u5404\u79cd\u62a5\u8b66\u63a5\u6536\u5668\uff0c\u73b0\u5728\u6211\u4eec\u662f\u901a\u8fc7 Operator \u63d0\u4f9b\u7684 alertmanager \u8d44\u6e90\u5bf9\u8c61\u521b\u5efa\u7684\u7ec4\u4ef6\uff0c\u5e94\u8be5\u600e\u6837\u53bb\u4fee\u6539\u914d\u7f6e\u5462\uff1f \u9996\u5148\u6211\u4eec\u53bb Alertmanager \u7684\u9875\u9762\u4e0a status \u8def\u5f84\u4e0b\u9762\u67e5\u770b AlertManager \u7684\u914d\u7f6e\u4fe1\u606f: \u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\u5b9e\u9645\u4e0a\u662f\u6765\u81ea\u4e8e Prometheus-Operator \u81ea\u52a8\u521b\u5efa\u7684\u540d\u4e3a alertmanager-main-generated \u7684 Secret \u5bf9\u8c61\uff1a $ kubectl get secret alertmanager-main-generated -n monitoring -o json | jq -r '.data.\"alertmanager.yaml\"' | base64 --decode \"global\": \"resolve_timeout\": \"5m\" \"inhibit_rules\": - \"equal\": - \"namespace\" - \"alertname\" \"source_match\": \"severity\": \"critical\" \"target_match_re\": \"severity\": \"warning|info\" - \"equal\": - \"namespace\" - \"alertname\" \"source_match\": \"severity\": \"warning\" \"target_match_re\": \"severity\": \"info\" \"receivers\": - \"name\": \"Default\" - \"name\": \"Watchdog\" - \"name\": \"Critical\" \"route\": \"group_by\": - \"namespace\" \"group_interval\": \"5m\" \"group_wait\": \"30s\" \"receiver\": \"Default\" \"repeat_interval\": \"12h\" \"routes\": - \"match\": \"alertname\": \"Watchdog\" \"receiver\": \"Watchdog\" - \"match\": \"severity\": \"critical\" \"receiver\": \"Critical\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5185\u5bb9\u548c\u4e0a\u9762\u67e5\u770b\u7684\u914d\u7f6e\u4fe1\u606f\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u8981\u6dfb\u52a0\u81ea\u5df1\u7684\u63a5\u6536\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u66f4\u6539\u8fd9\u4e2a\u6587\u4ef6\uff0c\u4f46\u662f\u8fd9\u91cc\u7684\u5185\u5bb9\u662f base64 \u7f16\u7801\u8fc7\u540e\u7684\uff0c\u5982\u679c\u624b\u52a8\u6dfb\u52a0\u5185\u5bb9\u5c31\u975e\u5e38\u4e0d\u65b9\u4fbf\u3002 3 AlertmanagerConfig \u4e3a\u6b64 Prometheus-Operator \u65b0\u589e\u4e86\u4e00\u4e2a AlertmanagerConfig \u7684 CRD\uff0c\u6bd4\u5982\u6211\u4eec\u5c06 Critical \u8fd9\u4e2a\u63a5\u6536\u5668\u7684\u62a5\u8b66\u4fe1\u606f\u90fd\u53d1\u9001\u5230\u9489\u9489\u8fdb\u884c\u62a5\u8b66\u3002 \u9996\u5148\u5728 monitoring \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u90e8\u7f72\u4e00\u4e2a\u7b80\u5355\u7684\u9489\u9489 webhook \u5904\u7406\u5668\uff0c\u524d\u9762 Alertmanager \u7ae0\u8282\u5df2\u7ecf\u5b66\u4e60\u8fc7\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002 \u7136\u540e\u65b0\u5efa\u4e00\u4e2a AlertmanagerConfig \u7c7b\u578b\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7 kubectl explain alertmanagerconfig \u6216\u8005\u5728\u7ebf API \u6587\u6863( https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/alerting.md )\u6765\u67e5\u770b\u5b57\u6bb5\u7684\u542b\u4e49 # alertmanager-config.yaml apiVersion: monitoring.coreos.com/v1alpha1 kind: AlertmanagerConfig metadata: name: dinghook namespace: monitoring labels: alertmanagerConfig: example spec: receivers: - name: Critical webhookConfigs: - url: http://dingtalk-hook:5000 sendResolved: true route: groupBy: [\"namespace\"] groupWait: 30s groupInterval: 5m repeatInterval: 12h receiver: Critical routes: - receiver: Critical match: severity: critical \u4e0d\u8fc7\u5982\u679c\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u914d\u7f6e\u662f\u4e0d\u4f1a\u751f\u6548\u7684\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a Label \u6807\u7b7e\uff0c\u5e76\u5728 Alertmanager \u7684\u8d44\u6e90\u5bf9\u8c61\u4e2d\u901a\u8fc7\u6807\u7b7e\u6765\u5173\u8054\u4e0a\u9762\u7684\u8fd9\u4e2a\u5bf9\u8c61\uff0c \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u65b0\u589e\u4e86\u4e00\u4e2a Label \u6807\u7b7e\uff1a alertmanagerConfig: example \uff0c\u7136\u540e\u9700\u8981\u91cd\u65b0\u66f4\u65b0 Alertmanager \u5bf9\u8c61\uff0c\u6dfb\u52a0 alertmanagerConfigSelector \u5c5e\u6027\u53bb\u5339\u914d AlertmanagerConfig \u8d44\u6e90\u5bf9\u8c61 \uff1a # alertmanager-alertmanager.yaml apiVersion: monitoring.coreos.com/v1 kind: Alertmanager metadata: labels: alertmanager: main name: main namespace: monitoring spec: image: quay.io/prometheus/alertmanager:v0.21.0 nodeSelector: kubernetes.io/os: linux replicas: 3 securityContext: fsGroup: 2000 runAsNonRoot: true runAsUser: 1000 serviceAccountName: alertmanager-main version: v0.21.0 configSecret: alertmanagerConfigSelector: # \u5339\u914d AlertmanagerConfig \u7684\u6807\u7b7e matchLabels: alertmanagerConfig: example \u73b0\u5728\u6211\u4eec\u91cd\u65b0\u66f4\u65b0\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a kubectl apply -f alertmanager-config.yaml kubectl apply -f alertmanager-alertmanager.yaml \u66f4\u65b0\u5b8c\u6210\u540e\u9ed8\u8ba4\u7684\u914d\u7f6e\u4f1a\u548c\u6211\u4eec\u521b\u5efa\u7684\u914d\u7f6e\u8fdb\u884c\u5408\u5e76\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u67e5\u770b\u751f\u6210\u7684 Secret \u8d44\u6e90\u5bf9\u8c61\u5185\u5bb9\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b Alertmanager \u7684 WEB UI \u754c\u9762\u7684\u914d\u7f6e\u5185\u5bb9\uff1a \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728 AlertmanagerConfig \u91cc\u9762\u5b9a\u4e49\u7684\u540d\u4e3a Critical \u7684 Receiver\uff0c\u5728\u6700\u7ec8\u751f\u6210\u7684\u914d\u7f6e\u4e2d\u540d\u79f0\u4e86 monitoring-dinghook-Critical \uff0c\u683c\u5f0f\u4e3a <namespace>-<name>-<receiver name> \u3002","title":"\u7b2c\u5341\u4e00\u8282 Operator\u4f7f\u7528AlertmanagerConfig\u8fdb\u884c\u62a5\u8b66\u914d\u7f6e"},{"location":"chap4/47Prometheus_opt_AlertmanagerConfig/#operatoralertmanagerconfig","text":"Prometheus Dashboard \u7684 Alert \u9875\u9762\u4e0b\u9762\u5c31\u5df2\u7ecf\u6709\u5f88\u591a\u62a5\u8b66\u89c4\u5219\u4e86\uff0c\u8fd9\u4e00\u7cfb\u5217\u7684\u89c4\u5219\u5176\u5b9e\u90fd\u6765\u81ea\u4e8e\u9879\u76ee https://github.com/kubernetes-monitoring/kubernetes-mixin \uff0c\u6211\u4eec\u90fd\u901a\u8fc7 Prometheus Operator \u5b89\u88c5\u914d\u7f6e\u4e0a\u4e86\u3002","title":"\u7b2c\u5341\u4e00\u8282 Operator\u4f7f\u7528AlertmanagerConfig\u8fdb\u884c\u62a5\u8b66\u914d\u7f6e"},{"location":"chap4/47Prometheus_opt_AlertmanagerConfig/#1-prometheusrule","text":"\u4f46\u662f\u8fd9\u4e9b\u62a5\u8b66\u4fe1\u606f\u662f\u54ea\u91cc\u6765\u7684\u5462\uff1f\u4ed6\u4eec\u5e94\u8be5\u7528\u600e\u6837\u7684\u65b9\u5f0f\u901a\u77e5\u6211\u4eec\u5462\uff1f \u6211\u4eec\u77e5\u9053\u4e4b\u524d\u6211\u4eec\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u65b9\u5f0f\u53ef\u4ee5\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u4e4b\u4e2d\u6307\u5b9a AlertManager \u5b9e\u4f8b\u548c \u62a5\u8b66\u7684 rules \u6587\u4ef6\uff0c\u73b0\u5728\u6211\u4eec\u901a\u8fc7 Operator \u90e8\u7f72\u7684\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u5728 Prometheus Dashboard \u7684 Config \u9875\u9762\u4e0b\u9762\u67e5\u770b\u5173\u4e8e AlertManager \u7684\u914d\u7f6e\uff1a alerting: alert_relabel_configs: - separator: ; regex: prometheus_replica replacement: $1 action: labeldrop alertmanagers: - kubernetes_sd_configs: - role: endpoints namespaces: names: - monitoring scheme: http path_prefix: / timeout: 10s api_version: v1 relabel_configs: - source_labels: [__meta_kubernetes_service_name] separator: ; regex: alertmanager-main replacement: $1 action: keep - source_labels: [__meta_kubernetes_endpoint_port_name] separator: ; regex: web replacement: $1 action: keep rule_files: - /etc/prometheus/rules/prometheus-k8s-rulefiles-0/*.yaml \u4e0a\u9762 alertmanagers \u7684\u914d\u7f6e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u662f\u901a\u8fc7 role \u4e3a endpoints \u7684 kubernetes \u7684\u81ea\u52a8\u53d1\u73b0\u673a\u5236\u83b7\u53d6\u7684\uff0c\u5339\u914d\u7684\u662f\u670d\u52a1\u540d\u4e3a alertmanager-main \uff0c\u7aef\u53e3\u540d\u4e3a web \u7684 Service \u670d\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b alertmanager-main \u8fd9\u4e2a Service \uff1a $ kubectl describe svc alertmanager-main -n monitoring Name: alertmanager-main Namespace: monitoring Labels: alertmanager=main Annotations: kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"alertmanager\":\"main\"},\"name\":\"alertmanager-main\",\"namespace\":\"... Selector: alertmanager=main,app=alertmanager Type: NodePort IP: 10.106.211.33 Port: web 9093/TCP TargetPort: web/TCP NodePort: web 31742/TCP Endpoints: 10.244.3.119:9093,10.244.4.112:9093,10.244.8.164:9093 Session Affinity: ClientIP External Traffic Policy: Cluster Events: <none> \u53ef\u4ee5\u770b\u5230\u670d\u52a1\u540d\u6b63\u662f alertmanager-main \uff0cPort \u5b9a\u4e49\u7684\u540d\u79f0\u4e5f\u662f web \uff0c\u7b26\u5408\u4e0a\u9762\u7684\u89c4\u5219\uff0c\u6240\u4ee5 Prometheus \u548c AlertManager \u7ec4\u4ef6\u5c31\u6b63\u786e\u5173\u8054\u4e0a\u4e86\u3002 \u800c\u5bf9\u5e94\u7684\u62a5\u8b66\u89c4\u5219\u6587\u4ef6\u4f4d\u4e8e\uff1a /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ \u76ee\u5f55\u4e0b\u9762\u6240\u6709\u7684 YAML \u6587\u4ef6\u3002 \u6211\u4eec\u53ef\u4ee5\u8fdb\u5165 Prometheus \u7684 Pod \u4e2d\u9a8c\u8bc1\u4e0b\u8be5\u76ee\u5f55\u4e0b\u9762\u662f\u5426\u6709 YAML \u6587\u4ef6\uff1a $ kubectl exec -it prometheus-k8s-0 /bin/sh -n monitoring Defaulting container name to prometheus. Use 'kubectl describe pod/prometheus-k8s-0 -n monitoring' to see all of the containers in this pod. /prometheus $ ls /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ monitoring-prometheus-k8s-rules.yaml /prometheus $ cat /etc/prometheus/rules/prometheus-k8s-rulefiles-0/monitoring-pr ometheus-k8s-rules.yaml groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate ...... \u8fd9\u4e2a YAML \u6587\u4ef6\u5b9e\u9645\u4e0a\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684\u4e00\u4e2a PrometheusRule \u6587\u4ef6\u5305\u542b\u7684\u5185\u5bb9\uff1a $ cat prometheus-rules.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: prometheus-k8s-rules namespace: monitoring spec: groups: - name: node-exporter.rules rules: - expr: | count without (cpu) ( count without (mode) ( node_cpu_seconds_total{job=\"node-exporter\"} ) ) record: instance:node_num_cpu:sum - expr: | ...... \u6211\u4eec\u8fd9\u91cc\u7684 PrometheusRule \u7684 name \u4e3a prometheus-k8s-rules \uff0cnamespace \u4e3a monitoring\uff0c\u6211\u4eec\u53ef\u4ee5\u731c\u60f3\u5230\u6211\u4eec\u521b\u5efa\u4e00\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u540e\uff0c\u4f1a\u81ea\u52a8\u5728\u4e0a\u9762\u7684 prometheus-k8s-rulefiles-0 \u76ee\u5f55\u4e0b\u9762\u751f\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684 <namespace>-<name>.yaml \u6587\u4ef6\uff0c\u6240\u4ee5\u5982\u679c\u4ee5\u540e\u6211\u4eec\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u62a5\u8b66\u9009\u9879\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\u3002 \u81f3\u4e8e\u4e3a\u4ec0\u4e48 Prometheus \u80fd\u591f\u8bc6\u522b\u8fd9\u4e2a PrometheusRule \u8d44\u6e90\u5bf9\u8c61\u5462\uff1f\u8fd9\u5c31\u9700\u8981\u67e5\u770b\u6211\u4eec\u521b\u5efa\u7684 prometheus \u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u91cc\u9762\u6709\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u5c5e\u6027 ruleSelector\uff0c\u7528\u6765\u5339\u914d rule \u89c4\u5219\u7684\u8fc7\u6ee4\u5668\uff0c\u8981\u6c42\u5339\u914d\u5177\u6709 prometheus=k8s \u548c role=alert-rules \u6807\u7b7e\u7684 PrometheusRule \u8d44\u6e90\u5bf9\u8c61\uff0c\u73b0\u5728\u660e\u767d\u4e86\u5427\uff1f ruleSelector: matchLabels: prometheus: k8s role: alert-rules \u6240\u4ee5\u6211\u4eec\u8981\u60f3\u81ea\u5b9a\u4e49\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\uff0c\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5177\u6709 prometheus=k8s \u548c role=alert-rules \u6807\u7b7e\u7684 PrometheusRule \u5bf9\u8c61\u5c31\u884c\u4e86\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a etcd \u662f\u5426\u53ef\u7528\u7684\u62a5\u8b66\uff0c\u6211\u4eec\u77e5\u9053 etcd \u6574\u4e2a\u96c6\u7fa4\u6709\u4e00\u534a\u4ee5\u4e0a\u7684\u8282\u70b9\u53ef\u7528\u7684\u8bdd\u96c6\u7fa4\u5c31\u662f\u53ef\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5224\u65ad\u5982\u679c\u4e0d\u53ef\u7528\u7684 etcd \u6570\u91cf\u8d85\u8fc7\u4e86\u4e00\u534a\u90a3\u4e48\u5c31\u89e6\u53d1\u62a5\u8b66\uff0c\u521b\u5efa\u6587\u4ef6 prometheus-etcdRules.yaml \uff1a apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: etcd-rules namespace: monitoring spec: groups: - name: etcd rules: - alert: EtcdClusterUnavailable annotations: summary: etcd cluster small description: If one more etcd peer goes down the cluster will be unavailable expr: | count(up{job=\"etcd\"} == 0) > (count(up{job=\"etcd\"}) / 2 - 1) for: 3m labels: severity: critical \u6ce8\u610f label \u6807\u7b7e\u4e00\u5b9a\u81f3\u5c11\u8981\u6709 prometheus=k8s \u548c role=alert-rules \uff0c\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u4f1a\u513f\u518d\u53bb\u5bb9\u5668\u4e2d\u67e5\u770b\u4e0b rules \u6587\u4ef6\u5939\uff1a $ kubectl apply -f prometheus-etcdRules.yaml prometheusrule.monitoring.coreos.com/etcd-rules created $ kubectl exec -it prometheus-k8s-0 /bin/sh -n monitoring Defaulting container name to prometheus. Use 'kubectl describe pod/prometheus-k8s-0 -n monitoring' to see all of the containers in this pod. /prometheus $ ls /etc/prometheus/rules/prometheus-k8s-rulefiles-0/ monitoring-etcd-rules.yaml monitoring-prometheus-k8s-rules.yaml \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521b\u5efa\u7684 rule \u6587\u4ef6\u5df2\u7ecf\u88ab\u6ce8\u5165\u5230\u4e86\u5bf9\u5e94\u7684 rulefiles \u6587\u4ef6\u5939\u4e0b\u9762\u4e86\uff0c\u8bc1\u660e\u6211\u4eec\u4e0a\u9762\u7684\u8bbe\u60f3\u662f\u6b63\u786e\u7684\u3002\u7136\u540e\u518d\u53bb Prometheus Dashboard \u7684 Alert \u9875\u9762\u4e0b\u9762\u5c31\u53ef\u4ee5\u67e5\u770b\u5230\u4e0a\u9762\u6211\u4eec\u65b0\u5efa\u7684\u62a5\u8b66\u89c4\u5219\u4e86\uff1a","title":"1 \u914d\u7f6e PrometheusRule"},{"location":"chap4/47Prometheus_opt_AlertmanagerConfig/#2","text":"\u6211\u4eec\u77e5\u9053\u4e86\u5982\u4f55\u53bb\u6dfb\u52a0\u4e00\u4e2a\u62a5\u8b66\u89c4\u5219\u914d\u7f6e\u9879\uff0c\u4f46\u662f\u8fd9\u4e9b\u62a5\u8b66\u4fe1\u606f\u7528\u600e\u6837\u7684\u65b9\u5f0f\u53bb\u53d1\u9001\u5462\uff1f\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u77e5\u9053\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 AlertManager \u7684\u914d\u7f6e\u6587\u4ef6\u53bb\u914d\u7f6e\u5404\u79cd\u62a5\u8b66\u63a5\u6536\u5668\uff0c\u73b0\u5728\u6211\u4eec\u662f\u901a\u8fc7 Operator \u63d0\u4f9b\u7684 alertmanager \u8d44\u6e90\u5bf9\u8c61\u521b\u5efa\u7684\u7ec4\u4ef6\uff0c\u5e94\u8be5\u600e\u6837\u53bb\u4fee\u6539\u914d\u7f6e\u5462\uff1f \u9996\u5148\u6211\u4eec\u53bb Alertmanager \u7684\u9875\u9762\u4e0a status \u8def\u5f84\u4e0b\u9762\u67e5\u770b AlertManager \u7684\u914d\u7f6e\u4fe1\u606f: \u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\u5b9e\u9645\u4e0a\u662f\u6765\u81ea\u4e8e Prometheus-Operator \u81ea\u52a8\u521b\u5efa\u7684\u540d\u4e3a alertmanager-main-generated \u7684 Secret \u5bf9\u8c61\uff1a $ kubectl get secret alertmanager-main-generated -n monitoring -o json | jq -r '.data.\"alertmanager.yaml\"' | base64 --decode \"global\": \"resolve_timeout\": \"5m\" \"inhibit_rules\": - \"equal\": - \"namespace\" - \"alertname\" \"source_match\": \"severity\": \"critical\" \"target_match_re\": \"severity\": \"warning|info\" - \"equal\": - \"namespace\" - \"alertname\" \"source_match\": \"severity\": \"warning\" \"target_match_re\": \"severity\": \"info\" \"receivers\": - \"name\": \"Default\" - \"name\": \"Watchdog\" - \"name\": \"Critical\" \"route\": \"group_by\": - \"namespace\" \"group_interval\": \"5m\" \"group_wait\": \"30s\" \"receiver\": \"Default\" \"repeat_interval\": \"12h\" \"routes\": - \"match\": \"alertname\": \"Watchdog\" \"receiver\": \"Watchdog\" - \"match\": \"severity\": \"critical\" \"receiver\": \"Critical\" \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5185\u5bb9\u548c\u4e0a\u9762\u67e5\u770b\u7684\u914d\u7f6e\u4fe1\u606f\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u60f3\u8981\u6dfb\u52a0\u81ea\u5df1\u7684\u63a5\u6536\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u66f4\u6539\u8fd9\u4e2a\u6587\u4ef6\uff0c\u4f46\u662f\u8fd9\u91cc\u7684\u5185\u5bb9\u662f base64 \u7f16\u7801\u8fc7\u540e\u7684\uff0c\u5982\u679c\u624b\u52a8\u6dfb\u52a0\u5185\u5bb9\u5c31\u975e\u5e38\u4e0d\u65b9\u4fbf\u3002","title":"2 \u914d\u7f6e\u62a5\u8b66"},{"location":"chap4/47Prometheus_opt_AlertmanagerConfig/#3-alertmanagerconfig","text":"\u4e3a\u6b64 Prometheus-Operator \u65b0\u589e\u4e86\u4e00\u4e2a AlertmanagerConfig \u7684 CRD\uff0c\u6bd4\u5982\u6211\u4eec\u5c06 Critical \u8fd9\u4e2a\u63a5\u6536\u5668\u7684\u62a5\u8b66\u4fe1\u606f\u90fd\u53d1\u9001\u5230\u9489\u9489\u8fdb\u884c\u62a5\u8b66\u3002 \u9996\u5148\u5728 monitoring \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u90e8\u7f72\u4e00\u4e2a\u7b80\u5355\u7684\u9489\u9489 webhook \u5904\u7406\u5668\uff0c\u524d\u9762 Alertmanager \u7ae0\u8282\u5df2\u7ecf\u5b66\u4e60\u8fc7\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002 \u7136\u540e\u65b0\u5efa\u4e00\u4e2a AlertmanagerConfig \u7c7b\u578b\u7684\u8d44\u6e90\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7 kubectl explain alertmanagerconfig \u6216\u8005\u5728\u7ebf API \u6587\u6863( https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/alerting.md )\u6765\u67e5\u770b\u5b57\u6bb5\u7684\u542b\u4e49 # alertmanager-config.yaml apiVersion: monitoring.coreos.com/v1alpha1 kind: AlertmanagerConfig metadata: name: dinghook namespace: monitoring labels: alertmanagerConfig: example spec: receivers: - name: Critical webhookConfigs: - url: http://dingtalk-hook:5000 sendResolved: true route: groupBy: [\"namespace\"] groupWait: 30s groupInterval: 5m repeatInterval: 12h receiver: Critical routes: - receiver: Critical match: severity: critical \u4e0d\u8fc7\u5982\u679c\u76f4\u63a5\u521b\u5efa\u4e0a\u9762\u7684\u914d\u7f6e\u662f\u4e0d\u4f1a\u751f\u6548\u7684\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a Label \u6807\u7b7e\uff0c\u5e76\u5728 Alertmanager \u7684\u8d44\u6e90\u5bf9\u8c61\u4e2d\u901a\u8fc7\u6807\u7b7e\u6765\u5173\u8054\u4e0a\u9762\u7684\u8fd9\u4e2a\u5bf9\u8c61\uff0c \u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u65b0\u589e\u4e86\u4e00\u4e2a Label \u6807\u7b7e\uff1a alertmanagerConfig: example \uff0c\u7136\u540e\u9700\u8981\u91cd\u65b0\u66f4\u65b0 Alertmanager \u5bf9\u8c61\uff0c\u6dfb\u52a0 alertmanagerConfigSelector \u5c5e\u6027\u53bb\u5339\u914d AlertmanagerConfig \u8d44\u6e90\u5bf9\u8c61 \uff1a # alertmanager-alertmanager.yaml apiVersion: monitoring.coreos.com/v1 kind: Alertmanager metadata: labels: alertmanager: main name: main namespace: monitoring spec: image: quay.io/prometheus/alertmanager:v0.21.0 nodeSelector: kubernetes.io/os: linux replicas: 3 securityContext: fsGroup: 2000 runAsNonRoot: true runAsUser: 1000 serviceAccountName: alertmanager-main version: v0.21.0 configSecret: alertmanagerConfigSelector: # \u5339\u914d AlertmanagerConfig \u7684\u6807\u7b7e matchLabels: alertmanagerConfig: example \u73b0\u5728\u6211\u4eec\u91cd\u65b0\u66f4\u65b0\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\uff1a kubectl apply -f alertmanager-config.yaml kubectl apply -f alertmanager-alertmanager.yaml \u66f4\u65b0\u5b8c\u6210\u540e\u9ed8\u8ba4\u7684\u914d\u7f6e\u4f1a\u548c\u6211\u4eec\u521b\u5efa\u7684\u914d\u7f6e\u8fdb\u884c\u5408\u5e76\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u67e5\u770b\u751f\u6210\u7684 Secret \u8d44\u6e90\u5bf9\u8c61\u5185\u5bb9\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b Alertmanager \u7684 WEB UI \u754c\u9762\u7684\u914d\u7f6e\u5185\u5bb9\uff1a \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728 AlertmanagerConfig \u91cc\u9762\u5b9a\u4e49\u7684\u540d\u4e3a Critical \u7684 Receiver\uff0c\u5728\u6700\u7ec8\u751f\u6210\u7684\u914d\u7f6e\u4e2d\u540d\u79f0\u4e86 monitoring-dinghook-Critical \uff0c\u683c\u5f0f\u4e3a <namespace>-<name>-<receiver name> \u3002","title":"3 AlertmanagerConfig"},{"location":"chap4/49Prometheus_SLI_SLO/","text":"\u7b2c\u5341\u4e8c\u8282 \u901a\u8fc7Prometheus\u6765\u505aSLI/SLO\u76d1\u63a7\u5c55\u793a Service level operator\u6709\u70b9\u610f\u601d\uff0c\u628a\u670d\u52a1SLI/SLO\u62bd\u8c61\u6210operator\u7684\u60f3\u6cd5\u5c31\u5f88\u8fd0\u7ef4 1 \u4ec0\u4e48\u662fSLI/SLO SLI\uff0c\u5168\u540dService Level Indicator\uff0c \u662f\u670d\u52a1\u7b49\u7ea7\u6307\u6807\u7684\u7b80\u79f0 \uff0c\u5b83\u662f\u8861\u5b9a\u7cfb\u7edf\u7a33\u5b9a\u6027\u7684\u6307\u6807 \u3002 SLO\uff0c\u5168\u540dSevice Level Objective\uff0c\u662f\u670d\u52a1\u7b49\u7ea7\u76ee\u6807\u7684\u7b80\u79f0 \uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8bbe\u5b9a\u7684\u7a33\u5b9a\u6027\u76ee\u6807\uff0c\u6bd4\u5982\"4\u4e2a9\"\uff0c\"5\u4e2a9\"\u7b49 \u3002 SRE\u901a\u5e38\u901a\u8fc7\u8fd9\u4e24\u4e2a\u6307\u6807\u6765\u8861\u91cf\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u5176\u4e3b\u8981\u601d\u8def\u5c31\u662f\u901a\u8fc7SLI\u6765\u5224\u65adSLO\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u6307\u6807\u6765\u8861\u91cf\u6211\u4eec\u7684\u76ee\u6807\u662f\u5426\u8fbe\u5230\u4e86\"\u51e0\u4e2a9\"\u3002 2 \u5982\u4f55\u9009\u62e9SLI \u5728\u7cfb\u7edf\u4e2d\uff0c\u5e38\u89c1\u7684\u6307\u6807\u6709\u5f88\u591a\u79cd\uff0c\u6bd4\u5982\uff1a \u7cfb\u7edf\u5c42\u9762\uff1aCPU\u4f7f\u7528\u7387\u3001\u5185\u5b58\u4f7f\u7528\u7387\u3001\u78c1\u76d8\u4f7f\u7528\u7387\u7b49 \u5e94\u7528\u670d\u52a1\u5668\u5c42\u9762\uff1a\u7aef\u53e3\u5b58\u6d3b\u72b6\u6001\u3001JVM\u7684\u72b6\u6001\u7b49 \u5e94\u7528\u8fd0\u884c\u5c42\u9762\uff1a\u72b6\u6001\u7801\u3001\u65f6\u5ef6\u3001QPS\u7b49 \u4e2d\u95f4\u4ef6\u5c42\u9762\uff1aQPS\u3001TPS\u3001\u65f6\u5ef6\u7b49 \u4e1a\u52a1\u5c42\u9762\uff1a\u6210\u529f\u7387\u3001\u589e\u957f\u901f\u5ea6\u7b49 \u8fd9\u4e48\u591a\u6307\u6807\uff0c\u5e94\u8be5\u5982\u4f55\u9009\u62e9\u5462\uff1f\u53ea\u8981\u9075\u4ece\u4e24\u4e2a\u539f\u5219\u5c31\u53ef\u4ee5\uff1a \u9009\u62e9\u80fd\u591f\u6807\u8bc6\u4e00\u4e2a\u4e3b\u4f53\u662f\u5426\u7a33\u5b9a\u7684\u6307\u6807\uff0c\u5982\u679c\u4e0d\u662f\u8fd9\u4e2a\u4e3b\u4f53\u672c\u8eab\u7684\u6307\u6807\uff0c\u6216\u8005\u4e0d\u80fd\u6807\u8bc6\u4e3b\u4f53\u7a33\u5b9a\u6027\u7684\uff0c\u5c31\u8981\u6392\u9664\u5728\u5916\u3002 \u4f18\u5148\u9009\u62e9\u4e0e\u7528\u6237\u4f53\u9a8c\u5f3a\u76f8\u5173\u6216\u7528\u6237\u53ef\u4ee5\u660e\u663e\u611f\u77e5\u7684\u6307\u6807\u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8c37\u6b4c\u7684VALET\u6307\u6807\u65b9\u6cd5\u3002 V\uff1aVolume\uff0c\u5bb9\u91cf\uff0c\u670d\u52a1\u627f\u8bfa\u7684\u6700\u5927\u5bb9\u91cf A\uff1aAvailability\uff0c\u53ef\u7528\u6027\uff0c\u670d\u52a1\u662f\u5426\u6b63\u5e38 L\uff1aLatency\uff0c\u5ef6\u8fdf\uff0c\u670d\u52a1\u7684\u54cd\u5e94\u65f6\u95f4 E\uff1aError\uff0c\u9519\u8bef\u7387\uff0c\u8bf7\u6c42\u9519\u8bef\u7387\u662f\u591a\u5c11 T\uff1aTicket\uff0c\u4eba\u5de5\u4ecb\u5165\uff0c\u662f\u5426\u9700\u8981\u4eba\u5de5\u4ecb\u5165 \u8fd9\u5c31\u662f\u8c37\u6b4c\u4f7f\u7528VALET\u65b9\u6cd5\u7ed9\u7684\u6837\u4f8b\u3002 \u4e0a\u9762\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u4ecb\u7ecd\u4e86\u4e00\u4e0bSLI/SLO\uff0c\u66f4\u591a\u7684\u77e5\u8bc6\u53ef\u4ee5\u5b66\u4e60\u300aSRE\uff1aGoogle\u8fd0\u7ef4\u89e3\u5bc6\u300b\u548c\u8d75\u6210\u8001\u5e08\u7684\u6781\u5ba2\u65f6\u95f4\u8bfe\u7a0b\u300aSRE\u5b9e\u8df5\u624b\u518c\u300b\u3002\u4e0b\u9762\u6765\u7b80\u5355\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528Prometheus\u6765\u8fdb\u884cSLI/SLO\u76d1\u63a7\u3002 service-level-operator Service level operator\u662f\u4e3a\u4e86Kubernetes\u4e2d\u7684\u5e94\u7528SLI/SLO\u6307\u6807\u6765\u8861\u91cf\u5e94\u7528\u7684\u670d\u52a1\u6307\u6807\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7Grafana\u6765\u8fdb\u884c\u5c55\u793a\u3002 Operator\u4e3b\u8981\u662f\u901a\u8fc7SLO\u6765\u67e5\u770b\u548c\u521b\u5efa\u65b0\u7684\u6307\u6807\u3002\u4f8b\u5982\uff1a https://github.com/spotahome/service-level-operator apiVersion: monitoring.spotahome.com/v1alpha1 kind: ServiceLevel metadata: name: awesome-service spec: serviceLevelObjectives: - name: \"9999_http_request_lt_500\" description: 99.99% of requests must be served with <500 status code. disable: false availabilityObjectivePercent: 99.99 serviceLevelIndicator: prometheus: address: http://myprometheus:9090 totalQuery: sum(increase(http_request_total{host=\"awesome_service_io\"}[2m])) errorQuery: sum(increase(http_request_total{host=\"awesome_service_io\", code=~\"5..\"}[2m])) output: prometheus: labels: team: a-team iteration: \"3\" availabilityObjectivePercent\uff1aSLO totalQuery\uff1a\u603b\u8bf7\u6c42\u6570 errorQuery\uff1a\u9519\u8bef\u8bf7\u6c42\u6570 Operator\u901a\u8fc7totalQuert\u548cerrorQuery\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51faSLO\u7684\u6307\u6807\u4e86\u3002 3 \u90e8\u7f72service-level-operator \u524d\u63d0\uff1a\u5728Kubernetes\u96c6\u7fa4\u4e2d\u90e8\u7f72\u597dPrometheus\uff0c\u6211\u8fd9\u91cc\u662f\u91c7\u7528Prometheus-Operator\u65b9\u5f0f\u8fdb\u884c\u90e8\u7f72\u7684\u3002 \u9996\u5148\u521b\u5efaRBAC apiVersion: v1 kind: ServiceAccount metadata: name: service-level-operator namespace: monitoring labels: app: service-level-operator component: app --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: service-level-operator labels: app: service-level-operator component: app rules: # Register and check CRDs. - apiGroups: - apiextensions.k8s.io resources: - customresourcedefinitions verbs: - \"*\" # Operator logic. - apiGroups: - monitoring.spotahome.com resources: - servicelevels - servicelevels/status verbs: - \"*\" --- kind: ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1 metadata: name: service-level-operator subjects: - kind: ServiceAccount name: service-level-operator namespace: monitoring roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: service-level-operator \u7136\u540e\u521b\u5efaDeployment apiVersion: apps/v1 kind: Deployment metadata: name: service-level-operator namespace: monitoring labels: app: service-level-operator component: app spec: replicas: 1 selector: matchLabels: app: service-level-operator component: app strategy: rollingUpdate: maxUnavailable: 0 template: metadata: labels: app: service-level-operator component: app spec: serviceAccountName: service-level-operator containers: - name: app imagePullPolicy: Always image: quay.io/spotahome/service-level-operator:latest ports: - containerPort: 8080 name: http protocol: TCP readinessProbe: httpGet: path: /healthz/ready port: http livenessProbe: httpGet: path: /healthz/live port: http resources: limits: cpu: 220m memory: 254Mi requests: cpu: 120m memory: 128Mi \u521b\u5efaservice apiVersion: v1 kind: Service metadata: name: service-level-operator namespace: monitoring labels: app: service-level-operator component: app spec: ports: - port: 80 protocol: TCP name: http targetPort: http selector: app: service-level-operator component: app \u521b\u5efaprometheus serviceMonitor apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: service-level-operator namespace: monitoring labels: app: service-level-operator component: app prometheus: myprometheus spec: selector: matchLabels: app: service-level-operator component: app namespaceSelector: matchNames: - monitoring endpoints: - port: http interval: 10s \u5230\u8fd9\u91cc\uff0cService Level Operator\u90e8\u7f72\u5b8c\u6210\u4e86\uff0c\u53ef\u4ee5\u5728prometheus\u4e0a\u67e5\u770b\u5230\u5bf9\u5e94\u7684Target\uff0c\u5982\u4e0b\uff1a \u7136\u540e\u5c31\u9700\u8981\u521b\u5efa\u5bf9\u5e94\u7684\u670d\u52a1\u6307\u6807\u4e86\uff0c\u5982\u4e0b\u6240\u793a\u521b\u5efa\u4e00\u4e2a\u793a\u4f8b\u3002 apiVersion: monitoring.spotahome.com/v1alpha1 kind: ServiceLevel metadata: name: prometheus-grafana-service namespace: monitoring spec: serviceLevelObjectives: - name: \"9999_http_request_lt_500\" description: 99.99% of requests must be served with <500 status code. disable: false availabilityObjectivePercent: 99.99 serviceLevelIndicator: prometheus: address: http://prometheus-k8s.monitoring.svc:9090 totalQuery: sum(increase(http_request_total{service=\"grafana\"}[2m])) errorQuery: sum(increase(http_request_total{service=\"grafana\", code=~\"5..\"}[2m])) output: prometheus: labels: team: prometheus-grafana iteration: \"3\" \u4e0a\u9762\u5b9a\u4e49\u4e86grafana\u5e94\u7528\"4\u4e2a9\"\u7684SLO\u3002 \u7136\u540e\u53ef\u4ee5\u5728Prometheus\u4e0a\u770b\u5230\u5177\u4f53\u7684\u6307\u6807\uff0c\u5982\u4e0b\u3002 \u63a5\u4e0b\u6765\u5728Grafana\u4e0a\u5bfc\u5165ID\u4e3a 8793 \u7684Dashboard\uff0c\u5373\u53ef\u751f\u6210\u5982\u4e0b\u56fe\u8868\u3002 \u4e0a\u9762\u662fSLI\uff0c\u4e0b\u9762\u662f\u9519\u8bef\u603b\u9884\u7b97\u548c\u5df2\u6d88\u8017\u7684\u9519\u8bef\u3002 \u4e0b\u9762\u53ef\u4ee5\u5b9a\u4e49\u544a\u8b66\u89c4\u5219\uff0c\u5f53SLO\u4e0b\u964d\u65f6\u53ef\u4ee5\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\uff0c\u6bd4\u5982\uff1a groups: - name: slo.rules rules: - alert: SLOErrorRateTooFast1h expr: | ( increase(service_level_sli_result_error_ratio_total[1h]) / increase(service_level_sli_result_count_total[1h]) ) > (1 - service_level_slo_objective_ratio) * 14.6 labels: severity: critical team: a-team annotations: summary: The monthly SLO error budget consumed for 1h is greater than 2% description: The error rate for 1h in the {{$labels.service_level}}/{{$labels.slo}} SLO error budget is being consumed too fast, is greater than 2% monthly budget. - alert: SLOErrorRateTooFast6h expr: | ( increase(service_level_sli_result_error_ratio_total[6h]) / increase(service_level_sli_result_count_total[6h]) ) > (1 - service_level_slo_objective_ratio) * 6 labels: severity: critical team: a-team annotations: summary: The monthly SLO error budget consumed for 6h is greater than 5% description: The error rate for 6h in the {{$labels.service_level}}/{{$labels.slo}} SLO error budget is being consumed too fast, is greater than 5% monthly budget. \u7b2c\u4e00\u6761\u89c4\u5219\u8868\u793a\u57281h\u5185\u6d88\u8017\u7684\u9519\u8bef\u7387\u5927\u4e8e30\u5929\u5185\u76842%\uff0c\u5e94\u8be5\u544a\u8b66\u3002\u7b2c\u4e8c\u6761\u89c4\u5219\u662f\u57286h\u5185\u7684\u9519\u8bef\u7387\u5927\u4e8e30\u5929\u76845%\uff0c\u5e94\u8be5\u544a\u8b66\u3002 \u4e0b\u9762\u662f\u8c37\u6b4c\u7684\u7684\u57fa\u51c6\u3002 4 \u6700\u540e \u8bf4\u5230\u7cfb\u7edf\u7a33\u5b9a\u6027\uff0c\u8fd9\u91cc\u4e0d\u5f97\u4e0d\u63d0\u5230\u7cfb\u7edf\u53ef\u7528\u6027\uff0cSRE\u63d0\u9ad8\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u6700\u7ec8\u8fd8\u662f\u4e3a\u4e86\u63d0\u5347\u7cfb\u7edf\u7684\u53ef\u7528\u65f6\u95f4\uff0c\u51cf\u5c11\u6545\u969c\u65f6\u95f4\u3002\u90a3\u5982\u4f55\u6765\u8861\u91cf\u7cfb\u7edf\u7684\u53ef\u7528\u6027\u5462\uff1f \u76ee\u524d\u4e1a\u754c\u6709\u4e24\u79cd\u8861\u91cf\u7cfb\u7edf\u53ef\u7528\u6027\u7684\u65b9\u5f0f\uff0c\u4e00\u4e2a\u662f\u65f6\u95f4\u7ef4\u5ea6\uff0c\u4e00\u4e2a\u662f\u8bf7\u6c42\u7ef4\u5ea6\u3002\u65f6\u95f4\u7ef4\u5ea6\u5c31\u662f\u4ece\u6545\u969c\u51fa\u53d1\u5bf9\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u8fdb\u884c\u8bc4\u4f30\u3002\u8bf7\u6c42\u7ef4\u5ea6\u662f\u4ece\u6210\u529f\u8bf7\u6c42\u5360\u6bd4\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u5bf9\u7cfb\u7edf\u7a33\u5b9a\u6027\u8fdb\u884c\u8bc4\u4f30\u3002 \u65f6\u95f4\u7ef4\u5ea6\uff1a\u53ef\u7528\u6027 = \u670d\u52a1\u65f6\u95f4 / \uff08\u670d\u52a1\u65f6\u95f4 + \u6545\u969c\u65f6\u95f4\uff09 \u8bf7\u6c42\u7ef4\u5ea6\uff1a\u53ef\u7528\u6027 = \u6210\u529f\u8bf7\u6c42\u6570 / \u603b\u8bf7\u6c42\u6570 \u5728SRE\u5b9e\u8df5\u4e2d\uff0c\u901a\u5e38\u4f1a\u9009\u62e9\u8bf7\u6c42\u7ef4\u5ea6\u6765\u8861\u91cf\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u5c31\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u4ec5\u4ec5\u901a\u8fc7\u4e00\u4e2a\u7ef4\u5ea6\u6765\u5224\u65ad\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u4e5f\u6709\u70b9\u592a\u6b66\u65ad\uff0c\u8fd8\u5e94\u8be5\u7ed3\u5408\u66f4\u591a\u7684\u6307\u6807\uff0c\u6bd4\u5982\u5ef6\u8fdf\uff0c\u9519\u8bef\u7387\u7b49\uff0c\u800c\u4e14\u5bf9\u6838\u5fc3\u5e94\u7528\uff0c\u6838\u5fc3\u94fe\u8def\u7684SLI\u5e94\u8be5\u66f4\u7ec6\u81f4\u3002","title":"\u7b2c\u5341\u4e8c\u8282 \u901a\u8fc7Prometheus\u6765\u505aSLI/SLO\u76d1\u63a7\u5c55\u793a"},{"location":"chap4/49Prometheus_SLI_SLO/#prometheusslislo","text":"Service level operator\u6709\u70b9\u610f\u601d\uff0c\u628a\u670d\u52a1SLI/SLO\u62bd\u8c61\u6210operator\u7684\u60f3\u6cd5\u5c31\u5f88\u8fd0\u7ef4","title":"\u7b2c\u5341\u4e8c\u8282 \u901a\u8fc7Prometheus\u6765\u505aSLI/SLO\u76d1\u63a7\u5c55\u793a"},{"location":"chap4/49Prometheus_SLI_SLO/#1-slislo","text":"SLI\uff0c\u5168\u540dService Level Indicator\uff0c \u662f\u670d\u52a1\u7b49\u7ea7\u6307\u6807\u7684\u7b80\u79f0 \uff0c\u5b83\u662f\u8861\u5b9a\u7cfb\u7edf\u7a33\u5b9a\u6027\u7684\u6307\u6807 \u3002 SLO\uff0c\u5168\u540dSevice Level Objective\uff0c\u662f\u670d\u52a1\u7b49\u7ea7\u76ee\u6807\u7684\u7b80\u79f0 \uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8bbe\u5b9a\u7684\u7a33\u5b9a\u6027\u76ee\u6807\uff0c\u6bd4\u5982\"4\u4e2a9\"\uff0c\"5\u4e2a9\"\u7b49 \u3002 SRE\u901a\u5e38\u901a\u8fc7\u8fd9\u4e24\u4e2a\u6307\u6807\u6765\u8861\u91cf\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u5176\u4e3b\u8981\u601d\u8def\u5c31\u662f\u901a\u8fc7SLI\u6765\u5224\u65adSLO\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u6307\u6807\u6765\u8861\u91cf\u6211\u4eec\u7684\u76ee\u6807\u662f\u5426\u8fbe\u5230\u4e86\"\u51e0\u4e2a9\"\u3002","title":"1 \u4ec0\u4e48\u662fSLI/SLO"},{"location":"chap4/49Prometheus_SLI_SLO/#2-sli","text":"\u5728\u7cfb\u7edf\u4e2d\uff0c\u5e38\u89c1\u7684\u6307\u6807\u6709\u5f88\u591a\u79cd\uff0c\u6bd4\u5982\uff1a \u7cfb\u7edf\u5c42\u9762\uff1aCPU\u4f7f\u7528\u7387\u3001\u5185\u5b58\u4f7f\u7528\u7387\u3001\u78c1\u76d8\u4f7f\u7528\u7387\u7b49 \u5e94\u7528\u670d\u52a1\u5668\u5c42\u9762\uff1a\u7aef\u53e3\u5b58\u6d3b\u72b6\u6001\u3001JVM\u7684\u72b6\u6001\u7b49 \u5e94\u7528\u8fd0\u884c\u5c42\u9762\uff1a\u72b6\u6001\u7801\u3001\u65f6\u5ef6\u3001QPS\u7b49 \u4e2d\u95f4\u4ef6\u5c42\u9762\uff1aQPS\u3001TPS\u3001\u65f6\u5ef6\u7b49 \u4e1a\u52a1\u5c42\u9762\uff1a\u6210\u529f\u7387\u3001\u589e\u957f\u901f\u5ea6\u7b49 \u8fd9\u4e48\u591a\u6307\u6807\uff0c\u5e94\u8be5\u5982\u4f55\u9009\u62e9\u5462\uff1f\u53ea\u8981\u9075\u4ece\u4e24\u4e2a\u539f\u5219\u5c31\u53ef\u4ee5\uff1a \u9009\u62e9\u80fd\u591f\u6807\u8bc6\u4e00\u4e2a\u4e3b\u4f53\u662f\u5426\u7a33\u5b9a\u7684\u6307\u6807\uff0c\u5982\u679c\u4e0d\u662f\u8fd9\u4e2a\u4e3b\u4f53\u672c\u8eab\u7684\u6307\u6807\uff0c\u6216\u8005\u4e0d\u80fd\u6807\u8bc6\u4e3b\u4f53\u7a33\u5b9a\u6027\u7684\uff0c\u5c31\u8981\u6392\u9664\u5728\u5916\u3002 \u4f18\u5148\u9009\u62e9\u4e0e\u7528\u6237\u4f53\u9a8c\u5f3a\u76f8\u5173\u6216\u7528\u6237\u53ef\u4ee5\u660e\u663e\u611f\u77e5\u7684\u6307\u6807\u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8c37\u6b4c\u7684VALET\u6307\u6807\u65b9\u6cd5\u3002 V\uff1aVolume\uff0c\u5bb9\u91cf\uff0c\u670d\u52a1\u627f\u8bfa\u7684\u6700\u5927\u5bb9\u91cf A\uff1aAvailability\uff0c\u53ef\u7528\u6027\uff0c\u670d\u52a1\u662f\u5426\u6b63\u5e38 L\uff1aLatency\uff0c\u5ef6\u8fdf\uff0c\u670d\u52a1\u7684\u54cd\u5e94\u65f6\u95f4 E\uff1aError\uff0c\u9519\u8bef\u7387\uff0c\u8bf7\u6c42\u9519\u8bef\u7387\u662f\u591a\u5c11 T\uff1aTicket\uff0c\u4eba\u5de5\u4ecb\u5165\uff0c\u662f\u5426\u9700\u8981\u4eba\u5de5\u4ecb\u5165 \u8fd9\u5c31\u662f\u8c37\u6b4c\u4f7f\u7528VALET\u65b9\u6cd5\u7ed9\u7684\u6837\u4f8b\u3002 \u4e0a\u9762\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u4ecb\u7ecd\u4e86\u4e00\u4e0bSLI/SLO\uff0c\u66f4\u591a\u7684\u77e5\u8bc6\u53ef\u4ee5\u5b66\u4e60\u300aSRE\uff1aGoogle\u8fd0\u7ef4\u89e3\u5bc6\u300b\u548c\u8d75\u6210\u8001\u5e08\u7684\u6781\u5ba2\u65f6\u95f4\u8bfe\u7a0b\u300aSRE\u5b9e\u8df5\u624b\u518c\u300b\u3002\u4e0b\u9762\u6765\u7b80\u5355\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528Prometheus\u6765\u8fdb\u884cSLI/SLO\u76d1\u63a7\u3002","title":"2 \u5982\u4f55\u9009\u62e9SLI"},{"location":"chap4/49Prometheus_SLI_SLO/#service-level-operator","text":"Service level operator\u662f\u4e3a\u4e86Kubernetes\u4e2d\u7684\u5e94\u7528SLI/SLO\u6307\u6807\u6765\u8861\u91cf\u5e94\u7528\u7684\u670d\u52a1\u6307\u6807\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7Grafana\u6765\u8fdb\u884c\u5c55\u793a\u3002 Operator\u4e3b\u8981\u662f\u901a\u8fc7SLO\u6765\u67e5\u770b\u548c\u521b\u5efa\u65b0\u7684\u6307\u6807\u3002\u4f8b\u5982\uff1a https://github.com/spotahome/service-level-operator apiVersion: monitoring.spotahome.com/v1alpha1 kind: ServiceLevel metadata: name: awesome-service spec: serviceLevelObjectives: - name: \"9999_http_request_lt_500\" description: 99.99% of requests must be served with <500 status code. disable: false availabilityObjectivePercent: 99.99 serviceLevelIndicator: prometheus: address: http://myprometheus:9090 totalQuery: sum(increase(http_request_total{host=\"awesome_service_io\"}[2m])) errorQuery: sum(increase(http_request_total{host=\"awesome_service_io\", code=~\"5..\"}[2m])) output: prometheus: labels: team: a-team iteration: \"3\" availabilityObjectivePercent\uff1aSLO totalQuery\uff1a\u603b\u8bf7\u6c42\u6570 errorQuery\uff1a\u9519\u8bef\u8bf7\u6c42\u6570 Operator\u901a\u8fc7totalQuert\u548cerrorQuery\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51faSLO\u7684\u6307\u6807\u4e86\u3002","title":"service-level-operator"},{"location":"chap4/49Prometheus_SLI_SLO/#3-service-level-operator","text":"\u524d\u63d0\uff1a\u5728Kubernetes\u96c6\u7fa4\u4e2d\u90e8\u7f72\u597dPrometheus\uff0c\u6211\u8fd9\u91cc\u662f\u91c7\u7528Prometheus-Operator\u65b9\u5f0f\u8fdb\u884c\u90e8\u7f72\u7684\u3002 \u9996\u5148\u521b\u5efaRBAC apiVersion: v1 kind: ServiceAccount metadata: name: service-level-operator namespace: monitoring labels: app: service-level-operator component: app --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: service-level-operator labels: app: service-level-operator component: app rules: # Register and check CRDs. - apiGroups: - apiextensions.k8s.io resources: - customresourcedefinitions verbs: - \"*\" # Operator logic. - apiGroups: - monitoring.spotahome.com resources: - servicelevels - servicelevels/status verbs: - \"*\" --- kind: ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1 metadata: name: service-level-operator subjects: - kind: ServiceAccount name: service-level-operator namespace: monitoring roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: service-level-operator \u7136\u540e\u521b\u5efaDeployment apiVersion: apps/v1 kind: Deployment metadata: name: service-level-operator namespace: monitoring labels: app: service-level-operator component: app spec: replicas: 1 selector: matchLabels: app: service-level-operator component: app strategy: rollingUpdate: maxUnavailable: 0 template: metadata: labels: app: service-level-operator component: app spec: serviceAccountName: service-level-operator containers: - name: app imagePullPolicy: Always image: quay.io/spotahome/service-level-operator:latest ports: - containerPort: 8080 name: http protocol: TCP readinessProbe: httpGet: path: /healthz/ready port: http livenessProbe: httpGet: path: /healthz/live port: http resources: limits: cpu: 220m memory: 254Mi requests: cpu: 120m memory: 128Mi \u521b\u5efaservice apiVersion: v1 kind: Service metadata: name: service-level-operator namespace: monitoring labels: app: service-level-operator component: app spec: ports: - port: 80 protocol: TCP name: http targetPort: http selector: app: service-level-operator component: app \u521b\u5efaprometheus serviceMonitor apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: service-level-operator namespace: monitoring labels: app: service-level-operator component: app prometheus: myprometheus spec: selector: matchLabels: app: service-level-operator component: app namespaceSelector: matchNames: - monitoring endpoints: - port: http interval: 10s \u5230\u8fd9\u91cc\uff0cService Level Operator\u90e8\u7f72\u5b8c\u6210\u4e86\uff0c\u53ef\u4ee5\u5728prometheus\u4e0a\u67e5\u770b\u5230\u5bf9\u5e94\u7684Target\uff0c\u5982\u4e0b\uff1a \u7136\u540e\u5c31\u9700\u8981\u521b\u5efa\u5bf9\u5e94\u7684\u670d\u52a1\u6307\u6807\u4e86\uff0c\u5982\u4e0b\u6240\u793a\u521b\u5efa\u4e00\u4e2a\u793a\u4f8b\u3002 apiVersion: monitoring.spotahome.com/v1alpha1 kind: ServiceLevel metadata: name: prometheus-grafana-service namespace: monitoring spec: serviceLevelObjectives: - name: \"9999_http_request_lt_500\" description: 99.99% of requests must be served with <500 status code. disable: false availabilityObjectivePercent: 99.99 serviceLevelIndicator: prometheus: address: http://prometheus-k8s.monitoring.svc:9090 totalQuery: sum(increase(http_request_total{service=\"grafana\"}[2m])) errorQuery: sum(increase(http_request_total{service=\"grafana\", code=~\"5..\"}[2m])) output: prometheus: labels: team: prometheus-grafana iteration: \"3\" \u4e0a\u9762\u5b9a\u4e49\u4e86grafana\u5e94\u7528\"4\u4e2a9\"\u7684SLO\u3002 \u7136\u540e\u53ef\u4ee5\u5728Prometheus\u4e0a\u770b\u5230\u5177\u4f53\u7684\u6307\u6807\uff0c\u5982\u4e0b\u3002 \u63a5\u4e0b\u6765\u5728Grafana\u4e0a\u5bfc\u5165ID\u4e3a 8793 \u7684Dashboard\uff0c\u5373\u53ef\u751f\u6210\u5982\u4e0b\u56fe\u8868\u3002 \u4e0a\u9762\u662fSLI\uff0c\u4e0b\u9762\u662f\u9519\u8bef\u603b\u9884\u7b97\u548c\u5df2\u6d88\u8017\u7684\u9519\u8bef\u3002 \u4e0b\u9762\u53ef\u4ee5\u5b9a\u4e49\u544a\u8b66\u89c4\u5219\uff0c\u5f53SLO\u4e0b\u964d\u65f6\u53ef\u4ee5\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\uff0c\u6bd4\u5982\uff1a groups: - name: slo.rules rules: - alert: SLOErrorRateTooFast1h expr: | ( increase(service_level_sli_result_error_ratio_total[1h]) / increase(service_level_sli_result_count_total[1h]) ) > (1 - service_level_slo_objective_ratio) * 14.6 labels: severity: critical team: a-team annotations: summary: The monthly SLO error budget consumed for 1h is greater than 2% description: The error rate for 1h in the {{$labels.service_level}}/{{$labels.slo}} SLO error budget is being consumed too fast, is greater than 2% monthly budget. - alert: SLOErrorRateTooFast6h expr: | ( increase(service_level_sli_result_error_ratio_total[6h]) / increase(service_level_sli_result_count_total[6h]) ) > (1 - service_level_slo_objective_ratio) * 6 labels: severity: critical team: a-team annotations: summary: The monthly SLO error budget consumed for 6h is greater than 5% description: The error rate for 6h in the {{$labels.service_level}}/{{$labels.slo}} SLO error budget is being consumed too fast, is greater than 5% monthly budget. \u7b2c\u4e00\u6761\u89c4\u5219\u8868\u793a\u57281h\u5185\u6d88\u8017\u7684\u9519\u8bef\u7387\u5927\u4e8e30\u5929\u5185\u76842%\uff0c\u5e94\u8be5\u544a\u8b66\u3002\u7b2c\u4e8c\u6761\u89c4\u5219\u662f\u57286h\u5185\u7684\u9519\u8bef\u7387\u5927\u4e8e30\u5929\u76845%\uff0c\u5e94\u8be5\u544a\u8b66\u3002 \u4e0b\u9762\u662f\u8c37\u6b4c\u7684\u7684\u57fa\u51c6\u3002","title":"3 \u90e8\u7f72service-level-operator"},{"location":"chap4/49Prometheus_SLI_SLO/#4","text":"\u8bf4\u5230\u7cfb\u7edf\u7a33\u5b9a\u6027\uff0c\u8fd9\u91cc\u4e0d\u5f97\u4e0d\u63d0\u5230\u7cfb\u7edf\u53ef\u7528\u6027\uff0cSRE\u63d0\u9ad8\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u6700\u7ec8\u8fd8\u662f\u4e3a\u4e86\u63d0\u5347\u7cfb\u7edf\u7684\u53ef\u7528\u65f6\u95f4\uff0c\u51cf\u5c11\u6545\u969c\u65f6\u95f4\u3002\u90a3\u5982\u4f55\u6765\u8861\u91cf\u7cfb\u7edf\u7684\u53ef\u7528\u6027\u5462\uff1f \u76ee\u524d\u4e1a\u754c\u6709\u4e24\u79cd\u8861\u91cf\u7cfb\u7edf\u53ef\u7528\u6027\u7684\u65b9\u5f0f\uff0c\u4e00\u4e2a\u662f\u65f6\u95f4\u7ef4\u5ea6\uff0c\u4e00\u4e2a\u662f\u8bf7\u6c42\u7ef4\u5ea6\u3002\u65f6\u95f4\u7ef4\u5ea6\u5c31\u662f\u4ece\u6545\u969c\u51fa\u53d1\u5bf9\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u8fdb\u884c\u8bc4\u4f30\u3002\u8bf7\u6c42\u7ef4\u5ea6\u662f\u4ece\u6210\u529f\u8bf7\u6c42\u5360\u6bd4\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u5bf9\u7cfb\u7edf\u7a33\u5b9a\u6027\u8fdb\u884c\u8bc4\u4f30\u3002 \u65f6\u95f4\u7ef4\u5ea6\uff1a\u53ef\u7528\u6027 = \u670d\u52a1\u65f6\u95f4 / \uff08\u670d\u52a1\u65f6\u95f4 + \u6545\u969c\u65f6\u95f4\uff09 \u8bf7\u6c42\u7ef4\u5ea6\uff1a\u53ef\u7528\u6027 = \u6210\u529f\u8bf7\u6c42\u6570 / \u603b\u8bf7\u6c42\u6570 \u5728SRE\u5b9e\u8df5\u4e2d\uff0c\u901a\u5e38\u4f1a\u9009\u62e9\u8bf7\u6c42\u7ef4\u5ea6\u6765\u8861\u91cf\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u5c31\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u4ec5\u4ec5\u901a\u8fc7\u4e00\u4e2a\u7ef4\u5ea6\u6765\u5224\u65ad\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u4e5f\u6709\u70b9\u592a\u6b66\u65ad\uff0c\u8fd8\u5e94\u8be5\u7ed3\u5408\u66f4\u591a\u7684\u6307\u6807\uff0c\u6bd4\u5982\u5ef6\u8fdf\uff0c\u9519\u8bef\u7387\u7b49\uff0c\u800c\u4e14\u5bf9\u6838\u5fc3\u5e94\u7528\uff0c\u6838\u5fc3\u94fe\u8def\u7684SLI\u5e94\u8be5\u66f4\u7ec6\u81f4\u3002","title":"4 \u6700\u540e"},{"location":"chap4/51missing-container-metrics/","text":"\u7b2c\u5341\u4e09\u8282 Prometheus \u4f7f\u7528 missing-container-metrics \u76d1\u63a7 Pod oomkill Kubernetes \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528 cAdvisor \u6765\u6536\u96c6\u5bb9\u5668\u7684\u5404\u9879\u6307\u6807\uff0c\u8db3\u4ee5\u6ee1\u8db3\u5927\u591a\u6570\u4eba\u7684\u9700\u6c42\uff0c\u4f46\u8fd8\u662f\u6709\u6240\u6b20\u7f3a\uff0c\u6bd4\u5982\u7f3a\u5c11\u5bf9\u4ee5\u4e0b\u51e0\u4e2a\u6307\u6807\u7684\u6536\u96c6\uff1a OOM kill \u5bb9\u5668\u91cd\u542f\u7684\u6b21\u6570 \u5bb9\u5668\u7684\u9000\u51fa\u7801 missing-container-metrics \u8fd9\u4e2a\u9879\u76ee\u5f25\u8865\u4e86 cAdvisor \u7684\u7f3a\u9677\uff0c\u65b0\u589e\u4e86\u4ee5\u4e0a\u51e0\u4e2a\u6307\u6807\uff0c\u96c6\u7fa4\u7ba1\u7406\u5458\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u6307\u6807\u8fc5\u901f\u5b9a\u4f4d\u67d0\u4e9b\u6545\u969c\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a\u5bb9\u5668\u6709\u591a\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5176\u4e2d\u67d0\u4e2a\u5b50\u8fdb\u7a0b\u88ab OOM kill\uff0c\u4f46\u5bb9\u5668\u8fd8\u5728\u8fd0\u884c\uff0c\u5982\u679c\u4e0d\u5bf9 OOM kill \u8fdb\u884c\u76d1\u63a7\uff0c\u7ba1\u7406\u5458\u5f88\u96be\u5bf9\u6545\u969c\u8fdb\u884c\u5b9a\u4f4d\u3002 1 \u5b89\u88c5 \u5b98\u65b9\u63d0\u4f9b\u4e86helm chart\u65b9\u5f0f\u6765\u8fdb\u884c\u5b89\u88c5\uff0c\u6211\u4eec\u5148\u6dfb\u52a0helm\u4ed3\u5e93 helm repo add missing-container-metrics https://draganm.github.io/missing-container-metrics \u628a\u8fd9\u4e2achart\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539value.yaml\u6587\u4ef6 [root@master-01 addons]# helm pull missing-container-metrics/missing-container-metrics [root@master-01 addons]# ls blackbox dingtalk harbor_exporter mysql-exporter prometheusalert rules servicemonitor victoriametrics blackbox-probe etcd missing-container-metrics-0.1.1.tgz process-exporter redis-exporter scheduler-controller-svc.yaml ssl-exporter [root@master-01 addons]# tar xf missing-container-metrics-0.1.1.tgz \u53ef\u914d\u7f6e\u9879 \u6211\u4eec\u8fd9\u91cc\u4fee\u6539 missing-container-metrics/values.yaml \u4e2d useDocker\u4e3atrue \uff0c\u7136\u540e\u5b89\u88c5 [root@master-01 addons]# kubectl create namespace missing-container-metrics namespace/missing-container-metrics created [root@master-01 addons]# helm install missing-container-metrics missing-container-metrics -n missing-container-metrics NAME: missing-container-metrics LAST DEPLOYED: Tue Jul 6 10:47:35 2021 NAMESPACE: missing-container-metrics STATUS: deployed REVISION: 1 TEST SUITE: None [root@master-01 addons]# helm -n missing-container-metrics list NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION missing-container-metrics missing-container-metrics 1 2021-07-06 10:47:35.261058822 +0800 CST deployed missing-container-metrics-0.1.1 0.21.0 ##\u56e0\u4e3a\u6211\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u8fd9\u91ccdaemonset \u5c31\u53ea\u6709\u4e00\u4e2apod [root@master-01 addons]# kubectl get pod -n missing-container-metrics NAME READY STATUS RESTARTS AGE missing-container-metrics-s9cgk 1/1 Running 0 115s \u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u670d\u52a1\u76843001\u7aef\u53e3\u67e5\u770bmetrics,\u4f8b\u5982 [root@master-01 addons]# curl 100.67.79.150:3001/metrics # HELP container_last_exit_code Last exit code of the container # TYPE container_last_exit_code gauge container_last_exit_code{container_id=\"docker://0133fb5d739ba98b3985bdc7766fa200334bbbf29de9a61f98a463ec00de53de\",container_short_id=\"0133fb5d739b\",docker_container_id=\"0133fb5d739ba98b3985bdc7766fa200334bbbf29de9a61f98a463ec00de53de\",image_id=\"docker-pullable://k8s.gcr.io/pause:3.2\",name=\"k8s_POD_dns-autoscaler-565bf94d6c-dc6v4_kube-system_96437fe8-200c-4845-a7cc-a27790c6c5a7_0\",namespace=\"kube-system\",pod=\"dns-autoscaler-565bf94d6c-dc6v4\"} 0 container_last_exit_code{container_id=\"docker://0388ba15b0181fead17cfc3606a57aeef0a9b8b73cf3f97eb901565c8aa1702c\",container_short_id=\"0388ba15b018\",docker_container_id=\"0388ba15b0181fead17cfc3606a57aeef0a9b8b73cf3f97eb901565c8aa1702c\",image_id=\"docker-pullable://sha256:e20d2ec0d0ed8ffd693b435af9f2943095a608440e3b845331d6d00344025455\",name=\"k8s_victoriametrics_victoriametrics-0_kube-system_7b381d2c-791b-4e38-8cbb-43485afcb285_0\",namespace=\"kube-system\",pod=\"victoriametrics-0\"} 0 container_last_exit_code{container_id=\"docker://0400f7e29dab47304f97669cb52b5c7c9310fbb5c156c07d0dc9bfca6b8ee14d\",container_short_id=\"0400f7e29dab\",docker_container_id=\"0400f7e29dab47304f97669cb52b5c7c9310fbb5c156c07d0dc9bfca6b8ee14d\",image_id=\"docker-pullable://k8s.gcr.io/pause:3.2\",name=\"k8s_POD_csi-resizer-f6d66495f-s4vkv_longhorn-system_282278da-2638-4e26-8411-802bf57c1ed8_0\",namespace=\"longhorn-system\",pod=\"csi-resizer-f6d66495f-s4vkv\"} 0 container_last_exit_code{container_id=\"docker://04e2c60777ce277c62c7137f1d7b40d9c1523bb3edf9127efd357590f39ba79c\",container_short_id=\"04e2c60777ce\",docker_container_id=\"04e2c60777ce277c62c7137f1d7b40d9c1523bb3edf9127efd357590f39ba79c\",image_id=\"docker-pullable://k8s.gcr.io/pause:3.2\",name=\"k8s_POD_kube-state-metrics-859b6bf99-q8tdf_monitoring_529aa188-f7a0-4b5c-9608-cd8fc473ac8c_2\",namespace=\"monitoring\",pod=\"kube-state-metrics-859b6bf99-q8tdf\"} 0 \u670d\u52a1\u516c\u5f00\u4e86\u5982\u4e0b\u7684\u6307\u6807\uff1a container_restarts \uff1a\u5bb9\u5668\u7684\u91cd\u542f\u6b21\u6570\u3002 container_ooms \uff1a\u5bb9\u5668\u7684 OOM \u6740\u6b7b\u6570\u3002\u8fd9\u6db5\u76d6\u4e86\u5bb9\u5668 cgroup \u4e2d\u4efb\u4f55\u8fdb\u7a0b\u7684 OOM \u7ec8\u6b62\u3002 container_last_exit_code \uff1a\u5bb9\u5668\u7684\u6700\u540e\u9000\u51fa\u4ee3\u7801\u3002 \u6bcf\u4e00\u4e2a\u6307\u6807\u5305\u542b\u5982\u4e0b\u6807\u7b7e\uff1a docker_container_id \uff1a\u5bb9\u5668\u7684\u5b8c\u6574 ID\u3002 container_short_id \uff1aDocker \u5bb9\u5668 ID \u7684\u524d 6 \u4e2a\u5b57\u8282\u3002 container_id \uff1a\u5bb9\u5668 id \u4ee5\u4e0e kubernetes pod \u6307\u6807\u76f8\u540c\u7684\u683c\u5f0f\u8868\u793a - \u4ee5\u5bb9\u5668\u8fd0\u884c\u65f6\u4e3a\u524d\u7f00 docker:// \u5e76 containerd:// \u53d6\u51b3\u4e8e\u5bb9\u5668\u8fd0\u884c\u65f6\u3002\u8fd9\u4f7f\u5f97 Prometheus \u4e2d\u7684 kube_pod_container_info \u6307\u6807\u53ef\u4ee5\u8f7b\u677e\u8fde\u63a5\u3002 name \uff1a\u5bb9\u5668\u7684\u540d\u79f0\u3002 image_id \uff1a\u56fe\u50cf id \u4ee5\u4e0e k8s pod \u7684\u6307\u6807\u76f8\u540c\u7684\u683c\u5f0f\u8868\u793a\u3002\u8fd9\u4f7f\u5f97 Prometheus \u4e2d\u7684 kube_pod_container_info \u6307\u6807\u53ef\u4ee5\u8f7b\u677e\u8fde\u63a5\u3002 pod\uff1a\u5982\u679c io.kubernetes.pod.name \u5728\u5bb9\u5668\u4e0a\u8bbe\u7f6e\u4e86pod\u6807\u7b7e\uff0c\u5219\u5176\u503c\u5c06\u8bbe\u7f6e\u4e3a\u6307\u6807\u4e2d\u7684\u6807\u7b7e namespace\uff1a\u5982\u679c io.kubernetes.pod.namespace \u5bb9\u5668\u4e0a\u8bbe\u7f6e\u4e86namespace\u6807\u7b7e\uff0c\u5219\u5176\u503c\u5c06\u8bbe\u7f6e\u4e3a\u6307\u6807\u7684\u6807\u7b7e\u3002 2 \u6dfb\u52a0PodMonitor \u548c PrometheusRule\uff08\u9488\u5bf9Prometheus Operator\uff09 \u5728template\u76ee\u5f55\u4e0b\u521b\u5efa\u6587\u4ef6 podmonitor.yaml {{ if .Values.prometheusOperator.podMonitor.enabled }} apiVersion: monitoring.coreos.com/v1 kind: PodMonitor metadata: name: {{ include \"missing-container-metrics.fullname\" . }} {{- with .Values.prometheusOperator.podMonitor.namespace }} namespace: {{ . }} {{- end }} labels: {{- include \"missing-container-metrics.labels\" . | nindent 4 }} {{- with .Values.prometheusOperator.podMonitor.selector }} {{- toYaml . | nindent 4 }} {{- end }} spec: selector: matchLabels: {{- include \"missing-container-metrics.selectorLabels\" . | nindent 6 }} podMetricsEndpoints: - port: http namespaceSelector: matchNames: - {{ .Release.Namespace }} {{ end }} \u5728template\u76ee\u5f55\u4e0b\u521b\u5efa\u6587\u4ef6 prometheusrule.yaml {{ if .Values.prometheusOperator.prometheusRule.enabled }} apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: name: {{ include \"missing-container-metrics.fullname\" . }} {{- with .Values.prometheusOperator.prometheusRule.namespace }} namespace: {{ . }} {{- end }} labels: {{- include \"missing-container-metrics.labels\" . | nindent 4 }} {{- with .Values.prometheusOperator.prometheusRule.selector }} {{- toYaml . | nindent 4 }} {{- end }} spec: groups: - name: {{ include \"missing-container-metrics.fullname\" . }} rules: {{- toYaml .Values.prometheusOperator.prometheusRule.rules | nindent 6 }} {{ end }} \u4fee\u6539 value.yaml ,\u6dfb\u52a0\u5982\u4e0b useDocker: true useContainerd: false ###\u6dfb\u52a0 prometheusOperator: podMonitor: # Create a Prometheus Operator PodMonitor resource enabled: true # Namespace defaults to the Release namespace but can be overridden namespace: \"\" # Additional labels to add to the PodMonitor so it matches the Operator's podMonitorSelector selector: app.kubernetes.io/name: missing-container-metrics prometheusRule: # Create a Prometheus Operator PrometheusRule resource enabled: true # Namespace defaults to the Release namespace but can be overridden namespace: \"\" # Additional labels to add to the PrometheusRule so it matches the Operator's ruleSelector selector: prometheus: k8s role: alert-rules # The rules can be set here. An example is defined here but can be overridden. rules: - alert: ContainerOOMObserved annotations: message: A process in this Pod has been OOMKilled due to exceeding the Kubernetes memory limit at least twice in the last 15 minutes. Look at the metrics to determine if a memory limit increase is required. expr: sum(increase(container_ooms[15m])) by (exported_namespace, exported_pod) > 2 labels: severity: warning - alert: ContainerOOMObserved annotations: message: A process in this Pod has been OOMKilled due to exceeding the Kubernetes memory limit at least ten times in the last 15 minutes. Look at the metrics to determine if a memory limit increase is required. expr: sum(increase(container_ooms[15m])) by (exported_namespace, exported_pod) > 10 labels: severity: critical \u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u66f4\u65b0 [root@master-01 addons]# helm upgrade missing-container-metrics -n missing-container-metrics missing-container-metrics/ Release \"missing-container-metrics\" has been upgraded. Happy Helming! NAME: missing-container-metrics LAST DEPLOYED: Tue Jul 6 11:36:02 2021 NAMESPACE: missing-container-metrics STATUS: deployed REVISION: 2 TEST SUITE: None \u66f4\u65b0\u540e\u4f1a\u521b\u5efapodmonitor\u548cprometeusrules [root@master-01 addons]# kubectl get prometheusrules.monitoring.coreos.com -n monitoring NAME AGE missing-container-metrics 15s [root@master-01 addons]# kubectl get podmonitors.monitoring.coreos.com -n missing-container-metrics NAME AGE missing-container-metrics 35s \u6211\u4eec\u53ef\u4ee5\u5728prometheus ui \u4e0a\u770b\u5230\u76f8\u5173target\u548crules","title":"\u7b2c\u5341\u4e09\u8282 Prometheus\u4f7f\u7528missing-container-metrics\u76d1\u63a7Pod oomkill"},{"location":"chap4/51missing-container-metrics/#prometheus-missing-container-metrics-pod-oomkill","text":"Kubernetes \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528 cAdvisor \u6765\u6536\u96c6\u5bb9\u5668\u7684\u5404\u9879\u6307\u6807\uff0c\u8db3\u4ee5\u6ee1\u8db3\u5927\u591a\u6570\u4eba\u7684\u9700\u6c42\uff0c\u4f46\u8fd8\u662f\u6709\u6240\u6b20\u7f3a\uff0c\u6bd4\u5982\u7f3a\u5c11\u5bf9\u4ee5\u4e0b\u51e0\u4e2a\u6307\u6807\u7684\u6536\u96c6\uff1a OOM kill \u5bb9\u5668\u91cd\u542f\u7684\u6b21\u6570 \u5bb9\u5668\u7684\u9000\u51fa\u7801 missing-container-metrics \u8fd9\u4e2a\u9879\u76ee\u5f25\u8865\u4e86 cAdvisor \u7684\u7f3a\u9677\uff0c\u65b0\u589e\u4e86\u4ee5\u4e0a\u51e0\u4e2a\u6307\u6807\uff0c\u96c6\u7fa4\u7ba1\u7406\u5458\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u6307\u6807\u8fc5\u901f\u5b9a\u4f4d\u67d0\u4e9b\u6545\u969c\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a\u5bb9\u5668\u6709\u591a\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5176\u4e2d\u67d0\u4e2a\u5b50\u8fdb\u7a0b\u88ab OOM kill\uff0c\u4f46\u5bb9\u5668\u8fd8\u5728\u8fd0\u884c\uff0c\u5982\u679c\u4e0d\u5bf9 OOM kill \u8fdb\u884c\u76d1\u63a7\uff0c\u7ba1\u7406\u5458\u5f88\u96be\u5bf9\u6545\u969c\u8fdb\u884c\u5b9a\u4f4d\u3002","title":"\u7b2c\u5341\u4e09\u8282 Prometheus \u4f7f\u7528 missing-container-metrics \u76d1\u63a7 Pod oomkill"},{"location":"chap4/51missing-container-metrics/#1","text":"\u5b98\u65b9\u63d0\u4f9b\u4e86helm chart\u65b9\u5f0f\u6765\u8fdb\u884c\u5b89\u88c5\uff0c\u6211\u4eec\u5148\u6dfb\u52a0helm\u4ed3\u5e93 helm repo add missing-container-metrics https://draganm.github.io/missing-container-metrics \u628a\u8fd9\u4e2achart\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539value.yaml\u6587\u4ef6 [root@master-01 addons]# helm pull missing-container-metrics/missing-container-metrics [root@master-01 addons]# ls blackbox dingtalk harbor_exporter mysql-exporter prometheusalert rules servicemonitor victoriametrics blackbox-probe etcd missing-container-metrics-0.1.1.tgz process-exporter redis-exporter scheduler-controller-svc.yaml ssl-exporter [root@master-01 addons]# tar xf missing-container-metrics-0.1.1.tgz \u53ef\u914d\u7f6e\u9879 \u6211\u4eec\u8fd9\u91cc\u4fee\u6539 missing-container-metrics/values.yaml \u4e2d useDocker\u4e3atrue \uff0c\u7136\u540e\u5b89\u88c5 [root@master-01 addons]# kubectl create namespace missing-container-metrics namespace/missing-container-metrics created [root@master-01 addons]# helm install missing-container-metrics missing-container-metrics -n missing-container-metrics NAME: missing-container-metrics LAST DEPLOYED: Tue Jul 6 10:47:35 2021 NAMESPACE: missing-container-metrics STATUS: deployed REVISION: 1 TEST SUITE: None [root@master-01 addons]# helm -n missing-container-metrics list NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION missing-container-metrics missing-container-metrics 1 2021-07-06 10:47:35.261058822 +0800 CST deployed missing-container-metrics-0.1.1 0.21.0 ##\u56e0\u4e3a\u6211\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u8fd9\u91ccdaemonset \u5c31\u53ea\u6709\u4e00\u4e2apod [root@master-01 addons]# kubectl get pod -n missing-container-metrics NAME READY STATUS RESTARTS AGE missing-container-metrics-s9cgk 1/1 Running 0 115s \u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u670d\u52a1\u76843001\u7aef\u53e3\u67e5\u770bmetrics,\u4f8b\u5982 [root@master-01 addons]# curl 100.67.79.150:3001/metrics # HELP container_last_exit_code Last exit code of the container # TYPE container_last_exit_code gauge container_last_exit_code{container_id=\"docker://0133fb5d739ba98b3985bdc7766fa200334bbbf29de9a61f98a463ec00de53de\",container_short_id=\"0133fb5d739b\",docker_container_id=\"0133fb5d739ba98b3985bdc7766fa200334bbbf29de9a61f98a463ec00de53de\",image_id=\"docker-pullable://k8s.gcr.io/pause:3.2\",name=\"k8s_POD_dns-autoscaler-565bf94d6c-dc6v4_kube-system_96437fe8-200c-4845-a7cc-a27790c6c5a7_0\",namespace=\"kube-system\",pod=\"dns-autoscaler-565bf94d6c-dc6v4\"} 0 container_last_exit_code{container_id=\"docker://0388ba15b0181fead17cfc3606a57aeef0a9b8b73cf3f97eb901565c8aa1702c\",container_short_id=\"0388ba15b018\",docker_container_id=\"0388ba15b0181fead17cfc3606a57aeef0a9b8b73cf3f97eb901565c8aa1702c\",image_id=\"docker-pullable://sha256:e20d2ec0d0ed8ffd693b435af9f2943095a608440e3b845331d6d00344025455\",name=\"k8s_victoriametrics_victoriametrics-0_kube-system_7b381d2c-791b-4e38-8cbb-43485afcb285_0\",namespace=\"kube-system\",pod=\"victoriametrics-0\"} 0 container_last_exit_code{container_id=\"docker://0400f7e29dab47304f97669cb52b5c7c9310fbb5c156c07d0dc9bfca6b8ee14d\",container_short_id=\"0400f7e29dab\",docker_container_id=\"0400f7e29dab47304f97669cb52b5c7c9310fbb5c156c07d0dc9bfca6b8ee14d\",image_id=\"docker-pullable://k8s.gcr.io/pause:3.2\",name=\"k8s_POD_csi-resizer-f6d66495f-s4vkv_longhorn-system_282278da-2638-4e26-8411-802bf57c1ed8_0\",namespace=\"longhorn-system\",pod=\"csi-resizer-f6d66495f-s4vkv\"} 0 container_last_exit_code{container_id=\"docker://04e2c60777ce277c62c7137f1d7b40d9c1523bb3edf9127efd357590f39ba79c\",container_short_id=\"04e2c60777ce\",docker_container_id=\"04e2c60777ce277c62c7137f1d7b40d9c1523bb3edf9127efd357590f39ba79c\",image_id=\"docker-pullable://k8s.gcr.io/pause:3.2\",name=\"k8s_POD_kube-state-metrics-859b6bf99-q8tdf_monitoring_529aa188-f7a0-4b5c-9608-cd8fc473ac8c_2\",namespace=\"monitoring\",pod=\"kube-state-metrics-859b6bf99-q8tdf\"} 0 \u670d\u52a1\u516c\u5f00\u4e86\u5982\u4e0b\u7684\u6307\u6807\uff1a container_restarts \uff1a\u5bb9\u5668\u7684\u91cd\u542f\u6b21\u6570\u3002 container_ooms \uff1a\u5bb9\u5668\u7684 OOM \u6740\u6b7b\u6570\u3002\u8fd9\u6db5\u76d6\u4e86\u5bb9\u5668 cgroup \u4e2d\u4efb\u4f55\u8fdb\u7a0b\u7684 OOM \u7ec8\u6b62\u3002 container_last_exit_code \uff1a\u5bb9\u5668\u7684\u6700\u540e\u9000\u51fa\u4ee3\u7801\u3002 \u6bcf\u4e00\u4e2a\u6307\u6807\u5305\u542b\u5982\u4e0b\u6807\u7b7e\uff1a docker_container_id \uff1a\u5bb9\u5668\u7684\u5b8c\u6574 ID\u3002 container_short_id \uff1aDocker \u5bb9\u5668 ID \u7684\u524d 6 \u4e2a\u5b57\u8282\u3002 container_id \uff1a\u5bb9\u5668 id \u4ee5\u4e0e kubernetes pod \u6307\u6807\u76f8\u540c\u7684\u683c\u5f0f\u8868\u793a - \u4ee5\u5bb9\u5668\u8fd0\u884c\u65f6\u4e3a\u524d\u7f00 docker:// \u5e76 containerd:// \u53d6\u51b3\u4e8e\u5bb9\u5668\u8fd0\u884c\u65f6\u3002\u8fd9\u4f7f\u5f97 Prometheus \u4e2d\u7684 kube_pod_container_info \u6307\u6807\u53ef\u4ee5\u8f7b\u677e\u8fde\u63a5\u3002 name \uff1a\u5bb9\u5668\u7684\u540d\u79f0\u3002 image_id \uff1a\u56fe\u50cf id \u4ee5\u4e0e k8s pod \u7684\u6307\u6807\u76f8\u540c\u7684\u683c\u5f0f\u8868\u793a\u3002\u8fd9\u4f7f\u5f97 Prometheus \u4e2d\u7684 kube_pod_container_info \u6307\u6807\u53ef\u4ee5\u8f7b\u677e\u8fde\u63a5\u3002 pod\uff1a\u5982\u679c io.kubernetes.pod.name \u5728\u5bb9\u5668\u4e0a\u8bbe\u7f6e\u4e86pod\u6807\u7b7e\uff0c\u5219\u5176\u503c\u5c06\u8bbe\u7f6e\u4e3a\u6307\u6807\u4e2d\u7684\u6807\u7b7e namespace\uff1a\u5982\u679c io.kubernetes.pod.namespace \u5bb9\u5668\u4e0a\u8bbe\u7f6e\u4e86namespace\u6807\u7b7e\uff0c\u5219\u5176\u503c\u5c06\u8bbe\u7f6e\u4e3a\u6307\u6807\u7684\u6807\u7b7e\u3002","title":"1 \u5b89\u88c5"},{"location":"chap4/51missing-container-metrics/#2-podmonitor-prometheusruleprometheus-operator","text":"\u5728template\u76ee\u5f55\u4e0b\u521b\u5efa\u6587\u4ef6 podmonitor.yaml {{ if .Values.prometheusOperator.podMonitor.enabled }} apiVersion: monitoring.coreos.com/v1 kind: PodMonitor metadata: name: {{ include \"missing-container-metrics.fullname\" . }} {{- with .Values.prometheusOperator.podMonitor.namespace }} namespace: {{ . }} {{- end }} labels: {{- include \"missing-container-metrics.labels\" . | nindent 4 }} {{- with .Values.prometheusOperator.podMonitor.selector }} {{- toYaml . | nindent 4 }} {{- end }} spec: selector: matchLabels: {{- include \"missing-container-metrics.selectorLabels\" . | nindent 6 }} podMetricsEndpoints: - port: http namespaceSelector: matchNames: - {{ .Release.Namespace }} {{ end }} \u5728template\u76ee\u5f55\u4e0b\u521b\u5efa\u6587\u4ef6 prometheusrule.yaml {{ if .Values.prometheusOperator.prometheusRule.enabled }} apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: name: {{ include \"missing-container-metrics.fullname\" . }} {{- with .Values.prometheusOperator.prometheusRule.namespace }} namespace: {{ . }} {{- end }} labels: {{- include \"missing-container-metrics.labels\" . | nindent 4 }} {{- with .Values.prometheusOperator.prometheusRule.selector }} {{- toYaml . | nindent 4 }} {{- end }} spec: groups: - name: {{ include \"missing-container-metrics.fullname\" . }} rules: {{- toYaml .Values.prometheusOperator.prometheusRule.rules | nindent 6 }} {{ end }} \u4fee\u6539 value.yaml ,\u6dfb\u52a0\u5982\u4e0b useDocker: true useContainerd: false ###\u6dfb\u52a0 prometheusOperator: podMonitor: # Create a Prometheus Operator PodMonitor resource enabled: true # Namespace defaults to the Release namespace but can be overridden namespace: \"\" # Additional labels to add to the PodMonitor so it matches the Operator's podMonitorSelector selector: app.kubernetes.io/name: missing-container-metrics prometheusRule: # Create a Prometheus Operator PrometheusRule resource enabled: true # Namespace defaults to the Release namespace but can be overridden namespace: \"\" # Additional labels to add to the PrometheusRule so it matches the Operator's ruleSelector selector: prometheus: k8s role: alert-rules # The rules can be set here. An example is defined here but can be overridden. rules: - alert: ContainerOOMObserved annotations: message: A process in this Pod has been OOMKilled due to exceeding the Kubernetes memory limit at least twice in the last 15 minutes. Look at the metrics to determine if a memory limit increase is required. expr: sum(increase(container_ooms[15m])) by (exported_namespace, exported_pod) > 2 labels: severity: warning - alert: ContainerOOMObserved annotations: message: A process in this Pod has been OOMKilled due to exceeding the Kubernetes memory limit at least ten times in the last 15 minutes. Look at the metrics to determine if a memory limit increase is required. expr: sum(increase(container_ooms[15m])) by (exported_namespace, exported_pod) > 10 labels: severity: critical \u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u66f4\u65b0 [root@master-01 addons]# helm upgrade missing-container-metrics -n missing-container-metrics missing-container-metrics/ Release \"missing-container-metrics\" has been upgraded. Happy Helming! NAME: missing-container-metrics LAST DEPLOYED: Tue Jul 6 11:36:02 2021 NAMESPACE: missing-container-metrics STATUS: deployed REVISION: 2 TEST SUITE: None \u66f4\u65b0\u540e\u4f1a\u521b\u5efapodmonitor\u548cprometeusrules [root@master-01 addons]# kubectl get prometheusrules.monitoring.coreos.com -n monitoring NAME AGE missing-container-metrics 15s [root@master-01 addons]# kubectl get podmonitors.monitoring.coreos.com -n missing-container-metrics NAME AGE missing-container-metrics 35s \u6211\u4eec\u53ef\u4ee5\u5728prometheus ui \u4e0a\u770b\u5230\u76f8\u5173target\u548crules","title":"2 \u6dfb\u52a0PodMonitor \u548c PrometheusRule\uff08\u9488\u5bf9Prometheus Operator\uff09"},{"location":"chap4/chap4_blackbox/","text":"\u5982\u4f55\u5728Prometheus\u4e2d\u8fdb\u884c\u9ed1\u76d2\u76d1\u63a7(ICMP/DNS/TCP/HTTP/gRPC) Blackbox Exporter \u662f Prometheus \u793e\u533a\u63d0\u4f9b\u7684\u5b98\u65b9\u9ed1\u76d2\u76d1\u63a7\u89e3\u51b3\u65b9\u6848\uff0c\u5176\u5141\u8bb8\u7528\u6237\u901a\u8fc7\uff1aHTTP, HTTPS, DNS, TCP, ICMP \u548c gRPC.\u7684\u65b9\u5f0f\u5bf9\u7f51\u7edc\u8fdb\u884c\u63a2\u6d4b\u3002\u76ee \u524d proemtheus operator \u4e2d\u7684 probe \u8d44\u6e90\u5df2\u5b9e\u73b0\u5bf9 blackbox-exporter \u7684\u652f\u6301 \uff0c\u672c\u6587\u7684\u4ecb\u7ecd\u7684\u6240\u6709\u63a2\u9488\u4e5f\u5747\u5728 probe\u4e2d\u5b9e\u73b0\u3002 \u73af\u5883\u51c6\u5907 \u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u987b\u786e\u4fdd\u4f60\u7684 k8s\u96c6\u7fa4\u5185\u5df2\u7ecf\u90e8\u7f72\u4e86 prometheus operator \u548c prometheus-blackbox-exporter \uff0c\u5982\u679c\u6ca1\u6709\u5b89\u88c5\uff0c\u53ef\u4f7f\u7528 helm\u547d\u4ee4\u76f4\u63a5\u90e8\u7f72\u3002 # \u6dfb\u52a0 promethues \u793e\u533a helm \u6e90 \u5e76\u66f4\u65b0 helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm repo update prometheus-community # \u5b89\u88c5 prometheus helm install prometheus-community/prometheus-operator # \u5b89\u88c5 blackbox-exporter helm install prometheus-community/prometheus-blackbox-exporter \u5b89\u88c5\u6210\u529f\u540e\uff0c\u9700\u624b\u52a8\u914d\u7f6e black-exporter\u7684 configmpa\uff0c\u5f15\u5165\u63a2\u9488\u6a21\u5757\u3002 \u63d0\u793a\uff1a\u53ef\u4ee5\u5728 prometheus-blackbox-exporter \u7684 helm values \u4e2d\u914d\u7f6e\u3002\u6587\u7ae0\u4e3a\u4e86\u76f4\u89c2\uff0c\u6240\u4ee5\u76f4\u63a5\u4fee\u6539 configmap blackbox.yaml: | modules: dns: dns: preferred_ip_protocol: ip4 query_name: kubernetes.default.svc.cluster.local transport_protocol: tcp prober: dns grpc: grpc: preferred_ip_protocol: ip4 tls: true prober: grpc grpc_plain: grpc: service: service1 tls: false prober: grpc http_2xx: http: follow_redirects: true preferred_ip_protocol: ip4 valid_http_versions: - HTTP/1.1 - HTTP/2.0 prober: http timeout: 5s http_post_2xx: http: method: POST preferred_ip_protocol: ip4 valid_http_versions: - HTTP/1.1 - HTTP/2 prober: http headers: content-type: application/json body: '{\"k\": \"v\"}' //\u81ea\u5b9a\u4e49\u7684 body \u6570\u636e timeout: 5s ping: icmp: preferred_ip_protocol: ip4 prober: icmp timeout: 5s tcp_connect: prober: tcp timeout: 5s \u4ee5\u4e0a\u914d\u7f6e\uff0c\u8ba9 blackbox-exporter \u52a0\u8f7d\u4e86\u5b8c\u6574\u7684\u7f51\u7edc\u63a2\u9488\u6a21\u5757\u3002 \u62e8\u6d4b probe \u5b9e\u73b0\u4e86\u5bf9 blackbox-exporter \u7684\u914d\u7f6e\u7ba1\u7406\uff0c\u6781\u5927\u7684\u7b80\u5316\u914d\u7f6e\u3002 1. \u62e8\u6d4b ICMP kind: Probe apiVersion: monitoring.coreos.com/v1 metadata: name: icmp-probe namespace: kubegems-monitoring spec: interval: 60s module: ping prober: url: prometheus-blackbox-exporter.kubegems-monitoring.svc.cluster.local:9115 targets: staticConfig: static: - 114.114.114.114 - baidu.com \u901a\u8fc7\u67e5\u8be2PromQL count by (__name__) ({job=\"probe/kubegems-monitoring/icmp-probe\"}) \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6307\u6807 probe_dns_lookup_time_seconds{} // icmp\u4e2d\u57df\u540d\u89e3\u6790\u8017\u65f6 probe_duration_seconds{} // \u62e8\u6d4b\u8017\u65f6 probe_icmp_duration_seconds{} // icmp \u7684\u8017\u65f6 probe_success{} //\u62e8\u6d4b\u7ed3\u679c \u62e8\u6d4b DNS kind: Probe apiVersion: monitoring.coreos.com/v1 metadata: name: dns-probe namespace: kubegems-monitoring spec: interval: 60s module: dns prober: url: prometheus-blackbox-exporter.kubegems-monitoring.svc.cluster.local:9115 targets: staticConfig: static: - kubegems.io \u901a\u8fc7\u67e5\u8be2PromQL count by (__name__) ({job=\"probe/kubegems-monitoring/dns-probe\"}) \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6307\u6807 probe_dns_additional_rrs{} // \u9644\u52a0\u8bb0\u5f55\u5217\u8868\u4e2d\u7684\u6761\u76ee\u6570\u91cf probe_dns_answer_rrs{} // \u54cd\u5e94\u8bb0\u5f55\u5217\u8868\u4e2d\u7684\u6761\u76ee\u6570\u91cf probe_dns_authority_rrs{} // \u6743\u5a01\u8bb0\u5f55\u5217\u8868\u4e2d\u7684\u6761\u76ee\u6570\u91cf probe_dns_duration_seconds{} // dns\u89e3\u6790\u8017\u65f6 \u62e8\u6d4b TCP kind: Probe apiVersion: monitoring.coreos.com/v1 metadata: name: tcp-probe namespace: kubegems-monitoring spec: interval: 60s module: tcp_connect prober: url: prometheus-blackbox-exporter.kubegems-monitoring.svc.cluster.local:9115 targets: staticConfig: static: - kubegems.io:443 \u901a\u8fc7\u67e5\u8be2PromQL count by (__name__) ({job=\"probe/kubegems-monitoring/tcp-probe\"}) \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6307\u6807 probe_dns_lookup_time_seconds{} probe_duration_seconds{} probe_failed_due_to_regex{} probe_ip_addr_hash{} probe_ip_protocol{} probe_success{} \u62e8\u6d4b HTTP GET kind: Probe apiVersion: monitoring.coreos.com/v1 metadata: name: http-probe namespace: kubegems-monitoring spec: interval: 60s module: http_2xx prober: path: /probe url: prometheus-blackbox-exporter.kubegems-monitoring.svc.cluster.local:9115 targets: staticConfig: static: - https://kubegems.io \u901a\u8fc7\u67e5\u8be2PromQL count by (__name__) ({job=\"probe/kubegems-monitoring/http-probe\"}) \uff0c \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6307\u6807 probe_dns_lookup_time_seconds{} // http\u62e8\u6d4b\u4e2d\u7684 dns \u67e5\u8be2\u8017\u65f6 probe_duration_seconds{} probe_failed_due_to_regex{} probe_http_content_length{} probe_http_duration_seconds{} // http handler \u5404\u9636\u6bb5\u5904\u7406\u8017\u65f6 probe_http_last_modified_timestamp_seconds{} probe_http_redirects{} probe_http_ssl{} // \u662f\u5426\u542f\u7528 https probe_http_status_code{} // http \u72b6\u6001\u7801 probe_http_uncompressed_body_length{} probe_http_version{} probe_ssl_earliest_cert_expiry{} // ssl\u8bc1\u4e66\u8fc7\u671f\u65f6\u95f4 probe_ssl_last_chain_expiry_timestamp_seconds{} probe_ssl_last_chain_info{} probe_success{} probe_tls_version_info{} // tls\u7248\u672c \u62e8\u6d4b GRPC kind: Probe apiVersion: monitoring.coreos.com/v1 metadata: name: grpc-probe namespace: kubegems-monitoring spec: interval: 60s module: grpc_plain prober: url: prometheus-blackbox-exporter.kubegems-monitoring.svc.cluster.local:9115 targets: staticConfig: static: - 172.16.23.86:30590 \u901a\u8fc7\u67e5\u8be2PromQL count by (__name__) ({job=\"probe/kubegems-monitoring/grpc-probe\"}) \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6307\u6807 probe_dns_lookup_time_seconds{} probe_duration_seconds{} probe_grpc_duration_seconds{} probe_grpc_healthcheck_response{} probe_grpc_ssl{} probe_grpc_status_code{} probe_ssl_earliest_cert_expiry{} probe_success{}","title":"\u7b2c\u5341\u56db\u8282 \u5982\u4f55\u5728Prometheus\u4e2d\u8fdb\u884c\u9ed1\u76d2\u76d1\u63a7(ICMP/DNS/TCP/HTTP/gRPC)"},{"location":"chap4/chap4_blackbox/#prometheusicmpdnstcphttpgrpc","text":"Blackbox Exporter \u662f Prometheus \u793e\u533a\u63d0\u4f9b\u7684\u5b98\u65b9\u9ed1\u76d2\u76d1\u63a7\u89e3\u51b3\u65b9\u6848\uff0c\u5176\u5141\u8bb8\u7528\u6237\u901a\u8fc7\uff1aHTTP, HTTPS, DNS, TCP, ICMP \u548c gRPC.\u7684\u65b9\u5f0f\u5bf9\u7f51\u7edc\u8fdb\u884c\u63a2\u6d4b\u3002\u76ee \u524d proemtheus operator \u4e2d\u7684 probe \u8d44\u6e90\u5df2\u5b9e\u73b0\u5bf9 blackbox-exporter \u7684\u652f\u6301 \uff0c\u672c\u6587\u7684\u4ecb\u7ecd\u7684\u6240\u6709\u63a2\u9488\u4e5f\u5747\u5728 probe\u4e2d\u5b9e\u73b0\u3002","title":"\u5982\u4f55\u5728Prometheus\u4e2d\u8fdb\u884c\u9ed1\u76d2\u76d1\u63a7(ICMP/DNS/TCP/HTTP/gRPC)"},{"location":"chap4/chap4_blackbox/#_1","text":"\u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u987b\u786e\u4fdd\u4f60\u7684 k8s\u96c6\u7fa4\u5185\u5df2\u7ecf\u90e8\u7f72\u4e86 prometheus operator \u548c prometheus-blackbox-exporter \uff0c\u5982\u679c\u6ca1\u6709\u5b89\u88c5\uff0c\u53ef\u4f7f\u7528 helm\u547d\u4ee4\u76f4\u63a5\u90e8\u7f72\u3002 # \u6dfb\u52a0 promethues \u793e\u533a helm \u6e90 \u5e76\u66f4\u65b0 helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm repo update prometheus-community # \u5b89\u88c5 prometheus helm install prometheus-community/prometheus-operator # \u5b89\u88c5 blackbox-exporter helm install prometheus-community/prometheus-blackbox-exporter \u5b89\u88c5\u6210\u529f\u540e\uff0c\u9700\u624b\u52a8\u914d\u7f6e black-exporter\u7684 configmpa\uff0c\u5f15\u5165\u63a2\u9488\u6a21\u5757\u3002 \u63d0\u793a\uff1a\u53ef\u4ee5\u5728 prometheus-blackbox-exporter \u7684 helm values \u4e2d\u914d\u7f6e\u3002\u6587\u7ae0\u4e3a\u4e86\u76f4\u89c2\uff0c\u6240\u4ee5\u76f4\u63a5\u4fee\u6539 configmap blackbox.yaml: | modules: dns: dns: preferred_ip_protocol: ip4 query_name: kubernetes.default.svc.cluster.local transport_protocol: tcp prober: dns grpc: grpc: preferred_ip_protocol: ip4 tls: true prober: grpc grpc_plain: grpc: service: service1 tls: false prober: grpc http_2xx: http: follow_redirects: true preferred_ip_protocol: ip4 valid_http_versions: - HTTP/1.1 - HTTP/2.0 prober: http timeout: 5s http_post_2xx: http: method: POST preferred_ip_protocol: ip4 valid_http_versions: - HTTP/1.1 - HTTP/2 prober: http headers: content-type: application/json body: '{\"k\": \"v\"}' //\u81ea\u5b9a\u4e49\u7684 body \u6570\u636e timeout: 5s ping: icmp: preferred_ip_protocol: ip4 prober: icmp timeout: 5s tcp_connect: prober: tcp timeout: 5s \u4ee5\u4e0a\u914d\u7f6e\uff0c\u8ba9 blackbox-exporter \u52a0\u8f7d\u4e86\u5b8c\u6574\u7684\u7f51\u7edc\u63a2\u9488\u6a21\u5757\u3002","title":"\u73af\u5883\u51c6\u5907"},{"location":"chap4/chap4_blackbox/#_2","text":"probe \u5b9e\u73b0\u4e86\u5bf9 blackbox-exporter \u7684\u914d\u7f6e\u7ba1\u7406\uff0c\u6781\u5927\u7684\u7b80\u5316\u914d\u7f6e\u3002","title":"\u62e8\u6d4b"},{"location":"chap4/chap4_blackbox/#1-icmp","text":"kind: Probe apiVersion: monitoring.coreos.com/v1 metadata: name: icmp-probe namespace: kubegems-monitoring spec: interval: 60s module: ping prober: url: prometheus-blackbox-exporter.kubegems-monitoring.svc.cluster.local:9115 targets: staticConfig: static: - 114.114.114.114 - baidu.com \u901a\u8fc7\u67e5\u8be2PromQL count by (__name__) ({job=\"probe/kubegems-monitoring/icmp-probe\"}) \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6307\u6807 probe_dns_lookup_time_seconds{} // icmp\u4e2d\u57df\u540d\u89e3\u6790\u8017\u65f6 probe_duration_seconds{} // \u62e8\u6d4b\u8017\u65f6 probe_icmp_duration_seconds{} // icmp \u7684\u8017\u65f6 probe_success{} //\u62e8\u6d4b\u7ed3\u679c","title":"1. \u62e8\u6d4b ICMP"},{"location":"chap4/chap4_blackbox/#dns","text":"kind: Probe apiVersion: monitoring.coreos.com/v1 metadata: name: dns-probe namespace: kubegems-monitoring spec: interval: 60s module: dns prober: url: prometheus-blackbox-exporter.kubegems-monitoring.svc.cluster.local:9115 targets: staticConfig: static: - kubegems.io \u901a\u8fc7\u67e5\u8be2PromQL count by (__name__) ({job=\"probe/kubegems-monitoring/dns-probe\"}) \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6307\u6807 probe_dns_additional_rrs{} // \u9644\u52a0\u8bb0\u5f55\u5217\u8868\u4e2d\u7684\u6761\u76ee\u6570\u91cf probe_dns_answer_rrs{} // \u54cd\u5e94\u8bb0\u5f55\u5217\u8868\u4e2d\u7684\u6761\u76ee\u6570\u91cf probe_dns_authority_rrs{} // \u6743\u5a01\u8bb0\u5f55\u5217\u8868\u4e2d\u7684\u6761\u76ee\u6570\u91cf probe_dns_duration_seconds{} // dns\u89e3\u6790\u8017\u65f6","title":"\u62e8\u6d4b DNS"},{"location":"chap4/chap4_blackbox/#tcp","text":"kind: Probe apiVersion: monitoring.coreos.com/v1 metadata: name: tcp-probe namespace: kubegems-monitoring spec: interval: 60s module: tcp_connect prober: url: prometheus-blackbox-exporter.kubegems-monitoring.svc.cluster.local:9115 targets: staticConfig: static: - kubegems.io:443 \u901a\u8fc7\u67e5\u8be2PromQL count by (__name__) ({job=\"probe/kubegems-monitoring/tcp-probe\"}) \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6307\u6807 probe_dns_lookup_time_seconds{} probe_duration_seconds{} probe_failed_due_to_regex{} probe_ip_addr_hash{} probe_ip_protocol{} probe_success{}","title":"\u62e8\u6d4b TCP"},{"location":"chap4/chap4_blackbox/#http-get","text":"kind: Probe apiVersion: monitoring.coreos.com/v1 metadata: name: http-probe namespace: kubegems-monitoring spec: interval: 60s module: http_2xx prober: path: /probe url: prometheus-blackbox-exporter.kubegems-monitoring.svc.cluster.local:9115 targets: staticConfig: static: - https://kubegems.io \u901a\u8fc7\u67e5\u8be2PromQL count by (__name__) ({job=\"probe/kubegems-monitoring/http-probe\"}) \uff0c \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6307\u6807 probe_dns_lookup_time_seconds{} // http\u62e8\u6d4b\u4e2d\u7684 dns \u67e5\u8be2\u8017\u65f6 probe_duration_seconds{} probe_failed_due_to_regex{} probe_http_content_length{} probe_http_duration_seconds{} // http handler \u5404\u9636\u6bb5\u5904\u7406\u8017\u65f6 probe_http_last_modified_timestamp_seconds{} probe_http_redirects{} probe_http_ssl{} // \u662f\u5426\u542f\u7528 https probe_http_status_code{} // http \u72b6\u6001\u7801 probe_http_uncompressed_body_length{} probe_http_version{} probe_ssl_earliest_cert_expiry{} // ssl\u8bc1\u4e66\u8fc7\u671f\u65f6\u95f4 probe_ssl_last_chain_expiry_timestamp_seconds{} probe_ssl_last_chain_info{} probe_success{} probe_tls_version_info{} // tls\u7248\u672c","title":"\u62e8\u6d4b HTTP GET"},{"location":"chap4/chap4_blackbox/#grpc","text":"kind: Probe apiVersion: monitoring.coreos.com/v1 metadata: name: grpc-probe namespace: kubegems-monitoring spec: interval: 60s module: grpc_plain prober: url: prometheus-blackbox-exporter.kubegems-monitoring.svc.cluster.local:9115 targets: staticConfig: static: - 172.16.23.86:30590 \u901a\u8fc7\u67e5\u8be2PromQL count by (__name__) ({job=\"probe/kubegems-monitoring/grpc-probe\"}) \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6307\u6807 probe_dns_lookup_time_seconds{} probe_duration_seconds{} probe_grpc_duration_seconds{} probe_grpc_healthcheck_response{} probe_grpc_ssl{} probe_grpc_status_code{} probe_ssl_earliest_cert_expiry{} probe_success{}","title":"\u62e8\u6d4b GRPC"},{"location":"chap5/52Prometheus_Relabeling/","text":"\u7b2c\u4e8c\u8282 Prometheus Relabeling \u91cd\u65b0\u6807\u8bb0\u7684\u4f7f\u7528 Relabeling \u91cd\u65b0\u6807\u8bb0\u662f\u914d\u7f6e Prometheus \u5143\u4fe1\u606f\u7684\u65b9\u5f0f\uff0c\u5b83\u662f\u8f6c\u6362\u548c\u8fc7\u6ee4 Prometheus \u4e2d label \u6807\u7b7e\u5bf9\u8c61\u7684\u6838\u5fc3\uff0c\u672c\u6587\u6211\u4eec\u5c06\u4e86\u89e3 Relabeling \u89c4\u5219\u7684\u5de5\u4f5c\u539f\u7406\u4ee5\u53ca\u5728\u4e0d\u540c\u573a\u666f\u4e2d\u7684\u5e94\u7528\u65b9\u5f0f\u3002 1\u3001\u6982\u8ff0 \u53ea\u76d1\u89c6\u5177\u6709\u7279\u5b9a\u670d\u52a1\u53d1\u73b0\u6ce8\u89e3\u7684\u67d0\u4e9b\u76ee\u6807\uff0c\u901a\u5e38\u5728\u670d\u52a1\u53d1\u73b0\u4e2d\u4f7f\u7528 \u5411\u76ee\u6807\u6293\u53d6\u8bf7\u6c42\u6dfb\u52a0 HTTP \u67e5\u8be2\u53c2\u6570 \u4ec5\u5b58\u50a8\u4ece\u6307\u5b9a\u76ee\u6807\u4e2d\u63d0\u53d6\u6837\u672c\u7684\u5b50\u96c6 \u5c06\u6293\u53d6\u5e8f\u5217\u7684\u4e24\u4e2a\u6807\u7b7e\u503c\u5408\u5e76\u4e3a\u4e00\u4e2a\u6807\u7b7e Relabeling \u662f\u4f5c\u4e3a\u4e00\u7cfb\u5217\u8f6c\u6362\u6b65\u9aa4\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u5e94\u7528\u8fd9\u4e9b\u6b65\u9aa4\u6765\u8fc7\u6ee4\u6216\u4fee\u6539\u6807\u8bb0\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u4e0b\u7c7b\u578b\u7684\u6807\u8bb0\u5bf9\u8c61\u5e94\u7528 Relabeling \u64cd\u4f5c\uff1a \u53d1\u73b0\u7684\u6293\u53d6\u76ee\u6807\uff08 relabel_configs \uff09 \u6293\u53d6\u7684\u5355\u4e2a\u6837\u672c\uff08 metric_relabel_configs \uff09 \u53d1\u9001\u7ed9 Alertmanager \u7684\u62a5\u8b66\uff08 alert_relabel_configs \uff09 \u5199\u5230\u8fdc\u7a0b\u5b58\u50a8\u7684\u6837\u672c\uff08 write_relabel_configs \uff09 \u6240\u6709\u8fd9\u4e9b relabeling \u914d\u7f6e\u5757\u90fd\u662f\u76f8\u540c\u7c7b\u578b\u7684 relabel_config \uff0c\u6bcf\u4e2a\u914d\u7f6e\u5757\u90fd\u7531\u4e00\u4e2a\u89c4\u5219\u5217\u8868\u7ec4\u6210\uff0c\u8fd9\u4e9b\u89c4\u5219\u4f9d\u6b21\u5e94\u7528\u4e8e\u6bcf\u4e2a\u6807\u8bb0\u7684\u5bf9\u8c61\u3002 \u4f8b\u5982\uff0c\u4e00\u4e2a relabeling \u89c4\u5219\u53ef\u4ee5\u6839\u636e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u6765\u4fdd\u7559\u6216\u4e22\u5f03\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4fee\u6539\u5176\u6807\u7b7e\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e00\u6574\u7ec4\u6807\u7b7e\u6620\u5c04\u5230\u53e6\u4e00\u7ec4\u3002 \u4e00\u65e6\u4e00\u4e2a relabeling \u6b65\u9aa4\u51b3\u5b9a\u653e\u5f03\u4e00\u4e2a\u6709\u6807\u7b7e\u7684\u5bf9\u8c61\uff0c\u5c31\u4e0d\u4f1a\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u6267\u884c\u8fdb\u4e00\u6b65\u7684 relabeling \u6b65\u9aa4\uff0c\u5b83\u5c06\u4ece\u8f93\u51fa\u5217\u8868\u4e2d\u5220\u9664\u3002 2\u3001\u9690\u85cf\u7684\u6807\u7b7e\u4e0e\u5143\u6570\u636e \u4ee5\u53cc\u4e0b\u5212\u7ebf __ \u5f00\u5934\u7684\u6807\u7b7e\u5c5e\u4e8e\u7279\u6b8a\u7684\u6807\u7b7e\uff0c\u5b83\u4eec\u5728\u91cd\u65b0\u6807\u8bb0\u540e\u4f1a\u88ab\u5220\u9664\u3002 \u6807\u8bb0\u5bf9\u8c61\u7684\u6765\u6e90\u6700\u521d\u53ef\u4ee5\u9644\u52a0 \u8fd9\u4e9b \u9690\u85cf\u7684\u6807\u7b7e\uff0c\u4ee5\u63d0\u4f9b\u5173\u4e8e\u6807\u8bb0\u5bf9\u8c61\u7684\u989d\u5916\u5143\u6570\u636e\uff0c\u8fd9\u4e9b\u7279\u6b8a\u7684\u6807\u7b7e\u53ef\u4ee5\u5728 relabeling \u9636\u6bb5\u88ab\u7528\u6765\u5bf9\u5bf9\u8c61\u7684\u6807\u7b7e\u8fdb\u884c\u4fee\u6539\u3002 \u5bf9\u4e8e\u6293\u53d6\u6307\u6807\uff0c\u5176\u4e2d\u5c31\u5305\u542b\u4e00\u4e9b\u9690\u85cf\u7684\u6807\u7b7e\uff0c\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u76ee\u6807\u5e94\u8be5\u5982\u4f55\u88ab\u6293\u53d6\u3002 __address__ \uff1a\u5305\u542b\u5e94\u8be5\u88ab\u6293\u53d6\u76ee\u6807\u7684\u5730\u5740\uff0c \u5b83\u6700\u521d\u9ed8\u8ba4\u4e3a\u670d\u52a1\u53d1\u73b0\u673a\u5236\u63d0\u4f9b\u7684 <host>:<port> \uff0c\u5982\u679c\u5728\u6b64\u4e4b\u524d\u6ca1\u6709\u660e\u786e\u5730\u5c06\u5b9e\u4f8b\u6807\u7b7e instance \u8bbe\u7f6e\u4e3a\u5176\u4ed6\u503c\uff0c\u90a3\u4e48\u5728 relabeling \u4e4b\u540e\uff0c Prometheus \u4f1a\u5c06 instance \u6807\u7b7e\u8bbe\u7f6e\u4e3a __address__ \u7684\u503c\u3002 __scheme__ \uff1a\u6293\u53d6\u76ee\u6807\u7684\u8bf7\u6c42\u6a21\u5f0f\uff0c\u5305\u62ec http \u4e0e https\uff0c\u9ed8\u8ba4\u4e3a http\u3002 __metrics_path__ \uff1a\u8868\u793a\u7528\u4e8e\u91c7\u96c6\u6307\u6807\u7684 HTTP \u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a /metrics \u3002 __param_<name> : \u5305\u542b HTTP \u67e5\u8be2\u53c2\u6570\u540d\u79f0\u548c\u5b83\u4eec\u7684\u503c\u3002 \u4e0a\u9762\u7684\u8fd9\u4e9b\u6807\u7b7e\u90fd\u53ef\u4ee5\u4f7f\u7528 relabeling \u89c4\u5219\u6765\u8bbe\u7f6e\u6216\u8986\u76d6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e3a\u6293\u53d6\u76ee\u6807\u8fdb\u884c\u81ea\u5b9a\u4e49\u6293\u53d6\u884c\u4e3a\u3002 \u6b64\u5916\uff0c\u670d\u52a1\u53d1\u73b0\u673a\u5236\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u4e00\u7ec4\u4ee5 __meta_ \u5f00\u5934\u7684\u6807\u7b7e\uff0c\u5305\u542b\u5173\u4e8e\u76ee\u6807\u7684\u7279\u5b9a\u53d1\u73b0\u5143\u6570\u636e\u3002 \u4f8b\u5982\uff0c\u5f53\u53d1\u73b0 Kubernetes \u96c6\u7fa4\u4e2d\u7684 pod \u65f6\uff0cKubernetes \u670d\u52a1\u53d1\u73b0\u5f15\u64ce\u5c06\u4e3a\u6bcf\u4e2a pod \u76ee\u6807\u63d0\u4f9b\u4e00\u4e2a __meta_kubernetes_pod_name \u7684\u6807\u7b7e\uff0c\u5305\u542b\u88ab\u53d1\u73b0\u7684 pod \u7684\u540d\u5b57\uff0c\u4ee5\u53ca\u4e00\u4e2a __meta_kubernetes_pod_ready \u6807\u7b7e\uff0c\u8868\u660e pod \u662f\u5426\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\uff0c \u5173\u4e8e\u670d\u52a1\u53d1\u73b0\u751f\u6210\u7684\u5143\u6807\u7b7e\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863 https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config \u4e86\u89e3\u66f4\u591a\u3002 \u5982\u679c\u4e00\u4e2a relabeling \u6b65\u9aa4\u9700\u8981\u5c06\u4e00\u4e2a\u503c\u4fdd\u5b58\u5230\u4e00\u4e2a\u4e34\u65f6\u6807\u7b7e\u4e2d\uff08\u4ee5\u4fbf\u5728\u968f\u540e\u7684\u6b65\u9aa4\u4e2d\u5904\u7406\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 __tmp \u6807\u7b7e\u540d\u79f0\u524d\u7f00\u8fdb\u884c\u6807\u8bb0\uff0c\u4ee5 __tmp \u5f00\u901a\u7684\u6807\u7b7e\u662f\u4e0d\u4f1a\u88ab Prometheus \u672c\u8eab\u4f7f\u7528\u7684\u3002 2 Relabeling \u89c4\u5219 Relabeling \u89c4\u5219\u4e3b\u8981\u7531\u4ee5\u4e0b\u7684\u4e00\u4e9b\u914d\u7f6e\u5c5e\u6027\u7ec4\u6210\uff0c\u4f46\u5bf9\u4e8e\u6bcf\u79cd\u7c7b\u578b\u7684\u64cd\u4f5c\uff0c\u53ea\u4f7f\u7528\u8fd9\u4e9b\u5b57\u6bb5\u7684\u4e00\u4e2a\u5b50\u96c6\u3002 action \uff1a\u6267\u884c\u7684 relabeling \u52a8\u4f5c\uff0c\u53ef\u9009\u503c\u5305\u62ec replace \u3001 keep \u3001 drop \u3001 hashmod \u3001 labelmap \u3001 labeldrop \u6216\u8005 labelkeep \uff0c\u9ed8\u8ba4\u503c\u4e3a replace \u3002 separator \uff1a\u5206\u9694\u7b26\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u5728\u8fde\u63a5\u6e90\u6807\u7b7e source_labels \u65f6\u5206\u9694\u5b83\u4eec\uff0c\u9ed8\u8ba4\u4e3a;\u3002 source_labels \uff1a\u6e90\u6807\u7b7e\uff0c\u4f7f\u7528\u914d\u7f6e\u7684\u5206\u9694\u7b26\u4e32\u8054\u7684\u6807\u7b7e\u540d\u79f0\u5217\u8868\uff0c\u5e76\u4e0e\u63d0\u4f9b\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u5339\u914d \u3002 target_label \uff1a\u76ee\u6807\u6807\u7b7e\uff0c\u5f53\u4f7f\u7528 replace \u6216\u8005 hashmod \u52a8\u4f5c\u65f6\uff0c\u5e94\u8be5\u88ab\u8986\u76d6\u7684\u6807\u7b7e\u540d\u3002 regex \uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u4e8e\u5339\u914d\u4e32\u8054\u7684\u6e90\u6807\u7b7e\uff0c\u9ed8\u8ba4\u4e3a (.*) \uff0c\u5339\u914d\u4efb\u4f55\u6e90\u6807\u7b7e\u3002 modulus \uff1a\u6a21\u6570\uff0c\u4e32\u8054\u7684\u6e90\u6807\u7b7e\u54c8\u5e0c\u503c\u7684\u6a21\uff0c\u4e3b\u8981\u7528\u4e8e Prometheus \u6c34\u5e73\u5206\u7247 \u3002 replacement \uff1areplacement \u5b57\u7b26\u4e32\uff0c\u5199\u5728\u76ee\u6807\u6807\u7b7e\u4e0a\uff0c\u7528\u4e8e\u66ff\u6362 relabeling \u52a8\u4f5c\uff0c\u5b83\u53ef\u4ee5\u53c2\u8003\u7531 regex \u6355\u83b7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6355\u83b7\u7ec4\u3002 2-1 \u8bbe\u7f6e\u6216\u66ff\u6362\u6807\u7b7e\u503c Relabeling \u7684\u4e00\u4e2a\u5e38\u89c1\u64cd\u4f5c\u5c31\u662f\u8bbe\u7f6e\u6216\u8005\u8986\u76d6\u4e00\u4e2a\u6807\u7b7e\u7684\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 replace \u8fd9\u4e2a\u64cd\u4f5c\u6765\u5b8c\u6210\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a action \u5b57\u6bb5\uff0c\u5219\u9ed8\u8ba4\u5c31\u662f replace \u3002 \u4e00\u4e2a replace \u52a8\u4f5c\u7684\u89c4\u5219\u914d\u7f6e\u65b9\u5f0f\u5982\u4e0b\u6240\u793a\uff1a action: replace source_labels: [<source label name list>] separator: <source labels separator> # \u9ed8\u8ba4\u4e3a ';' regex: <regular expression> # \u9ed8\u8ba4\u4e3a '(.*)' (\u5339\u914d\u4efb\u4f55\u503c)) replacement: <replacement string> # \u9ed8\u8ba4\u4e3a '$1' (\u4f7f\u7528\u7b2c\u4e00\u4e2a\u6355\u83b7\u7ec4\u4f5c\u4e3a replacement) target_label: <target label> \u8be5\u64cd\u4f5c\u6309\u987a\u5e8f\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u4f7f\u7528\u63d0\u4f9b\u7684 separator \u5206\u9694\u7b26\u5c06 source_labels \u4e2d\u7684\u6807\u7b7e\u5217\u8868\u503c\u8fde\u63a5\u8d77\u6765 \u6d4b\u8bd5 regex \u4e2d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u5426\u4e0e\u4e0a\u4e00\u6b65\u8fde\u63a5\u7684\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5339\u914d\uff0c\u5c31\u8df3\u5230\u4e0b\u4e00\u4e2a relabeling \u89c4\u5219\uff0c\u4e0d\u66ff\u6362\u4efb\u4f55\u4e1c\u897f \u5982\u679c\u6b63\u5219\u5339\u914d\uff0c\u5c31\u63d0\u53d6\u6b63\u5219\u8868\u8fbe\u5f0f\u6355\u83b7\u7ec4\u4e2d\u7684\u503c\uff0c\u5e76\u5c06 replacement \u5b57\u7b26\u4e32\u4e2d\u5bf9\u8fd9\u4e9b\u7ec4\u7684\u5f15\u7528(2, ...)\u7528\u5b83\u4eec\u7684\u503c\u66ff\u6362 \u628a\u7ecf\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u66ff\u6362\u7684 replacement \u5b57\u7b26\u4e32\u4f5c\u4e3a target_label \u6807\u7b7e\u7684\u65b0\u503c\u5b58\u50a8\u8d77\u6765 \u4e0b\u9762\u6211\u4eec\u6765\u7b80\u5355\u770b\u4e00\u770b replace \u64cd\u4f5c\u7684\u793a\u4f8b\u3002 \u8bbe\u7f6e\u4e00\u4e2a\u56fa\u5b9a\u7684\u6807\u7b7e\u503c \u6700\u7b80\u5355\u7684 replace \u4f8b\u5b50\u5c31\u662f\u5c06\u4e00\u4e2a\u6807\u7b7e\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u628a env \u6807\u7b7e\u8bbe\u7f6e\u4e3a production \uff1a action: replace replacement: production target_label: env \u8fd9\u91cc\u6211\u4eec\u5e76\u6ca1\u6709\u8bbe\u7f6e\u89c4\u5219\u7684\u5927\u90e8\u5206\u5c5e\u6027\uff0c\u8fd9\u662f\u56e0\u4e3a\u5927\u90e8\u5206\u7684\u9ed8\u8ba4\u503c\u5df2\u7ecf\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u91cc\u7684\u9700\u6c42\u4e86\uff0c\u8fd9\u91cc\u4f1a\u5c06\u66ff\u6362\u7684\u5b57\u7b26\u4e32 production \u4f5c\u4e3a target_label \u6807\u7b7e env \u7684\u65b0\u503c\u5b58\u50a8\u8d77\u6765\uff0c\u4e5f\u5c31\u662f\u5c06 env \u6807\u7b7e\u7684\u503c\u8bbe\u7f6e\u4e3a production \u3002 \u66ff\u6362\u6293\u53d6\u4efb\u52a1\u7aef\u53e3 \u53e6\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u7684\u793a\u4f8b\u662f\u91cd\u5199\u4e00\u4e2a\u88ab\u6293\u53d6\u4efb\u52a1\u5b9e\u4f8b\u7684\u7aef\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684 80 \u7aef\u53e3\u6765\u66ff\u6362 __address__ \u6807\u7b7e\u7684\u7aef\u53e3\uff1a action: replace source_labels: [__address__] regex: ([^:]+)(?::\\d+)? # \u7b2c\u4e00\u4e2a\u6355\u83b7\u7ec4\u5339\u914d\u7684\u662f host\uff0c\u7b2c\u4e8c\u4e2a\u5339\u914d\u7684\u662f port \u7aef\u53e3\u3002 replacement: \"$1:80\" target_label: __address__ \u8fd9\u91cc\u6211\u4eec\u66ff\u6362\u7684\u6e90\u6807\u7b7e\u4e3a __address__ \uff0c\u7136\u540e\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f ([^:]+)(?::\\d+)? \u8fdb\u884c\u5339\u914d\uff0c\u8fd9\u91cc\u6709\u4e24\u4e2a\u6355\u83b7\u7ec4\uff0c \u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u662f host(1) \uff0c\u7b2c\u4e8c\u4e2a\u5339\u914d\u7684\u662f\u7aef\u53e3(2) \uff0c \u6240\u4ee5\u5728 replacement \u5b57\u7b26\u4e32\u4e2d\u6211\u4eec\u4fdd\u7559\u7b2c\u4e00\u4e2a\u6355\u83b7\u7ec4 $1 \uff0c\u7136\u540e\u5c06\u7aef\u53e3\u66f4\u6539\u4e3a 80 \uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06 __address__ \u7684\u5b9e\u4f8b\u7aef\u53e3\u66f4\u6539\u4e3a 80 \u7aef\u53e3\uff0c\u7136\u540e\u91cd\u65b0\u5199\u4f1a __address__ \u8fd9\u4e2a\u76ee\u6807\u6807\u7b7e\u3002 2-1 \u4fdd\u7559\u6216\u4e22\u5f03\u5bf9\u8c61 Relabeling \u53e6\u4e00\u4e2a\u5e38\u89c1\u7684\u7528\u4f8b\u5c31\u662f\u8fc7\u6ee4\u6709\u6807\u7b7e\u7684\u5bf9\u8c61\uff0c keep \u6216 drop \u8fd9\u4e24\u4e2a\u52a8\u4f5c\u53ef\u4ee5\u6765\u5b8c\u6210\uff0c\u4f7f\u7528\u8fd9\u4e24\u4e2a\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u5982\u4e0b\u7684\u4e00\u4e9b\u64cd\u4f5c\uff1a \u6765\u81ea\u670d\u52a1\u53d1\u73b0\u7684\u54ea\u4e9b\u76ee\u6807\u5e94\u8be5\u88ab\u6293\u53d6 \u4ece\u76ee\u6807\u4e2d\u6293\u53d6\u54ea\u4e9b\u6307\u5b9a\u7684\u5e8f\u5217\u6837\u672c\uff0c\u6216\u5c06\u5176\u53d1\u9001\u5230\u8fdc\u7a0b\u5b58\u50a8 \u54ea\u4e9b\u62a5\u8b66\u8981\u53d1\u9001\u5230 Alertmanager \u4e00\u4e2a keep \u52a8\u4f5c\u7684\u914d\u7f6e\u89c4\u5219\u5982\u4e0b\u6240\u793a\uff1a action: keep source_labels: [<source label name list>] separator: <source labels separator> # \u9ed8\u8ba4\u4e3a ';' regex: <regular expression> # \u9ed8\u8ba4\u4e3a '(.*)' (\u5339\u914d\u4efb\u4f55\u503c) keep \u64cd\u4f5c\u540c\u6837\u6309\u987a\u5e8f\u6267\u884c\u5982\u4e0b\u6b65\u9aa4\uff1a \u4f7f\u7528 separator \u5206\u9694\u7b26\u5c06 source_labels \u4e2d\u5217\u51fa\u7684\u6807\u7b7e\u503c\u8fde\u63a5\u8d77\u6765 \u6d4b\u8bd5 regex \u4e2d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u5426\u4e0e\u4e0a\u4e00\u6b65\u7684\u8fde\u63a5\u5b57\u7b26\u4e32\u5339\u914d \u5982\u679c\u4e0d\u5339\u914d\uff0c\u8be5\u5bf9\u8c61\u5c06\u4ece\u6700\u7ec8\u8f93\u51fa\u5217\u8868\u4e2d\u5220\u9664 \u5982\u679c\u5339\u914d\uff0c\u5219\u4fdd\u7559\u8be5\u5bf9\u8c61 drop \u52a8\u4f5c\u548c keep \u7c7b\u4f3c\uff0c\u53ea\u662f\u5b83\u662f\u5220\u9664\u4e00\u4e2a\u5bf9\u8c61\u800c\u4e0d\u662f\u4fdd\u7559\u3002 \u540c\u6837\u63a5\u4e0b\u6765\u770b\u4e00\u770b keep \u548c drop \u7684\u793a\u4f8b\u3002 \u53ea\u6293\u53d6\u5177\u6709\u6ce8\u89e3\u7684\u76ee\u6807 \u5728\u670d\u52a1\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u80fd\u53ea\u60f3\u6293\u53d6\u90a3\u4e9b\u5177\u6709\u7279\u5b9a\u5143\u6570\u636e\u6807\u7b7e\u7684\u76ee\u6807\uff0c\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u914d\u7f6e\u8ba9\u6211\u4eec\u53ea\u6293\u53d6 Kubernetes \u4e2d\u5177\u6709 example.io/should_be_scraped=true \u8fd9\u4e2a annotation \u7684\u76ee\u6807\u3002 action: keep source_labels: [__meta_kubernetes_service_annotation_example_io_should_be_scraped] regex: true Kubernetes \u670d\u52a1\u53d1\u73b0\u673a\u5236\u4e0b\u9762\u4f1a\u5c06 labels \u6807\u7b7e\u4e0e annotation \u4f5c\u4e3a\u5143\u4fe1\u606f\u8f93\u51fa\u5230 Prometheus\uff0c\u8fd9\u4e9b\u5143\u4fe1\u606f\u90fd\u5305\u542b __meta_ \u524d\u7f00\uff0c\u8fd9\u91cc\u6211\u4eec\u7684\u914d\u7f6e\u5c31\u662f\u4fdd\u7559\u5177\u6709 example.io/should_be_scraped \u8fd9\u4e2a annotation \u6807\u7b7e\uff0c\u4e14\u503c\u4e3a true \u7684\u76ee\u6807\u3002 \u53ea\u5b58\u50a8\u7279\u5b9a\u7684\u6307\u6807 \u5f53\u4f7f\u7528 metric_relabel_configs \u6765\u63a7\u5236\u76ee\u6807\u7684\u6293\u53d6\u65b9\u5f0f\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u89c4\u5219\u6765\u53ea\u5b58\u50a8\u6307\u6807\u540d\u79f0\u4ee5 api_ \u6216 http_ \u5f00\u5934\u7684\u6307\u6807\u3002 action: keep source_labels: [__name__] regex: \"(api_|http_).*\" 2-2 \u6807\u7b7e\u6620\u5c04 \u6709\u65f6\u6211\u4eec\u53ef\u80fd\u60f3\u628a\u6e90\u6807\u7b7e\u7684\u503c\u6620\u5c04\u5230\u4e00\u7ec4\u65b0\u7684\u6807\u7b7e\u4e2d\u53bb\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528 labelmap \u8fd9\u4e2a\u52a8\u4f5c\u4e86\u3002 labelmap \u6700\u5e38\u7528\u7684\u4f7f\u7528\u573a\u666f\u5c31\u662f\u4ece\u670d\u52a1\u53d1\u73b0\u4e2d\u83b7\u53d6\u4e00\u7ec4\u9690\u85cf\u7684\u6216\u4e34\u65f6\u7684\u5143\u6570\u636e\u6807\u7b7e\uff0c\u5e76\u5c06\u5b83\u4eec\u6620\u5c04\u5230\u65b0\u7684\u76ee\u6807\u6807\u7b7e\u4e2d\u3002 labelmap \u52a8\u4f5c\u7684\u914d\u7f6e\u89c4\u5219\u5982\u4e0b\u6240\u793a\uff1a action: labelmap regex: <regular expression> # \u9ed8\u8ba4\u4e3a '(.*)' replacement: <replacement string> # \u9ed8\u8ba4\u4e3a '$1' \u548c\u524d\u9762\u7684\u4e00\u4e9b action \u4e0d\u540c\uff0c labelmap \u662f\u5bf9\u6807\u7b7e\u540d\u800c\u4e0d\u662f\u6807\u7b7e\u503c\u8fdb\u884c\u91cd\u65b0\u5339\u914d\u548c\u64cd\u4f5c\u3002 labelmap \u6309\u987a\u5e8f\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u5c06 regex \u4e2d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u6240\u6709\u6807\u7b7e\u540d\u8fdb\u884c\u5339\u914d \u5c06\u5339\u914d\u7684\u6807\u7b7e\u540d\u7684\u4efb\u4f55\u5339\u914d\u503c\u590d\u5236\u5230\u7531 replacement \u5b57\u7b26\u4e32\u51b3\u5b9a\u7684\u65b0\u7684\u6807\u7b7e\u540d\u4e2d \u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e2a\u4f7f\u7528 labelmap \u6620\u5c04 Kubernetes Service \u6807\u7b7e\u7684\u793a\u4f8b\u3002\u5f53\u4f7f\u7528\u57fa\u4e8e Kubernetes \u7684\u670d\u52a1\u53d1\u73b0\u6765\u53d1\u73b0 pod \u7aef\u70b9\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u6bcf\u4e2a\u7aef\u70b9\u7684\u6700\u7ec8\u76ee\u6807\u6807\u7b7e\u4e5f\u5305\u542b Kubernetes Service \u6807\u7b7e\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u597d\u7684\u533a\u5206\u7aef\u70b9\u6570\u636e\u3002Kubernetes \u670d\u52a1\u53d1\u73b0\u673a\u5236\u4f1a\u5c06\u8fd9\u4e9b\u6807\u7b7e\u6dfb\u52a0\u5230 Prometheus \u4e2d\u53bb\uff0c\u6807\u7b7e\u540d\u79f0\u683c\u5f0f\u4e3a __meta_kubernetes_service_label_<labelname> \uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u8fd9\u4e9b\u5143\u6570\u636e\u6807\u7b7e\u4e2d\u7684 <labelname> \u90e8\u5206\uff0c\u5e76\u5c06\u76f8\u5e94\u7684\u6807\u7b7e\u503c\u6620\u5c04\u5230\u4e00\u7ec4\u4ee5 k8s_ \u4e3a\u524d\u7f00\u7684\u65b0\u6807\u7b7e\u540d\u79f0\u4e0a\uff0c\u5982\u4e0b\u6240\u793a\uff1a action: labelmap regex: __meta_kubernetes_service_label_(.+) replacement: \"k8s_$1\" \u901a\u8fc7\u4e0a\u9762\u7684 labelmap \u64cd\u4f5c\uff0c regex \u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u5339\u914d\u6807\u7b7e\u540d\uff0c\u7136\u540e\u5c06\u6807\u7b7e\u540d\u5bf9\u5e94\u7684\u503c\u590d\u5236\u5230 k8s_$1 \u7684\u65b0\u6807\u7b7e\u4e2d\uff0c $1 \u5c31\u662f\u5339\u914d\u7684\u6807\u7b7e\u540d\u8fd9\u4e2a\u6355\u83b7\u7ec4\u3002 2-3 \u4fdd\u7559\u6216\u5220\u9664\u6807\u7b7e \u6709\u7684\u65f6\u5019\u6211\u4eec\u4e5f\u6709\u4fdd\u7559\u6216\u5220\u9664\u4e00\u4e9b\u6807\u7b7e\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u6709\u7684\u76ee\u6807\u5728\u65f6\u95f4\u5e8f\u5217\u4e0a\u63d0\u4f9b\u4e86\u8bb8\u591a\u989d\u5916\u7684\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u7528\u9014\u4e0d\u5927\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 labelkeep \u548c labeldrop \u8fd9\u4e24\u4e2a\u64cd\u4f5c\uff0c\u4f7f\u7528\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u4fdd\u7559\u6216\u5220\u9664\u4e00\u4e9b\u6807\u7b7e\u3002 labelkeep \u7684\u914d\u7f6e\u89c4\u5219\u5982\u4e0b\u6240\u793a\uff1a action: labelkeep regex: <regular expression> # \u9ed8\u8ba4\u4e3a'(.*)' \u9996\u5148\u5c06 regex \u4e2d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u6240\u6709\u6807\u7b7e\u540d\u79f0\u8fdb\u884c\u5339\u914d \u5b83\u53ea\u4fdd\u7559\u90a3\u4e9b\u5339\u914d\u7684\u6807\u7b7e labeldrop \u4e0e labelkeep \u7c7b\u4f3c\uff0c\u53ea\u662f\u5b83\u662f\u5220\u9664\u90a3\u4e9b\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6807\u7b7e\u800c\u4e0d\u662f\u4fdd\u7559\u3002 \u4e0b\u9762\u6211\u4eec\u770b\u4e00\u770b labelkeep/labeldrop \u64cd\u4f5c\u7684\u7b80\u5355\u793a\u4f8b\u3002 \u4ece\u62a5\u8b66\u4e2d\u5220\u9664\u9ad8\u53ef\u7528\u526f\u672c\u6807\u7b7e \u5f53\u8fd0\u884c\u4e24\u4e2a\u76f8\u540c\u7684 Prometheus \u4f5c\u9ad8\u53ef\u7528\u7684\u65f6\u5019\uff0c\u901a\u5e38\u4e24\u4e2a\u670d\u52a1\u5668\u90fd\u88ab\u914d\u7f6e\u4e3a\u6709\u4e00\u4e2a\u5916\u90e8\u6807\u7b7e\uff08\u901a\u8fc7\u5168\u5c40\u914d\u7f6e\u9009\u9879 external_labels \uff09\uff0c\u8868\u660e\u5b83\u4eec\u4ee3\u8868\u54ea\u4e2a\u526f\u672c\uff0c\u4f8b\u5982\uff1a replica: A \u548c replica: B \uff0c\u5728\u4ece\u4e24\u4e2a\u526f\u672c\u5411\u540c\u4e00\u4e2a Alertmanager \u5b9e\u4f8b\u53d1\u9001\u62a5\u8b66\u4e4b\u524d\uff0c Prometheus \u9700\u8981\u5220\u9664\u8fd9\u4e2a\u526f\u672c\u6807\u7b7e\uff0c\u8fd9\u6837 Alertmanager \u5c31\u4e0d\u4f1a\u628a\u6536\u5230\u7684\u62a5\u8b66\u770b\u6210\u4e0d\u540c\u7684\u62a5\u8b66\u4e86\uff0c\u5426\u5219\u53ef\u80fd\u6211\u4eec\u4f1a\u6536\u5230\u4e24\u4e2a\u540c\u6837\u7684\u62a5\u8b66\u901a\u77e5\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 labeldrop \u6765\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\u3002 action: labeldrop regex: replica \u8fd9\u6761\u914d\u7f6e\u89c4\u5219\u5f88\u7b80\u5355\u7684\uff0c\u5c31\u662f\u5339\u914d replica \u8fd9\u4e2a\u6807\u7b7e\uff0c\u7136\u540e\u6267\u884c labeldrop \u5220\u9664\u6807\u7b7e\u52a8\u4f5c\u5373\u53ef\u3002 \u5220\u9664\u6307\u6807\u4e2d\u4e0d\u9700\u8981\u7684\u6807\u7b7e \u6709\u7684\u65f6\u5019\u6211\u4eec\u6293\u53d6\u7684\u6307\u6807\u5728\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u4e0a\u90fd\u9644\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\u7528\u5904\u4e0d\u5927\uff0c\u8fd8\u4f1a\u589e\u52a0 Prometheus \u7684\u5b58\u50a8\u538b\u529b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u529e\u6cd5\u5220\u9664\u4e0d\u9700\u8981\u7684\u989d\u5916\u6807\u7b7e\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u60f3\u8981\u5220\u9664\u4e00 info_ \u5f00\u5934\u7684\u6807\u7b7e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u914d\u7f6e\u89c4\u5219\u6765\u5b8c\u6210\u3002 action: labeldrop regex: info_.* \u540c\u6837\u4e5f\u53ea\u662f\u914d\u7f6e\u4e00\u4e2a\u8981\u5220\u9664\u7684\u76ee\u6807\u6807\u7b7e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5373\u53ef\uff0c\u53ea\u8981\u5339\u914d\u4e86\u7684\u6807\u7b7e\u90fd\u4f1a\u6267\u884c labeldrop \u64cd\u4f5c\u5c06\u8be5\u6807\u7b7e\u8fdb\u884c\u5220\u9664\u3002 2-4 \u6807\u7b7e\u54c8\u5e0c\u548c\u5206\u7247 \u5728\u4e00\u4e9b\u573a\u666f\u4e0b\u6211\u4eec\u53ef\u80fd\u9700\u8981\u8fd0\u884c\u591a\u4e2a\u51e0\u4e4e\u76f8\u540c\u7684 Prometheus \u526f\u672c\u6765\u6a2a\u5411\u6269\u5c55\uff0c\u6bcf\u4e2a\u526f\u672c\u53ea\u6293\u53d6\u90e8\u5206\u76ee\u6807\uff0c\u8fd9\u6837\u53ef\u4ee5\u964d\u4f4e Prometheus \u7684\u538b\u529b\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b hashmod \u64cd\u4f5c\u6709\u52a9\u4e8e\u6211\u4eec\u5bf9\u76ee\u6807\u8fdb\u884c\u5206\u7247\u64cd\u4f5c\u3002 hashmod \u7684\u914d\u7f6e\u89c4\u5219\u5982\u4e0b\u6240\u793a\uff1a action: hashmod source_labels: [<source label name list>] modulus: <modulus value> target_label: <target label> \u8be5\u64cd\u4f5c\u6309\u987a\u5e8f\u6267\u884c\u4e0b\u9762\u7684\u6b65\u9aa4\uff1a \u9996\u5148\u4f7f\u7528\u5206\u9694\u7b26\u5c06\u6e90\u6807\u7b7e\u96c6 source_labels \u7684\u503c\u8fde\u63a5\u8d77\u6765 \u8ba1\u7b97\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c \u5c06 modulus \u4e2d\u63d0\u4f9b\u7684\u6a21\u6570\u5e94\u7528\u4e8e\u54c8\u5e0c\u503c\uff0c\u4ee5\u5c06\u54c8\u5e0c\u503c\u9650\u5236\u5728 0 \u548c modulus-1 \u4e4b\u95f4 \u5c06\u4e0a\u4e00\u6b65\u7684\u6a21\u6570\u503c\u5b58\u50a8\u5728 target_label \u76ee\u6807\u6807\u7b7e\u4e2d \u4f7f\u7528 hashmod \u7684\u4e3b\u8981\u573a\u666f\u662f\u5c06\u4e00\u4e2a\u670d\u52a1\u7684\u6574\u4f53\u76ee\u6807\u8fdb\u884c\u5206\u7247\uff0c\u7528\u4e8e\u6c34\u5e73\u6269\u5c55 Prometheus \uff0c\u901a\u8fc7\u9996\u5148\u6839\u636e\u6bcf\u4e2a\u76ee\u6807\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u7b7e\u8ba1\u7b97\u57fa\u4e8e\u54c8\u5e0c\u7684\u6a21\u6570\u6765\u5b9e\u73b0\u7684\uff0c\u7136\u540e\u53ea\u4fdd\u7559\u5177\u6709\u7279\u5b9a\u8f93\u51fa\u6a21\u6570\u503c\u7684\u76ee\u6807\u3002 \u6bd4\u5982\u4e3a\u4e86\u6839\u636e instance \u6807\u7b7e\u5bf9\u76ee\u6807\u8fdb\u884c\u5206\u7247\uff0c\u53ea\u4fdd\u7559\u5206\u7247 2 \u7684\u5b9e\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u628a hashmod \u548c keep \u7ed3\u5408\u8d77\u6765\u64cd\u4f5c\u3002 - action: hashmod source_labels: [instance] modulus: 10 target_label: __tmp_hashmod - action: keep source_labels: [__tmp_hashmod] regex: 2 \u9996\u5148\u901a\u8fc7 hashmod \u64cd\u4f5c\u5bf9 instance \u6807\u7b7e\u8fdb\u53bb\u54c8\u5e0c\u64cd\u4f5c\uff0c\u5c06\u53d6\u6a21\u540e\u7684\u503c\u5b58\u50a8\u5728\u4e34\u65f6\u6807\u7b7e __tmp_hashmod \u4e2d\uff0c\u7136\u540e\u901a\u8fc7\u7b2c\u4e8c\u4e2a keep \u64cd\u4f5c\uff0c\u53ea\u4fdd\u7559\u5206\u7247\u6570\u4e3a 2 \u7684\u6307\u6807\uff0c\u8fd9\u6837\u5c31\u8fbe\u5230\u4e86\u5206\u7247\u7684\u76ee\u7684\u3002 \u5230\u8fd9\u91cc\u6211\u4eec\u57fa\u672c\u4e0a\u5c31\u4e86\u89e3\u4e86 relabeling \u7684\u4f7f\u7528\uff0c\u540e\u7eed\u6211\u4eec\u53ef\u4ee5\u518d\u53bb\u4e86\u89e3\u670d\u52a1\u53d1\u73b0\u5728 Prometheus \u4e2d\u7684\u4f7f\u7528\u3002","title":"\u7b2c\u4e8c\u8282 Prometheus Relabeling\u91cd\u65b0\u6807\u8bb0\u7684\u4f7f\u7528"},{"location":"chap5/52Prometheus_Relabeling/#prometheus-relabeling","text":"Relabeling \u91cd\u65b0\u6807\u8bb0\u662f\u914d\u7f6e Prometheus \u5143\u4fe1\u606f\u7684\u65b9\u5f0f\uff0c\u5b83\u662f\u8f6c\u6362\u548c\u8fc7\u6ee4 Prometheus \u4e2d label \u6807\u7b7e\u5bf9\u8c61\u7684\u6838\u5fc3\uff0c\u672c\u6587\u6211\u4eec\u5c06\u4e86\u89e3 Relabeling \u89c4\u5219\u7684\u5de5\u4f5c\u539f\u7406\u4ee5\u53ca\u5728\u4e0d\u540c\u573a\u666f\u4e2d\u7684\u5e94\u7528\u65b9\u5f0f\u3002","title":"\u7b2c\u4e8c\u8282 Prometheus Relabeling \u91cd\u65b0\u6807\u8bb0\u7684\u4f7f\u7528"},{"location":"chap5/52Prometheus_Relabeling/#1","text":"\u53ea\u76d1\u89c6\u5177\u6709\u7279\u5b9a\u670d\u52a1\u53d1\u73b0\u6ce8\u89e3\u7684\u67d0\u4e9b\u76ee\u6807\uff0c\u901a\u5e38\u5728\u670d\u52a1\u53d1\u73b0\u4e2d\u4f7f\u7528 \u5411\u76ee\u6807\u6293\u53d6\u8bf7\u6c42\u6dfb\u52a0 HTTP \u67e5\u8be2\u53c2\u6570 \u4ec5\u5b58\u50a8\u4ece\u6307\u5b9a\u76ee\u6807\u4e2d\u63d0\u53d6\u6837\u672c\u7684\u5b50\u96c6 \u5c06\u6293\u53d6\u5e8f\u5217\u7684\u4e24\u4e2a\u6807\u7b7e\u503c\u5408\u5e76\u4e3a\u4e00\u4e2a\u6807\u7b7e Relabeling \u662f\u4f5c\u4e3a\u4e00\u7cfb\u5217\u8f6c\u6362\u6b65\u9aa4\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u5e94\u7528\u8fd9\u4e9b\u6b65\u9aa4\u6765\u8fc7\u6ee4\u6216\u4fee\u6539\u6807\u8bb0\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u4e0b\u7c7b\u578b\u7684\u6807\u8bb0\u5bf9\u8c61\u5e94\u7528 Relabeling \u64cd\u4f5c\uff1a \u53d1\u73b0\u7684\u6293\u53d6\u76ee\u6807\uff08 relabel_configs \uff09 \u6293\u53d6\u7684\u5355\u4e2a\u6837\u672c\uff08 metric_relabel_configs \uff09 \u53d1\u9001\u7ed9 Alertmanager \u7684\u62a5\u8b66\uff08 alert_relabel_configs \uff09 \u5199\u5230\u8fdc\u7a0b\u5b58\u50a8\u7684\u6837\u672c\uff08 write_relabel_configs \uff09 \u6240\u6709\u8fd9\u4e9b relabeling \u914d\u7f6e\u5757\u90fd\u662f\u76f8\u540c\u7c7b\u578b\u7684 relabel_config \uff0c\u6bcf\u4e2a\u914d\u7f6e\u5757\u90fd\u7531\u4e00\u4e2a\u89c4\u5219\u5217\u8868\u7ec4\u6210\uff0c\u8fd9\u4e9b\u89c4\u5219\u4f9d\u6b21\u5e94\u7528\u4e8e\u6bcf\u4e2a\u6807\u8bb0\u7684\u5bf9\u8c61\u3002 \u4f8b\u5982\uff0c\u4e00\u4e2a relabeling \u89c4\u5219\u53ef\u4ee5\u6839\u636e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u6765\u4fdd\u7559\u6216\u4e22\u5f03\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4fee\u6539\u5176\u6807\u7b7e\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e00\u6574\u7ec4\u6807\u7b7e\u6620\u5c04\u5230\u53e6\u4e00\u7ec4\u3002 \u4e00\u65e6\u4e00\u4e2a relabeling \u6b65\u9aa4\u51b3\u5b9a\u653e\u5f03\u4e00\u4e2a\u6709\u6807\u7b7e\u7684\u5bf9\u8c61\uff0c\u5c31\u4e0d\u4f1a\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u6267\u884c\u8fdb\u4e00\u6b65\u7684 relabeling \u6b65\u9aa4\uff0c\u5b83\u5c06\u4ece\u8f93\u51fa\u5217\u8868\u4e2d\u5220\u9664\u3002","title":"1\u3001\u6982\u8ff0"},{"location":"chap5/52Prometheus_Relabeling/#2","text":"\u4ee5\u53cc\u4e0b\u5212\u7ebf __ \u5f00\u5934\u7684\u6807\u7b7e\u5c5e\u4e8e\u7279\u6b8a\u7684\u6807\u7b7e\uff0c\u5b83\u4eec\u5728\u91cd\u65b0\u6807\u8bb0\u540e\u4f1a\u88ab\u5220\u9664\u3002 \u6807\u8bb0\u5bf9\u8c61\u7684\u6765\u6e90\u6700\u521d\u53ef\u4ee5\u9644\u52a0 \u8fd9\u4e9b \u9690\u85cf\u7684\u6807\u7b7e\uff0c\u4ee5\u63d0\u4f9b\u5173\u4e8e\u6807\u8bb0\u5bf9\u8c61\u7684\u989d\u5916\u5143\u6570\u636e\uff0c\u8fd9\u4e9b\u7279\u6b8a\u7684\u6807\u7b7e\u53ef\u4ee5\u5728 relabeling \u9636\u6bb5\u88ab\u7528\u6765\u5bf9\u5bf9\u8c61\u7684\u6807\u7b7e\u8fdb\u884c\u4fee\u6539\u3002 \u5bf9\u4e8e\u6293\u53d6\u6307\u6807\uff0c\u5176\u4e2d\u5c31\u5305\u542b\u4e00\u4e9b\u9690\u85cf\u7684\u6807\u7b7e\uff0c\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u76ee\u6807\u5e94\u8be5\u5982\u4f55\u88ab\u6293\u53d6\u3002 __address__ \uff1a\u5305\u542b\u5e94\u8be5\u88ab\u6293\u53d6\u76ee\u6807\u7684\u5730\u5740\uff0c \u5b83\u6700\u521d\u9ed8\u8ba4\u4e3a\u670d\u52a1\u53d1\u73b0\u673a\u5236\u63d0\u4f9b\u7684 <host>:<port> \uff0c\u5982\u679c\u5728\u6b64\u4e4b\u524d\u6ca1\u6709\u660e\u786e\u5730\u5c06\u5b9e\u4f8b\u6807\u7b7e instance \u8bbe\u7f6e\u4e3a\u5176\u4ed6\u503c\uff0c\u90a3\u4e48\u5728 relabeling \u4e4b\u540e\uff0c Prometheus \u4f1a\u5c06 instance \u6807\u7b7e\u8bbe\u7f6e\u4e3a __address__ \u7684\u503c\u3002 __scheme__ \uff1a\u6293\u53d6\u76ee\u6807\u7684\u8bf7\u6c42\u6a21\u5f0f\uff0c\u5305\u62ec http \u4e0e https\uff0c\u9ed8\u8ba4\u4e3a http\u3002 __metrics_path__ \uff1a\u8868\u793a\u7528\u4e8e\u91c7\u96c6\u6307\u6807\u7684 HTTP \u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a /metrics \u3002 __param_<name> : \u5305\u542b HTTP \u67e5\u8be2\u53c2\u6570\u540d\u79f0\u548c\u5b83\u4eec\u7684\u503c\u3002 \u4e0a\u9762\u7684\u8fd9\u4e9b\u6807\u7b7e\u90fd\u53ef\u4ee5\u4f7f\u7528 relabeling \u89c4\u5219\u6765\u8bbe\u7f6e\u6216\u8986\u76d6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e3a\u6293\u53d6\u76ee\u6807\u8fdb\u884c\u81ea\u5b9a\u4e49\u6293\u53d6\u884c\u4e3a\u3002 \u6b64\u5916\uff0c\u670d\u52a1\u53d1\u73b0\u673a\u5236\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u4e00\u7ec4\u4ee5 __meta_ \u5f00\u5934\u7684\u6807\u7b7e\uff0c\u5305\u542b\u5173\u4e8e\u76ee\u6807\u7684\u7279\u5b9a\u53d1\u73b0\u5143\u6570\u636e\u3002 \u4f8b\u5982\uff0c\u5f53\u53d1\u73b0 Kubernetes \u96c6\u7fa4\u4e2d\u7684 pod \u65f6\uff0cKubernetes \u670d\u52a1\u53d1\u73b0\u5f15\u64ce\u5c06\u4e3a\u6bcf\u4e2a pod \u76ee\u6807\u63d0\u4f9b\u4e00\u4e2a __meta_kubernetes_pod_name \u7684\u6807\u7b7e\uff0c\u5305\u542b\u88ab\u53d1\u73b0\u7684 pod \u7684\u540d\u5b57\uff0c\u4ee5\u53ca\u4e00\u4e2a __meta_kubernetes_pod_ready \u6807\u7b7e\uff0c\u8868\u660e pod \u662f\u5426\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\uff0c \u5173\u4e8e\u670d\u52a1\u53d1\u73b0\u751f\u6210\u7684\u5143\u6807\u7b7e\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863 https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config \u4e86\u89e3\u66f4\u591a\u3002 \u5982\u679c\u4e00\u4e2a relabeling \u6b65\u9aa4\u9700\u8981\u5c06\u4e00\u4e2a\u503c\u4fdd\u5b58\u5230\u4e00\u4e2a\u4e34\u65f6\u6807\u7b7e\u4e2d\uff08\u4ee5\u4fbf\u5728\u968f\u540e\u7684\u6b65\u9aa4\u4e2d\u5904\u7406\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 __tmp \u6807\u7b7e\u540d\u79f0\u524d\u7f00\u8fdb\u884c\u6807\u8bb0\uff0c\u4ee5 __tmp \u5f00\u901a\u7684\u6807\u7b7e\u662f\u4e0d\u4f1a\u88ab Prometheus \u672c\u8eab\u4f7f\u7528\u7684\u3002","title":"2\u3001\u9690\u85cf\u7684\u6807\u7b7e\u4e0e\u5143\u6570\u636e"},{"location":"chap5/52Prometheus_Relabeling/#2-relabeling","text":"Relabeling \u89c4\u5219\u4e3b\u8981\u7531\u4ee5\u4e0b\u7684\u4e00\u4e9b\u914d\u7f6e\u5c5e\u6027\u7ec4\u6210\uff0c\u4f46\u5bf9\u4e8e\u6bcf\u79cd\u7c7b\u578b\u7684\u64cd\u4f5c\uff0c\u53ea\u4f7f\u7528\u8fd9\u4e9b\u5b57\u6bb5\u7684\u4e00\u4e2a\u5b50\u96c6\u3002 action \uff1a\u6267\u884c\u7684 relabeling \u52a8\u4f5c\uff0c\u53ef\u9009\u503c\u5305\u62ec replace \u3001 keep \u3001 drop \u3001 hashmod \u3001 labelmap \u3001 labeldrop \u6216\u8005 labelkeep \uff0c\u9ed8\u8ba4\u503c\u4e3a replace \u3002 separator \uff1a\u5206\u9694\u7b26\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u5728\u8fde\u63a5\u6e90\u6807\u7b7e source_labels \u65f6\u5206\u9694\u5b83\u4eec\uff0c\u9ed8\u8ba4\u4e3a;\u3002 source_labels \uff1a\u6e90\u6807\u7b7e\uff0c\u4f7f\u7528\u914d\u7f6e\u7684\u5206\u9694\u7b26\u4e32\u8054\u7684\u6807\u7b7e\u540d\u79f0\u5217\u8868\uff0c\u5e76\u4e0e\u63d0\u4f9b\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u5339\u914d \u3002 target_label \uff1a\u76ee\u6807\u6807\u7b7e\uff0c\u5f53\u4f7f\u7528 replace \u6216\u8005 hashmod \u52a8\u4f5c\u65f6\uff0c\u5e94\u8be5\u88ab\u8986\u76d6\u7684\u6807\u7b7e\u540d\u3002 regex \uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u4e8e\u5339\u914d\u4e32\u8054\u7684\u6e90\u6807\u7b7e\uff0c\u9ed8\u8ba4\u4e3a (.*) \uff0c\u5339\u914d\u4efb\u4f55\u6e90\u6807\u7b7e\u3002 modulus \uff1a\u6a21\u6570\uff0c\u4e32\u8054\u7684\u6e90\u6807\u7b7e\u54c8\u5e0c\u503c\u7684\u6a21\uff0c\u4e3b\u8981\u7528\u4e8e Prometheus \u6c34\u5e73\u5206\u7247 \u3002 replacement \uff1areplacement \u5b57\u7b26\u4e32\uff0c\u5199\u5728\u76ee\u6807\u6807\u7b7e\u4e0a\uff0c\u7528\u4e8e\u66ff\u6362 relabeling \u52a8\u4f5c\uff0c\u5b83\u53ef\u4ee5\u53c2\u8003\u7531 regex \u6355\u83b7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6355\u83b7\u7ec4\u3002","title":"2 Relabeling \u89c4\u5219"},{"location":"chap5/52Prometheus_Relabeling/#2-1","text":"Relabeling \u7684\u4e00\u4e2a\u5e38\u89c1\u64cd\u4f5c\u5c31\u662f\u8bbe\u7f6e\u6216\u8005\u8986\u76d6\u4e00\u4e2a\u6807\u7b7e\u7684\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 replace \u8fd9\u4e2a\u64cd\u4f5c\u6765\u5b8c\u6210\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a action \u5b57\u6bb5\uff0c\u5219\u9ed8\u8ba4\u5c31\u662f replace \u3002 \u4e00\u4e2a replace \u52a8\u4f5c\u7684\u89c4\u5219\u914d\u7f6e\u65b9\u5f0f\u5982\u4e0b\u6240\u793a\uff1a action: replace source_labels: [<source label name list>] separator: <source labels separator> # \u9ed8\u8ba4\u4e3a ';' regex: <regular expression> # \u9ed8\u8ba4\u4e3a '(.*)' (\u5339\u914d\u4efb\u4f55\u503c)) replacement: <replacement string> # \u9ed8\u8ba4\u4e3a '$1' (\u4f7f\u7528\u7b2c\u4e00\u4e2a\u6355\u83b7\u7ec4\u4f5c\u4e3a replacement) target_label: <target label> \u8be5\u64cd\u4f5c\u6309\u987a\u5e8f\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u4f7f\u7528\u63d0\u4f9b\u7684 separator \u5206\u9694\u7b26\u5c06 source_labels \u4e2d\u7684\u6807\u7b7e\u5217\u8868\u503c\u8fde\u63a5\u8d77\u6765 \u6d4b\u8bd5 regex \u4e2d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u5426\u4e0e\u4e0a\u4e00\u6b65\u8fde\u63a5\u7684\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5339\u914d\uff0c\u5c31\u8df3\u5230\u4e0b\u4e00\u4e2a relabeling \u89c4\u5219\uff0c\u4e0d\u66ff\u6362\u4efb\u4f55\u4e1c\u897f \u5982\u679c\u6b63\u5219\u5339\u914d\uff0c\u5c31\u63d0\u53d6\u6b63\u5219\u8868\u8fbe\u5f0f\u6355\u83b7\u7ec4\u4e2d\u7684\u503c\uff0c\u5e76\u5c06 replacement \u5b57\u7b26\u4e32\u4e2d\u5bf9\u8fd9\u4e9b\u7ec4\u7684\u5f15\u7528(2, ...)\u7528\u5b83\u4eec\u7684\u503c\u66ff\u6362 \u628a\u7ecf\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u66ff\u6362\u7684 replacement \u5b57\u7b26\u4e32\u4f5c\u4e3a target_label \u6807\u7b7e\u7684\u65b0\u503c\u5b58\u50a8\u8d77\u6765 \u4e0b\u9762\u6211\u4eec\u6765\u7b80\u5355\u770b\u4e00\u770b replace \u64cd\u4f5c\u7684\u793a\u4f8b\u3002 \u8bbe\u7f6e\u4e00\u4e2a\u56fa\u5b9a\u7684\u6807\u7b7e\u503c \u6700\u7b80\u5355\u7684 replace \u4f8b\u5b50\u5c31\u662f\u5c06\u4e00\u4e2a\u6807\u7b7e\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u628a env \u6807\u7b7e\u8bbe\u7f6e\u4e3a production \uff1a action: replace replacement: production target_label: env \u8fd9\u91cc\u6211\u4eec\u5e76\u6ca1\u6709\u8bbe\u7f6e\u89c4\u5219\u7684\u5927\u90e8\u5206\u5c5e\u6027\uff0c\u8fd9\u662f\u56e0\u4e3a\u5927\u90e8\u5206\u7684\u9ed8\u8ba4\u503c\u5df2\u7ecf\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u91cc\u7684\u9700\u6c42\u4e86\uff0c\u8fd9\u91cc\u4f1a\u5c06\u66ff\u6362\u7684\u5b57\u7b26\u4e32 production \u4f5c\u4e3a target_label \u6807\u7b7e env \u7684\u65b0\u503c\u5b58\u50a8\u8d77\u6765\uff0c\u4e5f\u5c31\u662f\u5c06 env \u6807\u7b7e\u7684\u503c\u8bbe\u7f6e\u4e3a production \u3002 \u66ff\u6362\u6293\u53d6\u4efb\u52a1\u7aef\u53e3 \u53e6\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u7684\u793a\u4f8b\u662f\u91cd\u5199\u4e00\u4e2a\u88ab\u6293\u53d6\u4efb\u52a1\u5b9e\u4f8b\u7684\u7aef\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684 80 \u7aef\u53e3\u6765\u66ff\u6362 __address__ \u6807\u7b7e\u7684\u7aef\u53e3\uff1a action: replace source_labels: [__address__] regex: ([^:]+)(?::\\d+)? # \u7b2c\u4e00\u4e2a\u6355\u83b7\u7ec4\u5339\u914d\u7684\u662f host\uff0c\u7b2c\u4e8c\u4e2a\u5339\u914d\u7684\u662f port \u7aef\u53e3\u3002 replacement: \"$1:80\" target_label: __address__ \u8fd9\u91cc\u6211\u4eec\u66ff\u6362\u7684\u6e90\u6807\u7b7e\u4e3a __address__ \uff0c\u7136\u540e\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f ([^:]+)(?::\\d+)? \u8fdb\u884c\u5339\u914d\uff0c\u8fd9\u91cc\u6709\u4e24\u4e2a\u6355\u83b7\u7ec4\uff0c \u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u662f host(1) \uff0c\u7b2c\u4e8c\u4e2a\u5339\u914d\u7684\u662f\u7aef\u53e3(2) \uff0c \u6240\u4ee5\u5728 replacement \u5b57\u7b26\u4e32\u4e2d\u6211\u4eec\u4fdd\u7559\u7b2c\u4e00\u4e2a\u6355\u83b7\u7ec4 $1 \uff0c\u7136\u540e\u5c06\u7aef\u53e3\u66f4\u6539\u4e3a 80 \uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06 __address__ \u7684\u5b9e\u4f8b\u7aef\u53e3\u66f4\u6539\u4e3a 80 \u7aef\u53e3\uff0c\u7136\u540e\u91cd\u65b0\u5199\u4f1a __address__ \u8fd9\u4e2a\u76ee\u6807\u6807\u7b7e\u3002","title":"2-1 \u8bbe\u7f6e\u6216\u66ff\u6362\u6807\u7b7e\u503c"},{"location":"chap5/52Prometheus_Relabeling/#2-1_1","text":"Relabeling \u53e6\u4e00\u4e2a\u5e38\u89c1\u7684\u7528\u4f8b\u5c31\u662f\u8fc7\u6ee4\u6709\u6807\u7b7e\u7684\u5bf9\u8c61\uff0c keep \u6216 drop \u8fd9\u4e24\u4e2a\u52a8\u4f5c\u53ef\u4ee5\u6765\u5b8c\u6210\uff0c\u4f7f\u7528\u8fd9\u4e24\u4e2a\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u5982\u4e0b\u7684\u4e00\u4e9b\u64cd\u4f5c\uff1a \u6765\u81ea\u670d\u52a1\u53d1\u73b0\u7684\u54ea\u4e9b\u76ee\u6807\u5e94\u8be5\u88ab\u6293\u53d6 \u4ece\u76ee\u6807\u4e2d\u6293\u53d6\u54ea\u4e9b\u6307\u5b9a\u7684\u5e8f\u5217\u6837\u672c\uff0c\u6216\u5c06\u5176\u53d1\u9001\u5230\u8fdc\u7a0b\u5b58\u50a8 \u54ea\u4e9b\u62a5\u8b66\u8981\u53d1\u9001\u5230 Alertmanager \u4e00\u4e2a keep \u52a8\u4f5c\u7684\u914d\u7f6e\u89c4\u5219\u5982\u4e0b\u6240\u793a\uff1a action: keep source_labels: [<source label name list>] separator: <source labels separator> # \u9ed8\u8ba4\u4e3a ';' regex: <regular expression> # \u9ed8\u8ba4\u4e3a '(.*)' (\u5339\u914d\u4efb\u4f55\u503c) keep \u64cd\u4f5c\u540c\u6837\u6309\u987a\u5e8f\u6267\u884c\u5982\u4e0b\u6b65\u9aa4\uff1a \u4f7f\u7528 separator \u5206\u9694\u7b26\u5c06 source_labels \u4e2d\u5217\u51fa\u7684\u6807\u7b7e\u503c\u8fde\u63a5\u8d77\u6765 \u6d4b\u8bd5 regex \u4e2d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u5426\u4e0e\u4e0a\u4e00\u6b65\u7684\u8fde\u63a5\u5b57\u7b26\u4e32\u5339\u914d \u5982\u679c\u4e0d\u5339\u914d\uff0c\u8be5\u5bf9\u8c61\u5c06\u4ece\u6700\u7ec8\u8f93\u51fa\u5217\u8868\u4e2d\u5220\u9664 \u5982\u679c\u5339\u914d\uff0c\u5219\u4fdd\u7559\u8be5\u5bf9\u8c61 drop \u52a8\u4f5c\u548c keep \u7c7b\u4f3c\uff0c\u53ea\u662f\u5b83\u662f\u5220\u9664\u4e00\u4e2a\u5bf9\u8c61\u800c\u4e0d\u662f\u4fdd\u7559\u3002 \u540c\u6837\u63a5\u4e0b\u6765\u770b\u4e00\u770b keep \u548c drop \u7684\u793a\u4f8b\u3002 \u53ea\u6293\u53d6\u5177\u6709\u6ce8\u89e3\u7684\u76ee\u6807 \u5728\u670d\u52a1\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u80fd\u53ea\u60f3\u6293\u53d6\u90a3\u4e9b\u5177\u6709\u7279\u5b9a\u5143\u6570\u636e\u6807\u7b7e\u7684\u76ee\u6807\uff0c\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u914d\u7f6e\u8ba9\u6211\u4eec\u53ea\u6293\u53d6 Kubernetes \u4e2d\u5177\u6709 example.io/should_be_scraped=true \u8fd9\u4e2a annotation \u7684\u76ee\u6807\u3002 action: keep source_labels: [__meta_kubernetes_service_annotation_example_io_should_be_scraped] regex: true Kubernetes \u670d\u52a1\u53d1\u73b0\u673a\u5236\u4e0b\u9762\u4f1a\u5c06 labels \u6807\u7b7e\u4e0e annotation \u4f5c\u4e3a\u5143\u4fe1\u606f\u8f93\u51fa\u5230 Prometheus\uff0c\u8fd9\u4e9b\u5143\u4fe1\u606f\u90fd\u5305\u542b __meta_ \u524d\u7f00\uff0c\u8fd9\u91cc\u6211\u4eec\u7684\u914d\u7f6e\u5c31\u662f\u4fdd\u7559\u5177\u6709 example.io/should_be_scraped \u8fd9\u4e2a annotation \u6807\u7b7e\uff0c\u4e14\u503c\u4e3a true \u7684\u76ee\u6807\u3002 \u53ea\u5b58\u50a8\u7279\u5b9a\u7684\u6307\u6807 \u5f53\u4f7f\u7528 metric_relabel_configs \u6765\u63a7\u5236\u76ee\u6807\u7684\u6293\u53d6\u65b9\u5f0f\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u89c4\u5219\u6765\u53ea\u5b58\u50a8\u6307\u6807\u540d\u79f0\u4ee5 api_ \u6216 http_ \u5f00\u5934\u7684\u6307\u6807\u3002 action: keep source_labels: [__name__] regex: \"(api_|http_).*\"","title":"2-1 \u4fdd\u7559\u6216\u4e22\u5f03\u5bf9\u8c61"},{"location":"chap5/52Prometheus_Relabeling/#2-2","text":"\u6709\u65f6\u6211\u4eec\u53ef\u80fd\u60f3\u628a\u6e90\u6807\u7b7e\u7684\u503c\u6620\u5c04\u5230\u4e00\u7ec4\u65b0\u7684\u6807\u7b7e\u4e2d\u53bb\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528 labelmap \u8fd9\u4e2a\u52a8\u4f5c\u4e86\u3002 labelmap \u6700\u5e38\u7528\u7684\u4f7f\u7528\u573a\u666f\u5c31\u662f\u4ece\u670d\u52a1\u53d1\u73b0\u4e2d\u83b7\u53d6\u4e00\u7ec4\u9690\u85cf\u7684\u6216\u4e34\u65f6\u7684\u5143\u6570\u636e\u6807\u7b7e\uff0c\u5e76\u5c06\u5b83\u4eec\u6620\u5c04\u5230\u65b0\u7684\u76ee\u6807\u6807\u7b7e\u4e2d\u3002 labelmap \u52a8\u4f5c\u7684\u914d\u7f6e\u89c4\u5219\u5982\u4e0b\u6240\u793a\uff1a action: labelmap regex: <regular expression> # \u9ed8\u8ba4\u4e3a '(.*)' replacement: <replacement string> # \u9ed8\u8ba4\u4e3a '$1' \u548c\u524d\u9762\u7684\u4e00\u4e9b action \u4e0d\u540c\uff0c labelmap \u662f\u5bf9\u6807\u7b7e\u540d\u800c\u4e0d\u662f\u6807\u7b7e\u503c\u8fdb\u884c\u91cd\u65b0\u5339\u914d\u548c\u64cd\u4f5c\u3002 labelmap \u6309\u987a\u5e8f\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u5c06 regex \u4e2d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u6240\u6709\u6807\u7b7e\u540d\u8fdb\u884c\u5339\u914d \u5c06\u5339\u914d\u7684\u6807\u7b7e\u540d\u7684\u4efb\u4f55\u5339\u914d\u503c\u590d\u5236\u5230\u7531 replacement \u5b57\u7b26\u4e32\u51b3\u5b9a\u7684\u65b0\u7684\u6807\u7b7e\u540d\u4e2d \u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e2a\u4f7f\u7528 labelmap \u6620\u5c04 Kubernetes Service \u6807\u7b7e\u7684\u793a\u4f8b\u3002\u5f53\u4f7f\u7528\u57fa\u4e8e Kubernetes \u7684\u670d\u52a1\u53d1\u73b0\u6765\u53d1\u73b0 pod \u7aef\u70b9\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u6bcf\u4e2a\u7aef\u70b9\u7684\u6700\u7ec8\u76ee\u6807\u6807\u7b7e\u4e5f\u5305\u542b Kubernetes Service \u6807\u7b7e\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u597d\u7684\u533a\u5206\u7aef\u70b9\u6570\u636e\u3002Kubernetes \u670d\u52a1\u53d1\u73b0\u673a\u5236\u4f1a\u5c06\u8fd9\u4e9b\u6807\u7b7e\u6dfb\u52a0\u5230 Prometheus \u4e2d\u53bb\uff0c\u6807\u7b7e\u540d\u79f0\u683c\u5f0f\u4e3a __meta_kubernetes_service_label_<labelname> \uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u8fd9\u4e9b\u5143\u6570\u636e\u6807\u7b7e\u4e2d\u7684 <labelname> \u90e8\u5206\uff0c\u5e76\u5c06\u76f8\u5e94\u7684\u6807\u7b7e\u503c\u6620\u5c04\u5230\u4e00\u7ec4\u4ee5 k8s_ \u4e3a\u524d\u7f00\u7684\u65b0\u6807\u7b7e\u540d\u79f0\u4e0a\uff0c\u5982\u4e0b\u6240\u793a\uff1a action: labelmap regex: __meta_kubernetes_service_label_(.+) replacement: \"k8s_$1\" \u901a\u8fc7\u4e0a\u9762\u7684 labelmap \u64cd\u4f5c\uff0c regex \u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u5339\u914d\u6807\u7b7e\u540d\uff0c\u7136\u540e\u5c06\u6807\u7b7e\u540d\u5bf9\u5e94\u7684\u503c\u590d\u5236\u5230 k8s_$1 \u7684\u65b0\u6807\u7b7e\u4e2d\uff0c $1 \u5c31\u662f\u5339\u914d\u7684\u6807\u7b7e\u540d\u8fd9\u4e2a\u6355\u83b7\u7ec4\u3002","title":"2-2 \u6807\u7b7e\u6620\u5c04"},{"location":"chap5/52Prometheus_Relabeling/#2-3","text":"\u6709\u7684\u65f6\u5019\u6211\u4eec\u4e5f\u6709\u4fdd\u7559\u6216\u5220\u9664\u4e00\u4e9b\u6807\u7b7e\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u6709\u7684\u76ee\u6807\u5728\u65f6\u95f4\u5e8f\u5217\u4e0a\u63d0\u4f9b\u4e86\u8bb8\u591a\u989d\u5916\u7684\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u7528\u9014\u4e0d\u5927\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 labelkeep \u548c labeldrop \u8fd9\u4e24\u4e2a\u64cd\u4f5c\uff0c\u4f7f\u7528\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u4fdd\u7559\u6216\u5220\u9664\u4e00\u4e9b\u6807\u7b7e\u3002 labelkeep \u7684\u914d\u7f6e\u89c4\u5219\u5982\u4e0b\u6240\u793a\uff1a action: labelkeep regex: <regular expression> # \u9ed8\u8ba4\u4e3a'(.*)' \u9996\u5148\u5c06 regex \u4e2d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u6240\u6709\u6807\u7b7e\u540d\u79f0\u8fdb\u884c\u5339\u914d \u5b83\u53ea\u4fdd\u7559\u90a3\u4e9b\u5339\u914d\u7684\u6807\u7b7e labeldrop \u4e0e labelkeep \u7c7b\u4f3c\uff0c\u53ea\u662f\u5b83\u662f\u5220\u9664\u90a3\u4e9b\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6807\u7b7e\u800c\u4e0d\u662f\u4fdd\u7559\u3002 \u4e0b\u9762\u6211\u4eec\u770b\u4e00\u770b labelkeep/labeldrop \u64cd\u4f5c\u7684\u7b80\u5355\u793a\u4f8b\u3002 \u4ece\u62a5\u8b66\u4e2d\u5220\u9664\u9ad8\u53ef\u7528\u526f\u672c\u6807\u7b7e \u5f53\u8fd0\u884c\u4e24\u4e2a\u76f8\u540c\u7684 Prometheus \u4f5c\u9ad8\u53ef\u7528\u7684\u65f6\u5019\uff0c\u901a\u5e38\u4e24\u4e2a\u670d\u52a1\u5668\u90fd\u88ab\u914d\u7f6e\u4e3a\u6709\u4e00\u4e2a\u5916\u90e8\u6807\u7b7e\uff08\u901a\u8fc7\u5168\u5c40\u914d\u7f6e\u9009\u9879 external_labels \uff09\uff0c\u8868\u660e\u5b83\u4eec\u4ee3\u8868\u54ea\u4e2a\u526f\u672c\uff0c\u4f8b\u5982\uff1a replica: A \u548c replica: B \uff0c\u5728\u4ece\u4e24\u4e2a\u526f\u672c\u5411\u540c\u4e00\u4e2a Alertmanager \u5b9e\u4f8b\u53d1\u9001\u62a5\u8b66\u4e4b\u524d\uff0c Prometheus \u9700\u8981\u5220\u9664\u8fd9\u4e2a\u526f\u672c\u6807\u7b7e\uff0c\u8fd9\u6837 Alertmanager \u5c31\u4e0d\u4f1a\u628a\u6536\u5230\u7684\u62a5\u8b66\u770b\u6210\u4e0d\u540c\u7684\u62a5\u8b66\u4e86\uff0c\u5426\u5219\u53ef\u80fd\u6211\u4eec\u4f1a\u6536\u5230\u4e24\u4e2a\u540c\u6837\u7684\u62a5\u8b66\u901a\u77e5\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 labeldrop \u6765\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\u3002 action: labeldrop regex: replica \u8fd9\u6761\u914d\u7f6e\u89c4\u5219\u5f88\u7b80\u5355\u7684\uff0c\u5c31\u662f\u5339\u914d replica \u8fd9\u4e2a\u6807\u7b7e\uff0c\u7136\u540e\u6267\u884c labeldrop \u5220\u9664\u6807\u7b7e\u52a8\u4f5c\u5373\u53ef\u3002 \u5220\u9664\u6307\u6807\u4e2d\u4e0d\u9700\u8981\u7684\u6807\u7b7e \u6709\u7684\u65f6\u5019\u6211\u4eec\u6293\u53d6\u7684\u6307\u6807\u5728\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u4e0a\u90fd\u9644\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\u7528\u5904\u4e0d\u5927\uff0c\u8fd8\u4f1a\u589e\u52a0 Prometheus \u7684\u5b58\u50a8\u538b\u529b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u529e\u6cd5\u5220\u9664\u4e0d\u9700\u8981\u7684\u989d\u5916\u6807\u7b7e\u3002 \u6bd4\u5982\u73b0\u5728\u6211\u4eec\u60f3\u8981\u5220\u9664\u4e00 info_ \u5f00\u5934\u7684\u6807\u7b7e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u914d\u7f6e\u89c4\u5219\u6765\u5b8c\u6210\u3002 action: labeldrop regex: info_.* \u540c\u6837\u4e5f\u53ea\u662f\u914d\u7f6e\u4e00\u4e2a\u8981\u5220\u9664\u7684\u76ee\u6807\u6807\u7b7e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5373\u53ef\uff0c\u53ea\u8981\u5339\u914d\u4e86\u7684\u6807\u7b7e\u90fd\u4f1a\u6267\u884c labeldrop \u64cd\u4f5c\u5c06\u8be5\u6807\u7b7e\u8fdb\u884c\u5220\u9664\u3002","title":"2-3 \u4fdd\u7559\u6216\u5220\u9664\u6807\u7b7e"},{"location":"chap5/52Prometheus_Relabeling/#2-4","text":"\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\u6211\u4eec\u53ef\u80fd\u9700\u8981\u8fd0\u884c\u591a\u4e2a\u51e0\u4e4e\u76f8\u540c\u7684 Prometheus \u526f\u672c\u6765\u6a2a\u5411\u6269\u5c55\uff0c\u6bcf\u4e2a\u526f\u672c\u53ea\u6293\u53d6\u90e8\u5206\u76ee\u6807\uff0c\u8fd9\u6837\u53ef\u4ee5\u964d\u4f4e Prometheus \u7684\u538b\u529b\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b hashmod \u64cd\u4f5c\u6709\u52a9\u4e8e\u6211\u4eec\u5bf9\u76ee\u6807\u8fdb\u884c\u5206\u7247\u64cd\u4f5c\u3002 hashmod \u7684\u914d\u7f6e\u89c4\u5219\u5982\u4e0b\u6240\u793a\uff1a action: hashmod source_labels: [<source label name list>] modulus: <modulus value> target_label: <target label> \u8be5\u64cd\u4f5c\u6309\u987a\u5e8f\u6267\u884c\u4e0b\u9762\u7684\u6b65\u9aa4\uff1a \u9996\u5148\u4f7f\u7528\u5206\u9694\u7b26\u5c06\u6e90\u6807\u7b7e\u96c6 source_labels \u7684\u503c\u8fde\u63a5\u8d77\u6765 \u8ba1\u7b97\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c \u5c06 modulus \u4e2d\u63d0\u4f9b\u7684\u6a21\u6570\u5e94\u7528\u4e8e\u54c8\u5e0c\u503c\uff0c\u4ee5\u5c06\u54c8\u5e0c\u503c\u9650\u5236\u5728 0 \u548c modulus-1 \u4e4b\u95f4 \u5c06\u4e0a\u4e00\u6b65\u7684\u6a21\u6570\u503c\u5b58\u50a8\u5728 target_label \u76ee\u6807\u6807\u7b7e\u4e2d \u4f7f\u7528 hashmod \u7684\u4e3b\u8981\u573a\u666f\u662f\u5c06\u4e00\u4e2a\u670d\u52a1\u7684\u6574\u4f53\u76ee\u6807\u8fdb\u884c\u5206\u7247\uff0c\u7528\u4e8e\u6c34\u5e73\u6269\u5c55 Prometheus \uff0c\u901a\u8fc7\u9996\u5148\u6839\u636e\u6bcf\u4e2a\u76ee\u6807\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u7b7e\u8ba1\u7b97\u57fa\u4e8e\u54c8\u5e0c\u7684\u6a21\u6570\u6765\u5b9e\u73b0\u7684\uff0c\u7136\u540e\u53ea\u4fdd\u7559\u5177\u6709\u7279\u5b9a\u8f93\u51fa\u6a21\u6570\u503c\u7684\u76ee\u6807\u3002 \u6bd4\u5982\u4e3a\u4e86\u6839\u636e instance \u6807\u7b7e\u5bf9\u76ee\u6807\u8fdb\u884c\u5206\u7247\uff0c\u53ea\u4fdd\u7559\u5206\u7247 2 \u7684\u5b9e\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u628a hashmod \u548c keep \u7ed3\u5408\u8d77\u6765\u64cd\u4f5c\u3002 - action: hashmod source_labels: [instance] modulus: 10 target_label: __tmp_hashmod - action: keep source_labels: [__tmp_hashmod] regex: 2 \u9996\u5148\u901a\u8fc7 hashmod \u64cd\u4f5c\u5bf9 instance \u6807\u7b7e\u8fdb\u53bb\u54c8\u5e0c\u64cd\u4f5c\uff0c\u5c06\u53d6\u6a21\u540e\u7684\u503c\u5b58\u50a8\u5728\u4e34\u65f6\u6807\u7b7e __tmp_hashmod \u4e2d\uff0c\u7136\u540e\u901a\u8fc7\u7b2c\u4e8c\u4e2a keep \u64cd\u4f5c\uff0c\u53ea\u4fdd\u7559\u5206\u7247\u6570\u4e3a 2 \u7684\u6307\u6807\uff0c\u8fd9\u6837\u5c31\u8fbe\u5230\u4e86\u5206\u7247\u7684\u76ee\u7684\u3002 \u5230\u8fd9\u91cc\u6211\u4eec\u57fa\u672c\u4e0a\u5c31\u4e86\u89e3\u4e86 relabeling \u7684\u4f7f\u7528\uff0c\u540e\u7eed\u6211\u4eec\u53ef\u4ee5\u518d\u53bb\u4e86\u89e3\u670d\u52a1\u53d1\u73b0\u5728 Prometheus \u4e2d\u7684\u4f7f\u7528\u3002","title":"2-4 \u6807\u7b7e\u54c8\u5e0c\u548c\u5206\u7247"},{"location":"chap5/53Prometheus_auto_discovery/","text":"\u7b2c\u4e00\u8282 Prometheus \u670d\u52a1\u7684\u81ea\u52a8\u53d1\u73b0\u4f7f\u7528 \u672c\u6587\u6211\u4eec\u5c06\u5b66\u4e60 Prometheus \u4e2d\u662f\u5982\u4f55\u4f7f\u7528\u670d\u52a1\u53d1\u73b0\u6765\u67e5\u627e\u548c\u6293\u53d6\u76ee\u6807\u7684\u3002 \u6211\u4eec\u77e5\u9053\u5728 Prometheus \u914d\u7f6e\u6587\u4ef6\u4e2d\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a static_configs \u6765\u914d\u7f6e\u9759\u6001\u7684\u6293\u53d6\u4efb\u52a1\uff0c\u4f46\u662f\u5728\u4e91\u73af\u5883\u4e0b\uff0c\u7279\u522b\u662f\u5bb9\u5668\u73af\u5883\u4e0b\uff0c\u6293\u53d6\u76ee\u6807\u5730\u5740\u662f\u7ecf\u5e38\u53d8\u52a8\u7684\uff0c\u6240\u4ee5\u7528\u9759\u6001\u7684\u65b9\u5f0f\u5c31\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e9b\u573a\u666f\u4e86\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u76d1\u63a7\u7cfb\u7edf\u80fd\u591f\u52a8\u6001\u611f\u77e5\u8fd9\u4e2a\u53d8\u5316\uff0c\u4e0d\u53ef\u80fd\u6bcf\u6b21\u53d8\u52a8\u90fd\u53bb\u624b\u52a8\u91cd\u65b0\u914d\u7f6e\u7684\uff0c\u4e3a\u4e86\u5e94\u5bf9\u590d\u6742\u7684\u52a8\u6001\u73af\u5883\uff0cPrometheus \u4e5f\u63d0\u4f9b\u4e86\u4e0e\u57fa\u7840\u8bbe\u65bd\u4e2d\u7684\u670d\u52a1\u53d1\u73b0\u96c6\u6210\u7684\u529f\u80fd\u3002 Prometheus \u5df2\u7ecf\u652f\u6301\u591a\u79cd\u5185\u7f6e\u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236\uff1a \u53d1\u73b0\u4e91\u670d\u52a1\u5546\u7684 VM \u865a\u62df\u673a Kubernetes \u4e0a\u7684\u81ea\u52a8\u53d1\u73b0 \u901a\u7528\u7684\u670d\u52a1\u67e5\u627e\uff0c\u4f8b\u5982 DNS\u3001Consul\u3001Zookeeper \u6216\u81ea\u5b9a\u4e49\u53d1\u73b0\u673a\u5236 \u6211\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7 Prometheus \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 scrape_config \u90e8\u5206\u8fdb\u884c\u914d\u7f6e\uff0cPrometheus \u4f1a\u4e0d\u65ad\u66f4\u65b0\u52a8\u6001\u7684\u6293\u53d6\u76ee\u6807\u5217\u8868\uff0c\u81ea\u52a8\u505c\u6b62\u6293\u53d6\u65e7\u7684\u5b9e\u4f8b\uff0c\u5f00\u59cb\u6293\u53d6\u65b0\u7684\u5b9e\u4f8b\uff0cPrometheus \u7279\u522b\u9002\u5408\u8fd0\u884c\u4e8e Kubernetes \u96c6\u7fa4\u4e0b\u9762\uff0c\u53ef\u4ee5\u81ea\u52a8\u53d1\u73b0\u76d1\u63a7\u76ee\u6807\u3002 \u6b64\u5916\u5927\u90e8\u5206\u670d\u52a1\u53d1\u73b0\u673a\u5236\u8fd8\u4f1a\u63d0\u4f9b\u76ee\u6807\u7684\u4e00\u4e9b\u5143\u6570\u636e\uff0c\u901a\u5e38\u90fd\u662f\u5e26\u6709 __ \u7684\u524d\u7f00\uff0c \u6bd4\u5982\u6807\u7b7e\u3001\u6ce8\u89e3\u3001\u670d\u52a1\u540d\u7b49\u7b49\uff0c\u53ef\u4ee5\u5728 relabeling \u9636\u6bb5\u4f7f\u7528\u8fd9\u4e9b\u5143\u6570\u636e\u6765\u8fc7\u6ee4\u4fee\u6539\u76ee\u6807\uff0c\u8fd9\u4e9b\u5143\u4fe1\u606f\u6807\u7b7e\u5728\u91cd\u65b0\u6807\u8bb0\u9636\u6bb5\u540e\u88ab\u5220\u9664\u3002 1\u3001\u57fa\u4e8e Consul \u7684\u670d\u52a1\u53d1\u73b0 Consul \u662f\u7531 HashiCorp \u5f00\u53d1\u7684\u4e00\u4e2a\u652f\u6301\u591a\u6570\u636e\u4e2d\u5fc3\u7684\u5206\u5e03\u5f0f\u670d\u52a1\u53d1\u73b0\u548c\u952e\u503c\u5bf9\u5b58\u50a8\u670d\u52a1\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u662f\u4e00\u4e2a\u901a\u7528\u7684\u670d\u52a1\u53d1\u73b0\u548c\u6ce8\u518c\u4e2d\u5fc3\u5de5\u5177\uff0c\u88ab\u5927\u91cf\u5e94\u7528\u4e8e\u57fa\u4e8e\u5fae\u670d\u52a1\u7684\u8f6f\u4ef6\u67b6\u6784\u5f53\u4e2d\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5c1d\u8bd5\u4f7f\u7528 Prometheus \u57fa\u4e8e Consul \u7684\u670d\u52a1\u53d1\u73b0\u6765\u76d1\u63a7\u524d\u9762\u7684 3 \u4e2a demo \u670d\u52a1\uff1a 192.168.31.46:10000 192.168.31.46:10001 192.168.31.46:10002 \u6211\u4eec\u5c06 demo \u670d\u52a1\u6ce8\u518c\u5230 Consul\uff0c\u7136\u540e\u914d\u7f6e Prometheus \u4ece Consul \u4e2d\u53d1\u73b0\u6f14\u793a\u670d\u52a1\u5b9e\u4f8b\uff0c\u5e76\u4f7f\u7528 Relabeling \u64cd\u4f5c\u6765\u8fc7\u6ee4\u8c03\u6574\u76ee\u6807\u6807\u7b7e\u3002 \u5173\u4e8e Consul \u672c\u8eab\u7684\u4f7f\u7528\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863 https://learn.hashicorp.com/consul \u4e86\u89e3\u66f4\u591a\u3002 1-1 \u5b89\u88c5\u914d\u7f6e Consul \u5728\u9875\u9762 https://www.consul.io/downloads \u4e0b\u8f7d\u7b26\u5408\u81ea\u5df1\u7cfb\u7edf\u7684\u5b89\u88c5\u6587\u4ef6\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u662f Linux \u7cfb\u7edf\uff0c\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef\uff1a $ wget https://releases.hashicorp.com/consul/1.10.2/consul_1.10.2_linux_amd64.zip $ unzip consul_1.10.2_linux_amd64.zip # \u5c06 consul \u4e8c\u8fdb\u5236\u79fb\u52a8\u5230 PATH \u8def\u5f84\u4e0b\u53bb $ mv consul /usr/local/bin $ consul version Consul v1.10.2 Revision 3cb6eeedb Protocol 2 spoken by default, understands 2 to 3 (agent will automatically use protocol >2 when speaking to compatible agents) \u5f53\u6267\u884c consul \u547d\u4ee4\u540e\u6b63\u5e38\u6709\u547d\u4ee4\u63d0\u793a\uff0c\u8bc1\u660e\u5df2\u7ecf\u5b89\u88c5\u5b8c\u6210\u3002 \u63a5\u7740\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u6ce8\u518c demo \u670d\u52a1\u7684 Consul \u914d\u7f6e\u6587\u4ef6 demo-service.json \uff1a { \"services\": [ { \"id\": \"demo1\", \"name\": \"demo\", \"address\": \"192.168.31.46\", \"port\": 10000, \"meta\": { \"env\": \"production\" }, \"checks\": [ { \"http\": \"http://192.168.31.46:10000/api/foo\", \"interval\": \"1s\" } ] }, { \"id\": \"demo2\", \"name\": \"demo\", \"address\": \"192.168.31.46\", \"port\": 10001, \"meta\": { \"env\": \"production\" }, \"checks\": [ { \"http\": \"http://192.168.31.46:10001/api/foo\", \"interval\": \"1s\" } ] }, { \"id\": \"demo3\", \"name\": \"demo\", \"address\": \"192.168.31.46\", \"port\": 10002, \"meta\": { \"env\": \"staging\" }, \"checks\": [ { \"http\": \"http://192.168.31.46:10002/api/foo\", \"interval\": \"1s\" } ] } ] } \u5f53\u7136\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u4e5f\u662f\u5728 Consul \u4e2d\u8fdb\u884c\u52a8\u6001\u6ce8\u518c\u670d\u52a1\uff0c\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u53ea\u662f\u7b80\u5355\u6f14\u793a Prometheus \u57fa\u4e8e Consul \u7684\u670d\u52a1\u53d1\u73b0\uff0c\u8fd9\u91cc\u53ea\u4f7f\u7528 Consul \u914d\u7f6e\u6587\u4ef6\u9759\u6001\u6ce8\u518c\u670d\u52a1\u5373\u53ef\u3002 Consul \u5141\u8bb8\u4f7f\u7528 JSON \u4e2d\u7684 meta \u5c5e\u6027\u5c06 key-value \u5143\u6570\u636e\u4e0e\u6bcf\u4e2a\u6ce8\u518c\u7684\u670d\u52a1\u5b9e\u4f8b\u76f8\u5173\u8054\uff0c\u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u914d\u7f6e\u7684 env \u5c5e\u6027\u548c\u90e8\u7f72\u73af\u5883 production \u6216 staging \u8fdb\u884c\u5173\u8054\uff0c\u540e\u9762\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 Prometheus \u91cc\u9762\u7684 Relabeling \u64cd\u4f5c\u63d0\u53d6\u8be5\u5b57\u6bb5\u5e76\u5c06\u5176\u6620\u5c04\u5230\u6bcf\u4e2a\u6293\u53d6\u5b9e\u4f8b\u7684\u6807\u7b7e\u4e2d\u53bb\u3002 \u4e3a\u4e86\u67e5\u770b\u66f4\u591a\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 dev \u6a21\u5f0f\u4e0b\u8fd0\u884c Consul\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u2638 \u279c consul agent -dev -config-file=demo-service.json -client 0.0.0.0 ==> Starting Consul agent... Version: '1.10.2' Node ID: 'a4a9418c-7f7d-a2da-c81e-94d3d37601aa' Node name: 'node2' Datacenter: 'dc1' (Segment: '<all>') Server: true (Bootstrap: false) Client Addr: [0.0.0.0] (HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600) Cluster Addr: 127.0.0.1 (LAN: 8301, WAN: 8302) Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false, Auto-Encrypt-TLS: false ==> Log data will now stream in as it occurs: ...... \u8fd9\u91cc\u6211\u4eec\u5728\u542f\u52a8\u547d\u4ee4\u540e\u9762\u4f7f\u7528 -client \u53c2\u6570\u6307\u5b9a\u4e86\u5ba2\u6237\u7aef\u7ed1\u5b9a\u7684 IP \u5730\u5740\uff0c\u9ed8\u8ba4\u4e3a 127.0.0.1 \u3002\u9664\u4e86\u6211\u4eec\u6ce8\u518c\u7684 3 \u4e2a demo \u670d\u52a1\u4e4b\u5916\uff0c Consul agent \u8fd8\u4f1a\u5c06\u81ea\u5df1\u6ce8\u518c\u4e3a\u4e00\u4e2a\u540d\u4e3a consul \u7684\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://<nodeip>:8500 \u67e5\u770b\u6ce8\u518c\u7684\u670d\u52a1\u3002 \u5728 Consul UI \u9875\u9762\u4e2d\u53ef\u4ee5\u770b\u5230\u6709 consul \u548c demo \u4e24\u4e2a Service \u670d\u52a1\u3002 1-2 \u914d\u7f6e Consul \u81ea\u52a8\u53d1\u73b0 \u4e0a\u9762\u6211\u4eec\u901a\u8fc7 Consul \u6ce8\u518c\u4e86 3 \u4e2a demo \u670d\u52a1\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u914d\u7f6e Prometheus \u901a\u8fc7 Consul \u6765\u81ea\u52a8\u53d1\u73b0 demo \u670d\u52a1\u3002 \u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6 prometheus.yml \u6587\u4ef6\u4e2d\u7684 scrape_configs \u90e8\u5206\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u6293\u53d6\u914d\u7f6e\uff1a scrape_configs: - job_name: \"consul-sd-demo\" consul_sd_configs: - server: \"localhost:8500\" relabel_configs: - action: keep source_labels: [__meta_consul_service, __meta_consul_health] regex: demo;passing - action: labelmap regex: __meta_consul_service_metadata_(.*) replacement: consul_$1 \u8fd9\u91cc\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a consul-sd-demo \u7684\u6293\u53d6\u4efb\u52a1\uff0c\u901a\u8fc7 consul_sd_configs \u914d\u7f6e\u7528\u4e8e\u81ea\u52a8\u53d1\u73b0\u7684 Consul \u670d\u52a1\u5730\u5740\uff0c\u7136\u540e\u4f7f\u7528 relabel_configs \u8fdb\u884c\u4e86\u91cd\u65b0\u6807\u8bb0\u914d\u7f6e\uff0c \u9996\u5148\u53ea\u4fdd\u7559\u670d\u52a1\u540d\u79f0\u4e3a demo \uff0c\u4e14\u5065\u5eb7\u72b6\u6001\u4e3a passing \u7684\uff0c\u5426\u5219\u4e5f\u4f1a\u6293\u53d6 Consul Agent \u672c\u8eab\uff0c\u800c\u5b83\u81ea\u8eab\u662f\u4e0d\u63d0\u4f9b metrics \u63a5\u53e3\u6570\u636e\u7684\uff0c \u53e6\u5916\u8fd8\u4f7f\u7528 labelmap \u8fdb\u884c\u4e86\u6807\u7b7e\u6620\u5c04\uff0c\u5c06\u6240\u6709 Consul \u5143\u6807\u7b7e\u6620\u5c04\u5230 Prometheus \u4e2d\u4ee5 consul_ \u4e3a\u524d\u7f00\u7684\u6807\u7b7e\u4e2d\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\u91cd\u65b0\u542f\u52a8 Prometheus\uff0c\u7136\u540e\u91cd\u65b0\u67e5\u770b Prometheus \u9875\u9762\u4e0a\u7684 targets \u9875\u9762\uff0c\u9a8c\u8bc1\u4e0a\u9762\u7684\u914d\u7f6e\u662f\u5426\u5b58\u5728\uff1a \u6b63\u5e38\u60c5\u51b5\u4e0b\u662f\u53ef\u4ee5\u770b\u5230\u4f1a\u6709\u4e00\u4e2a consul-sd-demo \u7684\u4efb\u52a1\uff0c\u4e0b\u9762\u6709 3 \u4e2a\u81ea\u52a8\u53d1\u73b0\u7684\u6293\u53d6\u76ee\u6807 \u3002 \u6211\u4eec\u5c06\u9f20\u6807\u60ac\u505c\u5728 Labels \u6807\u7b7e\u533a\u57df\u5c31\u53ef\u4ee5\u770b\u5230\u76ee\u6807\u4efb\u52a1\u5728\u91cd\u65b0\u6807\u8bb0 Relabeling \u4e4b\u524d\u7684\u539f\u59cb\u6807\u7b7e\u3002 \u6bd4\u5982\u6211\u4eec\u5c06\u67e5\u770b\u7b2c\u4e00\u4e2a demo \u5b9e\u4f8b\u5728 Relabel \u4e4b\u524d\u5305\u542b\u5982\u4e0b\u6240\u793a\u7684\u8fd9\u4e9b\u539f\u59cb\u6807\u7b7e\uff1a \u901a\u8fc7\u67e5\u770b\u7f51\u7edc\u8bf7\u6c42\u63a5\u53e3 http://<promtheus addr>/api/v1/targets?state=active \u4e5f\u53ef\u4ee5\u83b7\u53d6\u5bf9\u5e94\u7684\u539f\u59cb\u6807\u7b7e\u6570\u636e\uff1a { \"discoveredLabels\": { \"__address__\": \"192.168.31.46:10000\", \"__meta_consul_address\": \"127.0.0.1\", \"__meta_consul_dc\": \"dc1\", \"__meta_consul_health\": \"passing\", \"__meta_consul_node\": \"node2\", \"__meta_consul_service\": \"demo\", \"__meta_consul_service_address\": \"192.168.31.46\", \"__meta_consul_service_id\": \"demo1\", \"__meta_consul_service_metadata_env\": \"production\", \"__meta_consul_service_port\": \"10000\", \"__meta_consul_tagged_address_lan\": \"127.0.0.1\", \"__meta_consul_tagged_address_lan_ipv4\": \"127.0.0.1\", \"__meta_consul_tagged_address_wan\": \"127.0.0.1\", \"__meta_consul_tagged_address_wan_ipv4\": \"127.0.0.1\", \"__meta_consul_tags\": \",,\", \"__metrics_path__\": \"/metrics\", \"__scheme__\": \"http\", \"job\": \"consul-sd-demo\" }, \"labels\": { \"consul_env\": \"production\", \"instance\": \"192.168.31.46:10000\", \"job\": \"consul-sd-demo\" }, \"scrapePool\": \"consul-sd-demo\", \"scrapeUrl\": \"http://192.168.31.46:10000/metrics\", \"globalUrl\": \"http://192.168.31.46:10000/metrics\", \"lastError\": \"\", \"lastScrape\": \"2021-09-28T11:56:01.919216851+08:00\", \"lastScrapeDuration\": 0.013357276, \"health\": \"up\" } \u6211\u4eec\u5728 relabel_configs \u4e2d\u9996\u5148\u914d\u7f6e\u4e86\u4e00\u4e2a keep \u64cd\u4f5c\uff0c\u53ea\u4fdd\u7559\u539f\u59cb\u6807\u7b7e __meta_consul_service \u503c\u4e3a demo \uff0c\u4e14 __meta_consul_health \u4e3a passing \u72b6\u6001\u7684\u6293\u53d6\u4efb\u52a1\u3002 \u7136\u540e\u4f7f\u7528 labelmap \u8fdb\u884c\u6807\u7b7e\u6620\u5c04\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u5339\u914d __meta_consul_service_metadata_(.*) \u6240\u6709\u6807\u7b7e\uff0c\u8fd9\u91cc\u53ea\u6709 __meta_consul_service_metadata_env \u8fd9\u4e2a\u539f\u59cb\u6807\u7b7e\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u7684 env \u5c31\u662f\u5339\u914d\u7684\u6355\u83b7\u7ec4\uff0c\u5728 replacement \u4e2d\u7528 $1 \u4ee3\u66ff\uff0c\u66ff\u6362\u6210\u6807\u7b7e consul_$1 \uff0c\u4e5f\u5c31\u662f consul_env \u8fd9\u4e2a\u6807\u7b7e\u4e86\uff0c\u6240\u4ee5 Relabeling \u8fc7\u540e\u5c31\u53ea\u5269\u4e0b\u4e0b\u9762\u7684\u51e0\u4e2a\u76ee\u6807\u6807\u7b7e\u4e86\uff1a instance: \"192.168.31.46:10000\" job: \"consul-sd-demo\" consul_env: \"production\" \u5176\u4e2d\u7684 instance \u6807\u7b7e\u662f\u5728\u91cd\u65b0\u6807\u8bb0\u4e4b\u540e\uff0c\u81ea\u52a8\u4ece __address__ \u8f6c\u53d8\u800c\u6765\u7684\u3002 \u7531\u4e8e\u6ca1\u6709\u91cd\u65b0\u4fee\u6539 __metrics_path__ \u548c __scheme__ \u6807\u7b7e\uff0c\u6240\u4ee5\u9ed8\u8ba4\u7684\u6293\u53d6\u76ee\u6807\u5c31\u662f\u901a\u8fc7 HTTP \u7aef\u70b9 /metrics \u8fdb\u884c\u6293\u53d6\u3002 \u73b0\u5728\u5982\u679c\u6211\u4eec\u5c06 demo1 \u8fd9\u4e2a\u670d\u52a1\u6740\u6389\uff0c\u5219\u5728 Consul \u4e2d\u6ce8\u518c\u7684\u670d\u52a1\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u4e0d\u5065\u5eb7\u7684\u5b9e\u4f8b\uff1a \u5f53\u7136\u6b64\u65f6 Prometheus \u4e2d\u5c31\u53ea\u5269\u4e0b\u4e24\u4e2a\u6b63\u5e38 demo \u670d\u52a1\u7684\u5b9e\u4f8b\u4e86\uff1a \u5f53\u670d\u52a1\u6b63\u5e38\u540e\u5c31\u53c8\u53ef\u4ee5\u81ea\u52a8\u53d1\u73b0\u5bf9\u5e94\u7684\u670d\u52a1\u4e86\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86 Prometheus \u57fa\u4e8e Consul \u7684\u4e00\u4e2a\u7b80\u5355\u7684\u81ea\u52a8\u53d1\u73b0\u914d\u7f6e\u3002 2\u3001\u57fa\u4e8e\u6587\u4ef6\u7684\u670d\u52a1\u53d1\u73b0 \u9664\u4e86\u57fa\u4e8e Consul \u7684\u670d\u52a1\u53d1\u73b0\u4e4b\u5916\uff0cPrometheus \u4e5f\u5141\u8bb8\u6211\u4eec\u8fdb\u884c\u81ea\u5b9a\u4e49\u7684\u53d1\u73b0\u96c6\u6210\uff0c\u53ef\u4ee5\u901a\u8fc7 watch \u4e00\u7ec4\u672c\u5730\u6587\u4ef6\u6765\u83b7\u53d6\u6293\u53d6\u76ee\u6807\u4ee5\u53ca\u6807\u7b7e\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u57fa\u4e8e\u6587\u4ef6\u7684\u670d\u52a1\u53d1\u73b0\u65b9\u5f0f\u3002 \u57fa\u4e8e\u6587\u4ef6\u7684\u670d\u52a1\u53d1\u73b0\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u901a\u7528\u7684\u65b9\u5f0f\u6765\u914d\u7f6e\u9759\u6001\u76ee\u6807\uff0c\u5e76\u4f5c\u4e3a\u4e00\u4e2a\u63a5\u53e3\u63d2\u5165\u81ea\u5b9a\u4e49\u670d\u52a1\u53d1\u73b0\u673a\u5236\u3002 \u5b83\u8bfb\u53d6\u4e00\u7ec4\u5305\u542b\u96f6\u4e2a\u6216\u591a\u4e2a <static_config> \u5217\u8868\u7684\u6587\u4ef6\uff0c\u5bf9\u6240\u6709\u5b9a\u4e49\u7684\u6587\u4ef6\u7684\u53d8\u66f4\u901a\u8fc7\u78c1\u76d8\u76d1\u89c6\u88ab\u68c0\u6d4b\u5230\u5e76\u7acb\u5373\u5e94\u7528\uff0c\u6587\u4ef6\u53ef\u4ee5\u4ee5 YAML \u6216 JSON \u683c\u5f0f\u63d0\u4f9b\u3002\u6587\u4ef6\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u9759\u6001\u914d\u7f6e\u7684\u5217\u8868: JSON json [ { \"targets\": [ \"<host>\", ... ], \"labels\": { \"<labelname>\": \"<labelvalue>\", ... } }, ... ] YAML yaml - targets: [ - '<host>' ] labels: [ <labelname>: <labelvalue> ... ] \u6587\u4ef6\u5185\u5bb9\u4e5f\u4f1a\u5728\u6307\u5b9a\u7684\u5237\u65b0\u95f4\u9694\u65f6\u95f4\u5185\u5b9a\u671f\u91cd\u65b0\u8bfb\u53d6\u3002 # Patterns for files from which target groups are extracted. files: [ - <filename_pattern> ... ] # Refresh interval to re-read the files. [ refresh_interval: <duration> | default = 5m ] \u5176\u4e2d <filename*pattern> \u53ef\u4ee5\u662f\u4e00\u4e2a\u4ee5 .json \u3001 .yml \u6216 . yaml \u7ed3\u5c3e\u7684\u8def\u5f84\uff0c\u6700\u540e\u4e00\u4e2a\u8def\u5f84\u6bb5\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u5339\u914d\u4efb\u4f55\u5b57\u7b26\u5e8f\u5217\u7684 * \uff0c\u4f8b\u5982\uff1a my/path/tg_*.json \u3002 2-1 \u521b\u5efa\u6587\u4ef6 - targets: - \"192.168.31.46:10000\" - \"192.168.31.46:10001\" labels: env: production - targets: - \"192.168.31.46:10002\" labels: env: staging \u8be5\u6587\u4ef6\u4e2d\u6211\u4eec\u5217\u4e3e\u4e86 3 \u4e2a demo \u670d\u52a1\u5b9e\u4f8b\uff0c\u7ed9\u524d\u4e24\u4e2a\u5b9e\u4f8b\u6dfb\u52a0\u4e0a\u4e86 env=production \u7684\u6807\u7b7e\uff0c\u540e\u9762\u4e00\u4e2a\u52a0\u4e0a\u4e86 env=staging \u7684\u6807\u7b7e\uff0c\u5f53\u7136\u8be5\u6587\u4ef6\u4e5f\u53ef\u4ee5\u4f7f\u7528 JSON \u683c\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a [ { \"targets\": [ \"<host>\", ... ], \"labels\": { \"<labelname>\": \"<labelvalue>\", ... } }, ... ] \u5982\u679c\u662f YAML \u6587\u4ef6\u5219\u683c\u5f0f\u4e3a\uff1a - targets: [ - '<host>' ] labels: [ <labelname>: <labelvalue> ... ] 2-2 \u914d\u7f6e\u6587\u4ef6\u670d\u52a1\u53d1\u73b0 \u7528\u4e8e\u53d1\u73b0\u7684\u76ee\u6807\u6587\u4ef6\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u8981\u8ba9 Prometheus \u80fd\u591f\u4ece\u4e0a\u9762\u7684 targets.yml \u6587\u4ef6\u4e2d\u81ea\u52a8\u8bfb\u53d6\u6293\u53d6\u76ee\u6807\uff0c\u9700\u8981\u5728 prometheus.yml \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 scrape_configs \u90e8\u5206\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u6293\u53d6\u914d\u7f6e\uff1a - job_name: \"file-sd-demo\" file_sd_configs: - files: - \"targets.yml\" \u91cd\u65b0 reload \u6216\u8005\u91cd\u542f\u4e0b Prometheus \u8ba9\u5176\u91cd\u65b0\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u4fe1\u606f\uff0c\u7136\u540e\u540c\u6837\u524d\u5f80 Prometheus UI \u7684 targets \u9875\u9762\u4e0b\u9762\u67e5\u770b\u662f\u5426\u6709\u4e0a\u9762\u5b9a\u4e49\u7684\u6293\u53d6\u76ee\u6807\u3002 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6539\u53d8 targets.yml \u7684\u5185\u5bb9\uff0c\u6bd4\u5982\u4e3a\u7b2c\u4e09\u4e2a\u5b9e\u4f8b\u589e\u52a0\u4e00\u4e2a role: sd \u7684\u6807\u7b7e\uff0c\u4e0d\u7528\u91cd\u65b0\u52a0\u8f7d Prometheus \u914d\u7f6e\uff0c Prometheus \u5c06 watch \u8be5\u6587\u4ef6\uff0c\u5e76\u81ea\u52a8\u63a5\u6536\u4efb\u4f55\u53d8\u5316\u3002 \u6ce8\u610f\uff1a\u5f53\u5728\u751f\u4ea7\u73af\u5883 Prometheus \u670d\u52a1\u5668\u4e2d\u6539\u53d8 file_sd \u76ee\u6807\u6587\u4ef6\u65f6\uff0c\u9700\u8981\u786e\u4fdd\u6539\u53d8\u662f\u539f\u5b50\u7684\uff0c\u4ee5\u907f\u514d\u91cd\u65b0\u52a0\u8f7d\u51fa\u73b0\u9519\u8bef\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u662f\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u4f4d\u7f6e\u521b\u5efa\u66f4\u65b0\u7684\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u5176\u91cd\u547d\u540d\u4e3a\u76ee\u6807\u6587\u4ef6\u540d\uff08\u4f7f\u7528 mv \u547d\u4ee4\u6216 rename() \u7cfb\u7edf\u8c03\u7528\uff09\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u57fa\u4e8e\u6587\u4ef6\u7684\u901a\u7528\u670d\u52a1\u53d1\u73b0\u673a\u5236\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u52a8\u6001\u5730\u6539\u53d8 Prometheus \u7684\u76d1\u63a7\u76ee\u6807\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u542f\u52a8\u6216\u91cd\u65b0\u52a0\u8f7d Prometheus \u670d\u52a1\u3002 \u5f53\u7136\u9664\u4e86\u57fa\u4e8e Consul \u548c\u6587\u4ef6\u7684\u670d\u52a1\u53d1\u73b0\u4e4b\u5916\uff0c\u66f4\u591a\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u5728 Kubernetes \u73af\u5883\u4e0b\u9762\u4f7f\u7528 Prometheus\uff0c\u7531\u4e8e\u8fd9\u90e8\u5206\u5185\u5bb9\u6bd4\u8f83\u72ec\u7acb\uff0c\u3002","title":"\u7b2c\u4e00\u8282 Prometheus\u670d\u52a1\u7684\u81ea\u52a8\u53d1\u73b0\u4f7f\u7528"},{"location":"chap5/53Prometheus_auto_discovery/#prometheus","text":"\u672c\u6587\u6211\u4eec\u5c06\u5b66\u4e60 Prometheus \u4e2d\u662f\u5982\u4f55\u4f7f\u7528\u670d\u52a1\u53d1\u73b0\u6765\u67e5\u627e\u548c\u6293\u53d6\u76ee\u6807\u7684\u3002 \u6211\u4eec\u77e5\u9053\u5728 Prometheus \u914d\u7f6e\u6587\u4ef6\u4e2d\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a static_configs \u6765\u914d\u7f6e\u9759\u6001\u7684\u6293\u53d6\u4efb\u52a1\uff0c\u4f46\u662f\u5728\u4e91\u73af\u5883\u4e0b\uff0c\u7279\u522b\u662f\u5bb9\u5668\u73af\u5883\u4e0b\uff0c\u6293\u53d6\u76ee\u6807\u5730\u5740\u662f\u7ecf\u5e38\u53d8\u52a8\u7684\uff0c\u6240\u4ee5\u7528\u9759\u6001\u7684\u65b9\u5f0f\u5c31\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e9b\u573a\u666f\u4e86\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u76d1\u63a7\u7cfb\u7edf\u80fd\u591f\u52a8\u6001\u611f\u77e5\u8fd9\u4e2a\u53d8\u5316\uff0c\u4e0d\u53ef\u80fd\u6bcf\u6b21\u53d8\u52a8\u90fd\u53bb\u624b\u52a8\u91cd\u65b0\u914d\u7f6e\u7684\uff0c\u4e3a\u4e86\u5e94\u5bf9\u590d\u6742\u7684\u52a8\u6001\u73af\u5883\uff0cPrometheus \u4e5f\u63d0\u4f9b\u4e86\u4e0e\u57fa\u7840\u8bbe\u65bd\u4e2d\u7684\u670d\u52a1\u53d1\u73b0\u96c6\u6210\u7684\u529f\u80fd\u3002 Prometheus \u5df2\u7ecf\u652f\u6301\u591a\u79cd\u5185\u7f6e\u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236\uff1a \u53d1\u73b0\u4e91\u670d\u52a1\u5546\u7684 VM \u865a\u62df\u673a Kubernetes \u4e0a\u7684\u81ea\u52a8\u53d1\u73b0 \u901a\u7528\u7684\u670d\u52a1\u67e5\u627e\uff0c\u4f8b\u5982 DNS\u3001Consul\u3001Zookeeper \u6216\u81ea\u5b9a\u4e49\u53d1\u73b0\u673a\u5236 \u6211\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7 Prometheus \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 scrape_config \u90e8\u5206\u8fdb\u884c\u914d\u7f6e\uff0cPrometheus \u4f1a\u4e0d\u65ad\u66f4\u65b0\u52a8\u6001\u7684\u6293\u53d6\u76ee\u6807\u5217\u8868\uff0c\u81ea\u52a8\u505c\u6b62\u6293\u53d6\u65e7\u7684\u5b9e\u4f8b\uff0c\u5f00\u59cb\u6293\u53d6\u65b0\u7684\u5b9e\u4f8b\uff0cPrometheus \u7279\u522b\u9002\u5408\u8fd0\u884c\u4e8e Kubernetes \u96c6\u7fa4\u4e0b\u9762\uff0c\u53ef\u4ee5\u81ea\u52a8\u53d1\u73b0\u76d1\u63a7\u76ee\u6807\u3002 \u6b64\u5916\u5927\u90e8\u5206\u670d\u52a1\u53d1\u73b0\u673a\u5236\u8fd8\u4f1a\u63d0\u4f9b\u76ee\u6807\u7684\u4e00\u4e9b\u5143\u6570\u636e\uff0c\u901a\u5e38\u90fd\u662f\u5e26\u6709 __ \u7684\u524d\u7f00\uff0c \u6bd4\u5982\u6807\u7b7e\u3001\u6ce8\u89e3\u3001\u670d\u52a1\u540d\u7b49\u7b49\uff0c\u53ef\u4ee5\u5728 relabeling \u9636\u6bb5\u4f7f\u7528\u8fd9\u4e9b\u5143\u6570\u636e\u6765\u8fc7\u6ee4\u4fee\u6539\u76ee\u6807\uff0c\u8fd9\u4e9b\u5143\u4fe1\u606f\u6807\u7b7e\u5728\u91cd\u65b0\u6807\u8bb0\u9636\u6bb5\u540e\u88ab\u5220\u9664\u3002","title":"\u7b2c\u4e00\u8282 Prometheus \u670d\u52a1\u7684\u81ea\u52a8\u53d1\u73b0\u4f7f\u7528"},{"location":"chap5/53Prometheus_auto_discovery/#1-consul","text":"Consul \u662f\u7531 HashiCorp \u5f00\u53d1\u7684\u4e00\u4e2a\u652f\u6301\u591a\u6570\u636e\u4e2d\u5fc3\u7684\u5206\u5e03\u5f0f\u670d\u52a1\u53d1\u73b0\u548c\u952e\u503c\u5bf9\u5b58\u50a8\u670d\u52a1\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u662f\u4e00\u4e2a\u901a\u7528\u7684\u670d\u52a1\u53d1\u73b0\u548c\u6ce8\u518c\u4e2d\u5fc3\u5de5\u5177\uff0c\u88ab\u5927\u91cf\u5e94\u7528\u4e8e\u57fa\u4e8e\u5fae\u670d\u52a1\u7684\u8f6f\u4ef6\u67b6\u6784\u5f53\u4e2d\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5c1d\u8bd5\u4f7f\u7528 Prometheus \u57fa\u4e8e Consul \u7684\u670d\u52a1\u53d1\u73b0\u6765\u76d1\u63a7\u524d\u9762\u7684 3 \u4e2a demo \u670d\u52a1\uff1a 192.168.31.46:10000 192.168.31.46:10001 192.168.31.46:10002 \u6211\u4eec\u5c06 demo \u670d\u52a1\u6ce8\u518c\u5230 Consul\uff0c\u7136\u540e\u914d\u7f6e Prometheus \u4ece Consul \u4e2d\u53d1\u73b0\u6f14\u793a\u670d\u52a1\u5b9e\u4f8b\uff0c\u5e76\u4f7f\u7528 Relabeling \u64cd\u4f5c\u6765\u8fc7\u6ee4\u8c03\u6574\u76ee\u6807\u6807\u7b7e\u3002 \u5173\u4e8e Consul \u672c\u8eab\u7684\u4f7f\u7528\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863 https://learn.hashicorp.com/consul \u4e86\u89e3\u66f4\u591a\u3002","title":"1\u3001\u57fa\u4e8e Consul \u7684\u670d\u52a1\u53d1\u73b0"},{"location":"chap5/53Prometheus_auto_discovery/#1-1-consul","text":"\u5728\u9875\u9762 https://www.consul.io/downloads \u4e0b\u8f7d\u7b26\u5408\u81ea\u5df1\u7cfb\u7edf\u7684\u5b89\u88c5\u6587\u4ef6\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u662f Linux \u7cfb\u7edf\uff0c\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef\uff1a $ wget https://releases.hashicorp.com/consul/1.10.2/consul_1.10.2_linux_amd64.zip $ unzip consul_1.10.2_linux_amd64.zip # \u5c06 consul \u4e8c\u8fdb\u5236\u79fb\u52a8\u5230 PATH \u8def\u5f84\u4e0b\u53bb $ mv consul /usr/local/bin $ consul version Consul v1.10.2 Revision 3cb6eeedb Protocol 2 spoken by default, understands 2 to 3 (agent will automatically use protocol >2 when speaking to compatible agents) \u5f53\u6267\u884c consul \u547d\u4ee4\u540e\u6b63\u5e38\u6709\u547d\u4ee4\u63d0\u793a\uff0c\u8bc1\u660e\u5df2\u7ecf\u5b89\u88c5\u5b8c\u6210\u3002 \u63a5\u7740\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u6ce8\u518c demo \u670d\u52a1\u7684 Consul \u914d\u7f6e\u6587\u4ef6 demo-service.json \uff1a { \"services\": [ { \"id\": \"demo1\", \"name\": \"demo\", \"address\": \"192.168.31.46\", \"port\": 10000, \"meta\": { \"env\": \"production\" }, \"checks\": [ { \"http\": \"http://192.168.31.46:10000/api/foo\", \"interval\": \"1s\" } ] }, { \"id\": \"demo2\", \"name\": \"demo\", \"address\": \"192.168.31.46\", \"port\": 10001, \"meta\": { \"env\": \"production\" }, \"checks\": [ { \"http\": \"http://192.168.31.46:10001/api/foo\", \"interval\": \"1s\" } ] }, { \"id\": \"demo3\", \"name\": \"demo\", \"address\": \"192.168.31.46\", \"port\": 10002, \"meta\": { \"env\": \"staging\" }, \"checks\": [ { \"http\": \"http://192.168.31.46:10002/api/foo\", \"interval\": \"1s\" } ] } ] } \u5f53\u7136\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u4e5f\u662f\u5728 Consul \u4e2d\u8fdb\u884c\u52a8\u6001\u6ce8\u518c\u670d\u52a1\uff0c\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u53ea\u662f\u7b80\u5355\u6f14\u793a Prometheus \u57fa\u4e8e Consul \u7684\u670d\u52a1\u53d1\u73b0\uff0c\u8fd9\u91cc\u53ea\u4f7f\u7528 Consul \u914d\u7f6e\u6587\u4ef6\u9759\u6001\u6ce8\u518c\u670d\u52a1\u5373\u53ef\u3002 Consul \u5141\u8bb8\u4f7f\u7528 JSON \u4e2d\u7684 meta \u5c5e\u6027\u5c06 key-value \u5143\u6570\u636e\u4e0e\u6bcf\u4e2a\u6ce8\u518c\u7684\u670d\u52a1\u5b9e\u4f8b\u76f8\u5173\u8054\uff0c\u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u914d\u7f6e\u7684 env \u5c5e\u6027\u548c\u90e8\u7f72\u73af\u5883 production \u6216 staging \u8fdb\u884c\u5173\u8054\uff0c\u540e\u9762\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 Prometheus \u91cc\u9762\u7684 Relabeling \u64cd\u4f5c\u63d0\u53d6\u8be5\u5b57\u6bb5\u5e76\u5c06\u5176\u6620\u5c04\u5230\u6bcf\u4e2a\u6293\u53d6\u5b9e\u4f8b\u7684\u6807\u7b7e\u4e2d\u53bb\u3002 \u4e3a\u4e86\u67e5\u770b\u66f4\u591a\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 dev \u6a21\u5f0f\u4e0b\u8fd0\u884c Consul\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u2638 \u279c consul agent -dev -config-file=demo-service.json -client 0.0.0.0 ==> Starting Consul agent... Version: '1.10.2' Node ID: 'a4a9418c-7f7d-a2da-c81e-94d3d37601aa' Node name: 'node2' Datacenter: 'dc1' (Segment: '<all>') Server: true (Bootstrap: false) Client Addr: [0.0.0.0] (HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600) Cluster Addr: 127.0.0.1 (LAN: 8301, WAN: 8302) Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false, Auto-Encrypt-TLS: false ==> Log data will now stream in as it occurs: ...... \u8fd9\u91cc\u6211\u4eec\u5728\u542f\u52a8\u547d\u4ee4\u540e\u9762\u4f7f\u7528 -client \u53c2\u6570\u6307\u5b9a\u4e86\u5ba2\u6237\u7aef\u7ed1\u5b9a\u7684 IP \u5730\u5740\uff0c\u9ed8\u8ba4\u4e3a 127.0.0.1 \u3002\u9664\u4e86\u6211\u4eec\u6ce8\u518c\u7684 3 \u4e2a demo \u670d\u52a1\u4e4b\u5916\uff0c Consul agent \u8fd8\u4f1a\u5c06\u81ea\u5df1\u6ce8\u518c\u4e3a\u4e00\u4e2a\u540d\u4e3a consul \u7684\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://<nodeip>:8500 \u67e5\u770b\u6ce8\u518c\u7684\u670d\u52a1\u3002 \u5728 Consul UI \u9875\u9762\u4e2d\u53ef\u4ee5\u770b\u5230\u6709 consul \u548c demo \u4e24\u4e2a Service \u670d\u52a1\u3002","title":"1-1 \u5b89\u88c5\u914d\u7f6e Consul"},{"location":"chap5/53Prometheus_auto_discovery/#1-2-consul","text":"\u4e0a\u9762\u6211\u4eec\u901a\u8fc7 Consul \u6ce8\u518c\u4e86 3 \u4e2a demo \u670d\u52a1\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u914d\u7f6e Prometheus \u901a\u8fc7 Consul \u6765\u81ea\u52a8\u53d1\u73b0 demo \u670d\u52a1\u3002 \u5728 Prometheus \u7684\u914d\u7f6e\u6587\u4ef6 prometheus.yml \u6587\u4ef6\u4e2d\u7684 scrape_configs \u90e8\u5206\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u6293\u53d6\u914d\u7f6e\uff1a scrape_configs: - job_name: \"consul-sd-demo\" consul_sd_configs: - server: \"localhost:8500\" relabel_configs: - action: keep source_labels: [__meta_consul_service, __meta_consul_health] regex: demo;passing - action: labelmap regex: __meta_consul_service_metadata_(.*) replacement: consul_$1 \u8fd9\u91cc\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a consul-sd-demo \u7684\u6293\u53d6\u4efb\u52a1\uff0c\u901a\u8fc7 consul_sd_configs \u914d\u7f6e\u7528\u4e8e\u81ea\u52a8\u53d1\u73b0\u7684 Consul \u670d\u52a1\u5730\u5740\uff0c\u7136\u540e\u4f7f\u7528 relabel_configs \u8fdb\u884c\u4e86\u91cd\u65b0\u6807\u8bb0\u914d\u7f6e\uff0c \u9996\u5148\u53ea\u4fdd\u7559\u670d\u52a1\u540d\u79f0\u4e3a demo \uff0c\u4e14\u5065\u5eb7\u72b6\u6001\u4e3a passing \u7684\uff0c\u5426\u5219\u4e5f\u4f1a\u6293\u53d6 Consul Agent \u672c\u8eab\uff0c\u800c\u5b83\u81ea\u8eab\u662f\u4e0d\u63d0\u4f9b metrics \u63a5\u53e3\u6570\u636e\u7684\uff0c \u53e6\u5916\u8fd8\u4f7f\u7528 labelmap \u8fdb\u884c\u4e86\u6807\u7b7e\u6620\u5c04\uff0c\u5c06\u6240\u6709 Consul \u5143\u6807\u7b7e\u6620\u5c04\u5230 Prometheus \u4e2d\u4ee5 consul_ \u4e3a\u524d\u7f00\u7684\u6807\u7b7e\u4e2d\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\u91cd\u65b0\u542f\u52a8 Prometheus\uff0c\u7136\u540e\u91cd\u65b0\u67e5\u770b Prometheus \u9875\u9762\u4e0a\u7684 targets \u9875\u9762\uff0c\u9a8c\u8bc1\u4e0a\u9762\u7684\u914d\u7f6e\u662f\u5426\u5b58\u5728\uff1a \u6b63\u5e38\u60c5\u51b5\u4e0b\u662f\u53ef\u4ee5\u770b\u5230\u4f1a\u6709\u4e00\u4e2a consul-sd-demo \u7684\u4efb\u52a1\uff0c\u4e0b\u9762\u6709 3 \u4e2a\u81ea\u52a8\u53d1\u73b0\u7684\u6293\u53d6\u76ee\u6807 \u3002 \u6211\u4eec\u5c06\u9f20\u6807\u60ac\u505c\u5728 Labels \u6807\u7b7e\u533a\u57df\u5c31\u53ef\u4ee5\u770b\u5230\u76ee\u6807\u4efb\u52a1\u5728\u91cd\u65b0\u6807\u8bb0 Relabeling \u4e4b\u524d\u7684\u539f\u59cb\u6807\u7b7e\u3002 \u6bd4\u5982\u6211\u4eec\u5c06\u67e5\u770b\u7b2c\u4e00\u4e2a demo \u5b9e\u4f8b\u5728 Relabel \u4e4b\u524d\u5305\u542b\u5982\u4e0b\u6240\u793a\u7684\u8fd9\u4e9b\u539f\u59cb\u6807\u7b7e\uff1a \u901a\u8fc7\u67e5\u770b\u7f51\u7edc\u8bf7\u6c42\u63a5\u53e3 http://<promtheus addr>/api/v1/targets?state=active \u4e5f\u53ef\u4ee5\u83b7\u53d6\u5bf9\u5e94\u7684\u539f\u59cb\u6807\u7b7e\u6570\u636e\uff1a { \"discoveredLabels\": { \"__address__\": \"192.168.31.46:10000\", \"__meta_consul_address\": \"127.0.0.1\", \"__meta_consul_dc\": \"dc1\", \"__meta_consul_health\": \"passing\", \"__meta_consul_node\": \"node2\", \"__meta_consul_service\": \"demo\", \"__meta_consul_service_address\": \"192.168.31.46\", \"__meta_consul_service_id\": \"demo1\", \"__meta_consul_service_metadata_env\": \"production\", \"__meta_consul_service_port\": \"10000\", \"__meta_consul_tagged_address_lan\": \"127.0.0.1\", \"__meta_consul_tagged_address_lan_ipv4\": \"127.0.0.1\", \"__meta_consul_tagged_address_wan\": \"127.0.0.1\", \"__meta_consul_tagged_address_wan_ipv4\": \"127.0.0.1\", \"__meta_consul_tags\": \",,\", \"__metrics_path__\": \"/metrics\", \"__scheme__\": \"http\", \"job\": \"consul-sd-demo\" }, \"labels\": { \"consul_env\": \"production\", \"instance\": \"192.168.31.46:10000\", \"job\": \"consul-sd-demo\" }, \"scrapePool\": \"consul-sd-demo\", \"scrapeUrl\": \"http://192.168.31.46:10000/metrics\", \"globalUrl\": \"http://192.168.31.46:10000/metrics\", \"lastError\": \"\", \"lastScrape\": \"2021-09-28T11:56:01.919216851+08:00\", \"lastScrapeDuration\": 0.013357276, \"health\": \"up\" } \u6211\u4eec\u5728 relabel_configs \u4e2d\u9996\u5148\u914d\u7f6e\u4e86\u4e00\u4e2a keep \u64cd\u4f5c\uff0c\u53ea\u4fdd\u7559\u539f\u59cb\u6807\u7b7e __meta_consul_service \u503c\u4e3a demo \uff0c\u4e14 __meta_consul_health \u4e3a passing \u72b6\u6001\u7684\u6293\u53d6\u4efb\u52a1\u3002 \u7136\u540e\u4f7f\u7528 labelmap \u8fdb\u884c\u6807\u7b7e\u6620\u5c04\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u5339\u914d __meta_consul_service_metadata_(.*) \u6240\u6709\u6807\u7b7e\uff0c\u8fd9\u91cc\u53ea\u6709 __meta_consul_service_metadata_env \u8fd9\u4e2a\u539f\u59cb\u6807\u7b7e\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u7684 env \u5c31\u662f\u5339\u914d\u7684\u6355\u83b7\u7ec4\uff0c\u5728 replacement \u4e2d\u7528 $1 \u4ee3\u66ff\uff0c\u66ff\u6362\u6210\u6807\u7b7e consul_$1 \uff0c\u4e5f\u5c31\u662f consul_env \u8fd9\u4e2a\u6807\u7b7e\u4e86\uff0c\u6240\u4ee5 Relabeling \u8fc7\u540e\u5c31\u53ea\u5269\u4e0b\u4e0b\u9762\u7684\u51e0\u4e2a\u76ee\u6807\u6807\u7b7e\u4e86\uff1a instance: \"192.168.31.46:10000\" job: \"consul-sd-demo\" consul_env: \"production\" \u5176\u4e2d\u7684 instance \u6807\u7b7e\u662f\u5728\u91cd\u65b0\u6807\u8bb0\u4e4b\u540e\uff0c\u81ea\u52a8\u4ece __address__ \u8f6c\u53d8\u800c\u6765\u7684\u3002 \u7531\u4e8e\u6ca1\u6709\u91cd\u65b0\u4fee\u6539 __metrics_path__ \u548c __scheme__ \u6807\u7b7e\uff0c\u6240\u4ee5\u9ed8\u8ba4\u7684\u6293\u53d6\u76ee\u6807\u5c31\u662f\u901a\u8fc7 HTTP \u7aef\u70b9 /metrics \u8fdb\u884c\u6293\u53d6\u3002 \u73b0\u5728\u5982\u679c\u6211\u4eec\u5c06 demo1 \u8fd9\u4e2a\u670d\u52a1\u6740\u6389\uff0c\u5219\u5728 Consul \u4e2d\u6ce8\u518c\u7684\u670d\u52a1\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u4e0d\u5065\u5eb7\u7684\u5b9e\u4f8b\uff1a \u5f53\u7136\u6b64\u65f6 Prometheus \u4e2d\u5c31\u53ea\u5269\u4e0b\u4e24\u4e2a\u6b63\u5e38 demo \u670d\u52a1\u7684\u5b9e\u4f8b\u4e86\uff1a \u5f53\u670d\u52a1\u6b63\u5e38\u540e\u5c31\u53c8\u53ef\u4ee5\u81ea\u52a8\u53d1\u73b0\u5bf9\u5e94\u7684\u670d\u52a1\u4e86\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86 Prometheus \u57fa\u4e8e Consul \u7684\u4e00\u4e2a\u7b80\u5355\u7684\u81ea\u52a8\u53d1\u73b0\u914d\u7f6e\u3002","title":"1-2 \u914d\u7f6e Consul \u81ea\u52a8\u53d1\u73b0"},{"location":"chap5/53Prometheus_auto_discovery/#2","text":"\u9664\u4e86\u57fa\u4e8e Consul \u7684\u670d\u52a1\u53d1\u73b0\u4e4b\u5916\uff0cPrometheus \u4e5f\u5141\u8bb8\u6211\u4eec\u8fdb\u884c\u81ea\u5b9a\u4e49\u7684\u53d1\u73b0\u96c6\u6210\uff0c\u53ef\u4ee5\u901a\u8fc7 watch \u4e00\u7ec4\u672c\u5730\u6587\u4ef6\u6765\u83b7\u53d6\u6293\u53d6\u76ee\u6807\u4ee5\u53ca\u6807\u7b7e\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u57fa\u4e8e\u6587\u4ef6\u7684\u670d\u52a1\u53d1\u73b0\u65b9\u5f0f\u3002 \u57fa\u4e8e\u6587\u4ef6\u7684\u670d\u52a1\u53d1\u73b0\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u901a\u7528\u7684\u65b9\u5f0f\u6765\u914d\u7f6e\u9759\u6001\u76ee\u6807\uff0c\u5e76\u4f5c\u4e3a\u4e00\u4e2a\u63a5\u53e3\u63d2\u5165\u81ea\u5b9a\u4e49\u670d\u52a1\u53d1\u73b0\u673a\u5236\u3002 \u5b83\u8bfb\u53d6\u4e00\u7ec4\u5305\u542b\u96f6\u4e2a\u6216\u591a\u4e2a <static_config> \u5217\u8868\u7684\u6587\u4ef6\uff0c\u5bf9\u6240\u6709\u5b9a\u4e49\u7684\u6587\u4ef6\u7684\u53d8\u66f4\u901a\u8fc7\u78c1\u76d8\u76d1\u89c6\u88ab\u68c0\u6d4b\u5230\u5e76\u7acb\u5373\u5e94\u7528\uff0c\u6587\u4ef6\u53ef\u4ee5\u4ee5 YAML \u6216 JSON \u683c\u5f0f\u63d0\u4f9b\u3002\u6587\u4ef6\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u9759\u6001\u914d\u7f6e\u7684\u5217\u8868: JSON json [ { \"targets\": [ \"<host>\", ... ], \"labels\": { \"<labelname>\": \"<labelvalue>\", ... } }, ... ] YAML yaml - targets: [ - '<host>' ] labels: [ <labelname>: <labelvalue> ... ] \u6587\u4ef6\u5185\u5bb9\u4e5f\u4f1a\u5728\u6307\u5b9a\u7684\u5237\u65b0\u95f4\u9694\u65f6\u95f4\u5185\u5b9a\u671f\u91cd\u65b0\u8bfb\u53d6\u3002 # Patterns for files from which target groups are extracted. files: [ - <filename_pattern> ... ] # Refresh interval to re-read the files. [ refresh_interval: <duration> | default = 5m ] \u5176\u4e2d <filename*pattern> \u53ef\u4ee5\u662f\u4e00\u4e2a\u4ee5 .json \u3001 .yml \u6216 . yaml \u7ed3\u5c3e\u7684\u8def\u5f84\uff0c\u6700\u540e\u4e00\u4e2a\u8def\u5f84\u6bb5\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u5339\u914d\u4efb\u4f55\u5b57\u7b26\u5e8f\u5217\u7684 * \uff0c\u4f8b\u5982\uff1a my/path/tg_*.json \u3002","title":"2\u3001\u57fa\u4e8e\u6587\u4ef6\u7684\u670d\u52a1\u53d1\u73b0"},{"location":"chap5/53Prometheus_auto_discovery/#2-1","text":"- targets: - \"192.168.31.46:10000\" - \"192.168.31.46:10001\" labels: env: production - targets: - \"192.168.31.46:10002\" labels: env: staging \u8be5\u6587\u4ef6\u4e2d\u6211\u4eec\u5217\u4e3e\u4e86 3 \u4e2a demo \u670d\u52a1\u5b9e\u4f8b\uff0c\u7ed9\u524d\u4e24\u4e2a\u5b9e\u4f8b\u6dfb\u52a0\u4e0a\u4e86 env=production \u7684\u6807\u7b7e\uff0c\u540e\u9762\u4e00\u4e2a\u52a0\u4e0a\u4e86 env=staging \u7684\u6807\u7b7e\uff0c\u5f53\u7136\u8be5\u6587\u4ef6\u4e5f\u53ef\u4ee5\u4f7f\u7528 JSON \u683c\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a [ { \"targets\": [ \"<host>\", ... ], \"labels\": { \"<labelname>\": \"<labelvalue>\", ... } }, ... ] \u5982\u679c\u662f YAML \u6587\u4ef6\u5219\u683c\u5f0f\u4e3a\uff1a - targets: [ - '<host>' ] labels: [ <labelname>: <labelvalue> ... ]","title":"2-1 \u521b\u5efa\u6587\u4ef6"},{"location":"chap5/53Prometheus_auto_discovery/#2-2","text":"\u7528\u4e8e\u53d1\u73b0\u7684\u76ee\u6807\u6587\u4ef6\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u8981\u8ba9 Prometheus \u80fd\u591f\u4ece\u4e0a\u9762\u7684 targets.yml \u6587\u4ef6\u4e2d\u81ea\u52a8\u8bfb\u53d6\u6293\u53d6\u76ee\u6807\uff0c\u9700\u8981\u5728 prometheus.yml \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 scrape_configs \u90e8\u5206\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u6293\u53d6\u914d\u7f6e\uff1a - job_name: \"file-sd-demo\" file_sd_configs: - files: - \"targets.yml\" \u91cd\u65b0 reload \u6216\u8005\u91cd\u542f\u4e0b Prometheus \u8ba9\u5176\u91cd\u65b0\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u4fe1\u606f\uff0c\u7136\u540e\u540c\u6837\u524d\u5f80 Prometheus UI \u7684 targets \u9875\u9762\u4e0b\u9762\u67e5\u770b\u662f\u5426\u6709\u4e0a\u9762\u5b9a\u4e49\u7684\u6293\u53d6\u76ee\u6807\u3002 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6539\u53d8 targets.yml \u7684\u5185\u5bb9\uff0c\u6bd4\u5982\u4e3a\u7b2c\u4e09\u4e2a\u5b9e\u4f8b\u589e\u52a0\u4e00\u4e2a role: sd \u7684\u6807\u7b7e\uff0c\u4e0d\u7528\u91cd\u65b0\u52a0\u8f7d Prometheus \u914d\u7f6e\uff0c Prometheus \u5c06 watch \u8be5\u6587\u4ef6\uff0c\u5e76\u81ea\u52a8\u63a5\u6536\u4efb\u4f55\u53d8\u5316\u3002 \u6ce8\u610f\uff1a\u5f53\u5728\u751f\u4ea7\u73af\u5883 Prometheus \u670d\u52a1\u5668\u4e2d\u6539\u53d8 file_sd \u76ee\u6807\u6587\u4ef6\u65f6\uff0c\u9700\u8981\u786e\u4fdd\u6539\u53d8\u662f\u539f\u5b50\u7684\uff0c\u4ee5\u907f\u514d\u91cd\u65b0\u52a0\u8f7d\u51fa\u73b0\u9519\u8bef\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u662f\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u4f4d\u7f6e\u521b\u5efa\u66f4\u65b0\u7684\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u5176\u91cd\u547d\u540d\u4e3a\u76ee\u6807\u6587\u4ef6\u540d\uff08\u4f7f\u7528 mv \u547d\u4ee4\u6216 rename() \u7cfb\u7edf\u8c03\u7528\uff09\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u57fa\u4e8e\u6587\u4ef6\u7684\u901a\u7528\u670d\u52a1\u53d1\u73b0\u673a\u5236\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u52a8\u6001\u5730\u6539\u53d8 Prometheus \u7684\u76d1\u63a7\u76ee\u6807\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u542f\u52a8\u6216\u91cd\u65b0\u52a0\u8f7d Prometheus \u670d\u52a1\u3002 \u5f53\u7136\u9664\u4e86\u57fa\u4e8e Consul \u548c\u6587\u4ef6\u7684\u670d\u52a1\u53d1\u73b0\u4e4b\u5916\uff0c\u66f4\u591a\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u5728 Kubernetes \u73af\u5883\u4e0b\u9762\u4f7f\u7528 Prometheus\uff0c\u7531\u4e8e\u8fd9\u90e8\u5206\u5185\u5bb9\u6bd4\u8f83\u72ec\u7acb\uff0c\u3002","title":"2-2 \u914d\u7f6e\u6587\u4ef6\u670d\u52a1\u53d1\u73b0"},{"location":"chap5/54prometheus_go_metrics_guideline/","text":"\u7b2c\u4e09\u8282 \u5982\u4f55\u4f7f\u7528 Prometheus \u4eea\u8868\u5316\u5e94\u7528 \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u5c06\u5e94\u7528\u7684\u76d1\u63a7\u6307\u6807\u5982\u4f55\u63a5\u5165 Prometheus\uff0c\u4f46\u662f\u5982\u4f55\u5728\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u66b4\u9732\u76d1\u63a7\u6307\u6807\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5728\u5e94\u7528\u4e2d \u96c6\u6210 metrics \u6307\u6807\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u5355\u72ec\u5f00\u53d1\u4e00\u4e2a\u5bf9\u5e94\u7684 exporter \u6765\u66b4\u9732\u6307\u6807\uff0c\u6216\u8005\u6839\u636e\u9700\u6c42\u7f16\u5199\u811a\u672c\u63a8\u9001\u5230 pushgateway \u7f51\u5173\u751f\u6210\u76d1\u63a7\u6307\u6807 \uff0c\u4e0d\u8fc7\u6700\u597d\u7684\u65b9\u5f0f\u662f\u76f4\u63a5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u96c6\u6210 Prometheus \u76d1\u63a7\u6307\u6807\u6570\u636e\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u6765\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 Prometheus \u5ba2\u6237\u7aef\u5e93\u6765\u66b4\u9732\u76d1\u63a7\u6307\u6807\uff0c\u4f7f\u7528\u4e00\u4e2a Prometheus Go \u5ba2\u6237\u7aef\u5e93\u6765\u4eea\u8868\u5316\u4e00\u4e2a Go \u5e94\u7528\u7a0b\u5e8f\uff0c\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0\u76f8\u5173\u6307\u6807\u4ee5\u83b7\u53d6\u5bf9\u5e94\u7528\u7a0b\u5e8f\u7684\u76d1\u63a7\u80fd\u529b\u3002 1\u3001\u6293\u53d6\u6307\u6807 \u6211\u4eec\u5df2\u7ecf\u5f88\u6e05\u695a Prometheus \u662f\u5982\u4f55\u6293\u53d6\u76d1\u63a7\u6307\u6807\u7684\u4e86\uff0cPrometheus \u901a\u8fc7\u4e00\u4e2a HTTP \u8bf7\u6c42\u6293\u53d6\u76d1\u63a7\u76ee\u6807\uff0c\u9ed8\u8ba4\u8bf7\u6c42\u7684\u7aef\u70b9\u540d\u662f /metrics \u3002 \u76d1\u63a7\u76ee\u6807\u901a\u8fc7\u53d1\u9001\u6bcf\u4e2a\u88ab\u8ddf\u8e2a\u7684\u65f6\u95f4\u5e8f\u5217\u5355\u4e2a\u6837\u672c\uff0c\u4ee5\u53ca\u6837\u672c\u7684\u6307\u6807\u540d\u79f0\u3001\u6807\u7b7e\u96c6\u5408\u548c\u6837\u672c\u503c\u6765\u54cd\u5e94\u6bcf\u4e2a\u6307\u6807\u7684\u5f53\u524d\u72b6\u6001\u3002 \u6293\u53d6\u5230\u6570\u636e\u540e Prometheus \u4f1a\u5b58\u50a8\u6bcf\u4e2a\u6837\u672c\uff0c\u5e76\u4e3a\u5176\u6dfb\u52a0\u4e00\u4e2a\u670d\u52a1\u5668\u7aef\u7684\u65f6\u95f4\u6233\uff0c\u4ece\u800c\u4ece\u5355\u4e2a\u6293\u53d6\u6784\u5efa\u6210\u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217 \u3002 \u6b64\u5916\u6211\u4eec\u518d\u56de\u987e\u4e0b\u83b7\u53d6\u7684\u76d1\u63a7\u6307\u6807\u683c\u5f0f\uff1a # HELP http_requests_total The total number of HTTP requests. # TYPE http_requests_total counter http_requests_total{method=\"post\",code=\"200\"} 1027 http_requests_total{method=\"post\",code=\"400\"} 3 # HELP process_open_fds Number of open file descriptors. # TYPE process_open_fds gauge process_open_fds 15 # HELP http_request_duration_seconds A histogram of the request duration. # TYPE http_request_duration_seconds histogram http_request_duration_seconds_bucket{le=\"0.05\"} 24054 http_request_duration_seconds_bucket{le=\"0.1\"} 33444 http_request_duration_seconds_bucket{le=\"0.2\"} 100392 http_request_duration_seconds_bucket{le=\"0.5\"} 129389 http_request_duration_seconds_bucket{le=\"1\"} 133988 http_request_duration_seconds_bucket{le=\"+Inf\"} 144320 http_request_duration_seconds_sum 53423 http_request_duration_seconds_count 144320 # HELP rpc_duration_seconds A summary of RPC durations in seconds. # TYPE rpc_duration_seconds summary rpc_duration_seconds{quantile=\"0.01\"} 3.102 rpc_duration_seconds{quantile=\"0.05\"} 3.272 rpc_duration_seconds{quantile=\"0.5\"} 4.773 rpc_duration_seconds{quantile=\"0.9\"} 9.001 rpc_duration_seconds{quantile=\"0.99\"} 76.656 rpc_duration_seconds_sum 5.7560473e+04 rpc_duration_seconds_count 2693 \u6293\u53d6\u76ee\u6807\u53ea\u4f1a\u66b4\u9732\u5f53\u524d\u8bbf\u95ee\u7684\u503c\uff0c\u800c\u4e0d\u4f1a\u66b4\u9732\u5b83\u6240\u8ddf\u8e2a\u6570\u636e\u6240\u6709\u7684\u5386\u53f2\u6307\u6807\uff0c\u6307\u6807\u4e2d\u7684\u6bcf\u4e00\u884c\uff08\u6ce8\u91ca\u9664\u5916\uff09\u5c31\u662f\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u6837\u672c\uff0c\u6bcf\u4e2a\u5e8f\u5217\u5728\u540c\u4e00\u4e2a\u6293\u53d6\u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\uff0c\u6240\u4ee5\uff0c\u4eea\u8868\u5316\u5e94\u7528\u53ea\u9700\u8981\u5728\u5185\u5b58\u4e2d\u8ddf\u8e2a\u5176\u6307\u6807\u7684\u5f53\u524d\u72b6\u6001\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u8ddf\u8e2a\u6216\u7f13\u5b58\u4efb\u4f55\u5386\u53f2\u6307\u6807\u72b6\u6001\u3002 2\u3001\u5ba2\u6237\u7aef\u5e93 Prometheus \u5b98\u65b9\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e9b\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u5e93\uff0c\u5305\u62ec Go\u3001Java\u3001Python\u3001Ruby\uff0c\u8fd8\u6709\u4e00\u4e9b\u975e\u5b98\u65b9\u7684\u7b2c\u4e09\u65b9\u5ba2\u6237\u7aef\u5e93\uff0c\u53ef\u4ee5\u7528\u6765\u5e2e\u52a9\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u96c6\u6210 Prometheus \u6307\u6807\u670d\u52a1\u3002\u4f7f\u7528\u8fd9\u4e9b\u5e93\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u548c\u8ddf\u8e2a\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u6807\uff0c\u53cd\u6620\u670d\u52a1\u5f53\u524d\u7684\u72b6\u6001\uff0c\u8fd9\u4e9b\u5e93\u90fd\u5141\u8bb8\u6211\u4eec\u521b\u5efa\u548c\u66f4\u65b0\u5355\u72ec\u7684\u6307\u6807\u5bf9\u8c61\uff0c\u5c06\u5b83\u4eec\u6ce8\u518c\u5230\u4e00\u4e2a\u6307\u6807\u6ce8\u518c\u4e2d\u5fc3\uff0c\u7136\u540e\u901a\u8fc7 HTTP \u66b4\u9732\u8be5\u6307\u6807\u6ce8\u518c\u4e2d\u5fc3\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u7528\u7684 metrics \u63a5\u53e3\u3002 Prometheus \u7684\u4eea\u8868\u5316\u5ba2\u6237\u7aef\u5e93\u4e2d\u5305\u542b\u4e0d\u540c\u7684\u6307\u6807\u7c7b\u578b\uff1a counters \u3001 gauges \u3001 histograms \u4ee5\u53ca summaries \uff0c\u548c Prometheus \u4e2d\u7684\u6307\u6807\u7c7b\u578b\u5bf9\u5e94\uff0c\u5177\u4f53\u8981\u4f7f\u7528\u54ea\u79cd\u7c7b\u578b\u7684\u6307\u6807\u53d6\u51b3\u4e8e\u6211\u4eec\u7684\u5b9e\u9645\u60c5\u51b5\u3002 \u6839\u636e\u4e0d\u540c\u7684\u6307\u6807\u7c7b\u578b\uff0c\u5728\u6784\u5efa\u6307\u6807\u5bf9\u8c61\u7684\u65f6\u5019\u9700\u8981\u63d0\u4f9b\u4e0d\u540c\u7684\u9009\u9879\uff0c\u6bd4\u5982\u5728\u521b\u5efa\u76f4\u65b9\u56fe\u7684\u65f6\u5019\u9700\u8981\u6307\u5b9a\u5b58\u50a8\u6876 bucket\uff0c\u800c\u521b\u5efa\u8ba1\u6570\u5668\u7684\u65f6\u5019\u4e0b\u4e0d\u9700\u8981\u5176\u4ed6\u989d\u5916\u53c2\u6570\u7684\u3002\u6b64\u5916\u6784\u9020\u7684\u6307\u6807\u5bf9\u8c61\u8fd8\u4e3a\u6bcf\u79cd\u7c7b\u578b\u7684\u6307\u6807\u66b4\u9732\u4e86\u4e0d\u540c\u7684\u72b6\u6001\u66f4\u65b0\u65b9\u6cd5\uff0c\u4f8b\u5982\uff0c\u8ba1\u6570\u5668\u5177\u6709\u589e\u52a0\u5f53\u524d\u503c\u7684\u65b9\u6cd5\uff0c\u4f46\u4e0d\u4f1a\u66b4\u9732\u5c06\u8ba1\u6570\u5668\u8bbe\u7f6e\u4e3a\u4efb\u610f\u503c\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u4eea\u8868\u76d8\u662f\u5141\u8bb8\u6211\u4eec\u8bbe\u7f6e\u5f53\u524d\u503c\u7684\u3002 \u53e6\u5916 Prometheus \u7684\u5ba2\u6237\u7aef\u5e93\u9875\u9762( https://prometheus.io/docs/instrumenting/clientlibs/ )\u4e0a\u5217\u51fa\u7684\u6240\u6709\u5b98\u65b9\u5e93\u7684\u5b9e\u73b0\u90fd\u8003\u8651\u5230\u4e86\u6548\u7387\u548c\u5e76\u53d1\u5b89\u5168\u95ee\u9898\uff1a \u6548\u7387 \uff1a\u5bf9\u6307\u6807\u5bf9\u8c61\u7684\u72b6\u6001\u66f4\u65b0\u8fdb\u884c\u4e86\u4f18\u5316 \u5e76\u53d1\u5b89\u5168 \uff1a\u6307\u6807\u5bf9\u8c61\u7684\u6240\u6709\u72b6\u6001\u66f4\u65b0\u4ee5\u53ca\u4ece\u6307\u6807\u72b6\u6001\u8bfb\u53d6\u90fd\u662f\u5e76\u53d1\u5b89\u5168\u7684\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4ece\u591a\u4e2a\u7ebf\u7a0b\uff08\u6216 Go \u4e2d\u7684 goroutines\uff09\u66f4\u65b0\u6307\u6807\u503c\uff0c\u800c\u65e0\u9700\u8003\u8651\u9501\u7684\u95ee\u9898\uff0c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u8fd8\u80fd\u591f\u540c\u65f6\u5b89\u5168\u5730\u5904\u7406\u591a\u4e2a\u6307\u6807\u6293\u53d6\u3002 \u6240\u4ee5\u6211\u4eec\u662f\u53ef\u4ee5\u653e\u5fc3\uff08\u5f53\u7136\u4e5f\u662f\u63a8\u8350\uff09\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b\u7684\u5ba2\u6237\u7aef\u5e93\u6765\u4eea\u8868\u5316\u6211 3\u3001\u8ddf\u8e2a\u6307\u6807 \u5f53\u5bf9\u4e00\u4e2a\u7cfb\u7edf\u6216\u8005\u670d\u52a1\u8fdb\u884c\u4eea\u8868\u5316\u7684\u65f6\u5019\uff0c\u5c3d\u91cf\u63d0\u4f9b\u4e00\u4e9b\u6709\u610f\u4e49\u7684\u6d4b\u91cf\u6307\u6807\uff0c\u4e1a\u754c\u6709\u51e0\u4e2a\u6bd4\u8f83\u8457\u540d\u7684\u6307\u5bfc\u65b9\u9488\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u6765\u7406\u89e3\u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u5e94\u8be5\u6dfb\u52a0\u54ea\u4e9b\u6307\u6807\u3002 3-1 Google \u7684\u56db\u5927\u9ec4\u91d1\u6307\u6807 \u6709 4 \u4e2a\u6765\u81ea Google SRE \u624b\u518c\u7684\u9ec4\u91d1\u6307\u6807\uff0c\u8fd9 4 \u4e2a\u6307\u6807\u4e3b\u8981\u9488\u5bf9\u5e94\u7528\u7a0b\u5e8f\u6216\u7528\u6237\u90e8\u5206\u3002 \u5ef6\u8fdf\uff08Latency\uff09 \uff1a\u670d\u52a1\u8bf7\u6c42\u6240\u9700\u8017\u65f6\uff0c\u4f8b\u5982 HTTP \u8bf7\u6c42\u5e73\u5747\u5ef6\u8fdf\u3002\u9700\u8981\u533a\u5206\u6210\u529f\u8bf7\u6c42\u548c\u5931\u8d25\u8bf7\u6c42\uff0c\u56e0\u4e3a\u5931\u8d25\u8bf7\u6c42\u53ef\u80fd\u4f1a\u4ee5\u975e\u5e38\u4f4e\u7684\u5ef6\u8fdf\u8fd4\u56de\u9519\u8bef\u7ed3\u679c\u3002 \u6d41\u91cf\uff08Traffic\uff09 \uff1a\u8861\u91cf\u670d\u52a1\u5bb9\u91cf\u9700\u6c42\uff08\u9488\u5bf9\u7cfb\u7edf\u800c\u8a00\uff09\uff0c\u4f8b\u5982\u6bcf\u79d2\u5904\u7406\u7684 HTTP \u8bf7\u6c42\u6570\u6216\u8005\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u4e8b\u52a1\u6570\u91cf\u3002 \u9519\u8bef\uff08Errors\uff09 \uff1a\u8bf7\u6c42\u5931\u8d25\u7684\u901f\u7387\uff0c\u7528\u4e8e\u8861\u91cf\u9519\u8bef\u53d1\u751f\u7684\u60c5\u51b5\uff0c\u4f8b\u5982 HTTP500 \u9519\u8bef\u6570\u7b49\u663e\u5f0f\u5931\u8d25\uff0c\u8fd4\u56de\u9519\u8bef\u5185\u5bb9\u6216\u65e0\u6548\u5185\u5bb9\u7b49\u9690\u5f0f\u5931\u8d25\uff0c\u4ee5\u53ca\u7531\u7b56\u7565\u539f\u56e0\u5bfc\u81f4\u7684\u5931\u8d25\uff08\u6bd4\u5982\u5f3a\u5236\u8981\u6c42\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 30ms \u7684\u8bf7\u6c42\u4e3a\u9519\u8bef\uff09\u3002 \u9971\u548c\u5ea6\uff08Saturation\uff09 \uff1a\u8861\u91cf\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u4f8b\u5982\u5185\u5b58\u3001CPU\u3001I/O\u3001\u78c1\u76d8\u4f7f\u7528\u91cf\uff08\u5373\u5c06\u9971\u548c\u7684\u90e8\u5206\uff0c\u6bd4\u5982\u6b63\u5728\u5feb\u901f\u586b\u5145\u7684\u78c1\u76d8\uff09\u3002 3-2 \u8d44\u6e90\u6307\u6807\u7684 USE \u65b9\u6cd5 USE \u662f Utilization\uff08\u4f7f\u7528\u7387\uff09\u3001Saturation\uff08\u9971\u548c\u5ea6\uff09\u3001Error\uff08\u9519\u8bef\uff09\u7684\u9996\u5b57\u6bcd\u7ec4\u5408 \uff0c\u662f Netflix \u7684\u5185\u6838\u548c\u6027\u80fd\u5de5\u7a0b\u5e08 Brendan Gregg \u63d0\u51fa\u7684\uff0c\u4e3b\u8981\u7528\u4e8e\u5206\u6790\u7cfb\u7edf\u6027\u80fd\u95ee\u9898\uff0c\u53ef\u4ee5\u6307\u5bfc\u7528\u6237\u5feb\u901f\u8bc6\u522b\u8d44\u6e90\u74f6\u9888\u53ca\u9519\u8bef\uff0c\u4e3b\u8981\u53ef\u4ee5\u8003\u8651\u6dfb\u52a0\u4ee5\u4e0b\u6307\u6807\u3002 \u4f7f\u7528\u7387\uff08Utilization\uff09 \uff1a\u5173\u6ce8\u7cfb\u7edf\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u8fd9\u91cc\u7684\u8d44\u6e90\u4e3b\u8981\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e CPU\u3001\u5185\u5b58\u3001\u7f51\u7edc\u3001\u78c1\u76d8\u7b49\uff0c100%\u4f7f\u7528\u7387\u901a\u5e38\u662f\u7cfb\u7edf\u6027\u80fd\u74f6\u9888\u7684\u6807\u5fd7\u3002 \u9971\u548c\u5ea6\uff08Saturation\uff09 \uff1a\u4f8b\u5982\u8c03\u5ea6\u5668\u8fd0\u884c\u961f\u5217\u957f\u5ea6\uff0c\u8fd9\u91cc\u4e3b\u8981\u662f\u9488\u5bf9\u8d44\u6e90\u7684\u9971\u548c\u5ea6\uff08\u6ce8\u610f\uff0c\u4e0d\u540c\u4e8e\u56db\u5927\u9ec4\u91d1\u6307\u6807\uff09\u3002\u4efb\u4f55\u8d44\u6e90\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7684\u9971\u548c\u90fd\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edf\u6027\u80fd\u7684\u4e0b\u964d\u3002 \u9519\u8bef\uff08Errors\uff09 \uff1a\u53d1\u751f\u4e86\u591a\u5c11\uff08\u4ee5\u53ca\u4ec0\u4e48\u7c7b\u578b\u7684\uff09\u9519\u8bef\u3002\u4f8b\u5982\uff0c\u7f51\u5361\u5728\u6570\u636e\u5305\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u68c0\u6d4b\u5230\u4ee5\u592a\u7f51\u7edc\u51b2\u7a81\u4e86 10 \u6b21\u3002 3-3 \u8bf7\u6c42\u670d\u52a1\u7cfb\u7edf\u7684 RED \u65b9\u6cd5 RED \u65b9\u6cd5\u662f Weave Cloud \u57fa\u4e8e Google \u7684 4 \u4e2a\u9ec4\u91d1\u6307\u6807\u518d\u7ed3\u5408 Prometheus \u53ca Kubernetes \u5bb9\u5668\u5b9e\u8df5\u5f97\u51fa\u7684\u65b9\u6cd5\u8bba\uff0c\u7279\u522b\u9002\u7528\u4e8e\u5bf9\u4e91\u539f\u751f\u5e94\u7528\u4ee5\u53ca\u5fae\u670d\u52a1\u67b6\u6784\u5e94\u7528\u8fdb\u884c\u76d1\u63a7\u548c\u5ea6\u91cf\u3002\u5728\u56db\u5927\u9ec4\u91d1\u6307\u6807\u7684\u539f\u5219\u4e0b\uff0cRED \u65b9\u6cd5\u53ef\u4ee5\u6709\u6548\u5730\u5e2e\u52a9\u7528\u6237\u8861\u91cf\u4e91\u539f\u751f\u4ee5\u53ca\u5fae\u670d\u52a1\u5e94\u7528\u4e0b\u7684\u7528\u6237\u4f53\u9a8c\u95ee\u9898\u3002RED \u65b9\u6cd5\u4e3b\u8981\u5173\u6ce8\u4ee5\u4e0b 3 \u79cd\u5173\u952e\u6307\u6807\u3002 Request Counters\uff1a\u8bf7\u6c42\u8ba1\u6570\u5668 \u3002 Errors Counters\uff1a\u9519\u8bef\u8ba1\u6570\u5668 \u3002 Request Duration\uff1a\u6bcf\u4e2a\u8bf7\u6c42\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff08histograms \u6216 summaries\uff09 \u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u4e0a\u8ff0\u4e09\u5927\u76d1\u63a7\u7406\u8bba\u7684\u6700\u4f73\u5b9e\u8df5\u662f\uff1a\u5728\u9075\u5faa Google \u56db\u5927\u9ec4\u91d1\u6307\u6807\u7684\u524d\u63d0\u4e0b\uff0c\u5bf9\u4e8e\u5728\u7ebf\u7cfb\u7edf\uff0c\u7ed3\u5408 RED \u65b9\u6cd5\u548c\u7f13\u5b58\u547d\u4e2d\u7387\u65b9\u5f0f\u8fdb\u884c\u76d1\u6d4b\uff1b\u5bf9\u4e8e\u79bb\u7ebf\u7cfb\u7edf\u6216\u8005\u4e3b\u673a\u76d1\u63a7\uff0c\u4ee5 USE \u65b9\u6cd5\u4e3a\u4e3b\u8fdb\u884c\u76d1\u6d4b\uff1b\u5bf9\u4e8e\u6279\u5904\u7406\u7cfb\u7edf\uff0c\u53ef\u4ee5\u91c7\u7528\u7c7b\u4f3c Pushgateway \u7684\u5f62\u5f0f\u8fdb\u884c\u76d1\u63a7\u3002 \u5f53\u7136\u8fd9\u4e9b\u6307\u5357\u5e76\u4e0d\u80fd\u5b8c\u5168\u8986\u76d6\u6211\u4eec\u7684\u5b9e\u9645\u76d1\u63a7\u9700\u6c42\uff0c\u4f46\u662f\u5bf9\u4e8e\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u6dfb\u52a0\u54ea\u4e9b\u6307\u6807\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u6307\u5bfc\u4f5c\u7528\u3002Prometheus \u5b98\u65b9\u6587\u6863\u4e2d\u5173\u4e8e\u4eea\u8868\u5316\u7684\u6700\u4f73\u5b9e\u8df5(https://prometheus.io/docs/practices/instrumentation/)\u63d0\u4f9b\u4e86\u66f4\u591a\u5173\u4e8e\u4e0d\u540c\u7c7b\u578b\u7cfb\u7edf\u76d1\u63a7\u7684\u5efa\u8bae\u3002 4\u3001\u6307\u6807\u547d\u540d \u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u6307\u6807\u540d\u79f0\u63cf\u8ff0\u4e86\u88ab\u76d1\u6d4b\u7cfb\u7edf\u7684\u67d0\u4e9b\u72b6\u6001\uff0c\u6bd4\u5982\u5728\u5982\u4e0b\u6240\u793a\u7684\u65f6\u95f4\u5e8f\u5217\u4e2d\uff1a http_requests_total{job=\"nginx\",instance=\"localhost:8080\",method=\"POST\"} \u6307\u6807\u540d\u79f0\u5c31\u662f\u6807\u7b7e\u524d\u9762\u7684 http_requests_total \uff0c\u8be5\u6307\u6807\u540d\u79f0\u672c\u8eab\u5b57\u9762\u610f\u601d\u5c31\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u8be5\u6307\u6807\u7684\u542b\u4e49\u4e86\uff0c\u867d\u7136 Prometheus \u672c\u8eab\u5e76\u4e0d\u4f1a\u4ee5\u8bed\u4e49\u65b9\u5f0f\u89e3\u91ca\u6307\u6807\u540d\u79f0 \u3002 \u4e3a\u4e86\u5e2e\u52a9\u6807\u51c6\u5316\u6307\u6807\u547d\u540d\uff0cPrometheus \u5b98\u65b9\u6587\u6863\u4e0a\u5217\u51fa\u4e86\u5efa\u8bae\u9075\u5faa\u7684\u6307\u6807\u547d\u540d\u6700\u4f73\u5b9e\u8df5( https://prometheus.io/docs/practices/naming/#metric-names )\u3002 \u5fc5\u987b\u7b26\u5408\u6570\u636e\u6a21\u578b\u4e2d\u7684\u6709\u6548\u5b57\u7b26 \u5fc5\u987b\u6709\u4e00\u4e2a\u4e0e\u6307\u6807\u6240\u5c5e\u9886\u57df\u76f8\u5173\u7684\u5e94\u7528\u524d\u7f00\uff0c\u8fd9\u4e2a\u524d\u7f00\u6709\u65f6\u88ab\u5ba2\u6237\u7aef\u5e93\u6210\u4e3a\u547d\u540d\u7a7a\u95f4\uff0c\u5bf9\u4e8e\u7279\u5b9a\u4e0e\u67d0\u4e2a\u5e94\u7528\u7684\u6307\u6807\uff0c\u524d\u7f00\u901a\u5e38\u662f\u5e94\u7528\u540d\u79f0\u672c\u8eab\uff0c\u5f53\u7136\u6709\u65f6\u5019\u6307\u6807\u4e5f\u662f\u6bd4\u8f83\u901a\u7528\u7684\uff0c\u6bd4\u5982 prometheus_notifications_total \u662f\u7279\u5b9a\u4e8e Prometheus \u5e94\u7528\u7684\u6307\u6807\uff0c http_request_duration_seconds \u7528\u4e8e\u6240\u6709\u7684 HTTP \u8bf7\u6c42 \u5fc5\u987b\u6709\u5355\u4e00\u7684\u5355\u4f4d\uff0c\u4e0d\u8981\u628a\u79d2\u548c\u6beb\u79d2\u6216\u5b57\u8282\u8fd9\u4e9b\u6df7\u5728\u4e00\u8d77 \u5e94\u8be5\u4f7f\u7528\u57fa\u672c\u7684\u5355\u4f4d\uff0c\u6bd4\u5982\u79d2\u3001\u5b57\u8282\u3001\u7c73\u7b49 \u5e94\u8be5\u6709\u4e00\u4e2a\u63cf\u8ff0\u5355\u4f4d\u7684\u540e\u7f00\uff0c\u91c7\u7528\u590d\u6570\u5f62\u5f0f\uff0c\u6b64\u5916\u7d2f\u79ef\u8ba1\u6570\u9664\u4e86\u5355\u4f4d\u4e4b\u5916\uff0c\u8fd8\u5e94\u8be5\u6709\u4e00\u4e2a\u603b\u6570 total \u4f5c\u4e3a\u540e\u7f00\uff0c\u6bd4\u5982 http_reuqest_duration_seconds \u3001 node_memory_usage_bytes \u3001 http_requests_total (\u6ca1\u6709\u5355\u4f4d\u7684\u7d2f\u8ba1\u8ba1\u6570)\u3001 process_cpu_seconds_total (\u5e26\u5355\u4f4d\u7684\u7d2f\u8ba1\u8ba1\u6570)\u3001 foobar_build_info (\u7528\u4e8e\u63d0\u4f9b\u5173\u4e8e\u8fd0\u884c\u4e2d\u7684\u5e94\u7528\u5143\u4fe1\u606f\u7684\u6307\u6807) \u8bf7\u6ce8\u610f\uff0c\u76f4\u65b9\u56fe\u548c\u6458\u8981\u8fd8\u751f\u6210\u5e26\u6709\u540e\u7f00 _sum \u3001 _count \u548c _bucket \uff08\u5355\u4e2a\u76f4\u65b9\u56fe\u6876\u7684\u8ba1\u6570\u5668\uff09\u7684\u8ba1\u6570\u5668\u6307\u6807\uff0c\u4f46\u8fd9\u4e9b\u662f\u6839\u636e\u57fa\u672c\u6307\u6807\u540d\u79f0\u81ea\u52a8\u751f\u6210\u7684\u76f4\u65b9\u56fe\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u624b\u52a8\u6307\u5b9a\u8fd9\u4e9b\u540e\u7f00\u3002 \u4e00\u4e2a\u7ed9\u5b9a\u6307\u6807\u7684\u6240\u6709\u7ef4\u5ea6\u4e0a\u7684 sum() \u6216 avg() \u5e94\u8be5\u662f\u6709\u610f\u4e49\u7684\uff08\u5c3d\u7ba1\u4e0d\u4e00\u5b9a\u6709\u7528\uff09\uff0c\u5982\u679c\u6ca1\u6709\u610f\u4e49\uff0c\u8bf7\u5c06\u6570\u636e\u62c6\u5206\u4e3a\u591a\u4e2a\u6307\u6807\u3002\u4f8b\u5982\uff0c\u5c06\u5404\u79cd\u961f\u5217\u7684\u5bb9\u91cf\u653e\u5728\u4e00\u4e2a\u6307\u6807\u4e2d\u662f\u53ef\u884c\u7684\uff0c\u800c\u5c06\u4e00\u4e2a\u961f\u5217\u7684\u5bb9\u91cf\u4e0e\u961f\u5217\u4e2d\u7684\u5f53\u524d\u5143\u7d20\u6570\u6df7\u5408\u5728\u4e00\u8d77\u5219\u662f\u4e0d\u89c4\u8303\u7684\u3002 \u6807\u7b7e \u6211\u4eec\u77e5\u9053 Label \u6807\u7b7e\u662f Prometheus \u4e2d\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u5728\u6211\u4eec\u4eea\u8868\u5316\u5e94\u7528\u7684\u65f6\u5019\u4e3a\u6307\u6807\u6307\u5b9a\u5408\u9002\u7684\u6807\u7b7e\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u6211\u4eec\u77e5\u9053\u6bcf\u7ec4\u552f\u4e00\u7684\u6807\u7b7e\uff08\u5305\u62ec\u6307\u6807\u540d\u79f0\uff09\u90fd\u4f1a\u6807\u8bc6\u5e76\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684\u65f6\u95f4\u5e8f\u5217\uff0cPrometheus \u4f1a\u5728\u67e5\u8be2\u671f\u95f4\u8ddf\u8e2a\u3001\u5b58\u50a8\u548c\u5904\u7406\u8be5\u65f6\u95f4\u5e8f\u5217\uff0c\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u91cf\u4e5f\u662f Prometheus \u4e3b\u8981\u7684\u6027\u80fd\u74f6\u9888\u4e4b\u4e00\uff0c\u5bf9\u4e8e\u7a0d\u597d\u6027\u80fd\u7684\u670d\u52a1\u5668\u6765\u8bf4\uff0c\u901a\u5e38\u53ef\u4ee5\u5f88\u597d\u7684\u5904\u7406\u51e0\u767e\u4e07\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u5f53\u7136\u6700\u597d\u4e0d\u8981\u592a\u5927\uff0c\u6240\u4ee5\u5728\u51b3\u5b9a\u5c06\u54ea\u4e9b\u6807\u7b7e\u7ef4\u5ea6\u6dfb\u52a0\u5230\u6307\u6807\u4e2d\u7684\u65f6\u5019\uff0c\u9700\u8981\u8003\u8651\u5230\u8fd9\u4e00\u70b9\u3002 Prometheus \u603b\u7684\u65f6\u95f4\u5e8f\u5217\u6210\u672c\u9700\u8981\u901a\u8fc7\u6307\u6807\u4e0a\u7684\u4e0d\u540c\u6807\u7b7e\u7ef4\u5ea6\u76f8\u4e58\u5f97\u5230\uff0c\u6bd4\u5982\u6211\u4eec\u6309\u7167 status code \u548c method \u6765\u62c6\u5206 HTTP \u8bf7\u6c42\u8ba1\u6570\uff0c\u5219\u5e8f\u5217\u603b\u6570\u5c06\u662f\u4e0d\u540c\u7684 status code \u548c\u4e0d\u540c\u7684 method \u6570\u91cf\u7684\u4e58\u79ef\u5f97\u5230\u8fd9\u4e24\u4e2a\u7ef4\u5ea6\u7684\u6240\u6709\u6709\u6548\u7ec4\u5408\uff0c\u7136\u540e\u8fd8\u9700\u8981\u5c06\u8be5\u57fa\u6570\u4e58\u4ee5\u76f8\u540c\u7c7b\u578b\u7684\u53d7\u76d1\u63a7\u76ee\u6807\u7684\u6570\u91cf\uff0c\u4ee5\u5f97\u51fa Prometheus \u670d\u52a1\u5668\u7684\u603b\u4f53\u65f6\u95f4\u5e8f\u5217\u6210\u672c\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6807\u7b7e\u7ef4\u5ea6\u7684\u63a7\u5236\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u4e0d\u80fd\u592a\u5c11\uff0c\u4e5f\u4e0d\u80fd\u592a\u591a\u3002 \u4e3a\u907f\u514d\u65f6\u95f4\u5e8f\u5217\u6570\u91cf\u6fc0\u589e\uff0c\u8bf7\u4fdd\u6301\u4f60\u7684\u6bcf\u4e2a\u6807\u7b7e\u7684\u53ef\u80fd\u503c\u7684\u6570\u91cf\u6709\u4e00\u5b9a\u7684\u9650\u5236\u3002\u5c24\u5176\u8981\u907f\u514d\u4ee5\u4e0b\u793a\u4f8b\uff1a \u5728\u4e00\u4e2a\u6807\u7b7e\u503c\u4e2d\u5b58\u50a8\u516c\u5171 IP \u5730\u5740\u6216\u7535\u5b50\u90ae\u4ef6\u5730\u5740 \u5728\u4e00\u4e2a\u6807\u7b7e\u503c\u4e2d\u5b58\u50a8\u5b8c\u6574\u7684 HTTP \u8def\u5f84\uff0c\u5982\u679c\u8fd9\u4e9b\u8def\u5f84\u5305\u542b ID \u6216\u5176\u4ed6\u65e0\u9650\u5236\u7684\u4fe1\u606f \u6216\u7c7b\u4f3c\u7684\u6a21\u5f0f \u8fd9\u5c06\u8fc5\u901f\u4ea7\u751f\u4e00\u4e2a\u4e0d\u65ad\u589e\u52a0\u7684\u65f6\u95f4\u7cfb\u5217\uff0c\u5728\u77ed\u65f6\u95f4\u5185\u4f7f Prometheus \u670d\u52a1\u5668\u8fc7\u8f7d\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u907f\u514d\u7528\u8fd9\u79cd\u65b9\u5f0f\u7684\u6807\u7b7e\u503c\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5b66\u4e60\u4f7f\u7528 Prometheus \u7684 Go \u5ba2\u6237\u7aef\u5e93( https://github.com/prometheus/client_golang )\u6765\u4e3a\u4e00\u4e2a Go \u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u548c\u66b4\u9732\u76d1\u63a7\u6307\u6807\u3002","title":"\u7b2c\u4e09\u8282 \u5982\u4f55\u4f7f\u7528Prometheus\u4eea\u8868\u5316\u5e94\u7528"},{"location":"chap5/54prometheus_go_metrics_guideline/#prometheus","text":"\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u5c06\u5e94\u7528\u7684\u76d1\u63a7\u6307\u6807\u5982\u4f55\u63a5\u5165 Prometheus\uff0c\u4f46\u662f\u5982\u4f55\u5728\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u66b4\u9732\u76d1\u63a7\u6307\u6807\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5728\u5e94\u7528\u4e2d \u96c6\u6210 metrics \u6307\u6807\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u5355\u72ec\u5f00\u53d1\u4e00\u4e2a\u5bf9\u5e94\u7684 exporter \u6765\u66b4\u9732\u6307\u6807\uff0c\u6216\u8005\u6839\u636e\u9700\u6c42\u7f16\u5199\u811a\u672c\u63a8\u9001\u5230 pushgateway \u7f51\u5173\u751f\u6210\u76d1\u63a7\u6307\u6807 \uff0c\u4e0d\u8fc7\u6700\u597d\u7684\u65b9\u5f0f\u662f\u76f4\u63a5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u96c6\u6210 Prometheus \u76d1\u63a7\u6307\u6807\u6570\u636e\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u6765\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 Prometheus \u5ba2\u6237\u7aef\u5e93\u6765\u66b4\u9732\u76d1\u63a7\u6307\u6807\uff0c\u4f7f\u7528\u4e00\u4e2a Prometheus Go \u5ba2\u6237\u7aef\u5e93\u6765\u4eea\u8868\u5316\u4e00\u4e2a Go \u5e94\u7528\u7a0b\u5e8f\uff0c\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0\u76f8\u5173\u6307\u6807\u4ee5\u83b7\u53d6\u5bf9\u5e94\u7528\u7a0b\u5e8f\u7684\u76d1\u63a7\u80fd\u529b\u3002","title":"\u7b2c\u4e09\u8282 \u5982\u4f55\u4f7f\u7528 Prometheus \u4eea\u8868\u5316\u5e94\u7528"},{"location":"chap5/54prometheus_go_metrics_guideline/#1","text":"\u6211\u4eec\u5df2\u7ecf\u5f88\u6e05\u695a Prometheus \u662f\u5982\u4f55\u6293\u53d6\u76d1\u63a7\u6307\u6807\u7684\u4e86\uff0cPrometheus \u901a\u8fc7\u4e00\u4e2a HTTP \u8bf7\u6c42\u6293\u53d6\u76d1\u63a7\u76ee\u6807\uff0c\u9ed8\u8ba4\u8bf7\u6c42\u7684\u7aef\u70b9\u540d\u662f /metrics \u3002 \u76d1\u63a7\u76ee\u6807\u901a\u8fc7\u53d1\u9001\u6bcf\u4e2a\u88ab\u8ddf\u8e2a\u7684\u65f6\u95f4\u5e8f\u5217\u5355\u4e2a\u6837\u672c\uff0c\u4ee5\u53ca\u6837\u672c\u7684\u6307\u6807\u540d\u79f0\u3001\u6807\u7b7e\u96c6\u5408\u548c\u6837\u672c\u503c\u6765\u54cd\u5e94\u6bcf\u4e2a\u6307\u6807\u7684\u5f53\u524d\u72b6\u6001\u3002 \u6293\u53d6\u5230\u6570\u636e\u540e Prometheus \u4f1a\u5b58\u50a8\u6bcf\u4e2a\u6837\u672c\uff0c\u5e76\u4e3a\u5176\u6dfb\u52a0\u4e00\u4e2a\u670d\u52a1\u5668\u7aef\u7684\u65f6\u95f4\u6233\uff0c\u4ece\u800c\u4ece\u5355\u4e2a\u6293\u53d6\u6784\u5efa\u6210\u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217 \u3002 \u6b64\u5916\u6211\u4eec\u518d\u56de\u987e\u4e0b\u83b7\u53d6\u7684\u76d1\u63a7\u6307\u6807\u683c\u5f0f\uff1a # HELP http_requests_total The total number of HTTP requests. # TYPE http_requests_total counter http_requests_total{method=\"post\",code=\"200\"} 1027 http_requests_total{method=\"post\",code=\"400\"} 3 # HELP process_open_fds Number of open file descriptors. # TYPE process_open_fds gauge process_open_fds 15 # HELP http_request_duration_seconds A histogram of the request duration. # TYPE http_request_duration_seconds histogram http_request_duration_seconds_bucket{le=\"0.05\"} 24054 http_request_duration_seconds_bucket{le=\"0.1\"} 33444 http_request_duration_seconds_bucket{le=\"0.2\"} 100392 http_request_duration_seconds_bucket{le=\"0.5\"} 129389 http_request_duration_seconds_bucket{le=\"1\"} 133988 http_request_duration_seconds_bucket{le=\"+Inf\"} 144320 http_request_duration_seconds_sum 53423 http_request_duration_seconds_count 144320 # HELP rpc_duration_seconds A summary of RPC durations in seconds. # TYPE rpc_duration_seconds summary rpc_duration_seconds{quantile=\"0.01\"} 3.102 rpc_duration_seconds{quantile=\"0.05\"} 3.272 rpc_duration_seconds{quantile=\"0.5\"} 4.773 rpc_duration_seconds{quantile=\"0.9\"} 9.001 rpc_duration_seconds{quantile=\"0.99\"} 76.656 rpc_duration_seconds_sum 5.7560473e+04 rpc_duration_seconds_count 2693 \u6293\u53d6\u76ee\u6807\u53ea\u4f1a\u66b4\u9732\u5f53\u524d\u8bbf\u95ee\u7684\u503c\uff0c\u800c\u4e0d\u4f1a\u66b4\u9732\u5b83\u6240\u8ddf\u8e2a\u6570\u636e\u6240\u6709\u7684\u5386\u53f2\u6307\u6807\uff0c\u6307\u6807\u4e2d\u7684\u6bcf\u4e00\u884c\uff08\u6ce8\u91ca\u9664\u5916\uff09\u5c31\u662f\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u6837\u672c\uff0c\u6bcf\u4e2a\u5e8f\u5217\u5728\u540c\u4e00\u4e2a\u6293\u53d6\u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\uff0c\u6240\u4ee5\uff0c\u4eea\u8868\u5316\u5e94\u7528\u53ea\u9700\u8981\u5728\u5185\u5b58\u4e2d\u8ddf\u8e2a\u5176\u6307\u6807\u7684\u5f53\u524d\u72b6\u6001\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u8ddf\u8e2a\u6216\u7f13\u5b58\u4efb\u4f55\u5386\u53f2\u6307\u6807\u72b6\u6001\u3002","title":"1\u3001\u6293\u53d6\u6307\u6807"},{"location":"chap5/54prometheus_go_metrics_guideline/#2","text":"Prometheus \u5b98\u65b9\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e9b\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u5e93\uff0c\u5305\u62ec Go\u3001Java\u3001Python\u3001Ruby\uff0c\u8fd8\u6709\u4e00\u4e9b\u975e\u5b98\u65b9\u7684\u7b2c\u4e09\u65b9\u5ba2\u6237\u7aef\u5e93\uff0c\u53ef\u4ee5\u7528\u6765\u5e2e\u52a9\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u96c6\u6210 Prometheus \u6307\u6807\u670d\u52a1\u3002\u4f7f\u7528\u8fd9\u4e9b\u5e93\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u548c\u8ddf\u8e2a\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u6807\uff0c\u53cd\u6620\u670d\u52a1\u5f53\u524d\u7684\u72b6\u6001\uff0c\u8fd9\u4e9b\u5e93\u90fd\u5141\u8bb8\u6211\u4eec\u521b\u5efa\u548c\u66f4\u65b0\u5355\u72ec\u7684\u6307\u6807\u5bf9\u8c61\uff0c\u5c06\u5b83\u4eec\u6ce8\u518c\u5230\u4e00\u4e2a\u6307\u6807\u6ce8\u518c\u4e2d\u5fc3\uff0c\u7136\u540e\u901a\u8fc7 HTTP \u66b4\u9732\u8be5\u6307\u6807\u6ce8\u518c\u4e2d\u5fc3\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u7528\u7684 metrics \u63a5\u53e3\u3002 Prometheus \u7684\u4eea\u8868\u5316\u5ba2\u6237\u7aef\u5e93\u4e2d\u5305\u542b\u4e0d\u540c\u7684\u6307\u6807\u7c7b\u578b\uff1a counters \u3001 gauges \u3001 histograms \u4ee5\u53ca summaries \uff0c\u548c Prometheus \u4e2d\u7684\u6307\u6807\u7c7b\u578b\u5bf9\u5e94\uff0c\u5177\u4f53\u8981\u4f7f\u7528\u54ea\u79cd\u7c7b\u578b\u7684\u6307\u6807\u53d6\u51b3\u4e8e\u6211\u4eec\u7684\u5b9e\u9645\u60c5\u51b5\u3002 \u6839\u636e\u4e0d\u540c\u7684\u6307\u6807\u7c7b\u578b\uff0c\u5728\u6784\u5efa\u6307\u6807\u5bf9\u8c61\u7684\u65f6\u5019\u9700\u8981\u63d0\u4f9b\u4e0d\u540c\u7684\u9009\u9879\uff0c\u6bd4\u5982\u5728\u521b\u5efa\u76f4\u65b9\u56fe\u7684\u65f6\u5019\u9700\u8981\u6307\u5b9a\u5b58\u50a8\u6876 bucket\uff0c\u800c\u521b\u5efa\u8ba1\u6570\u5668\u7684\u65f6\u5019\u4e0b\u4e0d\u9700\u8981\u5176\u4ed6\u989d\u5916\u53c2\u6570\u7684\u3002\u6b64\u5916\u6784\u9020\u7684\u6307\u6807\u5bf9\u8c61\u8fd8\u4e3a\u6bcf\u79cd\u7c7b\u578b\u7684\u6307\u6807\u66b4\u9732\u4e86\u4e0d\u540c\u7684\u72b6\u6001\u66f4\u65b0\u65b9\u6cd5\uff0c\u4f8b\u5982\uff0c\u8ba1\u6570\u5668\u5177\u6709\u589e\u52a0\u5f53\u524d\u503c\u7684\u65b9\u6cd5\uff0c\u4f46\u4e0d\u4f1a\u66b4\u9732\u5c06\u8ba1\u6570\u5668\u8bbe\u7f6e\u4e3a\u4efb\u610f\u503c\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u4eea\u8868\u76d8\u662f\u5141\u8bb8\u6211\u4eec\u8bbe\u7f6e\u5f53\u524d\u503c\u7684\u3002 \u53e6\u5916 Prometheus \u7684\u5ba2\u6237\u7aef\u5e93\u9875\u9762( https://prometheus.io/docs/instrumenting/clientlibs/ )\u4e0a\u5217\u51fa\u7684\u6240\u6709\u5b98\u65b9\u5e93\u7684\u5b9e\u73b0\u90fd\u8003\u8651\u5230\u4e86\u6548\u7387\u548c\u5e76\u53d1\u5b89\u5168\u95ee\u9898\uff1a \u6548\u7387 \uff1a\u5bf9\u6307\u6807\u5bf9\u8c61\u7684\u72b6\u6001\u66f4\u65b0\u8fdb\u884c\u4e86\u4f18\u5316 \u5e76\u53d1\u5b89\u5168 \uff1a\u6307\u6807\u5bf9\u8c61\u7684\u6240\u6709\u72b6\u6001\u66f4\u65b0\u4ee5\u53ca\u4ece\u6307\u6807\u72b6\u6001\u8bfb\u53d6\u90fd\u662f\u5e76\u53d1\u5b89\u5168\u7684\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4ece\u591a\u4e2a\u7ebf\u7a0b\uff08\u6216 Go \u4e2d\u7684 goroutines\uff09\u66f4\u65b0\u6307\u6807\u503c\uff0c\u800c\u65e0\u9700\u8003\u8651\u9501\u7684\u95ee\u9898\uff0c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u8fd8\u80fd\u591f\u540c\u65f6\u5b89\u5168\u5730\u5904\u7406\u591a\u4e2a\u6307\u6807\u6293\u53d6\u3002 \u6240\u4ee5\u6211\u4eec\u662f\u53ef\u4ee5\u653e\u5fc3\uff08\u5f53\u7136\u4e5f\u662f\u63a8\u8350\uff09\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b\u7684\u5ba2\u6237\u7aef\u5e93\u6765\u4eea\u8868\u5316\u6211","title":"2\u3001\u5ba2\u6237\u7aef\u5e93"},{"location":"chap5/54prometheus_go_metrics_guideline/#3","text":"\u5f53\u5bf9\u4e00\u4e2a\u7cfb\u7edf\u6216\u8005\u670d\u52a1\u8fdb\u884c\u4eea\u8868\u5316\u7684\u65f6\u5019\uff0c\u5c3d\u91cf\u63d0\u4f9b\u4e00\u4e9b\u6709\u610f\u4e49\u7684\u6d4b\u91cf\u6307\u6807\uff0c\u4e1a\u754c\u6709\u51e0\u4e2a\u6bd4\u8f83\u8457\u540d\u7684\u6307\u5bfc\u65b9\u9488\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u6765\u7406\u89e3\u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u5e94\u8be5\u6dfb\u52a0\u54ea\u4e9b\u6307\u6807\u3002","title":"3\u3001\u8ddf\u8e2a\u6307\u6807"},{"location":"chap5/54prometheus_go_metrics_guideline/#3-1-google","text":"\u6709 4 \u4e2a\u6765\u81ea Google SRE \u624b\u518c\u7684\u9ec4\u91d1\u6307\u6807\uff0c\u8fd9 4 \u4e2a\u6307\u6807\u4e3b\u8981\u9488\u5bf9\u5e94\u7528\u7a0b\u5e8f\u6216\u7528\u6237\u90e8\u5206\u3002 \u5ef6\u8fdf\uff08Latency\uff09 \uff1a\u670d\u52a1\u8bf7\u6c42\u6240\u9700\u8017\u65f6\uff0c\u4f8b\u5982 HTTP \u8bf7\u6c42\u5e73\u5747\u5ef6\u8fdf\u3002\u9700\u8981\u533a\u5206\u6210\u529f\u8bf7\u6c42\u548c\u5931\u8d25\u8bf7\u6c42\uff0c\u56e0\u4e3a\u5931\u8d25\u8bf7\u6c42\u53ef\u80fd\u4f1a\u4ee5\u975e\u5e38\u4f4e\u7684\u5ef6\u8fdf\u8fd4\u56de\u9519\u8bef\u7ed3\u679c\u3002 \u6d41\u91cf\uff08Traffic\uff09 \uff1a\u8861\u91cf\u670d\u52a1\u5bb9\u91cf\u9700\u6c42\uff08\u9488\u5bf9\u7cfb\u7edf\u800c\u8a00\uff09\uff0c\u4f8b\u5982\u6bcf\u79d2\u5904\u7406\u7684 HTTP \u8bf7\u6c42\u6570\u6216\u8005\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u4e8b\u52a1\u6570\u91cf\u3002 \u9519\u8bef\uff08Errors\uff09 \uff1a\u8bf7\u6c42\u5931\u8d25\u7684\u901f\u7387\uff0c\u7528\u4e8e\u8861\u91cf\u9519\u8bef\u53d1\u751f\u7684\u60c5\u51b5\uff0c\u4f8b\u5982 HTTP500 \u9519\u8bef\u6570\u7b49\u663e\u5f0f\u5931\u8d25\uff0c\u8fd4\u56de\u9519\u8bef\u5185\u5bb9\u6216\u65e0\u6548\u5185\u5bb9\u7b49\u9690\u5f0f\u5931\u8d25\uff0c\u4ee5\u53ca\u7531\u7b56\u7565\u539f\u56e0\u5bfc\u81f4\u7684\u5931\u8d25\uff08\u6bd4\u5982\u5f3a\u5236\u8981\u6c42\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 30ms \u7684\u8bf7\u6c42\u4e3a\u9519\u8bef\uff09\u3002 \u9971\u548c\u5ea6\uff08Saturation\uff09 \uff1a\u8861\u91cf\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u4f8b\u5982\u5185\u5b58\u3001CPU\u3001I/O\u3001\u78c1\u76d8\u4f7f\u7528\u91cf\uff08\u5373\u5c06\u9971\u548c\u7684\u90e8\u5206\uff0c\u6bd4\u5982\u6b63\u5728\u5feb\u901f\u586b\u5145\u7684\u78c1\u76d8\uff09\u3002","title":"3-1 Google \u7684\u56db\u5927\u9ec4\u91d1\u6307\u6807"},{"location":"chap5/54prometheus_go_metrics_guideline/#3-2-use","text":"USE \u662f Utilization\uff08\u4f7f\u7528\u7387\uff09\u3001Saturation\uff08\u9971\u548c\u5ea6\uff09\u3001Error\uff08\u9519\u8bef\uff09\u7684\u9996\u5b57\u6bcd\u7ec4\u5408 \uff0c\u662f Netflix \u7684\u5185\u6838\u548c\u6027\u80fd\u5de5\u7a0b\u5e08 Brendan Gregg \u63d0\u51fa\u7684\uff0c\u4e3b\u8981\u7528\u4e8e\u5206\u6790\u7cfb\u7edf\u6027\u80fd\u95ee\u9898\uff0c\u53ef\u4ee5\u6307\u5bfc\u7528\u6237\u5feb\u901f\u8bc6\u522b\u8d44\u6e90\u74f6\u9888\u53ca\u9519\u8bef\uff0c\u4e3b\u8981\u53ef\u4ee5\u8003\u8651\u6dfb\u52a0\u4ee5\u4e0b\u6307\u6807\u3002 \u4f7f\u7528\u7387\uff08Utilization\uff09 \uff1a\u5173\u6ce8\u7cfb\u7edf\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u8fd9\u91cc\u7684\u8d44\u6e90\u4e3b\u8981\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e CPU\u3001\u5185\u5b58\u3001\u7f51\u7edc\u3001\u78c1\u76d8\u7b49\uff0c100%\u4f7f\u7528\u7387\u901a\u5e38\u662f\u7cfb\u7edf\u6027\u80fd\u74f6\u9888\u7684\u6807\u5fd7\u3002 \u9971\u548c\u5ea6\uff08Saturation\uff09 \uff1a\u4f8b\u5982\u8c03\u5ea6\u5668\u8fd0\u884c\u961f\u5217\u957f\u5ea6\uff0c\u8fd9\u91cc\u4e3b\u8981\u662f\u9488\u5bf9\u8d44\u6e90\u7684\u9971\u548c\u5ea6\uff08\u6ce8\u610f\uff0c\u4e0d\u540c\u4e8e\u56db\u5927\u9ec4\u91d1\u6307\u6807\uff09\u3002\u4efb\u4f55\u8d44\u6e90\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7684\u9971\u548c\u90fd\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edf\u6027\u80fd\u7684\u4e0b\u964d\u3002 \u9519\u8bef\uff08Errors\uff09 \uff1a\u53d1\u751f\u4e86\u591a\u5c11\uff08\u4ee5\u53ca\u4ec0\u4e48\u7c7b\u578b\u7684\uff09\u9519\u8bef\u3002\u4f8b\u5982\uff0c\u7f51\u5361\u5728\u6570\u636e\u5305\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u68c0\u6d4b\u5230\u4ee5\u592a\u7f51\u7edc\u51b2\u7a81\u4e86 10 \u6b21\u3002","title":"3-2 \u8d44\u6e90\u6307\u6807\u7684 USE \u65b9\u6cd5"},{"location":"chap5/54prometheus_go_metrics_guideline/#3-3-red","text":"RED \u65b9\u6cd5\u662f Weave Cloud \u57fa\u4e8e Google \u7684 4 \u4e2a\u9ec4\u91d1\u6307\u6807\u518d\u7ed3\u5408 Prometheus \u53ca Kubernetes \u5bb9\u5668\u5b9e\u8df5\u5f97\u51fa\u7684\u65b9\u6cd5\u8bba\uff0c\u7279\u522b\u9002\u7528\u4e8e\u5bf9\u4e91\u539f\u751f\u5e94\u7528\u4ee5\u53ca\u5fae\u670d\u52a1\u67b6\u6784\u5e94\u7528\u8fdb\u884c\u76d1\u63a7\u548c\u5ea6\u91cf\u3002\u5728\u56db\u5927\u9ec4\u91d1\u6307\u6807\u7684\u539f\u5219\u4e0b\uff0cRED \u65b9\u6cd5\u53ef\u4ee5\u6709\u6548\u5730\u5e2e\u52a9\u7528\u6237\u8861\u91cf\u4e91\u539f\u751f\u4ee5\u53ca\u5fae\u670d\u52a1\u5e94\u7528\u4e0b\u7684\u7528\u6237\u4f53\u9a8c\u95ee\u9898\u3002RED \u65b9\u6cd5\u4e3b\u8981\u5173\u6ce8\u4ee5\u4e0b 3 \u79cd\u5173\u952e\u6307\u6807\u3002 Request Counters\uff1a\u8bf7\u6c42\u8ba1\u6570\u5668 \u3002 Errors Counters\uff1a\u9519\u8bef\u8ba1\u6570\u5668 \u3002 Request Duration\uff1a\u6bcf\u4e2a\u8bf7\u6c42\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff08histograms \u6216 summaries\uff09 \u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u4e0a\u8ff0\u4e09\u5927\u76d1\u63a7\u7406\u8bba\u7684\u6700\u4f73\u5b9e\u8df5\u662f\uff1a\u5728\u9075\u5faa Google \u56db\u5927\u9ec4\u91d1\u6307\u6807\u7684\u524d\u63d0\u4e0b\uff0c\u5bf9\u4e8e\u5728\u7ebf\u7cfb\u7edf\uff0c\u7ed3\u5408 RED \u65b9\u6cd5\u548c\u7f13\u5b58\u547d\u4e2d\u7387\u65b9\u5f0f\u8fdb\u884c\u76d1\u6d4b\uff1b\u5bf9\u4e8e\u79bb\u7ebf\u7cfb\u7edf\u6216\u8005\u4e3b\u673a\u76d1\u63a7\uff0c\u4ee5 USE \u65b9\u6cd5\u4e3a\u4e3b\u8fdb\u884c\u76d1\u6d4b\uff1b\u5bf9\u4e8e\u6279\u5904\u7406\u7cfb\u7edf\uff0c\u53ef\u4ee5\u91c7\u7528\u7c7b\u4f3c Pushgateway \u7684\u5f62\u5f0f\u8fdb\u884c\u76d1\u63a7\u3002 \u5f53\u7136\u8fd9\u4e9b\u6307\u5357\u5e76\u4e0d\u80fd\u5b8c\u5168\u8986\u76d6\u6211\u4eec\u7684\u5b9e\u9645\u76d1\u63a7\u9700\u6c42\uff0c\u4f46\u662f\u5bf9\u4e8e\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u6dfb\u52a0\u54ea\u4e9b\u6307\u6807\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u6307\u5bfc\u4f5c\u7528\u3002Prometheus \u5b98\u65b9\u6587\u6863\u4e2d\u5173\u4e8e\u4eea\u8868\u5316\u7684\u6700\u4f73\u5b9e\u8df5(https://prometheus.io/docs/practices/instrumentation/)\u63d0\u4f9b\u4e86\u66f4\u591a\u5173\u4e8e\u4e0d\u540c\u7c7b\u578b\u7cfb\u7edf\u76d1\u63a7\u7684\u5efa\u8bae\u3002","title":"3-3 \u8bf7\u6c42\u670d\u52a1\u7cfb\u7edf\u7684 RED \u65b9\u6cd5"},{"location":"chap5/54prometheus_go_metrics_guideline/#4","text":"\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u6307\u6807\u540d\u79f0\u63cf\u8ff0\u4e86\u88ab\u76d1\u6d4b\u7cfb\u7edf\u7684\u67d0\u4e9b\u72b6\u6001\uff0c\u6bd4\u5982\u5728\u5982\u4e0b\u6240\u793a\u7684\u65f6\u95f4\u5e8f\u5217\u4e2d\uff1a http_requests_total{job=\"nginx\",instance=\"localhost:8080\",method=\"POST\"} \u6307\u6807\u540d\u79f0\u5c31\u662f\u6807\u7b7e\u524d\u9762\u7684 http_requests_total \uff0c\u8be5\u6307\u6807\u540d\u79f0\u672c\u8eab\u5b57\u9762\u610f\u601d\u5c31\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u8be5\u6307\u6807\u7684\u542b\u4e49\u4e86\uff0c\u867d\u7136 Prometheus \u672c\u8eab\u5e76\u4e0d\u4f1a\u4ee5\u8bed\u4e49\u65b9\u5f0f\u89e3\u91ca\u6307\u6807\u540d\u79f0 \u3002 \u4e3a\u4e86\u5e2e\u52a9\u6807\u51c6\u5316\u6307\u6807\u547d\u540d\uff0cPrometheus \u5b98\u65b9\u6587\u6863\u4e0a\u5217\u51fa\u4e86\u5efa\u8bae\u9075\u5faa\u7684\u6307\u6807\u547d\u540d\u6700\u4f73\u5b9e\u8df5( https://prometheus.io/docs/practices/naming/#metric-names )\u3002 \u5fc5\u987b\u7b26\u5408\u6570\u636e\u6a21\u578b\u4e2d\u7684\u6709\u6548\u5b57\u7b26 \u5fc5\u987b\u6709\u4e00\u4e2a\u4e0e\u6307\u6807\u6240\u5c5e\u9886\u57df\u76f8\u5173\u7684\u5e94\u7528\u524d\u7f00\uff0c\u8fd9\u4e2a\u524d\u7f00\u6709\u65f6\u88ab\u5ba2\u6237\u7aef\u5e93\u6210\u4e3a\u547d\u540d\u7a7a\u95f4\uff0c\u5bf9\u4e8e\u7279\u5b9a\u4e0e\u67d0\u4e2a\u5e94\u7528\u7684\u6307\u6807\uff0c\u524d\u7f00\u901a\u5e38\u662f\u5e94\u7528\u540d\u79f0\u672c\u8eab\uff0c\u5f53\u7136\u6709\u65f6\u5019\u6307\u6807\u4e5f\u662f\u6bd4\u8f83\u901a\u7528\u7684\uff0c\u6bd4\u5982 prometheus_notifications_total \u662f\u7279\u5b9a\u4e8e Prometheus \u5e94\u7528\u7684\u6307\u6807\uff0c http_request_duration_seconds \u7528\u4e8e\u6240\u6709\u7684 HTTP \u8bf7\u6c42 \u5fc5\u987b\u6709\u5355\u4e00\u7684\u5355\u4f4d\uff0c\u4e0d\u8981\u628a\u79d2\u548c\u6beb\u79d2\u6216\u5b57\u8282\u8fd9\u4e9b\u6df7\u5728\u4e00\u8d77 \u5e94\u8be5\u4f7f\u7528\u57fa\u672c\u7684\u5355\u4f4d\uff0c\u6bd4\u5982\u79d2\u3001\u5b57\u8282\u3001\u7c73\u7b49 \u5e94\u8be5\u6709\u4e00\u4e2a\u63cf\u8ff0\u5355\u4f4d\u7684\u540e\u7f00\uff0c\u91c7\u7528\u590d\u6570\u5f62\u5f0f\uff0c\u6b64\u5916\u7d2f\u79ef\u8ba1\u6570\u9664\u4e86\u5355\u4f4d\u4e4b\u5916\uff0c\u8fd8\u5e94\u8be5\u6709\u4e00\u4e2a\u603b\u6570 total \u4f5c\u4e3a\u540e\u7f00\uff0c\u6bd4\u5982 http_reuqest_duration_seconds \u3001 node_memory_usage_bytes \u3001 http_requests_total (\u6ca1\u6709\u5355\u4f4d\u7684\u7d2f\u8ba1\u8ba1\u6570)\u3001 process_cpu_seconds_total (\u5e26\u5355\u4f4d\u7684\u7d2f\u8ba1\u8ba1\u6570)\u3001 foobar_build_info (\u7528\u4e8e\u63d0\u4f9b\u5173\u4e8e\u8fd0\u884c\u4e2d\u7684\u5e94\u7528\u5143\u4fe1\u606f\u7684\u6307\u6807) \u8bf7\u6ce8\u610f\uff0c\u76f4\u65b9\u56fe\u548c\u6458\u8981\u8fd8\u751f\u6210\u5e26\u6709\u540e\u7f00 _sum \u3001 _count \u548c _bucket \uff08\u5355\u4e2a\u76f4\u65b9\u56fe\u6876\u7684\u8ba1\u6570\u5668\uff09\u7684\u8ba1\u6570\u5668\u6307\u6807\uff0c\u4f46\u8fd9\u4e9b\u662f\u6839\u636e\u57fa\u672c\u6307\u6807\u540d\u79f0\u81ea\u52a8\u751f\u6210\u7684\u76f4\u65b9\u56fe\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u624b\u52a8\u6307\u5b9a\u8fd9\u4e9b\u540e\u7f00\u3002 \u4e00\u4e2a\u7ed9\u5b9a\u6307\u6807\u7684\u6240\u6709\u7ef4\u5ea6\u4e0a\u7684 sum() \u6216 avg() \u5e94\u8be5\u662f\u6709\u610f\u4e49\u7684\uff08\u5c3d\u7ba1\u4e0d\u4e00\u5b9a\u6709\u7528\uff09\uff0c\u5982\u679c\u6ca1\u6709\u610f\u4e49\uff0c\u8bf7\u5c06\u6570\u636e\u62c6\u5206\u4e3a\u591a\u4e2a\u6307\u6807\u3002\u4f8b\u5982\uff0c\u5c06\u5404\u79cd\u961f\u5217\u7684\u5bb9\u91cf\u653e\u5728\u4e00\u4e2a\u6307\u6807\u4e2d\u662f\u53ef\u884c\u7684\uff0c\u800c\u5c06\u4e00\u4e2a\u961f\u5217\u7684\u5bb9\u91cf\u4e0e\u961f\u5217\u4e2d\u7684\u5f53\u524d\u5143\u7d20\u6570\u6df7\u5408\u5728\u4e00\u8d77\u5219\u662f\u4e0d\u89c4\u8303\u7684\u3002","title":"4\u3001\u6307\u6807\u547d\u540d"},{"location":"chap5/54prometheus_go_metrics_guideline/#_1","text":"\u6211\u4eec\u77e5\u9053 Label \u6807\u7b7e\u662f Prometheus \u4e2d\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u5728\u6211\u4eec\u4eea\u8868\u5316\u5e94\u7528\u7684\u65f6\u5019\u4e3a\u6307\u6807\u6307\u5b9a\u5408\u9002\u7684\u6807\u7b7e\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u6211\u4eec\u77e5\u9053\u6bcf\u7ec4\u552f\u4e00\u7684\u6807\u7b7e\uff08\u5305\u62ec\u6307\u6807\u540d\u79f0\uff09\u90fd\u4f1a\u6807\u8bc6\u5e76\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684\u65f6\u95f4\u5e8f\u5217\uff0cPrometheus \u4f1a\u5728\u67e5\u8be2\u671f\u95f4\u8ddf\u8e2a\u3001\u5b58\u50a8\u548c\u5904\u7406\u8be5\u65f6\u95f4\u5e8f\u5217\uff0c\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u91cf\u4e5f\u662f Prometheus \u4e3b\u8981\u7684\u6027\u80fd\u74f6\u9888\u4e4b\u4e00\uff0c\u5bf9\u4e8e\u7a0d\u597d\u6027\u80fd\u7684\u670d\u52a1\u5668\u6765\u8bf4\uff0c\u901a\u5e38\u53ef\u4ee5\u5f88\u597d\u7684\u5904\u7406\u51e0\u767e\u4e07\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u5f53\u7136\u6700\u597d\u4e0d\u8981\u592a\u5927\uff0c\u6240\u4ee5\u5728\u51b3\u5b9a\u5c06\u54ea\u4e9b\u6807\u7b7e\u7ef4\u5ea6\u6dfb\u52a0\u5230\u6307\u6807\u4e2d\u7684\u65f6\u5019\uff0c\u9700\u8981\u8003\u8651\u5230\u8fd9\u4e00\u70b9\u3002 Prometheus \u603b\u7684\u65f6\u95f4\u5e8f\u5217\u6210\u672c\u9700\u8981\u901a\u8fc7\u6307\u6807\u4e0a\u7684\u4e0d\u540c\u6807\u7b7e\u7ef4\u5ea6\u76f8\u4e58\u5f97\u5230\uff0c\u6bd4\u5982\u6211\u4eec\u6309\u7167 status code \u548c method \u6765\u62c6\u5206 HTTP \u8bf7\u6c42\u8ba1\u6570\uff0c\u5219\u5e8f\u5217\u603b\u6570\u5c06\u662f\u4e0d\u540c\u7684 status code \u548c\u4e0d\u540c\u7684 method \u6570\u91cf\u7684\u4e58\u79ef\u5f97\u5230\u8fd9\u4e24\u4e2a\u7ef4\u5ea6\u7684\u6240\u6709\u6709\u6548\u7ec4\u5408\uff0c\u7136\u540e\u8fd8\u9700\u8981\u5c06\u8be5\u57fa\u6570\u4e58\u4ee5\u76f8\u540c\u7c7b\u578b\u7684\u53d7\u76d1\u63a7\u76ee\u6807\u7684\u6570\u91cf\uff0c\u4ee5\u5f97\u51fa Prometheus \u670d\u52a1\u5668\u7684\u603b\u4f53\u65f6\u95f4\u5e8f\u5217\u6210\u672c\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6807\u7b7e\u7ef4\u5ea6\u7684\u63a7\u5236\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u4e0d\u80fd\u592a\u5c11\uff0c\u4e5f\u4e0d\u80fd\u592a\u591a\u3002 \u4e3a\u907f\u514d\u65f6\u95f4\u5e8f\u5217\u6570\u91cf\u6fc0\u589e\uff0c\u8bf7\u4fdd\u6301\u4f60\u7684\u6bcf\u4e2a\u6807\u7b7e\u7684\u53ef\u80fd\u503c\u7684\u6570\u91cf\u6709\u4e00\u5b9a\u7684\u9650\u5236\u3002\u5c24\u5176\u8981\u907f\u514d\u4ee5\u4e0b\u793a\u4f8b\uff1a \u5728\u4e00\u4e2a\u6807\u7b7e\u503c\u4e2d\u5b58\u50a8\u516c\u5171 IP \u5730\u5740\u6216\u7535\u5b50\u90ae\u4ef6\u5730\u5740 \u5728\u4e00\u4e2a\u6807\u7b7e\u503c\u4e2d\u5b58\u50a8\u5b8c\u6574\u7684 HTTP \u8def\u5f84\uff0c\u5982\u679c\u8fd9\u4e9b\u8def\u5f84\u5305\u542b ID \u6216\u5176\u4ed6\u65e0\u9650\u5236\u7684\u4fe1\u606f \u6216\u7c7b\u4f3c\u7684\u6a21\u5f0f \u8fd9\u5c06\u8fc5\u901f\u4ea7\u751f\u4e00\u4e2a\u4e0d\u65ad\u589e\u52a0\u7684\u65f6\u95f4\u7cfb\u5217\uff0c\u5728\u77ed\u65f6\u95f4\u5185\u4f7f Prometheus \u670d\u52a1\u5668\u8fc7\u8f7d\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u907f\u514d\u7528\u8fd9\u79cd\u65b9\u5f0f\u7684\u6807\u7b7e\u503c\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5b66\u4e60\u4f7f\u7528 Prometheus \u7684 Go \u5ba2\u6237\u7aef\u5e93( https://github.com/prometheus/client_golang )\u6765\u4e3a\u4e00\u4e2a Go \u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u548c\u66b4\u9732\u76d1\u63a7\u6307\u6807\u3002","title":"\u6807\u7b7e"},{"location":"chap6/25Alertmanager_AWS_SES/","text":"chap1 Alertmanager alerts with Amazon SES SMTP 1. Verify your domain name to send email at example.com with SES Add domain name into SES: sapjam-integration.com Which generate records name: _amazonses.sapjam-integration.com Which generate records TXT: ... Add TXT records and 300 TTL to CCloud and Verify this Domain 2. Request your SMTP credentials and download credentials 3. Testing Email Sending Using the Command Line To connect to the SMTP interface using implicit SSL(without) openssl s_client -crlf -quiet -connect email-smtp.eu-central-1.amazonaws.com:465 Using the Command Line to Send Email Using the Amazon SES SMTP Interface echo -n \"SMTPUsername\" | openssl enc -base64 echo -n \"SMTPPassword\" | openssl enc -base64 input.txt EHLO example.com AUTH LOGIN Base64EncodedSMTPUserName Base64EncodedSMTPPassword MAIL FROM: sender@example.com RCPT TO: recipient@example.com DATA From: sender@example.com To: recipient@example.com Subject: Amazon SES SMTP Test This message was sent using the Amazon SES SMTP interface. . QUIT $ openssl s_client -crlf -quiet -connect email-smtp.eu-central-1.amazonaws.com:465 < input.txt depth=4 C = US, O = \"Starfield Technologies, Inc.\", OU = Starfield Class 2 Certification Authority verify return:1 depth=3 C = US, ST = Arizona, L = Scottsdale, O = \"Starfield Technologies, Inc.\", CN = Starfield Services Root Certificate Authority - G2 verify return:1 depth=2 C = US, O = Amazon, CN = Amazon Root CA 1 verify return:1 depth=1 C = US, O = Amazon, OU = Server CA 1B, CN = Amazon verify return:1 depth=0 CN = email-smtp.eu-central-1.amazonaws.com verify return:1 220 email-smtp.amazonaws.com ESMTP SimpleEmailService-d-GI38EMLB2 hkD7YwduxMJw9KrXpof7 250-email-smtp.amazonaws.com 250-8BITMIME 250-SIZE 10485760 250-AUTH PLAIN LOGIN 250 Ok 334 VXNlcm5hbWU6 334 UGFzc3dvcmQ6 235 Authentication successful. 250 Ok 250 Ok 354 End data with <CR><LF>.<CR><LF> 250 Ok 0107017033dbb64d-be13a01e-dbf1-44b7-b876-3622165dacc1-000000 451 4.4.2 Timeout waiting for data from client. Moveout SMTP from sandbox My ticket template is like this: After you received an email replied your ticket from AWS support team, you can check your current SMTP Sending Statistics and your SMTP can send email to anyone without verification . Add SMTP with Alertmanger alertmanager.yaml --- global: resolve_timeout: 5m http_config: {} smtp_from: alertmanager@sapjam-integration.com smtp_hello: sapjam-integration.com smtp_smarthost: email-smtp.eu-central-1.amazonaws.com:25 smtp_auth_username: A... smtp_auth_password: B... smtp_require_tls: true ... Set up DKIM for your verified domain to authenticate email in Amazon SES (Production only) Reference: https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-authentication-dkim-easy-setup-domain.html DomainKeys Identified Mail (DKIM) is a standard that allows senders to sign their email messages with a cryptographic key. Email providers then use these signatures to verify that the messages weren't modified by a third party while in transit. The reason why we need to authenticate emails for production environment is mentioned at https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-authentication.html. To set up Easy DKIM for a domain Open the Amazon SES console at https://console.aws.amazon.com/ses/. In the navigation pane, under Identity Management , choose Domains . In the list of domains, choose the domain that you want to set up Easy DKIM for. Under DKIM , choose Generate DKIM Settings . Copy the three CNAME records that appear in this section like below screenshot as example. Add the CNAME records to the DNS configuration for your domain in your domain's DNS serve","title":"Chap1 Alertmanager alerts with Amazon SES SMTP"},{"location":"chap6/25Alertmanager_AWS_SES/#chap1-alertmanager-alerts-with-amazon-ses-smtp","text":"","title":"chap1 Alertmanager alerts with Amazon SES SMTP"},{"location":"chap6/25Alertmanager_AWS_SES/#1-verify-your-domain-name-to-send-email-at-examplecom-with-ses","text":"Add domain name into SES: sapjam-integration.com Which generate records name: _amazonses.sapjam-integration.com Which generate records TXT: ... Add TXT records and 300 TTL to CCloud and Verify this Domain","title":"1. Verify your domain name to send email at example.com with SES"},{"location":"chap6/25Alertmanager_AWS_SES/#2-request-your-smtp-credentials-and-download-credentials","text":"","title":"2. Request your SMTP credentials and download credentials"},{"location":"chap6/25Alertmanager_AWS_SES/#3-testing-email-sending-using-the-command-line","text":"To connect to the SMTP interface using implicit SSL(without) openssl s_client -crlf -quiet -connect email-smtp.eu-central-1.amazonaws.com:465 Using the Command Line to Send Email Using the Amazon SES SMTP Interface echo -n \"SMTPUsername\" | openssl enc -base64 echo -n \"SMTPPassword\" | openssl enc -base64 input.txt EHLO example.com AUTH LOGIN Base64EncodedSMTPUserName Base64EncodedSMTPPassword MAIL FROM: sender@example.com RCPT TO: recipient@example.com DATA From: sender@example.com To: recipient@example.com Subject: Amazon SES SMTP Test This message was sent using the Amazon SES SMTP interface. . QUIT $ openssl s_client -crlf -quiet -connect email-smtp.eu-central-1.amazonaws.com:465 < input.txt depth=4 C = US, O = \"Starfield Technologies, Inc.\", OU = Starfield Class 2 Certification Authority verify return:1 depth=3 C = US, ST = Arizona, L = Scottsdale, O = \"Starfield Technologies, Inc.\", CN = Starfield Services Root Certificate Authority - G2 verify return:1 depth=2 C = US, O = Amazon, CN = Amazon Root CA 1 verify return:1 depth=1 C = US, O = Amazon, OU = Server CA 1B, CN = Amazon verify return:1 depth=0 CN = email-smtp.eu-central-1.amazonaws.com verify return:1 220 email-smtp.amazonaws.com ESMTP SimpleEmailService-d-GI38EMLB2 hkD7YwduxMJw9KrXpof7 250-email-smtp.amazonaws.com 250-8BITMIME 250-SIZE 10485760 250-AUTH PLAIN LOGIN 250 Ok 334 VXNlcm5hbWU6 334 UGFzc3dvcmQ6 235 Authentication successful. 250 Ok 250 Ok 354 End data with <CR><LF>.<CR><LF> 250 Ok 0107017033dbb64d-be13a01e-dbf1-44b7-b876-3622165dacc1-000000 451 4.4.2 Timeout waiting for data from client.","title":"3. Testing Email Sending Using the Command Line"},{"location":"chap6/25Alertmanager_AWS_SES/#moveout-smtp-from-sandbox","text":"My ticket template is like this: After you received an email replied your ticket from AWS support team, you can check your current SMTP Sending Statistics and your SMTP can send email to anyone without verification .","title":"Moveout SMTP from sandbox"},{"location":"chap6/25Alertmanager_AWS_SES/#add-smtp-with-alertmanger","text":"alertmanager.yaml --- global: resolve_timeout: 5m http_config: {} smtp_from: alertmanager@sapjam-integration.com smtp_hello: sapjam-integration.com smtp_smarthost: email-smtp.eu-central-1.amazonaws.com:25 smtp_auth_username: A... smtp_auth_password: B... smtp_require_tls: true ...","title":"Add SMTP with Alertmanger"},{"location":"chap6/25Alertmanager_AWS_SES/#set-up-dkim-for-your-verified-domain-to-authenticate-email-in-amazon-ses-production-only","text":"Reference: https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-authentication-dkim-easy-setup-domain.html DomainKeys Identified Mail (DKIM) is a standard that allows senders to sign their email messages with a cryptographic key. Email providers then use these signatures to verify that the messages weren't modified by a third party while in transit. The reason why we need to authenticate emails for production environment is mentioned at https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-authentication.html. To set up Easy DKIM for a domain Open the Amazon SES console at https://console.aws.amazon.com/ses/. In the navigation pane, under Identity Management , choose Domains . In the list of domains, choose the domain that you want to set up Easy DKIM for. Under DKIM , choose Generate DKIM Settings . Copy the three CNAME records that appear in this section like below screenshot as example. Add the CNAME records to the DNS configuration for your domain in your domain's DNS serve","title":"Set up DKIM for your verified domain to authenticate email in Amazon SES (Production only)"},{"location":"chap6/26Prometheus_Monitor_Argocd/","text":"Chap2 Prometheus Operator Monitor on ArgoCD \u7b2c\u4e00\u6b65\uff0c\u4e3a Argocd \u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u62a5\u8b66\u89c4\u5219 \u7b2c\u4e8c\u6b65\u5efa\u7acb\u4e00\u4e2a ServiceMonitor \u5bf9\u8c61\uff0c\u7528\u4e8e Prometheus \u6dfb\u52a0\u76d1\u63a7\u9879 \u7b2c\u4e09\u6b65\u4e3a ServiceMonitor \u5bf9\u8c61\u5173\u8054 metrics \u6570\u636e\u63a5\u53e3\u7684\u4e00\u4e2a Service \u5bf9\u8c61 \u7b2c\u56db\u6b65\u786e\u4fdd Service \u5bf9\u8c61\u53ef\u4ee5\u6b63\u786e\u83b7\u53d6\u5230 metrics \u6570\u636e argocd\u5df2\u7ecf\u66b4\u9732metrics argocd-metrics : 8082 argocd-server-metrics : 8083 $ kubectl get svc -n argocd --show-labels | grep metrics argocd-metrics ClusterIP 100.70.123.135 <none> 8082/TCP 116d app.kubernetes.io/component=metrics,app.kubernetes.io/name=argocd-metrics,app.kubernetes.io/part-of=argocd argocd-server-metrics ClusterIP 100.70.2.220 <none> 8083/TCP 116d app.kubernetes.io/component=server,app.kubernetes.io/name=argocd-server-metrics,app.kubernetes.io/part-of=argocd \u521b\u5efa ServiceMonitor servicemonitors/argocd-metrics.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: argocd-metrics namespace: argocd labels: prometheus: kube-prometheus spec: selector: matchLabels: \"app.kubernetes.io/name\": argocd-metrics namespaceSelector: matchNames: - argocd jobLabel: app.kubernetes.io/name endpoints: - port: metrics interval: 10s \u4e0a\u9762\u6211\u4eec\u5728 argocd \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a argocd-metrics \u7684 ServiceMonitor \u5bf9\u8c61\uff0c\u57fa\u672c\u5c5e\u6027\u548c\u524d\u9762\u7ae0\u8282\u4e2d\u7684\u4e00\u81f4\uff0c \u5339\u914d argocd \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 \"app.kubernetes.io/name\": argocd-metrics \u8fd9\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c $ kubectl create -f argocd-metrics.yaml servicemonitors/argocd-repo-server-metrics.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: argocd-repo-server-metrics namespace: argocd labels: prometheus: kube-prometheus spec: selector: matchLabels: app.kubernetes.io/name: argocd-repo-server namespaceSelector: matchNames: - argocd jobLabel: app.kubernetes.io/name endpoints: - port: metrics \u4e0a\u9762\u6211\u4eec\u5728 argocd \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a argocd-repo-server-metrics \u7684 ServiceMonitor \u5bf9\u8c61\uff0c\u57fa\u672c\u5c5e\u6027\u548c\u524d\u9762\u7ae0\u8282\u4e2d\u7684\u4e00\u81f4\uff0c \u5339\u914d argocd \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 \"app.kubernetes.io/name\": argocd-repo-server \u8fd9\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c argocd-server-metrics.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: argocd-server-metrics namespace: argocd labels: prometheus: kube-prometheus spec: selector: matchLabels: app.kubernetes.io/name: argocd-server-metrics namespaceSelector: matchNames: - argocd endpoints: - port: metrics \u4e0a\u9762\u6211\u4eec\u5728 argocd \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a argocd-server-metrics \u7684 ServiceMonitor \u5bf9\u8c61\uff0c\u57fa\u672c\u5c5e\u6027\u548c\u524d\u9762\u7ae0\u8282\u4e2d\u7684\u4e00\u81f4\uff0c \u5339\u914d argocd \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 \"app.kubernetes.io/name\": argocd-server-metrics \u8fd9\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c \u67e5\u770b Service ServiceMonitor \u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u53ef\u4ee5\u67e5\u770b\u4e00\u4e0b\u5173\u8054\u7684\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c kubectl get svc -n argocd --show-labels NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE LABELS argocd-metrics ClusterIP 100.64.219.240 <none> 8082/TCP 18d app.kubernetes.io/component=metrics,app.kubernetes.io/name=argocd-metrics,app.kubernetes.io/part-of=argocd ... argocd-repo-server ClusterIP 100.68.97.78 <none> 8081/TCP,8084/TCP 18d app.kubernetes.io/component=repo-server,app.kubernetes.io/name=argocd-repo-server,app.kubernetes.io/part-of=argocd ... argocd-server-metrics ClusterIP 100.68.125.117 <none> 8083/TCP 18d app.kubernetes.io/component=server,app.kubernetes.io/name=argocd-server-metrics,app.kubernetes.io/part-of=argocd Add to dashboard grafanaDashboards+:: { ... 'argocd-dashboard.json': (import 'jam-dashboards/argocd-dashboard.json'), } \u914d\u7f6e PrometheusRule (Applied after received metrics data) kustomize/templates/kube-prometheus/agocd_rules.json { \"groups\": [ { \"name\": \"argocd.rules\", \"rules\": [ { \"alert\": \"ArgoCDSyncProgress\", \"expr\": \"sum(argocd_app_health_status{health_status=\\\"Progressing\\\",namespace=\\\"argocd\\\"}) + sum(argocd_app_sync_status{sync_status=\\\"OutOfSync\\\",project=~\\\"(dev|integration|stage|jam).*\\\"}) > 0\", \"for\": \"30s\", \"labels\": { \"severity\": \"page\", \"source\": \"argocd\" }, \"annotations\": { \"description\": \"ArgoCD start syncing applocations\", \"summary\": \"Deploying\" } } ] } ] } kustomize/templates/kube-prometheus/template.jsonnet prometheusAlerts+:: { groups+: (import 'alerts/ct_rules.json').groups + (import 'alerts/argocd_rules.json').groups + (import 'alerts/jam_es_rules.json').groups, }, [~/sap-jam/jam-on-k8s]$ cd kustomize/templates/kube-prometheus && time docker run --rm -v $(pwd):$(pwd) --workdir $(pwd) quay.io/coreos/jsonnet-ci ./build.sh template.jsonnet monitoring/kube-prometheus/prometheus-rules.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: prometheus-k8s-rules namespace: monitoring spec: groups: ... - name: argocd.rules rules: - alert: ArgoCDSyncProgress annotations: description: ArgoCD start syncing applocations summary: Check configuration expr: sum(argocd_app_health_status{health_status=\"Progressing\",namespace=\"argocd\"}) > 0 for: 1m labels: severity: page source: argocd kubectl apply -f prometheus-rules.yaml Add slack alerts fot argo deployment \"global\": \"resolve_timeout\": \"5m\" \"smtp_hello\": \"sapjam-integration.com\" \"smtp_from\": \"...@sapjam-integration.com\" \"smtp_smarthost\": \"email-smtp.eu-central-1.amazonaws.com:25\" # 465 is implicit ssl port \"smtp_auth_username\": \"\" # stage stmp username and password \"smtp_auth_password\": \"\" \"smtp_require_tls\": true \"receivers\": - \"name\": \"jam-devops-email-alerts\" \"email_configs\": - \"send_resolved\": true \"headers\": \"Subject\": 'Integration702-Alert{{ template \"email.default.subject\" . }}' \"to\": \"receiver@sap.com\" - \"name\": \"slack-deployment\" \"slack_configs\": - \"api_url\": \"https://hooks.slack.com/services/...\" \"channel\": \"multi-cloud-deployment\" \"send_resolved\": true \"text\": \"<!channel> \\n`{{ .CommonAnnotations.instance }}` ArgoCD syncing {{ if eq .Status \\\"firing\\\" }}started :peperunner:{{ else }}done! :parrot_beer:{{ end }}\" \"title\": \"Deployment for {{ .CommonAnnotations.instance }}\" \"route\": \"group_by\": - \"job\" \"group_interval\": \"5m\" \"group_wait\": \"30s\" \"receiver\": \"jam-devops-email-alerts\" \"repeat_interval\": \"24h\" \"routes\": - \"match\": \"alertname\": \"ArgoCDSyncProgress\" \"receiver\": \"slack-deployment\" - \"match\": \"severity\": \"critical\" \"receiver\": \"jam-devops-email-alerts\" \"inhibit_rules\": - \"source_match\": \"severity\": \"critical\" \"target_match_re\": \"severity\": \"warning|none\" \"equal\": ['prometheus'] - \"source_match\": \"alertname\": \"KubeControllerManagerDown\" \"target_match_re\": \"alertname\": \"KubeSchedulerDown\" \"equal\": [\"prometheus\"] - \"source_match\": \"alertname\": \"KubeSchedulerDown\" \"target_match_re\": \"alertname\": \"KubeControllerManagerDown\" \"equal\": ['prometheus']","title":"Chap2 Prometheus Operator Monitor on ArgoCD"},{"location":"chap6/26Prometheus_Monitor_Argocd/#chap2-prometheus-operator-monitor-on-argocd","text":"\u7b2c\u4e00\u6b65\uff0c\u4e3a Argocd \u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u62a5\u8b66\u89c4\u5219 \u7b2c\u4e8c\u6b65\u5efa\u7acb\u4e00\u4e2a ServiceMonitor \u5bf9\u8c61\uff0c\u7528\u4e8e Prometheus \u6dfb\u52a0\u76d1\u63a7\u9879 \u7b2c\u4e09\u6b65\u4e3a ServiceMonitor \u5bf9\u8c61\u5173\u8054 metrics \u6570\u636e\u63a5\u53e3\u7684\u4e00\u4e2a Service \u5bf9\u8c61 \u7b2c\u56db\u6b65\u786e\u4fdd Service \u5bf9\u8c61\u53ef\u4ee5\u6b63\u786e\u83b7\u53d6\u5230 metrics \u6570\u636e","title":"Chap2 Prometheus Operator Monitor on ArgoCD"},{"location":"chap6/26Prometheus_Monitor_Argocd/#argocdmetrics","text":"argocd-metrics : 8082 argocd-server-metrics : 8083 $ kubectl get svc -n argocd --show-labels | grep metrics argocd-metrics ClusterIP 100.70.123.135 <none> 8082/TCP 116d app.kubernetes.io/component=metrics,app.kubernetes.io/name=argocd-metrics,app.kubernetes.io/part-of=argocd argocd-server-metrics ClusterIP 100.70.2.220 <none> 8083/TCP 116d app.kubernetes.io/component=server,app.kubernetes.io/name=argocd-server-metrics,app.kubernetes.io/part-of=argocd","title":"argocd\u5df2\u7ecf\u66b4\u9732metrics"},{"location":"chap6/26Prometheus_Monitor_Argocd/#servicemonitor","text":"","title":"\u521b\u5efa ServiceMonitor"},{"location":"chap6/26Prometheus_Monitor_Argocd/#servicemonitorsargocd-metricsyaml","text":"apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: argocd-metrics namespace: argocd labels: prometheus: kube-prometheus spec: selector: matchLabels: \"app.kubernetes.io/name\": argocd-metrics namespaceSelector: matchNames: - argocd jobLabel: app.kubernetes.io/name endpoints: - port: metrics interval: 10s \u4e0a\u9762\u6211\u4eec\u5728 argocd \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a argocd-metrics \u7684 ServiceMonitor \u5bf9\u8c61\uff0c\u57fa\u672c\u5c5e\u6027\u548c\u524d\u9762\u7ae0\u8282\u4e2d\u7684\u4e00\u81f4\uff0c \u5339\u914d argocd \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 \"app.kubernetes.io/name\": argocd-metrics \u8fd9\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c $ kubectl create -f argocd-metrics.yaml","title":"servicemonitors/argocd-metrics.yaml"},{"location":"chap6/26Prometheus_Monitor_Argocd/#servicemonitorsargocd-repo-server-metricsyaml","text":"apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: argocd-repo-server-metrics namespace: argocd labels: prometheus: kube-prometheus spec: selector: matchLabels: app.kubernetes.io/name: argocd-repo-server namespaceSelector: matchNames: - argocd jobLabel: app.kubernetes.io/name endpoints: - port: metrics \u4e0a\u9762\u6211\u4eec\u5728 argocd \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a argocd-repo-server-metrics \u7684 ServiceMonitor \u5bf9\u8c61\uff0c\u57fa\u672c\u5c5e\u6027\u548c\u524d\u9762\u7ae0\u8282\u4e2d\u7684\u4e00\u81f4\uff0c \u5339\u914d argocd \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 \"app.kubernetes.io/name\": argocd-repo-server \u8fd9\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c","title":"servicemonitors/argocd-repo-server-metrics.yaml"},{"location":"chap6/26Prometheus_Monitor_Argocd/#argocd-server-metricsyaml","text":"apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: argocd-server-metrics namespace: argocd labels: prometheus: kube-prometheus spec: selector: matchLabels: app.kubernetes.io/name: argocd-server-metrics namespaceSelector: matchNames: - argocd endpoints: - port: metrics \u4e0a\u9762\u6211\u4eec\u5728 argocd \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a argocd-server-metrics \u7684 ServiceMonitor \u5bf9\u8c61\uff0c\u57fa\u672c\u5c5e\u6027\u548c\u524d\u9762\u7ae0\u8282\u4e2d\u7684\u4e00\u81f4\uff0c \u5339\u914d argocd \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 \"app.kubernetes.io/name\": argocd-server-metrics \u8fd9\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c","title":"argocd-server-metrics.yaml"},{"location":"chap6/26Prometheus_Monitor_Argocd/#service","text":"ServiceMonitor \u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u53ef\u4ee5\u67e5\u770b\u4e00\u4e0b\u5173\u8054\u7684\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c kubectl get svc -n argocd --show-labels NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE LABELS argocd-metrics ClusterIP 100.64.219.240 <none> 8082/TCP 18d app.kubernetes.io/component=metrics,app.kubernetes.io/name=argocd-metrics,app.kubernetes.io/part-of=argocd ... argocd-repo-server ClusterIP 100.68.97.78 <none> 8081/TCP,8084/TCP 18d app.kubernetes.io/component=repo-server,app.kubernetes.io/name=argocd-repo-server,app.kubernetes.io/part-of=argocd ... argocd-server-metrics ClusterIP 100.68.125.117 <none> 8083/TCP 18d app.kubernetes.io/component=server,app.kubernetes.io/name=argocd-server-metrics,app.kubernetes.io/part-of=argocd","title":"\u67e5\u770b Service"},{"location":"chap6/26Prometheus_Monitor_Argocd/#add-to-dashboard","text":"grafanaDashboards+:: { ... 'argocd-dashboard.json': (import 'jam-dashboards/argocd-dashboard.json'), }","title":"Add to dashboard"},{"location":"chap6/26Prometheus_Monitor_Argocd/#prometheusrule-applied-after-received-metrics-data","text":"kustomize/templates/kube-prometheus/agocd_rules.json { \"groups\": [ { \"name\": \"argocd.rules\", \"rules\": [ { \"alert\": \"ArgoCDSyncProgress\", \"expr\": \"sum(argocd_app_health_status{health_status=\\\"Progressing\\\",namespace=\\\"argocd\\\"}) + sum(argocd_app_sync_status{sync_status=\\\"OutOfSync\\\",project=~\\\"(dev|integration|stage|jam).*\\\"}) > 0\", \"for\": \"30s\", \"labels\": { \"severity\": \"page\", \"source\": \"argocd\" }, \"annotations\": { \"description\": \"ArgoCD start syncing applocations\", \"summary\": \"Deploying\" } } ] } ] }","title":"\u914d\u7f6e PrometheusRule (Applied after received metrics data)"},{"location":"chap6/26Prometheus_Monitor_Argocd/#kustomizetemplateskube-prometheustemplatejsonnet","text":"prometheusAlerts+:: { groups+: (import 'alerts/ct_rules.json').groups + (import 'alerts/argocd_rules.json').groups + (import 'alerts/jam_es_rules.json').groups, }, [~/sap-jam/jam-on-k8s]$ cd kustomize/templates/kube-prometheus && time docker run --rm -v $(pwd):$(pwd) --workdir $(pwd) quay.io/coreos/jsonnet-ci ./build.sh template.jsonnet monitoring/kube-prometheus/prometheus-rules.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: prometheus-k8s-rules namespace: monitoring spec: groups: ... - name: argocd.rules rules: - alert: ArgoCDSyncProgress annotations: description: ArgoCD start syncing applocations summary: Check configuration expr: sum(argocd_app_health_status{health_status=\"Progressing\",namespace=\"argocd\"}) > 0 for: 1m labels: severity: page source: argocd kubectl apply -f prometheus-rules.yaml","title":"kustomize/templates/kube-prometheus/template.jsonnet"},{"location":"chap6/26Prometheus_Monitor_Argocd/#add-slack-alerts-fot-argo-deployment","text":"\"global\": \"resolve_timeout\": \"5m\" \"smtp_hello\": \"sapjam-integration.com\" \"smtp_from\": \"...@sapjam-integration.com\" \"smtp_smarthost\": \"email-smtp.eu-central-1.amazonaws.com:25\" # 465 is implicit ssl port \"smtp_auth_username\": \"\" # stage stmp username and password \"smtp_auth_password\": \"\" \"smtp_require_tls\": true \"receivers\": - \"name\": \"jam-devops-email-alerts\" \"email_configs\": - \"send_resolved\": true \"headers\": \"Subject\": 'Integration702-Alert{{ template \"email.default.subject\" . }}' \"to\": \"receiver@sap.com\" - \"name\": \"slack-deployment\" \"slack_configs\": - \"api_url\": \"https://hooks.slack.com/services/...\" \"channel\": \"multi-cloud-deployment\" \"send_resolved\": true \"text\": \"<!channel> \\n`{{ .CommonAnnotations.instance }}` ArgoCD syncing {{ if eq .Status \\\"firing\\\" }}started :peperunner:{{ else }}done! :parrot_beer:{{ end }}\" \"title\": \"Deployment for {{ .CommonAnnotations.instance }}\" \"route\": \"group_by\": - \"job\" \"group_interval\": \"5m\" \"group_wait\": \"30s\" \"receiver\": \"jam-devops-email-alerts\" \"repeat_interval\": \"24h\" \"routes\": - \"match\": \"alertname\": \"ArgoCDSyncProgress\" \"receiver\": \"slack-deployment\" - \"match\": \"severity\": \"critical\" \"receiver\": \"jam-devops-email-alerts\" \"inhibit_rules\": - \"source_match\": \"severity\": \"critical\" \"target_match_re\": \"severity\": \"warning|none\" \"equal\": ['prometheus'] - \"source_match\": \"alertname\": \"KubeControllerManagerDown\" \"target_match_re\": \"alertname\": \"KubeSchedulerDown\" \"equal\": [\"prometheus\"] - \"source_match\": \"alertname\": \"KubeSchedulerDown\" \"target_match_re\": \"alertname\": \"KubeControllerManagerDown\" \"equal\": ['prometheus']","title":"Add slack alerts fot argo deployment"},{"location":"chap6/27Prometheus_Monitor_elasticsearch/","text":"Chap3 Prometheus Operator Monitor on ElasticSearch \u7b2c\u4e00\u6b65\u5efa\u7acb\u4e00\u4e2a ServiceMonitor \u5bf9\u8c61\uff0c\u7528\u4e8e Prometheus \u6dfb\u52a0\u76d1\u63a7\u9879 \u7b2c\u4e8c\u6b65\u4e3a ServiceMonitor \u5bf9\u8c61\u5173\u8054 metrics \u6570\u636e\u63a5\u53e3\u7684\u4e00\u4e2a Service \u5bf9\u8c61 \u7b2c\u4e09\u6b65\u786e\u4fdd Service \u5bf9\u8c61\u53ef\u4ee5\u6b63\u786e\u83b7\u53d6\u5230 Exporter \u6570\u636e 1 \u5b89\u88c5 elasticsearch-exporter helm install jam-elasticsearch-exporter --set es.uri=http://elasticsearch-jam:9200,es.all=true,es.indices=true stable/elasticsearch-exporter -n $JAM_INSTANCE name: jam-elasticsearch-exporter es.uri : es.uri=http://elasticsearch-jam:9200 es.all : true es.indices : true 2 \u521b\u5efa ServiceMonitor servicemonitors/elasticsearch.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: elasticsearch labels: prometheus: kube-prometheus spec: selector: # note, this matches on the service, not the deployment or pod matchLabels: app: elasticsearch-exporter jobLabel: app endpoints: - targetPort: 9108 path: /metrics \u5177\u6709 app: elasticsearch-exporter \u8fd9\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c $ kubectl get servicemonitor --all-namespaces | grep elas default elasticsearch 44d \u67e5\u770b Service ServiceMonitor \u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u53ef\u4ee5\u67e5\u770b\u4e00\u4e0b\u5173\u8054\u7684\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c $ kubectl get svc -n integration701 | grep elasticsearch elasticsearch ClusterIP None <none> 9200/TCP,9300/TCP 65d elasticsearch-internal ClusterIP None <none> 9300/TCP 2d23h elasticsearch-jam ClusterIP None <none> 9200/TCP,9300/TCP 65d elasticsearch-jam-internal ClusterIP None <none> 9300/TCP 2d23h jam-elasticsearch-exporter ClusterIP 100.65.144.114 <none> 9108/TCP 44d \u914d\u7f6e PrometheusRule (Applied after received exporter data) es_rule.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: elasticsearch-rules namespace: monitoring spec: groups: - name: elasticsearch.rules rules: - alert: ElasticHeapUsageTooHigh expr: (elasticsearch_jvm_memory_used_bytes{area=\"heap\"} / elasticsearch_jvm_memory_max_bytes{area=\"heap\"}) * 100 > 95 for: 5m labels: severity: critical annotations: summary: \"Elastic Heap Usage Too High (instance: {{ $labels.instance }}) \" message: \"The heap usage is over 95% for 5m VALUE = {{ $value }} for pod {{ $labels.name }}\" - alert: ElasticHeapUsageWarning expr: (elasticsearch_jvm_memory_used_bytes{area=\"heap\"} / elasticsearch_jvm_memory_max_bytes{area=\"heap\"}) * 100 > 80 for: 5m labels: severity: warning annotations: summary: \"Elastic Heap Usage warning (instance {{ $labels.instance }})\" message: \"The heap usage is over 80% for 5m VALUE = {{ $value }} for pod {{ $labels.name }}\" - alert: ElasticClusterRed expr: elasticsearch_cluster_health_status{color=\"red\"} == 1 for: 5m labels: severity: critical annotations: summary: \"Elastic Cluster Red (instance {{ $labels.instance }})\" message: \"Elastic Cluster Red status VALUE = {{ $value }} fetched by Service Monitor {{ $labels.service }}\" - alert: ElasticClusterYellow expr: elasticsearch_cluster_health_status{color=\"yellow\"} == 1 for: 5m labels: severity: warning annotations: summary: \"Elastic Cluster Yellow (instance {{ $labels.instance }})\" message: \"Elastic Cluster Yellow status VALUE = {{ $value }} fetched by Service Monitor: {{ $labels.service }}\" - alert: NumberOfJamElasticHealthyNodes expr: elasticsearch_cluster_health_number_of_nodes < kube_statefulset_replicas{namespace=~\"^(jam|integration|stage|dev).*\", statefulset=~\"elasticsearch-jam\"} for: 5m labels: severity: critical annotations: summary: \"Number of Jam Elastic Healthy Nodes (instance {{ $labels.instance }})\" message: \"Number of Healthy Nodes less then Jam Elasticsearch sts desired replicas in elasticsearch6 VALUE = {{ $value }}\" - alert: NumberOfInitializingShards expr: elasticsearch_cluster_health_initializing_shards > 0 for: 10m labels: severity: critical annotations: summary: \"Number of initializing shards (instance {{ $labels.instance }})\" message: \"Number of initializing shards for 10 min VALUE = {{ $value }}, The initializing shards value fetched by Service Monitor: {{ $labels.service }} \" - alert: NumberOfUnassignedShards expr: elasticsearch_cluster_health_unassigned_shards > 0 for: 5m labels: severity: critical annotations: summary: \"Number of unassigned shards (instance {{ $labels.instance }})\" message: \"Number of unassigned shards for 5 min VALUE = {{ $value }}\\n The unassigned shards value fetched by Service Monitor: {{ $labels.service }}\" - alert: NumberOfSearchQueueHigh expr: elasticsearch_thread_pool_queue_count > 800 for: 2m labels: severity: critical annotations: summary: \"Number of search queue (Instance {{ $labels.instance }}, Name {{ $labels.name }} and Type {{ $labels.type }})\" message: \"Number of high search queue for 2 min VALUE = {{ $value }}\" - alert: NumberOfPendingTasks expr: elasticsearch_cluster_health_number_of_pending_tasks > 0 for: 10m labels: severity: warning annotations: summary: \"Number of pending tasks (instance {{ $labels.instance }})\" message: \"Number of pending tasks for 10 min. Cluster works slowly, VALUE = {{ $value }} fetched by Service Monitor {{ $labels.service }} \"","title":"Chap3 Prometheus Operator Monitor on ElasticSearch"},{"location":"chap6/27Prometheus_Monitor_elasticsearch/#chap3-prometheus-operator-monitor-on-elasticsearch","text":"\u7b2c\u4e00\u6b65\u5efa\u7acb\u4e00\u4e2a ServiceMonitor \u5bf9\u8c61\uff0c\u7528\u4e8e Prometheus \u6dfb\u52a0\u76d1\u63a7\u9879 \u7b2c\u4e8c\u6b65\u4e3a ServiceMonitor \u5bf9\u8c61\u5173\u8054 metrics \u6570\u636e\u63a5\u53e3\u7684\u4e00\u4e2a Service \u5bf9\u8c61 \u7b2c\u4e09\u6b65\u786e\u4fdd Service \u5bf9\u8c61\u53ef\u4ee5\u6b63\u786e\u83b7\u53d6\u5230 Exporter \u6570\u636e","title":"Chap3 Prometheus Operator Monitor on ElasticSearch"},{"location":"chap6/27Prometheus_Monitor_elasticsearch/#1-elasticsearch-exporter","text":"helm install jam-elasticsearch-exporter --set es.uri=http://elasticsearch-jam:9200,es.all=true,es.indices=true stable/elasticsearch-exporter -n $JAM_INSTANCE name: jam-elasticsearch-exporter es.uri : es.uri=http://elasticsearch-jam:9200 es.all : true es.indices : true","title":"1 \u5b89\u88c5elasticsearch-exporter"},{"location":"chap6/27Prometheus_Monitor_elasticsearch/#2-servicemonitor","text":"servicemonitors/elasticsearch.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: elasticsearch labels: prometheus: kube-prometheus spec: selector: # note, this matches on the service, not the deployment or pod matchLabels: app: elasticsearch-exporter jobLabel: app endpoints: - targetPort: 9108 path: /metrics \u5177\u6709 app: elasticsearch-exporter \u8fd9\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c $ kubectl get servicemonitor --all-namespaces | grep elas default elasticsearch 44d","title":"2 \u521b\u5efa ServiceMonitor"},{"location":"chap6/27Prometheus_Monitor_elasticsearch/#service","text":"ServiceMonitor \u521b\u5efa\u5b8c\u6210\u4e86\uff0c\u53ef\u4ee5\u67e5\u770b\u4e00\u4e0b\u5173\u8054\u7684\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c $ kubectl get svc -n integration701 | grep elasticsearch elasticsearch ClusterIP None <none> 9200/TCP,9300/TCP 65d elasticsearch-internal ClusterIP None <none> 9300/TCP 2d23h elasticsearch-jam ClusterIP None <none> 9200/TCP,9300/TCP 65d elasticsearch-jam-internal ClusterIP None <none> 9300/TCP 2d23h jam-elasticsearch-exporter ClusterIP 100.65.144.114 <none> 9108/TCP 44d","title":"\u67e5\u770b Service"},{"location":"chap6/27Prometheus_Monitor_elasticsearch/#prometheusrule-applied-after-received-exporter-data","text":"es_rule.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: elasticsearch-rules namespace: monitoring spec: groups: - name: elasticsearch.rules rules: - alert: ElasticHeapUsageTooHigh expr: (elasticsearch_jvm_memory_used_bytes{area=\"heap\"} / elasticsearch_jvm_memory_max_bytes{area=\"heap\"}) * 100 > 95 for: 5m labels: severity: critical annotations: summary: \"Elastic Heap Usage Too High (instance: {{ $labels.instance }}) \" message: \"The heap usage is over 95% for 5m VALUE = {{ $value }} for pod {{ $labels.name }}\" - alert: ElasticHeapUsageWarning expr: (elasticsearch_jvm_memory_used_bytes{area=\"heap\"} / elasticsearch_jvm_memory_max_bytes{area=\"heap\"}) * 100 > 80 for: 5m labels: severity: warning annotations: summary: \"Elastic Heap Usage warning (instance {{ $labels.instance }})\" message: \"The heap usage is over 80% for 5m VALUE = {{ $value }} for pod {{ $labels.name }}\" - alert: ElasticClusterRed expr: elasticsearch_cluster_health_status{color=\"red\"} == 1 for: 5m labels: severity: critical annotations: summary: \"Elastic Cluster Red (instance {{ $labels.instance }})\" message: \"Elastic Cluster Red status VALUE = {{ $value }} fetched by Service Monitor {{ $labels.service }}\" - alert: ElasticClusterYellow expr: elasticsearch_cluster_health_status{color=\"yellow\"} == 1 for: 5m labels: severity: warning annotations: summary: \"Elastic Cluster Yellow (instance {{ $labels.instance }})\" message: \"Elastic Cluster Yellow status VALUE = {{ $value }} fetched by Service Monitor: {{ $labels.service }}\" - alert: NumberOfJamElasticHealthyNodes expr: elasticsearch_cluster_health_number_of_nodes < kube_statefulset_replicas{namespace=~\"^(jam|integration|stage|dev).*\", statefulset=~\"elasticsearch-jam\"} for: 5m labels: severity: critical annotations: summary: \"Number of Jam Elastic Healthy Nodes (instance {{ $labels.instance }})\" message: \"Number of Healthy Nodes less then Jam Elasticsearch sts desired replicas in elasticsearch6 VALUE = {{ $value }}\" - alert: NumberOfInitializingShards expr: elasticsearch_cluster_health_initializing_shards > 0 for: 10m labels: severity: critical annotations: summary: \"Number of initializing shards (instance {{ $labels.instance }})\" message: \"Number of initializing shards for 10 min VALUE = {{ $value }}, The initializing shards value fetched by Service Monitor: {{ $labels.service }} \" - alert: NumberOfUnassignedShards expr: elasticsearch_cluster_health_unassigned_shards > 0 for: 5m labels: severity: critical annotations: summary: \"Number of unassigned shards (instance {{ $labels.instance }})\" message: \"Number of unassigned shards for 5 min VALUE = {{ $value }}\\n The unassigned shards value fetched by Service Monitor: {{ $labels.service }}\" - alert: NumberOfSearchQueueHigh expr: elasticsearch_thread_pool_queue_count > 800 for: 2m labels: severity: critical annotations: summary: \"Number of search queue (Instance {{ $labels.instance }}, Name {{ $labels.name }} and Type {{ $labels.type }})\" message: \"Number of high search queue for 2 min VALUE = {{ $value }}\" - alert: NumberOfPendingTasks expr: elasticsearch_cluster_health_number_of_pending_tasks > 0 for: 10m labels: severity: warning annotations: summary: \"Number of pending tasks (instance {{ $labels.instance }})\" message: \"Number of pending tasks for 10 min. Cluster works slowly, VALUE = {{ $value }} fetched by Service Monitor {{ $labels.service }} \"","title":"\u914d\u7f6e PrometheusRule (Applied after received exporter data)"},{"location":"chap6/31Prometheus_Monitor_rabbitmq/","text":"Chap4 Prometheus Operator Monitor on Rabbitmq \u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5 rabbitmq-exporter , rabbit-ha \u548c rabbit-transient \u7b2c\u4e8c\u6b65\u4e3a ServiceMonitor \u5bf9\u8c61\u5173\u8054 metrics \u6570\u636e\u63a5\u53e3\u7684\u4e00\u4e2a Service \u5bf9\u8c61 \u7b2c\u4e09\u6b65\u786e\u4fdd Service \u5bf9\u8c61\u53ef\u4ee5\u6b63\u786e\u83b7\u53d6\u5230 metrics \u6570\u636e \u5b89\u88c5 rabbitmq-exporter rabbit-ha rabbitmq-exporter helm install prometheus-rabbitmq-exporter-ha --set rabbitmq.url=http://rabbitmq-ha:15672,rabbitmq.user=jambunny,rabbitmq.existingPasswordSecret=rabbit stable/prometheus-rabbitmq-exporter -n $JAM_INSTANCE rabbit-transient rabbitmq-exporter helm install prometheus-rabbitmq-exporter-transient --set rabbitmq.url=http://rabbitmq-transient:15672,rabbitmq.user=jambunny,rabbitmq.existingPasswordSecret=rabbit stable/prometheus-rabbitmq-exporter -n $JAM_INSTANCE Name : prometheus-rabbitmq-exporter-ha & prometheus-rabbitmq-exporter-transient rabbitmq.url : http://rabbitmq-transient:15672 rabbitmq.user : jambunny rabbitmq.existingPasswordSecret : rabbit stable/prometheus-rabbitmq-exporter $ helm list -n integration701 | grep rab ... prometheus-rabbitmq-exporter-ha integration701 1 2020-02-12 16:39:52.9999 +0800 CST deployed prometheus-rabbitmq-exporter-0.5.5 v0.29.0 prometheus-rabbitmq-exporter-transient integration701 1 2020-02-12 16:40:42.605152 +0800 CST deployed prometheus-rabbitmq-exporter-0.5.5 v0.29.0 \u521b\u5efa ServiceMonitor rabbit-ha.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: rabbit-ha labels: prometheus: kube-prometheus spec: selector: # note, this matches on the service, not the deployment or pod matchLabels: app: prometheus-rabbitmq-exporter release: prometheus-rabbitmq-exporter-ha jobLabel: app endpoints: - targetPort: 9419 path: /metrics namespaceSelector: matchNames: - integration701 \u4e0a\u9762\u6211\u4eec\u5728 default \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a rabbit-ha \u7684 ServiceMonitor \u5bf9\u8c61 \u5339\u914d integration701 \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 app: prometheus-rabbitmq-exporter \u548c app: prometheus-rabbitmq-exporter \u8fd9\u4e24\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c rabbit-transient.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: rabbit-transient labels: prometheus: kube-prometheus spec: selector: # note, this matches on the service, not the deployment or pod matchLabels: app: prometheus-rabbitmq-exporter release: prometheus-rabbitmq-exporter-transient jobLabel: app endpoints: - targetPort: 9419 path: /metrics namespaceSelector: matchNames: - integration701 \u4e0a\u9762\u6211\u4eec\u5728 default \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a rabbit-transient \u7684 ServiceMonitor \u5bf9\u8c61 \u5339\u914d integration701 \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 app: prometheus-rabbitmq-exporter \u548c app: prometheus-rabbitmq-exporter \u8fd9\u4e24\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c $ kubectl get servicemonitor NAMESPACE NAME AGE default rabbit-ha 44d default rabbit-transient 44d \u67e5\u770b Service $ kubectl get svc -n integration701 | grep rab prometheus-rabbitmq-exporter-ha ClusterIP 100.68.97.158 <none> 9419/TCP 44d prometheus-rabbitmq-exporter-transient ClusterIP 100.69.144.253 <none> 9419/TCP 44d rabbitmq-exporter-ha ClusterIP 100.65.251.106 <none> 9419/TCP 66d rabbitmq-exporter-transient ClusterIP 100.66.131.184 <none> 9419/TCP 66d rabbitmq-ha ClusterIP 100.71.17.211 <none> 15672/TCP,5672/TCP 65d rabbitmq-transient ClusterIP 100.71.81.171 <none> 15672/TCP,5672/TCP 65d monitoring/kube-prometheus/prometheus-rules.yaml Reference alerts.yaml Jam rabbitmq-ha-rules rabbitmq-ha-rules.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: rabbitmq-ha-rules namespace: monitoring spec: groups: - name: rabbitmq-ha.rules rules: - alert: RabbitMqHaClusterNodeDown expr: rabbitmq_up{service=\"prometheus-rabbitmq-exporter-ha\"} == 0 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] Rabbitmq down (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}}/{{$labels.pod}} is down\" - alert: RabbitMqHaClusterNotAllNodesRunning expr: rabbitmq_running{service=\"prometheus-rabbitmq-exporter-ha\"} < kube_statefulset_replicas{namespace=~\"^(jam|integration|stage|dev).*\", statefulset=~\"rabbitmq-ha\"} for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] Some RabbitMQ-HA Cluster Nodes Are Down in Service (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"Some RabbitMQ-HA cluster nodes are down, currently running with VALUE = {{$value}}\" - alert: RabbitMqHaClusterPartition expr: rabbitmq_partitions{service=\"prometheus-rabbitmq-exporter-ha\"} > 0 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] Cluster Partition Error (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA either some nodes are down or the cluster has partitioned with VALUE = {{$value}}\" - alert: RabbitMqHaExchangeStatus expr: rabbitmq_exchangesTotal{service=\"prometheus-rabbitmq-exporter-ha\"} == 0 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] Cluster Exchange are Missing (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"The count of RabbitMQ-HA cluster exchange is VALUE = {{$value}}\" - alert: RabbitMqHaQueueStatus expr: rabbitmq_queuesTotal{service=\"prometheus-rabbitmq-exporter-ha\"} == 0 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] Cluster Queues are Missing (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"The count of RabbitMQ-HA cluster queue is VALUE = {{$value}}\" - alert: RabbitMqHaDiskSpaceAlarm expr: rabbitmq_node_disk_free_alarm{service=\"prometheus-rabbitmq-exporter-ha\"} == 1 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] RabbitMQ-HA is Out of Disk Space (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}} / {{$labels.pod}} Disk Space Alarm is going off. Which means the node hit highwater mark and has cut off network connectivity, see RabbitMQ WebUI\" - alert: RabbitMqHaMemoryAlarm expr: rabbitmq_node_mem_alarm{service=\"prometheus-rabbitmq-exporter-ha\"} == 1 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] RabbitMQ-HA is Out of Memory (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}} / {{$labels.pod}} High Memory Alarm is going off. Which means the node hit highwater mark and has cut off network connectivity, see RabbitMQ WebUI\" - alert: RabbitMqHaMemoryUsageHigh expr: (rabbitmq_node_mem_used{service=\"prometheus-rabbitmq-exporter-ha\"} / rabbitmq_node_mem_limit{service=\"prometheus-rabbitmq-exporter-ha\"} ) * 100 > 90 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] RabbitMQ-HA Node > 90% Memory Usage (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}} / {{$labels.pod}} Memory Usage > 90%\" - alert: RabbitMqHaFileDescriptorsLow expr: (rabbitmq_fd_used{service=\"prometheus-rabbitmq-exporter-ha\"} / rabbitmq_fd_total{service=\"prometheus-rabbitmq-exporter-ha\"}) * 100 > 90 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"RabbitMQ-HA Low File Descriptor Available (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}} / {{$labels.pod}} File Descriptor Usage > 90%\" - alert: RabbitMqHaDiskSpaceLow expr: predict_linear(rabbitmq_node_disk_free{service=\"prometheus-rabbitmq-exporter-ha\"}[15m], 1 * 60 * 60) < rabbitmq_node_disk_free_limit{service=\"prometheus-rabbitmq-exporter-ha\"} for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] RabbitMQ-HA is Low on Disk Space and will Run Out in the next hour (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}} / {{$labels.pod}} will hit disk limit in the next hr based on last 15 mins trend.\" - alert: RabbitMqHaNoConsumer expr: rabbitmq_queue_consumers{service=\"prometheus-rabbitmq-exporter-ha\"} == 0 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] No Consumer Existing for Queues in RabbitMQ-HA (instance {{$labels.instance}})\" description: \"RabbitMQ-HA Queues has no consumers exist for {{$labels.queue}}\"","title":"Chap4 Prometheus Operator Monitor on Rabbitmq"},{"location":"chap6/31Prometheus_Monitor_rabbitmq/#chap4-prometheus-operator-monitor-on-rabbitmq","text":"\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5 rabbitmq-exporter , rabbit-ha \u548c rabbit-transient \u7b2c\u4e8c\u6b65\u4e3a ServiceMonitor \u5bf9\u8c61\u5173\u8054 metrics \u6570\u636e\u63a5\u53e3\u7684\u4e00\u4e2a Service \u5bf9\u8c61 \u7b2c\u4e09\u6b65\u786e\u4fdd Service \u5bf9\u8c61\u53ef\u4ee5\u6b63\u786e\u83b7\u53d6\u5230 metrics \u6570\u636e","title":"Chap4 Prometheus Operator Monitor on Rabbitmq"},{"location":"chap6/31Prometheus_Monitor_rabbitmq/#rabbitmq-exporter","text":"","title":"\u5b89\u88c5rabbitmq-exporter"},{"location":"chap6/31Prometheus_Monitor_rabbitmq/#rabbit-ha-rabbitmq-exporter","text":"helm install prometheus-rabbitmq-exporter-ha --set rabbitmq.url=http://rabbitmq-ha:15672,rabbitmq.user=jambunny,rabbitmq.existingPasswordSecret=rabbit stable/prometheus-rabbitmq-exporter -n $JAM_INSTANCE","title":"rabbit-ha rabbitmq-exporter"},{"location":"chap6/31Prometheus_Monitor_rabbitmq/#rabbit-transient-rabbitmq-exporter","text":"helm install prometheus-rabbitmq-exporter-transient --set rabbitmq.url=http://rabbitmq-transient:15672,rabbitmq.user=jambunny,rabbitmq.existingPasswordSecret=rabbit stable/prometheus-rabbitmq-exporter -n $JAM_INSTANCE Name : prometheus-rabbitmq-exporter-ha & prometheus-rabbitmq-exporter-transient rabbitmq.url : http://rabbitmq-transient:15672 rabbitmq.user : jambunny rabbitmq.existingPasswordSecret : rabbit stable/prometheus-rabbitmq-exporter $ helm list -n integration701 | grep rab ... prometheus-rabbitmq-exporter-ha integration701 1 2020-02-12 16:39:52.9999 +0800 CST deployed prometheus-rabbitmq-exporter-0.5.5 v0.29.0 prometheus-rabbitmq-exporter-transient integration701 1 2020-02-12 16:40:42.605152 +0800 CST deployed prometheus-rabbitmq-exporter-0.5.5 v0.29.0","title":"rabbit-transient rabbitmq-exporter"},{"location":"chap6/31Prometheus_Monitor_rabbitmq/#servicemonitor","text":"rabbit-ha.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: rabbit-ha labels: prometheus: kube-prometheus spec: selector: # note, this matches on the service, not the deployment or pod matchLabels: app: prometheus-rabbitmq-exporter release: prometheus-rabbitmq-exporter-ha jobLabel: app endpoints: - targetPort: 9419 path: /metrics namespaceSelector: matchNames: - integration701 \u4e0a\u9762\u6211\u4eec\u5728 default \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a rabbit-ha \u7684 ServiceMonitor \u5bf9\u8c61 \u5339\u914d integration701 \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 app: prometheus-rabbitmq-exporter \u548c app: prometheus-rabbitmq-exporter \u8fd9\u4e24\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c","title":"\u521b\u5efa ServiceMonitor"},{"location":"chap6/31Prometheus_Monitor_rabbitmq/#rabbit-transientyaml","text":"apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: rabbit-transient labels: prometheus: kube-prometheus spec: selector: # note, this matches on the service, not the deployment or pod matchLabels: app: prometheus-rabbitmq-exporter release: prometheus-rabbitmq-exporter-transient jobLabel: app endpoints: - targetPort: 9419 path: /metrics namespaceSelector: matchNames: - integration701 \u4e0a\u9762\u6211\u4eec\u5728 default \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u521b\u5efa\u4e86\u540d\u4e3a rabbit-transient \u7684 ServiceMonitor \u5bf9\u8c61 \u5339\u914d integration701 \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u5177\u6709 app: prometheus-rabbitmq-exporter \u548c app: prometheus-rabbitmq-exporter \u8fd9\u4e24\u4e2a label \u6807\u7b7e\u7684 Service \uff0c jobLabel \u8868\u793a\u7528\u4e8e\u68c0\u7d22 job \u4efb\u52a1\u540d\u79f0\u7684\u6807\u7b7e\uff0c $ kubectl get servicemonitor NAMESPACE NAME AGE default rabbit-ha 44d default rabbit-transient 44d","title":"rabbit-transient.yaml"},{"location":"chap6/31Prometheus_Monitor_rabbitmq/#service","text":"$ kubectl get svc -n integration701 | grep rab prometheus-rabbitmq-exporter-ha ClusterIP 100.68.97.158 <none> 9419/TCP 44d prometheus-rabbitmq-exporter-transient ClusterIP 100.69.144.253 <none> 9419/TCP 44d rabbitmq-exporter-ha ClusterIP 100.65.251.106 <none> 9419/TCP 66d rabbitmq-exporter-transient ClusterIP 100.66.131.184 <none> 9419/TCP 66d rabbitmq-ha ClusterIP 100.71.17.211 <none> 15672/TCP,5672/TCP 65d rabbitmq-transient ClusterIP 100.71.81.171 <none> 15672/TCP,5672/TCP 65d","title":"\u67e5\u770b Service"},{"location":"chap6/31Prometheus_Monitor_rabbitmq/#monitoringkube-prometheusprometheus-rulesyaml","text":"","title":"monitoring/kube-prometheus/prometheus-rules.yaml"},{"location":"chap6/31Prometheus_Monitor_rabbitmq/#reference","text":"alerts.yaml","title":"Reference"},{"location":"chap6/31Prometheus_Monitor_rabbitmq/#jam-rabbitmq-ha-rules","text":"rabbitmq-ha-rules.yaml apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: rabbitmq-ha-rules namespace: monitoring spec: groups: - name: rabbitmq-ha.rules rules: - alert: RabbitMqHaClusterNodeDown expr: rabbitmq_up{service=\"prometheus-rabbitmq-exporter-ha\"} == 0 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] Rabbitmq down (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}}/{{$labels.pod}} is down\" - alert: RabbitMqHaClusterNotAllNodesRunning expr: rabbitmq_running{service=\"prometheus-rabbitmq-exporter-ha\"} < kube_statefulset_replicas{namespace=~\"^(jam|integration|stage|dev).*\", statefulset=~\"rabbitmq-ha\"} for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] Some RabbitMQ-HA Cluster Nodes Are Down in Service (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"Some RabbitMQ-HA cluster nodes are down, currently running with VALUE = {{$value}}\" - alert: RabbitMqHaClusterPartition expr: rabbitmq_partitions{service=\"prometheus-rabbitmq-exporter-ha\"} > 0 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] Cluster Partition Error (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA either some nodes are down or the cluster has partitioned with VALUE = {{$value}}\" - alert: RabbitMqHaExchangeStatus expr: rabbitmq_exchangesTotal{service=\"prometheus-rabbitmq-exporter-ha\"} == 0 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] Cluster Exchange are Missing (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"The count of RabbitMQ-HA cluster exchange is VALUE = {{$value}}\" - alert: RabbitMqHaQueueStatus expr: rabbitmq_queuesTotal{service=\"prometheus-rabbitmq-exporter-ha\"} == 0 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] Cluster Queues are Missing (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"The count of RabbitMQ-HA cluster queue is VALUE = {{$value}}\" - alert: RabbitMqHaDiskSpaceAlarm expr: rabbitmq_node_disk_free_alarm{service=\"prometheus-rabbitmq-exporter-ha\"} == 1 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] RabbitMQ-HA is Out of Disk Space (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}} / {{$labels.pod}} Disk Space Alarm is going off. Which means the node hit highwater mark and has cut off network connectivity, see RabbitMQ WebUI\" - alert: RabbitMqHaMemoryAlarm expr: rabbitmq_node_mem_alarm{service=\"prometheus-rabbitmq-exporter-ha\"} == 1 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] RabbitMQ-HA is Out of Memory (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}} / {{$labels.pod}} High Memory Alarm is going off. Which means the node hit highwater mark and has cut off network connectivity, see RabbitMQ WebUI\" - alert: RabbitMqHaMemoryUsageHigh expr: (rabbitmq_node_mem_used{service=\"prometheus-rabbitmq-exporter-ha\"} / rabbitmq_node_mem_limit{service=\"prometheus-rabbitmq-exporter-ha\"} ) * 100 > 90 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] RabbitMQ-HA Node > 90% Memory Usage (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}} / {{$labels.pod}} Memory Usage > 90%\" - alert: RabbitMqHaFileDescriptorsLow expr: (rabbitmq_fd_used{service=\"prometheus-rabbitmq-exporter-ha\"} / rabbitmq_fd_total{service=\"prometheus-rabbitmq-exporter-ha\"}) * 100 > 90 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"RabbitMQ-HA Low File Descriptor Available (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}} / {{$labels.pod}} File Descriptor Usage > 90%\" - alert: RabbitMqHaDiskSpaceLow expr: predict_linear(rabbitmq_node_disk_free{service=\"prometheus-rabbitmq-exporter-ha\"}[15m], 1 * 60 * 60) < rabbitmq_node_disk_free_limit{service=\"prometheus-rabbitmq-exporter-ha\"} for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] RabbitMQ-HA is Low on Disk Space and will Run Out in the next hour (Detected by Service {{$labels.service}} and Exporter {{$labels.pod}})\" description: \"RabbitMQ-HA {{$labels.namespace}} / {{$labels.pod}} will hit disk limit in the next hr based on last 15 mins trend.\" - alert: RabbitMqHaNoConsumer expr: rabbitmq_queue_consumers{service=\"prometheus-rabbitmq-exporter-ha\"} == 0 for: 5m labels: severity: critical job: rabbitmq-ha annotations: summary: \"[highly_available] No Consumer Existing for Queues in RabbitMQ-HA (instance {{$labels.instance}})\" description: \"RabbitMQ-HA Queues has no consumers exist for {{$labels.queue}}\"","title":"Jam rabbitmq-ha-rules"},{"location":"chap6/33Prometheus_Monitor_memcached/","text":"Chap5 Prometheus Operator Monitor on Memcached Reference Memcached Exporter for Prometheus(docker) Helm stable/memcached Check stable monitor way from offical helm template memcached > memcached-stable.yaml --- # Source: memcached/templates/svc.yaml apiVersion: v1 kind: Service metadata: name: RELEASE-NAME-memcached namespace: default ... spec: clusterIP: None ports: - name: memcache port: 11211 targetPort: memcache - name: metrics ### Port for memcache metrics port: 9150 targetPort: metrics selector: app.kubernetes.io/name: memcached app.kubernetes.io/instance: RELEASE-NAME --- # Source: memcached/templates/statefulset.yaml apiVersion: apps/v1 kind: StatefulSet metadata: name: RELEASE-NAME-memcached namespace: default ... containers: - name: RELEASE-NAME-memcached image: memcached:1.5.20 imagePullPolicy: \"\" securityContext: runAsUser: 1001 command: - memcached - -m 64 - -o - modern - -v ports: - name: memcache containerPort: 11211 livenessProbe: tcpSocket: port: memcache initialDelaySeconds: 30 timeoutSeconds: 5 readinessProbe: tcpSocket: port: memcache initialDelaySeconds: 5 timeoutSeconds: 1 resources: requests: cpu: 50m memory: 64Mi - name: metrics image: quay.io/prometheus/memcached-exporter:v0.6.0 imagePullPolicy: \"\" securityContext: runAsUser: 1001 ports: - name: metrics containerPort: 9150 resources: {} ... --- # Source: memcached/templates/servicemonitor.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: RELEASE-NAME-memcached namespace: default labels: app.kubernetes.io/name: memcached helm.sh/chart: memcached-3.2.3 app.kubernetes.io/instance: RELEASE-NAME app.kubernetes.io/version: \"1.5.20\" app.kubernetes.io/managed-by: Helm spec: selector: matchLabels: app.kubernetes.io/name: memcached app.kubernetes.io/instance: RELEASE-NAME endpoints: - port: metrics interval: 15s --- # Source: memcached/templates/pdb.yaml apiVersion: policy/v1beta1 kind: PodDisruptionBudget ... Enable Monitor on Memcached with Memcached metrics Install memcached-exporter as sidecar for jam memcached app pod Add new metrics port and label for memcached app service Create ServiceMonitor to fetched the data from memcached app service by selector Create Prometheusrules for Jam memcached Install memcached-exporter in memcached Deployment --- # ----- [ memcached ] -------------------- # apiVersion: apps/v1 kind: Deployment metadata: name: cache-memcached namespace: {{ .Values.jam.namespace }} spec: selector: matchLabels: app: memcached # has to match .spec.template.metadata.labels replicas: 1 revisionHistoryLimit: 3 template: metadata: labels: app: memcached # has to match .spec.selector.matchLabels scope: cache spec: containers: - name: memcached image: memcached:1.5-alpine args: [\"-p\", \"11211\", \"-l\", \"0.0.0.0:11211,0.0.0.0:11212\"] - name: memcached-metrics image: quay.io/prometheus/memcached-exporter:v0.6.0 ports: - name: metrics containerPort: 9150 - name: memcached-metrics image: quay.io/prometheus/memcached-exporter:v0.6.0 ports: - name: metrics containerPort: 9150 Add new metrics port and label for memcached app service # # Service heads for dependencies # --- # ----- [ memcached ] -------------------- # apiVersion: v1 kind: Service metadata: name: memcached namespace: {{ .Values.jam.namespace }} labels: app: memcached component: memcached-metrics spec: selector: app: memcached scope: cache ports: - name: memcached protocol: TCP port: 11211 targetPort: 11211 - name: memcached-img protocol: TCP port: 11212 targetPort: 11212 - name: memcached-metrics port: 9150 targetPort: metrics ... labels: app: memcached component: memcached-metrics ... spec: selector: app: memcached scope: cache ports: ... - name: memcached-metrics port: 9150 targetPort: metrics Upgrade helm chart $ helm upgrade jam-ct-memcached helm/jam/memcached/ -f instances/$JAM_INSTANCE-k8s.yaml --namespace $JAM_INSTANCE $ kubectl get svc -n dev902 --show-labels | grep mem doc-memcached ClusterIP 100.70.244.225 <none> 11211/TCP,11212/TCP 36d app=memcached memcached ClusterIP 100.69.109.250 <none> 11211/TCP,11212/TCP,9150/TCP 36d app=memcached,component=memcached-metrics memcached-opensocial ClusterIP 100.68.136.232 <none> 11211/TCP,11212/TCP 36d app=memcached Note, I don't konw why my metric works or not Therefore, exec in a pod and curl the metrics port to verify $ kubectl exec -it ps-7bcbd5fcd9-cb8dq -n dev902 sh $ sh-4.2# curl http://100.69.109.250:9150 <html> <head><title>Memcached Exporter</title></head> <body> <h1>Memcached Exporter</h1> <p><a href='/metrics'>Metrics</a></p> </body> </html>sh-4.2# ### Looks like it works, let's curl the metrics out h-4.2# curl http://100.69.109.250:9150/metrics # HELP go_gc_duration_seconds A summary of the GC invocation durations. # TYPE go_gc_duration_seconds summary go_gc_duration_seconds{quantile=\"0\"} 0 go_gc_duration_seconds{quantile=\"0.25\"} 0 go_gc_duration_seconds{quantile=\"0.5\"} 0 go_gc_duration_seconds{quantile=\"0.75\"} 0 go_gc_duration_seconds{quantile=\"1\"} 0 go_gc_duration_seconds_sum 0 go_gc_duration_seconds_count 0 ... promhttp_metric_handler_requests_total{code=\"200\"} 0 promhttp_metric_handler_requests_total{code=\"500\"} 0 promhttp_metric_handler_requests_total{code=\"503\"} 0 Create ServiceMonitor apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: memcached labels: prometheus: kube-prometheus spec: selector: # note, this matches on the service, not the deployment or pod matchLabels: app: memcached component: memcached-metrics jobLabel: app namespaceSelector: matchNames: - dev902 endpoints: - targetPort: metrics path: /metrics interval: 10s $ kubectl get ServiceMonitor NAME AGE ... memcached 26s ... Verify the ServiceMonitor works or not kubectl port-forward svc/prometheus-operated -n monitoring 9090:9090 Status -> targets Prometheusrules for Jam memcached apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: memcached-rules namespace: monitoring spec: groups: - name: cache-memcached.rules rules: - alert: CacheMemcahedDown annotations: description: Cache Memcached {{$labels.namespace}}/{{$labels.pod}} is down summary: 'Cache Memcached down (Detected by Service {{$labels.service}}' expr: memcached_up{service=\"memcached\"} == 0 for: 5m labels: job: cache-memcached severity: critical - name: doc-memcached.rules rules: - alert: DocMemcahedDown annotations: description: Doc Memcached {{$labels.namespace}}/{{$labels.pod}} is down summary: 'Doc Memcached down (Detected by Service {{$labels.service}}' expr: memcached_up{service=\"doc-memcached\"} == 0 for: 5m labels: job: doc-memcached severity: critical - name: opensocial-memcached.rules rules: - alert: OpensocialMemcahedDown annotations: description: Doc Memcached {{$labels.namespace}}/{{$labels.pod}} is down summary: 'Doc Memcached down (Detected by Service {{$labels.service}}' expr: memcached_up{service=\"memcached-opensocial\"} == 0 for: 5m labels: job: opensocial-memcached severity: critical","title":"Chap5 Prometheus Operator Monitor on Memcached"},{"location":"chap6/33Prometheus_Monitor_memcached/#chap5-prometheus-operator-monitor-on-memcached","text":"","title":"Chap5 Prometheus Operator Monitor on Memcached"},{"location":"chap6/33Prometheus_Monitor_memcached/#reference","text":"Memcached Exporter for Prometheus(docker) Helm stable/memcached","title":"Reference"},{"location":"chap6/33Prometheus_Monitor_memcached/#check-stable-monitor-way-from-offical","text":"helm template memcached > memcached-stable.yaml --- # Source: memcached/templates/svc.yaml apiVersion: v1 kind: Service metadata: name: RELEASE-NAME-memcached namespace: default ... spec: clusterIP: None ports: - name: memcache port: 11211 targetPort: memcache - name: metrics ### Port for memcache metrics port: 9150 targetPort: metrics selector: app.kubernetes.io/name: memcached app.kubernetes.io/instance: RELEASE-NAME --- # Source: memcached/templates/statefulset.yaml apiVersion: apps/v1 kind: StatefulSet metadata: name: RELEASE-NAME-memcached namespace: default ... containers: - name: RELEASE-NAME-memcached image: memcached:1.5.20 imagePullPolicy: \"\" securityContext: runAsUser: 1001 command: - memcached - -m 64 - -o - modern - -v ports: - name: memcache containerPort: 11211 livenessProbe: tcpSocket: port: memcache initialDelaySeconds: 30 timeoutSeconds: 5 readinessProbe: tcpSocket: port: memcache initialDelaySeconds: 5 timeoutSeconds: 1 resources: requests: cpu: 50m memory: 64Mi - name: metrics image: quay.io/prometheus/memcached-exporter:v0.6.0 imagePullPolicy: \"\" securityContext: runAsUser: 1001 ports: - name: metrics containerPort: 9150 resources: {} ... --- # Source: memcached/templates/servicemonitor.yaml apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: RELEASE-NAME-memcached namespace: default labels: app.kubernetes.io/name: memcached helm.sh/chart: memcached-3.2.3 app.kubernetes.io/instance: RELEASE-NAME app.kubernetes.io/version: \"1.5.20\" app.kubernetes.io/managed-by: Helm spec: selector: matchLabels: app.kubernetes.io/name: memcached app.kubernetes.io/instance: RELEASE-NAME endpoints: - port: metrics interval: 15s --- # Source: memcached/templates/pdb.yaml apiVersion: policy/v1beta1 kind: PodDisruptionBudget ...","title":"Check stable monitor way from offical"},{"location":"chap6/33Prometheus_Monitor_memcached/#enable-monitor-on-memcached-with-memcached-metrics","text":"Install memcached-exporter as sidecar for jam memcached app pod Add new metrics port and label for memcached app service Create ServiceMonitor to fetched the data from memcached app service by selector Create Prometheusrules for Jam memcached Install memcached-exporter in memcached Deployment --- # ----- [ memcached ] -------------------- # apiVersion: apps/v1 kind: Deployment metadata: name: cache-memcached namespace: {{ .Values.jam.namespace }} spec: selector: matchLabels: app: memcached # has to match .spec.template.metadata.labels replicas: 1 revisionHistoryLimit: 3 template: metadata: labels: app: memcached # has to match .spec.selector.matchLabels scope: cache spec: containers: - name: memcached image: memcached:1.5-alpine args: [\"-p\", \"11211\", \"-l\", \"0.0.0.0:11211,0.0.0.0:11212\"] - name: memcached-metrics image: quay.io/prometheus/memcached-exporter:v0.6.0 ports: - name: metrics containerPort: 9150 - name: memcached-metrics image: quay.io/prometheus/memcached-exporter:v0.6.0 ports: - name: metrics containerPort: 9150 Add new metrics port and label for memcached app service # # Service heads for dependencies # --- # ----- [ memcached ] -------------------- # apiVersion: v1 kind: Service metadata: name: memcached namespace: {{ .Values.jam.namespace }} labels: app: memcached component: memcached-metrics spec: selector: app: memcached scope: cache ports: - name: memcached protocol: TCP port: 11211 targetPort: 11211 - name: memcached-img protocol: TCP port: 11212 targetPort: 11212 - name: memcached-metrics port: 9150 targetPort: metrics ... labels: app: memcached component: memcached-metrics ... spec: selector: app: memcached scope: cache ports: ... - name: memcached-metrics port: 9150 targetPort: metrics Upgrade helm chart $ helm upgrade jam-ct-memcached helm/jam/memcached/ -f instances/$JAM_INSTANCE-k8s.yaml --namespace $JAM_INSTANCE $ kubectl get svc -n dev902 --show-labels | grep mem doc-memcached ClusterIP 100.70.244.225 <none> 11211/TCP,11212/TCP 36d app=memcached memcached ClusterIP 100.69.109.250 <none> 11211/TCP,11212/TCP,9150/TCP 36d app=memcached,component=memcached-metrics memcached-opensocial ClusterIP 100.68.136.232 <none> 11211/TCP,11212/TCP 36d app=memcached Note, I don't konw why my metric works or not Therefore, exec in a pod and curl the metrics port to verify $ kubectl exec -it ps-7bcbd5fcd9-cb8dq -n dev902 sh $ sh-4.2# curl http://100.69.109.250:9150 <html> <head><title>Memcached Exporter</title></head> <body> <h1>Memcached Exporter</h1> <p><a href='/metrics'>Metrics</a></p> </body> </html>sh-4.2# ### Looks like it works, let's curl the metrics out h-4.2# curl http://100.69.109.250:9150/metrics # HELP go_gc_duration_seconds A summary of the GC invocation durations. # TYPE go_gc_duration_seconds summary go_gc_duration_seconds{quantile=\"0\"} 0 go_gc_duration_seconds{quantile=\"0.25\"} 0 go_gc_duration_seconds{quantile=\"0.5\"} 0 go_gc_duration_seconds{quantile=\"0.75\"} 0 go_gc_duration_seconds{quantile=\"1\"} 0 go_gc_duration_seconds_sum 0 go_gc_duration_seconds_count 0 ... promhttp_metric_handler_requests_total{code=\"200\"} 0 promhttp_metric_handler_requests_total{code=\"500\"} 0 promhttp_metric_handler_requests_total{code=\"503\"} 0","title":"Enable Monitor on Memcached with Memcached metrics"},{"location":"chap6/33Prometheus_Monitor_memcached/#create-servicemonitor","text":"apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: memcached labels: prometheus: kube-prometheus spec: selector: # note, this matches on the service, not the deployment or pod matchLabels: app: memcached component: memcached-metrics jobLabel: app namespaceSelector: matchNames: - dev902 endpoints: - targetPort: metrics path: /metrics interval: 10s $ kubectl get ServiceMonitor NAME AGE ... memcached 26s ...","title":"Create ServiceMonitor"},{"location":"chap6/33Prometheus_Monitor_memcached/#verify-the-servicemonitor-works-or-not","text":"kubectl port-forward svc/prometheus-operated -n monitoring 9090:9090 Status -> targets","title":"Verify the ServiceMonitor works or not"},{"location":"chap6/33Prometheus_Monitor_memcached/#prometheusrules-for-jam-memcached","text":"apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: labels: prometheus: k8s role: alert-rules name: memcached-rules namespace: monitoring spec: groups: - name: cache-memcached.rules rules: - alert: CacheMemcahedDown annotations: description: Cache Memcached {{$labels.namespace}}/{{$labels.pod}} is down summary: 'Cache Memcached down (Detected by Service {{$labels.service}}' expr: memcached_up{service=\"memcached\"} == 0 for: 5m labels: job: cache-memcached severity: critical - name: doc-memcached.rules rules: - alert: DocMemcahedDown annotations: description: Doc Memcached {{$labels.namespace}}/{{$labels.pod}} is down summary: 'Doc Memcached down (Detected by Service {{$labels.service}}' expr: memcached_up{service=\"doc-memcached\"} == 0 for: 5m labels: job: doc-memcached severity: critical - name: opensocial-memcached.rules rules: - alert: OpensocialMemcahedDown annotations: description: Doc Memcached {{$labels.namespace}}/{{$labels.pod}} is down summary: 'Doc Memcached down (Detected by Service {{$labels.service}}' expr: memcached_up{service=\"memcached-opensocial\"} == 0 for: 5m labels: job: opensocial-memcached severity: critical","title":"Prometheusrules for Jam memcached"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/","text":"\u5e94\u7528\u8fdb\u884c\u81ea\u5b9a\u4e49\u6307\u6807\u6269\u7f29\u5bb9 by Prometheus-Adapter and Flask-Exporter 1 \u73af\u5883\u51c6\u5907 1.10.0+ \u7248\u672c\u7684 Kubernetes \u96c6\u7fa4 \u53ef\u4ee5\u8bbf\u95ee\u96c6\u7fa4\u7684\u8282\u70b9\u4e0a\u5b89\u88c5 Helm \u548c Kubectl \u5de5\u5177 \u5728\u96c6\u7fa4\u4e2d\u521d\u59cb\u5316\u4e86 Helm 2 Clone \u9879\u76ee \u672c\u6587\u4f7f\u7528\u5230\u7684\u76f8\u5173\u4ee3\u7801\u90fd\u7edf\u4e00\u653e\u7f6e\u5230\u4e86 GitHub \u4e0a\uff0c Clone \u4ee3\u7801\u5230\u672c\u5730\uff1a $ git clone https://github.com/cnych/k8s-prometheus-custom-scaling.git $ cd k8s-prometheus-custom-scaling \u6211\u4eec\u53ef\u4ee5\u5148\u6765\u770b\u4e00\u4e0b\u5c06\u8981\u6269\u5bb9\u7684\u5e94\u7528\u3002\u662f\u4f7f\u7528 Flask \u4f5c\u4e3a\u540e\u7aef React \u4f5c\u4e3a\u524d\u7aef\u7684\u4e00\u4e2a\u9879\u76ee\uff0c\u53e6\u5916\u8fd8\u4f7f\u7528\u4e86 Flask Promethues Exporter \u8fd9\u4e2a\u7b2c\u4e09\u65b9\u5e93\uff0c\u6838\u5fc3\u7684\u540e\u7aef\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a from flask import Flask, render_template from prometheus_flask_exporter.multiprocess import GunicornInternalPrometheusMetrics application = Flask(__name__, static_folder=\"./public\", template_folder=\"./templates\") metrics = GunicornInternalPrometheusMetrics(application) @application.route(\"/\") def index(): return render_template(\"index.html\") @application.route(\"/click-button\", methods=[\"POST\"]) @metrics.counter(\"demo_app_button_clicks\", \"Number of button presses by user\") def web_button(): return {} \u6211\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u5148\u4f7f\u7528 docker-compose \u6765\u8fd0\u884c\u8be5\u5e94\u7528\uff1a $ docker-compose up -d \u62a5\u9519\u4e86 ... npm WARN npm npm does not support Node.js v10.15.2 npm WARN npm You should probably upgrade to a newer version of node as we npm WARN npm can't make any promises that npm will work with this version. npm WARN npm Supported releases of Node.js are the latest release of 4, 6, 7, 8, 9. npm WARN npm You can find the latest version at https://nodejs.org/ ... \u4fee\u6539 Dockerfile \u4e86 FROM ubuntu:19.04 RUN apt-get update RUN apt-get install -y python python-pip RUN apt-get install -y npm nodejs COPY . /app RUN pip install -r /app/requirements.txt RUN npm install npm@latest -g # update npm tp the latest version RUN npm install --prefix /app/demo_app/src --no-package-lock RUN npm run-script build --prefix /app/demo_app/src WORKDIR /app/demo_app ENV prometheus_multiproc_dir /tmp EXPOSE 8000 CMD [ \"gunicorn\", \"-c\", \"config.py\", \"-w\", \"4\", \"-b\", \"0.0.0.0:8000\", \"server\"] \u542f\u52a8\u540e\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 localhost:8000 \u6765\u8bbf\u95ee\u6211\u4eec\u7684\u5e94\u7528\uff1a \u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 Web \u5e94\u7528\uff0c\u70b9\u51fb Hit me! \u6309\u94ae\u4f1a\u5411\u7f51\u7ad9\u7684\u4e00\u4e2a\u670d\u52a1\u7aef\u70b9\u53d1\u8d77\u4e00\u4e2a POST \u8bf7\u6c42\uff0c\u8be5\u7aef\u70b9\u4e0a\u7684 Promethues \u88c5\u9970\u5668\u4f1a\u5c06\u8be5\u8bf7\u6c42\u8bb0\u5f55\u4e0b\u6765\u3002 \u6bcf\u6b21\u63a5\u6536\u5230 POST \u8bf7\u6c42\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f1a\u589e\u52a0\u4e00\u4e2a Prometheus Counter \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e94\u7528\u7684 /metrics \u63a5\u53e3\u6765\u83b7\u53d6\u6307\u6807\u6570\u636e\uff0c\u6700\u7ec8\u6211\u4eec\u4f1a\u5c06\u8be5\u63a5\u53e3\u914d\u7f6e\u5230 Prometheus \u4e2d\u5b9a\u671f\u6293\u53d6\u6307\u6807\u6570\u636e\u3002 $ curl -s localhost:8000/metrics | grep demo_app_button_clicks # HELP demo_app_button_clicks_total Multiprocess metric # TYPE demo_app_button_clicks_total counter demo_app_button_clicks_total 0.0 Prometheus Counter\uff08\u8ba1\u6570\u5668\uff09 \u53ea\u4f1a\u589e\u52a0\uff1a\u6c38\u8fdc\u4e0d\u4f1a\u51cf\u5c11\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9875\u9762\u4e0a\u70b9\u51fb\u4e0b\u6309\u94ae\uff0c\u7136\u540e\u518d\u6765\u770b\u4e0b\u6307\u6807\u6570\u636e\u7684\u53d8\u5316\uff0c\u6b63\u5e38\u6765\u8bf4\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u4fe1\u606f\uff1a $ curl -s localhost:8000/metrics | grep demo_app_button_clicks # HELP demo_app_button_clicks_total Multiprocess metric # TYPE demo_app_button_clicks_total counter demo_app_button_clicks_total 3.0 2 \u5b89\u88c5 Prometheus Operator \u6211\u4eec\u8fd9\u91cc\u6765\u4f7f\u7528 Prometheus Operator \uff0c\u8fd9\u4e2a Operator \u901a\u8fc7\u62bd\u8c61\u5316 Prometheus \u7684\u90e8\u7f72\u6765\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u52a0\u7b80\u5355\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u4f7f\u7528 Prometheus\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u5728 kube-ops \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5b89\u88c5 Prometheus Operator \uff1a helm install stable/prometheus-operator -f helm-values/prometheus-operator-values.yml -n prome-demo --namespace kube-ops NAME: prome-demo LAST DEPLOYED: Mon Nov 18 16:19:55 2019 NAMESPACE: kube-ops STATUS: DEPLOYED RESOURCES: ==> v1/ClusterRole NAME AGE prome-demo-grafana-clusterrole 35s prome-demo-prometheus-oper-operator 35s prome-demo-prometheus-oper-operator-psp 35s prome-demo-prometheus-oper-prometheus 35s prome-demo-prometheus-oper-prometheus-psp 35s psp-prome-demo-kube-state-metrics 35s psp-prome-demo-prometheus-node-exporter 35s ... NOTES: The Prometheus Operator has been installed. Check its status by running: kubectl --namespace kube-ops get pods -l \"release=prome-demo\" Visit https://github.com/coreos/prometheus-operator for instructions on how to create & configure Alertmanager and Prometheus instances using the Operator. \u5728\u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684\u63d0\u793a\u547d\u4ee4\u6765\u67e5\u770b Pod \u7684\u72b6\u6001\uff1a $ kubectl --namespace kube-ops get pods -l \"release=prome-demo\" NAME READY STATUS RESTARTS AGE prome-demo-grafana-6c774cf988-d9dct 2/2 Running 0 23h prome-demo-prometheus-node-exporter-srkr6 1/1 Running 0 23h prome-demo-prometheus-oper-operator-6f74cf9578-whvdx 2/2 Running 0 23h \u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898 psp Configuration $ kubectl --namespace kube-ops get pods -l \"release=prome-demo\" NAME READY STATUS RESTARTS AGE prome-demo-grafana-944f89874-kf8nt 0/2 Init:Blocked 0 10m \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5927\u90e8\u5206 Pod \u90fd\u6b63\u5e38\u4e86\uff0c\u4f46\u662f grafana \u8fd9\u4e2a Pod \u73b0\u5728\u662f\u5904\u4e8e Init:Blocked \u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl describe \u547d\u4ee4\u67e5\u770b\u4e0b Pod \u7684\u8fd0\u884c\u4e8b\u4ef6\uff1a $ kubectl describe pod prome-demo-grafana-944f89874-kf8nt -n kube-ops Name: prome-demo-grafana-944f89874-kf8nt Namespace: kube-ops Priority: 0 PriorityClassName: <none> Node: ydzs-node2/10.151.30.23 Start Time: Fri, 27 Sep 2019 09:02:42 +0800 Labels: app=grafana pod-template-hash=944f89874 release=prome-demo Annotations: checksum/config: 062340540c04487760c6487c9c4195fdca5ed6521330d6b842b61f3964fcabe4 checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b checksum/sc-dashboard-provider-config: 511400f9e888cb5ae2906a914e06cbdcb1f19904cf150384c0bb9831723bee45 checksum/secret: 5bf8b81f17dbd08ebd81e7e67fd393d5936aeadf8285480e899cd28a92267890 container.apparmor.security.beta.kubernetes.io/grafana: runtime/default container.apparmor.security.beta.kubernetes.io/grafana-sc-dashboard: runtime/default container.apparmor.security.beta.kubernetes.io/grafana-sc-datasources: runtime/default kubernetes.io/psp: prome-demo-grafana seccomp.security.alpha.kubernetes.io/pod: docker/default Status: Pending Reason: AppArmor Message: Cannot enforce AppArmor: AppArmor is not enabled on the host IP: Controlled By: ReplicaSet/prome-demo-grafana-944f89874 ...... \u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u5176\u4e2d\u6709\u4e00\u53e5 Cannot enforce AppArmor: AppArmor is not enabled on the host \u8fd9\u6837\u7684 Message \u4fe1\u606f \uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u96c6\u7fa4\u4e2d\u5f00\u542f\u4e86 PSP \u5b89\u5168\u7b56\u7565\uff0c\u800c\u6211\u4eec\u4f7f\u7528 Helm \u5b89\u88c5 Prometheus Operator \u7684\u65f6\u5019\uff0c\u4f1a\u7ed9\u6211\u4eec\u6dfb\u52a0\u4e0a\u4e00\u4e9b PSP \u5bf9\u8c61\uff1a $ kubectl get psp -l release=prome-demo NAME PRIV CAPS SELINUX RUNASUSER FSGROUP SUPGROUP READONLYROOTFS VOLUMES prome-demo-grafana false RunAsAny RunAsAny RunAsAny RunAsAny false configMap,emptyDir,projected,secret,downwardAPI,persistentVolumeClaim prome-demo-grafana-test false RunAsAny RunAsAny RunAsAny RunAsAny false configMap,downwardAPI,emptyDir,projected,secret prome-demo-prometheus-node-exporter false RunAsAny RunAsAny MustRunAs MustRunAs false configMap,emptyDir,projected,secret,downwardAPI,persistentVolumeClaim,hostPath prome-demo-prometheus-oper-operator false RunAsAny RunAsAny MustRunAs MustRunAs false configMap,emptyDir,projected,secret,downwardAPI,persistentVolumeClaim prome-demo-prometheus-oper-prometheus false RunAsAny RunAsAny MustRunAs MustRunAs false configMap,emptyDir,projected,secret,downwardAPI,persistentVolumeClaim \u6211\u4eec\u53ef\u4ee5\u7f16\u8f91 prome-demo-grafana \u8fd9\u4e2a PSP \u5bf9\u8c61 \uff1a $ kubectl edit psp prome-demo-grafana \u7531\u4e8e\u6211\u4eec\u96c6\u7fa4\u4e2d\u6ca1\u6709\u5b89\u88c5 apparmor \uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5c06 annotations \u5f53\u4e2d\u7684\u4e24\u884c\u6570\u636e\u5220\u9664\u5373\u53ef\uff1a apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default 3 \u6269\u5bb9 3-1 \u90e8\u7f72\u5e94\u7528\u5230\u96c6\u7fa4\u4e2d \u5728\u6211\u4eec\u7684\u4ee3\u7801\u76ee\u5f55\u4e0b\u9762\u6267\u884c\u4e0b\u9762\u7684\u90e8\u7f72\u547d\u4ee4\uff1a $ kubectl apply -f manifests/deployment.yml -f manifests/service.yml -f manifests/ingress.yml deployment.apps/prometheus-demo-app created service/prometheus-demo-app created \u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u6211\u4eec\u5e94\u7528\u7684 Deployment \u548c Service \u8d44\u6e90\u5bf9\u8c61\u5230\u6211\u4eec\u96c6\u7fa4\u4e2d\uff0c \u6b64\u5916\uff0c\u8fd8\u5305\u62ec\u4e00\u4e2a Ingress \u8d44\u6e90\u5bf9\u8c61\uff0c\u7528\u6765\u66b4\u9732\u7ed9\u5916\u90e8\u7528\u6237\u4f7f\u7528\u7684\u3002 manifests/ingress.yml \u5916\u90e8\u670d\u52a1\u53d1\u73b0\u4e4b ingress(\u4e00) nginx-ingress \u7684\u5b89\u88c5\u4f7f\u7528 apiVersion: networking.k8s.io/v1beta1 kind: Ingress metadata: name: prometheus-demo-app spec: rules: - host: prom-demo.ny152.com http: paths: - path: / backend: serviceName: prometheus-demo-app servicePort: 8080 # apiVersion: traefik.containo.us/v1alpha1 # kind: IngressRoute # metadata: # name: prometheus-demo-app # spec: # entryPoints: # - web # routes: # - match: Host(`prom-demo.ny152.com`) #\u6ce8\u610f\u4fee\u6539 # kind: Rule # services: # - name: prometheus-demo-app # port: 8080 \u7136\u540e\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee Prometheus \u7684 Dashboard \uff0c\u6211\u4eec\u5c06\u90e8\u7f72\u7684 Prometheus \u7684 Service \u6539\u6210 NodePort \u7c7b\u578b\uff1a $ kubectl edit svc prome-demo-prometheus-oper-prometheus -n kube-ops # \u5c06 spec.type \u6539\u6210 NodePort $ kubectl get svc -n kube-ops -l release=prome-demo NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prome-demo-grafana NodePort 10.106.151.204 <none> 80:31310/TCP 23h prome-demo-prometheus-node-exporter ClusterIP 10.111.181.43 <none> 9100/TCP 23h prome-demo-prometheus-oper-operator ClusterIP 10.110.17.60 <none> 8080/TCP,443/TCP 23h prome-demo-prometheus-oper-prometheus NodePort 10.107.93.192 <none> 9090:31339/TCP 23h \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 http://NodeIP:31339 \u6765\u8bbf\u95ee\u6211\u4eec\u7684 Prometheus \u9875\u9762\u4e86\uff0c\u5207\u6362\u5230 /targets \u9875\u9762\u4e0b\u9762\uff0c\u5c31\u4f1a\u770b\u5230\u6b63\u5728\u76d1\u63a7\u7684\u7aef\u70b9\u5217\u8868\u4e86\uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u5b89\u88c5 Prometheus Operator \u7684 CRD \u63a7\u5236\u5668 \uff0c\u5f53\u7136\u53ef\u80fd\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6709\u4e00\u4e9b\u76d1\u63a7\u6570\u636e\u6709\u95ee\u9898\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u6211\u4eec\u6839\u636e\u81ea\u5df1\u96c6\u7fa4\u7684\u5b9e\u9645\u60c5\u51b5\u53bb\u505a\u5bf9\u5e94\u7684\u8c03\u6574\u4e86\uff1a \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u90e8\u7f72\u6211\u4eec\u81ea\u5df1\u7684\u5e94\u7528\u76d1\u63a7\uff0c\u8ba9 Proemthues \u4e5f\u53ef\u4ee5\u6293\u53d6\u5230\u6211\u4eec\u81ea\u5df1\u7684\u5e94\u7528\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a $ kubectl apply -f manifests/service-monitor.yml servicemonitor.monitoring.coreos.com/prometheus-demo-app created \u8be5\u8d44\u6e90\u5bf9\u8c61\u5185\u5bb9\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684 ServiceMonitor \u5bf9\u8c61\uff0c ServiceMonitor \u662f Prometheus \u83b7\u53d6\u5e94\u7528\u76d1\u63a7\u6570\u636e\u7684\u4e00\u4e2a CRD \u5bf9\u8c61 \uff0c\u5bf9 ServiceMonitor \u4e0d\u591f\u719f\u6089\u7684\u53ef\u4ee5\u67e5\u770b\u6211\u4eec\u524d\u9762\u7684 Prometheus Operator \u7684\u76f8\u5173\u6587\u6863 apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: prometheus-demo-app namespace: kube-ops spec: endpoints: - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token interval: 15s port: web selector: matchLabels: app: prometheus-demo-app namespaceSelector: matchNames: - default \u8be5\u5bf9\u8c61\u901a\u77e5 Prometheus Operator \u914d\u7f6e\u8fd0\u884c\u4e2d\u7684 Prometheus \u5b9e\u4f8b\uff0c\u76d1\u542c\u5e26\u6709\u6807\u7b7e app=prometheus-demo-app \u7684\u670d\u52a1\u3002 \u73b0\u5728\u6211\u4eec\u518d\u53bb Prometheus \u7684\u9875\u9762\u4e0a\u9762\u67e5\u770b /targets \u9875\u9762\u5c31\u4f1a\u53d1\u73b0\u6211\u4eec\u7684\u5e94\u7528\u5df2\u7ecf\u914d\u7f6e\u5728\u91cc\u9762\u4e86\uff0c\u7136\u540e\u5728 Dashboard \u9875\u9762\u4e0a\u8f93\u5165\u4e0b\u9762\u7684 promql \u8bed\u53e5\uff1a demo_app_button_clicks_total \u8fd9\u4e2a\u6307\u6807\u5c31\u53cd\u5e94\u51fa\u4e86\u6211\u4eec\u5e94\u7528\u7a0b\u5e8f\u7684\u6240\u6709\u5b9e\u4f8b\u4e2d\u6309\u94ae\u7684\u603b\u5171\u70b9\u51fb\u6b21\u6570\u3002 4 \u6269\u5bb9 \u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a\u540d\u4e3a Prometheus Adapter for Kubernetes Metrics APIs \u7684 k8s \u7684 API \u6269\u5c55\u5e94\u7528\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684 Prometheus \u67e5\u8be2\u6765\u4f7f\u7528 k8s \u8d44\u6e90\u548c\u81ea\u5b9a\u4e49\u6307\u6807 API\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06 Prometheus-Adapter \u5b89\u88c5\u5230\u96c6\u7fa4\u4e2d\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u89c4\u5219\u6765\u8ddf\u8e2a\u6bcf\u4e2a Pod \u7684\u8bf7\u6c42\u3002\u89c4\u5219\u7684\u5b9a\u4e49\u6211\u4eec\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff0c\u6bcf\u4e2a\u89c4\u5219\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a4\u4e2a\u90e8\u5206\uff1a Discovery \uff1a\u5b83\u6307\u5b9a Adapter \u5e94\u8be5 \u5982\u4f55\u627e\u5230\u8be5\u89c4\u5219\u7684\u6240\u6709 Prometheus \u6307\u6807 Association \uff1a\u6307\u5b9a Adapter \u5e94\u8be5\u5982 \u4f55\u786e\u5b9a\u548c\u7279\u5b9a\u7684\u6307\u6807\u5173\u8054\u7684 Kubernetes \u8d44\u6e90 Naming \uff1a\u6307\u5b9a Adapter \u5e94\u8be5 \u5982\u4f55\u5728\u81ea\u5b9a\u4e49\u6307\u6807 API \u4e2d\u66b4\u9732\u6307\u6807 Querying \uff1a\u6307\u5b9a \u5982\u4f55\u5c06\u5bf9\u4e00\u4e2a\u83b7\u591a\u4e2a Kubernetes \u5bf9\u8c61\u4e0a\u7684\u7279\u5b9a\u6307\u6807\u7684\u8bf7\u6c42\u8f6c\u6362\u4e3a\u5bf9 Prometheus \u7684\u67e5\u8be2 \u4e0b\u9762\u6211\u4eec\u5c31\u6765\u7f16\u5199\u6211\u4eec\u81ea\u5df1\u7684\u89c4\u5219\uff0c\u9996\u5148\u6dfb\u52a0 rules \u719f\u6089\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\uff1a rules: [] 4-1 discover \u6211\u4eec\u8fd9\u91cc\u53ea\u9700\u8981\u53d1\u73b0\uff08 discover \uff09\u4e00\u4e2a\u6307\u6807 demo_app_button_clicks_total \uff0c\u6dfb\u52a0\u4e00\u4e2a\u975e\u7a7a\u7684 Pod \u6807\u7b7e\u5339\u914d\u6765\u8fc7\u6ee4\uff1a rules: - seriesQuery: 'demo_app_button_clicks_total{pod!=\"\"}' 4-2 Association \u5173\u8054\uff08 Association \uff09\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c Prometheus \u6807\u7b7e\u90fd\u76f4\u63a5\u6620\u5c04\u5230 Kubernetes \u8d44\u6e90\uff08 job \u3001 namespace \u3001 pod \u7b49\u7b49\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6a21\u677f\u6765\u9690\u5c04\u8d44\u6e90\uff1a rules: - seriesQuery: 'demo_app_button_clicks_total{pod!=\"\"}' resources: {template: \"<<.Resource>>\"} 4-3 naming \u6211\u4eec\u6f14\u793a\u5e94\u7528\u7684\u6309\u94ae\u70b9\u51fb\u603b\u548c\u5b9e\u9645\u4e0a\u7528\u5904\u4e0d\u5927\uff0c\u6211\u4eec\u9700\u8981\u6309\u7167\u6bcf\u4e2a Pod \u6765\u8fdb\u884c\u6269\u5bb9\uff0c\u7136\u540e\u5728\u89c4\u5219\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u540d\uff08 naming \uff09\u5b9a\u4e49\uff1a rules: - seriesQuery: 'demo_app_button_clicks_total{pod!=\"\"}' resources: {template: \"<<.Resource>>\"} name: matches: \"^(.*)_total\" as: \"${1}_per_second\" 4-4 Querying \u7136\u540e\u5c31\u53ef\u4ee5\u5b9a\u4e49\u67e5\u8be2\uff08 Querying \uff09\u4e86\uff1a seriesQuery: 'demo_app_button_clicks_total{pod!=\"\"}' resources: { template: \"<<.Resource>>\" } name: matches: \"^(.*)_total\" as: \"${1}_per_second\" metricsQuery: \"sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)\" \u8fd9\u662f\u4e00\u4e2a\u5e26\u53c2\u6570\u7684 Prometheus \u67e5\u8be2\uff0c\u5176\u4e2d\uff1a Series \u662f\u6709 seriesQuery \u5339\u914d\u7684\u4efb\u4f55 series \uff0c\u8be5\u89c4\u5219\u53ea\u6709\u4e00\u4e2a series \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06 demo_app_button_clicks+total \u66ff\u6362\u6210 <<.Series>> \u3002 <<.LabelMatchers>> \u662f adapter \u6765\u66ff\u6362\u6210\u6807\u7b7e\u67e5\u8be2\u7684\uff08\u6bd4\u5982\uff0c pod='deployment-name-abcd-1234\uff09 \u3002 <<.GroupBy>> \u8868\u793a\u6211\u4eec\u60f3\u8981\u6269\u5c55\u7684\u8d44\u6e90\uff0c\u6211\u4eec\u8fd9\u91cc\u5c31\u662f Pod \u4e86\u3002 Promethues-Adapter \u7684\u4e00\u4e2a\u7f3a\u70b9\u662f\u914d\u7f6e\u662f\u901a\u8fc7\u9759\u6001\u6587\u4ef6\u548c\u5e94\u7528\u7a0b\u5e8f\u4e00\u8d77\u90e8\u7f72\u7684\uff0c\u800c\u4e0d\u662f\u901a\u8fc7 ConfigMap \u6216\u8005\u5176\u4ed6\u57fa\u4e8e API \u7684\u5bf9\u8c61\u6765\u914d\u7f6e\u7684 \uff0c \u6211\u4eec\u8fd9\u91cc\u5c06\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a Helm Chart \u6765\u90e8\u7f72\uff0c\u901a\u8fc7\u8986\u76d6 values \u6587\u4ef6\u6765\u914d\u7f6e\u89c4\u5219\u3002 values \u6587\u4ef6\u653e\u7f6e\u5728\u9879\u76ee\u76ee\u5f55 helm-values/prometheus-adapter-values.yml \uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a rules: default: false custom: - seriesQuery: 'demo_app_button_clicks_total' resources: { template: \"<<.Resource>>\" } name: matches: \"^(.*)_total\" as: \"${1}_per_second\" metricsQuery: \"sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)\" prometheus: url: http://prom-demo-prometheus-opera-prometheus.default \u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4e00\u952e\u5b89\u88c5\uff1a $ helm install stable/prometheus-adapter -n prome-adapter -f helm-values/prometheus-adapter-values.yml --namespace kube-ops LAST DEPLOYED: Fri Sep 27 10:54:56 2019 NAMESPACE: kube-ops STATUS: DEPLOYED RESOURCES: ...... NOTES: prome-adapter-prometheus-adapter has been deployed. In a few minutes you should be able to list metrics using the following command(s): kubectl get --raw /apis/custom.metrics.k8s.io/v1beta1 \u7b49\u4e00\u5c0f\u4f1a\u513f\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u68c0\u6d4b\u662f\u5426\u751f\u6548\u4e86\uff1a \u6b63\u5e38\u6765\u8bf4\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u4fe1\u606f\uff1a $ kubectl get --raw=\"/apis/custom.metrics.k8s.io/v1beta1\" | jq { \"kind\": \"APIResourceList\", \"apiVersion\": \"v1\", \"groupVersion\": \"custom.metrics.k8s.io/v1beta1\", \"resources\": [ { \"name\": \"jobs.batch/demo_app_button_clicks_per_second\", \"singularName\": \"\", \"namespaced\": true, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] }, { \"name\": \"namespaces/demo_app_button_clicks_per_second\", \"singularName\": \"\", \"namespaced\": false, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] }, { \"name\": \"pods/demo_app_button_clicks_per_second\", \"singularName\": \"\", \"namespaced\": true, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] }, { \"name\": \"services/demo_app_button_clicks_per_second\", \"singularName\": \"\", \"namespaced\": true, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] } ] } \u63a5\u4e0b\u6765\uff0c\u53ef\u4ee5\u83b7\u53d6\u6211\u4eec\u81ea\u5df1 Pod \u7684\u6307\u6807\u6570\u636e\uff1a $ kubectl get --raw=\"/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/*/demo_app_button_clicks_per_second?pod=$(kubectl get po -l app=prometheus-demo-app -o name)\" | jq \u6b63\u5e38\u4f1a\u8f93\u51fa\u5982\u4e0b\u6240\u793a\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a $ kubectl get --raw=\"/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/*/demo_a pp_button_clicks_per_second?pod=$(kubectl get po -l app=prometheus-demo-app -o name)\" | jq { \"kind\": \"MetricValueList\", \"apiVersion\": \"custom.metrics.k8s.io/v1beta1\", \"metadata\": { \"selfLink\": \"/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/%2A/demo_app_button_clicks_per_second\" }, \"items\": [ { \"describedObject\": { \"kind\": \"Pod\", \"namespace\": \"default\", \"name\": \"prometheus-demo-app-8585d447c6-77st2\", \"apiVersion\": \"/v1\" }, \"metricName\": \"demo_app_button_clicks_per_second\", \"timestamp\": \"2019-11-18T08:49:26Z\", \"value\": \"0\" } ] } \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u73b0\u5728\u7684 value \u503c\u4e3a 0 \uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u5f00\u59cb\u70b9\u51fb\u9875\u9762\u4e0a\u9762\u7684\u6309\u94ae\uff0c\u6240\u4ee5\u901f\u7387\u662f\u6bcf\u79d2\u4e3a 0 \u3002\u6211\u4eec\u4e0a\u9762\u90e8\u7f72\u5e94\u7528\u7684\u65f6\u5019\u521b\u5efa\u4e86\u4e00\u4e2a Ingress \u5bf9\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u57df\u540d\uff08\u505a\u597d DNS \u89e3\u6790\u540e\uff09\u76f4\u63a5\u8bbf\u95ee\u6211\u4eec\u7684\u5e94\u7528\uff0c\u7136\u540e\u70b9\u51fb\u9875\u9762\u4e0a\u9762\u7684\u6309\u94ae\u540e\uff0c\u91cd\u65b0\u6765\u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u901f\u7387\u4f1a\u589e\u52a0\u3002 \u8fd9\u91cc\u6211\u7528\u7684\u662f NodePort \u7684 $ kubectl edit svc prome-demo-prometheus-oper-prometheus -n kube-ops service/prome-demo-grafana edited $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prome-adapter-prometheus-adapter ClusterIP 10.98.162.83 <none> 443/TCP 17h prome-demo-grafana ClusterIP 10.106.151.204 <none> 80/TCP 17h prome-demo-kube-state-metrics ClusterIP 10.107.26.121 <none> 8080/TCP 17h prome-demo-prometheus-node-exporter ClusterIP 10.111.181.43 <none> 9100/TCP 17h prome-demo-prometheus-oper-operator ClusterIP 10.110.17.60 <none> 8080/TCP,443/TCP 17h prome-demo-prometheus-oper-prometheus NodePort 10.107.93.192 <none> 9090:31339/TCP 17h prometheus-operated ClusterIP None <none> 9090/TCP 17h http://127.0.0.1:31339 5 \u90e8\u7f72 HPA \u5bf9\u8c61 Pod \u6c34\u5e73\u81ea\u52a8\u4f38\u7f29\uff08 HPA \uff09\u53ef\u4ee5\u6839\u636e\u4e00\u4e9b\u7279\u5b9a\u6761\u4ef6\u6765\u81ea\u52a8\u6dfb\u52a0\u65b0\u7684 Pod \u5230 Deployment \u4e2d\u53bb\uff0c\u8fd9\u91cc\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a HPA \u5bf9\u8c61\uff0c \u8bbe\u5b9a\u76ee\u6807\u4e3a\u6bcf\u4e2a Pod \u6bcf\u79d2 0.01 \u6b21\u70b9\u51fb \u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u6d4b\u8bd5\u4e0b\u8ba9\u6211\u4eec\u7684\u5e94\u7528\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\uff0c\u9996\u5148\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u786e\u4fdd\u73b0\u5728\u53ea\u6709\u4e00\u4e2a Pod \u6b63\u5728\u8fd0\u884c\uff1a $ kubectl get po -l app=prometheus-demo-app NAME READY STATUS RESTARTS AGE prometheus-demo-app-8585d447c6-77st2 1/1 Running 0 23h \u7136\u540e\u521b\u5efa HPA \u5bf9\u8c61\uff0c\u5bf9\u8c61\u5bf9\u5e94\u7684\u8d44\u6e90\u6587\u4ef6\u4f4d\u4e8e\u4ee3\u7801\u6839\u76ee\u5f55\u4e0b\u9762 manifests/hpa.yaml \uff0c\u5b8c\u6574\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a kind: HorizontalPodAutoscaler apiVersion: autoscaling/v2beta1 metadata: name: prometheus-demo-app spec: scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: prometheus-demo-app # autoscale between 1 and 10 replicas minReplicas: 1 maxReplicas: 10 metrics: # use a \"Pods\" metric, which takes the average of the # given metric across all pods controlled by the autoscaling target - type: Pods pods: metricName: demo_app_button_clicks_per_second targetAverageValue: 10m \u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a $ kubectl apply -f manifests/hpa.yml horizontalpodautoscaler.autoscaling/prometheus-demo-app created \u7136\u540e\u91cd\u65b0\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6211\u4eec\u7684\u5e94\u7528\uff0c\u70b9\u51fb\u4e00\u4f1a\u513f\u9875\u9762\u4e0a\u9762\u7684\u6309\u94ae\uff0c\u7136\u540e\u91cd\u65b0\u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\uff0c\u6b63\u5e38\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684\u5e94\u7528\u7684 Deployment \u5c31\u5df2\u7ecf\u5f00\u59cb\u6269\u5bb9\u4e86\uff1a $ kubectl get po -l app=prometheus-demo-app NAME READY STATUS RESTARTS AGE prometheus-demo-app-8585d447c6-4sls9 1/1 Running 0 5m18s prometheus-demo-app-8585d447c6-77st2 1/1 Running 0 17h prometheus-demo-app-8585d447c6-8x59q 1/1 Running 0 5m18s prometheus-demo-app-8585d447c6-95vtx 1/1 Running 0 5m33s prometheus-demo-app-8585d447c6-dnklw 1/1 Running 0 5m3s prometheus-demo-app-8585d447c6-g9scp 1/1 Running 0 5m18s prometheus-demo-app-8585d447c6-kmkvk 1/1 Running 0 5m3s prometheus-demo-app-8585d447c6-rtf5x 1/1 Running 0 5m18s prometheus-demo-app-8585d447c6-stxpw 1/1 Running 0 5m33s prometheus-demo-app-8585d447c6-wtwv5 1/1 Running 0 5m33s \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6307\u6807\u6570\u636e\u5bf9\u5e94\u7528\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u7684\u64cd\u4f5c\u3002 6 \u5728 Grafana \u4e2d\u663e\u793a\u7f29\u653e\u6570\u636e \u8fd9\u90e8\u5206\u5185\u5bb9\u5176\u5b9e\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u53ea\u662f\u5355\u7eaf\u7684\u5728\u56fe\u8868\u4e0a\u5bf9\u6211\u4eec\u7684\u7f29\u653e\u6570\u636e\u8fdb\u884c\u5c55\u793a\uff0c\u8fd9\u53ef\u4ee5\u589e\u52a0\u6211\u4eec\u5bf9\u6574\u4e2a\u8fc7\u7a0b\u7684\u7406\u89e3\u3002 \u6211\u4eec\u5c06\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230\u7684 grafana \u7684 Dashboard \u6570\u636e\u653e\u7f6e\u5728\u4e86\u4ee3\u7801\u6839\u76ee\u5f55\u4e0b\u9762 manifests/ grafana-dashboard-configmap.yml \uff0c\u5148\u901a\u8fc7 ConfigMap \u6765\u521b\u5efa\u8fd9\u4e2a Dashboard \u6570\u636e\uff1a $ kubectl apply -f manifests/grafana-dashboard-configmap.yml \u540c\u6837\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u8bbf\u95ee\uff0c\u5c06 Prometheus Operator \u4e0d\u662f\u7684 grafana \u7684 Service \u66f4\u6539\u6210 NodePort \u7c7b\u578b\uff1a $ kubectl edit svc prome-demo-grafana -n kube-ops service/prome-demo-grafana edited $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes ClusterIP 10.96.0.1 <none> 443/TCP 6d5h prometheus-demo-app NodePort 10.108.214.168 <none> 8080:30062/TCP 23h \u8fd9\u4e2a\u65f6\u5019\u540c\u6837\u6211\u5c31\u53ef\u4ee5\u7528 http://NodeIP:30062 \u6765\u8bbf\u95ee grafana \u5e94\u7528\u4e86\u3002\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u4e3a admin \uff0c\u9ed8\u8ba4\u7684\u5bc6\u7801\u4e3a\uff1a prom-operator \uff0c\u8fdb\u5165\u9875\u9762\u540e\uff0c\u53ef\u4ee5\u9009\u62e9\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u7684 Prometheus Demo App Dashboard \u8fd9\u4e2a Dashboard \uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5e94\u7528\u5728\u6269\u7f29\u5bb9\u7684\u5b8c\u6574\u8fc7\u7a0b\uff1a","title":"\u5e94\u7528\u8fdb\u884c\u81ea\u5b9a\u4e49\u6307\u6807\u6269\u7f29\u5bb9 by Prometheus-Adapter and Flask-Exporter"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#by-prometheus-adapter-and-flask-exporter","text":"","title":"\u5e94\u7528\u8fdb\u884c\u81ea\u5b9a\u4e49\u6307\u6807\u6269\u7f29\u5bb9 by Prometheus-Adapter and Flask-Exporter"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#1","text":"1.10.0+ \u7248\u672c\u7684 Kubernetes \u96c6\u7fa4 \u53ef\u4ee5\u8bbf\u95ee\u96c6\u7fa4\u7684\u8282\u70b9\u4e0a\u5b89\u88c5 Helm \u548c Kubectl \u5de5\u5177 \u5728\u96c6\u7fa4\u4e2d\u521d\u59cb\u5316\u4e86 Helm","title":"1 \u73af\u5883\u51c6\u5907"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#2-clone","text":"\u672c\u6587\u4f7f\u7528\u5230\u7684\u76f8\u5173\u4ee3\u7801\u90fd\u7edf\u4e00\u653e\u7f6e\u5230\u4e86 GitHub \u4e0a\uff0c Clone \u4ee3\u7801\u5230\u672c\u5730\uff1a $ git clone https://github.com/cnych/k8s-prometheus-custom-scaling.git $ cd k8s-prometheus-custom-scaling \u6211\u4eec\u53ef\u4ee5\u5148\u6765\u770b\u4e00\u4e0b\u5c06\u8981\u6269\u5bb9\u7684\u5e94\u7528\u3002\u662f\u4f7f\u7528 Flask \u4f5c\u4e3a\u540e\u7aef React \u4f5c\u4e3a\u524d\u7aef\u7684\u4e00\u4e2a\u9879\u76ee\uff0c\u53e6\u5916\u8fd8\u4f7f\u7528\u4e86 Flask Promethues Exporter \u8fd9\u4e2a\u7b2c\u4e09\u65b9\u5e93\uff0c\u6838\u5fc3\u7684\u540e\u7aef\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a from flask import Flask, render_template from prometheus_flask_exporter.multiprocess import GunicornInternalPrometheusMetrics application = Flask(__name__, static_folder=\"./public\", template_folder=\"./templates\") metrics = GunicornInternalPrometheusMetrics(application) @application.route(\"/\") def index(): return render_template(\"index.html\") @application.route(\"/click-button\", methods=[\"POST\"]) @metrics.counter(\"demo_app_button_clicks\", \"Number of button presses by user\") def web_button(): return {} \u6211\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u5148\u4f7f\u7528 docker-compose \u6765\u8fd0\u884c\u8be5\u5e94\u7528\uff1a $ docker-compose up -d \u62a5\u9519\u4e86 ... npm WARN npm npm does not support Node.js v10.15.2 npm WARN npm You should probably upgrade to a newer version of node as we npm WARN npm can't make any promises that npm will work with this version. npm WARN npm Supported releases of Node.js are the latest release of 4, 6, 7, 8, 9. npm WARN npm You can find the latest version at https://nodejs.org/ ... \u4fee\u6539 Dockerfile \u4e86 FROM ubuntu:19.04 RUN apt-get update RUN apt-get install -y python python-pip RUN apt-get install -y npm nodejs COPY . /app RUN pip install -r /app/requirements.txt RUN npm install npm@latest -g # update npm tp the latest version RUN npm install --prefix /app/demo_app/src --no-package-lock RUN npm run-script build --prefix /app/demo_app/src WORKDIR /app/demo_app ENV prometheus_multiproc_dir /tmp EXPOSE 8000 CMD [ \"gunicorn\", \"-c\", \"config.py\", \"-w\", \"4\", \"-b\", \"0.0.0.0:8000\", \"server\"] \u542f\u52a8\u540e\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 localhost:8000 \u6765\u8bbf\u95ee\u6211\u4eec\u7684\u5e94\u7528\uff1a \u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 Web \u5e94\u7528\uff0c\u70b9\u51fb Hit me! \u6309\u94ae\u4f1a\u5411\u7f51\u7ad9\u7684\u4e00\u4e2a\u670d\u52a1\u7aef\u70b9\u53d1\u8d77\u4e00\u4e2a POST \u8bf7\u6c42\uff0c\u8be5\u7aef\u70b9\u4e0a\u7684 Promethues \u88c5\u9970\u5668\u4f1a\u5c06\u8be5\u8bf7\u6c42\u8bb0\u5f55\u4e0b\u6765\u3002 \u6bcf\u6b21\u63a5\u6536\u5230 POST \u8bf7\u6c42\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f1a\u589e\u52a0\u4e00\u4e2a Prometheus Counter \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e94\u7528\u7684 /metrics \u63a5\u53e3\u6765\u83b7\u53d6\u6307\u6807\u6570\u636e\uff0c\u6700\u7ec8\u6211\u4eec\u4f1a\u5c06\u8be5\u63a5\u53e3\u914d\u7f6e\u5230 Prometheus \u4e2d\u5b9a\u671f\u6293\u53d6\u6307\u6807\u6570\u636e\u3002 $ curl -s localhost:8000/metrics | grep demo_app_button_clicks # HELP demo_app_button_clicks_total Multiprocess metric # TYPE demo_app_button_clicks_total counter demo_app_button_clicks_total 0.0 Prometheus Counter\uff08\u8ba1\u6570\u5668\uff09 \u53ea\u4f1a\u589e\u52a0\uff1a\u6c38\u8fdc\u4e0d\u4f1a\u51cf\u5c11\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9875\u9762\u4e0a\u70b9\u51fb\u4e0b\u6309\u94ae\uff0c\u7136\u540e\u518d\u6765\u770b\u4e0b\u6307\u6807\u6570\u636e\u7684\u53d8\u5316\uff0c\u6b63\u5e38\u6765\u8bf4\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u4fe1\u606f\uff1a $ curl -s localhost:8000/metrics | grep demo_app_button_clicks # HELP demo_app_button_clicks_total Multiprocess metric # TYPE demo_app_button_clicks_total counter demo_app_button_clicks_total 3.0","title":"2 Clone \u9879\u76ee"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#2-prometheus-operator","text":"\u6211\u4eec\u8fd9\u91cc\u6765\u4f7f\u7528 Prometheus Operator \uff0c\u8fd9\u4e2a Operator \u901a\u8fc7\u62bd\u8c61\u5316 Prometheus \u7684\u90e8\u7f72\u6765\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u52a0\u7b80\u5355\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u4f7f\u7528 Prometheus\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u5728 kube-ops \u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5b89\u88c5 Prometheus Operator \uff1a helm install stable/prometheus-operator -f helm-values/prometheus-operator-values.yml -n prome-demo --namespace kube-ops NAME: prome-demo LAST DEPLOYED: Mon Nov 18 16:19:55 2019 NAMESPACE: kube-ops STATUS: DEPLOYED RESOURCES: ==> v1/ClusterRole NAME AGE prome-demo-grafana-clusterrole 35s prome-demo-prometheus-oper-operator 35s prome-demo-prometheus-oper-operator-psp 35s prome-demo-prometheus-oper-prometheus 35s prome-demo-prometheus-oper-prometheus-psp 35s psp-prome-demo-kube-state-metrics 35s psp-prome-demo-prometheus-node-exporter 35s ... NOTES: The Prometheus Operator has been installed. Check its status by running: kubectl --namespace kube-ops get pods -l \"release=prome-demo\" Visit https://github.com/coreos/prometheus-operator for instructions on how to create & configure Alertmanager and Prometheus instances using the Operator. \u5728\u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684\u63d0\u793a\u547d\u4ee4\u6765\u67e5\u770b Pod \u7684\u72b6\u6001\uff1a $ kubectl --namespace kube-ops get pods -l \"release=prome-demo\" NAME READY STATUS RESTARTS AGE prome-demo-grafana-6c774cf988-d9dct 2/2 Running 0 23h prome-demo-prometheus-node-exporter-srkr6 1/1 Running 0 23h prome-demo-prometheus-oper-operator-6f74cf9578-whvdx 2/2 Running 0 23h","title":"2 \u5b89\u88c5 Prometheus Operator"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#psp-configuration","text":"$ kubectl --namespace kube-ops get pods -l \"release=prome-demo\" NAME READY STATUS RESTARTS AGE prome-demo-grafana-944f89874-kf8nt 0/2 Init:Blocked 0 10m \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5927\u90e8\u5206 Pod \u90fd\u6b63\u5e38\u4e86\uff0c\u4f46\u662f grafana \u8fd9\u4e2a Pod \u73b0\u5728\u662f\u5904\u4e8e Init:Blocked \u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 kubectl describe \u547d\u4ee4\u67e5\u770b\u4e0b Pod \u7684\u8fd0\u884c\u4e8b\u4ef6\uff1a $ kubectl describe pod prome-demo-grafana-944f89874-kf8nt -n kube-ops Name: prome-demo-grafana-944f89874-kf8nt Namespace: kube-ops Priority: 0 PriorityClassName: <none> Node: ydzs-node2/10.151.30.23 Start Time: Fri, 27 Sep 2019 09:02:42 +0800 Labels: app=grafana pod-template-hash=944f89874 release=prome-demo Annotations: checksum/config: 062340540c04487760c6487c9c4195fdca5ed6521330d6b842b61f3964fcabe4 checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b checksum/sc-dashboard-provider-config: 511400f9e888cb5ae2906a914e06cbdcb1f19904cf150384c0bb9831723bee45 checksum/secret: 5bf8b81f17dbd08ebd81e7e67fd393d5936aeadf8285480e899cd28a92267890 container.apparmor.security.beta.kubernetes.io/grafana: runtime/default container.apparmor.security.beta.kubernetes.io/grafana-sc-dashboard: runtime/default container.apparmor.security.beta.kubernetes.io/grafana-sc-datasources: runtime/default kubernetes.io/psp: prome-demo-grafana seccomp.security.alpha.kubernetes.io/pod: docker/default Status: Pending Reason: AppArmor Message: Cannot enforce AppArmor: AppArmor is not enabled on the host IP: Controlled By: ReplicaSet/prome-demo-grafana-944f89874 ...... \u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u5176\u4e2d\u6709\u4e00\u53e5 Cannot enforce AppArmor: AppArmor is not enabled on the host \u8fd9\u6837\u7684 Message \u4fe1\u606f \uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u96c6\u7fa4\u4e2d\u5f00\u542f\u4e86 PSP \u5b89\u5168\u7b56\u7565\uff0c\u800c\u6211\u4eec\u4f7f\u7528 Helm \u5b89\u88c5 Prometheus Operator \u7684\u65f6\u5019\uff0c\u4f1a\u7ed9\u6211\u4eec\u6dfb\u52a0\u4e0a\u4e00\u4e9b PSP \u5bf9\u8c61\uff1a $ kubectl get psp -l release=prome-demo NAME PRIV CAPS SELINUX RUNASUSER FSGROUP SUPGROUP READONLYROOTFS VOLUMES prome-demo-grafana false RunAsAny RunAsAny RunAsAny RunAsAny false configMap,emptyDir,projected,secret,downwardAPI,persistentVolumeClaim prome-demo-grafana-test false RunAsAny RunAsAny RunAsAny RunAsAny false configMap,downwardAPI,emptyDir,projected,secret prome-demo-prometheus-node-exporter false RunAsAny RunAsAny MustRunAs MustRunAs false configMap,emptyDir,projected,secret,downwardAPI,persistentVolumeClaim,hostPath prome-demo-prometheus-oper-operator false RunAsAny RunAsAny MustRunAs MustRunAs false configMap,emptyDir,projected,secret,downwardAPI,persistentVolumeClaim prome-demo-prometheus-oper-prometheus false RunAsAny RunAsAny MustRunAs MustRunAs false configMap,emptyDir,projected,secret,downwardAPI,persistentVolumeClaim \u6211\u4eec\u53ef\u4ee5\u7f16\u8f91 prome-demo-grafana \u8fd9\u4e2a PSP \u5bf9\u8c61 \uff1a $ kubectl edit psp prome-demo-grafana \u7531\u4e8e\u6211\u4eec\u96c6\u7fa4\u4e2d\u6ca1\u6709\u5b89\u88c5 apparmor \uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5c06 annotations \u5f53\u4e2d\u7684\u4e24\u884c\u6570\u636e\u5220\u9664\u5373\u53ef\uff1a apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default","title":"\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898 psp Configuration"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#3","text":"","title":"3 \u6269\u5bb9"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#3-1","text":"\u5728\u6211\u4eec\u7684\u4ee3\u7801\u76ee\u5f55\u4e0b\u9762\u6267\u884c\u4e0b\u9762\u7684\u90e8\u7f72\u547d\u4ee4\uff1a $ kubectl apply -f manifests/deployment.yml -f manifests/service.yml -f manifests/ingress.yml deployment.apps/prometheus-demo-app created service/prometheus-demo-app created \u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u6211\u4eec\u5e94\u7528\u7684 Deployment \u548c Service \u8d44\u6e90\u5bf9\u8c61\u5230\u6211\u4eec\u96c6\u7fa4\u4e2d\uff0c \u6b64\u5916\uff0c\u8fd8\u5305\u62ec\u4e00\u4e2a Ingress \u8d44\u6e90\u5bf9\u8c61\uff0c\u7528\u6765\u66b4\u9732\u7ed9\u5916\u90e8\u7528\u6237\u4f7f\u7528\u7684\u3002 manifests/ingress.yml \u5916\u90e8\u670d\u52a1\u53d1\u73b0\u4e4b ingress(\u4e00) nginx-ingress \u7684\u5b89\u88c5\u4f7f\u7528 apiVersion: networking.k8s.io/v1beta1 kind: Ingress metadata: name: prometheus-demo-app spec: rules: - host: prom-demo.ny152.com http: paths: - path: / backend: serviceName: prometheus-demo-app servicePort: 8080 # apiVersion: traefik.containo.us/v1alpha1 # kind: IngressRoute # metadata: # name: prometheus-demo-app # spec: # entryPoints: # - web # routes: # - match: Host(`prom-demo.ny152.com`) #\u6ce8\u610f\u4fee\u6539 # kind: Rule # services: # - name: prometheus-demo-app # port: 8080 \u7136\u540e\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee Prometheus \u7684 Dashboard \uff0c\u6211\u4eec\u5c06\u90e8\u7f72\u7684 Prometheus \u7684 Service \u6539\u6210 NodePort \u7c7b\u578b\uff1a $ kubectl edit svc prome-demo-prometheus-oper-prometheus -n kube-ops # \u5c06 spec.type \u6539\u6210 NodePort $ kubectl get svc -n kube-ops -l release=prome-demo NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prome-demo-grafana NodePort 10.106.151.204 <none> 80:31310/TCP 23h prome-demo-prometheus-node-exporter ClusterIP 10.111.181.43 <none> 9100/TCP 23h prome-demo-prometheus-oper-operator ClusterIP 10.110.17.60 <none> 8080/TCP,443/TCP 23h prome-demo-prometheus-oper-prometheus NodePort 10.107.93.192 <none> 9090:31339/TCP 23h \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 http://NodeIP:31339 \u6765\u8bbf\u95ee\u6211\u4eec\u7684 Prometheus \u9875\u9762\u4e86\uff0c\u5207\u6362\u5230 /targets \u9875\u9762\u4e0b\u9762\uff0c\u5c31\u4f1a\u770b\u5230\u6b63\u5728\u76d1\u63a7\u7684\u7aef\u70b9\u5217\u8868\u4e86\uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u5b89\u88c5 Prometheus Operator \u7684 CRD \u63a7\u5236\u5668 \uff0c\u5f53\u7136\u53ef\u80fd\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6709\u4e00\u4e9b\u76d1\u63a7\u6570\u636e\u6709\u95ee\u9898\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u6211\u4eec\u6839\u636e\u81ea\u5df1\u96c6\u7fa4\u7684\u5b9e\u9645\u60c5\u51b5\u53bb\u505a\u5bf9\u5e94\u7684\u8c03\u6574\u4e86\uff1a \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u90e8\u7f72\u6211\u4eec\u81ea\u5df1\u7684\u5e94\u7528\u76d1\u63a7\uff0c\u8ba9 Proemthues \u4e5f\u53ef\u4ee5\u6293\u53d6\u5230\u6211\u4eec\u81ea\u5df1\u7684\u5e94\u7528\u76d1\u63a7\u6307\u6807\u6570\u636e\uff0c\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\uff1a $ kubectl apply -f manifests/service-monitor.yml servicemonitor.monitoring.coreos.com/prometheus-demo-app created \u8be5\u8d44\u6e90\u5bf9\u8c61\u5185\u5bb9\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684 ServiceMonitor \u5bf9\u8c61\uff0c ServiceMonitor \u662f Prometheus \u83b7\u53d6\u5e94\u7528\u76d1\u63a7\u6570\u636e\u7684\u4e00\u4e2a CRD \u5bf9\u8c61 \uff0c\u5bf9 ServiceMonitor \u4e0d\u591f\u719f\u6089\u7684\u53ef\u4ee5\u67e5\u770b\u6211\u4eec\u524d\u9762\u7684 Prometheus Operator \u7684\u76f8\u5173\u6587\u6863 apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: prometheus-demo-app namespace: kube-ops spec: endpoints: - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token interval: 15s port: web selector: matchLabels: app: prometheus-demo-app namespaceSelector: matchNames: - default \u8be5\u5bf9\u8c61\u901a\u77e5 Prometheus Operator \u914d\u7f6e\u8fd0\u884c\u4e2d\u7684 Prometheus \u5b9e\u4f8b\uff0c\u76d1\u542c\u5e26\u6709\u6807\u7b7e app=prometheus-demo-app \u7684\u670d\u52a1\u3002 \u73b0\u5728\u6211\u4eec\u518d\u53bb Prometheus \u7684\u9875\u9762\u4e0a\u9762\u67e5\u770b /targets \u9875\u9762\u5c31\u4f1a\u53d1\u73b0\u6211\u4eec\u7684\u5e94\u7528\u5df2\u7ecf\u914d\u7f6e\u5728\u91cc\u9762\u4e86\uff0c\u7136\u540e\u5728 Dashboard \u9875\u9762\u4e0a\u8f93\u5165\u4e0b\u9762\u7684 promql \u8bed\u53e5\uff1a demo_app_button_clicks_total \u8fd9\u4e2a\u6307\u6807\u5c31\u53cd\u5e94\u51fa\u4e86\u6211\u4eec\u5e94\u7528\u7a0b\u5e8f\u7684\u6240\u6709\u5b9e\u4f8b\u4e2d\u6309\u94ae\u7684\u603b\u5171\u70b9\u51fb\u6b21\u6570\u3002","title":"3-1 \u90e8\u7f72\u5e94\u7528\u5230\u96c6\u7fa4\u4e2d"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#4","text":"\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a\u540d\u4e3a Prometheus Adapter for Kubernetes Metrics APIs \u7684 k8s \u7684 API \u6269\u5c55\u5e94\u7528\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684 Prometheus \u67e5\u8be2\u6765\u4f7f\u7528 k8s \u8d44\u6e90\u548c\u81ea\u5b9a\u4e49\u6307\u6807 API\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06 Prometheus-Adapter \u5b89\u88c5\u5230\u96c6\u7fa4\u4e2d\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u89c4\u5219\u6765\u8ddf\u8e2a\u6bcf\u4e2a Pod \u7684\u8bf7\u6c42\u3002\u89c4\u5219\u7684\u5b9a\u4e49\u6211\u4eec\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff0c\u6bcf\u4e2a\u89c4\u5219\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a4\u4e2a\u90e8\u5206\uff1a Discovery \uff1a\u5b83\u6307\u5b9a Adapter \u5e94\u8be5 \u5982\u4f55\u627e\u5230\u8be5\u89c4\u5219\u7684\u6240\u6709 Prometheus \u6307\u6807 Association \uff1a\u6307\u5b9a Adapter \u5e94\u8be5\u5982 \u4f55\u786e\u5b9a\u548c\u7279\u5b9a\u7684\u6307\u6807\u5173\u8054\u7684 Kubernetes \u8d44\u6e90 Naming \uff1a\u6307\u5b9a Adapter \u5e94\u8be5 \u5982\u4f55\u5728\u81ea\u5b9a\u4e49\u6307\u6807 API \u4e2d\u66b4\u9732\u6307\u6807 Querying \uff1a\u6307\u5b9a \u5982\u4f55\u5c06\u5bf9\u4e00\u4e2a\u83b7\u591a\u4e2a Kubernetes \u5bf9\u8c61\u4e0a\u7684\u7279\u5b9a\u6307\u6807\u7684\u8bf7\u6c42\u8f6c\u6362\u4e3a\u5bf9 Prometheus \u7684\u67e5\u8be2 \u4e0b\u9762\u6211\u4eec\u5c31\u6765\u7f16\u5199\u6211\u4eec\u81ea\u5df1\u7684\u89c4\u5219\uff0c\u9996\u5148\u6dfb\u52a0 rules \u719f\u6089\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\uff1a rules: []","title":"4 \u6269\u5bb9"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#4-1-discover","text":"\u6211\u4eec\u8fd9\u91cc\u53ea\u9700\u8981\u53d1\u73b0\uff08 discover \uff09\u4e00\u4e2a\u6307\u6807 demo_app_button_clicks_total \uff0c\u6dfb\u52a0\u4e00\u4e2a\u975e\u7a7a\u7684 Pod \u6807\u7b7e\u5339\u914d\u6765\u8fc7\u6ee4\uff1a rules: - seriesQuery: 'demo_app_button_clicks_total{pod!=\"\"}'","title":"4-1 discover"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#4-2-association","text":"\u5173\u8054\uff08 Association \uff09\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c Prometheus \u6807\u7b7e\u90fd\u76f4\u63a5\u6620\u5c04\u5230 Kubernetes \u8d44\u6e90\uff08 job \u3001 namespace \u3001 pod \u7b49\u7b49\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6a21\u677f\u6765\u9690\u5c04\u8d44\u6e90\uff1a rules: - seriesQuery: 'demo_app_button_clicks_total{pod!=\"\"}' resources: {template: \"<<.Resource>>\"}","title":"4-2 Association"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#4-3-naming","text":"\u6211\u4eec\u6f14\u793a\u5e94\u7528\u7684\u6309\u94ae\u70b9\u51fb\u603b\u548c\u5b9e\u9645\u4e0a\u7528\u5904\u4e0d\u5927\uff0c\u6211\u4eec\u9700\u8981\u6309\u7167\u6bcf\u4e2a Pod \u6765\u8fdb\u884c\u6269\u5bb9\uff0c\u7136\u540e\u5728\u89c4\u5219\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u540d\uff08 naming \uff09\u5b9a\u4e49\uff1a rules: - seriesQuery: 'demo_app_button_clicks_total{pod!=\"\"}' resources: {template: \"<<.Resource>>\"} name: matches: \"^(.*)_total\" as: \"${1}_per_second\"","title":"4-3 naming"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#4-4-querying","text":"\u7136\u540e\u5c31\u53ef\u4ee5\u5b9a\u4e49\u67e5\u8be2\uff08 Querying \uff09\u4e86\uff1a seriesQuery: 'demo_app_button_clicks_total{pod!=\"\"}' resources: { template: \"<<.Resource>>\" } name: matches: \"^(.*)_total\" as: \"${1}_per_second\" metricsQuery: \"sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)\" \u8fd9\u662f\u4e00\u4e2a\u5e26\u53c2\u6570\u7684 Prometheus \u67e5\u8be2\uff0c\u5176\u4e2d\uff1a Series \u662f\u6709 seriesQuery \u5339\u914d\u7684\u4efb\u4f55 series \uff0c\u8be5\u89c4\u5219\u53ea\u6709\u4e00\u4e2a series \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06 demo_app_button_clicks+total \u66ff\u6362\u6210 <<.Series>> \u3002 <<.LabelMatchers>> \u662f adapter \u6765\u66ff\u6362\u6210\u6807\u7b7e\u67e5\u8be2\u7684\uff08\u6bd4\u5982\uff0c pod='deployment-name-abcd-1234\uff09 \u3002 <<.GroupBy>> \u8868\u793a\u6211\u4eec\u60f3\u8981\u6269\u5c55\u7684\u8d44\u6e90\uff0c\u6211\u4eec\u8fd9\u91cc\u5c31\u662f Pod \u4e86\u3002 Promethues-Adapter \u7684\u4e00\u4e2a\u7f3a\u70b9\u662f\u914d\u7f6e\u662f\u901a\u8fc7\u9759\u6001\u6587\u4ef6\u548c\u5e94\u7528\u7a0b\u5e8f\u4e00\u8d77\u90e8\u7f72\u7684\uff0c\u800c\u4e0d\u662f\u901a\u8fc7 ConfigMap \u6216\u8005\u5176\u4ed6\u57fa\u4e8e API \u7684\u5bf9\u8c61\u6765\u914d\u7f6e\u7684 \uff0c \u6211\u4eec\u8fd9\u91cc\u5c06\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a Helm Chart \u6765\u90e8\u7f72\uff0c\u901a\u8fc7\u8986\u76d6 values \u6587\u4ef6\u6765\u914d\u7f6e\u89c4\u5219\u3002 values \u6587\u4ef6\u653e\u7f6e\u5728\u9879\u76ee\u76ee\u5f55 helm-values/prometheus-adapter-values.yml \uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a rules: default: false custom: - seriesQuery: 'demo_app_button_clicks_total' resources: { template: \"<<.Resource>>\" } name: matches: \"^(.*)_total\" as: \"${1}_per_second\" metricsQuery: \"sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)\" prometheus: url: http://prom-demo-prometheus-opera-prometheus.default \u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4e00\u952e\u5b89\u88c5\uff1a $ helm install stable/prometheus-adapter -n prome-adapter -f helm-values/prometheus-adapter-values.yml --namespace kube-ops LAST DEPLOYED: Fri Sep 27 10:54:56 2019 NAMESPACE: kube-ops STATUS: DEPLOYED RESOURCES: ...... NOTES: prome-adapter-prometheus-adapter has been deployed. In a few minutes you should be able to list metrics using the following command(s): kubectl get --raw /apis/custom.metrics.k8s.io/v1beta1 \u7b49\u4e00\u5c0f\u4f1a\u513f\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u68c0\u6d4b\u662f\u5426\u751f\u6548\u4e86\uff1a \u6b63\u5e38\u6765\u8bf4\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u4fe1\u606f\uff1a $ kubectl get --raw=\"/apis/custom.metrics.k8s.io/v1beta1\" | jq { \"kind\": \"APIResourceList\", \"apiVersion\": \"v1\", \"groupVersion\": \"custom.metrics.k8s.io/v1beta1\", \"resources\": [ { \"name\": \"jobs.batch/demo_app_button_clicks_per_second\", \"singularName\": \"\", \"namespaced\": true, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] }, { \"name\": \"namespaces/demo_app_button_clicks_per_second\", \"singularName\": \"\", \"namespaced\": false, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] }, { \"name\": \"pods/demo_app_button_clicks_per_second\", \"singularName\": \"\", \"namespaced\": true, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] }, { \"name\": \"services/demo_app_button_clicks_per_second\", \"singularName\": \"\", \"namespaced\": true, \"kind\": \"MetricValueList\", \"verbs\": [ \"get\" ] } ] } \u63a5\u4e0b\u6765\uff0c\u53ef\u4ee5\u83b7\u53d6\u6211\u4eec\u81ea\u5df1 Pod \u7684\u6307\u6807\u6570\u636e\uff1a $ kubectl get --raw=\"/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/*/demo_app_button_clicks_per_second?pod=$(kubectl get po -l app=prometheus-demo-app -o name)\" | jq \u6b63\u5e38\u4f1a\u8f93\u51fa\u5982\u4e0b\u6240\u793a\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a $ kubectl get --raw=\"/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/*/demo_a pp_button_clicks_per_second?pod=$(kubectl get po -l app=prometheus-demo-app -o name)\" | jq { \"kind\": \"MetricValueList\", \"apiVersion\": \"custom.metrics.k8s.io/v1beta1\", \"metadata\": { \"selfLink\": \"/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/%2A/demo_app_button_clicks_per_second\" }, \"items\": [ { \"describedObject\": { \"kind\": \"Pod\", \"namespace\": \"default\", \"name\": \"prometheus-demo-app-8585d447c6-77st2\", \"apiVersion\": \"/v1\" }, \"metricName\": \"demo_app_button_clicks_per_second\", \"timestamp\": \"2019-11-18T08:49:26Z\", \"value\": \"0\" } ] } \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u73b0\u5728\u7684 value \u503c\u4e3a 0 \uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u5f00\u59cb\u70b9\u51fb\u9875\u9762\u4e0a\u9762\u7684\u6309\u94ae\uff0c\u6240\u4ee5\u901f\u7387\u662f\u6bcf\u79d2\u4e3a 0 \u3002\u6211\u4eec\u4e0a\u9762\u90e8\u7f72\u5e94\u7528\u7684\u65f6\u5019\u521b\u5efa\u4e86\u4e00\u4e2a Ingress \u5bf9\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u57df\u540d\uff08\u505a\u597d DNS \u89e3\u6790\u540e\uff09\u76f4\u63a5\u8bbf\u95ee\u6211\u4eec\u7684\u5e94\u7528\uff0c\u7136\u540e\u70b9\u51fb\u9875\u9762\u4e0a\u9762\u7684\u6309\u94ae\u540e\uff0c\u91cd\u65b0\u6765\u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u901f\u7387\u4f1a\u589e\u52a0\u3002 \u8fd9\u91cc\u6211\u7528\u7684\u662f NodePort \u7684 $ kubectl edit svc prome-demo-prometheus-oper-prometheus -n kube-ops service/prome-demo-grafana edited $ kubectl get svc -n kube-ops NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE prome-adapter-prometheus-adapter ClusterIP 10.98.162.83 <none> 443/TCP 17h prome-demo-grafana ClusterIP 10.106.151.204 <none> 80/TCP 17h prome-demo-kube-state-metrics ClusterIP 10.107.26.121 <none> 8080/TCP 17h prome-demo-prometheus-node-exporter ClusterIP 10.111.181.43 <none> 9100/TCP 17h prome-demo-prometheus-oper-operator ClusterIP 10.110.17.60 <none> 8080/TCP,443/TCP 17h prome-demo-prometheus-oper-prometheus NodePort 10.107.93.192 <none> 9090:31339/TCP 17h prometheus-operated ClusterIP None <none> 9090/TCP 17h http://127.0.0.1:31339","title":"4-4 Querying"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#5-hpa","text":"Pod \u6c34\u5e73\u81ea\u52a8\u4f38\u7f29\uff08 HPA \uff09\u53ef\u4ee5\u6839\u636e\u4e00\u4e9b\u7279\u5b9a\u6761\u4ef6\u6765\u81ea\u52a8\u6dfb\u52a0\u65b0\u7684 Pod \u5230 Deployment \u4e2d\u53bb\uff0c\u8fd9\u91cc\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a HPA \u5bf9\u8c61\uff0c \u8bbe\u5b9a\u76ee\u6807\u4e3a\u6bcf\u4e2a Pod \u6bcf\u79d2 0.01 \u6b21\u70b9\u51fb \u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u6d4b\u8bd5\u4e0b\u8ba9\u6211\u4eec\u7684\u5e94\u7528\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\uff0c\u9996\u5148\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u786e\u4fdd\u73b0\u5728\u53ea\u6709\u4e00\u4e2a Pod \u6b63\u5728\u8fd0\u884c\uff1a $ kubectl get po -l app=prometheus-demo-app NAME READY STATUS RESTARTS AGE prometheus-demo-app-8585d447c6-77st2 1/1 Running 0 23h \u7136\u540e\u521b\u5efa HPA \u5bf9\u8c61\uff0c\u5bf9\u8c61\u5bf9\u5e94\u7684\u8d44\u6e90\u6587\u4ef6\u4f4d\u4e8e\u4ee3\u7801\u6839\u76ee\u5f55\u4e0b\u9762 manifests/hpa.yaml \uff0c\u5b8c\u6574\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a kind: HorizontalPodAutoscaler apiVersion: autoscaling/v2beta1 metadata: name: prometheus-demo-app spec: scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: prometheus-demo-app # autoscale between 1 and 10 replicas minReplicas: 1 maxReplicas: 10 metrics: # use a \"Pods\" metric, which takes the average of the # given metric across all pods controlled by the autoscaling target - type: Pods pods: metricName: demo_app_button_clicks_per_second targetAverageValue: 10m \u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u5373\u53ef\uff1a $ kubectl apply -f manifests/hpa.yml horizontalpodautoscaler.autoscaling/prometheus-demo-app created \u7136\u540e\u91cd\u65b0\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6211\u4eec\u7684\u5e94\u7528\uff0c\u70b9\u51fb\u4e00\u4f1a\u513f\u9875\u9762\u4e0a\u9762\u7684\u6309\u94ae\uff0c\u7136\u540e\u91cd\u65b0\u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\uff0c\u6b63\u5e38\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684\u5e94\u7528\u7684 Deployment \u5c31\u5df2\u7ecf\u5f00\u59cb\u6269\u5bb9\u4e86\uff1a $ kubectl get po -l app=prometheus-demo-app NAME READY STATUS RESTARTS AGE prometheus-demo-app-8585d447c6-4sls9 1/1 Running 0 5m18s prometheus-demo-app-8585d447c6-77st2 1/1 Running 0 17h prometheus-demo-app-8585d447c6-8x59q 1/1 Running 0 5m18s prometheus-demo-app-8585d447c6-95vtx 1/1 Running 0 5m33s prometheus-demo-app-8585d447c6-dnklw 1/1 Running 0 5m3s prometheus-demo-app-8585d447c6-g9scp 1/1 Running 0 5m18s prometheus-demo-app-8585d447c6-kmkvk 1/1 Running 0 5m3s prometheus-demo-app-8585d447c6-rtf5x 1/1 Running 0 5m18s prometheus-demo-app-8585d447c6-stxpw 1/1 Running 0 5m33s prometheus-demo-app-8585d447c6-wtwv5 1/1 Running 0 5m33s \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6307\u6807\u6570\u636e\u5bf9\u5e94\u7528\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u7684\u64cd\u4f5c\u3002","title":"5 \u90e8\u7f72 HPA \u5bf9\u8c61"},{"location":"chap7/23Kubernetes_Scale_Prometheus-Adapter/#6-grafana","text":"\u8fd9\u90e8\u5206\u5185\u5bb9\u5176\u5b9e\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u53ea\u662f\u5355\u7eaf\u7684\u5728\u56fe\u8868\u4e0a\u5bf9\u6211\u4eec\u7684\u7f29\u653e\u6570\u636e\u8fdb\u884c\u5c55\u793a\uff0c\u8fd9\u53ef\u4ee5\u589e\u52a0\u6211\u4eec\u5bf9\u6574\u4e2a\u8fc7\u7a0b\u7684\u7406\u89e3\u3002 \u6211\u4eec\u5c06\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230\u7684 grafana \u7684 Dashboard \u6570\u636e\u653e\u7f6e\u5728\u4e86\u4ee3\u7801\u6839\u76ee\u5f55\u4e0b\u9762 manifests/ grafana-dashboard-configmap.yml \uff0c\u5148\u901a\u8fc7 ConfigMap \u6765\u521b\u5efa\u8fd9\u4e2a Dashboard \u6570\u636e\uff1a $ kubectl apply -f manifests/grafana-dashboard-configmap.yml \u540c\u6837\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u8bbf\u95ee\uff0c\u5c06 Prometheus Operator \u4e0d\u662f\u7684 grafana \u7684 Service \u66f4\u6539\u6210 NodePort \u7c7b\u578b\uff1a $ kubectl edit svc prome-demo-grafana -n kube-ops service/prome-demo-grafana edited $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes ClusterIP 10.96.0.1 <none> 443/TCP 6d5h prometheus-demo-app NodePort 10.108.214.168 <none> 8080:30062/TCP 23h \u8fd9\u4e2a\u65f6\u5019\u540c\u6837\u6211\u5c31\u53ef\u4ee5\u7528 http://NodeIP:30062 \u6765\u8bbf\u95ee grafana \u5e94\u7528\u4e86\u3002\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u4e3a admin \uff0c\u9ed8\u8ba4\u7684\u5bc6\u7801\u4e3a\uff1a prom-operator \uff0c\u8fdb\u5165\u9875\u9762\u540e\uff0c\u53ef\u4ee5\u9009\u62e9\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u7684 Prometheus Demo App Dashboard \u8fd9\u4e2a Dashboard \uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5e94\u7528\u5728\u6269\u7f29\u5bb9\u7684\u5b8c\u6574\u8fc7\u7a0b\uff1a","title":"6 \u5728 Grafana \u4e2d\u663e\u793a\u7f29\u653e\u6570\u636e"},{"location":"chap8/1Promql_basic1/","text":"1. \u521d\u8bc6 PromQL Prometheus \u63d0\u4f9b\u4e86\u4e00\u79cd\u529f\u80fd\u8868\u8fbe\u5f0f\u8bed\u8a00 PromQL \uff0c \u5141\u8bb8\u7528\u6237\u5b9e\u65f6\u9009\u62e9\u548c\u6c47\u805a\u65f6\u95f4\u5e8f\u5217\u6570\u636e \u3002\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u663e\u793a\u4e3a\u56fe\u5f62\uff0c\u4e5f\u53ef\u4ee5\u663e\u793a\u4e3a\u8868\u683c\u6570\u636e\uff0c\u6216\u8005\u7531\u5916\u90e8\u7cfb\u7edf\u901a\u8fc7 HTTP API \u8c03\u7528\u3002 1 \u8868\u8fbe\u5f0f\u8bed\u8a00\u6570\u636e\u7c7b\u578b \u5728 Prometheus \u7684\u8868\u8fbe\u5f0f\u8bed\u8a00\u4e2d\uff0c\u8868\u8fbe\u5f0f\u6216\u5b50\u8868\u8fbe\u5f0f\u5305\u62ec\u4ee5\u4e0b\u56db\u79cd\u7c7b\u578b\u4e4b\u4e00\uff1a \u77ac\u65f6\u5411\u91cf\uff08 Instant vector \uff09 - \u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u5355\u4e2a\u6837\u672c\uff0c\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684\u65f6\u95f4\u6233\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8868\u8fbe\u5f0f\u7684\u8fd4\u56de\u503c\u4e2d\u53ea\u4f1a\u5305\u542b\u8be5\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u6700\u65b0\u7684\u4e00\u4e2a\u6837\u672c\u503c\u3002\u800c\u76f8\u5e94\u7684\u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\u79f0\u4e4b\u4e3a\u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\u3002 \u533a\u95f4\u5411\u91cf\uff08 Range vector \uff09 - \u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u6bb5\u65f6\u95f4\u8303\u56f4\u5185\u7684\u6837\u672c\u6570\u636e\u3002 \u6807\u91cf\uff08 Scalar \uff09 - \u4e00\u4e2a\u6d6e\u70b9\u578b\u7684\u6570\u636e\u503c\u3002 \u5b57\u7b26\u4e32\uff08 String \uff09 - \u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u503c\u3002 \u6839\u7528\u6237\u8f93\u5165\u7684\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u662f\u5426\u5408\u6cd5\u53d6\u51b3\u4e8e\u7528\u4f8b\u7684\u4e0d\u540c\uff0c\u4f8b\u5982\uff1a\u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u662f\u552f\u4e00\u53ef\u4ee5\u76f4\u63a5\u7ed8\u5236\u6210\u56fe\u8868\u7684\u6570\u636e\u7c7b\u578b\u3002 2 \u5b57\u9762\u91cf \u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u6216\u53cd\u5f15\u53f7\u6307\u5b9a\u4e3a\u6587\u5b57\u5e38\u91cf \u3002 PromQL \u9075\u5faa\u4e0e Go \u76f8\u540c\u7684\u8f6c\u4e49\u89c4\u5219\u3002\u5728\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u4e2d\uff0c\u7528\u53cd\u659c\u6760\u6765\u8868\u793a\u8f6c\u4e49\u5e8f\u5217\uff0c\u540e\u9762\u53ef\u4ee5\u8ddf a, b, f, n, r, t, v \u6216 \\ \u3002\u7279\u6b8a\u5b57\u7b26\u53ef\u4ee5\u4f7f\u7528\u516b\u8fdb\u5236\uff08 \\nnn \uff09\u6216\u8005\u5341\u516d\u8fdb\u5236\uff08 \\xnn \uff0c \\unnnn \u548c \\Unnnnnnnn \uff09\u3002 \u4e0e Go \u4e0d\u540c\uff0cPrometheus \u4e0d\u4f1a\u5bf9\u53cd\u5f15\u53f7\u5185\u7684\u6362\u884c\u7b26\u8fdb\u884c\u8f6c\u4e49\u3002 \u4f8b\u5982\uff1a \"this is a string\" 'these are unescaped: \\n \\\\ \\t' `these are not unescaped: \\n ' \" \\t` \u6807\u91cf \u6807\u91cf\u6d6e\u70b9\u503c\u53ef\u4ee5\u5b57\u9762\u4e0a\u5199\u6210 [-](digits)[.(digits)] \u7684\u5f62\u5f0f\u3002 -2.43 3 \u65f6\u95f4\u5e8f\u5217\u8fc7\u6ee4\u5668 3-1 \u77ac\u65f6\u5411\u91cf\u8fc7\u6ee4\u5668 \u77ac\u65f6\u5411\u91cf\u8fc7\u6ee4\u5668\u5141\u8bb8\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u6233\u5185\u9009\u62e9\u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\u548c\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u5355\u4e2a\u6837\u672c\u503c \u3002 \u5728\u6700\u7b80\u5355\u7684\u5f62\u5f0f\u4e2d\uff0c\u8fd1\u6307\u5b9a\u6307\u6807\uff08 metric \uff09\u540d\u79f0\u3002\u8fd9\u5c06\u751f\u6210\u5305\u542b\u6b64\u6307\u6807\u540d\u79f0\u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u7684\u5143\u7d20\u7684\u77ac\u65f6\u5411\u91cf\u3002 \u4f8b\u5982\uff1a \u9009\u62e9\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217 \uff1a http_requests_total \u53ef\u4ee5\u901a\u8fc7\u5411\u82b1\u62ec\u53f7 \uff08{}\uff09 \u91cc\u9644\u52a0\u4e00\u7ec4\u6807\u7b7e\u6765\u8fdb\u4e00\u6b65\u8fc7\u6ee4\u65f6\u95f4\u5e8f\u5217\u3002 \u4f8b\u5982\uff1a \u9009\u62e9\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \uff0c job \u6807\u7b7e\u503c\u4e3a prometheus \uff0c group \u6807\u7b7e\u503c\u4e3a canary \u7684\u65f6\u95f4\u5e8f\u5217 \uff1a http_requests_total{job=\"prometheus\",group=\"canary\"} PromQL \u8fd8\u652f\u6301\u7528\u6237\u6839\u636e\u65f6\u95f4\u5e8f\u5217\u7684\u6807\u7b7e\u5339\u914d\u6a21\u5f0f\u6765\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u8fc7\u6ee4\uff0c\u76ee\u524d\u4e3b\u8981\u652f\u6301\u4e24\u79cd\u5339\u914d\u6a21\u5f0f\uff1a \u5b8c\u5168\u5339\u914d\u548c\u6b63\u5219\u5339\u914d \u3002\u603b\u5171\u6709\u4ee5\u4e0b\u51e0\u79cd\u6807\u7b7e\u5339\u914d\u8fd0\u7b97\u7b26\uff1a = : \u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u5b8c\u5168\u76f8\u540c\u7684\u6807\u7b7e\u3002 != : \u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\u7684\u6807\u7b7e\u3002 =~ : \u9009\u62e9\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\uff08\u6216\u5b50\u5b57\u7b26\u4e32\uff09\u76f8\u5339\u914d\u7684\u6807\u7b7e\u3002 !~ : \u9009\u62e9\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\uff08\u6216\u5b50\u5b57\u7b26\u4e32\uff09\u4e0d\u5339\u914d\u7684\u6807\u7b7e\u3002 \u4f8b\u5982\uff1a\u9009\u62e9\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \uff0c\u73af\u5883\u4e3a staging \u3001 testing \u6216 development \uff0c HTTP \u65b9\u6cd5\u4e3a GET \u7684\u65f6\u95f4\u5e8f\u5217\uff1a http_requests_total{environment=~\"staging|testing|development\",method!=\"GET\"} \u6ca1\u6709\u6307\u5b9a\u6807\u7b7e\u7684\u6807\u7b7e\u8fc7\u6ee4\u5668\u4f1a\u9009\u62e9\u8be5\u6307\u6807\u540d\u79f0\u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217 \u3002 \u6240\u6709\u7684 PromQL \u8868\u8fbe\u5f0f\u5fc5\u987b\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u6307\u6807\u540d\u79f0\uff0c\u6216\u8005\u4e00\u4e2a\u4e0d\u4f1a\u5339\u914d\u5230\u7a7a\u5b57\u7b26\u4e32\u7684\u6807\u7b7e\u8fc7\u6ee4\u5668 \u3002 \u4ee5\u4e0b\u8868\u8fbe\u5f0f\u662f\u975e\u6cd5\u7684\uff08\u56e0\u4e3a\u4f1a\u5339\u914d\u5230\u7a7a\u5b57\u7b26\u4e32\uff09\uff1a {job=~\".*\"} # \u975e\u6cd5\uff01 \u4ee5\u4e0b\u8868\u8fbe\u5f0f\u662f\u5408\u6cd5\u7684\uff1a {job=~\".+\"} # \u5408\u6cd5\uff01 {job=~\".*\",method=\"get\"} # \u5408\u6cd5\uff01 \u9664\u4e86\u4f7f\u7528 <metric name>{label=value} \u7684\u5f62\u5f0f\u4ee5\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684 __name__ \u6807\u7b7e\u6765\u6307\u5b9a\u76d1\u63a7\u6307\u6807\u540d\u79f0\u3002 \u4f8b\u5982\uff1a\u8868\u8fbe\u5f0f http_requests_total \u7b49\u6548\u4e8e {__name__=\"http_requests_total\"} \u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u9664 = \u4e4b\u5916\u7684\u8fc7\u6ee4\u5668 \uff08=\uff0c=~\uff0c~\uff09 \u3002\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u9009\u62e9\u6307\u6807\u540d\u79f0\u4ee5 job : \u5f00\u5934\u7684\u6240\u6709\u6307\u6807\uff1a {__name__=~\"job:.*\"} Prometheus \u4e2d\u7684\u6240\u6709\u6b63\u5219\u8868\u8fbe\u5f0f\u90fd\u4f7f\u7528 RE2\u8bed\u6cd5\u3002 4 \u533a\u95f4\u5411\u91cf\u8fc7\u6ee4\u5668 \u533a\u95f4\u5411\u91cf \u4e0e \u77ac\u65f6\u5411\u91cf \u7684\u5de5\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\uff0c\u552f\u4e00\u7684\u5dee\u5f02\u5728\u4e8e\u5728\u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\u4e2d\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u65f6\u95f4\u9009\u62e9\u7684\u8303\u56f4\uff0c\u65f6\u95f4\u8303\u56f4\u901a\u8fc7\u65f6\u95f4\u8303\u56f4\u9009\u62e9\u5668 [] \u8fdb\u884c\u5b9a\u4e49\uff0c\u4ee5\u6307\u5b9a\u5e94\u4e3a\u6bcf\u4e2a\u8fd4\u56de\u7684\u533a\u95f4\u5411\u91cf\u6837\u672c\u503c\u4e2d\u63d0\u53d6\u591a\u957f\u7684\u65f6\u95f4\u8303\u56f4\u3002 \u65f6\u95f4\u8303\u56f4\u901a\u8fc7\u6570\u5b57\u6765\u8868\u793a\uff0c\u5355\u4f4d\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5176\u4e2d\u4e4b\u4e00\u7684\u65f6\u95f4\u5355\u4f4d\uff1a s - \u79d2 m - \u5206\u949f h - \u5c0f\u65f6 d - \u5929 w - \u5468 y - \u5e74 \u4f8b\u5982\uff1a\u9009\u62e9\u5728\u8fc7\u53bb 5 \u5206\u949f\u5185\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \uff0c job \u6807\u7b7e\u503c\u4e3a prometheus \u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\uff1a http_requests_total{job=\"prometheus\"}[5m] 5 \u65f6\u95f4\u4f4d\u79fb\u64cd\u4f5c \u5728\u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\u6216\u8005\u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\u4e2d\uff0c\u90fd\u662f\u4ee5\u5f53\u524d\u65f6\u95f4\u4e3a\u57fa\u51c6 \uff1a http_request_total{} # \u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\uff0c\u9009\u62e9\u5f53\u524d\u6700\u65b0\u7684\u6570\u636e http_request_total{}[5m] # \u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\uff0c\u9009\u62e9\u4ee5\u5f53\u524d\u65f6\u95f4\u4e3a\u57fa\u51c6\uff0c5\u5206\u949f\u5185\u7684\u6570\u636e \u800c\u5982\u679c\u6211\u4eec\u60f3\u67e5\u8be2\uff0c 5 \u5206\u949f\u524d\u7684\u77ac\u65f6\u6837\u672c\u6570\u636e\uff0c\u6216\u6628\u5929\u4e00\u5929\u7684\u533a\u95f4\u5185\u7684\u6837\u672c\u6570\u636e\u5462? \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4f4d\u79fb\u64cd\u4f5c\uff0c\u4f4d\u79fb\u64cd\u4f5c\u7684\u5173\u952e\u5b57\u4e3a offset \u3002 http_requests_total offset 5m \u6ce8\u610f \uff1a offset \u5173\u952e\u5b57\u9700\u8981\u7d27\u8ddf\u5728\u9009\u62e9\u5668\uff08 {} \uff09\u540e\u9762\u3002\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u662f\u6b63\u786e\u7684\uff1a sum(http_requests_total{method=\"GET\"} offset 5m) // GOOD. \u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u662f\u4e0d\u5408\u6cd5\u7684\uff1a sum(http_requests_total{method=\"GET\"}) offset 5m // INVALID. \u8be5\u64cd\u4f5c\u540c\u6837\u9002\u7528\u4e8e\u533a\u95f4\u5411\u91cf\u3002 \u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u6307\u6807 http_requests_total \u4e00\u5468\u524d\u7684 5 \u5206\u949f\u4e4b\u5185\u7684 HTTP \u8bf7\u6c42\u91cf\u7684\u589e\u957f\u7387\uff1a rate(http_requests_total[5m] offset 1w) 6 \u9677\u9631 \u6267\u884c\u67e5\u8be2\u64cd\u4f5c\u65f6\uff0c\u72ec\u7acb\u4e8e\u5f53\u524d\u65f6\u523b\u88ab\u9009\u4e2d\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6240\u5bf9\u5e94\u7684\u65f6\u95f4\u6233\uff0c\u8fd9\u4e2a\u65f6\u95f4\u6233\u4e3b\u8981\u7528\u6765\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\uff0c\u5305\u62ec sum , avg \u7b49\uff0c\u5927\u591a\u6570\u805a\u5408\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6240\u5bf9\u5e94\u7684\u65f6\u95f4\u6233\u6ca1\u6709\u5bf9\u9f50\u3002\u7531\u4e8e\u5b83\u4eec\u7684\u72ec\u7acb\u6027\uff0c\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e9b\u65f6\u95f4\u6233\u4e2d\u9009\u62e9\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u5e76\u5df2\u8fd9\u4e2a\u65f6\u95f4\u6233\u4e3a\u57fa\u51c6\uff0c\u83b7\u53d6\u5c0f\u4e8e\u4e14\u6700\u63a5\u8fd1\u8fd9\u4e2a\u65f6\u95f4\u6233\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u3002 \u5982\u679c\u91c7\u6837\u76ee\u6807\u6216\u544a\u8b66\u89c4\u5219\u4e0d\u518d\u8fd4\u56de\u4e4b\u524d\u5b58\u5728\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u6837\u672c\uff0c\u5219\u8be5\u65f6\u95f4\u5e8f\u5217\u5c06\u88ab\u6807\u8bb0\u4e3a\u5931\u6548\u3002\u5982\u679c\u5220\u9664\u4e86\u91c7\u6837\u76ee\u6807\uff0c\u5219\u4e4b\u524d\u8fd4\u56de\u7684\u65f6\u95f4\u5e8f\u5217\u4e5f\u4f1a\u5f88\u5feb\u88ab\u6807\u8bb0\u4e3a\u5931\u6548\u3002 \u5982\u679c\u5728\u67d0\u4e2a\u65f6\u95f4\u5e8f\u5217\u88ab\u6807\u8bb0\u4e3a\u5931\u6548\u540e\u5728\u8be5\u65f6\u95f4\u6233\u5904\u6267\u884c\u67e5\u8be2\u64cd\u4f5c\uff0c\u5219\u4e0d\u4f1a\u4e3a\u8be5\u65f6\u95f4\u5e8f\u5217\u8fd4\u56de\u4efb\u4f55\u503c\u3002\u5982\u679c\u968f\u540e\u5728\u8be5\u65f6\u95f4\u5e8f\u5217\u4e2d\u63d2\u5165\u4e86\u65b0\u7684\u6837\u672c\uff0c\u5219\u7167\u5e38\u8fd4\u56de\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u3002 \u5982\u679c\u5728\u91c7\u6837\u65f6\u95f4\u6233\u524d 5 \u5206\u949f\uff08\u9ed8\u8ba4\u60c5\u51b5\uff09\u672a\u627e\u5230\u4efb\u4f55\u6837\u672c\uff0c\u5219\u8be5\u65f6\u95f4\u6233\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u4efb\u4f55\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u3002\u8fd9\u5b9e\u9645\u4e0a\u610f\u5473\u7740\u4f60\u5728\u56fe\u8868\u4e2d\u770b\u5230\u7684\u6570\u636e\u90fd\u662f\u5728\u5f53\u524d\u65f6\u523b 5 \u5206\u949f\u524d\u7684\u6570\u636e\u3002 \u5bf9\u4e8e\u5728\u91c7\u6837\u70b9\u4e2d\u5305\u542b\u65f6\u95f4\u6233\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u4e0d\u4f1a\u88ab\u6807\u8bb0\u4e3a\u5931\u6548\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ec5\u4f7f\u7528 5 \u5206\u949f\u9608\u503c\u68c0\u6d4b\u7684\u89c4\u5219\u3002 7 \u907f\u514d\u6162\u67e5\u8be2\u548c\u9ad8\u8d1f\u8f7d \u5982\u679c\u4e00\u4e2a\u67e5\u8be2\u9700\u8981\u64cd\u4f5c\u975e\u5e38\u5927\u7684\u6570\u636e\u91cf\uff0c\u56fe\u8868\u7ed8\u5236\u5f88\u53ef\u80fd\u4f1a\u8d85\u65f6\uff0c\u6216\u8005\u670d\u52a1\u5668\u8d1f\u8f7d\u8fc7\u9ad8 \u56e0\u6b64\uff0c\u5728\u5bf9\u672a\u77e5\u6570\u636e\u6784\u5efa\u67e5\u8be2\u65f6\uff0c\u59cb\u7ec8\u9700\u8981\u5728 Prometheus \u8868\u8fbe\u5f0f\u6d4f\u89c8\u5668\u7684\u8868\u683c\u89c6\u56fe\u4e2d\u6784\u5efa\u67e5\u8be2\uff0c\u76f4\u5230\u7ed3\u679c\u662f\u770b\u8d77\u6765\u5408\u7406\u7684\uff08\u6700\u591a\u4e3a\u6570\u767e\u4e2a\uff0c\u800c\u4e0d\u662f\u6570\u5343\u4e2a\uff09\u3002 \u53ea\u6709\u5f53\u4f60\u5df2\u7ecf\u5145\u5206\u8fc7\u6ee4\u6216\u8005\u805a\u5408\u6570\u636e\u65f6\uff0c\u624d\u5207\u6362\u5230\u56fe\u8868\u6a21\u5f0f\u3002\u5982\u679c\u8868\u8fbe\u5f0f\u7684\u67e5\u8be2\u7ed3\u679c\u4ecd\u7136\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u7ed8\u5236\u51fa\u6765\uff0c\u5219\u9700\u8981\u901a\u8fc7\u8bb0\u5f55\u89c4\u5219\u91cd\u65b0\u6e05\u6d17\u6570\u636e \u3002 \u50cf api_http_requests_total \u8fd9\u6837\u7b80\u5355\u7684\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u9009\u62e9\u5668\uff0c\u53ef\u4ee5\u6269\u5c55\u5230\u5177\u6709\u4e0d\u540c\u6807\u7b7e\u7684\u6570\u5343\u4e2a\u65f6\u95f4\u5e8f\u5217\u4e2d\uff0c\u8fd9\u5bf9\u4e8e Prometheus \u7684\u67e5\u8be2\u8bed\u8a00\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002 \u8fd8\u8981\u8bb0\u4f4f\uff0c\u5bf9\u4e8e\u805a\u5408\u64cd\u4f5c\u6765\u8bf4\uff0c\u5373\u4f7f\u8f93\u51fa\u7684\u65f6\u95f4\u5e8f\u5217\u96c6\u975e\u5e38\u5c11\uff0c\u5b83\u4e5f\u4f1a\u5728\u670d\u52a1\u5668\u4e0a\u4ea7\u751f\u8d1f\u8f7d\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u5728\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u4e00\u4e2a\u5b57\u6bb5\u7684\u603b\u548c\uff0c\u603b\u662f\u975e\u5e38\u7f13\u6162\u3002","title":"1 \u521d\u8bc6 PromQL"},{"location":"chap8/1Promql_basic1/#1-promql","text":"Prometheus \u63d0\u4f9b\u4e86\u4e00\u79cd\u529f\u80fd\u8868\u8fbe\u5f0f\u8bed\u8a00 PromQL \uff0c \u5141\u8bb8\u7528\u6237\u5b9e\u65f6\u9009\u62e9\u548c\u6c47\u805a\u65f6\u95f4\u5e8f\u5217\u6570\u636e \u3002\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u663e\u793a\u4e3a\u56fe\u5f62\uff0c\u4e5f\u53ef\u4ee5\u663e\u793a\u4e3a\u8868\u683c\u6570\u636e\uff0c\u6216\u8005\u7531\u5916\u90e8\u7cfb\u7edf\u901a\u8fc7 HTTP API \u8c03\u7528\u3002","title":"1. \u521d\u8bc6 PromQL"},{"location":"chap8/1Promql_basic1/#1","text":"\u5728 Prometheus \u7684\u8868\u8fbe\u5f0f\u8bed\u8a00\u4e2d\uff0c\u8868\u8fbe\u5f0f\u6216\u5b50\u8868\u8fbe\u5f0f\u5305\u62ec\u4ee5\u4e0b\u56db\u79cd\u7c7b\u578b\u4e4b\u4e00\uff1a \u77ac\u65f6\u5411\u91cf\uff08 Instant vector \uff09 - \u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u5355\u4e2a\u6837\u672c\uff0c\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684\u65f6\u95f4\u6233\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8868\u8fbe\u5f0f\u7684\u8fd4\u56de\u503c\u4e2d\u53ea\u4f1a\u5305\u542b\u8be5\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u6700\u65b0\u7684\u4e00\u4e2a\u6837\u672c\u503c\u3002\u800c\u76f8\u5e94\u7684\u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\u79f0\u4e4b\u4e3a\u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\u3002 \u533a\u95f4\u5411\u91cf\uff08 Range vector \uff09 - \u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u6bb5\u65f6\u95f4\u8303\u56f4\u5185\u7684\u6837\u672c\u6570\u636e\u3002 \u6807\u91cf\uff08 Scalar \uff09 - \u4e00\u4e2a\u6d6e\u70b9\u578b\u7684\u6570\u636e\u503c\u3002 \u5b57\u7b26\u4e32\uff08 String \uff09 - \u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u503c\u3002 \u6839\u7528\u6237\u8f93\u5165\u7684\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u662f\u5426\u5408\u6cd5\u53d6\u51b3\u4e8e\u7528\u4f8b\u7684\u4e0d\u540c\uff0c\u4f8b\u5982\uff1a\u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u662f\u552f\u4e00\u53ef\u4ee5\u76f4\u63a5\u7ed8\u5236\u6210\u56fe\u8868\u7684\u6570\u636e\u7c7b\u578b\u3002","title":"1 \u8868\u8fbe\u5f0f\u8bed\u8a00\u6570\u636e\u7c7b\u578b"},{"location":"chap8/1Promql_basic1/#2","text":"\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u6216\u53cd\u5f15\u53f7\u6307\u5b9a\u4e3a\u6587\u5b57\u5e38\u91cf \u3002 PromQL \u9075\u5faa\u4e0e Go \u76f8\u540c\u7684\u8f6c\u4e49\u89c4\u5219\u3002\u5728\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u4e2d\uff0c\u7528\u53cd\u659c\u6760\u6765\u8868\u793a\u8f6c\u4e49\u5e8f\u5217\uff0c\u540e\u9762\u53ef\u4ee5\u8ddf a, b, f, n, r, t, v \u6216 \\ \u3002\u7279\u6b8a\u5b57\u7b26\u53ef\u4ee5\u4f7f\u7528\u516b\u8fdb\u5236\uff08 \\nnn \uff09\u6216\u8005\u5341\u516d\u8fdb\u5236\uff08 \\xnn \uff0c \\unnnn \u548c \\Unnnnnnnn \uff09\u3002 \u4e0e Go \u4e0d\u540c\uff0cPrometheus \u4e0d\u4f1a\u5bf9\u53cd\u5f15\u53f7\u5185\u7684\u6362\u884c\u7b26\u8fdb\u884c\u8f6c\u4e49\u3002 \u4f8b\u5982\uff1a \"this is a string\" 'these are unescaped: \\n \\\\ \\t' `these are not unescaped: \\n ' \" \\t` \u6807\u91cf \u6807\u91cf\u6d6e\u70b9\u503c\u53ef\u4ee5\u5b57\u9762\u4e0a\u5199\u6210 [-](digits)[.(digits)] \u7684\u5f62\u5f0f\u3002 -2.43","title":"2 \u5b57\u9762\u91cf"},{"location":"chap8/1Promql_basic1/#3","text":"","title":"3 \u65f6\u95f4\u5e8f\u5217\u8fc7\u6ee4\u5668"},{"location":"chap8/1Promql_basic1/#3-1","text":"\u77ac\u65f6\u5411\u91cf\u8fc7\u6ee4\u5668\u5141\u8bb8\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u6233\u5185\u9009\u62e9\u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\u548c\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u5355\u4e2a\u6837\u672c\u503c \u3002 \u5728\u6700\u7b80\u5355\u7684\u5f62\u5f0f\u4e2d\uff0c\u8fd1\u6307\u5b9a\u6307\u6807\uff08 metric \uff09\u540d\u79f0\u3002\u8fd9\u5c06\u751f\u6210\u5305\u542b\u6b64\u6307\u6807\u540d\u79f0\u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u7684\u5143\u7d20\u7684\u77ac\u65f6\u5411\u91cf\u3002 \u4f8b\u5982\uff1a \u9009\u62e9\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217 \uff1a http_requests_total \u53ef\u4ee5\u901a\u8fc7\u5411\u82b1\u62ec\u53f7 \uff08{}\uff09 \u91cc\u9644\u52a0\u4e00\u7ec4\u6807\u7b7e\u6765\u8fdb\u4e00\u6b65\u8fc7\u6ee4\u65f6\u95f4\u5e8f\u5217\u3002 \u4f8b\u5982\uff1a \u9009\u62e9\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \uff0c job \u6807\u7b7e\u503c\u4e3a prometheus \uff0c group \u6807\u7b7e\u503c\u4e3a canary \u7684\u65f6\u95f4\u5e8f\u5217 \uff1a http_requests_total{job=\"prometheus\",group=\"canary\"} PromQL \u8fd8\u652f\u6301\u7528\u6237\u6839\u636e\u65f6\u95f4\u5e8f\u5217\u7684\u6807\u7b7e\u5339\u914d\u6a21\u5f0f\u6765\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u8fc7\u6ee4\uff0c\u76ee\u524d\u4e3b\u8981\u652f\u6301\u4e24\u79cd\u5339\u914d\u6a21\u5f0f\uff1a \u5b8c\u5168\u5339\u914d\u548c\u6b63\u5219\u5339\u914d \u3002\u603b\u5171\u6709\u4ee5\u4e0b\u51e0\u79cd\u6807\u7b7e\u5339\u914d\u8fd0\u7b97\u7b26\uff1a = : \u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u5b8c\u5168\u76f8\u540c\u7684\u6807\u7b7e\u3002 != : \u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\u7684\u6807\u7b7e\u3002 =~ : \u9009\u62e9\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\uff08\u6216\u5b50\u5b57\u7b26\u4e32\uff09\u76f8\u5339\u914d\u7684\u6807\u7b7e\u3002 !~ : \u9009\u62e9\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\uff08\u6216\u5b50\u5b57\u7b26\u4e32\uff09\u4e0d\u5339\u914d\u7684\u6807\u7b7e\u3002 \u4f8b\u5982\uff1a\u9009\u62e9\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \uff0c\u73af\u5883\u4e3a staging \u3001 testing \u6216 development \uff0c HTTP \u65b9\u6cd5\u4e3a GET \u7684\u65f6\u95f4\u5e8f\u5217\uff1a http_requests_total{environment=~\"staging|testing|development\",method!=\"GET\"} \u6ca1\u6709\u6307\u5b9a\u6807\u7b7e\u7684\u6807\u7b7e\u8fc7\u6ee4\u5668\u4f1a\u9009\u62e9\u8be5\u6307\u6807\u540d\u79f0\u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217 \u3002 \u6240\u6709\u7684 PromQL \u8868\u8fbe\u5f0f\u5fc5\u987b\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u6307\u6807\u540d\u79f0\uff0c\u6216\u8005\u4e00\u4e2a\u4e0d\u4f1a\u5339\u914d\u5230\u7a7a\u5b57\u7b26\u4e32\u7684\u6807\u7b7e\u8fc7\u6ee4\u5668 \u3002 \u4ee5\u4e0b\u8868\u8fbe\u5f0f\u662f\u975e\u6cd5\u7684\uff08\u56e0\u4e3a\u4f1a\u5339\u914d\u5230\u7a7a\u5b57\u7b26\u4e32\uff09\uff1a {job=~\".*\"} # \u975e\u6cd5\uff01 \u4ee5\u4e0b\u8868\u8fbe\u5f0f\u662f\u5408\u6cd5\u7684\uff1a {job=~\".+\"} # \u5408\u6cd5\uff01 {job=~\".*\",method=\"get\"} # \u5408\u6cd5\uff01 \u9664\u4e86\u4f7f\u7528 <metric name>{label=value} \u7684\u5f62\u5f0f\u4ee5\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684 __name__ \u6807\u7b7e\u6765\u6307\u5b9a\u76d1\u63a7\u6307\u6807\u540d\u79f0\u3002 \u4f8b\u5982\uff1a\u8868\u8fbe\u5f0f http_requests_total \u7b49\u6548\u4e8e {__name__=\"http_requests_total\"} \u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u9664 = \u4e4b\u5916\u7684\u8fc7\u6ee4\u5668 \uff08=\uff0c=~\uff0c~\uff09 \u3002\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u9009\u62e9\u6307\u6807\u540d\u79f0\u4ee5 job : \u5f00\u5934\u7684\u6240\u6709\u6307\u6807\uff1a {__name__=~\"job:.*\"} Prometheus \u4e2d\u7684\u6240\u6709\u6b63\u5219\u8868\u8fbe\u5f0f\u90fd\u4f7f\u7528 RE2\u8bed\u6cd5\u3002","title":"3-1 \u77ac\u65f6\u5411\u91cf\u8fc7\u6ee4\u5668"},{"location":"chap8/1Promql_basic1/#4","text":"\u533a\u95f4\u5411\u91cf \u4e0e \u77ac\u65f6\u5411\u91cf \u7684\u5de5\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\uff0c\u552f\u4e00\u7684\u5dee\u5f02\u5728\u4e8e\u5728\u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\u4e2d\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u65f6\u95f4\u9009\u62e9\u7684\u8303\u56f4\uff0c\u65f6\u95f4\u8303\u56f4\u901a\u8fc7\u65f6\u95f4\u8303\u56f4\u9009\u62e9\u5668 [] \u8fdb\u884c\u5b9a\u4e49\uff0c\u4ee5\u6307\u5b9a\u5e94\u4e3a\u6bcf\u4e2a\u8fd4\u56de\u7684\u533a\u95f4\u5411\u91cf\u6837\u672c\u503c\u4e2d\u63d0\u53d6\u591a\u957f\u7684\u65f6\u95f4\u8303\u56f4\u3002 \u65f6\u95f4\u8303\u56f4\u901a\u8fc7\u6570\u5b57\u6765\u8868\u793a\uff0c\u5355\u4f4d\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5176\u4e2d\u4e4b\u4e00\u7684\u65f6\u95f4\u5355\u4f4d\uff1a s - \u79d2 m - \u5206\u949f h - \u5c0f\u65f6 d - \u5929 w - \u5468 y - \u5e74 \u4f8b\u5982\uff1a\u9009\u62e9\u5728\u8fc7\u53bb 5 \u5206\u949f\u5185\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \uff0c job \u6807\u7b7e\u503c\u4e3a prometheus \u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\uff1a http_requests_total{job=\"prometheus\"}[5m]","title":"4 \u533a\u95f4\u5411\u91cf\u8fc7\u6ee4\u5668"},{"location":"chap8/1Promql_basic1/#5","text":"\u5728\u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\u6216\u8005\u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\u4e2d\uff0c\u90fd\u662f\u4ee5\u5f53\u524d\u65f6\u95f4\u4e3a\u57fa\u51c6 \uff1a http_request_total{} # \u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\uff0c\u9009\u62e9\u5f53\u524d\u6700\u65b0\u7684\u6570\u636e http_request_total{}[5m] # \u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\uff0c\u9009\u62e9\u4ee5\u5f53\u524d\u65f6\u95f4\u4e3a\u57fa\u51c6\uff0c5\u5206\u949f\u5185\u7684\u6570\u636e \u800c\u5982\u679c\u6211\u4eec\u60f3\u67e5\u8be2\uff0c 5 \u5206\u949f\u524d\u7684\u77ac\u65f6\u6837\u672c\u6570\u636e\uff0c\u6216\u6628\u5929\u4e00\u5929\u7684\u533a\u95f4\u5185\u7684\u6837\u672c\u6570\u636e\u5462? \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4f4d\u79fb\u64cd\u4f5c\uff0c\u4f4d\u79fb\u64cd\u4f5c\u7684\u5173\u952e\u5b57\u4e3a offset \u3002 http_requests_total offset 5m \u6ce8\u610f \uff1a offset \u5173\u952e\u5b57\u9700\u8981\u7d27\u8ddf\u5728\u9009\u62e9\u5668\uff08 {} \uff09\u540e\u9762\u3002\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u662f\u6b63\u786e\u7684\uff1a sum(http_requests_total{method=\"GET\"} offset 5m) // GOOD. \u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u662f\u4e0d\u5408\u6cd5\u7684\uff1a sum(http_requests_total{method=\"GET\"}) offset 5m // INVALID. \u8be5\u64cd\u4f5c\u540c\u6837\u9002\u7528\u4e8e\u533a\u95f4\u5411\u91cf\u3002 \u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u6307\u6807 http_requests_total \u4e00\u5468\u524d\u7684 5 \u5206\u949f\u4e4b\u5185\u7684 HTTP \u8bf7\u6c42\u91cf\u7684\u589e\u957f\u7387\uff1a rate(http_requests_total[5m] offset 1w)","title":"5 \u65f6\u95f4\u4f4d\u79fb\u64cd\u4f5c"},{"location":"chap8/1Promql_basic1/#6","text":"\u6267\u884c\u67e5\u8be2\u64cd\u4f5c\u65f6\uff0c\u72ec\u7acb\u4e8e\u5f53\u524d\u65f6\u523b\u88ab\u9009\u4e2d\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6240\u5bf9\u5e94\u7684\u65f6\u95f4\u6233\uff0c\u8fd9\u4e2a\u65f6\u95f4\u6233\u4e3b\u8981\u7528\u6765\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\uff0c\u5305\u62ec sum , avg \u7b49\uff0c\u5927\u591a\u6570\u805a\u5408\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6240\u5bf9\u5e94\u7684\u65f6\u95f4\u6233\u6ca1\u6709\u5bf9\u9f50\u3002\u7531\u4e8e\u5b83\u4eec\u7684\u72ec\u7acb\u6027\uff0c\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e9b\u65f6\u95f4\u6233\u4e2d\u9009\u62e9\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u5e76\u5df2\u8fd9\u4e2a\u65f6\u95f4\u6233\u4e3a\u57fa\u51c6\uff0c\u83b7\u53d6\u5c0f\u4e8e\u4e14\u6700\u63a5\u8fd1\u8fd9\u4e2a\u65f6\u95f4\u6233\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u3002 \u5982\u679c\u91c7\u6837\u76ee\u6807\u6216\u544a\u8b66\u89c4\u5219\u4e0d\u518d\u8fd4\u56de\u4e4b\u524d\u5b58\u5728\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u6837\u672c\uff0c\u5219\u8be5\u65f6\u95f4\u5e8f\u5217\u5c06\u88ab\u6807\u8bb0\u4e3a\u5931\u6548\u3002\u5982\u679c\u5220\u9664\u4e86\u91c7\u6837\u76ee\u6807\uff0c\u5219\u4e4b\u524d\u8fd4\u56de\u7684\u65f6\u95f4\u5e8f\u5217\u4e5f\u4f1a\u5f88\u5feb\u88ab\u6807\u8bb0\u4e3a\u5931\u6548\u3002 \u5982\u679c\u5728\u67d0\u4e2a\u65f6\u95f4\u5e8f\u5217\u88ab\u6807\u8bb0\u4e3a\u5931\u6548\u540e\u5728\u8be5\u65f6\u95f4\u6233\u5904\u6267\u884c\u67e5\u8be2\u64cd\u4f5c\uff0c\u5219\u4e0d\u4f1a\u4e3a\u8be5\u65f6\u95f4\u5e8f\u5217\u8fd4\u56de\u4efb\u4f55\u503c\u3002\u5982\u679c\u968f\u540e\u5728\u8be5\u65f6\u95f4\u5e8f\u5217\u4e2d\u63d2\u5165\u4e86\u65b0\u7684\u6837\u672c\uff0c\u5219\u7167\u5e38\u8fd4\u56de\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u3002 \u5982\u679c\u5728\u91c7\u6837\u65f6\u95f4\u6233\u524d 5 \u5206\u949f\uff08\u9ed8\u8ba4\u60c5\u51b5\uff09\u672a\u627e\u5230\u4efb\u4f55\u6837\u672c\uff0c\u5219\u8be5\u65f6\u95f4\u6233\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u4efb\u4f55\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u3002\u8fd9\u5b9e\u9645\u4e0a\u610f\u5473\u7740\u4f60\u5728\u56fe\u8868\u4e2d\u770b\u5230\u7684\u6570\u636e\u90fd\u662f\u5728\u5f53\u524d\u65f6\u523b 5 \u5206\u949f\u524d\u7684\u6570\u636e\u3002 \u5bf9\u4e8e\u5728\u91c7\u6837\u70b9\u4e2d\u5305\u542b\u65f6\u95f4\u6233\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u4e0d\u4f1a\u88ab\u6807\u8bb0\u4e3a\u5931\u6548\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ec5\u4f7f\u7528 5 \u5206\u949f\u9608\u503c\u68c0\u6d4b\u7684\u89c4\u5219\u3002","title":"6 \u9677\u9631"},{"location":"chap8/1Promql_basic1/#7","text":"\u5982\u679c\u4e00\u4e2a\u67e5\u8be2\u9700\u8981\u64cd\u4f5c\u975e\u5e38\u5927\u7684\u6570\u636e\u91cf\uff0c\u56fe\u8868\u7ed8\u5236\u5f88\u53ef\u80fd\u4f1a\u8d85\u65f6\uff0c\u6216\u8005\u670d\u52a1\u5668\u8d1f\u8f7d\u8fc7\u9ad8 \u56e0\u6b64\uff0c\u5728\u5bf9\u672a\u77e5\u6570\u636e\u6784\u5efa\u67e5\u8be2\u65f6\uff0c\u59cb\u7ec8\u9700\u8981\u5728 Prometheus \u8868\u8fbe\u5f0f\u6d4f\u89c8\u5668\u7684\u8868\u683c\u89c6\u56fe\u4e2d\u6784\u5efa\u67e5\u8be2\uff0c\u76f4\u5230\u7ed3\u679c\u662f\u770b\u8d77\u6765\u5408\u7406\u7684\uff08\u6700\u591a\u4e3a\u6570\u767e\u4e2a\uff0c\u800c\u4e0d\u662f\u6570\u5343\u4e2a\uff09\u3002 \u53ea\u6709\u5f53\u4f60\u5df2\u7ecf\u5145\u5206\u8fc7\u6ee4\u6216\u8005\u805a\u5408\u6570\u636e\u65f6\uff0c\u624d\u5207\u6362\u5230\u56fe\u8868\u6a21\u5f0f\u3002\u5982\u679c\u8868\u8fbe\u5f0f\u7684\u67e5\u8be2\u7ed3\u679c\u4ecd\u7136\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u7ed8\u5236\u51fa\u6765\uff0c\u5219\u9700\u8981\u901a\u8fc7\u8bb0\u5f55\u89c4\u5219\u91cd\u65b0\u6e05\u6d17\u6570\u636e \u3002 \u50cf api_http_requests_total \u8fd9\u6837\u7b80\u5355\u7684\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u9009\u62e9\u5668\uff0c\u53ef\u4ee5\u6269\u5c55\u5230\u5177\u6709\u4e0d\u540c\u6807\u7b7e\u7684\u6570\u5343\u4e2a\u65f6\u95f4\u5e8f\u5217\u4e2d\uff0c\u8fd9\u5bf9\u4e8e Prometheus \u7684\u67e5\u8be2\u8bed\u8a00\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002 \u8fd8\u8981\u8bb0\u4f4f\uff0c\u5bf9\u4e8e\u805a\u5408\u64cd\u4f5c\u6765\u8bf4\uff0c\u5373\u4f7f\u8f93\u51fa\u7684\u65f6\u95f4\u5e8f\u5217\u96c6\u975e\u5e38\u5c11\uff0c\u5b83\u4e5f\u4f1a\u5728\u670d\u52a1\u5668\u4e0a\u4ea7\u751f\u8d1f\u8f7d\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u5728\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u4e00\u4e2a\u5b57\u6bb5\u7684\u603b\u548c\uff0c\u603b\u662f\u975e\u5e38\u7f13\u6162\u3002","title":"7 \u907f\u514d\u6162\u67e5\u8be2\u548c\u9ad8\u8d1f\u8f7d"},{"location":"chap8/2Promql_basic2/","text":"2 PromQL \u64cd\u4f5c\u7b26 & \u5185\u7f6e\u51fd\u6570 1 PromQL \u64cd\u4f5c\u7b26 1-1 \u4e8c\u5143\u8fd0\u7b97\u7b26 Prometheus \u7684\u67e5\u8be2\u8bed\u8a00\u652f\u6301\u57fa\u672c\u7684 \u903b\u8f91\u8fd0\u7b97 \u548c \u7b97\u672f\u8fd0\u7b97 \u3002\u5bf9\u4e8e\u4e24\u4e2a\u77ac\u65f6\u5411\u91cf, \u5339\u914d\u884c\u4e3a\u53ef\u4ee5\u88ab\u6539\u53d8\u3002 1-2 \u7b97\u672f\u4e8c\u5143\u8fd0\u7b97\u7b26 \u5728 Prometheus \u7cfb\u7edf\u4e2d\u652f\u6301\u4e0b\u9762\u7684\u4e8c\u5143\u7b97\u672f\u8fd0\u7b97\u7b26\uff1a + \u52a0\u6cd5 - \u51cf\u6cd5 * \u4e58\u6cd5 / \u9664\u6cd5 % \u6a21 ^ \u5e42\u7b49 \u4e8c\u5143\u8fd0\u7b97\u64cd\u4f5c\u7b26\u652f\u6301 scalar/scalar(\u6807\u91cf/\u6807\u91cf) \u3001 vector/scalar(\u5411\u91cf/\u6807\u91cf) \u3001\u548c vector/vector(\u5411\u91cf/\u5411\u91cf) \u4e4b\u95f4\u7684\u64cd\u4f5c\u3002 \u5728\u4e24\u4e2a\u6807\u91cf\u4e4b\u95f4\u8fdb\u884c\u6570\u5b66\u8fd0\u7b97\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e5f\u662f\u6807\u91cf\u3002 \u5728 \u5411\u91cf \u548c \u6807\u91cf \u4e4b\u95f4\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u4f1a\u4f5c\u7528\u4e8e\u8fd9\u4e2a\u5411\u91cf\u7684\u6bcf\u4e2a\u6837\u672c\u503c\u4e0a\u3002 \u4f8b\u5982\uff1a\u5982\u679c\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u77ac\u65f6\u5411\u91cf\u9664\u4ee5 2\uff0c\u64cd\u4f5c\u7ed3\u679c\u4e5f\u662f\u4e00\u4e2a\u65b0\u7684\u77ac\u65f6\u5411\u91cf\uff0c\u4e14\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u4e0d\u53d8, \u5b83\u662f\u539f\u5ea6\u91cf\u6307\u6807\u77ac\u65f6\u5411\u91cf\u7684\u6bcf\u4e2a\u6837\u672c\u503c\u9664\u4ee5 2\u3002 \u4f8b\u5982\uff0c \u5982\u679c\u6211\u4eec\u60f3\u6839\u636e node_disk_bytes_written \u548c node_disk_bytes_read \u83b7\u53d6\u4e3b\u673a\u78c1\u76d8IO\u7684\u603b\u91cf \uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8868\u8fbe\u5f0f\uff1a node_disk_bytes_written + node_disk_bytes_read \u8be5\u8868\u8fbe\u5f0f\u8fd4\u56de\u7ed3\u679c\u7684\u793a\u4f8b\u5982\u4e0b\u6240\u793a\uff1a {device=\"sda\",instance=\"localhost:9100\",job=\"node_exporter\"}=>1634967552@1518146427.807 + 864551424@1518146427.807 {device=\"sdb\",instance=\"localhost:9100\",job=\"node_exporter\"}=>0@1518146427.807 + 1744384@1518146427.807 1-3 \u5e03\u5c14\u8fd0\u7b97\u7b26 \u76ee\u524d\uff0cPrometheus \u652f\u6301\u4ee5\u4e0b\u5e03\u5c14\u8fd0\u7b97\u7b26\uff1a == (\u76f8\u7b49) != (\u4e0d\u76f8\u7b49) > (\u5927\u4e8e) < (\u5c0f\u4e8e) >= (\u5927\u4e8e\u7b49\u4e8e) <= (\u5c0f\u4e8e\u7b49\u4e8e) \u5e03\u5c14\u8fd0\u7b97\u7b26\u88ab\u5e94\u7528\u4e8e scalar/scalar\uff08\u6807\u91cf/\u6807\u91cf\uff09 \u3001 vector/scalar\uff08\u5411\u91cf/\u6807\u91cf\uff09 \uff0c\u548c vector/vector\uff08\u5411\u91cf/\u5411\u91cf\uff09 \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5e03\u5c14\u8fd0\u7b97\u7b26\u53ea\u4f1a\u6839\u636e\u65f6\u95f4\u5e8f\u5217\u4e2d\u6837\u672c\u7684\u503c\uff0c\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u8fc7\u6ee4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u8fd0\u7b97\u7b26\u540e\u9762\u4f7f\u7528 bool \u4fee\u9970\u7b26\u6765\u6539\u53d8\u5e03\u5c14\u8fd0\u7b97\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002\u4f7f\u7528 bool \u4fee\u6539\u7b26\u540e\uff0c\u5e03\u5c14\u8fd0\u7b97\u4e0d\u4f1a\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u8fc7\u6ee4\uff0c\u800c\u662f\u76f4\u63a5\u4f9d\u6b21\u77ac\u65f6\u5411\u91cf\u4e2d\u7684\u5404\u4e2a\u6837\u672c\u6570\u636e\u4e0e\u6807\u91cf\u7684\u6bd4\u8f83\u7ed3\u679c 0 \u6216\u8005 1 \u3002 \u5728\u4e24\u4e2a\u6807\u91cf\u4e4b\u95f4\u8fdb\u884c\u5e03\u5c14\u8fd0\u7b97\uff0c\u5fc5\u987b\u63d0\u4f9b bool \u4fee\u9970\u7b26\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e5f\u662f\u6807\u91cf\uff0c\u5373 0\uff08false\uff09 \u6216 1\uff08true\uff09 \u3002 \u4f8b\u5982\uff1a 2 > bool 1 # \u7ed3\u679c\u4e3a 1 \u77ac\u65f6\u5411\u91cf\u548c\u6807\u91cf\u4e4b\u95f4\u7684\u5e03\u5c14\u8fd0\u7b97\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u4f1a\u5e94\u7528\u5230\u67d0\u4e2a\u5f53\u524d\u65f6\u523b\u7684\u6bcf\u4e2a\u65f6\u5e8f\u6570\u636e\u4e0a\uff0c\u5982\u679c\u4e00\u4e2a\u65f6\u5e8f\u6570\u636e\u7684\u6837\u672c\u503c\u4e0e\u8fd9\u4e2a\u6807\u91cf\u6bd4\u8f83\u7684\u7ed3\u679c\u662f false \uff0c\u5219\u8fd9\u4e2a\u65f6\u5e8f\u6570\u636e\u88ab\u4e22\u5f03\u6389\uff0c\u5982\u679c\u662f true , \u5219\u8fd9\u4e2a\u65f6\u5e8f\u6570\u636e\u88ab\u4fdd\u7559\u5728\u7ed3\u679c\u4e2d\u3002 \u5982\u679c\u63d0\u4f9b\u4e86 bool \u4fee\u9970\u7b26\uff0c\u90a3\u4e48\u6bd4\u8f83\u7ed3\u679c\u662f 0 \u7684\u65f6\u5e8f\u6570\u636e\u88ab\u4e22\u5f03\u6389\uff0c\u800c\u6bd4\u8f83\u7ed3\u679c\u662f 1 \u7684\u65f6\u5e8f\u6570\u636e\u88ab\u4fdd\u7559\u3002 \u4f8b\u5982\uff1a http_requests_total > 100 # \u7ed3\u679c\u4e3a true \u6216 false http_requests_total > bool 100 # \u7ed3\u679c\u4e3a 1 \u6216 0 \u77ac\u65f6\u5411\u91cf\u4e0e\u77ac\u65f6\u5411\u91cf\u76f4\u63a5\u8fdb\u884c\u5e03\u5c14\u8fd0\u7b97\u65f6\uff0c\u540c\u6837\u9075\u5faa\u9ed8\u8ba4\u7684\u5339\u914d\u6a21\u5f0f\uff1a\u4f9d\u6b21\u627e\u5230\u4e0e\u5de6\u8fb9\u5411\u91cf\u5143\u7d20\u5339\u914d\uff08\u6807\u7b7e\u5b8c\u5168\u4e00\u81f4\uff09\u7684\u53f3\u8fb9\u5411\u91cf\u5143\u7d20\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5339\u914d\u5143\u7d20\uff0c\u6216\u8005\u8ba1\u7b97\u7ed3\u679c\u4e3a false \uff0c\u5219\u76f4\u63a5\u4e22\u5f03\u3002\u5982\u679c\u5339\u914d\u4e0a\u4e86\uff0c\u5219\u5c06\u5de6\u8fb9\u5411\u91cf\u7684\u5ea6\u91cf\u6307\u6807\u548c\u6807\u7b7e\u7684\u6837\u672c\u6570\u636e\u5199\u5165\u77ac\u65f6\u5411\u91cf\u3002\u5982\u679c\u63d0\u4f9b\u4e86 bool \u4fee\u9970\u7b26\uff0c\u90a3\u4e48\u6bd4\u8f83\u7ed3\u679c\u662f 0 \u7684\u65f6\u5e8f\u6570\u636e\u88ab\u4e22\u5f03\u6389\uff0c\u800c\u6bd4\u8f83\u7ed3\u679c\u662f 1 \u7684\u65f6\u5e8f\u6570\u636e\uff08\u53ea\u4fdd\u7559\u5de6\u8fb9\u5411\u91cf\uff09\u88ab\u4fdd\u7559\u3002 1-4 \u96c6\u5408\u8fd0\u7b97\u7b26 \u4f7f\u7528\u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\u80fd\u591f\u83b7\u53d6\u5230\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u96c6\u5408\uff0c\u6211\u4eec\u79f0\u4e3a\u77ac\u65f6\u5411\u91cf \u3002 \u901a\u8fc7\u96c6\u5408\u8fd0\u7b97\uff0c\u53ef\u4ee5\u5728\u4e24\u4e2a\u77ac\u65f6\u5411\u91cf\u4e0e\u77ac\u65f6\u5411\u91cf\u4e4b\u95f4\u8fdb\u884c\u76f8\u5e94\u7684\u96c6\u5408\u64cd\u4f5c\u3002\u76ee\u524d\uff0c Prometheus \u652f\u6301\u4ee5\u4e0b\u96c6\u5408\u8fd0\u7b97\u7b26\uff1a and (\u5e76\u4e14) or (\u6216\u8005) unless (\u6392\u9664) vector1 and vector2 \u4f1a\u4ea7\u751f\u4e00\u4e2a\u7531 vector1 \u7684\u5143\u7d20\u7ec4\u6210\u7684\u65b0\u7684\u5411\u91cf\u3002\u8be5\u5411\u91cf\u5305\u542b vector1 \u4e2d\u5b8c\u5168\u5339\u914d vector2 \u4e2d\u7684\u5143\u7d20\u7ec4\u6210\u3002 vector1 or vector2 \u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5411\u91cf\uff0c\u8be5\u5411\u91cf\u5305\u542b vector1 \u4e2d\u6240\u6709\u7684\u6837\u672c\u6570\u636e\uff0c\u4ee5\u53ca vector2 \u4e2d\u6ca1\u6709\u4e0e vector1 \u5339\u914d\u5230\u7684\u6837\u672c\u6570\u636e\u3002 vector1 unless vector2 \u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5411\u91cf\uff0c\u65b0\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u7531 vector1 \u4e2d\u6ca1\u6709\u4e0e vector2 \u5339\u914d\u7684\u5143\u7d20\u7ec4\u6210\u3002 1-5 \u5339\u914d\u6a21\u5f0f \u5411\u91cf\u4e0e\u5411\u91cf\u4e4b\u95f4\u8fdb\u884c\u8fd0\u7b97\u64cd\u4f5c\u65f6\u4f1a\u57fa\u4e8e\u9ed8\u8ba4\u7684\u5339\u914d\u89c4\u5219\uff1a\u4f9d\u6b21\u627e\u5230\u4e0e\u5de6\u8fb9\u5411\u91cf\u5143\u7d20\u5339\u914d\uff08\u6807\u7b7e\u5b8c\u5168\u4e00\u81f4\uff09\u7684\u53f3\u8fb9\u5411\u91cf\u5143\u7d20\u8fdb\u884c\u8fd0\u7b97\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5339\u914d\u5143\u7d20\uff0c\u5219\u76f4\u63a5\u4e22\u5f03\u3002 \u63a5\u4e0b\u6765\u5c06\u4ecb\u7ecd\u5728 PromQL \u4e2d\u6709\u4e24\u79cd\u5178\u578b\u7684\u5339\u914d\u6a21\u5f0f\uff1a \u4e00\u5bf9\u4e00\uff08 one-to-one \uff09 \u591a\u5bf9\u4e00\uff08 many-to-one \uff09 \u4e00\u5bf9\u591a\uff08 one-to-many \uff09 \u4e00\u5bf9\u4e00\u5339\u914d \u4e00\u5bf9\u4e00\u5339\u914d\u6a21\u5f0f\u4f1a\u4ece\u64cd\u4f5c\u7b26\u4e24\u8fb9\u8868\u8fbe\u5f0f\u83b7\u53d6\u7684\u77ac\u65f6\u5411\u91cf\u4f9d\u6b21\u6bd4\u8f83\u5e76\u627e\u5230\u552f\u4e00\u5339\u914d(\u6807\u7b7e\u5b8c\u5168\u4e00\u81f4)\u7684\u6837\u672c\u503c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a vector1 <operator> vector2 \u5728\u64cd\u4f5c\u7b26\u4e24\u8fb9\u8868\u8fbe\u5f0f\u6807\u7b7e\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 on(label list) \u6216\u8005 ignoring(label list \uff09\u6765\u4fee\u6539\u4fbf\u7b7e\u7684\u5339\u914d\u884c\u4e3a\u3002 \u4f7f\u7528 ignoreing \u53ef\u4ee5\u5728\u5339\u914d\u65f6\u5ffd\u7565\u67d0\u4e9b\u4fbf\u7b7e\u3002\u800c on \u5219\u7528\u4e8e\u5c06\u5339\u914d\u884c\u4e3a\u9650\u5b9a\u5728\u67d0\u4e9b\u4fbf\u7b7e\u4e4b\u5185\u3002 <vector expr> <bin-op> ignoring(<label list>) <vector expr> <vector expr> <bin-op> on(<label list>) <vector expr> \u4f8b\u5982\u5f53\u5b58\u5728\u6837\u672c\uff1a method_code:http_errors:rate5m{method=\"get\", code=\"500\"} 24 method_code:http_errors:rate5m{method=\"get\", code=\"404\"} 30 method_code:http_errors:rate5m{method=\"put\", code=\"501\"} 3 method_code:http_errors:rate5m{method=\"post\", code=\"500\"} 6 method_code:http_errors:rate5m{method=\"post\", code=\"404\"} 21 method:http_requests:rate5m{method=\"get\"} 600 method:http_requests:rate5m{method=\"del\"} 34 method:http_requests:rate5m{method=\"post\"} 120 \u4f7f\u7528 PromQL \u8868\u8fbe\u5f0f\uff1a method_code:http_errors:rate5m{code=\"500\"} / ignoring(code) method:http_requests:rate5m ignoring(code) \u8be5\u8868\u8fbe\u5f0f\u4f1a\u8fd4\u56de\u5728\u8fc7\u53bb 5 \u5206\u949f\u5185\uff0c HTTP \u8bf7\u6c42\u72b6\u6001\u7801\u4e3a 500 \u7684\u5728\u6240\u6709\u8bf7\u6c42\u4e2d\u7684\u6bd4\u4f8b\u3002 \u5982\u679c\u6ca1\u6709\u4f7f\u7528 ignoring(code) \uff0c\u64cd\u4f5c\u7b26\u4e24\u8fb9\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u77ac\u65f6\u5411\u91cf\u4e2d\u5c06\u627e\u4e0d\u5230\u4efb\u4f55\u4e00\u4e2a\u6807\u7b7e\u5b8c\u5168\u76f8\u540c\u7684\u5339\u914d\u9879\u3002 \u56e0\u6b64\u7ed3\u679c\u5982\u4e0b\uff1a {method=\"get\"} 0.04 // 24 / 600 {method=\"post\"} 0.05 // 6 / 120 \u540c\u65f6\u7531\u4e8e method \u4e3a put \u548c del \u7684\u6837\u672c\u627e\u4e0d\u5230\u5339\u914d\u9879\uff0c\u56e0\u6b64\u4e0d\u4f1a\u51fa\u73b0\u5728\u7ed3\u679c\u5f53\u4e2d \u3002 \u591a\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a \u591a\u5bf9\u4e00\u548c\u4e00 \u5bf9\u591a\u4e24\u79cd\u5339\u914d\u6a21\u5f0f\u6307\u7684\u662f\u201c\u4e00\u201d\u4fa7\u7684\u6bcf\u4e00\u4e2a\u5411\u91cf\u5143\u7d20\u53ef\u4ee5\u4e0e\"\u591a\"\u4fa7\u7684\u591a\u4e2a\u5143\u7d20\u5339\u914d\u7684\u60c5\u51b5\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5fc5\u987b\u4f7f\u7528 group \u4fee\u9970\u7b26\uff1a group_left \u6216\u8005 group_right \u6765\u786e\u5b9a\u54ea\u4e00\u4e2a\u5411\u91cf\u5177\u6709\u66f4\u9ad8\u7684\u57fa\u6570\uff08\u5145\u5f53\u201c\u591a\u201d\u7684\u89d2\u8272\uff09\u3002 <vector expr> <bin-op> ignoring(<label list>) group_left(<label list>) <vector expr> <vector expr> <bin-op> ignoring(<label list>) group_right(<label list>) <vector expr> <vector expr> <bin-op> on(<label list>) group_left(<label list>) <vector expr> <vector expr> <bin-op> on(<label list>) group_right(<label list>) <vector expr> \u591a\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a\u4e24\u79cd\u6a21\u5f0f\u4e00\u5b9a\u662f\u51fa\u73b0\u5728\u64cd\u4f5c\u7b26\u4e24\u4fa7\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u5411\u91cf\u6807\u7b7e\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\u3002 \u56e0\u6b64\u9700\u8981\u4f7f\u7528 ignoring \u548c on \u4fee\u9970\u7b26\u6765\u6392\u9664\u6216\u8005\u9650\u5b9a\u5339\u914d\u7684\u6807\u7b7e\u5217\u8868 \u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a method_code:http_errors:rate5m / ignoring(code) group_left method:http_requests:rate5m \u8be5\u8868\u8fbe\u5f0f\u4e2d\uff0c \u5de6\u5411\u91cf method_code:http_errors:rate5m \u5305\u542b\u4e24\u4e2a\u6807\u7b7e method \u548c code \u3002 \u53f3\u5411\u91cf method:http_requests:rate5m \u4e2d\u53ea\u5305\u542b\u4e00\u4e2a\u6807\u7b7e method \uff0c\u56e0\u6b64\u5339\u914d\u65f6\u9700\u8981\u4f7f\u7528 ignoring \u9650\u5b9a\u5339\u914d\u7684\u6807\u7b7e\u4e3a code \u3002 \u5728\u9650\u5b9a\u5339\u914d\u6807\u7b7e\u540e\uff0c\u53f3\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u53ef\u80fd\u5339\u914d\u5230\u591a\u4e2a\u5de6\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u56e0\u6b64\u8be5\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u6a21\u5f0f\u4e3a\u591a\u5bf9\u4e00\uff0c\u9700\u8981\u4f7f\u7528 group \u4fee\u9970\u7b26 group_left \u6307\u5b9a\u5de6\u5411\u91cf\u5177\u6709\u66f4\u597d\u7684\u57fa\u6570\u3002 \u6700\u7ec8\u7684\u8fd0\u7b97\u7ed3\u679c\u5982\u4e0b\uff1a {method=\"get\", code=\"500\"} 0.04 // 24 / 600 {method=\"get\", code=\"404\"} 0.05 // 30 / 600 {method=\"post\", code=\"500\"} 0.05 // 6 / 120 {method=\"post\", code=\"404\"} 0.175 // 21 / 120 \u63d0\u9192\uff1agroup \u4fee\u9970\u7b26\u53ea\u80fd\u5728\u6bd4\u8f83\u548c\u6570\u5b66\u8fd0\u7b97\u7b26\u4e2d\u4f7f\u7528\u3002\u5728\u903b\u8f91\u8fd0\u7b97 and\uff0cunless \u548c or \u64cd\u4f5c\u4e2d\u9ed8\u8ba4\u4e0e\u53f3\u5411\u91cf\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u5339\u914d\u3002 1-6 \u805a\u5408\u64cd\u4f5c Prometheus \u8fd8\u63d0\u4f9b\u4e86\u4e0b\u5217\u5185\u7f6e\u7684\u805a\u5408\u64cd\u4f5c\u7b26\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u7b26\u4f5c\u7528\u57df\u77ac\u65f6\u5411\u91cf\u3002\u53ef\u4ee5\u5c06\u77ac\u65f6\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u8fdb\u884c\u805a\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u5177\u6709\u8f83\u5c11\u6837\u672c\u503c\u7684\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\u3002 sum (\u6c42\u548c) min (\u6700\u5c0f\u503c) max (\u6700\u5927\u503c) avg (\u5e73\u5747\u503c) stddev (\u6807\u51c6\u5dee) stdvar (\u6807\u51c6\u5dee\u5f02) count (\u8ba1\u6570) count_values (\u5bf9 value \u8fdb\u884c\u8ba1\u6570) bottomk (\u6837\u672c\u503c\u6700\u5c0f\u7684 k \u4e2a\u5143\u7d20) topk (\u6837\u672c\u503c\u6700\u5927\u7684k\u4e2a\u5143\u7d20) quantile (\u5206\u5e03\u7edf\u8ba1) \u8fd9\u4e9b\u64cd\u4f5c\u7b26\u88ab\u7528\u4e8e\u805a\u5408\u6240\u6709\u6807\u7b7e\u7ef4\u5ea6\uff0c\u6216\u8005\u901a\u8fc7 without \u6216\u8005 by \u5b50\u8bed\u53e5\u6765\u4fdd\u7559\u4e0d\u540c\u7684\u7ef4\u5ea6\u3002 <aggr-op>([parameter,] <vector expression>) [without|by (<label list>)] \u5176\u4e2d\u53ea\u6709 count_values , quantile , topk , bottomk \u652f\u6301\u53c2\u6570( parameter ) \u3002 without \u7528\u4e8e\u4ece\u8ba1\u7b97\u7ed3\u679c\u4e2d\u79fb\u9664\u5217\u4e3e\u7684\u6807\u7b7e\uff0c\u800c\u4fdd\u7559\u5176\u5b83\u6807\u7b7e \u3002 by \u5219\u6b63\u597d\u76f8\u53cd\uff0c\u7ed3\u679c\u5411\u91cf\u4e2d\u53ea\u4fdd\u7559\u5217\u51fa\u7684\u6807\u7b7e\uff0c\u5176\u4f59\u6807\u7b7e\u5219\u79fb\u9664 \u3002 \u901a\u8fc7 without \u548c by \u53ef\u4ee5\u6309\u7167\u6837\u672c\u7684\u95ee\u9898\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u3002 \u4f8b\u5982\uff1a \u5982\u679c\u6307\u6807 http_requests_total \u7684\u65f6\u95f4\u5e8f\u5217\u7684\u6807\u7b7e\u96c6\u4e3a application , instance, \u548c group \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8ba1\u7b97\u6240\u6709 instance \u4e2d\u6bcf\u4e2a application \u548c group \u7684\u8bf7\u6c42\u603b\u91cf\uff1a sum(http_requests_total) without (instance) \u7b49\u4ef7\u4e8e sum(http_requests_total) by (application, group) \u5982\u679c\u53ea\u9700\u8981\u8ba1\u7b97\u6574\u4e2a\u5e94\u7528\u7684 HTTP \u8bf7\u6c42\u603b\u91cf \uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a sum(http_requests_total) count_values \u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u6837\u672c\u503c\u51fa\u73b0\u7684\u6b21\u6570\u3002 count_values \u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u552f\u4e00\u7684\u6837\u672c\u503c\u8f93\u51fa\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684\u6807\u7b7e\u3002\u8fd9\u4e2a\u6807\u7b7e\u7684\u540d\u5b57\u7531\u805a\u5408\u53c2\u6570\u6307\u5b9a\uff0c\u540c\u65f6\u8fd9\u4e2a\u6807\u7b7e\u503c\u662f\u552f\u4e00\u7684\u6837\u672c\u503c\u3002 \u4f8b\u5982\u8981\u8ba1\u7b97\u8fd0\u884c\u6bcf\u4e2a\u6784\u5efa\u7248\u672c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684 count_values(\"version\", build_version) \u8fd4\u56de\u7ed3\u679c\u5982\u4e0b\uff1a {count=\"641\"} 1 {count=\"3226\"} 2 {count=\"644\"} 4 topk \u548c bottomk \u5219\u7528\u4e8e\u5bf9\u6837\u672c\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd4\u56de\u5f53\u524d\u6837\u672c\u503c\u524d n \u4f4d\uff0c\u6216\u8005\u540e n \u4f4d\u7684\u65f6\u95f4\u5e8f\u5217\u3002 \u83b7\u53d6 HTTP \u8bf7\u6c42\u6570\u524d 5 \u4f4d\u7684\u65f6\u5e8f\u6837\u672c\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a topk(5, http_requests_total) quantile \u7528\u4e8e\u8ba1\u7b97\u5f53\u524d\u6837\u672c\u6570\u636e\u503c\u7684\u5206\u5e03\u60c5\u51b5 quantile(\u03c6, express) \uff0c\u5176\u4e2d 0 \u2264 \u03c6 \u2264 1 \u3002 \u4f8b\u5982\uff0c\u5f53 \u03c6 \u4e3a 0.5 \u65f6\uff0c\u5373\u8868\u793a\u627e\u5230\u5f53\u524d\u6837\u672c\u6570\u636e\u4e2d\u7684\u4e2d\u4f4d\u6570\uff1a quantile(0.5, http_requests_total) \u8fd4\u56de\u7ed3\u679c\u5982\u4e0b\uff1a {} 656 1-7 \u4e8c\u5143\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7 \u5728 Prometheus \u7cfb\u7edf\u4e2d\uff0c\u4e8c\u5143\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f\u4e3a\uff1a ^ *, /, % +, - ==, !=, <=, <, >=, > and, unless or \u5177\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u8fd0\u7b97\u7b26\u662f\u6ee1\u8db3\u7ed3\u5408\u5f8b\u7684\uff08\u5de6\u7ed3\u5408\uff09\u3002\u4f8b\u5982\uff0c 2 * 3 % 2 \u7b49\u4ef7\u4e8e (2 * 3) % 2 \u3002 \u8fd0\u7b97\u7b26 ^ \u4f8b\u5916\uff0c ^ \u6ee1\u8db3\u7684\u662f\u53f3\u7ed3\u5408\uff0c\u4f8b\u5982\uff0c 2 ^ 3 ^ 2 \u7b49\u4ef7\u4e8e 2 ^ (3 ^ 2) \u3002","title":"2 PromQL \u64cd\u4f5c\u7b26 & \u5185\u7f6e\u51fd\u6570"},{"location":"chap8/2Promql_basic2/#2-promql","text":"","title":"2 PromQL \u64cd\u4f5c\u7b26 &amp; \u5185\u7f6e\u51fd\u6570"},{"location":"chap8/2Promql_basic2/#1-promql","text":"","title":"1 PromQL \u64cd\u4f5c\u7b26"},{"location":"chap8/2Promql_basic2/#1-1","text":"Prometheus \u7684\u67e5\u8be2\u8bed\u8a00\u652f\u6301\u57fa\u672c\u7684 \u903b\u8f91\u8fd0\u7b97 \u548c \u7b97\u672f\u8fd0\u7b97 \u3002\u5bf9\u4e8e\u4e24\u4e2a\u77ac\u65f6\u5411\u91cf, \u5339\u914d\u884c\u4e3a\u53ef\u4ee5\u88ab\u6539\u53d8\u3002","title":"1-1 \u4e8c\u5143\u8fd0\u7b97\u7b26"},{"location":"chap8/2Promql_basic2/#1-2","text":"\u5728 Prometheus \u7cfb\u7edf\u4e2d\u652f\u6301\u4e0b\u9762\u7684\u4e8c\u5143\u7b97\u672f\u8fd0\u7b97\u7b26\uff1a + \u52a0\u6cd5 - \u51cf\u6cd5 * \u4e58\u6cd5 / \u9664\u6cd5 % \u6a21 ^ \u5e42\u7b49 \u4e8c\u5143\u8fd0\u7b97\u64cd\u4f5c\u7b26\u652f\u6301 scalar/scalar(\u6807\u91cf/\u6807\u91cf) \u3001 vector/scalar(\u5411\u91cf/\u6807\u91cf) \u3001\u548c vector/vector(\u5411\u91cf/\u5411\u91cf) \u4e4b\u95f4\u7684\u64cd\u4f5c\u3002 \u5728\u4e24\u4e2a\u6807\u91cf\u4e4b\u95f4\u8fdb\u884c\u6570\u5b66\u8fd0\u7b97\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e5f\u662f\u6807\u91cf\u3002 \u5728 \u5411\u91cf \u548c \u6807\u91cf \u4e4b\u95f4\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u4f1a\u4f5c\u7528\u4e8e\u8fd9\u4e2a\u5411\u91cf\u7684\u6bcf\u4e2a\u6837\u672c\u503c\u4e0a\u3002 \u4f8b\u5982\uff1a\u5982\u679c\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u77ac\u65f6\u5411\u91cf\u9664\u4ee5 2\uff0c\u64cd\u4f5c\u7ed3\u679c\u4e5f\u662f\u4e00\u4e2a\u65b0\u7684\u77ac\u65f6\u5411\u91cf\uff0c\u4e14\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u4e0d\u53d8, \u5b83\u662f\u539f\u5ea6\u91cf\u6307\u6807\u77ac\u65f6\u5411\u91cf\u7684\u6bcf\u4e2a\u6837\u672c\u503c\u9664\u4ee5 2\u3002 \u4f8b\u5982\uff0c \u5982\u679c\u6211\u4eec\u60f3\u6839\u636e node_disk_bytes_written \u548c node_disk_bytes_read \u83b7\u53d6\u4e3b\u673a\u78c1\u76d8IO\u7684\u603b\u91cf \uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8868\u8fbe\u5f0f\uff1a node_disk_bytes_written + node_disk_bytes_read \u8be5\u8868\u8fbe\u5f0f\u8fd4\u56de\u7ed3\u679c\u7684\u793a\u4f8b\u5982\u4e0b\u6240\u793a\uff1a {device=\"sda\",instance=\"localhost:9100\",job=\"node_exporter\"}=>1634967552@1518146427.807 + 864551424@1518146427.807 {device=\"sdb\",instance=\"localhost:9100\",job=\"node_exporter\"}=>0@1518146427.807 + 1744384@1518146427.807","title":"1-2 \u7b97\u672f\u4e8c\u5143\u8fd0\u7b97\u7b26"},{"location":"chap8/2Promql_basic2/#1-3","text":"\u76ee\u524d\uff0cPrometheus \u652f\u6301\u4ee5\u4e0b\u5e03\u5c14\u8fd0\u7b97\u7b26\uff1a == (\u76f8\u7b49) != (\u4e0d\u76f8\u7b49) > (\u5927\u4e8e) < (\u5c0f\u4e8e) >= (\u5927\u4e8e\u7b49\u4e8e) <= (\u5c0f\u4e8e\u7b49\u4e8e) \u5e03\u5c14\u8fd0\u7b97\u7b26\u88ab\u5e94\u7528\u4e8e scalar/scalar\uff08\u6807\u91cf/\u6807\u91cf\uff09 \u3001 vector/scalar\uff08\u5411\u91cf/\u6807\u91cf\uff09 \uff0c\u548c vector/vector\uff08\u5411\u91cf/\u5411\u91cf\uff09 \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5e03\u5c14\u8fd0\u7b97\u7b26\u53ea\u4f1a\u6839\u636e\u65f6\u95f4\u5e8f\u5217\u4e2d\u6837\u672c\u7684\u503c\uff0c\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u8fc7\u6ee4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u8fd0\u7b97\u7b26\u540e\u9762\u4f7f\u7528 bool \u4fee\u9970\u7b26\u6765\u6539\u53d8\u5e03\u5c14\u8fd0\u7b97\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002\u4f7f\u7528 bool \u4fee\u6539\u7b26\u540e\uff0c\u5e03\u5c14\u8fd0\u7b97\u4e0d\u4f1a\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u8fc7\u6ee4\uff0c\u800c\u662f\u76f4\u63a5\u4f9d\u6b21\u77ac\u65f6\u5411\u91cf\u4e2d\u7684\u5404\u4e2a\u6837\u672c\u6570\u636e\u4e0e\u6807\u91cf\u7684\u6bd4\u8f83\u7ed3\u679c 0 \u6216\u8005 1 \u3002 \u5728\u4e24\u4e2a\u6807\u91cf\u4e4b\u95f4\u8fdb\u884c\u5e03\u5c14\u8fd0\u7b97\uff0c\u5fc5\u987b\u63d0\u4f9b bool \u4fee\u9970\u7b26\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e5f\u662f\u6807\u91cf\uff0c\u5373 0\uff08false\uff09 \u6216 1\uff08true\uff09 \u3002 \u4f8b\u5982\uff1a 2 > bool 1 # \u7ed3\u679c\u4e3a 1 \u77ac\u65f6\u5411\u91cf\u548c\u6807\u91cf\u4e4b\u95f4\u7684\u5e03\u5c14\u8fd0\u7b97\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u4f1a\u5e94\u7528\u5230\u67d0\u4e2a\u5f53\u524d\u65f6\u523b\u7684\u6bcf\u4e2a\u65f6\u5e8f\u6570\u636e\u4e0a\uff0c\u5982\u679c\u4e00\u4e2a\u65f6\u5e8f\u6570\u636e\u7684\u6837\u672c\u503c\u4e0e\u8fd9\u4e2a\u6807\u91cf\u6bd4\u8f83\u7684\u7ed3\u679c\u662f false \uff0c\u5219\u8fd9\u4e2a\u65f6\u5e8f\u6570\u636e\u88ab\u4e22\u5f03\u6389\uff0c\u5982\u679c\u662f true , \u5219\u8fd9\u4e2a\u65f6\u5e8f\u6570\u636e\u88ab\u4fdd\u7559\u5728\u7ed3\u679c\u4e2d\u3002 \u5982\u679c\u63d0\u4f9b\u4e86 bool \u4fee\u9970\u7b26\uff0c\u90a3\u4e48\u6bd4\u8f83\u7ed3\u679c\u662f 0 \u7684\u65f6\u5e8f\u6570\u636e\u88ab\u4e22\u5f03\u6389\uff0c\u800c\u6bd4\u8f83\u7ed3\u679c\u662f 1 \u7684\u65f6\u5e8f\u6570\u636e\u88ab\u4fdd\u7559\u3002 \u4f8b\u5982\uff1a http_requests_total > 100 # \u7ed3\u679c\u4e3a true \u6216 false http_requests_total > bool 100 # \u7ed3\u679c\u4e3a 1 \u6216 0 \u77ac\u65f6\u5411\u91cf\u4e0e\u77ac\u65f6\u5411\u91cf\u76f4\u63a5\u8fdb\u884c\u5e03\u5c14\u8fd0\u7b97\u65f6\uff0c\u540c\u6837\u9075\u5faa\u9ed8\u8ba4\u7684\u5339\u914d\u6a21\u5f0f\uff1a\u4f9d\u6b21\u627e\u5230\u4e0e\u5de6\u8fb9\u5411\u91cf\u5143\u7d20\u5339\u914d\uff08\u6807\u7b7e\u5b8c\u5168\u4e00\u81f4\uff09\u7684\u53f3\u8fb9\u5411\u91cf\u5143\u7d20\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5339\u914d\u5143\u7d20\uff0c\u6216\u8005\u8ba1\u7b97\u7ed3\u679c\u4e3a false \uff0c\u5219\u76f4\u63a5\u4e22\u5f03\u3002\u5982\u679c\u5339\u914d\u4e0a\u4e86\uff0c\u5219\u5c06\u5de6\u8fb9\u5411\u91cf\u7684\u5ea6\u91cf\u6307\u6807\u548c\u6807\u7b7e\u7684\u6837\u672c\u6570\u636e\u5199\u5165\u77ac\u65f6\u5411\u91cf\u3002\u5982\u679c\u63d0\u4f9b\u4e86 bool \u4fee\u9970\u7b26\uff0c\u90a3\u4e48\u6bd4\u8f83\u7ed3\u679c\u662f 0 \u7684\u65f6\u5e8f\u6570\u636e\u88ab\u4e22\u5f03\u6389\uff0c\u800c\u6bd4\u8f83\u7ed3\u679c\u662f 1 \u7684\u65f6\u5e8f\u6570\u636e\uff08\u53ea\u4fdd\u7559\u5de6\u8fb9\u5411\u91cf\uff09\u88ab\u4fdd\u7559\u3002","title":"1-3 \u5e03\u5c14\u8fd0\u7b97\u7b26"},{"location":"chap8/2Promql_basic2/#1-4","text":"\u4f7f\u7528\u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\u80fd\u591f\u83b7\u53d6\u5230\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u96c6\u5408\uff0c\u6211\u4eec\u79f0\u4e3a\u77ac\u65f6\u5411\u91cf \u3002 \u901a\u8fc7\u96c6\u5408\u8fd0\u7b97\uff0c\u53ef\u4ee5\u5728\u4e24\u4e2a\u77ac\u65f6\u5411\u91cf\u4e0e\u77ac\u65f6\u5411\u91cf\u4e4b\u95f4\u8fdb\u884c\u76f8\u5e94\u7684\u96c6\u5408\u64cd\u4f5c\u3002\u76ee\u524d\uff0c Prometheus \u652f\u6301\u4ee5\u4e0b\u96c6\u5408\u8fd0\u7b97\u7b26\uff1a and (\u5e76\u4e14) or (\u6216\u8005) unless (\u6392\u9664) vector1 and vector2 \u4f1a\u4ea7\u751f\u4e00\u4e2a\u7531 vector1 \u7684\u5143\u7d20\u7ec4\u6210\u7684\u65b0\u7684\u5411\u91cf\u3002\u8be5\u5411\u91cf\u5305\u542b vector1 \u4e2d\u5b8c\u5168\u5339\u914d vector2 \u4e2d\u7684\u5143\u7d20\u7ec4\u6210\u3002 vector1 or vector2 \u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5411\u91cf\uff0c\u8be5\u5411\u91cf\u5305\u542b vector1 \u4e2d\u6240\u6709\u7684\u6837\u672c\u6570\u636e\uff0c\u4ee5\u53ca vector2 \u4e2d\u6ca1\u6709\u4e0e vector1 \u5339\u914d\u5230\u7684\u6837\u672c\u6570\u636e\u3002 vector1 unless vector2 \u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5411\u91cf\uff0c\u65b0\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u7531 vector1 \u4e2d\u6ca1\u6709\u4e0e vector2 \u5339\u914d\u7684\u5143\u7d20\u7ec4\u6210\u3002","title":"1-4 \u96c6\u5408\u8fd0\u7b97\u7b26"},{"location":"chap8/2Promql_basic2/#1-5","text":"\u5411\u91cf\u4e0e\u5411\u91cf\u4e4b\u95f4\u8fdb\u884c\u8fd0\u7b97\u64cd\u4f5c\u65f6\u4f1a\u57fa\u4e8e\u9ed8\u8ba4\u7684\u5339\u914d\u89c4\u5219\uff1a\u4f9d\u6b21\u627e\u5230\u4e0e\u5de6\u8fb9\u5411\u91cf\u5143\u7d20\u5339\u914d\uff08\u6807\u7b7e\u5b8c\u5168\u4e00\u81f4\uff09\u7684\u53f3\u8fb9\u5411\u91cf\u5143\u7d20\u8fdb\u884c\u8fd0\u7b97\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5339\u914d\u5143\u7d20\uff0c\u5219\u76f4\u63a5\u4e22\u5f03\u3002 \u63a5\u4e0b\u6765\u5c06\u4ecb\u7ecd\u5728 PromQL \u4e2d\u6709\u4e24\u79cd\u5178\u578b\u7684\u5339\u914d\u6a21\u5f0f\uff1a \u4e00\u5bf9\u4e00\uff08 one-to-one \uff09 \u591a\u5bf9\u4e00\uff08 many-to-one \uff09 \u4e00\u5bf9\u591a\uff08 one-to-many \uff09 \u4e00\u5bf9\u4e00\u5339\u914d \u4e00\u5bf9\u4e00\u5339\u914d\u6a21\u5f0f\u4f1a\u4ece\u64cd\u4f5c\u7b26\u4e24\u8fb9\u8868\u8fbe\u5f0f\u83b7\u53d6\u7684\u77ac\u65f6\u5411\u91cf\u4f9d\u6b21\u6bd4\u8f83\u5e76\u627e\u5230\u552f\u4e00\u5339\u914d(\u6807\u7b7e\u5b8c\u5168\u4e00\u81f4)\u7684\u6837\u672c\u503c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a vector1 <operator> vector2 \u5728\u64cd\u4f5c\u7b26\u4e24\u8fb9\u8868\u8fbe\u5f0f\u6807\u7b7e\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 on(label list) \u6216\u8005 ignoring(label list \uff09\u6765\u4fee\u6539\u4fbf\u7b7e\u7684\u5339\u914d\u884c\u4e3a\u3002 \u4f7f\u7528 ignoreing \u53ef\u4ee5\u5728\u5339\u914d\u65f6\u5ffd\u7565\u67d0\u4e9b\u4fbf\u7b7e\u3002\u800c on \u5219\u7528\u4e8e\u5c06\u5339\u914d\u884c\u4e3a\u9650\u5b9a\u5728\u67d0\u4e9b\u4fbf\u7b7e\u4e4b\u5185\u3002 <vector expr> <bin-op> ignoring(<label list>) <vector expr> <vector expr> <bin-op> on(<label list>) <vector expr> \u4f8b\u5982\u5f53\u5b58\u5728\u6837\u672c\uff1a method_code:http_errors:rate5m{method=\"get\", code=\"500\"} 24 method_code:http_errors:rate5m{method=\"get\", code=\"404\"} 30 method_code:http_errors:rate5m{method=\"put\", code=\"501\"} 3 method_code:http_errors:rate5m{method=\"post\", code=\"500\"} 6 method_code:http_errors:rate5m{method=\"post\", code=\"404\"} 21 method:http_requests:rate5m{method=\"get\"} 600 method:http_requests:rate5m{method=\"del\"} 34 method:http_requests:rate5m{method=\"post\"} 120 \u4f7f\u7528 PromQL \u8868\u8fbe\u5f0f\uff1a method_code:http_errors:rate5m{code=\"500\"} / ignoring(code) method:http_requests:rate5m ignoring(code) \u8be5\u8868\u8fbe\u5f0f\u4f1a\u8fd4\u56de\u5728\u8fc7\u53bb 5 \u5206\u949f\u5185\uff0c HTTP \u8bf7\u6c42\u72b6\u6001\u7801\u4e3a 500 \u7684\u5728\u6240\u6709\u8bf7\u6c42\u4e2d\u7684\u6bd4\u4f8b\u3002 \u5982\u679c\u6ca1\u6709\u4f7f\u7528 ignoring(code) \uff0c\u64cd\u4f5c\u7b26\u4e24\u8fb9\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u77ac\u65f6\u5411\u91cf\u4e2d\u5c06\u627e\u4e0d\u5230\u4efb\u4f55\u4e00\u4e2a\u6807\u7b7e\u5b8c\u5168\u76f8\u540c\u7684\u5339\u914d\u9879\u3002 \u56e0\u6b64\u7ed3\u679c\u5982\u4e0b\uff1a {method=\"get\"} 0.04 // 24 / 600 {method=\"post\"} 0.05 // 6 / 120 \u540c\u65f6\u7531\u4e8e method \u4e3a put \u548c del \u7684\u6837\u672c\u627e\u4e0d\u5230\u5339\u914d\u9879\uff0c\u56e0\u6b64\u4e0d\u4f1a\u51fa\u73b0\u5728\u7ed3\u679c\u5f53\u4e2d \u3002 \u591a\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a \u591a\u5bf9\u4e00\u548c\u4e00 \u5bf9\u591a\u4e24\u79cd\u5339\u914d\u6a21\u5f0f\u6307\u7684\u662f\u201c\u4e00\u201d\u4fa7\u7684\u6bcf\u4e00\u4e2a\u5411\u91cf\u5143\u7d20\u53ef\u4ee5\u4e0e\"\u591a\"\u4fa7\u7684\u591a\u4e2a\u5143\u7d20\u5339\u914d\u7684\u60c5\u51b5\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5fc5\u987b\u4f7f\u7528 group \u4fee\u9970\u7b26\uff1a group_left \u6216\u8005 group_right \u6765\u786e\u5b9a\u54ea\u4e00\u4e2a\u5411\u91cf\u5177\u6709\u66f4\u9ad8\u7684\u57fa\u6570\uff08\u5145\u5f53\u201c\u591a\u201d\u7684\u89d2\u8272\uff09\u3002 <vector expr> <bin-op> ignoring(<label list>) group_left(<label list>) <vector expr> <vector expr> <bin-op> ignoring(<label list>) group_right(<label list>) <vector expr> <vector expr> <bin-op> on(<label list>) group_left(<label list>) <vector expr> <vector expr> <bin-op> on(<label list>) group_right(<label list>) <vector expr> \u591a\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a\u4e24\u79cd\u6a21\u5f0f\u4e00\u5b9a\u662f\u51fa\u73b0\u5728\u64cd\u4f5c\u7b26\u4e24\u4fa7\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u5411\u91cf\u6807\u7b7e\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\u3002 \u56e0\u6b64\u9700\u8981\u4f7f\u7528 ignoring \u548c on \u4fee\u9970\u7b26\u6765\u6392\u9664\u6216\u8005\u9650\u5b9a\u5339\u914d\u7684\u6807\u7b7e\u5217\u8868 \u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a method_code:http_errors:rate5m / ignoring(code) group_left method:http_requests:rate5m \u8be5\u8868\u8fbe\u5f0f\u4e2d\uff0c \u5de6\u5411\u91cf method_code:http_errors:rate5m \u5305\u542b\u4e24\u4e2a\u6807\u7b7e method \u548c code \u3002 \u53f3\u5411\u91cf method:http_requests:rate5m \u4e2d\u53ea\u5305\u542b\u4e00\u4e2a\u6807\u7b7e method \uff0c\u56e0\u6b64\u5339\u914d\u65f6\u9700\u8981\u4f7f\u7528 ignoring \u9650\u5b9a\u5339\u914d\u7684\u6807\u7b7e\u4e3a code \u3002 \u5728\u9650\u5b9a\u5339\u914d\u6807\u7b7e\u540e\uff0c\u53f3\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u53ef\u80fd\u5339\u914d\u5230\u591a\u4e2a\u5de6\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u56e0\u6b64\u8be5\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u6a21\u5f0f\u4e3a\u591a\u5bf9\u4e00\uff0c\u9700\u8981\u4f7f\u7528 group \u4fee\u9970\u7b26 group_left \u6307\u5b9a\u5de6\u5411\u91cf\u5177\u6709\u66f4\u597d\u7684\u57fa\u6570\u3002 \u6700\u7ec8\u7684\u8fd0\u7b97\u7ed3\u679c\u5982\u4e0b\uff1a {method=\"get\", code=\"500\"} 0.04 // 24 / 600 {method=\"get\", code=\"404\"} 0.05 // 30 / 600 {method=\"post\", code=\"500\"} 0.05 // 6 / 120 {method=\"post\", code=\"404\"} 0.175 // 21 / 120 \u63d0\u9192\uff1agroup \u4fee\u9970\u7b26\u53ea\u80fd\u5728\u6bd4\u8f83\u548c\u6570\u5b66\u8fd0\u7b97\u7b26\u4e2d\u4f7f\u7528\u3002\u5728\u903b\u8f91\u8fd0\u7b97 and\uff0cunless \u548c or \u64cd\u4f5c\u4e2d\u9ed8\u8ba4\u4e0e\u53f3\u5411\u91cf\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u5339\u914d\u3002","title":"1-5 \u5339\u914d\u6a21\u5f0f"},{"location":"chap8/2Promql_basic2/#1-6","text":"Prometheus \u8fd8\u63d0\u4f9b\u4e86\u4e0b\u5217\u5185\u7f6e\u7684\u805a\u5408\u64cd\u4f5c\u7b26\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u7b26\u4f5c\u7528\u57df\u77ac\u65f6\u5411\u91cf\u3002\u53ef\u4ee5\u5c06\u77ac\u65f6\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u8fdb\u884c\u805a\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u5177\u6709\u8f83\u5c11\u6837\u672c\u503c\u7684\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\u3002 sum (\u6c42\u548c) min (\u6700\u5c0f\u503c) max (\u6700\u5927\u503c) avg (\u5e73\u5747\u503c) stddev (\u6807\u51c6\u5dee) stdvar (\u6807\u51c6\u5dee\u5f02) count (\u8ba1\u6570) count_values (\u5bf9 value \u8fdb\u884c\u8ba1\u6570) bottomk (\u6837\u672c\u503c\u6700\u5c0f\u7684 k \u4e2a\u5143\u7d20) topk (\u6837\u672c\u503c\u6700\u5927\u7684k\u4e2a\u5143\u7d20) quantile (\u5206\u5e03\u7edf\u8ba1) \u8fd9\u4e9b\u64cd\u4f5c\u7b26\u88ab\u7528\u4e8e\u805a\u5408\u6240\u6709\u6807\u7b7e\u7ef4\u5ea6\uff0c\u6216\u8005\u901a\u8fc7 without \u6216\u8005 by \u5b50\u8bed\u53e5\u6765\u4fdd\u7559\u4e0d\u540c\u7684\u7ef4\u5ea6\u3002 <aggr-op>([parameter,] <vector expression>) [without|by (<label list>)] \u5176\u4e2d\u53ea\u6709 count_values , quantile , topk , bottomk \u652f\u6301\u53c2\u6570( parameter ) \u3002 without \u7528\u4e8e\u4ece\u8ba1\u7b97\u7ed3\u679c\u4e2d\u79fb\u9664\u5217\u4e3e\u7684\u6807\u7b7e\uff0c\u800c\u4fdd\u7559\u5176\u5b83\u6807\u7b7e \u3002 by \u5219\u6b63\u597d\u76f8\u53cd\uff0c\u7ed3\u679c\u5411\u91cf\u4e2d\u53ea\u4fdd\u7559\u5217\u51fa\u7684\u6807\u7b7e\uff0c\u5176\u4f59\u6807\u7b7e\u5219\u79fb\u9664 \u3002 \u901a\u8fc7 without \u548c by \u53ef\u4ee5\u6309\u7167\u6837\u672c\u7684\u95ee\u9898\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u3002 \u4f8b\u5982\uff1a \u5982\u679c\u6307\u6807 http_requests_total \u7684\u65f6\u95f4\u5e8f\u5217\u7684\u6807\u7b7e\u96c6\u4e3a application , instance, \u548c group \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8ba1\u7b97\u6240\u6709 instance \u4e2d\u6bcf\u4e2a application \u548c group \u7684\u8bf7\u6c42\u603b\u91cf\uff1a sum(http_requests_total) without (instance) \u7b49\u4ef7\u4e8e sum(http_requests_total) by (application, group) \u5982\u679c\u53ea\u9700\u8981\u8ba1\u7b97\u6574\u4e2a\u5e94\u7528\u7684 HTTP \u8bf7\u6c42\u603b\u91cf \uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a sum(http_requests_total) count_values \u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u6837\u672c\u503c\u51fa\u73b0\u7684\u6b21\u6570\u3002 count_values \u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u552f\u4e00\u7684\u6837\u672c\u503c\u8f93\u51fa\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684\u6807\u7b7e\u3002\u8fd9\u4e2a\u6807\u7b7e\u7684\u540d\u5b57\u7531\u805a\u5408\u53c2\u6570\u6307\u5b9a\uff0c\u540c\u65f6\u8fd9\u4e2a\u6807\u7b7e\u503c\u662f\u552f\u4e00\u7684\u6837\u672c\u503c\u3002 \u4f8b\u5982\u8981\u8ba1\u7b97\u8fd0\u884c\u6bcf\u4e2a\u6784\u5efa\u7248\u672c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684 count_values(\"version\", build_version) \u8fd4\u56de\u7ed3\u679c\u5982\u4e0b\uff1a {count=\"641\"} 1 {count=\"3226\"} 2 {count=\"644\"} 4 topk \u548c bottomk \u5219\u7528\u4e8e\u5bf9\u6837\u672c\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd4\u56de\u5f53\u524d\u6837\u672c\u503c\u524d n \u4f4d\uff0c\u6216\u8005\u540e n \u4f4d\u7684\u65f6\u95f4\u5e8f\u5217\u3002 \u83b7\u53d6 HTTP \u8bf7\u6c42\u6570\u524d 5 \u4f4d\u7684\u65f6\u5e8f\u6837\u672c\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a topk(5, http_requests_total) quantile \u7528\u4e8e\u8ba1\u7b97\u5f53\u524d\u6837\u672c\u6570\u636e\u503c\u7684\u5206\u5e03\u60c5\u51b5 quantile(\u03c6, express) \uff0c\u5176\u4e2d 0 \u2264 \u03c6 \u2264 1 \u3002 \u4f8b\u5982\uff0c\u5f53 \u03c6 \u4e3a 0.5 \u65f6\uff0c\u5373\u8868\u793a\u627e\u5230\u5f53\u524d\u6837\u672c\u6570\u636e\u4e2d\u7684\u4e2d\u4f4d\u6570\uff1a quantile(0.5, http_requests_total) \u8fd4\u56de\u7ed3\u679c\u5982\u4e0b\uff1a {} 656","title":"1-6 \u805a\u5408\u64cd\u4f5c"},{"location":"chap8/2Promql_basic2/#1-7","text":"\u5728 Prometheus \u7cfb\u7edf\u4e2d\uff0c\u4e8c\u5143\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f\u4e3a\uff1a ^ *, /, % +, - ==, !=, <=, <, >=, > and, unless or \u5177\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u8fd0\u7b97\u7b26\u662f\u6ee1\u8db3\u7ed3\u5408\u5f8b\u7684\uff08\u5de6\u7ed3\u5408\uff09\u3002\u4f8b\u5982\uff0c 2 * 3 % 2 \u7b49\u4ef7\u4e8e (2 * 3) % 2 \u3002 \u8fd0\u7b97\u7b26 ^ \u4f8b\u5916\uff0c ^ \u6ee1\u8db3\u7684\u662f\u53f3\u7ed3\u5408\uff0c\u4f8b\u5982\uff0c 2 ^ 3 ^ 2 \u7b49\u4ef7\u4e8e 2 ^ (3 ^ 2) \u3002","title":"1-7 \u4e8c\u5143\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7"},{"location":"chap8/3Promql_basic3/","text":"3 PromQL \u5185\u7f6e\u51fd\u6570 Prometheus \u63d0\u4f9b\u4e86\u5176\u5b83\u5927\u91cf\u7684\u5185\u7f6e\u51fd\u6570\uff0c\u53ef\u4ee5\u5bf9\u65f6\u5e8f\u6570\u636e\u8fdb\u884c\u4e30\u5bcc\u7684\u5904\u7406\u3002\u67d0\u4e9b\u51fd\u6570\u6709\u9ed8\u8ba4\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff1a year(v=vector(time()) instant-vector) \u3002\u5176\u4e2d\u53c2\u6570 v \u662f\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\uff0c\u5982\u679c\u4e0d\u63d0\u4f9b\u8be5\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c vector(time()) \u3002 instant-vector \u8868\u793a\u53c2\u6570\u7c7b\u578b\u3002 abs() abs(v instant-vector) \u8fd4\u56de\u8f93\u5165\u5411\u91cf\u7684\u6240\u6709\u6837\u672c\u7684\u7edd\u5bf9\u503c\u3002 absent() absent(v instant-vector) \uff0c\u5982\u679c\u4f20\u9012\u7ed9\u5b83\u7684\u5411\u91cf\u53c2\u6570\u5177\u6709\u6837\u672c\u6570\u636e\uff0c\u5219\u8fd4\u56de\u7a7a\u5411\u91cf\uff1b \u5982\u679c\u4f20\u9012\u7684\u5411\u91cf\u53c2\u6570\u6ca1\u6709\u6837\u672c\u6570\u636e\uff0c\u5219\u8fd4\u56de\u4e0d\u5e26\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u4e14\u5e26\u6709\u6807\u7b7e\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u4e14\u6837\u672c\u503c\u4e3a1\u3002 \u5f53\u76d1\u63a7\u5ea6\u91cf\u6307\u6807\u65f6\uff0c\u5982\u679c\u83b7\u53d6\u5230\u7684\u6837\u672c\u6570\u636e\u662f\u7a7a\u7684\uff0c \u4f7f\u7528 absent \u65b9\u6cd5\u5bf9\u544a\u8b66\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u4f8b\u5982\uff1a # \u8fd9\u91cc\u63d0\u4f9b\u7684\u5411\u91cf\u6709\u6837\u672c\u6570\u636e absent(http_requests_total{method=\"get\"}) => no data absent(sum(http_requests_total{method=\"get\"})) => no data # \u7531\u4e8e\u4e0d\u5b58\u5728\u5ea6\u91cf\u6307\u6807 nonexistent\uff0c\u6240\u4ee5 \u8fd4\u56de\u4e0d\u5e26\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u4e14\u5e26\u6709\u6807\u7b7e\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u4e14\u6837\u672c\u503c\u4e3a1 absent(nonexistent{job=\"myjob\"}) => {job=\"myjob\"} 1 # \u6b63\u5219\u5339\u914d\u7684 instance \u4e0d\u4f5c\u4e3a\u8fd4\u56de labels \u4e2d\u7684\u4e00\u90e8\u5206 absent(nonexistent{job=\"myjob\",instance=~\".*\"}) => {job=\"myjob\"} 1 # sum \u51fd\u6570\u8fd4\u56de\u7684\u65f6\u95f4\u5e8f\u5217\u4e0d\u5e26\u6709\u6807\u7b7e\uff0c\u4e14\u6ca1\u6709\u6837\u672c\u6570\u636e absent(sum(nonexistent{job=\"myjob\"})) => {} 1 ceil() ceil(v instant-vector) \u5c06 v \u4e2d\u6240\u6709\u5143\u7d20\u7684\u6837\u672c\u503c\u5411\u4e0a\u56db\u820d\u4e94\u5165\u5230\u6700\u63a5\u8fd1\u7684\u6574\u6570\u3002\u4f8b\u5982\uff1a node_load5{instance=\"192.168.1.75:9100\"} # \u7ed3\u679c\u4e3a 2.79 ceil(node_load5{instance=\"192.168.1.75:9100\"}) # \u7ed3\u679c\u4e3a 3 changes() changes(v range-vector) \u8f93\u5165\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff0c \u8fd4\u56de\u8fd9\u4e2a\u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u6837\u672c\u6570\u636e\u503c\u53d8\u5316\u7684\u6b21\u6570\uff08\u77ac\u65f6\u5411\u91cf\uff09 \u3002\u4f8b\u5982\uff1a # \u5982\u679c\u6837\u672c\u6570\u636e\u503c\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff0c\u5219\u8fd4\u56de\u7ed3\u679c\u4e3a 1 changes(node_load5{instance=\"192.168.1.75:9100\"}[1m]) # \u7ed3\u679c\u4e3a 1 clamp_max() clamp_max(v instant-vector, max scalar) \u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\u548c\u6700\u5927\u503c \uff0c\u6837\u672c\u6570\u636e\u503c\u82e5\u5927\u4e8e max \uff0c\u5219\u6539\u4e3a max \uff0c\u5426\u5219\u4e0d\u53d8\u3002\u4f8b\u5982\uff1a node_load5{instance=\"192.168.1.75:9100\"} # \u7ed3\u679c\u4e3a 2.79 clamp_max(node_load5{instance=\"192.168.1.75:9100\"}, 2) # \u7ed3\u679c\u4e3a 2 clamp_min() clamp_min(v instant-vector, min scalar) \u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\u548c\u6700\u5c0f\u503c\uff0c\u6837\u672c\u6570\u636e\u503c\u82e5\u5c0f\u4e8e min\uff0c\u5219\u6539\u4e3a min\uff0c\u5426\u5219\u4e0d\u53d8\u3002\u4f8b\u5982\uff1a node_load5{instance=\"192.168.1.75:9100\"} # \u7ed3\u679c\u4e3a 2.79 clamp_min(node_load5{instance=\"192.168.1.75:9100\"}, 3) # \u7ed3\u679c\u4e3a 3 day_of_month() day_of_month(v=vector(time()) instant-vector) \u51fd\u6570\uff0c\u8fd4\u56de\u88ab\u7ed9\u5b9a UTC \u65f6\u95f4\u6240\u5728\u6708\u7684\u7b2c\u51e0\u5929\u3002\u8fd4\u56de\u503c\u8303\u56f4\uff1a 1~31 \u3002 day_of_week() day_of_week(v=vector(time()) instant-vector) \u51fd\u6570\uff0c\u8fd4\u56de\u88ab\u7ed9\u5b9a UTC \u65f6\u95f4\u6240\u5728\u5468\u7684\u7b2c\u51e0\u5929\u3002\u8fd4\u56de\u503c\u8303\u56f4\uff1a 0~6 \uff0c 0 \u8868\u793a\u661f\u671f\u5929\u3002 days_in_month() days_in_month(v=vector(time()) instant-vector) \u51fd\u6570\uff0c\u8fd4\u56de\u5f53\u6708\u4e00\u5171\u6709\u591a\u5c11\u5929\u3002\u8fd4\u56de\u503c\u8303\u56f4\uff1a 28~31 \u3002 delta() delta(v range-vector) \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff0c\u8fd4\u56de\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\u3002\u5b83\u8ba1\u7b97\u4e00\u4e2a\u533a\u95f4\u5411\u91cf v \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u5dee\u503c\u3002\u7531\u4e8e\u8fd9\u4e2a\u503c\u88ab\u5916\u63a8\u5230\u6307\u5b9a\u7684\u6574\u4e2a\u65f6\u95f4\u8303\u56f4\uff0c\u6240\u4ee5\u5373\u4f7f\u6837\u672c\u503c\u90fd\u662f\u6574\u6570\uff0c\u4f60\u4ecd\u7136\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u975e\u6574\u6570\u503c\u3002 \u4f8b\u5982\uff0c \u4e0b\u9762\u7684\u4f8b\u5b50\u8fd4\u56de\u8fc7\u53bb\u4e24\u5c0f\u65f6\u7684 CPU \u6e29\u5ea6\u5dee \uff1a delta(cpu_temp_celsius{host=\"zeus\"}[2h]) \u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728 Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002 deriv() deriv(v range-vector) \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf,\u8fd4\u56de\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\u3002\u5b83\u4f7f\u7528\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\u8ba1\u7b97\u533a\u95f4\u5411\u91cf v \u4e2d\u5404\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u5bfc\u6570\u3002 \u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728 Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002 exp() exp(v instant-vector) \u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\uff0c\u8fd4\u56de\u5404\u4e2a\u6837\u672c\u503c\u7684 e \u7684\u6307\u6570\u503c\uff0c\u5373 e \u7684 N \u6b21\u65b9\u3002\u5f53 N \u7684\u503c\u8db3\u591f\u5927\u65f6\u4f1a\u8fd4\u56de +Inf \u3002\u7279\u6b8a\u60c5\u51b5\u4e3a\uff1a Exp(+Inf) = +Inf Exp(NaN) = NaN floor() floor(v instant-vector) \u51fd\u6570\u4e0e ceil() \u51fd\u6570\u76f8\u53cd\uff0c\u5c06 v \u4e2d\u6240\u6709\u5143\u7d20\u7684\u6837\u672c\u503c\u5411\u4e0b\u56db\u820d\u4e94\u5165\u5230\u6700\u63a5\u8fd1\u7684\u6574\u6570\u3002 histogram_quantile() histogram_quantile(\u03c6 float, b instant-vector) \u4ece bucket \u7c7b\u578b\u7684\u5411\u91cf b \u4e2d\u8ba1\u7b97 \u03c6 (0 \u2264 \u03c6 \u2264 1) \u5206\u4f4d\u6570\uff08\u767e\u5206\u4f4d\u6570\u7684\u4e00\u822c\u5f62\u5f0f\uff09\u7684\u6837\u672c\u7684\u6700\u5927\u503c\u3002 \uff08\u6709\u5173 \u03c6 \u5206\u4f4d\u6570\u7684\u8be6\u7ec6\u8bf4\u660e\u4ee5\u53ca\u76f4\u65b9\u56fe\u6307\u6807\u7c7b\u578b\u7684\u4f7f\u7528\uff0c\u8bf7\u53c2\u9605\u76f4\u65b9\u56fe\u548c\u6458\u8981\uff09\u3002\u5411\u91cf b \u4e2d\u7684\u6837\u672c\u662f\u6bcf\u4e2a bucket \u7684\u91c7\u6837\u70b9\u6570\u91cf\u3002\u6bcf\u4e2a\u6837\u672c\u7684 labels \u4e2d\u5fc5\u987b\u8981\u6709 le \u8fd9\u4e2a label \u6765\u8868\u793a\u6bcf\u4e2a bucket \u7684\u4e0a\u8fb9\u754c\uff0c\u6ca1\u6709 le \u6807\u7b7e\u7684\u6837\u672c\u4f1a\u88ab\u5ffd\u7565\u3002 \u76f4\u65b9\u56fe\u6307\u6807\u7c7b\u578b\u81ea\u52a8\u63d0\u4f9b\u5e26\u6709 _bucket \u540e\u7f00\u548c\u76f8\u5e94\u6807\u7b7e\u7684\u65f6\u95f4\u5e8f\u5217\u3002 \u53ef\u4ee5\u4f7f\u7528 rate() \u51fd\u6570\u6765\u6307\u5b9a\u5206\u4f4d\u6570\u8ba1\u7b97\u7684\u65f6\u95f4\u7a97\u53e3\u3002 \u4f8b\u5982\uff0c \u4e00\u4e2a\u76f4\u65b9\u56fe\u6307\u6807\u540d\u79f0\u4e3a employee_age_bucket_bucket \uff0c\u8981\u8ba1\u7b97\u8fc7\u53bb 10 \u5206\u949f\u5185 \u7b2c 90 \u4e2a\u767e\u5206\u4f4d\u6570\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u8868\u8fbe\u5f0f\uff1a histogram_quantile(0.9, rate(employee_age_bucket_bucket[10m])) \u8fd4\u56de\uff1a {instance=\"10.0.86.71:8080\",job=\"prometheus\"} 35.714285714285715 \u8fd9\u8868\u793a\u6700\u8fd1 10 \u5206\u949f\u4e4b\u5185 90% \u7684\u6837\u672c\u7684\u6700\u5927\u503c\u4e3a 35.714285714285715 \u3002 \u8fd9\u4e2a\u8ba1\u7b97\u7ed3\u679c\u662f\u6bcf\u7ec4\u6807\u7b7e\u7ec4\u5408\u6210\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u3002\u6211\u4eec\u53ef\u80fd\u4e0d\u4f1a\u5bf9\u6240\u6709\u8fd9\u4e9b\u7ef4\u5ea6\uff08\u5982 job \u3001 instance \u548c method \uff09\u611f\u5174\u8da3\uff0c\u5e76\u5e0c\u671b\u5c06\u5176\u4e2d\u7684\u4e00\u4e9b\u7ef4\u5ea6\u8fdb\u884c\u805a\u5408\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 sum() \u51fd\u6570\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u6839\u636e job \u6807\u7b7e\u6765\u5bf9\u7b2c 90 \u4e2a\u767e\u5206\u4f4d\u6570\u8fdb\u884c\u805a\u5408\uff1a # histogram_quantile() \u51fd\u6570\u5fc5\u987b\u5305\u542b le \u6807\u7b7e histogram_quantile(0.9, sum(rate(employee_age_bucket_bucket[10m])) by (job, le)) \u5982\u679c\u8981\u805a\u5408\u6240\u6709\u7684\u6807\u7b7e\uff0c\u5219\u4f7f\u7528\u5982\u4e0b\u8868\u8fbe\u5f0f\uff1a histogram_quantile(0.9,sum(rate(employee_age_bucket_bucket[10m])) by (le)) holt_winters() holt_winters(v range-vector, sf scalar, tf scalar) \u51fd\u6570\u57fa\u4e8e\u533a\u95f4\u5411\u91cf v \uff0c \u751f\u6210\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e73\u6ed1\u503c \u3002\u5e73\u6ed1\u56e0\u5b50 sf \u8d8a\u4f4e, \u5bf9\u65e7\u6570\u636e\u7684\u91cd\u89c6\u7a0b\u5ea6\u8d8a\u9ad8\u3002\u8d8b\u52bf\u56e0\u5b50 tf \u8d8a\u9ad8\uff0c\u5bf9\u6570\u636e\u7684\u8d8b\u52bf\u7684\u8003\u8651\u5c31\u8d8a\u591a\u3002\u5176\u4e2d\uff0c 0< sf , tf <=1 \u3002 holt_winters \u4ec5\u9002\u7528\u4e8e Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u3002 hour() hour(v=vector(time()) instant-vector) \u51fd\u6570\u8fd4\u56de\u88ab\u7ed9\u5b9a UTC \u65f6\u95f4\u7684\u5f53\u524d\u7b2c\u51e0\u4e2a\u5c0f\u65f6\uff0c\u65f6\u95f4\u8303\u56f4\uff1a 0~23 \u3002 idelta() idelta(v range-vector) \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf, \u8fd4\u56de\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\u3002\u5b83\u8ba1\u7b97\u6700\u65b0\u7684 2 \u4e2a\u6837\u672c\u503c\u4e4b\u95f4\u7684\u5dee\u503c\u3002 \u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728 Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002 increase() increase(v range-vector) \u51fd\u6570\u83b7\u53d6\u533a\u95f4\u5411\u91cf\u4e2d\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u6837\u672c\u5e76\u8fd4\u56de\u5176\u589e\u957f\u91cf, \u5b83\u4f1a\u5728\u5355\u8c03\u6027\u53d1\u751f\u53d8\u5316\u65f6(\u5982\u7531\u4e8e\u91c7\u6837\u76ee\u6807\u91cd\u542f\u5f15\u8d77\u7684\u8ba1\u6570\u5668\u590d\u4f4d)\u81ea\u52a8\u4e2d\u65ad\u3002\u7531\u4e8e\u8fd9\u4e2a\u503c\u88ab\u5916\u63a8\u5230\u6307\u5b9a\u7684\u6574\u4e2a\u65f6\u95f4\u8303\u56f4\uff0c\u6240\u4ee5\u5373\u4f7f\u6837\u672c\u503c\u90fd\u662f\u6574\u6570\uff0c\u4f60\u4ecd\u7136\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u975e\u6574\u6570\u503c\u3002 \u4f8b\u5982\uff0c \u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u533a\u95f4\u5411\u91cf\u4e2d\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u8fc7\u53bb 5 \u5206\u949f\u5185 HTTP \u8bf7\u6c42\u6570\u7684\u589e\u957f\u6570 \uff1a increase(http_requests_total{job=\"apiserver\"}[5m]) increase \u7684\u8fd4\u56de\u503c\u7c7b\u578b\u53ea\u80fd\u662f\u8ba1\u6570\u5668\u7c7b\u578b\uff0c\u4e3b\u8981\u4f5c\u7528\u662f\u589e\u52a0\u56fe\u8868\u548c\u6570\u636e\u7684\u53ef\u8bfb\u6027\u3002\u4f7f\u7528 rate \u51fd\u6570\u8bb0\u5f55\u89c4\u5219\u7684\u4f7f\u7528\u7387\uff0c\u4ee5\u4fbf\u6301\u7eed\u8ddf\u8e2a\u6570\u636e\u6837\u672c\u503c\u7684\u53d8\u5316\u3002 irate() irate(v range-vector) \u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u533a\u95f4\u5411\u91cf\u7684\u589e\u957f\u7387\uff0c\u4f46\u662f\u5176\u53cd\u5e94\u51fa\u7684\u662f\u77ac\u65f6\u589e\u957f\u7387\u3002 irate \u51fd\u6570\u662f\u901a\u8fc7\u533a\u95f4\u5411\u91cf\u4e2d\u6700\u540e\u4e24\u4e2a\u4e24\u672c\u6570\u636e\u6765\u8ba1\u7b97\u533a\u95f4\u5411\u91cf\u7684\u589e\u957f\u901f\u7387\uff0c\u5b83\u4f1a\u5728\u5355\u8c03\u6027\u53d1\u751f\u53d8\u5316\u65f6(\u5982\u7531\u4e8e\u91c7\u6837\u76ee\u6807\u91cd\u542f\u5f15\u8d77\u7684\u8ba1\u6570\u5668\u590d\u4f4d)\u81ea\u52a8\u4e2d\u65ad\u3002\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u907f\u514d\u5728\u65f6\u95f4\u7a97\u53e3\u8303\u56f4\u5185\u7684\u201c\u957f\u5c3e\u95ee\u9898\u201d\uff0c\u5e76\u4e14\u4f53\u73b0\u51fa\u66f4\u597d\u7684\u7075\u654f\u5ea6\uff0c\u901a\u8fc7irate\u51fd\u6570\u7ed8\u5236\u7684\u56fe\u6807\u80fd\u591f\u66f4\u597d\u7684\u53cd\u5e94\u6837\u672c\u6570\u636e\u7684\u77ac\u65f6\u53d8\u5316\u72b6\u6001\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de \u533a\u95f4\u5411\u91cf\u4e2d\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u8fc7\u53bb 5 \u5206\u949f\u5185\u6700\u540e\u4e24\u4e2a\u6837\u672c\u6570\u636e\u7684 HTTP \u8bf7\u6c42\u6570\u7684\u589e\u957f\u7387 \uff1a irate(http_requests_total{job=\"api-server\"}[5m]) irate \u53ea\u80fd\u7528\u4e8e\u7ed8\u5236\u5feb\u901f\u53d8\u5316\u7684\u8ba1\u6570\u5668\uff0c\u5728\u957f\u671f\u8d8b\u52bf\u5206\u6790\u6216\u8005\u544a\u8b66\u4e2d\u66f4\u63a8\u8350\u4f7f\u7528 rate \u51fd\u6570\u3002\u56e0\u4e3a\u4f7f\u7528 irate \u51fd\u6570\u65f6\uff0c\u901f\u7387\u7684\u7b80\u77ed\u53d8\u5316\u4f1a\u91cd\u7f6e FO R \u8bed\u53e5\uff0c\u5f62\u6210\u7684\u56fe\u5f62\u6709\u5f88\u591a\u6ce2\u5cf0\uff0c\u96be\u4ee5\u9605\u8bfb\u3002 \u5f53\u5c06 irate() \u51fd\u6570\u4e0e\u805a\u5408\u8fd0\u7b97\u7b26\uff08\u4f8b\u5982 sum() \uff09\u6216\u968f\u65f6\u95f4\u805a\u5408\u7684\u51fd\u6570\uff08\u4efb\u4f55\u4ee5 _over_time \u7ed3\u5c3e\u7684\u51fd\u6570\uff09\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u5fc5\u987b\u5148\u6267\u884c irate \u51fd\u6570\uff0c\u7136\u540e\u518d\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\uff0c\u5426\u5219\u5f53\u91c7\u6837\u76ee\u6807\u91cd\u65b0\u542f\u52a8\u65f6 irate() \u65e0\u6cd5\u68c0\u6d4b\u5230\u8ba1\u6570\u5668\u662f\u5426\u88ab\u91cd\u7f6e\u3002 label_join() label_join(v instant-vector, dst_label string, separator string, src_label_1 string, src_label_2 string, ...) \u51fd\u6570\u53ef\u4ee5\u5c06\u65f6\u95f4\u5e8f\u5217 v \u4e2d\u591a\u4e2a\u6807\u7b7e src_label \u7684\u503c\uff0c\u901a\u8fc7 separator \u4f5c\u4e3a\u8fde\u63a5\u7b26\u5199\u5165\u5230\u4e00\u4e2a\u65b0\u7684\u6807\u7b7e dst_label \u4e2d\u3002\u53ef\u4ee5\u6709\u591a\u4e2a src_label \u6807\u7b7e\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u65f6\u95f4\u5e8f\u5217\u591a\u4e86\u4e00\u4e2a foo \u6807\u7b7e\uff0c\u6807\u7b7e\u503c\u4e3a etcd,etcd-k8s \uff1a up{endpoint=\"api\",instance=\"192.168.123.248:2379\",job=\"etcd\",namespace=\"monitoring\",service=\"etcd-k8s\"} => up{endpoint=\"api\",instance=\"192.168.123.248:2379\",job=\"etcd\",namespace=\"monitoring\",service=\"etcd-k8s\"} 1 label_join(up{endpoint=\"api\",instance=\"192.168.123.248:2379\",job=\"etcd\",namespace=\"monitoring\",service=\"etcd-k8s\"}, \"foo\", \",\", \"job\", \"service\") => up{endpoint=\"api\",foo=\"etcd,etcd-k8s\",instance=\"192.168.123.248:2379\",job=\"etcd\",namespace=\"monitoring\",service=\"etcd-k8s\"} 1 label_replace() \u4e3a\u4e86\u80fd\u591f\u8ba9\u5ba2\u6237\u7aef\u7684\u56fe\u6807\u66f4\u5177\u6709\u53ef\u8bfb\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7 label_replace \u51fd\u6570\u4e3a\u65f6\u95f4\u5e8f\u5217\u6dfb\u52a0\u989d\u5916\u7684\u6807\u7b7e\u3002 label_replace \u7684\u5177\u4f53\u53c2\u6570\u5982\u4e0b\uff1a label_replace(v instant-vector, dst_label string, replacement string, src_label string, regex string) \u8be5\u51fd\u6570\u4f1a\u4f9d\u6b21\u5bf9 v \u4e2d\u7684\u6bcf\u4e00\u6761\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u5904\u7406\uff0c\u901a\u8fc7 regex \u5339\u914d src_label \u7684\u503c\uff0c\u5e76\u5c06\u5339\u914d\u90e8\u5206 relacement \u5199\u5165\u5230 dst_label \u6807\u7b7e\u4e2d\u3002\u5982\u4e0b\u6240\u793a\uff1a label_replace(up, \"host\", \"$1\", \"instance\", \"(.*):.*\") \u51fd\u6570\u5904\u7406\u540e\uff0c\u65f6\u95f4\u5e8f\u5217\u5c06\u5305\u542b\u4e00\u4e2a host \u6807\u7b7e\uff0chost \u6807\u7b7e\u7684\u503c\u4e3a Exporter \u5b9e\u4f8b\u7684 IP \u5730\u5740\uff1a up{host=\"localhost\",instance=\"localhost:8080\",job=\"cadvisor\"} 1 up{host=\"localhost\",instance=\"localhost:9090\",job=\"prometheus\"} 1 up{host=\"localhost\",instance=\"localhost:9100\",job=\"node\"} 1 ln() ln(v instant-vector) \u8ba1\u7b97\u77ac\u65f6\u5411\u91cf v \u4e2d\u6240\u6709\u6837\u672c\u6570\u636e\u7684\u81ea\u7136\u5bf9\u6570\u3002\u7279\u6b8a\u60c5\u51b5\uff1a ln(+Inf) = +Inf ln(0) = -Inf ln(x < 0) = NaN ln(NaN) = NaN log2() log2(v instant-vector) \u51fd\u6570\u8ba1\u7b97\u77ac\u65f6\u5411\u91cf v \u4e2d\u6240\u6709\u6837\u672c\u6570\u636e\u7684\u4e8c\u8fdb\u5236\u5bf9\u6570\u3002\u7279\u6b8a\u60c5\u51b5\u540c\u4e0a\u3002 **log10() ** log10(v instant-vector) \u8ba1\u7b97\u77ac\u65f6\u5411\u91cf v \u4e2d\u6240\u6709\u6837\u672c\u6570\u636e\u7684\u5341\u8fdb\u5236\u5bf9\u6570\u3002\u7279\u6b8a\u60c5\u51b5\u540c\u4e0a\u3002 minute() minute(v=vector(time()) instant-vector) \u51fd\u6570\u8fd4\u56de\u7ed9\u5b9a UTC \u65f6\u95f4\u5f53\u524d\u5c0f\u65f6\u7684\u7b2c\u591a\u5c11\u5206\u949f\u3002\u7ed3\u679c\u8303\u56f4\uff1a0~59\u3002 month() month(v=vector(time()) instant-vector) \u51fd\u6570\u8fd4\u56de\u7ed9\u5b9a UTC \u65f6\u95f4\u5f53\u524d\u5c5e\u4e8e\u7b2c\u51e0\u4e2a\u6708\uff0c\u7ed3\u679c\u8303\u56f4\uff1a 0~12 \u3002 predict_linear() predict_linear(v range-vector, t scalar) \u51fd\u6570\u53ef\u4ee5\u9884\u6d4b\u65f6\u95f4\u5e8f\u5217 v \u5728 t \u79d2\u540e\u7684\u503c\u3002 \u5b83\u57fa\u4e8e\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u7684\u65b9\u5f0f\uff0c\u5bf9\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u6837\u672c\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\uff0c\u4ece\u800c\u53ef\u4ee5\u5bf9\u65f6\u95f4\u5e8f\u5217\u7684\u53d8\u5316\u8d8b\u52bf\u505a\u51fa\u9884\u6d4b\u3002\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u7ed3\u679c\u4e0d\u5e26\u6709\u5ea6\u91cf\u6307\u6807\uff0c\u53ea\u6709\u6807\u7b7e\u5217\u8868\u3002 \u4f8b\u5982\uff0c\u57fa\u4e8e 2 \u5c0f\u65f6\u7684\u6837\u672c\u6570\u636e\uff0c\u6765\u9884\u6d4b\u4e3b\u673a\u53ef\u7528\u78c1\u76d8\u7a7a\u95f4\u7684\u662f\u5426\u5728 4 \u4e2a\u5c0f\u65f6\u5019\u88ab\u5360\u6ee1\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8868\u8fbe\u5f0f\uff1a predict_linear(http_requests_total{code=\"200\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"}[5m], 5) \u7ed3\u679c\uff1a {code=\"200\",handler=\"query_range\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 1 {code=\"200\",handler=\"prometheus\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 4283.449995397104 {code=\"200\",handler=\"static\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 22.99999999999999 ... \u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728 Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002 rate() rate(v range-vector) \u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u533a\u95f4\u5411\u91cf v \u5728\u65f6\u95f4\u7a97\u53e3\u5185\u5e73\u5747\u589e\u957f\u901f\u7387\uff0c\u5b83\u4f1a\u5728\u5355\u8c03\u6027\u53d1\u751f\u53d8\u5316\u65f6(\u5982\u7531\u4e8e\u91c7\u6837\u76ee\u6807\u91cd\u542f\u5f15\u8d77\u7684\u8ba1\u6570\u5668\u590d\u4f4d)\u81ea\u52a8\u4e2d\u65ad\u3002\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u7ed3\u679c\u4e0d\u5e26\u6709\u5ea6\u91cf\u6307\u6807\uff0c\u53ea\u6709\u6807\u7b7e\u5217\u8868\u3002 \u4f8b\u5982\uff0c \u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u533a\u95f4\u5411\u91cf\u4e2d\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u8fc7\u53bb 5 \u5206\u949f\u5185 HTTP \u8bf7\u6c42\u6570\u7684\u6bcf\u79d2\u589e\u957f\u7387 \uff1a rate(http_requests_total[5m]) \u7ed3\u679c\uff1a {code=\"200\",handler=\"label_values\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 0 {code=\"200\",handler=\"query_range\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 0 {code=\"200\",handler=\"prometheus\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 0.2 ... rate() \u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u53ea\u80fd\u7528\u8ba1\u6570\u5668\uff0c\u5728\u957f\u671f\u8d8b\u52bf\u5206\u6790\u6216\u8005\u544a\u8b66\u4e2d\u63a8\u8350\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570 \u3002 resets() resets(v range-vector) \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\uff0c\u5b83\u90fd\u8fd4\u56de\u4e00\u4e2a\u8ba1\u6570\u5668\u91cd\u7f6e\u7684\u6b21\u6570\u3002\u4e24\u4e2a\u8fde\u7eed\u6837\u672c\u4e4b\u95f4\u7684\u503c\u7684\u51cf\u5c11\u88ab\u8ba4\u4e3a\u662f\u4e00\u6b21\u8ba1\u6570\u5668\u91cd\u7f6e\u3002 \u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728\u8ba1\u6570\u5668\u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002 round() round(v instant-vector, to_nearest=1 scalar) \u51fd\u6570\u4e0e ceil \u548c floor \u51fd\u6570\u7c7b\u4f3c\uff0c\u8fd4\u56de\u5411\u91cf\u4e2d\u6240\u6709\u6837\u672c\u503c\u7684\u6700\u63a5\u8fd1\u7684\u6574\u6570\u3002 to_nearest \u53c2\u6570\u662f\u53ef\u9009\u7684,\u9ed8\u8ba4\u4e3a 1 ,\u8868\u793a\u6837\u672c\u8fd4\u56de\u7684\u662f\u6700\u63a5\u8fd1 1 \u7684\u6574\u6570\u500d\u7684\u503c\u3002\u4f60\u4e5f\u53ef\u4ee5\u5c06\u8be5\u53c2\u6570\u6307\u5b9a\u4e3a\u4efb\u610f\u503c\uff08\u4e5f\u53ef\u4ee5\u662f\u5c0f\u6570\uff09\uff0c\u8868\u793a\u6837\u672c\u8fd4\u56de\u7684\u662f\u6700\u63a5\u8fd1\u5b83\u7684\u6574\u6570\u500d\u7684\u503c\u3002 scalar() scalar(v instant-vector) \u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5355\u5143\u7d20\u7684\u77ac\u65f6\u5411\u91cf,\u5b83\u8fd4\u56de\u5176\u552f\u4e00\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u4f5c\u4e3a\u4e00\u4e2a\u6807\u91cf\u3002\u5982\u679c\u5ea6\u91cf\u6307\u6807\u7684\u6837\u672c\u6570\u91cf\u5927\u4e8e 1 \u6216\u8005\u7b49\u4e8e 0 , \u5219\u8fd4\u56de NaN \u3002 sort() sort(v instant-vector) \u51fd\u6570\u5bf9\u5411\u91cf\u6309\u5143\u7d20\u7684\u503c\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u8fd4\u56de\u7ed3\u679c\uff1a key: value = \u5ea6\u91cf\u6307\u6807\uff1a\u6837\u672c\u503c[\u5347\u5e8f\u6392\u5217] \u3002 sort_desc() sort(v instant-vector) \u51fd\u6570\u5bf9\u5411\u91cf\u6309\u5143\u7d20\u7684\u503c\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u8fd4\u56de\u7ed3\u679c\uff1a key: value = \u5ea6\u91cf\u6307\u6807\uff1a\u6837\u672c\u503c[\u964d\u5e8f\u6392\u5217] \u3002 sqrt() sqrt(v instant-vector) \u51fd\u6570\u8ba1\u7b97\u5411\u91cf v \u4e2d\u6240\u6709\u5143\u7d20\u7684\u5e73\u65b9\u6839\u3002 time() time() \u51fd\u6570\u8fd4\u56de\u4ece 1970-01-01 \u5230\u73b0\u5728\u7684\u79d2\u6570\u3002\u6ce8\u610f\uff1a\u5b83\u4e0d\u662f\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u65f6\u95f4\uff0c\u800c\u662f\u65f6\u95f4\u6233 timestamp() timestamp(v instant-vector) \u51fd\u6570\u8fd4\u56de\u5411\u91cf v \u4e2d\u7684\u6bcf\u4e2a\u6837\u672c\u7684\u65f6\u95f4\u6233\uff08\u4ece 1970-01-01 \u5230\u73b0\u5728\u7684\u79d2\u6570\uff09\u3002 vector() vector(s scalar) \u51fd\u6570\u5c06\u6807\u91cf s \u4f5c\u4e3a\u6ca1\u6709\u6807\u7b7e\u7684\u5411\u91cf\u8fd4\u56de\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e3a\uff1a key: value= {}, s \u3002 year() year(v=vector(time()) instant-vector) \u51fd\u6570\u8fd4\u56de\u88ab\u7ed9\u5b9a UTC \u65f6\u95f4\u7684\u5f53\u524d\u5e74\u4efd\u3002 <aggregation>_over_time() \u4e0b\u9762\u7684\u51fd\u6570\u5217\u8868\u5141\u8bb8\u4f20\u5165\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff0c\u5b83\u4eec\u4f1a\u805a\u5408\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u8303\u56f4\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf \uff1a avg_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u5e73\u5747\u503c\u3002 min_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u6700\u5c0f\u503c\u3002 max_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u6700\u5927\u503c\u3002 sum_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u6c42\u548c\u3002 count_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u6837\u672c\u6570\u636e\u4e2a\u6570\u3002 quantile_over_time(scalar, range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u6837\u672c\u6570\u636e\u503c\u5206\u4f4d\u6570\uff0c \u03c6-quantile (0 \u2264 \u03c6 \u2264 1) \u3002 stddev_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u603b\u4f53\u6807\u51c6\u5dee\u3002 stdvar_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u603b\u4f53\u6807\u51c6\u65b9\u5dee","title":"3 PromQL \u5185\u7f6e\u51fd\u6570"},{"location":"chap8/3Promql_basic3/#3-promql","text":"Prometheus \u63d0\u4f9b\u4e86\u5176\u5b83\u5927\u91cf\u7684\u5185\u7f6e\u51fd\u6570\uff0c\u53ef\u4ee5\u5bf9\u65f6\u5e8f\u6570\u636e\u8fdb\u884c\u4e30\u5bcc\u7684\u5904\u7406\u3002\u67d0\u4e9b\u51fd\u6570\u6709\u9ed8\u8ba4\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff1a year(v=vector(time()) instant-vector) \u3002\u5176\u4e2d\u53c2\u6570 v \u662f\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\uff0c\u5982\u679c\u4e0d\u63d0\u4f9b\u8be5\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c vector(time()) \u3002 instant-vector \u8868\u793a\u53c2\u6570\u7c7b\u578b\u3002","title":"3 PromQL \u5185\u7f6e\u51fd\u6570"},{"location":"chap8/3Promql_basic3/#abs","text":"abs(v instant-vector) \u8fd4\u56de\u8f93\u5165\u5411\u91cf\u7684\u6240\u6709\u6837\u672c\u7684\u7edd\u5bf9\u503c\u3002","title":"abs()"},{"location":"chap8/3Promql_basic3/#absent","text":"absent(v instant-vector) \uff0c\u5982\u679c\u4f20\u9012\u7ed9\u5b83\u7684\u5411\u91cf\u53c2\u6570\u5177\u6709\u6837\u672c\u6570\u636e\uff0c\u5219\u8fd4\u56de\u7a7a\u5411\u91cf\uff1b \u5982\u679c\u4f20\u9012\u7684\u5411\u91cf\u53c2\u6570\u6ca1\u6709\u6837\u672c\u6570\u636e\uff0c\u5219\u8fd4\u56de\u4e0d\u5e26\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u4e14\u5e26\u6709\u6807\u7b7e\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u4e14\u6837\u672c\u503c\u4e3a1\u3002 \u5f53\u76d1\u63a7\u5ea6\u91cf\u6307\u6807\u65f6\uff0c\u5982\u679c\u83b7\u53d6\u5230\u7684\u6837\u672c\u6570\u636e\u662f\u7a7a\u7684\uff0c \u4f7f\u7528 absent \u65b9\u6cd5\u5bf9\u544a\u8b66\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u4f8b\u5982\uff1a # \u8fd9\u91cc\u63d0\u4f9b\u7684\u5411\u91cf\u6709\u6837\u672c\u6570\u636e absent(http_requests_total{method=\"get\"}) => no data absent(sum(http_requests_total{method=\"get\"})) => no data # \u7531\u4e8e\u4e0d\u5b58\u5728\u5ea6\u91cf\u6307\u6807 nonexistent\uff0c\u6240\u4ee5 \u8fd4\u56de\u4e0d\u5e26\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u4e14\u5e26\u6709\u6807\u7b7e\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u4e14\u6837\u672c\u503c\u4e3a1 absent(nonexistent{job=\"myjob\"}) => {job=\"myjob\"} 1 # \u6b63\u5219\u5339\u914d\u7684 instance \u4e0d\u4f5c\u4e3a\u8fd4\u56de labels \u4e2d\u7684\u4e00\u90e8\u5206 absent(nonexistent{job=\"myjob\",instance=~\".*\"}) => {job=\"myjob\"} 1 # sum \u51fd\u6570\u8fd4\u56de\u7684\u65f6\u95f4\u5e8f\u5217\u4e0d\u5e26\u6709\u6807\u7b7e\uff0c\u4e14\u6ca1\u6709\u6837\u672c\u6570\u636e absent(sum(nonexistent{job=\"myjob\"})) => {} 1","title":"absent()"},{"location":"chap8/3Promql_basic3/#ceil","text":"ceil(v instant-vector) \u5c06 v \u4e2d\u6240\u6709\u5143\u7d20\u7684\u6837\u672c\u503c\u5411\u4e0a\u56db\u820d\u4e94\u5165\u5230\u6700\u63a5\u8fd1\u7684\u6574\u6570\u3002\u4f8b\u5982\uff1a node_load5{instance=\"192.168.1.75:9100\"} # \u7ed3\u679c\u4e3a 2.79 ceil(node_load5{instance=\"192.168.1.75:9100\"}) # \u7ed3\u679c\u4e3a 3","title":"ceil()"},{"location":"chap8/3Promql_basic3/#changes","text":"changes(v range-vector) \u8f93\u5165\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff0c \u8fd4\u56de\u8fd9\u4e2a\u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u6837\u672c\u6570\u636e\u503c\u53d8\u5316\u7684\u6b21\u6570\uff08\u77ac\u65f6\u5411\u91cf\uff09 \u3002\u4f8b\u5982\uff1a # \u5982\u679c\u6837\u672c\u6570\u636e\u503c\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff0c\u5219\u8fd4\u56de\u7ed3\u679c\u4e3a 1 changes(node_load5{instance=\"192.168.1.75:9100\"}[1m]) # \u7ed3\u679c\u4e3a 1","title":"changes()"},{"location":"chap8/3Promql_basic3/#clamp_max","text":"clamp_max(v instant-vector, max scalar) \u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\u548c\u6700\u5927\u503c \uff0c\u6837\u672c\u6570\u636e\u503c\u82e5\u5927\u4e8e max \uff0c\u5219\u6539\u4e3a max \uff0c\u5426\u5219\u4e0d\u53d8\u3002\u4f8b\u5982\uff1a node_load5{instance=\"192.168.1.75:9100\"} # \u7ed3\u679c\u4e3a 2.79 clamp_max(node_load5{instance=\"192.168.1.75:9100\"}, 2) # \u7ed3\u679c\u4e3a 2","title":"clamp_max()"},{"location":"chap8/3Promql_basic3/#clamp_min","text":"clamp_min(v instant-vector, min scalar) \u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\u548c\u6700\u5c0f\u503c\uff0c\u6837\u672c\u6570\u636e\u503c\u82e5\u5c0f\u4e8e min\uff0c\u5219\u6539\u4e3a min\uff0c\u5426\u5219\u4e0d\u53d8\u3002\u4f8b\u5982\uff1a node_load5{instance=\"192.168.1.75:9100\"} # \u7ed3\u679c\u4e3a 2.79 clamp_min(node_load5{instance=\"192.168.1.75:9100\"}, 3) # \u7ed3\u679c\u4e3a 3","title":"clamp_min()"},{"location":"chap8/3Promql_basic3/#day_of_month","text":"day_of_month(v=vector(time()) instant-vector) \u51fd\u6570\uff0c\u8fd4\u56de\u88ab\u7ed9\u5b9a UTC \u65f6\u95f4\u6240\u5728\u6708\u7684\u7b2c\u51e0\u5929\u3002\u8fd4\u56de\u503c\u8303\u56f4\uff1a 1~31 \u3002","title":"day_of_month()"},{"location":"chap8/3Promql_basic3/#day_of_week","text":"day_of_week(v=vector(time()) instant-vector) \u51fd\u6570\uff0c\u8fd4\u56de\u88ab\u7ed9\u5b9a UTC \u65f6\u95f4\u6240\u5728\u5468\u7684\u7b2c\u51e0\u5929\u3002\u8fd4\u56de\u503c\u8303\u56f4\uff1a 0~6 \uff0c 0 \u8868\u793a\u661f\u671f\u5929\u3002","title":"day_of_week()"},{"location":"chap8/3Promql_basic3/#days_in_month","text":"days_in_month(v=vector(time()) instant-vector) \u51fd\u6570\uff0c\u8fd4\u56de\u5f53\u6708\u4e00\u5171\u6709\u591a\u5c11\u5929\u3002\u8fd4\u56de\u503c\u8303\u56f4\uff1a 28~31 \u3002","title":"days_in_month()"},{"location":"chap8/3Promql_basic3/#delta","text":"delta(v range-vector) \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff0c\u8fd4\u56de\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\u3002\u5b83\u8ba1\u7b97\u4e00\u4e2a\u533a\u95f4\u5411\u91cf v \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u5dee\u503c\u3002\u7531\u4e8e\u8fd9\u4e2a\u503c\u88ab\u5916\u63a8\u5230\u6307\u5b9a\u7684\u6574\u4e2a\u65f6\u95f4\u8303\u56f4\uff0c\u6240\u4ee5\u5373\u4f7f\u6837\u672c\u503c\u90fd\u662f\u6574\u6570\uff0c\u4f60\u4ecd\u7136\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u975e\u6574\u6570\u503c\u3002 \u4f8b\u5982\uff0c \u4e0b\u9762\u7684\u4f8b\u5b50\u8fd4\u56de\u8fc7\u53bb\u4e24\u5c0f\u65f6\u7684 CPU \u6e29\u5ea6\u5dee \uff1a delta(cpu_temp_celsius{host=\"zeus\"}[2h]) \u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728 Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002","title":"delta()"},{"location":"chap8/3Promql_basic3/#deriv","text":"deriv(v range-vector) \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf,\u8fd4\u56de\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\u3002\u5b83\u4f7f\u7528\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\u8ba1\u7b97\u533a\u95f4\u5411\u91cf v \u4e2d\u5404\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u5bfc\u6570\u3002 \u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728 Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002","title":"deriv()"},{"location":"chap8/3Promql_basic3/#exp","text":"exp(v instant-vector) \u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\uff0c\u8fd4\u56de\u5404\u4e2a\u6837\u672c\u503c\u7684 e \u7684\u6307\u6570\u503c\uff0c\u5373 e \u7684 N \u6b21\u65b9\u3002\u5f53 N \u7684\u503c\u8db3\u591f\u5927\u65f6\u4f1a\u8fd4\u56de +Inf \u3002\u7279\u6b8a\u60c5\u51b5\u4e3a\uff1a Exp(+Inf) = +Inf Exp(NaN) = NaN","title":"exp()"},{"location":"chap8/3Promql_basic3/#floor","text":"floor(v instant-vector) \u51fd\u6570\u4e0e ceil() \u51fd\u6570\u76f8\u53cd\uff0c\u5c06 v \u4e2d\u6240\u6709\u5143\u7d20\u7684\u6837\u672c\u503c\u5411\u4e0b\u56db\u820d\u4e94\u5165\u5230\u6700\u63a5\u8fd1\u7684\u6574\u6570\u3002","title":"floor()"},{"location":"chap8/3Promql_basic3/#histogram_quantile","text":"histogram_quantile(\u03c6 float, b instant-vector) \u4ece bucket \u7c7b\u578b\u7684\u5411\u91cf b \u4e2d\u8ba1\u7b97 \u03c6 (0 \u2264 \u03c6 \u2264 1) \u5206\u4f4d\u6570\uff08\u767e\u5206\u4f4d\u6570\u7684\u4e00\u822c\u5f62\u5f0f\uff09\u7684\u6837\u672c\u7684\u6700\u5927\u503c\u3002 \uff08\u6709\u5173 \u03c6 \u5206\u4f4d\u6570\u7684\u8be6\u7ec6\u8bf4\u660e\u4ee5\u53ca\u76f4\u65b9\u56fe\u6307\u6807\u7c7b\u578b\u7684\u4f7f\u7528\uff0c\u8bf7\u53c2\u9605\u76f4\u65b9\u56fe\u548c\u6458\u8981\uff09\u3002\u5411\u91cf b \u4e2d\u7684\u6837\u672c\u662f\u6bcf\u4e2a bucket \u7684\u91c7\u6837\u70b9\u6570\u91cf\u3002\u6bcf\u4e2a\u6837\u672c\u7684 labels \u4e2d\u5fc5\u987b\u8981\u6709 le \u8fd9\u4e2a label \u6765\u8868\u793a\u6bcf\u4e2a bucket \u7684\u4e0a\u8fb9\u754c\uff0c\u6ca1\u6709 le \u6807\u7b7e\u7684\u6837\u672c\u4f1a\u88ab\u5ffd\u7565\u3002 \u76f4\u65b9\u56fe\u6307\u6807\u7c7b\u578b\u81ea\u52a8\u63d0\u4f9b\u5e26\u6709 _bucket \u540e\u7f00\u548c\u76f8\u5e94\u6807\u7b7e\u7684\u65f6\u95f4\u5e8f\u5217\u3002 \u53ef\u4ee5\u4f7f\u7528 rate() \u51fd\u6570\u6765\u6307\u5b9a\u5206\u4f4d\u6570\u8ba1\u7b97\u7684\u65f6\u95f4\u7a97\u53e3\u3002 \u4f8b\u5982\uff0c \u4e00\u4e2a\u76f4\u65b9\u56fe\u6307\u6807\u540d\u79f0\u4e3a employee_age_bucket_bucket \uff0c\u8981\u8ba1\u7b97\u8fc7\u53bb 10 \u5206\u949f\u5185 \u7b2c 90 \u4e2a\u767e\u5206\u4f4d\u6570\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u8868\u8fbe\u5f0f\uff1a histogram_quantile(0.9, rate(employee_age_bucket_bucket[10m])) \u8fd4\u56de\uff1a {instance=\"10.0.86.71:8080\",job=\"prometheus\"} 35.714285714285715 \u8fd9\u8868\u793a\u6700\u8fd1 10 \u5206\u949f\u4e4b\u5185 90% \u7684\u6837\u672c\u7684\u6700\u5927\u503c\u4e3a 35.714285714285715 \u3002 \u8fd9\u4e2a\u8ba1\u7b97\u7ed3\u679c\u662f\u6bcf\u7ec4\u6807\u7b7e\u7ec4\u5408\u6210\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u3002\u6211\u4eec\u53ef\u80fd\u4e0d\u4f1a\u5bf9\u6240\u6709\u8fd9\u4e9b\u7ef4\u5ea6\uff08\u5982 job \u3001 instance \u548c method \uff09\u611f\u5174\u8da3\uff0c\u5e76\u5e0c\u671b\u5c06\u5176\u4e2d\u7684\u4e00\u4e9b\u7ef4\u5ea6\u8fdb\u884c\u805a\u5408\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 sum() \u51fd\u6570\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u6839\u636e job \u6807\u7b7e\u6765\u5bf9\u7b2c 90 \u4e2a\u767e\u5206\u4f4d\u6570\u8fdb\u884c\u805a\u5408\uff1a # histogram_quantile() \u51fd\u6570\u5fc5\u987b\u5305\u542b le \u6807\u7b7e histogram_quantile(0.9, sum(rate(employee_age_bucket_bucket[10m])) by (job, le)) \u5982\u679c\u8981\u805a\u5408\u6240\u6709\u7684\u6807\u7b7e\uff0c\u5219\u4f7f\u7528\u5982\u4e0b\u8868\u8fbe\u5f0f\uff1a histogram_quantile(0.9,sum(rate(employee_age_bucket_bucket[10m])) by (le))","title":"histogram_quantile()"},{"location":"chap8/3Promql_basic3/#holt_winters","text":"holt_winters(v range-vector, sf scalar, tf scalar) \u51fd\u6570\u57fa\u4e8e\u533a\u95f4\u5411\u91cf v \uff0c \u751f\u6210\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e73\u6ed1\u503c \u3002\u5e73\u6ed1\u56e0\u5b50 sf \u8d8a\u4f4e, \u5bf9\u65e7\u6570\u636e\u7684\u91cd\u89c6\u7a0b\u5ea6\u8d8a\u9ad8\u3002\u8d8b\u52bf\u56e0\u5b50 tf \u8d8a\u9ad8\uff0c\u5bf9\u6570\u636e\u7684\u8d8b\u52bf\u7684\u8003\u8651\u5c31\u8d8a\u591a\u3002\u5176\u4e2d\uff0c 0< sf , tf <=1 \u3002 holt_winters \u4ec5\u9002\u7528\u4e8e Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u3002","title":"holt_winters()"},{"location":"chap8/3Promql_basic3/#hour","text":"hour(v=vector(time()) instant-vector) \u51fd\u6570\u8fd4\u56de\u88ab\u7ed9\u5b9a UTC \u65f6\u95f4\u7684\u5f53\u524d\u7b2c\u51e0\u4e2a\u5c0f\u65f6\uff0c\u65f6\u95f4\u8303\u56f4\uff1a 0~23 \u3002","title":"hour()"},{"location":"chap8/3Promql_basic3/#idelta","text":"idelta(v range-vector) \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf, \u8fd4\u56de\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\u3002\u5b83\u8ba1\u7b97\u6700\u65b0\u7684 2 \u4e2a\u6837\u672c\u503c\u4e4b\u95f4\u7684\u5dee\u503c\u3002 \u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728 Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002","title":"idelta()"},{"location":"chap8/3Promql_basic3/#increase","text":"increase(v range-vector) \u51fd\u6570\u83b7\u53d6\u533a\u95f4\u5411\u91cf\u4e2d\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u6837\u672c\u5e76\u8fd4\u56de\u5176\u589e\u957f\u91cf, \u5b83\u4f1a\u5728\u5355\u8c03\u6027\u53d1\u751f\u53d8\u5316\u65f6(\u5982\u7531\u4e8e\u91c7\u6837\u76ee\u6807\u91cd\u542f\u5f15\u8d77\u7684\u8ba1\u6570\u5668\u590d\u4f4d)\u81ea\u52a8\u4e2d\u65ad\u3002\u7531\u4e8e\u8fd9\u4e2a\u503c\u88ab\u5916\u63a8\u5230\u6307\u5b9a\u7684\u6574\u4e2a\u65f6\u95f4\u8303\u56f4\uff0c\u6240\u4ee5\u5373\u4f7f\u6837\u672c\u503c\u90fd\u662f\u6574\u6570\uff0c\u4f60\u4ecd\u7136\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u975e\u6574\u6570\u503c\u3002 \u4f8b\u5982\uff0c \u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u533a\u95f4\u5411\u91cf\u4e2d\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u8fc7\u53bb 5 \u5206\u949f\u5185 HTTP \u8bf7\u6c42\u6570\u7684\u589e\u957f\u6570 \uff1a increase(http_requests_total{job=\"apiserver\"}[5m]) increase \u7684\u8fd4\u56de\u503c\u7c7b\u578b\u53ea\u80fd\u662f\u8ba1\u6570\u5668\u7c7b\u578b\uff0c\u4e3b\u8981\u4f5c\u7528\u662f\u589e\u52a0\u56fe\u8868\u548c\u6570\u636e\u7684\u53ef\u8bfb\u6027\u3002\u4f7f\u7528 rate \u51fd\u6570\u8bb0\u5f55\u89c4\u5219\u7684\u4f7f\u7528\u7387\uff0c\u4ee5\u4fbf\u6301\u7eed\u8ddf\u8e2a\u6570\u636e\u6837\u672c\u503c\u7684\u53d8\u5316\u3002","title":"increase()"},{"location":"chap8/3Promql_basic3/#irate","text":"irate(v range-vector) \u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u533a\u95f4\u5411\u91cf\u7684\u589e\u957f\u7387\uff0c\u4f46\u662f\u5176\u53cd\u5e94\u51fa\u7684\u662f\u77ac\u65f6\u589e\u957f\u7387\u3002 irate \u51fd\u6570\u662f\u901a\u8fc7\u533a\u95f4\u5411\u91cf\u4e2d\u6700\u540e\u4e24\u4e2a\u4e24\u672c\u6570\u636e\u6765\u8ba1\u7b97\u533a\u95f4\u5411\u91cf\u7684\u589e\u957f\u901f\u7387\uff0c\u5b83\u4f1a\u5728\u5355\u8c03\u6027\u53d1\u751f\u53d8\u5316\u65f6(\u5982\u7531\u4e8e\u91c7\u6837\u76ee\u6807\u91cd\u542f\u5f15\u8d77\u7684\u8ba1\u6570\u5668\u590d\u4f4d)\u81ea\u52a8\u4e2d\u65ad\u3002\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u907f\u514d\u5728\u65f6\u95f4\u7a97\u53e3\u8303\u56f4\u5185\u7684\u201c\u957f\u5c3e\u95ee\u9898\u201d\uff0c\u5e76\u4e14\u4f53\u73b0\u51fa\u66f4\u597d\u7684\u7075\u654f\u5ea6\uff0c\u901a\u8fc7irate\u51fd\u6570\u7ed8\u5236\u7684\u56fe\u6807\u80fd\u591f\u66f4\u597d\u7684\u53cd\u5e94\u6837\u672c\u6570\u636e\u7684\u77ac\u65f6\u53d8\u5316\u72b6\u6001\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de \u533a\u95f4\u5411\u91cf\u4e2d\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u8fc7\u53bb 5 \u5206\u949f\u5185\u6700\u540e\u4e24\u4e2a\u6837\u672c\u6570\u636e\u7684 HTTP \u8bf7\u6c42\u6570\u7684\u589e\u957f\u7387 \uff1a irate(http_requests_total{job=\"api-server\"}[5m]) irate \u53ea\u80fd\u7528\u4e8e\u7ed8\u5236\u5feb\u901f\u53d8\u5316\u7684\u8ba1\u6570\u5668\uff0c\u5728\u957f\u671f\u8d8b\u52bf\u5206\u6790\u6216\u8005\u544a\u8b66\u4e2d\u66f4\u63a8\u8350\u4f7f\u7528 rate \u51fd\u6570\u3002\u56e0\u4e3a\u4f7f\u7528 irate \u51fd\u6570\u65f6\uff0c\u901f\u7387\u7684\u7b80\u77ed\u53d8\u5316\u4f1a\u91cd\u7f6e FO R \u8bed\u53e5\uff0c\u5f62\u6210\u7684\u56fe\u5f62\u6709\u5f88\u591a\u6ce2\u5cf0\uff0c\u96be\u4ee5\u9605\u8bfb\u3002 \u5f53\u5c06 irate() \u51fd\u6570\u4e0e\u805a\u5408\u8fd0\u7b97\u7b26\uff08\u4f8b\u5982 sum() \uff09\u6216\u968f\u65f6\u95f4\u805a\u5408\u7684\u51fd\u6570\uff08\u4efb\u4f55\u4ee5 _over_time \u7ed3\u5c3e\u7684\u51fd\u6570\uff09\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u5fc5\u987b\u5148\u6267\u884c irate \u51fd\u6570\uff0c\u7136\u540e\u518d\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\uff0c\u5426\u5219\u5f53\u91c7\u6837\u76ee\u6807\u91cd\u65b0\u542f\u52a8\u65f6 irate() \u65e0\u6cd5\u68c0\u6d4b\u5230\u8ba1\u6570\u5668\u662f\u5426\u88ab\u91cd\u7f6e\u3002","title":"irate()"},{"location":"chap8/3Promql_basic3/#label_join","text":"label_join(v instant-vector, dst_label string, separator string, src_label_1 string, src_label_2 string, ...) \u51fd\u6570\u53ef\u4ee5\u5c06\u65f6\u95f4\u5e8f\u5217 v \u4e2d\u591a\u4e2a\u6807\u7b7e src_label \u7684\u503c\uff0c\u901a\u8fc7 separator \u4f5c\u4e3a\u8fde\u63a5\u7b26\u5199\u5165\u5230\u4e00\u4e2a\u65b0\u7684\u6807\u7b7e dst_label \u4e2d\u3002\u53ef\u4ee5\u6709\u591a\u4e2a src_label \u6807\u7b7e\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u65f6\u95f4\u5e8f\u5217\u591a\u4e86\u4e00\u4e2a foo \u6807\u7b7e\uff0c\u6807\u7b7e\u503c\u4e3a etcd,etcd-k8s \uff1a up{endpoint=\"api\",instance=\"192.168.123.248:2379\",job=\"etcd\",namespace=\"monitoring\",service=\"etcd-k8s\"} => up{endpoint=\"api\",instance=\"192.168.123.248:2379\",job=\"etcd\",namespace=\"monitoring\",service=\"etcd-k8s\"} 1 label_join(up{endpoint=\"api\",instance=\"192.168.123.248:2379\",job=\"etcd\",namespace=\"monitoring\",service=\"etcd-k8s\"}, \"foo\", \",\", \"job\", \"service\") => up{endpoint=\"api\",foo=\"etcd,etcd-k8s\",instance=\"192.168.123.248:2379\",job=\"etcd\",namespace=\"monitoring\",service=\"etcd-k8s\"} 1","title":"label_join()"},{"location":"chap8/3Promql_basic3/#label_replace","text":"\u4e3a\u4e86\u80fd\u591f\u8ba9\u5ba2\u6237\u7aef\u7684\u56fe\u6807\u66f4\u5177\u6709\u53ef\u8bfb\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7 label_replace \u51fd\u6570\u4e3a\u65f6\u95f4\u5e8f\u5217\u6dfb\u52a0\u989d\u5916\u7684\u6807\u7b7e\u3002 label_replace \u7684\u5177\u4f53\u53c2\u6570\u5982\u4e0b\uff1a label_replace(v instant-vector, dst_label string, replacement string, src_label string, regex string) \u8be5\u51fd\u6570\u4f1a\u4f9d\u6b21\u5bf9 v \u4e2d\u7684\u6bcf\u4e00\u6761\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u5904\u7406\uff0c\u901a\u8fc7 regex \u5339\u914d src_label \u7684\u503c\uff0c\u5e76\u5c06\u5339\u914d\u90e8\u5206 relacement \u5199\u5165\u5230 dst_label \u6807\u7b7e\u4e2d\u3002\u5982\u4e0b\u6240\u793a\uff1a label_replace(up, \"host\", \"$1\", \"instance\", \"(.*):.*\") \u51fd\u6570\u5904\u7406\u540e\uff0c\u65f6\u95f4\u5e8f\u5217\u5c06\u5305\u542b\u4e00\u4e2a host \u6807\u7b7e\uff0chost \u6807\u7b7e\u7684\u503c\u4e3a Exporter \u5b9e\u4f8b\u7684 IP \u5730\u5740\uff1a up{host=\"localhost\",instance=\"localhost:8080\",job=\"cadvisor\"} 1 up{host=\"localhost\",instance=\"localhost:9090\",job=\"prometheus\"} 1 up{host=\"localhost\",instance=\"localhost:9100\",job=\"node\"} 1","title":"label_replace()"},{"location":"chap8/3Promql_basic3/#ln","text":"ln(v instant-vector) \u8ba1\u7b97\u77ac\u65f6\u5411\u91cf v \u4e2d\u6240\u6709\u6837\u672c\u6570\u636e\u7684\u81ea\u7136\u5bf9\u6570\u3002\u7279\u6b8a\u60c5\u51b5\uff1a ln(+Inf) = +Inf ln(0) = -Inf ln(x < 0) = NaN ln(NaN) = NaN","title":"ln()"},{"location":"chap8/3Promql_basic3/#log2","text":"log2(v instant-vector) \u51fd\u6570\u8ba1\u7b97\u77ac\u65f6\u5411\u91cf v \u4e2d\u6240\u6709\u6837\u672c\u6570\u636e\u7684\u4e8c\u8fdb\u5236\u5bf9\u6570\u3002\u7279\u6b8a\u60c5\u51b5\u540c\u4e0a\u3002","title":"log2()"},{"location":"chap8/3Promql_basic3/#log10","text":"log10(v instant-vector) \u8ba1\u7b97\u77ac\u65f6\u5411\u91cf v \u4e2d\u6240\u6709\u6837\u672c\u6570\u636e\u7684\u5341\u8fdb\u5236\u5bf9\u6570\u3002\u7279\u6b8a\u60c5\u51b5\u540c\u4e0a\u3002","title":"**log10()**"},{"location":"chap8/3Promql_basic3/#minute","text":"minute(v=vector(time()) instant-vector) \u51fd\u6570\u8fd4\u56de\u7ed9\u5b9a UTC \u65f6\u95f4\u5f53\u524d\u5c0f\u65f6\u7684\u7b2c\u591a\u5c11\u5206\u949f\u3002\u7ed3\u679c\u8303\u56f4\uff1a0~59\u3002","title":"minute()"},{"location":"chap8/3Promql_basic3/#month","text":"month(v=vector(time()) instant-vector) \u51fd\u6570\u8fd4\u56de\u7ed9\u5b9a UTC \u65f6\u95f4\u5f53\u524d\u5c5e\u4e8e\u7b2c\u51e0\u4e2a\u6708\uff0c\u7ed3\u679c\u8303\u56f4\uff1a 0~12 \u3002","title":"month()"},{"location":"chap8/3Promql_basic3/#predict_linear","text":"predict_linear(v range-vector, t scalar) \u51fd\u6570\u53ef\u4ee5\u9884\u6d4b\u65f6\u95f4\u5e8f\u5217 v \u5728 t \u79d2\u540e\u7684\u503c\u3002 \u5b83\u57fa\u4e8e\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u7684\u65b9\u5f0f\uff0c\u5bf9\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u6837\u672c\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\uff0c\u4ece\u800c\u53ef\u4ee5\u5bf9\u65f6\u95f4\u5e8f\u5217\u7684\u53d8\u5316\u8d8b\u52bf\u505a\u51fa\u9884\u6d4b\u3002\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u7ed3\u679c\u4e0d\u5e26\u6709\u5ea6\u91cf\u6307\u6807\uff0c\u53ea\u6709\u6807\u7b7e\u5217\u8868\u3002 \u4f8b\u5982\uff0c\u57fa\u4e8e 2 \u5c0f\u65f6\u7684\u6837\u672c\u6570\u636e\uff0c\u6765\u9884\u6d4b\u4e3b\u673a\u53ef\u7528\u78c1\u76d8\u7a7a\u95f4\u7684\u662f\u5426\u5728 4 \u4e2a\u5c0f\u65f6\u5019\u88ab\u5360\u6ee1\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8868\u8fbe\u5f0f\uff1a predict_linear(http_requests_total{code=\"200\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"}[5m], 5) \u7ed3\u679c\uff1a {code=\"200\",handler=\"query_range\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 1 {code=\"200\",handler=\"prometheus\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 4283.449995397104 {code=\"200\",handler=\"static\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 22.99999999999999 ... \u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728 Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002","title":"predict_linear()"},{"location":"chap8/3Promql_basic3/#rate","text":"rate(v range-vector) \u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u533a\u95f4\u5411\u91cf v \u5728\u65f6\u95f4\u7a97\u53e3\u5185\u5e73\u5747\u589e\u957f\u901f\u7387\uff0c\u5b83\u4f1a\u5728\u5355\u8c03\u6027\u53d1\u751f\u53d8\u5316\u65f6(\u5982\u7531\u4e8e\u91c7\u6837\u76ee\u6807\u91cd\u542f\u5f15\u8d77\u7684\u8ba1\u6570\u5668\u590d\u4f4d)\u81ea\u52a8\u4e2d\u65ad\u3002\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u7ed3\u679c\u4e0d\u5e26\u6709\u5ea6\u91cf\u6307\u6807\uff0c\u53ea\u6709\u6807\u7b7e\u5217\u8868\u3002 \u4f8b\u5982\uff0c \u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u533a\u95f4\u5411\u91cf\u4e2d\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u8fc7\u53bb 5 \u5206\u949f\u5185 HTTP \u8bf7\u6c42\u6570\u7684\u6bcf\u79d2\u589e\u957f\u7387 \uff1a rate(http_requests_total[5m]) \u7ed3\u679c\uff1a {code=\"200\",handler=\"label_values\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 0 {code=\"200\",handler=\"query_range\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 0 {code=\"200\",handler=\"prometheus\",instance=\"120.77.65.193:9090\",job=\"prometheus\",method=\"get\"} 0.2 ... rate() \u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u53ea\u80fd\u7528\u8ba1\u6570\u5668\uff0c\u5728\u957f\u671f\u8d8b\u52bf\u5206\u6790\u6216\u8005\u544a\u8b66\u4e2d\u63a8\u8350\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570 \u3002","title":"rate()"},{"location":"chap8/3Promql_basic3/#resets","text":"resets(v range-vector) \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\uff0c\u5b83\u90fd\u8fd4\u56de\u4e00\u4e2a\u8ba1\u6570\u5668\u91cd\u7f6e\u7684\u6b21\u6570\u3002\u4e24\u4e2a\u8fde\u7eed\u6837\u672c\u4e4b\u95f4\u7684\u503c\u7684\u51cf\u5c11\u88ab\u8ba4\u4e3a\u662f\u4e00\u6b21\u8ba1\u6570\u5668\u91cd\u7f6e\u3002 \u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728\u8ba1\u6570\u5668\u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002","title":"resets()"},{"location":"chap8/3Promql_basic3/#round","text":"round(v instant-vector, to_nearest=1 scalar) \u51fd\u6570\u4e0e ceil \u548c floor \u51fd\u6570\u7c7b\u4f3c\uff0c\u8fd4\u56de\u5411\u91cf\u4e2d\u6240\u6709\u6837\u672c\u503c\u7684\u6700\u63a5\u8fd1\u7684\u6574\u6570\u3002 to_nearest \u53c2\u6570\u662f\u53ef\u9009\u7684,\u9ed8\u8ba4\u4e3a 1 ,\u8868\u793a\u6837\u672c\u8fd4\u56de\u7684\u662f\u6700\u63a5\u8fd1 1 \u7684\u6574\u6570\u500d\u7684\u503c\u3002\u4f60\u4e5f\u53ef\u4ee5\u5c06\u8be5\u53c2\u6570\u6307\u5b9a\u4e3a\u4efb\u610f\u503c\uff08\u4e5f\u53ef\u4ee5\u662f\u5c0f\u6570\uff09\uff0c\u8868\u793a\u6837\u672c\u8fd4\u56de\u7684\u662f\u6700\u63a5\u8fd1\u5b83\u7684\u6574\u6570\u500d\u7684\u503c\u3002","title":"round()"},{"location":"chap8/3Promql_basic3/#scalar","text":"scalar(v instant-vector) \u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5355\u5143\u7d20\u7684\u77ac\u65f6\u5411\u91cf,\u5b83\u8fd4\u56de\u5176\u552f\u4e00\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u4f5c\u4e3a\u4e00\u4e2a\u6807\u91cf\u3002\u5982\u679c\u5ea6\u91cf\u6307\u6807\u7684\u6837\u672c\u6570\u91cf\u5927\u4e8e 1 \u6216\u8005\u7b49\u4e8e 0 , \u5219\u8fd4\u56de NaN \u3002","title":"scalar()"},{"location":"chap8/3Promql_basic3/#sort","text":"sort(v instant-vector) \u51fd\u6570\u5bf9\u5411\u91cf\u6309\u5143\u7d20\u7684\u503c\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u8fd4\u56de\u7ed3\u679c\uff1a key: value = \u5ea6\u91cf\u6307\u6807\uff1a\u6837\u672c\u503c[\u5347\u5e8f\u6392\u5217] \u3002","title":"sort()"},{"location":"chap8/3Promql_basic3/#sort_desc","text":"sort(v instant-vector) \u51fd\u6570\u5bf9\u5411\u91cf\u6309\u5143\u7d20\u7684\u503c\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u8fd4\u56de\u7ed3\u679c\uff1a key: value = \u5ea6\u91cf\u6307\u6807\uff1a\u6837\u672c\u503c[\u964d\u5e8f\u6392\u5217] \u3002","title":"sort_desc()"},{"location":"chap8/3Promql_basic3/#sqrt","text":"sqrt(v instant-vector) \u51fd\u6570\u8ba1\u7b97\u5411\u91cf v \u4e2d\u6240\u6709\u5143\u7d20\u7684\u5e73\u65b9\u6839\u3002","title":"sqrt()"},{"location":"chap8/3Promql_basic3/#time","text":"time() \u51fd\u6570\u8fd4\u56de\u4ece 1970-01-01 \u5230\u73b0\u5728\u7684\u79d2\u6570\u3002\u6ce8\u610f\uff1a\u5b83\u4e0d\u662f\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u65f6\u95f4\uff0c\u800c\u662f\u65f6\u95f4\u6233","title":"time()"},{"location":"chap8/3Promql_basic3/#timestamp","text":"timestamp(v instant-vector) \u51fd\u6570\u8fd4\u56de\u5411\u91cf v \u4e2d\u7684\u6bcf\u4e2a\u6837\u672c\u7684\u65f6\u95f4\u6233\uff08\u4ece 1970-01-01 \u5230\u73b0\u5728\u7684\u79d2\u6570\uff09\u3002","title":"timestamp()"},{"location":"chap8/3Promql_basic3/#vector","text":"vector(s scalar) \u51fd\u6570\u5c06\u6807\u91cf s \u4f5c\u4e3a\u6ca1\u6709\u6807\u7b7e\u7684\u5411\u91cf\u8fd4\u56de\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e3a\uff1a key: value= {}, s \u3002","title":"vector()"},{"location":"chap8/3Promql_basic3/#year","text":"year(v=vector(time()) instant-vector) \u51fd\u6570\u8fd4\u56de\u88ab\u7ed9\u5b9a UTC \u65f6\u95f4\u7684\u5f53\u524d\u5e74\u4efd\u3002","title":"year()"},{"location":"chap8/3Promql_basic3/#aggregation_over_time","text":"\u4e0b\u9762\u7684\u51fd\u6570\u5217\u8868\u5141\u8bb8\u4f20\u5165\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff0c\u5b83\u4eec\u4f1a\u805a\u5408\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u8303\u56f4\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf \uff1a avg_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u5e73\u5747\u503c\u3002 min_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u6700\u5c0f\u503c\u3002 max_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u6700\u5927\u503c\u3002 sum_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u6c42\u548c\u3002 count_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u6837\u672c\u6570\u636e\u4e2a\u6570\u3002 quantile_over_time(scalar, range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u6837\u672c\u6570\u636e\u503c\u5206\u4f4d\u6570\uff0c \u03c6-quantile (0 \u2264 \u03c6 \u2264 1) \u3002 stddev_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u603b\u4f53\u6807\u51c6\u5dee\u3002 stdvar_over_time(range-vector) : \u533a\u95f4\u5411\u91cf\u5185\u6bcf\u4e2a\u5ea6\u91cf\u6307\u6807\u7684\u603b\u4f53\u6807\u51c6\u65b9\u5dee","title":"&lt;aggregation&gt;_over_time()"},{"location":"chap8/42Prometheus_operator_metrics/","text":"9 Prometheus Operator \u5e38\u7528\u6307\u6807 Prometheus Operator \u5b89\u88c5\u5b8c\u6210\u540e\u4f1a\u6709\u5f88\u591a\u9ed8\u8ba4\u7684\u76d1\u63a7\u6307\u6807\uff0c\u4e00\u4e0d\u6ce8\u610f\u5c31\u5927\u91cf\u7684\u62a5\u8b66\u4ea7\u751f\uff0c\u6240\u4ee5\u6211\u4eec\u975e\u5e38\u6709\u5fc5\u8981\u4e86\u89e3\u4e0b\u8fd9\u4e9b\u5e38\u7528\u7684\u76d1\u63a7\u6307\u6807\uff0c\u6709\u90e8\u5206\u6307\u6807\u5f88\u6709\u53ef\u80fd\u5bf9\u4e8e\u6211\u4eec\u81ea\u5df1\u7684\u4e1a\u52a1\u53ef\u6709\u53ef\u65e0\uff0c\u6240\u4ee5\u53ef\u4ee5\u9002\u5f53\u7684\u8fdb\u884c\u4fee\u6539\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u6765\u5bf9\u5e38\u7528\u7684\u51e0\u4e2a\u6307\u6807\u8fdb\u884c\u7b80\u5355\u7684\u8bf4\u660e\u3002 1. Kubernetes \u8d44\u6e90\u76f8\u5173 1.1 CPUThrottlingHigh \u5173\u4e8e CPU \u7684 limit \u5408\u7406\u6027\u6307\u6807\u3002\u67e5\u51fa\u6700\u8fd15\u5206\u949f\uff0c\u8d85\u8fc725%\u7684 CPU \u6267\u884c\u5468\u671f\u53d7\u5230\u9650\u5236\u7684\u5bb9\u5668\u3002\u8868\u8fbe\u5f0f\uff1a sum(increase(container_cpu_cfs_throttled_periods_total{container!=\"\", }[5m])) by (container, pod, namespace) / sum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace) > ( 25 / 100 ) \u76f8\u5173\u6307\u6807\uff1a container_cpu_cfs_periods_total \uff1a\u5bb9\u5668\u751f\u547d\u5468\u671f\u4e2d\u5ea6\u8fc7\u7684 cpu \u5468\u671f\u603b\u6570 container_cpu_cfs_throttled_periods_total \uff1a\u5bb9\u5668\u751f\u547d\u5468\u671f\u4e2d\u5ea6\u8fc7\u7684\u53d7\u9650\u7684 cpu \u5468\u671f\u603b\u6570 1.2 KubeCPUOvercommit \u96c6\u7fa4 CPU \u8fc7\u5ea6\u4f7f\u7528\u3002CPU \u5df2\u7ecf\u8fc7\u5ea6\u4f7f\u7528\u65e0\u6cd5\u5bb9\u5fcd\u8282\u70b9\u6545\u969c\uff0c\u8282\u70b9\u8d44\u6e90\u4f7f\u7528\u7684\u603b\u91cf\u8d85\u8fc7\u8282\u70b9\u7684 CPU \u603b\u91cf\uff0c\u6240\u4ee5\u5982\u679c\u6709\u8282\u70b9\u6545\u969c\u5c06\u5f71\u54cd\u96c6\u7fa4\u8d44\u6e90\u8fd0\u884c\u56e0\u4e3a\u6240\u9700\u8d44\u6e90\u5c06\u65e0\u6cd5\u88ab\u5206\u914d\u3002 \u8868\u8fbe\u5f0f\uff1a sum(namespace:kube_pod_container_resource_requests_cpu_cores:sum{}) / sum(kube_node_status_allocatable_cpu_cores) > (count(kube_node_status_allocatable_cpu_cores)-1) / count(kube_node_status_allocatable_cpu_cores) \u76f8\u5173\u6307\u6807\uff1a kube_pod_container_resource_requests_cpu_cores \uff1a\u8d44\u6e90 CPU \u4f7f\u7528\u7684 cores \u6570\u91cf kube_node_status_allocatable_cpu_cores \uff1a\u8282\u70b9 CPU cores \u6570\u91cf 1.3 KubeMemoryOvercommit \u96c6\u7fa4\u5185\u5b58\u8fc7\u5ea6\u4f7f\u7528\u3002\u5185\u5b58\u5df2\u7ecf\u8fc7\u5ea6\u4f7f\u7528\u65e0\u6cd5\u5bb9\u5fcd\u8282\u70b9\u6545\u969c\uff0c\u8282\u70b9\u8d44\u6e90\u4f7f\u7528\u7684\u603b\u91cf\u8d85\u8fc7\u8282\u70b9\u7684\u5185\u5b58\u603b\u91cf\uff0c\u6240\u4ee5\u5982\u679c\u6709\u8282\u70b9\u6545\u969c\u5c06\u5f71\u54cd\u96c6\u7fa4\u8d44\u6e90\u8fd0\u884c\u56e0\u4e3a\u6240\u9700\u8d44\u6e90\u5c06\u65e0\u6cd5\u88ab\u5206\u914d\u3002\u8868\u8fbe\u5f0f\uff1a sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum{}) / sum(kube_node_status_allocatable_memory_bytes) > (count(kube_node_status_allocatable_memory_bytes)-1) / count(kube_node_status_allocatable_memory_bytes) \u76f8\u5173\u6307\u6807\uff1a kube_pod_container_resource_requests_memory_bytes \uff1a\u8d44\u6e90\u5185\u5b58\u4f7f\u7528\u7684\u91cf kube_node_status_allocatable_memory_bytes \uff1a\u8282\u70b9\u5185\u5b58\u91cf 1.4 KubeCPUQuotaOvercommit \u96c6\u7fa4CPU\u662f\u5426\u8d85\u5206\u3002\u67e5\u770b CPU \u8d44\u6e90\u5206\u914d\u7684\u989d\u5ea6\u662f\u5426\u8d85\u8fc7\u8fdb\u7fa4\u603b\u989d\u5ea6 \u8868\u8fbe\u5f0f\uff1a sum(kube_pod_container_resource_limits_cpu_cores{job=\"kube-state-metrics\"}) / sum(kube_node_status_allocatable_cpu_cores) > 1.1 \u76f8\u5173\u6307\u6807\uff1a kube_pod_container_resource_limits_cpu_cores \uff1a\u8d44\u6e90\u5206\u914d\u7684 CPU \u8d44\u6e90\u989d\u5ea6 kube_node_status_allocatable_cpu_cores \uff1a\u8282\u70b9 CPU \u603b\u91cf 1.5 KubeMemoryQuotaOvercommit \u96c6\u7fa4\u8d85\u5206\u5185\u5b58\uff0c\u67e5\u770b\u5185\u5b58\u8d44\u6e90\u5206\u914d\u7684\u989d\u5ea6\u662f\u5426\u8d85\u8fc7\u8fdb\u7fa4\u603b\u989d\u5ea6 \u8868\u8fbe\u5f0f\uff1a sum(kube_pod_container_resource_limits_memory_bytes{job=\"kube-state-metrics\"}) / sum(kube_node_status_allocatable_memory_bytes{job=\"kube-state-metrics\"}) > 1.1 \u76f8\u5173\u6307\u6807: kube_pod_container_resource_limits_memory_bytes \uff1a\u8d44\u6e90\u914d\u989d\u5185\u5b58\u91cf kube_node_status_allocatable_memory_bytes \uff1a\u8282\u70b9\u5185\u5b58\u91cf 1.6 KubeMEMQuotaExceeded \u547d\u540d\u7a7a\u95f4\u7ea7\u5185\u5b58\u8d44\u6e90\u4f7f\u7528\u7684\u6bd4\u4f8b\uff0c\u5173\u4e4e\u8d44\u6e90\u914d\u989d\u3002\u5f53\u4f7f\u7528 request \u548c limit \u9650\u5236\u8d44\u6e90\u65f6\uff0c\u4f7f\u7528\u503c\u548c\u6700\u5927\u503c\u8fd8\u662f\u6709\u4e00\u70b9\u533a\u522b\uff0c\u5f53\u6709 request \u65f6\u8bf4\u660e\u6700\u4f4e\u5206\u914d\u4e86\u8fd9\u4e48\u591a\u8d44\u6e90\u3002\u9700\u8981\u6ce8\u610f\u5f53 request \u7b49\u4e8e limit \u65f6\u90a3\u4e48\u8bf4\u660e\u8d44\u6e90\u5df2\u7ecf\u662f100%\u5df2\u7ecf\u5206\u914d\u4f7f\u7528\u5f53\u76d1\u63a7\u544a\u8b66\u53d1\u51fa\u7684\u65f6\u5019\u9700\u8981\u533a\u5206\u3002\u8868\u8fbe\u5f0f\uff1a sum (kube_pod_container_resource_requests_memory_bytes{job=\"kube-state-metrics\"} ) by (namespace)/ (sum(kube_pod_container_resource_limits_memory_bytes{job=\"kube-state-metrics\"}) by (namespace)) > 0.8 \u76f8\u5173\u6307\u6807: kube_pod_container_resource_requests_memory_bytes \uff1a\u5185\u5b58\u8d44\u6e90\u4f7f\u7528\u91cf kube_pod_container_resource_limits_memory_bytes \uff1a\u5185\u5b58\u8d44\u6e90\u6700\u5927\u503c 1.7 KubeCPUQuotaExceeded \u547d\u540d\u7a7a\u95f4\u7ea7 CPU \u8d44\u6e90\u4f7f\u7528\u7684\u6bd4\u4f8b\uff0c\u5173\u4e4e\u8d44\u6e90\u914d\u989d\u3002\u5f53\u4f7f\u7528 request \u548c limit \u9650\u5236\u8d44\u6e90\u65f6\uff0c\u4f7f\u7528\u503c\u548c\u6700\u5927\u503c\u8fd8\u662f\u6709\u4e00\u70b9\u533a\u522b\uff0c\u5f53\u6709 request \u65f6\u8bf4\u660e\u6700\u4f4e\u5206\u914d\u4e86\u8fd9\u4e48\u591a\u8d44\u6e90\u3002\u9700\u8981\u6ce8\u610f\u5f53 request \u7b49\u4e8e limit \u65f6\u90a3\u4e48\u8bf4\u660e\u8d44\u6e90\u5df2\u7ecf\u662f100%\u5df2\u7ecf\u5206\u914d\u4f7f\u7528\u5f53\u76d1\u63a7\u544a\u8b66\u53d1\u51fa\u7684\u65f6\u5019\u9700\u8981\u533a\u5206\u3002 \u8868\u8fbe\u5f0f\uff1a sum (kube_pod_container_resource_requests_cpu_cores{job=\"kube-state-metrics\"} ) by (namespace)/ (sum(kube_pod_container_resource_limits_cpu_cores{job=\"kube-state-metrics\"}) by (namespace)) > 0.8 \u76f8\u5173\u6307\u6807: kube_pod_container_resource_requests_cpu_cores \uff1aCPU \u4f7f\u7528\u91cf kube_pod_container_resource_limits_cpu_cores \uff1aCPU \u9650\u989d\u6700\u5927\u503c 2. Kubernetes \u5b58\u50a8\u76f8\u5173 2.1 KubePersistentVolumeFillingUp PVC \u5bb9\u91cf\u76d1\u63a7 \u8868\u8fbe\u5f0f\uff1a kubelet_volume_stats_available_bytes{job=\"kubelet\", metrics_path=\"/metrics\"} / kubelet_volume_stats_capacity_bytes{job=\"kubelet\", metrics_path=\"/metrics\"} < 0.3 \u76f8\u5173\u6307\u6807\uff1a kubelet_volume_stats_available_bytes \uff1a\u5269\u4f59\u7a7a\u95f4 kubelet_volume_stats_capacity_bytes \uff1a\u7a7a\u95f4\u603b\u91cf 2.2 KubePersistentVolumeFillingUp \u78c1\u76d8\u7a7a\u95f4\u8017\u5c3d\u9884\u6d4b\uff1a\u901a\u8fc7PVC\u8d44\u6e90\u4f7f\u75286\u5c0f\u65f6\u53d8\u5316\u7387\u9884\u6d4b \u63a5\u4e0b\u67654\u5929\u7684\u78c1\u76d8\u4f7f\u7528\u7387 \u8868\u8fbe\u5f0f\uff1a (kubelet_volume_stats_available_bytes{job=\"kubelet\", metrics_path=\"/metrics\"} / kubelet_volume_stats_capacity_bytes{job=\"kubelet\", metrics_path=\"/metrics\"} ) < 0.4 and predict_linear(kubelet_volume_stats_available_bytes{job=\"kubelet\", metrics_path=\"/metrics\"}[6h], 4 * 24 * 3600) < 0 \u76f8\u5173\u6307\u6807: kubelet_volume_stats_available_bytes \uff1a\u5269\u4f59\u7a7a\u95f4 kubelet_volume_stats_capacity_bytes \uff1a\u7a7a\u95f4\u603b\u91cf 2.3 KubePersistentVolumeErrors PV \u4f7f\u7528\u72b6\u6001\u76d1\u63a7\u3002 \u8868\u8fbe\u5f0f\uff1a kube_persistentvolume_status_phase{phase=~\"Failed|Pending\",job=\"kube-state-metrics\"} \u76f8\u5173\u6307\u6807\uff1a kube_persistentvolume_status_phase \uff1aPV \u4f7f\u7528\u72b6\u6001 3. kubernetes system \u76f8\u5173 3.1 KubeVersionMismatch \u7ec4\u4ef6\u7248\u672c\u4e0e\u5f53\u524d\u96c6\u7fa4\u7248\u672c\u662f\u5426\u6709\u5dee\u5f02\u3002\u5bf9\u6bd4\u7ec4\u4ef6\u7248\u672c\u662f\u5426\u6709\u5dee\u5f02\uff0c\u9ed8\u8ba4\u4e3a1 \u3002 \u8868\u8fbe\u5f0f\uff1a count(count by (gitVersion) (label_replace(kubernetes_build_info{job!~\"kube-dns|coredns\"},\"gitVersion\",\"$1\",\"gitVersion\",\"(v[0-9]*.[0-9]*.[0-9]*).*\"))) \u76f8\u5173\u6307\u6807\uff1a kubernetes_build_info \uff1a\u83b7\u53d6\u7ec4\u4ef6\u4fe1\u606f 3.2 KubeClientErrors \u5ba2\u6237\u7aef\u8bbf\u95ee\u67d0\u4e9b\u63a5\u53e3\u7684\u9519\u8bef\u7387\u3002 \u8868\u8fbe\u5f0f\uff1a (sum(rate(rest_client_requests_total{code=~\"5..\"}[5m])) by (instance, job) / sum(rate(rest_client_requests_total[5m])) by (instance, job)) > 0.01 \u76f8\u5173\u6307\u6807\uff1a rest_client_requests_total \uff1a\u72b6\u6001\u7801 4. APIServer \u76f8\u5173 4.1 KubeAPIErrorsHigh APIServer \u8bf7\u6c42\u9519\u8bef\u7387\u30025\u5206\u949f\u5185 APIServer \u8bf7\u6c42\u9519\u8bef\u7387\u3002 \u8868\u8fbe\u5f0f\uff1a sum(rate(apiserver_request_total{job=\"apiserver\",code=~\"5..\"}[5m])) by (resource,subresource,verb) / sum(rate(apiserver_request_total{job=\"apiserver\"}[5m])) by (resource,subresource,verb) > 0.0 \u76f8\u5173\u6307\u6807\uff1a apiserver_request_total\uff1aAPIServer \u8bf7\u6c42\u6570 4.2 KubeClientCertificateExpiration kubelet \u5ba2\u6237\u7aef\u8bc1\u4e66\u8fc7\u671f\u3002\u76d1\u6d4b\u8bc1\u4e66\u72b6\u600130\u5929\u544a\u8b66\u548c7\u5929\u544a\u8b66\u3002 \u8868\u8fbe\u5f0f\uff1a apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 2592000 apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 604800 \u76f8\u5173\u6307\u6807\uff1a apiserver_client_certificate_expiration_seconds_count \uff1a\u8bc1\u4e66\u6709\u6548\u5269\u4f59\u65f6\u95f4 4.3 AggregatedAPIErrors \u81ea\u5b9a\u4e49\u6ce8\u518c\u7684 APIServer \u670d\u52a1\u53ef\u7528\u6027\u76d1\u63a7\uff0c\u5f53\u68c0\u6d4b\u5230\u81ea\u5b9a\u4e49\u6ce8\u518c\u7684 APIServer \u4e94\u5206\u949f\u4e0d\u7528\u6b21\u6570\u8fbe\u52302\u6b21\u3002 \u8868\u8fbe\u5f0f\uff1a sum by(name, namespace)(increase(aggregator_unavailable_apiservice_count[5m])) > 2 \u76f8\u5173\u6307\u6807: aggregator_unavailable_apiservice_count \uff1a\u76d1\u6d4b\u81ea\u5b9a\u4e49\u6ce8\u518c\u7684 APIService \u4e0d\u53ef\u7528\u6b21\u6570\u3002 4.4 KubeAPIDown APIserver \u5931\u8054\uff0c\u76d1\u63a7 APIServer \u670d\u52a1\uff0c\u5931\u8054\u539f\u56e0\u53ef\u80fd\u662f\u670d\u52a1 down \u8fd8\u53ef\u80fd\u662f\u7f51\u7edc\u51fa\u73b0\u72b6\u51b5\u3002 \u8868\u8fbe\u5f0f\uff1a absent(up{job=\"apiserver\"} == 1) 5. kubelet \u76f8\u5173 5.1 KubeNodeNotReady \u8282\u70b9\u662f\u5426\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u3002\u68c0\u6d4b\u8282\u70b9\u662f\u5426\u4e3a\u5c31\u7eea\u72b6\u6001\uff0c\u6216\u8005\u53ef\u80fd\u662f kubelet \u670d\u52a1down \u4e86\u3002 \u8868\u8fbe\u5f0f\uff1a kube_node_status_condition{job=\"kube-state-metrics\",condition=\"Ready\",status=\"true\"} == 0 \u76f8\u5173\u6307\u6807\uff1a kube_node_status_condition \uff1a\u8282\u70b9\u72b6\u6001\u76d1\u6d4b 5.2 KubeNodeUnreachable \u8282\u70b9\u72b6\u6001\u4e3a Unreachable\u3002 \u8868\u8fbe\u5f0f\uff1a kube_node_spec_unschedulable{job=\"kube-state-metrics\"} == 1 5.3 KubeletTooManyPods \u8282\u70b9\u8fd0\u884c\u8fc7\u591a\u7684 Pod\uff0c\u76d1\u6d4b\u8282\u70b9\u4e0a\u8fd0\u884c\u7684 Pods \u6570\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a max(max(kubelet_running_pod_count{job=\"kubelet\", metrics_path=\"/metrics\"}) by(instance) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\", metrics_path=\"/metrics\"}) by(node) / max(kube_node_status_capacity_pods{job=\"kube-state-metrics\"} != 1) by(node) > 0.95 \u76f8\u5173\u6307\u6807\uff1a kubelet_running_pod_count \uff1a\u8282\u70b9\u8fd0\u884c\u7684 Pods \u6570\u91cf kubelet_node_name \uff1a\u8282\u70b9\u540d\u79f0 kube_node_status_capacity_pods \uff1a\u8282\u70b9\u53ef\u8fd0\u884c\u7684\u6700\u5927 Pod \u6570\u91cf 5.4 KubeNodeReadinessFlapping \u76d1\u6d4b\u96c6\u7fa4\u72b6\u6001\uff0c\u67e5\u770b\u96c6\u7fa4\u5185\u8282\u70b9\u72b6\u6001\u6539\u53d8\u7684\u9891\u7387\u3002 \u8868\u8fbe\u5f0f\uff1a sum(changes(kube_node_status_condition{status=\"true\",condition=\"Ready\"}[15m])) by (node) > 2 5.5 KubeletDown \u76d1\u63a7 kubelet \u670d\u52a1\uff0cdown \u6216\u8005\u7f51\u7edc\u51fa\u73b0\u95ee\u9898\u3002 \u8868\u8fbe\u5f0f\uff1a absent(up{job=\"kubelet\", metrics_path=\"/metrics\"} == 1) 6. \u96c6\u7fa4\u7ec4\u4ef6 6.1 KubeSchedulerDown KubeScheduler \u5931\u8054\uff0c\u76d1\u6d4b KubeScheduler \u662f\u5426\u6b63\u5e38\u3002 \u8868\u8fbe\u5f0f\uff1a absent(up{job=\"kube-scheduler\"} == 1) 6.2 KubeControllerManagerDown \u76d1\u6d4b KubeControllerManager \u670d\u52a1\uff0cDown \u6216\u8005\u7f51\u7edc\u4e0d\u901a\u3002 \u8868\u8fbe\u5f0f\uff1a absent(up{job=\"kube-controller-manager\"} == 1) 7. \u5e94\u7528\u76f8\u5173 7.1 KubePodCrashLooping Pod \u91cd\u542f\u65f6\u95f4\uff0c\u91cd\u542f\u65f6\u95f4\u8d85\u8fc73m\u544a\u8b66\u3002 \u8868\u8fbe\u5f0f\uff1a rate(kube_pod_container_status_restarts_total{job=\"kube-state-metrics\"}[5m]) * 60 * 3 > 0 \u76f8\u5173\u6307\u6807: kube_pod_container_status_restarts_total \uff1a\u91cd\u542f\u72b6\u60010\u4e3a\u6b63\u5e38 7.2 KubePodNotReady Pods \u6ca1\u6709\u5c31\u7eea\uff0c\u68c0\u6d4b Pod \u662f\u5426\u5c31\u7eea\u3002 \u8868\u8fbe\u5f0f\uff1a sum by (namespace, pod) (max by(namespace, pod) (kube_pod_status_phase{job=\"kube-state-metrics\", phase=~\"Pending|Unknown\"}) * on(namespace, pod) group_left(owner_kind) max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!=\"Job\"})) > 0 \u76f8\u5173\u6307\u6807\uff1a kube_pod_status_phase \uff1aPod \u72b6\u6001 7.3 KubeDeploymentGenerationMismatch Deployment \u90e8\u7f72\u5931\u8d25\uff0cDeployment \u751f\u6210\u7684\u8d44\u6e90\u4e0e\u5b9a\u4e49\u7684\u8d44\u6e90\u4e0d\u5339\u914d\u3002 \u8868\u8fbe\u5f0f\uff1a kube_deployment_status_observed_generation{job=\"kube-state-metrics\"} != kube_deployment_metadata_generation{job=\"kube-state-metrics\"} \u76f8\u5173\u6307\u6807\uff1a kube_deployment_status_observed_generation \uff1aDeployment \u751f\u6210\u8d44\u6e90\u6570 kube_deployment_metadata_generation \uff1aDeployment \u5b9a\u4e49\u8d44\u6e90\u6570 7.4 KubeDeploymentReplicasMismatch \u67e5\u770b Deplyment \u526f\u672c\u662f\u5426\u8fbe\u5230\u9884\u671f\u3002 \u8868\u8fbe\u5f0f\uff1a ( kube_deployment_spec_replicas{job=\"kube-state-metrics\"} != kube_deployment_status_replicas_available{job=\"kube-state-metrics\"} ) and ( changes(kube_deployment_status_replicas_updated{job=\"kube-state-metrics\"}[3m]) == 0 ) \u76f8\u5173\u6307\u6807\uff1a kube_deployment_spec_replicas \u8d44\u6e90\u5b9a\u4e49\u526f\u672c\u6570 kube_deployment_status_replicas_available \u6b63\u5728\u8fd0\u884c\u526f\u672c\u6570 kube_deployment_status_replicas_updated \u66f4\u65b0\u7684\u526f\u672c\u6570 7.5 KubeStatefulSetReplicasMismatch \u76d1\u6d4b StatefulSet \u526f\u672c\u662f\u5426\u8fbe\u5230\u9884\u671f\u3002 \u8868\u8fbe\u5f0f\uff1a ( kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\"} != kube_statefulset_status_replicas{job=\"kube-state-metrics\"} ) and ( changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"}[5m]) == 0 ) \u76f8\u5173\u6307\u6807\uff1a kube_statefulset_status_replicas_ready \uff1a\u5c31\u7eea\u526f\u672c\u6570 kube_statefulset_status_replicas \uff1a\u5f53\u524d\u526f\u672c\u6570 kube_statefulset_status_replicas_updated \uff1a\u66f4\u65b0\u7684\u526f\u672c\u6570 7.6 KubeStatefulSetUpdateNotRolledOut StatefulSet \u66f4\u65b0\u5931\u8d25\u4e14\u672a\u56de\u6eda\uff0c\u5bf9\u6bd4\u7248\u672c\u53f7\u548c\u526f\u672c\u6570\u3002 \u8868\u8fbe\u5f0f\uff1a max without (revision) ( kube_statefulset_status_current_revision{job=\"kube-state-metrics\"} unless kube_statefulset_status_update_revision{job=\"kube-state-metrics\"} ) * ( kube_statefulset_replicas{job=\"kube-state-metrics\"} != kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"} ) \u76f8\u5173\u6307\u6807\uff1a kube_statefulset_status_replicas \uff1a\u6bcf\u4e2a StatefulSet \u7684\u526f\u672c\u6570\u3002 kube_statefulset_status_replicas_current \uff1a\u6bcf\u4e2a StatefulSet \u7684\u5f53\u524d\u526f\u672c\u6570\u3002 kube_statefulset_status_replicas_ready \uff1a\u6bcf\u4e2aStatefulSet \u7684\u5c31\u7eea\u526f\u672c\u6570\u3002 kube_statefulset_status_replicas_updated \uff1a\u6bcf\u4e2aStatefulSet \u7684\u66f4\u65b0\u526f\u672c\u6570\u3002 kube_statefulset_status_observed_generation \uff1aStatefulSet \u63a7\u5236\u5668\u89c2\u5bdf\u5230\u7684\u751f\u6210\u3002 kube_statefulset_replicas \uff1aStatefulSet \u6240\u9700\u7684\u526f\u672c\u6570\u3002 kube_statefulset_metadata_generation \uff1a\u8868\u793a StatefulSet \u6240\u9700\u72b6\u6001\u7684\u7279\u5b9a\u751f\u6210\u7684\u5e8f\u5217\u53f7\u3002 kube_statefulset_created \uff1a\u521b\u5efa\u65f6\u95f4\u6233\u3002 kube_statefulset_labels \uff1aKubernetes \u6807\u7b7e\u8f6c\u6362\u4e3a Prometheus \u6807\u7b7e\u3002 kube_statefulset_status_current_revision \uff1a\u6307\u793a\u7528\u4e8e\u6309\u987a\u5e8f(0\uff0ccurrentReplicas)\u751f\u6210 Pod \u7684StatefulSet \u7684\u7248\u672c\u3002 kube_statefulset_status_update_revision \uff1a\u6307\u793a\u7528\u4e8e\u6309\u987a\u5e8f [replicas-updatedReplicas\uff0creplicas] \u751f\u6210 Pod \u7684 StatefulSet \u7684\u7248\u672c\u3002 7.7 KubeDaemonSetRolloutStuck \u76d1\u6d4b DaemonSet \u662f\u5426\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u3002 \u8868\u8fbe\u5f0f\uff1a kube_daemonset_status_number_ready{job=\"kube-state-metrics\"} / kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"} < 1.00 \u76f8\u5173\u6307\u6807\uff1a kube_daemonset_status_number_ready \uff1a\u5c31\u7eea\u7684 DaemonSet kube_daemonset_status_desired_number_scheduled \uff1a\u5e94\u8be5\u8c03\u5ea6\u7684 DaemonSet \u6570\u91cf 7.8 KubeDaemonSetMisScheduled DaemonSet \u8fd0\u884c\u5728\u4e0d\u8be5\u8fd0\u884c\u7684\u8282\u70b9\u4e0a\u9762\u3002 \u8868\u8fbe\u5f0f\uff1a kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\"} > 0 \u76f8\u5173\u6307\u6807\uff1a kube_daemonset_status_number_misscheduled \uff1a\u8fd0\u884c\u5728\u4e0d\u8be5\u8fd0\u884c\u7684\u8282\u70b9\u72b6\u6001 7.9 KubeContainerWaiting \u76d1\u6d4b\u54ea\u4e9b\u5bb9\u5668\u662f\u5728\u7b49\u5f85\u72b6\u6001\u7684\u3002 \u8868\u8fbe\u5f0f\uff1a sum by (namespace, pod, container) (kube_pod_container_status_waiting_reason{job=\"kube-state-metrics\"}) > 0 \u76f8\u5173\u6307\u6807\uff1a kube_pod_container_status_waiting_reason \uff1a\u5bb9\u5668\u58f0\u660e\u5468\u671f\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\uff0c\u65e0\u8bba\u662f\u521b\u5efa\u6210\u529f\u8fd8\u662f\u5931\u8d25\u90fd\u5e94\u8be5\u662f0\u3002 8. \u8282\u70b9\u76f8\u5173 8.1 NodeClockNotSynchronising \u4e3b\u673a\u4e0e\u65f6\u95f4\u670d\u52a1\u5668\u5931\u8054\u3002 \u8868\u8fbe\u5f0f\uff1a min_over_time(node_timex_sync_status[5m]) == 0 \u76f8\u5173\u6307\u6807\uff1a node_timex_sync_status \uff1a\u540c\u6b65\u72b6\u6001\u3002 8.2 NodeClockSkewDetected \u672c\u5730\u65f6\u95f4\u504f\u79fb\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a (node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0 ) or ( node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0) \u76f8\u5173\u6307\u6807\uff1a node_timex_offset_seconds \uff1a\u8bef\u5dee 8.3 NodeHighNumberConntrackEntriesUsed \u94fe\u63a5\u72b6\u6001\u8ddf\u8e2a\u3002 \u8868\u8fbe\u5f0f\uff1a (node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75 \u76f8\u5173\u6307\u6807\uff1a node_nf_conntrack_entries \uff1a\u94fe\u63a5\u72b6\u6001\u8ddf\u8e2a\u8868\u5206\u914d\u7684\u6570\u91cf node_nf_conntrack_entries_limit \uff1a\u8868\u603b\u91cf 8.4 NodeNetworkReceiveErrs \u7f51\u5361\u63a5\u6536\u9519\u8bef\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a increase(node_network_receive_errs_total[2m]) > 10 \u76f8\u5173\u6307\u6807\uff1a node_network_receive_errs_total \uff1a\u63a5\u6536\u9519\u8bef\u603b\u91cf 8.5 NodeNetworkTransmitErrs \u7f51\u5361\u4f20\u8f93\u9519\u8bef\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a increase(node_network_transmit_errs_total[2m]) > 10 \u76f8\u5173\u6307\u6807\uff1a node_network_transmit_errs_total \uff1a\u4f20\u8f93\u9519\u8bef\u603b\u91cf 8.6 NodeFilesystemAlmostOutOfFiles inode \u6570\u91cf\u76d1\u6d4b \u8868\u8fbe\u5f0f\uff1a ( node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 5 and node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0 ) \u76f8\u5173\u6307\u6807\uff1a node_filesystem_files_free \uff1a\u7a7a\u95f2\u7684 inode node_filesystem_files \uff1ainodes \u603b\u91cf 8.7 NodeFilesystemFilesFillingUp inode \u8017\u5c3d\u9884\u6d4b\uff0c\u4ee56\u5c0f\u65f6\u66f2\u7ebf\u53d8\u5316\u9884\u6d4b\u63a5\u4e0b\u676524\u5c0f\u65f6\u548c4\u5c0f\u65f6\u53ef\u80fd\u4f7f\u7528\u7684 inodes\u3002 \u8868\u8fbe\u5f0f\uff1a (node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 20 and predict_linear(node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"}[6h], 4*60*60) < 0 and node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0) \u76f8\u5173\u6307\u6807\uff1a node_filesystem_files_free \uff1a\u7a7a\u95f2\u7684 inode node_filesystem_files \uff1ainodes \u603b\u91cf 8.8 NodeFilesystemAlmostOutOfSpace \u5206\u533a\u5bb9\u91cf\u4f7f\u7528\u7387\u3002 \u8868\u8fbe\u5f0f\uff1a (node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 10 and node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0 ) \u76f8\u5173\u6307\u6807\uff1a node_filesystem_avail_bytes \uff1a\u7a7a\u95f2\u5bb9\u91cf node_filesystem_size_bytes \uff1a\u603b\u5bb9\u91cf 8.9 NodeFilesystemSpaceFillingUp \u5206\u533a\u5bb9\u91cf\u8017\u5c3d\u9884\u6d4b\uff0c\u4ee56\u5c0f\u65f6\u66f2\u7ebf\u53d8\u5316\u9884\u6d4b\u63a5\u4e0b\u676524\u5c0f\u65f6\u548c4\u5c0f\u65f6\u53ef\u80fd\u4f7f\u7528\u7684\u5bb9\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a (node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 15 and predict_linear(node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"}[6h], 4*60*60) < 0 and node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0) \u76f8\u5173\u6307\u6807\uff1a node_filesystem_avail_bytes \uff1a\u7a7a\u95f2\u5bb9\u91cf node_filesystem_size_bytes \uff1a\u603b\u5bb9\u91cf 9. Etcd \u76f8\u5173 9.1 Etcdlived etcd \u5b58\u6d3b\u68c0\u6d4b\u3002 \u8868\u8fbe\u5f0f\uff1a up{job=\"etcd\"} < 1 9.2 EtcdCluseterUnavailable etcd \u96c6\u7fa4\u5065\u5eb7\u68c0\u67e5\uff0cdown \u6570\u91cf\u5927\u4e8e\u96c6\u7fa4\u53ef\u5141\u8bb8\u6545\u969c\u6570\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a count(up{job=\"etcd\"} == 0) > (count(up{job=\"etcd\"}) / 2 - 1) 9.3 EtcdLeaderCheck \u68c0\u67e5 leader\u3002 \u8868\u8fbe\u5f0f\uff1a max(etcd_server_has_leader) != 1 9.4 EtcdBackendFsync etcd io \u76d1\u6d4b\uff0c\u540e\u7aef\u63d0\u4ea4 \u5ef6\u65f6\u3002 \u8868\u8fbe\u5f0f\uff1a histogram_quantile(0.99, sum(rate(etcd_disk_backend_commit_duration_seconds_bucket[5m])) by (instance, le)) > 100 9.5 EtcdWalFsync etcd io \u76d1\u6d4b\uff0c\u6587\u4ef6\u540c\u6b65\u5230\u78c1\u76d8\u5ef6\u65f6\u3002 \u8868\u8fbe\u5f0f\uff1a histogram_quantile(0.99, sum(rate(etcd_disk_wal_fsync_duration_seconds_bucket[5m])) by (instance, le)) > 100 9.6 EtcdDbSize \u68c0\u6d4b\u6570\u636e\u5e93\u5927\u5c0f\u3002 \u8868\u8fbe\u5f0f\uff1a etcd_debugging_mvcc_db_total_size_in_bytes/1024/1024 > 1024 9.7 EtcdGrpc Grpc \u8c03\u7528\u901f\u7387\u3002\u8868\u8fbe\u5f0f\uff1a sum(rate(grpc_server_handled_total{grpc_type=\"unary\"}[1m])) > 100 10. CoreDNS \u76f8\u5173 10.1 DnsRequest DNS \u67e5\u8be2\u901f\u7387\uff0c\u6bcf\u5206\u949f\u67e5\u8be2\u8d85\u8fc7100\u544a\u8b66\u3002 \u8868\u8fbe\u5f0f\uff1a sum(irate(coredns_dns_request_count_total{zone !=\"dropped\"}[1m])) > 100 \u76f8\u5173\u6307\u6807\uff1a coredns_dns_request_count_total \uff1a\u603b\u67e5\u8be2\u6570 10.2 DnsRequestFaild \u5f02\u5e38\u67e5\u8be2\uff0c\u5f02\u5e38\u72b6\u6001\u7801\uff0c\u4e0d\u662f NOERROR\u3002 \u8868\u8fbe\u5f0f\uff1a irate(coredns_dns_response_rcode_count_total{rcode!=\"NOERROR\"} [1m]) > 0 \u76f8\u5173\u6307\u6807\uff1a coredns_dns_response_rcode_count_total \uff1a\u67e5\u8be2\u8fd4\u56de\u72b6\u6001\u7801 DNS-Rcode\uff1a DNS-Rcode \u4f5c\u4e3a DNS \u5e94\u7b54\u62a5\u6587\u4e2d\u6709\u6548\u7684\u5b57\u6bb5\uff0c\u4e3b\u8981\u7528\u6765\u8bf4\u660e DNS \u5e94\u7b54\u72b6\u6001\uff0c\u662f\u6392\u67e5\u57df\u540d\u89e3\u6790\u5931\u8d25\u7684\u91cd\u8981\u6307\u6807\u3002\u901a\u5e38\u5e38\u89c1\u7684 Rcode \u503c\u5982\u4e0b\uff1a Rcode \u503c\u4e3a0\uff0c\u5bf9\u5e94\u7684 DNS \u5e94\u7b54\u72b6\u6001\u4e3a NOERROR\uff0c\u610f\u601d\u662f\u6210\u529f\u7684\u54cd\u5e94\uff0c\u5373\u8fd9\u4e2a\u57df\u540d\u89e3\u6790\u662f\u6210\u529f Rcode \u503c\u4e3a2\uff0c\u5bf9\u5e94\u7684 DNS \u5e94\u7b54\u72b6\u6001\u4e3a SERVFAIL\uff0c\u610f\u601d\u662f\u670d\u52a1\u5668\u5931\u8d25\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u57df\u540d\u7684\u6743\u5a01\u670d\u52a1\u5668\u62d2\u7edd\u54cd\u5e94\u6216\u8005\u54cd\u5e94 REFUSE\uff0c\u9012\u5f52\u670d\u52a1\u5668\u8fd4\u56de Rcode \u503c\u4e3a 2 \u7ed9 CLIENT Rcode \u503c\u4e3a3\uff0c\u5bf9\u5e94\u7684 DNS \u5e94\u7b54\u72b6\u6001\u4e3a NXDOMAIN\uff0c\u610f\u601d\u662f\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u5177\u4f53\u7684\u57df\u540d\u5728\u6743\u5a01\u670d\u52a1\u5668\u4e2d\u5e76\u4e0d\u5b58\u5728 Rcode \u503c\u4e3a5\uff0c\u5bf9\u5e94\u7684 DNS \u5e94\u7b54\u72b6\u6001\u4e3a REFUSE\uff0c\u610f\u601d\u662f\u62d2\u7edd\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u8bf7\u6c42\u6e90IP\u4e0d\u5728\u670d\u52a1\u7684\u8303\u56f4\u5185 10.3 DnsPanic DNS \u6050\u614c\u503c\uff0c\u53ef\u80fd\u6536\u5230\u653b\u51fb\u3002 \u8868\u8fbe\u5f0f\uff1a irate(coredns_panic_count_total[1m]) > 100","title":"**9 Prometheus Operator \u5e38\u7528\u6307\u6807**"},{"location":"chap8/42Prometheus_operator_metrics/#9-prometheus-operator","text":"Prometheus Operator \u5b89\u88c5\u5b8c\u6210\u540e\u4f1a\u6709\u5f88\u591a\u9ed8\u8ba4\u7684\u76d1\u63a7\u6307\u6807\uff0c\u4e00\u4e0d\u6ce8\u610f\u5c31\u5927\u91cf\u7684\u62a5\u8b66\u4ea7\u751f\uff0c\u6240\u4ee5\u6211\u4eec\u975e\u5e38\u6709\u5fc5\u8981\u4e86\u89e3\u4e0b\u8fd9\u4e9b\u5e38\u7528\u7684\u76d1\u63a7\u6307\u6807\uff0c\u6709\u90e8\u5206\u6307\u6807\u5f88\u6709\u53ef\u80fd\u5bf9\u4e8e\u6211\u4eec\u81ea\u5df1\u7684\u4e1a\u52a1\u53ef\u6709\u53ef\u65e0\uff0c\u6240\u4ee5\u53ef\u4ee5\u9002\u5f53\u7684\u8fdb\u884c\u4fee\u6539\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u6765\u5bf9\u5e38\u7528\u7684\u51e0\u4e2a\u6307\u6807\u8fdb\u884c\u7b80\u5355\u7684\u8bf4\u660e\u3002","title":"9 Prometheus Operator \u5e38\u7528\u6307\u6807"},{"location":"chap8/42Prometheus_operator_metrics/#1-kubernetes","text":"","title":"1. Kubernetes \u8d44\u6e90\u76f8\u5173"},{"location":"chap8/42Prometheus_operator_metrics/#11-cputhrottlinghigh","text":"\u5173\u4e8e CPU \u7684 limit \u5408\u7406\u6027\u6307\u6807\u3002\u67e5\u51fa\u6700\u8fd15\u5206\u949f\uff0c\u8d85\u8fc725%\u7684 CPU \u6267\u884c\u5468\u671f\u53d7\u5230\u9650\u5236\u7684\u5bb9\u5668\u3002\u8868\u8fbe\u5f0f\uff1a sum(increase(container_cpu_cfs_throttled_periods_total{container!=\"\", }[5m])) by (container, pod, namespace) / sum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace) > ( 25 / 100 ) \u76f8\u5173\u6307\u6807\uff1a container_cpu_cfs_periods_total \uff1a\u5bb9\u5668\u751f\u547d\u5468\u671f\u4e2d\u5ea6\u8fc7\u7684 cpu \u5468\u671f\u603b\u6570 container_cpu_cfs_throttled_periods_total \uff1a\u5bb9\u5668\u751f\u547d\u5468\u671f\u4e2d\u5ea6\u8fc7\u7684\u53d7\u9650\u7684 cpu \u5468\u671f\u603b\u6570","title":"1.1 CPUThrottlingHigh"},{"location":"chap8/42Prometheus_operator_metrics/#12-kubecpuovercommit","text":"\u96c6\u7fa4 CPU \u8fc7\u5ea6\u4f7f\u7528\u3002CPU \u5df2\u7ecf\u8fc7\u5ea6\u4f7f\u7528\u65e0\u6cd5\u5bb9\u5fcd\u8282\u70b9\u6545\u969c\uff0c\u8282\u70b9\u8d44\u6e90\u4f7f\u7528\u7684\u603b\u91cf\u8d85\u8fc7\u8282\u70b9\u7684 CPU \u603b\u91cf\uff0c\u6240\u4ee5\u5982\u679c\u6709\u8282\u70b9\u6545\u969c\u5c06\u5f71\u54cd\u96c6\u7fa4\u8d44\u6e90\u8fd0\u884c\u56e0\u4e3a\u6240\u9700\u8d44\u6e90\u5c06\u65e0\u6cd5\u88ab\u5206\u914d\u3002 \u8868\u8fbe\u5f0f\uff1a sum(namespace:kube_pod_container_resource_requests_cpu_cores:sum{}) / sum(kube_node_status_allocatable_cpu_cores) > (count(kube_node_status_allocatable_cpu_cores)-1) / count(kube_node_status_allocatable_cpu_cores) \u76f8\u5173\u6307\u6807\uff1a kube_pod_container_resource_requests_cpu_cores \uff1a\u8d44\u6e90 CPU \u4f7f\u7528\u7684 cores \u6570\u91cf kube_node_status_allocatable_cpu_cores \uff1a\u8282\u70b9 CPU cores \u6570\u91cf","title":"1.2 KubeCPUOvercommit"},{"location":"chap8/42Prometheus_operator_metrics/#13-kubememoryovercommit","text":"\u96c6\u7fa4\u5185\u5b58\u8fc7\u5ea6\u4f7f\u7528\u3002\u5185\u5b58\u5df2\u7ecf\u8fc7\u5ea6\u4f7f\u7528\u65e0\u6cd5\u5bb9\u5fcd\u8282\u70b9\u6545\u969c\uff0c\u8282\u70b9\u8d44\u6e90\u4f7f\u7528\u7684\u603b\u91cf\u8d85\u8fc7\u8282\u70b9\u7684\u5185\u5b58\u603b\u91cf\uff0c\u6240\u4ee5\u5982\u679c\u6709\u8282\u70b9\u6545\u969c\u5c06\u5f71\u54cd\u96c6\u7fa4\u8d44\u6e90\u8fd0\u884c\u56e0\u4e3a\u6240\u9700\u8d44\u6e90\u5c06\u65e0\u6cd5\u88ab\u5206\u914d\u3002\u8868\u8fbe\u5f0f\uff1a sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum{}) / sum(kube_node_status_allocatable_memory_bytes) > (count(kube_node_status_allocatable_memory_bytes)-1) / count(kube_node_status_allocatable_memory_bytes) \u76f8\u5173\u6307\u6807\uff1a kube_pod_container_resource_requests_memory_bytes \uff1a\u8d44\u6e90\u5185\u5b58\u4f7f\u7528\u7684\u91cf kube_node_status_allocatable_memory_bytes \uff1a\u8282\u70b9\u5185\u5b58\u91cf","title":"1.3 KubeMemoryOvercommit"},{"location":"chap8/42Prometheus_operator_metrics/#14-kubecpuquotaovercommit","text":"\u96c6\u7fa4CPU\u662f\u5426\u8d85\u5206\u3002\u67e5\u770b CPU \u8d44\u6e90\u5206\u914d\u7684\u989d\u5ea6\u662f\u5426\u8d85\u8fc7\u8fdb\u7fa4\u603b\u989d\u5ea6 \u8868\u8fbe\u5f0f\uff1a sum(kube_pod_container_resource_limits_cpu_cores{job=\"kube-state-metrics\"}) / sum(kube_node_status_allocatable_cpu_cores) > 1.1 \u76f8\u5173\u6307\u6807\uff1a kube_pod_container_resource_limits_cpu_cores \uff1a\u8d44\u6e90\u5206\u914d\u7684 CPU \u8d44\u6e90\u989d\u5ea6 kube_node_status_allocatable_cpu_cores \uff1a\u8282\u70b9 CPU \u603b\u91cf","title":"1.4 KubeCPUQuotaOvercommit"},{"location":"chap8/42Prometheus_operator_metrics/#15-kubememoryquotaovercommit","text":"\u96c6\u7fa4\u8d85\u5206\u5185\u5b58\uff0c\u67e5\u770b\u5185\u5b58\u8d44\u6e90\u5206\u914d\u7684\u989d\u5ea6\u662f\u5426\u8d85\u8fc7\u8fdb\u7fa4\u603b\u989d\u5ea6 \u8868\u8fbe\u5f0f\uff1a sum(kube_pod_container_resource_limits_memory_bytes{job=\"kube-state-metrics\"}) / sum(kube_node_status_allocatable_memory_bytes{job=\"kube-state-metrics\"}) > 1.1 \u76f8\u5173\u6307\u6807: kube_pod_container_resource_limits_memory_bytes \uff1a\u8d44\u6e90\u914d\u989d\u5185\u5b58\u91cf kube_node_status_allocatable_memory_bytes \uff1a\u8282\u70b9\u5185\u5b58\u91cf","title":"1.5 KubeMemoryQuotaOvercommit"},{"location":"chap8/42Prometheus_operator_metrics/#16-kubememquotaexceeded","text":"\u547d\u540d\u7a7a\u95f4\u7ea7\u5185\u5b58\u8d44\u6e90\u4f7f\u7528\u7684\u6bd4\u4f8b\uff0c\u5173\u4e4e\u8d44\u6e90\u914d\u989d\u3002\u5f53\u4f7f\u7528 request \u548c limit \u9650\u5236\u8d44\u6e90\u65f6\uff0c\u4f7f\u7528\u503c\u548c\u6700\u5927\u503c\u8fd8\u662f\u6709\u4e00\u70b9\u533a\u522b\uff0c\u5f53\u6709 request \u65f6\u8bf4\u660e\u6700\u4f4e\u5206\u914d\u4e86\u8fd9\u4e48\u591a\u8d44\u6e90\u3002\u9700\u8981\u6ce8\u610f\u5f53 request \u7b49\u4e8e limit \u65f6\u90a3\u4e48\u8bf4\u660e\u8d44\u6e90\u5df2\u7ecf\u662f100%\u5df2\u7ecf\u5206\u914d\u4f7f\u7528\u5f53\u76d1\u63a7\u544a\u8b66\u53d1\u51fa\u7684\u65f6\u5019\u9700\u8981\u533a\u5206\u3002\u8868\u8fbe\u5f0f\uff1a sum (kube_pod_container_resource_requests_memory_bytes{job=\"kube-state-metrics\"} ) by (namespace)/ (sum(kube_pod_container_resource_limits_memory_bytes{job=\"kube-state-metrics\"}) by (namespace)) > 0.8 \u76f8\u5173\u6307\u6807: kube_pod_container_resource_requests_memory_bytes \uff1a\u5185\u5b58\u8d44\u6e90\u4f7f\u7528\u91cf kube_pod_container_resource_limits_memory_bytes \uff1a\u5185\u5b58\u8d44\u6e90\u6700\u5927\u503c","title":"1.6 KubeMEMQuotaExceeded"},{"location":"chap8/42Prometheus_operator_metrics/#17-kubecpuquotaexceeded","text":"\u547d\u540d\u7a7a\u95f4\u7ea7 CPU \u8d44\u6e90\u4f7f\u7528\u7684\u6bd4\u4f8b\uff0c\u5173\u4e4e\u8d44\u6e90\u914d\u989d\u3002\u5f53\u4f7f\u7528 request \u548c limit \u9650\u5236\u8d44\u6e90\u65f6\uff0c\u4f7f\u7528\u503c\u548c\u6700\u5927\u503c\u8fd8\u662f\u6709\u4e00\u70b9\u533a\u522b\uff0c\u5f53\u6709 request \u65f6\u8bf4\u660e\u6700\u4f4e\u5206\u914d\u4e86\u8fd9\u4e48\u591a\u8d44\u6e90\u3002\u9700\u8981\u6ce8\u610f\u5f53 request \u7b49\u4e8e limit \u65f6\u90a3\u4e48\u8bf4\u660e\u8d44\u6e90\u5df2\u7ecf\u662f100%\u5df2\u7ecf\u5206\u914d\u4f7f\u7528\u5f53\u76d1\u63a7\u544a\u8b66\u53d1\u51fa\u7684\u65f6\u5019\u9700\u8981\u533a\u5206\u3002 \u8868\u8fbe\u5f0f\uff1a sum (kube_pod_container_resource_requests_cpu_cores{job=\"kube-state-metrics\"} ) by (namespace)/ (sum(kube_pod_container_resource_limits_cpu_cores{job=\"kube-state-metrics\"}) by (namespace)) > 0.8 \u76f8\u5173\u6307\u6807: kube_pod_container_resource_requests_cpu_cores \uff1aCPU \u4f7f\u7528\u91cf kube_pod_container_resource_limits_cpu_cores \uff1aCPU \u9650\u989d\u6700\u5927\u503c","title":"1.7 KubeCPUQuotaExceeded"},{"location":"chap8/42Prometheus_operator_metrics/#2-kubernetes","text":"","title":"2. Kubernetes \u5b58\u50a8\u76f8\u5173"},{"location":"chap8/42Prometheus_operator_metrics/#21-kubepersistentvolumefillingup","text":"PVC \u5bb9\u91cf\u76d1\u63a7 \u8868\u8fbe\u5f0f\uff1a kubelet_volume_stats_available_bytes{job=\"kubelet\", metrics_path=\"/metrics\"} / kubelet_volume_stats_capacity_bytes{job=\"kubelet\", metrics_path=\"/metrics\"} < 0.3 \u76f8\u5173\u6307\u6807\uff1a kubelet_volume_stats_available_bytes \uff1a\u5269\u4f59\u7a7a\u95f4 kubelet_volume_stats_capacity_bytes \uff1a\u7a7a\u95f4\u603b\u91cf","title":"2.1 KubePersistentVolumeFillingUp"},{"location":"chap8/42Prometheus_operator_metrics/#22-kubepersistentvolumefillingup","text":"\u78c1\u76d8\u7a7a\u95f4\u8017\u5c3d\u9884\u6d4b\uff1a\u901a\u8fc7PVC\u8d44\u6e90\u4f7f\u75286\u5c0f\u65f6\u53d8\u5316\u7387\u9884\u6d4b \u63a5\u4e0b\u67654\u5929\u7684\u78c1\u76d8\u4f7f\u7528\u7387 \u8868\u8fbe\u5f0f\uff1a (kubelet_volume_stats_available_bytes{job=\"kubelet\", metrics_path=\"/metrics\"} / kubelet_volume_stats_capacity_bytes{job=\"kubelet\", metrics_path=\"/metrics\"} ) < 0.4 and predict_linear(kubelet_volume_stats_available_bytes{job=\"kubelet\", metrics_path=\"/metrics\"}[6h], 4 * 24 * 3600) < 0 \u76f8\u5173\u6307\u6807: kubelet_volume_stats_available_bytes \uff1a\u5269\u4f59\u7a7a\u95f4 kubelet_volume_stats_capacity_bytes \uff1a\u7a7a\u95f4\u603b\u91cf","title":"2.2 KubePersistentVolumeFillingUp"},{"location":"chap8/42Prometheus_operator_metrics/#23-kubepersistentvolumeerrors","text":"PV \u4f7f\u7528\u72b6\u6001\u76d1\u63a7\u3002 \u8868\u8fbe\u5f0f\uff1a kube_persistentvolume_status_phase{phase=~\"Failed|Pending\",job=\"kube-state-metrics\"} \u76f8\u5173\u6307\u6807\uff1a kube_persistentvolume_status_phase \uff1aPV \u4f7f\u7528\u72b6\u6001","title":"2.3 KubePersistentVolumeErrors"},{"location":"chap8/42Prometheus_operator_metrics/#3-kubernetes-system","text":"","title":"3. kubernetes system \u76f8\u5173"},{"location":"chap8/42Prometheus_operator_metrics/#31-kubeversionmismatch","text":"\u7ec4\u4ef6\u7248\u672c\u4e0e\u5f53\u524d\u96c6\u7fa4\u7248\u672c\u662f\u5426\u6709\u5dee\u5f02\u3002\u5bf9\u6bd4\u7ec4\u4ef6\u7248\u672c\u662f\u5426\u6709\u5dee\u5f02\uff0c\u9ed8\u8ba4\u4e3a1 \u3002 \u8868\u8fbe\u5f0f\uff1a count(count by (gitVersion) (label_replace(kubernetes_build_info{job!~\"kube-dns|coredns\"},\"gitVersion\",\"$1\",\"gitVersion\",\"(v[0-9]*.[0-9]*.[0-9]*).*\"))) \u76f8\u5173\u6307\u6807\uff1a kubernetes_build_info \uff1a\u83b7\u53d6\u7ec4\u4ef6\u4fe1\u606f","title":"3.1 KubeVersionMismatch"},{"location":"chap8/42Prometheus_operator_metrics/#32-kubeclienterrors","text":"\u5ba2\u6237\u7aef\u8bbf\u95ee\u67d0\u4e9b\u63a5\u53e3\u7684\u9519\u8bef\u7387\u3002 \u8868\u8fbe\u5f0f\uff1a (sum(rate(rest_client_requests_total{code=~\"5..\"}[5m])) by (instance, job) / sum(rate(rest_client_requests_total[5m])) by (instance, job)) > 0.01 \u76f8\u5173\u6307\u6807\uff1a rest_client_requests_total \uff1a\u72b6\u6001\u7801","title":"3.2 KubeClientErrors"},{"location":"chap8/42Prometheus_operator_metrics/#4-apiserver","text":"","title":"4. APIServer \u76f8\u5173"},{"location":"chap8/42Prometheus_operator_metrics/#41-kubeapierrorshigh","text":"APIServer \u8bf7\u6c42\u9519\u8bef\u7387\u30025\u5206\u949f\u5185 APIServer \u8bf7\u6c42\u9519\u8bef\u7387\u3002 \u8868\u8fbe\u5f0f\uff1a sum(rate(apiserver_request_total{job=\"apiserver\",code=~\"5..\"}[5m])) by (resource,subresource,verb) / sum(rate(apiserver_request_total{job=\"apiserver\"}[5m])) by (resource,subresource,verb) > 0.0 \u76f8\u5173\u6307\u6807\uff1a apiserver_request_total\uff1aAPIServer \u8bf7\u6c42\u6570","title":"4.1 KubeAPIErrorsHigh"},{"location":"chap8/42Prometheus_operator_metrics/#42-kubeclientcertificateexpiration","text":"kubelet \u5ba2\u6237\u7aef\u8bc1\u4e66\u8fc7\u671f\u3002\u76d1\u6d4b\u8bc1\u4e66\u72b6\u600130\u5929\u544a\u8b66\u548c7\u5929\u544a\u8b66\u3002 \u8868\u8fbe\u5f0f\uff1a apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 2592000 apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 604800 \u76f8\u5173\u6307\u6807\uff1a apiserver_client_certificate_expiration_seconds_count \uff1a\u8bc1\u4e66\u6709\u6548\u5269\u4f59\u65f6\u95f4","title":"4.2 KubeClientCertificateExpiration"},{"location":"chap8/42Prometheus_operator_metrics/#43-aggregatedapierrors","text":"\u81ea\u5b9a\u4e49\u6ce8\u518c\u7684 APIServer \u670d\u52a1\u53ef\u7528\u6027\u76d1\u63a7\uff0c\u5f53\u68c0\u6d4b\u5230\u81ea\u5b9a\u4e49\u6ce8\u518c\u7684 APIServer \u4e94\u5206\u949f\u4e0d\u7528\u6b21\u6570\u8fbe\u52302\u6b21\u3002 \u8868\u8fbe\u5f0f\uff1a sum by(name, namespace)(increase(aggregator_unavailable_apiservice_count[5m])) > 2 \u76f8\u5173\u6307\u6807: aggregator_unavailable_apiservice_count \uff1a\u76d1\u6d4b\u81ea\u5b9a\u4e49\u6ce8\u518c\u7684 APIService \u4e0d\u53ef\u7528\u6b21\u6570\u3002","title":"4.3 AggregatedAPIErrors"},{"location":"chap8/42Prometheus_operator_metrics/#44-kubeapidown","text":"APIserver \u5931\u8054\uff0c\u76d1\u63a7 APIServer \u670d\u52a1\uff0c\u5931\u8054\u539f\u56e0\u53ef\u80fd\u662f\u670d\u52a1 down \u8fd8\u53ef\u80fd\u662f\u7f51\u7edc\u51fa\u73b0\u72b6\u51b5\u3002 \u8868\u8fbe\u5f0f\uff1a absent(up{job=\"apiserver\"} == 1)","title":"4.4 KubeAPIDown"},{"location":"chap8/42Prometheus_operator_metrics/#5-kubelet","text":"","title":"5. kubelet \u76f8\u5173"},{"location":"chap8/42Prometheus_operator_metrics/#51-kubenodenotready","text":"\u8282\u70b9\u662f\u5426\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u3002\u68c0\u6d4b\u8282\u70b9\u662f\u5426\u4e3a\u5c31\u7eea\u72b6\u6001\uff0c\u6216\u8005\u53ef\u80fd\u662f kubelet \u670d\u52a1down \u4e86\u3002 \u8868\u8fbe\u5f0f\uff1a kube_node_status_condition{job=\"kube-state-metrics\",condition=\"Ready\",status=\"true\"} == 0 \u76f8\u5173\u6307\u6807\uff1a kube_node_status_condition \uff1a\u8282\u70b9\u72b6\u6001\u76d1\u6d4b","title":"5.1 KubeNodeNotReady"},{"location":"chap8/42Prometheus_operator_metrics/#52-kubenodeunreachable","text":"\u8282\u70b9\u72b6\u6001\u4e3a Unreachable\u3002 \u8868\u8fbe\u5f0f\uff1a kube_node_spec_unschedulable{job=\"kube-state-metrics\"} == 1","title":"5.2 KubeNodeUnreachable"},{"location":"chap8/42Prometheus_operator_metrics/#53-kubelettoomanypods","text":"\u8282\u70b9\u8fd0\u884c\u8fc7\u591a\u7684 Pod\uff0c\u76d1\u6d4b\u8282\u70b9\u4e0a\u8fd0\u884c\u7684 Pods \u6570\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a max(max(kubelet_running_pod_count{job=\"kubelet\", metrics_path=\"/metrics\"}) by(instance) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\", metrics_path=\"/metrics\"}) by(node) / max(kube_node_status_capacity_pods{job=\"kube-state-metrics\"} != 1) by(node) > 0.95 \u76f8\u5173\u6307\u6807\uff1a kubelet_running_pod_count \uff1a\u8282\u70b9\u8fd0\u884c\u7684 Pods \u6570\u91cf kubelet_node_name \uff1a\u8282\u70b9\u540d\u79f0 kube_node_status_capacity_pods \uff1a\u8282\u70b9\u53ef\u8fd0\u884c\u7684\u6700\u5927 Pod \u6570\u91cf","title":"5.3 KubeletTooManyPods"},{"location":"chap8/42Prometheus_operator_metrics/#54-kubenodereadinessflapping","text":"\u76d1\u6d4b\u96c6\u7fa4\u72b6\u6001\uff0c\u67e5\u770b\u96c6\u7fa4\u5185\u8282\u70b9\u72b6\u6001\u6539\u53d8\u7684\u9891\u7387\u3002 \u8868\u8fbe\u5f0f\uff1a sum(changes(kube_node_status_condition{status=\"true\",condition=\"Ready\"}[15m])) by (node) > 2","title":"5.4 KubeNodeReadinessFlapping"},{"location":"chap8/42Prometheus_operator_metrics/#55-kubeletdown","text":"\u76d1\u63a7 kubelet \u670d\u52a1\uff0cdown \u6216\u8005\u7f51\u7edc\u51fa\u73b0\u95ee\u9898\u3002 \u8868\u8fbe\u5f0f\uff1a absent(up{job=\"kubelet\", metrics_path=\"/metrics\"} == 1)","title":"5.5 KubeletDown"},{"location":"chap8/42Prometheus_operator_metrics/#6","text":"","title":"6. \u96c6\u7fa4\u7ec4\u4ef6"},{"location":"chap8/42Prometheus_operator_metrics/#61-kubeschedulerdown","text":"KubeScheduler \u5931\u8054\uff0c\u76d1\u6d4b KubeScheduler \u662f\u5426\u6b63\u5e38\u3002 \u8868\u8fbe\u5f0f\uff1a absent(up{job=\"kube-scheduler\"} == 1)","title":"6.1 KubeSchedulerDown"},{"location":"chap8/42Prometheus_operator_metrics/#62-kubecontrollermanagerdown","text":"\u76d1\u6d4b KubeControllerManager \u670d\u52a1\uff0cDown \u6216\u8005\u7f51\u7edc\u4e0d\u901a\u3002 \u8868\u8fbe\u5f0f\uff1a absent(up{job=\"kube-controller-manager\"} == 1)","title":"6.2 KubeControllerManagerDown"},{"location":"chap8/42Prometheus_operator_metrics/#7","text":"","title":"7. \u5e94\u7528\u76f8\u5173"},{"location":"chap8/42Prometheus_operator_metrics/#71-kubepodcrashlooping","text":"Pod \u91cd\u542f\u65f6\u95f4\uff0c\u91cd\u542f\u65f6\u95f4\u8d85\u8fc73m\u544a\u8b66\u3002 \u8868\u8fbe\u5f0f\uff1a rate(kube_pod_container_status_restarts_total{job=\"kube-state-metrics\"}[5m]) * 60 * 3 > 0 \u76f8\u5173\u6307\u6807: kube_pod_container_status_restarts_total \uff1a\u91cd\u542f\u72b6\u60010\u4e3a\u6b63\u5e38","title":"7.1 KubePodCrashLooping"},{"location":"chap8/42Prometheus_operator_metrics/#72-kubepodnotready","text":"Pods \u6ca1\u6709\u5c31\u7eea\uff0c\u68c0\u6d4b Pod \u662f\u5426\u5c31\u7eea\u3002 \u8868\u8fbe\u5f0f\uff1a sum by (namespace, pod) (max by(namespace, pod) (kube_pod_status_phase{job=\"kube-state-metrics\", phase=~\"Pending|Unknown\"}) * on(namespace, pod) group_left(owner_kind) max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!=\"Job\"})) > 0 \u76f8\u5173\u6307\u6807\uff1a kube_pod_status_phase \uff1aPod \u72b6\u6001","title":"7.2 KubePodNotReady"},{"location":"chap8/42Prometheus_operator_metrics/#73-kubedeploymentgenerationmismatch","text":"Deployment \u90e8\u7f72\u5931\u8d25\uff0cDeployment \u751f\u6210\u7684\u8d44\u6e90\u4e0e\u5b9a\u4e49\u7684\u8d44\u6e90\u4e0d\u5339\u914d\u3002 \u8868\u8fbe\u5f0f\uff1a kube_deployment_status_observed_generation{job=\"kube-state-metrics\"} != kube_deployment_metadata_generation{job=\"kube-state-metrics\"} \u76f8\u5173\u6307\u6807\uff1a kube_deployment_status_observed_generation \uff1aDeployment \u751f\u6210\u8d44\u6e90\u6570 kube_deployment_metadata_generation \uff1aDeployment \u5b9a\u4e49\u8d44\u6e90\u6570","title":"7.3 KubeDeploymentGenerationMismatch"},{"location":"chap8/42Prometheus_operator_metrics/#74-kubedeploymentreplicasmismatch","text":"\u67e5\u770b Deplyment \u526f\u672c\u662f\u5426\u8fbe\u5230\u9884\u671f\u3002 \u8868\u8fbe\u5f0f\uff1a ( kube_deployment_spec_replicas{job=\"kube-state-metrics\"} != kube_deployment_status_replicas_available{job=\"kube-state-metrics\"} ) and ( changes(kube_deployment_status_replicas_updated{job=\"kube-state-metrics\"}[3m]) == 0 ) \u76f8\u5173\u6307\u6807\uff1a kube_deployment_spec_replicas \u8d44\u6e90\u5b9a\u4e49\u526f\u672c\u6570 kube_deployment_status_replicas_available \u6b63\u5728\u8fd0\u884c\u526f\u672c\u6570 kube_deployment_status_replicas_updated \u66f4\u65b0\u7684\u526f\u672c\u6570","title":"7.4 KubeDeploymentReplicasMismatch"},{"location":"chap8/42Prometheus_operator_metrics/#75-kubestatefulsetreplicasmismatch","text":"\u76d1\u6d4b StatefulSet \u526f\u672c\u662f\u5426\u8fbe\u5230\u9884\u671f\u3002 \u8868\u8fbe\u5f0f\uff1a ( kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\"} != kube_statefulset_status_replicas{job=\"kube-state-metrics\"} ) and ( changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"}[5m]) == 0 ) \u76f8\u5173\u6307\u6807\uff1a kube_statefulset_status_replicas_ready \uff1a\u5c31\u7eea\u526f\u672c\u6570 kube_statefulset_status_replicas \uff1a\u5f53\u524d\u526f\u672c\u6570 kube_statefulset_status_replicas_updated \uff1a\u66f4\u65b0\u7684\u526f\u672c\u6570","title":"7.5 KubeStatefulSetReplicasMismatch"},{"location":"chap8/42Prometheus_operator_metrics/#76-kubestatefulsetupdatenotrolledout","text":"StatefulSet \u66f4\u65b0\u5931\u8d25\u4e14\u672a\u56de\u6eda\uff0c\u5bf9\u6bd4\u7248\u672c\u53f7\u548c\u526f\u672c\u6570\u3002 \u8868\u8fbe\u5f0f\uff1a max without (revision) ( kube_statefulset_status_current_revision{job=\"kube-state-metrics\"} unless kube_statefulset_status_update_revision{job=\"kube-state-metrics\"} ) * ( kube_statefulset_replicas{job=\"kube-state-metrics\"} != kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"} ) \u76f8\u5173\u6307\u6807\uff1a kube_statefulset_status_replicas \uff1a\u6bcf\u4e2a StatefulSet \u7684\u526f\u672c\u6570\u3002 kube_statefulset_status_replicas_current \uff1a\u6bcf\u4e2a StatefulSet \u7684\u5f53\u524d\u526f\u672c\u6570\u3002 kube_statefulset_status_replicas_ready \uff1a\u6bcf\u4e2aStatefulSet \u7684\u5c31\u7eea\u526f\u672c\u6570\u3002 kube_statefulset_status_replicas_updated \uff1a\u6bcf\u4e2aStatefulSet \u7684\u66f4\u65b0\u526f\u672c\u6570\u3002 kube_statefulset_status_observed_generation \uff1aStatefulSet \u63a7\u5236\u5668\u89c2\u5bdf\u5230\u7684\u751f\u6210\u3002 kube_statefulset_replicas \uff1aStatefulSet \u6240\u9700\u7684\u526f\u672c\u6570\u3002 kube_statefulset_metadata_generation \uff1a\u8868\u793a StatefulSet \u6240\u9700\u72b6\u6001\u7684\u7279\u5b9a\u751f\u6210\u7684\u5e8f\u5217\u53f7\u3002 kube_statefulset_created \uff1a\u521b\u5efa\u65f6\u95f4\u6233\u3002 kube_statefulset_labels \uff1aKubernetes \u6807\u7b7e\u8f6c\u6362\u4e3a Prometheus \u6807\u7b7e\u3002 kube_statefulset_status_current_revision \uff1a\u6307\u793a\u7528\u4e8e\u6309\u987a\u5e8f(0\uff0ccurrentReplicas)\u751f\u6210 Pod \u7684StatefulSet \u7684\u7248\u672c\u3002 kube_statefulset_status_update_revision \uff1a\u6307\u793a\u7528\u4e8e\u6309\u987a\u5e8f [replicas-updatedReplicas\uff0creplicas] \u751f\u6210 Pod \u7684 StatefulSet \u7684\u7248\u672c\u3002","title":"7.6 KubeStatefulSetUpdateNotRolledOut"},{"location":"chap8/42Prometheus_operator_metrics/#77-kubedaemonsetrolloutstuck","text":"\u76d1\u6d4b DaemonSet \u662f\u5426\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u3002 \u8868\u8fbe\u5f0f\uff1a kube_daemonset_status_number_ready{job=\"kube-state-metrics\"} / kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"} < 1.00 \u76f8\u5173\u6307\u6807\uff1a kube_daemonset_status_number_ready \uff1a\u5c31\u7eea\u7684 DaemonSet kube_daemonset_status_desired_number_scheduled \uff1a\u5e94\u8be5\u8c03\u5ea6\u7684 DaemonSet \u6570\u91cf","title":"7.7 KubeDaemonSetRolloutStuck"},{"location":"chap8/42Prometheus_operator_metrics/#78-kubedaemonsetmisscheduled","text":"DaemonSet \u8fd0\u884c\u5728\u4e0d\u8be5\u8fd0\u884c\u7684\u8282\u70b9\u4e0a\u9762\u3002 \u8868\u8fbe\u5f0f\uff1a kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\"} > 0 \u76f8\u5173\u6307\u6807\uff1a kube_daemonset_status_number_misscheduled \uff1a\u8fd0\u884c\u5728\u4e0d\u8be5\u8fd0\u884c\u7684\u8282\u70b9\u72b6\u6001","title":"7.8 KubeDaemonSetMisScheduled"},{"location":"chap8/42Prometheus_operator_metrics/#79-kubecontainerwaiting","text":"\u76d1\u6d4b\u54ea\u4e9b\u5bb9\u5668\u662f\u5728\u7b49\u5f85\u72b6\u6001\u7684\u3002 \u8868\u8fbe\u5f0f\uff1a sum by (namespace, pod, container) (kube_pod_container_status_waiting_reason{job=\"kube-state-metrics\"}) > 0 \u76f8\u5173\u6307\u6807\uff1a kube_pod_container_status_waiting_reason \uff1a\u5bb9\u5668\u58f0\u660e\u5468\u671f\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\uff0c\u65e0\u8bba\u662f\u521b\u5efa\u6210\u529f\u8fd8\u662f\u5931\u8d25\u90fd\u5e94\u8be5\u662f0\u3002","title":"7.9 KubeContainerWaiting"},{"location":"chap8/42Prometheus_operator_metrics/#8","text":"","title":"8. \u8282\u70b9\u76f8\u5173"},{"location":"chap8/42Prometheus_operator_metrics/#81-nodeclocknotsynchronising","text":"\u4e3b\u673a\u4e0e\u65f6\u95f4\u670d\u52a1\u5668\u5931\u8054\u3002 \u8868\u8fbe\u5f0f\uff1a min_over_time(node_timex_sync_status[5m]) == 0 \u76f8\u5173\u6307\u6807\uff1a node_timex_sync_status \uff1a\u540c\u6b65\u72b6\u6001\u3002","title":"8.1 NodeClockNotSynchronising"},{"location":"chap8/42Prometheus_operator_metrics/#82-nodeclockskewdetected","text":"\u672c\u5730\u65f6\u95f4\u504f\u79fb\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a (node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0 ) or ( node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0) \u76f8\u5173\u6307\u6807\uff1a node_timex_offset_seconds \uff1a\u8bef\u5dee","title":"8.2 NodeClockSkewDetected"},{"location":"chap8/42Prometheus_operator_metrics/#83-nodehighnumberconntrackentriesused","text":"\u94fe\u63a5\u72b6\u6001\u8ddf\u8e2a\u3002 \u8868\u8fbe\u5f0f\uff1a (node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75 \u76f8\u5173\u6307\u6807\uff1a node_nf_conntrack_entries \uff1a\u94fe\u63a5\u72b6\u6001\u8ddf\u8e2a\u8868\u5206\u914d\u7684\u6570\u91cf node_nf_conntrack_entries_limit \uff1a\u8868\u603b\u91cf","title":"8.3 NodeHighNumberConntrackEntriesUsed"},{"location":"chap8/42Prometheus_operator_metrics/#84-nodenetworkreceiveerrs","text":"\u7f51\u5361\u63a5\u6536\u9519\u8bef\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a increase(node_network_receive_errs_total[2m]) > 10 \u76f8\u5173\u6307\u6807\uff1a node_network_receive_errs_total \uff1a\u63a5\u6536\u9519\u8bef\u603b\u91cf","title":"8.4 NodeNetworkReceiveErrs"},{"location":"chap8/42Prometheus_operator_metrics/#85-nodenetworktransmiterrs","text":"\u7f51\u5361\u4f20\u8f93\u9519\u8bef\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a increase(node_network_transmit_errs_total[2m]) > 10 \u76f8\u5173\u6307\u6807\uff1a node_network_transmit_errs_total \uff1a\u4f20\u8f93\u9519\u8bef\u603b\u91cf","title":"8.5 NodeNetworkTransmitErrs"},{"location":"chap8/42Prometheus_operator_metrics/#86-nodefilesystemalmostoutoffiles","text":"inode \u6570\u91cf\u76d1\u6d4b \u8868\u8fbe\u5f0f\uff1a ( node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 5 and node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0 ) \u76f8\u5173\u6307\u6807\uff1a node_filesystem_files_free \uff1a\u7a7a\u95f2\u7684 inode node_filesystem_files \uff1ainodes \u603b\u91cf","title":"8.6 NodeFilesystemAlmostOutOfFiles"},{"location":"chap8/42Prometheus_operator_metrics/#87-nodefilesystemfilesfillingup","text":"inode \u8017\u5c3d\u9884\u6d4b\uff0c\u4ee56\u5c0f\u65f6\u66f2\u7ebf\u53d8\u5316\u9884\u6d4b\u63a5\u4e0b\u676524\u5c0f\u65f6\u548c4\u5c0f\u65f6\u53ef\u80fd\u4f7f\u7528\u7684 inodes\u3002 \u8868\u8fbe\u5f0f\uff1a (node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 20 and predict_linear(node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"}[6h], 4*60*60) < 0 and node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0) \u76f8\u5173\u6307\u6807\uff1a node_filesystem_files_free \uff1a\u7a7a\u95f2\u7684 inode node_filesystem_files \uff1ainodes \u603b\u91cf","title":"8.7 NodeFilesystemFilesFillingUp"},{"location":"chap8/42Prometheus_operator_metrics/#88-nodefilesystemalmostoutofspace","text":"\u5206\u533a\u5bb9\u91cf\u4f7f\u7528\u7387\u3002 \u8868\u8fbe\u5f0f\uff1a (node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 10 and node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0 ) \u76f8\u5173\u6307\u6807\uff1a node_filesystem_avail_bytes \uff1a\u7a7a\u95f2\u5bb9\u91cf node_filesystem_size_bytes \uff1a\u603b\u5bb9\u91cf","title":"8.8 NodeFilesystemAlmostOutOfSpace"},{"location":"chap8/42Prometheus_operator_metrics/#89-nodefilesystemspacefillingup","text":"\u5206\u533a\u5bb9\u91cf\u8017\u5c3d\u9884\u6d4b\uff0c\u4ee56\u5c0f\u65f6\u66f2\u7ebf\u53d8\u5316\u9884\u6d4b\u63a5\u4e0b\u676524\u5c0f\u65f6\u548c4\u5c0f\u65f6\u53ef\u80fd\u4f7f\u7528\u7684\u5bb9\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a (node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 15 and predict_linear(node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"}[6h], 4*60*60) < 0 and node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0) \u76f8\u5173\u6307\u6807\uff1a node_filesystem_avail_bytes \uff1a\u7a7a\u95f2\u5bb9\u91cf node_filesystem_size_bytes \uff1a\u603b\u5bb9\u91cf","title":"8.9 NodeFilesystemSpaceFillingUp"},{"location":"chap8/42Prometheus_operator_metrics/#9-etcd","text":"","title":"9. Etcd \u76f8\u5173"},{"location":"chap8/42Prometheus_operator_metrics/#91-etcdlived","text":"etcd \u5b58\u6d3b\u68c0\u6d4b\u3002 \u8868\u8fbe\u5f0f\uff1a up{job=\"etcd\"} < 1","title":"9.1 Etcdlived"},{"location":"chap8/42Prometheus_operator_metrics/#92-etcdcluseterunavailable","text":"etcd \u96c6\u7fa4\u5065\u5eb7\u68c0\u67e5\uff0cdown \u6570\u91cf\u5927\u4e8e\u96c6\u7fa4\u53ef\u5141\u8bb8\u6545\u969c\u6570\u91cf\u3002 \u8868\u8fbe\u5f0f\uff1a count(up{job=\"etcd\"} == 0) > (count(up{job=\"etcd\"}) / 2 - 1)","title":"9.2 EtcdCluseterUnavailable"},{"location":"chap8/42Prometheus_operator_metrics/#93-etcdleadercheck","text":"\u68c0\u67e5 leader\u3002 \u8868\u8fbe\u5f0f\uff1a max(etcd_server_has_leader) != 1","title":"9.3 EtcdLeaderCheck"},{"location":"chap8/42Prometheus_operator_metrics/#94-etcdbackendfsync","text":"etcd io \u76d1\u6d4b\uff0c\u540e\u7aef\u63d0\u4ea4 \u5ef6\u65f6\u3002 \u8868\u8fbe\u5f0f\uff1a histogram_quantile(0.99, sum(rate(etcd_disk_backend_commit_duration_seconds_bucket[5m])) by (instance, le)) > 100","title":"9.4 EtcdBackendFsync"},{"location":"chap8/42Prometheus_operator_metrics/#95-etcdwalfsync","text":"etcd io \u76d1\u6d4b\uff0c\u6587\u4ef6\u540c\u6b65\u5230\u78c1\u76d8\u5ef6\u65f6\u3002 \u8868\u8fbe\u5f0f\uff1a histogram_quantile(0.99, sum(rate(etcd_disk_wal_fsync_duration_seconds_bucket[5m])) by (instance, le)) > 100","title":"9.5 EtcdWalFsync"},{"location":"chap8/42Prometheus_operator_metrics/#96-etcddbsize","text":"\u68c0\u6d4b\u6570\u636e\u5e93\u5927\u5c0f\u3002 \u8868\u8fbe\u5f0f\uff1a etcd_debugging_mvcc_db_total_size_in_bytes/1024/1024 > 1024","title":"9.6 EtcdDbSize"},{"location":"chap8/42Prometheus_operator_metrics/#97-etcdgrpc","text":"Grpc \u8c03\u7528\u901f\u7387\u3002\u8868\u8fbe\u5f0f\uff1a sum(rate(grpc_server_handled_total{grpc_type=\"unary\"}[1m])) > 100","title":"9.7 EtcdGrpc"},{"location":"chap8/42Prometheus_operator_metrics/#10-coredns","text":"","title":"10. CoreDNS \u76f8\u5173"},{"location":"chap8/42Prometheus_operator_metrics/#101-dnsrequest","text":"DNS \u67e5\u8be2\u901f\u7387\uff0c\u6bcf\u5206\u949f\u67e5\u8be2\u8d85\u8fc7100\u544a\u8b66\u3002 \u8868\u8fbe\u5f0f\uff1a sum(irate(coredns_dns_request_count_total{zone !=\"dropped\"}[1m])) > 100 \u76f8\u5173\u6307\u6807\uff1a coredns_dns_request_count_total \uff1a\u603b\u67e5\u8be2\u6570","title":"10.1 DnsRequest"},{"location":"chap8/42Prometheus_operator_metrics/#102-dnsrequestfaild","text":"\u5f02\u5e38\u67e5\u8be2\uff0c\u5f02\u5e38\u72b6\u6001\u7801\uff0c\u4e0d\u662f NOERROR\u3002 \u8868\u8fbe\u5f0f\uff1a irate(coredns_dns_response_rcode_count_total{rcode!=\"NOERROR\"} [1m]) > 0 \u76f8\u5173\u6307\u6807\uff1a coredns_dns_response_rcode_count_total \uff1a\u67e5\u8be2\u8fd4\u56de\u72b6\u6001\u7801 DNS-Rcode\uff1a DNS-Rcode \u4f5c\u4e3a DNS \u5e94\u7b54\u62a5\u6587\u4e2d\u6709\u6548\u7684\u5b57\u6bb5\uff0c\u4e3b\u8981\u7528\u6765\u8bf4\u660e DNS \u5e94\u7b54\u72b6\u6001\uff0c\u662f\u6392\u67e5\u57df\u540d\u89e3\u6790\u5931\u8d25\u7684\u91cd\u8981\u6307\u6807\u3002\u901a\u5e38\u5e38\u89c1\u7684 Rcode \u503c\u5982\u4e0b\uff1a Rcode \u503c\u4e3a0\uff0c\u5bf9\u5e94\u7684 DNS \u5e94\u7b54\u72b6\u6001\u4e3a NOERROR\uff0c\u610f\u601d\u662f\u6210\u529f\u7684\u54cd\u5e94\uff0c\u5373\u8fd9\u4e2a\u57df\u540d\u89e3\u6790\u662f\u6210\u529f Rcode \u503c\u4e3a2\uff0c\u5bf9\u5e94\u7684 DNS \u5e94\u7b54\u72b6\u6001\u4e3a SERVFAIL\uff0c\u610f\u601d\u662f\u670d\u52a1\u5668\u5931\u8d25\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u57df\u540d\u7684\u6743\u5a01\u670d\u52a1\u5668\u62d2\u7edd\u54cd\u5e94\u6216\u8005\u54cd\u5e94 REFUSE\uff0c\u9012\u5f52\u670d\u52a1\u5668\u8fd4\u56de Rcode \u503c\u4e3a 2 \u7ed9 CLIENT Rcode \u503c\u4e3a3\uff0c\u5bf9\u5e94\u7684 DNS \u5e94\u7b54\u72b6\u6001\u4e3a NXDOMAIN\uff0c\u610f\u601d\u662f\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u5177\u4f53\u7684\u57df\u540d\u5728\u6743\u5a01\u670d\u52a1\u5668\u4e2d\u5e76\u4e0d\u5b58\u5728 Rcode \u503c\u4e3a5\uff0c\u5bf9\u5e94\u7684 DNS \u5e94\u7b54\u72b6\u6001\u4e3a REFUSE\uff0c\u610f\u601d\u662f\u62d2\u7edd\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u8bf7\u6c42\u6e90IP\u4e0d\u5728\u670d\u52a1\u7684\u8303\u56f4\u5185","title":"10.2 DnsRequestFaild"},{"location":"chap8/42Prometheus_operator_metrics/#103-dnspanic","text":"DNS \u6050\u614c\u503c\uff0c\u53ef\u80fd\u6536\u5230\u653b\u51fb\u3002 \u8868\u8fbe\u5f0f\uff1a irate(coredns_panic_count_total[1m]) > 100","title":"10.3 DnsPanic"},{"location":"chap8/4Promql_basic4/","text":"4 PromQL\u7b80\u5355\u793a\u4f8b 1 \u7b80\u5355\u7684\u65f6\u95f4\u5e8f\u5217\u9009\u62e9 \u8fd4\u56de\u5ea6\u91cf\u6307\u6807 http_requests_total \u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u6837\u672c\u6570\u636e\uff1a http_requests_total \u8fd4\u56de\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \uff0c \u6807\u7b7e\u5206\u522b\u662f job=\"apiserver\" , handler=\"/api/comments\" \u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u6837\u672c\u6570\u636e \uff1a http_requests_total{} http_requests_total{job=\"apiserver\", handler=\"/api/comments\"} \u8fd4\u56de\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \uff0c \u6807\u7b7e\u5206\u522b\u662f job=\"apiserver\", handler=\"/api/comments\" \u4e14\u662f 5 \u5206\u949f\u5185\u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u6837\u672c\u6570\u636e\uff1a http_requests_total{job=\"apiserver\", handler=\"/api/comments\"}[5m] http_requests_total{label=\"value\"}[time] \u4e00\u4e2a\u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\u4e0d\u80fd\u76f4\u63a5\u5c55\u793a\u5728 Graph \u56fe\u8868\u4e2d\uff0c\u4f46\u662f\u53ef\u4ee5\u5c55\u793a\u5728 Console \u89c6\u56fe\u4e2d\u3002 \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f \uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u7279\u5b9a\u6a21\u5f0f\u5339\u914d\u6807\u7b7e\u4e3a job \u7684\u7279\u5b9a\u4efb\u52a1\u540d\uff0c\u83b7\u53d6\u8fd9\u4e9b\u4efb\u52a1\u7684\u65f6\u95f4\u5e8f\u5217\u3002\u5728\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d, \u6240\u6709\u4efb\u52a1\u540d\u79f0\u4ee5 server \u7ed3\u5c3e\u3002 http_requests_total{job=~\".*server\"} Prometheus\u4e2d\u7684\u6240\u6709\u6b63\u5219\u8868\u8fbe\u5f0f\u90fd\u4f7f\u7528 RE2 \u8bed\u6cd5 http_requests_total{status!~\"4..\"} 2 \u4f7f\u7528\u51fd\u6570\uff0c\u64cd\u4f5c\u7b26\u7b49 \u8fd4\u56de\u5ea6\u91cf\u6307\u6807 http_requests_total \u8fc7\u53bb 5 \u5206\u949f\u5185\u7684 http \u8bf7\u6c42\u6570\u7684\u5e73\u5747\u589e\u957f\u901f\u7387 \uff1a rate(http_requests_total[5m]) \u8fd4\u56de\u5ea6\u91cf\u6307\u6807 http_requests_total \u8fc7\u53bb 5 \u5206\u949f\u5185\u7684 http \u8bf7\u6c42\u6570\u7684\u5e73\u5747\u589e\u957f\u901f\u7387\u603b\u548c\uff0c\u7ef4\u5ea6\u662f job \uff1a sum(rate(http_requests_total[5m])) by (job) \u7ed3\u679c\uff1a {job=\"apiserver\"} 0.16666666666666666 {job=\"kubelet\"} 0.49999876544124355 \u5982\u679c\u4e24\u4e2a\u6307\u6807\u5177\u6709\u76f8\u540c\u7ef4\u5ea6\u7684\u6807\u7b7e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5143\u64cd\u4f5c\u7b26\u8ba1\u7b97\u6837\u672c\u6570\u636e\uff0c \u8fd4\u56de\u503c\uff1a key: value=\u6807\u7b7e\u5217\u8868\uff1a\u8ba1\u7b97\u6837\u672c\u503c \u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u7684\u7a7a\u95f2\u5185\u5b58\uff0c\u5355\u4f4d\u662f MiB \u3002 (instance_memory_limit_bytes - instance_memory_usage_bytes) / 1024 / 1024 \u5982\u679c\u60f3\u77e5\u9053\u6bcf\u4e2a\u5e94\u7528\u7684\u5269\u4f59\u5185\u5b58\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8868\u8fbe\u5f0f \uff1a sum( instance_memory_limit_bytes - instance_memory_usage_bytes ) by (app, proc) / 1024 / 1024 \u5982\u679c\u76f8\u540c\u7684\u96c6\u7fa4\u8c03\u5ea6\u7fa4\u663e\u793a\u5982\u4e0b\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u7684 CPU \u4f7f\u7528\u7387\uff1a instance_cpu_time_ns{app=\"lion\", proc=\"web\", rev=\"34d0f99\", env=\"prod\", job=\"cluster-manager\"} instance_cpu_time_ns{app=\"elephant\", proc=\"worker\", rev=\"34d0f99\", env=\"prod\", job=\"cluster-manager\"} instance_cpu_time_ns{app=\"turtle\", proc=\"api\", rev=\"4d3a513\", env=\"prod\", job=\"cluster-manager\"} instance_cpu_time_ns{app=\"fox\", proc=\"widget\", rev=\"4d3a513\", env=\"prod\", job=\"cluster-manager\"} ... \u6211\u4eec\u53ef\u4ee5\u6309\u7167\u5e94\u7528\u548c\u8fdb\u7a0b\u7c7b\u578b\u6765\u83b7\u53d6 CPU \u5229\u7528\u7387\u6700\u9ad8\u7684 3 \u4e2a\u6837\u672c\u6570\u636e \uff1a topk(3, sum(rate(instance_cpu_time_ns[5m])) by (app, proc)) \u5047\u8bbe\u4e00\u4e2a\u670d\u52a1\u5b9e\u4f8b\u53ea\u6709\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u8868\u8fbe\u5f0f\u7edf\u8ba1\u51fa\u6bcf\u4e2a\u5e94\u7528\u7684\u5b9e\u4f8b\u6570\u91cf \uff1a count(instance_cpu_time_ns) by (app)","title":"4 PromQL\u7b80\u5355\u793a\u4f8b"},{"location":"chap8/4Promql_basic4/#4-promql","text":"","title":"4 PromQL\u7b80\u5355\u793a\u4f8b"},{"location":"chap8/4Promql_basic4/#1","text":"\u8fd4\u56de\u5ea6\u91cf\u6307\u6807 http_requests_total \u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u6837\u672c\u6570\u636e\uff1a http_requests_total \u8fd4\u56de\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \uff0c \u6807\u7b7e\u5206\u522b\u662f job=\"apiserver\" , handler=\"/api/comments\" \u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u6837\u672c\u6570\u636e \uff1a http_requests_total{} http_requests_total{job=\"apiserver\", handler=\"/api/comments\"} \u8fd4\u56de\u5ea6\u91cf\u6307\u6807\u540d\u79f0\u4e3a http_requests_total \uff0c \u6807\u7b7e\u5206\u522b\u662f job=\"apiserver\", handler=\"/api/comments\" \u4e14\u662f 5 \u5206\u949f\u5185\u7684\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u6837\u672c\u6570\u636e\uff1a http_requests_total{job=\"apiserver\", handler=\"/api/comments\"}[5m] http_requests_total{label=\"value\"}[time] \u4e00\u4e2a\u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\u4e0d\u80fd\u76f4\u63a5\u5c55\u793a\u5728 Graph \u56fe\u8868\u4e2d\uff0c\u4f46\u662f\u53ef\u4ee5\u5c55\u793a\u5728 Console \u89c6\u56fe\u4e2d\u3002 \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f \uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u7279\u5b9a\u6a21\u5f0f\u5339\u914d\u6807\u7b7e\u4e3a job \u7684\u7279\u5b9a\u4efb\u52a1\u540d\uff0c\u83b7\u53d6\u8fd9\u4e9b\u4efb\u52a1\u7684\u65f6\u95f4\u5e8f\u5217\u3002\u5728\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d, \u6240\u6709\u4efb\u52a1\u540d\u79f0\u4ee5 server \u7ed3\u5c3e\u3002 http_requests_total{job=~\".*server\"} Prometheus\u4e2d\u7684\u6240\u6709\u6b63\u5219\u8868\u8fbe\u5f0f\u90fd\u4f7f\u7528 RE2 \u8bed\u6cd5 http_requests_total{status!~\"4..\"}","title":"1 \u7b80\u5355\u7684\u65f6\u95f4\u5e8f\u5217\u9009\u62e9"},{"location":"chap8/4Promql_basic4/#2","text":"\u8fd4\u56de\u5ea6\u91cf\u6307\u6807 http_requests_total \u8fc7\u53bb 5 \u5206\u949f\u5185\u7684 http \u8bf7\u6c42\u6570\u7684\u5e73\u5747\u589e\u957f\u901f\u7387 \uff1a rate(http_requests_total[5m]) \u8fd4\u56de\u5ea6\u91cf\u6307\u6807 http_requests_total \u8fc7\u53bb 5 \u5206\u949f\u5185\u7684 http \u8bf7\u6c42\u6570\u7684\u5e73\u5747\u589e\u957f\u901f\u7387\u603b\u548c\uff0c\u7ef4\u5ea6\u662f job \uff1a sum(rate(http_requests_total[5m])) by (job) \u7ed3\u679c\uff1a {job=\"apiserver\"} 0.16666666666666666 {job=\"kubelet\"} 0.49999876544124355 \u5982\u679c\u4e24\u4e2a\u6307\u6807\u5177\u6709\u76f8\u540c\u7ef4\u5ea6\u7684\u6807\u7b7e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5143\u64cd\u4f5c\u7b26\u8ba1\u7b97\u6837\u672c\u6570\u636e\uff0c \u8fd4\u56de\u503c\uff1a key: value=\u6807\u7b7e\u5217\u8868\uff1a\u8ba1\u7b97\u6837\u672c\u503c \u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u7684\u7a7a\u95f2\u5185\u5b58\uff0c\u5355\u4f4d\u662f MiB \u3002 (instance_memory_limit_bytes - instance_memory_usage_bytes) / 1024 / 1024 \u5982\u679c\u60f3\u77e5\u9053\u6bcf\u4e2a\u5e94\u7528\u7684\u5269\u4f59\u5185\u5b58\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8868\u8fbe\u5f0f \uff1a sum( instance_memory_limit_bytes - instance_memory_usage_bytes ) by (app, proc) / 1024 / 1024 \u5982\u679c\u76f8\u540c\u7684\u96c6\u7fa4\u8c03\u5ea6\u7fa4\u663e\u793a\u5982\u4e0b\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u7684 CPU \u4f7f\u7528\u7387\uff1a instance_cpu_time_ns{app=\"lion\", proc=\"web\", rev=\"34d0f99\", env=\"prod\", job=\"cluster-manager\"} instance_cpu_time_ns{app=\"elephant\", proc=\"worker\", rev=\"34d0f99\", env=\"prod\", job=\"cluster-manager\"} instance_cpu_time_ns{app=\"turtle\", proc=\"api\", rev=\"4d3a513\", env=\"prod\", job=\"cluster-manager\"} instance_cpu_time_ns{app=\"fox\", proc=\"widget\", rev=\"4d3a513\", env=\"prod\", job=\"cluster-manager\"} ... \u6211\u4eec\u53ef\u4ee5\u6309\u7167\u5e94\u7528\u548c\u8fdb\u7a0b\u7c7b\u578b\u6765\u83b7\u53d6 CPU \u5229\u7528\u7387\u6700\u9ad8\u7684 3 \u4e2a\u6837\u672c\u6570\u636e \uff1a topk(3, sum(rate(instance_cpu_time_ns[5m])) by (app, proc)) \u5047\u8bbe\u4e00\u4e2a\u670d\u52a1\u5b9e\u4f8b\u53ea\u6709\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u8868\u8fbe\u5f0f\u7edf\u8ba1\u51fa\u6bcf\u4e2a\u5e94\u7528\u7684\u5b9e\u4f8b\u6570\u91cf \uff1a count(instance_cpu_time_ns) by (app)","title":"2 \u4f7f\u7528\u51fd\u6570\uff0c\u64cd\u4f5c\u7b26\u7b49"},{"location":"chap8/56prometheus_promql_rate/","text":"7 PromQL\u67e5\u8be2\u4e4brate\u51fd\u6570\u7684\u4f7f\u7528 \u901a\u5e38\u6765\u8bf4\u76f4\u63a5\u7ed8\u5236\u4e00\u4e2a\u539f\u59cb\u7684 Counter \u7c7b\u578b\u7684\u6307\u6807\u6570\u636e\u7528\u5904\u4e0d\u5927\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u4e00\u76f4\u589e\u52a0\uff0c\u4e00\u822c\u6765\u8bf4\u662f\u4e0d\u4f1a\u53bb\u76f4\u63a5\u5173\u5fc3\u8fd9\u4e2a\u6570\u503c\u7684\uff0c \u56e0\u4e3a Counter \u4e00\u65e6\u91cd\u7f6e\uff0c\u603b\u8ba1\u6570\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\uff0c\u6bd4\u5982\u6211\u4eec\u76f4\u63a5\u6267\u884c\u4e0b\u9762\u7684\u67e5\u8be2\u8bed\u53e5 \uff1a demo_api_request_duration_seconds_count{job=\"demo\"} \u53ef\u4ee5\u5f97\u5230\u4e0b\u56fe\u6240\u793a\u7684\u56fe\u5f62\uff1a \u53ef\u4ee5\u770b\u5230\u6240\u6709\u7684\u90fd\u662f\u4e0d\u65ad\u589e\u957f\u7684\uff0c\u4e00\u822c\u6765\u8bf4\u6211\u4eec\u66f4\u60f3\u8981\u77e5\u9053\u7684\u662f Counter \u6307\u6807\u7684\u53d8\u5316\u7387\uff0cPromQL \u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u51fd\u6570\u6765\u8ba1\u7b97\u53d8\u5316\u7387\u3002 rate \u7528\u4e8e\u8ba1\u7b97\u53d8\u5316\u7387\u7684\u6700\u5e38\u89c1\u51fd\u6570\u662f rate() \uff0c rate() \u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u5728\u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u8ba1\u6570\u5668\u6bcf\u79d2\u589e\u52a0\u91cf\u7684\u5e73\u5747\u503c\u3002 \u56e0\u4e3a\u662f\u8ba1\u7b97\u4e00\u4e2a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u5e73\u5747\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u5e8f\u5217\u9009\u62e9\u5668\u4e4b\u540e\u6dfb\u52a0\u4e00\u4e2a\u8303\u56f4\u9009\u62e9\u5668\u3002 \u4f8b\u5982\u6211\u4eec\u8981\u8ba1\u7b97 demo_api_request_duration_seconds_count \u5728\u6700\u8fd1\u4e94\u5206\u949f\u5185\u7684\u6bcf\u79d2\u5e73\u5747\u53d8\u5316\u7387\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u67e5\u8be2\u8bed\u53e5 \uff1a rate(demo_api_request_duration_seconds_count[5m]) \u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u56fe\u5f62\uff1a \u73b0\u5728\u7ed8\u5236\u7684\u56fe\u5f62\u770b\u8d77\u6765\u663e\u7136\u66f4\u52a0\u6709\u610f\u4e49\u4e86\uff0c\u8fdb\u884c rate \u8ba1\u7b97\u7684\u65f6\u5019\u662f\u9009\u62e9\u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u4e0b\u7684\u7b2c\u4e00\u548c\u6700\u540e\u4e00\u4e2a\u6837\u672c\u8fdb\u884c\u8ba1\u7b97\uff0c\u4e0b\u56fe\u662f\u8868\u793a\u77ac\u65f6\u8ba1\u7b97\u7684\u8ba1\u7b97\u65b9\u5f0f\uff1a \u73b0\u5728\u7ed8\u5236\u7684\u56fe\u5f62\u770b\u8d77\u6765\u663e\u7136\u66f4\u52a0\u6709\u610f\u4e49\u4e86\uff0c\u8fdb\u884c rate \u8ba1\u7b97\u7684\u65f6\u5019\u662f\u9009\u62e9\u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u4e0b\u7684\u7b2c\u4e00\u548c\u6700\u540e\u4e00\u4e2a\u6837\u672c\u8fdb\u884c\u8ba1\u7b97\uff0c\u4e0b\u56fe\u662f\u8868\u793a\u77ac\u65f6\u8ba1\u7b97\u7684\u8ba1\u7b97\u65b9\u5f0f\uff1a \u5f80\u5f80\u6211\u4eec\u9700\u8981\u7684\u662f\u7ed8\u5236\u4e00\u4e2a\u56fe\u5f62\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8fdb\u884c\u533a\u95f4\u67e5\u8be2\uff0c\u6307\u5b9a\u4e00\u4e2a\u65f6\u95f4\u8303\u56f4\u5185\u8fdb\u884c\u591a\u6b21\u8ba1\u7b97\uff0c\u5c06\u7ed3\u679c\u4e32\u8054\u8d77\u6765\u5f62\u6210\u4e00\u4e2a\u56fe\u5f62\uff1a \u5bf9\u4e8e rate() \u548c\u76f8\u5173\u51fd\u6570\u6709\u51e0\u4e2a\u9700\u8981\u8bf4\u660e\u7684\uff1a \u5f53\u88ab\u6293\u53d6\u6307\u6807\u8fdb\u7684\u7a0b\u91cd\u542f\u65f6\uff0cCounter \u6307\u6807\u53ef\u80fd\u4f1a\u91cd\u7f6e\u4e3a 0\uff0c\u4f46 rate() \u51fd\u6570\u4f1a\u81ea\u52a8\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u4f1a\u5047\u8bbe Counter \u6307\u6807\u7684\u503c\u53ea\u8981\u662f\u51cf\u5c11\u4e86\u5c31\u8ba4\u4e3a\u662f\u88ab\u91cd\u7f6e\u4e86\uff0c\u7136\u540e\u5b83\u53ef\u4ee5\u8c03\u6574\u540e\u7eed\u7684\u6837\u672c\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u4e3a [5,10,4,6] \uff0c\u5219\u5c06\u5176\u89c6\u4e3a [5,10,14,16] \u3002 \u53d8\u5316\u7387\u662f\u4ece\u6307\u5b9a\u7684\u65f6\u95f4\u8303\u56f4\u4e0b\u5305\u542b\u7684\u6837\u672c\u8fdb\u884c\u8ba1\u7b97\u7684\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u65f6\u95f4\u7a97\u53e3\u7684\u8fb9\u754c\u5e76\u4e0d\u4e00\u5b9a\u5c31\u662f\u4e00\u4e2a\u6837\u672c\u6570\u636e\uff0c\u53ef\u80fd\u4f1a\u4e0d\u5b8c\u5168\u5bf9\u9f50\uff0c\u6240\u4ee5\uff0c\u5373\u4f7f\u5bf9\u4e8e\u6bcf\u6b21\u90fd\u662f\u589e\u52a0\u6574\u6570\u7684 Counter\uff0c\u4e5f\u53ef\u80fd\u8ba1\u7b97\u7ed3\u679c\u662f\u975e\u6574\u6570\u3002 \u53e6\u5916\u6211\u4eec\u9700\u8981\u6ce8\u610f\u5f53\u628a rate() \u4e0e\u4e00\u4e2a\u805a\u5408\u8fd0\u7b97\u7b26\uff08\u4f8b\u5982 sum() \uff09\u6216\u4e00\u4e2a\u968f\u65f6\u95f4\u805a\u5408\u7684\u51fd\u6570 \uff08\u4efb\u4f55\u4ee5 _over_time \u7ed3\u5c3e\u7684\u51fd\u6570\uff09\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u65f6\uff0c\u603b\u662f\u5148\u53d6\u7528 rate() \u51fd\u6570\uff0c\u7136\u540e\u518d\u8fdb\u884c\u805a\u5408\uff0c\u5426\u5219\uff0c\u5f53\u4f60\u7684\u76ee\u6807\u91cd\u65b0\u542f\u52a8\u65f6\uff0c rate() \u51fd\u6570\u65e0\u6cd5\u68c0\u6d4b\u5230 Counter \u7684\u91cd\u7f6e \u3002 \u6ce8\u610f\uff1a rate() \u51fd\u6570\u9700\u8981\u5728\u6307\u5b9a\u7a97\u53e3\u4e0b\u81f3\u5c11\u6709\u4e24\u4e2a\u6837\u672c\u624d\u80fd\u8ba1\u7b97\u8f93\u51fa\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\u9009\u62e9\u8303\u56f4\u7a97\u53e3\u5927\u5c0f\u81f3\u5c11\u662f\u6293\u53d6\u95f4\u9694\u76844\u500d\uff0c\u8fd9\u6837\u5373\u4f7f\u5728\u9047\u5230\u7a97\u53e3\u5bf9\u9f50\u6216\u6293\u53d6\u6545\u969c\u65f6\u4e5f\u6709\u53ef\u4ee5\u4f7f\u7528\u7684\u6837\u672c\u8fdb\u884c\u8ba1\u7b97\uff0c\u4f8b\u5982\uff0c\u5bf9\u4e8e 1 \u5206\u949f\u7684\u6293\u53d6\u95f4\u9694\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 4 \u5206\u949f\u7684 Rate \u8ba1\u7b97\uff0c\u4f46\u662f\u901a\u5e38\u5c06\u5176\u56db\u820d\u4e94\u5165\u4e3a 5 \u5206\u949f\u3002\u6240\u4ee5\u5982\u679c\u4f7f\u7528 query_range \u533a\u95f4\u67e5\u8be2\uff0c\u4f8b\u5982\u5728\u7ed8\u56fe\u4e2d\uff0c\u90a3\u4e48\u8303\u56f4\u5e94\u8be5\u81f3\u5c11\u662f\u6b65\u957f\u7684\u5927\u5c0f\uff0c\u5426\u5219\u4f1a\u4e22\u5931\u4e00\u4e9b\u6570\u636e\u3002 irate \u7531\u4e8e\u4f7f\u7528 rate \u6216\u8005 increase \u51fd\u6570\u53bb\u8ba1\u7b97\u6837\u672c\u7684\u5e73\u5747\u589e\u957f\u901f\u7387\uff0c\u5bb9\u6613\u9677\u5165 \u957f\u5c3e\u95ee\u9898 \u5f53\u4e2d\uff0c\u5176\u65e0\u6cd5\u53cd\u5e94\u5728\u65f6\u95f4\u7a97\u53e3\u5185\u6837\u672c\u6570\u636e\u7684\u7a81\u53d1\u53d8\u5316\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e3b\u673a\u800c\u8a00\u5728 2 \u5206\u949f\u7684\u65f6\u95f4\u7a97\u53e3\u5185\uff0c\u53ef\u80fd\u5728\u67d0\u4e00\u4e2a\u7531\u4e8e\u8bbf\u95ee\u91cf\u6216\u8005\u5176\u5b83\u95ee\u9898\u5bfc\u81f4 CPU \u5360\u7528 100%\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u901a\u8fc7\u8ba1\u7b97\u5728\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u5e73\u5747\u589e\u957f\u7387\u5374\u65e0\u6cd5\u53cd\u5e94\u51fa\u8be5\u95ee\u9898\u3002 \u4e3a\u4e86\u89e3\u51b3\u8be5\u95ee\u9898\uff0cPromQL \u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u4e2a\u7075\u654f\u5ea6\u66f4\u9ad8\u7684\u51fd\u6570 irate(v range-vector) \u3002irate \u540c\u6837\u7528\u4e8e\u8ba1\u7b97\u533a\u95f4\u5411\u91cf\u7684\u8ba1\u7b97\u7387\uff0c\u4f46\u662f\u5176\u53cd\u5e94\u51fa\u7684\u662f\u77ac\u65f6\u589e\u957f\u7387\u3002 irate \u51fd\u6570\u662f\u901a\u8fc7\u533a\u95f4\u5411\u91cf\u4e2d\u6700\u540e\u4e24\u4e2a\u6837\u672c\u6570\u636e\u6765\u8ba1\u7b97\u533a\u95f4\u5411\u91cf\u7684\u589e\u957f\u901f\u7387\u3002 \u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u907f\u514d\u5728\u65f6\u95f4\u7a97\u53e3\u8303\u56f4\u5185\u7684 \u957f\u5c3e\u95ee\u9898 \uff0c\u5e76\u4e14\u4f53\u73b0\u51fa\u66f4\u597d\u7684\u7075\u654f\u5ea6\uff0c\u901a\u8fc7 irate \u51fd\u6570\u7ed8\u5236\u7684\u56fe\u6807\u80fd\u591f\u66f4\u597d\u7684\u53cd\u5e94\u6837\u672c\u6570\u636e\u7684\u77ac\u65f6\u53d8\u5316\u72b6\u6001\u3002\u90a3\u65e2\u7136\u662f\u4f7f\u7528\u6700\u540e\u4e24\u4e2a\u70b9\u8ba1\u7b97\uff0c \u90a3\u4e3a\u4ec0\u4e48\u8fd8\u8981\u6307\u5b9a\u7c7b\u4f3c\u4e8e [1m] \u7684\u65f6\u95f4\u8303\u56f4\u5462\uff1f\u8fd9\u4e2a [1m] \u4e0d\u662f\u7528\u6765\u8ba1\u7b97\u7684\uff0cirate \u5728\u8ba1\u7b97\u7684\u65f6\u5019\u4f1a\u6700\u591a\u5411\u524d\u5728 [1m] \u8303\u56f4\u5185\u627e\u70b9\uff0c\u5982\u679c\u8d85\u8fc7 [1m] \u6ca1\u6709\u627e\u5230\u6570\u636e\u70b9\uff0c\u8fd9\u4e2a\u70b9\u7684\u8ba1\u7b97\u5c31\u653e\u5f03\u4e86 \u3002 \u7531\u4e8e rate() \u63d0\u4f9b\u4e86\u66f4\u5e73\u6ed1\u7684\u7ed3\u679c\uff0c\u56e0\u6b64\u5728\u957f\u671f\u8d8b\u52bf\u5206\u6790\u6216\u8005\u544a\u8b66\u4e2d\u66f4\u63a8\u8350\u4f7f\u7528 rate \u51fd\u6570\uff0c\u56e0\u4e3a\u5f53\u901f\u7387\u53ea\u51fa\u73b0\u4e00\u4e2a\u77ed\u6682\u7684\u5cf0\u503c\u65f6\uff0c\u4e0d\u5e94\u8be5\u89e6\u53d1\u8be5\u62a5\u8b66\u3002 \u4f7f\u7528 irate() \u51fd\u6570\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u4f1a\u51fa\u73b0\u4e00\u4e9b\u77ed\u6682\u4e0b\u964d\u7684\u56fe\u5f62\uff1a \u9664\u4e86\u8ba1\u7b97\u6bcf\u79d2\u901f\u7387\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528 increase() \u51fd\u6570\u67e5\u8be2\u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u603b\u589e\u91cf\uff0c\u5b83\u57fa\u672c\u4e0a\u76f8\u5f53\u4e8e\u901f\u7387\u4e58\u4ee5\u65f6\u95f4\u8303\u56f4\u9009\u62e9\u5668\u4e2d\u7684\u79d2\u6570\uff1a increase(demo_api_request_duration_seconds_count{job=\"demo\"}[1h]) \u6bd4\u5982\u4e0a\u9762\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u548c\u4f7f\u7528 rate() \u51fd\u6570\u8ba1\u7b97\u7684\u7ed3\u679c\u6574\u4f53\u56fe\u5f62\u8d8b\u52bf\u90fd\u662f\u4e00\u6837\u7684\uff0c\u53ea\u662f Y \u8f74\u7684\u6570\u636e\u4e0d\u4e00\u6837\u800c\u5df2\uff0c\u4e00\u4e2a\u8868\u793a\u6570\u91cf\uff0c\u4e00\u4e2a\u8868\u793a\u767e\u5206\u6bd4\u3002 rate() \u3001 irate() \u548c increase() \u51fd\u6570\u53ea\u80fd\u8f93\u51fa\u975e\u8d1f\u503c\u7684\u7ed3\u679c\uff0c\u5bf9\u4e8e\u8ddf\u8e2a\u4e00\u4e2a\u53ef\u4ee5\u4e0a\u5347\u6216\u4e0b\u964d\u7684\u503c\u7684\u6307\u6807\uff08\u5982\u6e29\u5ea6\u3001\u5185\u5b58\u6216\u78c1\u76d8\u7a7a\u95f4\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528 delta() \u548c deriv() \u51fd\u6570\u6765\u4ee3\u66ff\u3002 deriv() \u51fd\u6570\u53ef\u4ee5\u8ba1\u7b97\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\u4e2d\u5404\u4e2a\u65f6\u95f4\u5e8f\u5217\u4e8c\u9636\u5bfc\u6570\uff0c \u4f7f\u7528\u7b80\u5355\u7ebf\u6027\u56de\u5f52\uff0c deriv(v range-vector) \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff0c\u8fd4\u56de\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728 Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002 \u4f8b\u5982\uff0c\u8981\u8ba1\u7b97\u5728 15 \u5206\u949f\u7684\u7a97\u53e3\u4e0b\uff0c\u6bcf\u79d2\u949f\u78c1\u76d8\u4f7f\u7528\u91cf\u4e0a\u5347\u6216\u4e0b\u964d\u4e86\u591a\u5c11\uff1a \u8fd8\u6709\u53e6\u5916\u4e00\u4e2a predict_linear() \u51fd\u6570\u53ef\u4ee5\u9884\u6d4b\u4e00\u4e2a Gauge \u7c7b\u578b\u7684\u6307\u6807\u5728\u672a\u6765\u6307\u5b9a\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u503c\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fc7\u53bb 15 \u5206\u949f\u7684\u53d8\u5316\u60c5\u51b5\uff0c\u6765\u9884\u6d4b\u4e00\u4e2a\u5c0f\u65f6\u540e\u7684\u78c1\u76d8\u4f7f\u7528\u91cf\u662f\u591a\u5c11\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u6240\u793a\u7684\u8868\u8fbe\u5f0f\u6765\u67e5\u8be2\uff1a predict_linear(demo_disk_usage_bytes{job=\"demo\"}[15m], 3600) \u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u7528\u4e8e\u62a5\u8b66\uff0c\u544a\u8bc9\u6211\u4eec\u78c1\u76d8\u662f\u5426\u4f1a\u5728\u51e0\u4e2a\u5c0f\u65f6\u5019\u5185\u7528\u5b8c\u3002","title":"7 PromQL\u67e5\u8be2\u4e4brate\u51fd\u6570\u7684\u4f7f\u7528"},{"location":"chap8/56prometheus_promql_rate/#7-promqlrate","text":"\u901a\u5e38\u6765\u8bf4\u76f4\u63a5\u7ed8\u5236\u4e00\u4e2a\u539f\u59cb\u7684 Counter \u7c7b\u578b\u7684\u6307\u6807\u6570\u636e\u7528\u5904\u4e0d\u5927\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u4e00\u76f4\u589e\u52a0\uff0c\u4e00\u822c\u6765\u8bf4\u662f\u4e0d\u4f1a\u53bb\u76f4\u63a5\u5173\u5fc3\u8fd9\u4e2a\u6570\u503c\u7684\uff0c \u56e0\u4e3a Counter \u4e00\u65e6\u91cd\u7f6e\uff0c\u603b\u8ba1\u6570\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\uff0c\u6bd4\u5982\u6211\u4eec\u76f4\u63a5\u6267\u884c\u4e0b\u9762\u7684\u67e5\u8be2\u8bed\u53e5 \uff1a demo_api_request_duration_seconds_count{job=\"demo\"} \u53ef\u4ee5\u5f97\u5230\u4e0b\u56fe\u6240\u793a\u7684\u56fe\u5f62\uff1a \u53ef\u4ee5\u770b\u5230\u6240\u6709\u7684\u90fd\u662f\u4e0d\u65ad\u589e\u957f\u7684\uff0c\u4e00\u822c\u6765\u8bf4\u6211\u4eec\u66f4\u60f3\u8981\u77e5\u9053\u7684\u662f Counter \u6307\u6807\u7684\u53d8\u5316\u7387\uff0cPromQL \u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u51fd\u6570\u6765\u8ba1\u7b97\u53d8\u5316\u7387\u3002","title":"7 PromQL\u67e5\u8be2\u4e4brate\u51fd\u6570\u7684\u4f7f\u7528"},{"location":"chap8/56prometheus_promql_rate/#rate","text":"\u7528\u4e8e\u8ba1\u7b97\u53d8\u5316\u7387\u7684\u6700\u5e38\u89c1\u51fd\u6570\u662f rate() \uff0c rate() \u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u5728\u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u8ba1\u6570\u5668\u6bcf\u79d2\u589e\u52a0\u91cf\u7684\u5e73\u5747\u503c\u3002 \u56e0\u4e3a\u662f\u8ba1\u7b97\u4e00\u4e2a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u5e73\u5747\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u5e8f\u5217\u9009\u62e9\u5668\u4e4b\u540e\u6dfb\u52a0\u4e00\u4e2a\u8303\u56f4\u9009\u62e9\u5668\u3002 \u4f8b\u5982\u6211\u4eec\u8981\u8ba1\u7b97 demo_api_request_duration_seconds_count \u5728\u6700\u8fd1\u4e94\u5206\u949f\u5185\u7684\u6bcf\u79d2\u5e73\u5747\u53d8\u5316\u7387\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u67e5\u8be2\u8bed\u53e5 \uff1a rate(demo_api_request_duration_seconds_count[5m]) \u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u56fe\u5f62\uff1a \u73b0\u5728\u7ed8\u5236\u7684\u56fe\u5f62\u770b\u8d77\u6765\u663e\u7136\u66f4\u52a0\u6709\u610f\u4e49\u4e86\uff0c\u8fdb\u884c rate \u8ba1\u7b97\u7684\u65f6\u5019\u662f\u9009\u62e9\u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u4e0b\u7684\u7b2c\u4e00\u548c\u6700\u540e\u4e00\u4e2a\u6837\u672c\u8fdb\u884c\u8ba1\u7b97\uff0c\u4e0b\u56fe\u662f\u8868\u793a\u77ac\u65f6\u8ba1\u7b97\u7684\u8ba1\u7b97\u65b9\u5f0f\uff1a \u73b0\u5728\u7ed8\u5236\u7684\u56fe\u5f62\u770b\u8d77\u6765\u663e\u7136\u66f4\u52a0\u6709\u610f\u4e49\u4e86\uff0c\u8fdb\u884c rate \u8ba1\u7b97\u7684\u65f6\u5019\u662f\u9009\u62e9\u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u4e0b\u7684\u7b2c\u4e00\u548c\u6700\u540e\u4e00\u4e2a\u6837\u672c\u8fdb\u884c\u8ba1\u7b97\uff0c\u4e0b\u56fe\u662f\u8868\u793a\u77ac\u65f6\u8ba1\u7b97\u7684\u8ba1\u7b97\u65b9\u5f0f\uff1a \u5f80\u5f80\u6211\u4eec\u9700\u8981\u7684\u662f\u7ed8\u5236\u4e00\u4e2a\u56fe\u5f62\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8fdb\u884c\u533a\u95f4\u67e5\u8be2\uff0c\u6307\u5b9a\u4e00\u4e2a\u65f6\u95f4\u8303\u56f4\u5185\u8fdb\u884c\u591a\u6b21\u8ba1\u7b97\uff0c\u5c06\u7ed3\u679c\u4e32\u8054\u8d77\u6765\u5f62\u6210\u4e00\u4e2a\u56fe\u5f62\uff1a \u5bf9\u4e8e rate() \u548c\u76f8\u5173\u51fd\u6570\u6709\u51e0\u4e2a\u9700\u8981\u8bf4\u660e\u7684\uff1a \u5f53\u88ab\u6293\u53d6\u6307\u6807\u8fdb\u7684\u7a0b\u91cd\u542f\u65f6\uff0cCounter \u6307\u6807\u53ef\u80fd\u4f1a\u91cd\u7f6e\u4e3a 0\uff0c\u4f46 rate() \u51fd\u6570\u4f1a\u81ea\u52a8\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u4f1a\u5047\u8bbe Counter \u6307\u6807\u7684\u503c\u53ea\u8981\u662f\u51cf\u5c11\u4e86\u5c31\u8ba4\u4e3a\u662f\u88ab\u91cd\u7f6e\u4e86\uff0c\u7136\u540e\u5b83\u53ef\u4ee5\u8c03\u6574\u540e\u7eed\u7684\u6837\u672c\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u4e3a [5,10,4,6] \uff0c\u5219\u5c06\u5176\u89c6\u4e3a [5,10,14,16] \u3002 \u53d8\u5316\u7387\u662f\u4ece\u6307\u5b9a\u7684\u65f6\u95f4\u8303\u56f4\u4e0b\u5305\u542b\u7684\u6837\u672c\u8fdb\u884c\u8ba1\u7b97\u7684\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u65f6\u95f4\u7a97\u53e3\u7684\u8fb9\u754c\u5e76\u4e0d\u4e00\u5b9a\u5c31\u662f\u4e00\u4e2a\u6837\u672c\u6570\u636e\uff0c\u53ef\u80fd\u4f1a\u4e0d\u5b8c\u5168\u5bf9\u9f50\uff0c\u6240\u4ee5\uff0c\u5373\u4f7f\u5bf9\u4e8e\u6bcf\u6b21\u90fd\u662f\u589e\u52a0\u6574\u6570\u7684 Counter\uff0c\u4e5f\u53ef\u80fd\u8ba1\u7b97\u7ed3\u679c\u662f\u975e\u6574\u6570\u3002 \u53e6\u5916\u6211\u4eec\u9700\u8981\u6ce8\u610f\u5f53\u628a rate() \u4e0e\u4e00\u4e2a\u805a\u5408\u8fd0\u7b97\u7b26\uff08\u4f8b\u5982 sum() \uff09\u6216\u4e00\u4e2a\u968f\u65f6\u95f4\u805a\u5408\u7684\u51fd\u6570 \uff08\u4efb\u4f55\u4ee5 _over_time \u7ed3\u5c3e\u7684\u51fd\u6570\uff09\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u65f6\uff0c\u603b\u662f\u5148\u53d6\u7528 rate() \u51fd\u6570\uff0c\u7136\u540e\u518d\u8fdb\u884c\u805a\u5408\uff0c\u5426\u5219\uff0c\u5f53\u4f60\u7684\u76ee\u6807\u91cd\u65b0\u542f\u52a8\u65f6\uff0c rate() \u51fd\u6570\u65e0\u6cd5\u68c0\u6d4b\u5230 Counter \u7684\u91cd\u7f6e \u3002 \u6ce8\u610f\uff1a rate() \u51fd\u6570\u9700\u8981\u5728\u6307\u5b9a\u7a97\u53e3\u4e0b\u81f3\u5c11\u6709\u4e24\u4e2a\u6837\u672c\u624d\u80fd\u8ba1\u7b97\u8f93\u51fa\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\u9009\u62e9\u8303\u56f4\u7a97\u53e3\u5927\u5c0f\u81f3\u5c11\u662f\u6293\u53d6\u95f4\u9694\u76844\u500d\uff0c\u8fd9\u6837\u5373\u4f7f\u5728\u9047\u5230\u7a97\u53e3\u5bf9\u9f50\u6216\u6293\u53d6\u6545\u969c\u65f6\u4e5f\u6709\u53ef\u4ee5\u4f7f\u7528\u7684\u6837\u672c\u8fdb\u884c\u8ba1\u7b97\uff0c\u4f8b\u5982\uff0c\u5bf9\u4e8e 1 \u5206\u949f\u7684\u6293\u53d6\u95f4\u9694\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 4 \u5206\u949f\u7684 Rate \u8ba1\u7b97\uff0c\u4f46\u662f\u901a\u5e38\u5c06\u5176\u56db\u820d\u4e94\u5165\u4e3a 5 \u5206\u949f\u3002\u6240\u4ee5\u5982\u679c\u4f7f\u7528 query_range \u533a\u95f4\u67e5\u8be2\uff0c\u4f8b\u5982\u5728\u7ed8\u56fe\u4e2d\uff0c\u90a3\u4e48\u8303\u56f4\u5e94\u8be5\u81f3\u5c11\u662f\u6b65\u957f\u7684\u5927\u5c0f\uff0c\u5426\u5219\u4f1a\u4e22\u5931\u4e00\u4e9b\u6570\u636e\u3002","title":"rate"},{"location":"chap8/56prometheus_promql_rate/#irate","text":"\u7531\u4e8e\u4f7f\u7528 rate \u6216\u8005 increase \u51fd\u6570\u53bb\u8ba1\u7b97\u6837\u672c\u7684\u5e73\u5747\u589e\u957f\u901f\u7387\uff0c\u5bb9\u6613\u9677\u5165 \u957f\u5c3e\u95ee\u9898 \u5f53\u4e2d\uff0c\u5176\u65e0\u6cd5\u53cd\u5e94\u5728\u65f6\u95f4\u7a97\u53e3\u5185\u6837\u672c\u6570\u636e\u7684\u7a81\u53d1\u53d8\u5316\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e3b\u673a\u800c\u8a00\u5728 2 \u5206\u949f\u7684\u65f6\u95f4\u7a97\u53e3\u5185\uff0c\u53ef\u80fd\u5728\u67d0\u4e00\u4e2a\u7531\u4e8e\u8bbf\u95ee\u91cf\u6216\u8005\u5176\u5b83\u95ee\u9898\u5bfc\u81f4 CPU \u5360\u7528 100%\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u901a\u8fc7\u8ba1\u7b97\u5728\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u5e73\u5747\u589e\u957f\u7387\u5374\u65e0\u6cd5\u53cd\u5e94\u51fa\u8be5\u95ee\u9898\u3002 \u4e3a\u4e86\u89e3\u51b3\u8be5\u95ee\u9898\uff0cPromQL \u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u4e2a\u7075\u654f\u5ea6\u66f4\u9ad8\u7684\u51fd\u6570 irate(v range-vector) \u3002irate \u540c\u6837\u7528\u4e8e\u8ba1\u7b97\u533a\u95f4\u5411\u91cf\u7684\u8ba1\u7b97\u7387\uff0c\u4f46\u662f\u5176\u53cd\u5e94\u51fa\u7684\u662f\u77ac\u65f6\u589e\u957f\u7387\u3002 irate \u51fd\u6570\u662f\u901a\u8fc7\u533a\u95f4\u5411\u91cf\u4e2d\u6700\u540e\u4e24\u4e2a\u6837\u672c\u6570\u636e\u6765\u8ba1\u7b97\u533a\u95f4\u5411\u91cf\u7684\u589e\u957f\u901f\u7387\u3002 \u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u907f\u514d\u5728\u65f6\u95f4\u7a97\u53e3\u8303\u56f4\u5185\u7684 \u957f\u5c3e\u95ee\u9898 \uff0c\u5e76\u4e14\u4f53\u73b0\u51fa\u66f4\u597d\u7684\u7075\u654f\u5ea6\uff0c\u901a\u8fc7 irate \u51fd\u6570\u7ed8\u5236\u7684\u56fe\u6807\u80fd\u591f\u66f4\u597d\u7684\u53cd\u5e94\u6837\u672c\u6570\u636e\u7684\u77ac\u65f6\u53d8\u5316\u72b6\u6001\u3002\u90a3\u65e2\u7136\u662f\u4f7f\u7528\u6700\u540e\u4e24\u4e2a\u70b9\u8ba1\u7b97\uff0c \u90a3\u4e3a\u4ec0\u4e48\u8fd8\u8981\u6307\u5b9a\u7c7b\u4f3c\u4e8e [1m] \u7684\u65f6\u95f4\u8303\u56f4\u5462\uff1f\u8fd9\u4e2a [1m] \u4e0d\u662f\u7528\u6765\u8ba1\u7b97\u7684\uff0cirate \u5728\u8ba1\u7b97\u7684\u65f6\u5019\u4f1a\u6700\u591a\u5411\u524d\u5728 [1m] \u8303\u56f4\u5185\u627e\u70b9\uff0c\u5982\u679c\u8d85\u8fc7 [1m] \u6ca1\u6709\u627e\u5230\u6570\u636e\u70b9\uff0c\u8fd9\u4e2a\u70b9\u7684\u8ba1\u7b97\u5c31\u653e\u5f03\u4e86 \u3002 \u7531\u4e8e rate() \u63d0\u4f9b\u4e86\u66f4\u5e73\u6ed1\u7684\u7ed3\u679c\uff0c\u56e0\u6b64\u5728\u957f\u671f\u8d8b\u52bf\u5206\u6790\u6216\u8005\u544a\u8b66\u4e2d\u66f4\u63a8\u8350\u4f7f\u7528 rate \u51fd\u6570\uff0c\u56e0\u4e3a\u5f53\u901f\u7387\u53ea\u51fa\u73b0\u4e00\u4e2a\u77ed\u6682\u7684\u5cf0\u503c\u65f6\uff0c\u4e0d\u5e94\u8be5\u89e6\u53d1\u8be5\u62a5\u8b66\u3002 \u4f7f\u7528 irate() \u51fd\u6570\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u4f1a\u51fa\u73b0\u4e00\u4e9b\u77ed\u6682\u4e0b\u964d\u7684\u56fe\u5f62\uff1a \u9664\u4e86\u8ba1\u7b97\u6bcf\u79d2\u901f\u7387\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528 increase() \u51fd\u6570\u67e5\u8be2\u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u603b\u589e\u91cf\uff0c\u5b83\u57fa\u672c\u4e0a\u76f8\u5f53\u4e8e\u901f\u7387\u4e58\u4ee5\u65f6\u95f4\u8303\u56f4\u9009\u62e9\u5668\u4e2d\u7684\u79d2\u6570\uff1a increase(demo_api_request_duration_seconds_count{job=\"demo\"}[1h]) \u6bd4\u5982\u4e0a\u9762\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u548c\u4f7f\u7528 rate() \u51fd\u6570\u8ba1\u7b97\u7684\u7ed3\u679c\u6574\u4f53\u56fe\u5f62\u8d8b\u52bf\u90fd\u662f\u4e00\u6837\u7684\uff0c\u53ea\u662f Y \u8f74\u7684\u6570\u636e\u4e0d\u4e00\u6837\u800c\u5df2\uff0c\u4e00\u4e2a\u8868\u793a\u6570\u91cf\uff0c\u4e00\u4e2a\u8868\u793a\u767e\u5206\u6bd4\u3002 rate() \u3001 irate() \u548c increase() \u51fd\u6570\u53ea\u80fd\u8f93\u51fa\u975e\u8d1f\u503c\u7684\u7ed3\u679c\uff0c\u5bf9\u4e8e\u8ddf\u8e2a\u4e00\u4e2a\u53ef\u4ee5\u4e0a\u5347\u6216\u4e0b\u964d\u7684\u503c\u7684\u6307\u6807\uff08\u5982\u6e29\u5ea6\u3001\u5185\u5b58\u6216\u78c1\u76d8\u7a7a\u95f4\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528 delta() \u548c deriv() \u51fd\u6570\u6765\u4ee3\u66ff\u3002 deriv() \u51fd\u6570\u53ef\u4ee5\u8ba1\u7b97\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\u4e2d\u5404\u4e2a\u65f6\u95f4\u5e8f\u5217\u4e8c\u9636\u5bfc\u6570\uff0c \u4f7f\u7528\u7b80\u5355\u7ebf\u6027\u56de\u5f52\uff0c deriv(v range-vector) \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff0c\u8fd4\u56de\u4e00\u4e2a\u77ac\u65f6\u5411\u91cf\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u53ea\u7528\u5728 Gauge \u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u4e0a\u3002 \u4f8b\u5982\uff0c\u8981\u8ba1\u7b97\u5728 15 \u5206\u949f\u7684\u7a97\u53e3\u4e0b\uff0c\u6bcf\u79d2\u949f\u78c1\u76d8\u4f7f\u7528\u91cf\u4e0a\u5347\u6216\u4e0b\u964d\u4e86\u591a\u5c11\uff1a \u8fd8\u6709\u53e6\u5916\u4e00\u4e2a predict_linear() \u51fd\u6570\u53ef\u4ee5\u9884\u6d4b\u4e00\u4e2a Gauge \u7c7b\u578b\u7684\u6307\u6807\u5728\u672a\u6765\u6307\u5b9a\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u503c\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fc7\u53bb 15 \u5206\u949f\u7684\u53d8\u5316\u60c5\u51b5\uff0c\u6765\u9884\u6d4b\u4e00\u4e2a\u5c0f\u65f6\u540e\u7684\u78c1\u76d8\u4f7f\u7528\u91cf\u662f\u591a\u5c11\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u6240\u793a\u7684\u8868\u8fbe\u5f0f\u6765\u67e5\u8be2\uff1a predict_linear(demo_disk_usage_bytes{job=\"demo\"}[15m], 3600) \u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u7528\u4e8e\u62a5\u8b66\uff0c\u544a\u8bc9\u6211\u4eec\u78c1\u76d8\u662f\u5426\u4f1a\u5728\u51e0\u4e2a\u5c0f\u65f6\u5019\u5185\u7528\u5b8c\u3002","title":"irate"},{"location":"chap8/5Promql_basic5/","text":"5 \u5728 HTTP API\u4e2d\u4f7f\u7528 PromQL Prometheus \u5f53\u524d\u7a33\u5b9a\u7684 HTTP API \u53ef\u4ee5\u901a\u8fc7 /api/v1 \u8bbf\u95ee\u3002 1 API \u54cd\u5e94\u683c\u5f0f Prometheus API \u4f7f\u7528\u4e86 JSON \u683c\u5f0f\u7684\u54cd\u5e94\u5185\u5bb9\u3002 \u5f53 API \u8c03\u7528\u6210\u529f\u540e\u5c06\u4f1a\u8fd4\u56de 2xx \u7684 HTTP \u72b6\u6001\u7801\u3002 \u53cd\u4e4b\uff0c\u5f53 API \u8c03\u7528\u5931\u8d25\u65f6\u53ef\u80fd\u8fd4\u56de\u4ee5\u4e0b\u51e0\u79cd\u4e0d\u540c\u7684 HTTP \u72b6\u6001\u7801\uff1a 404 Bad Request \uff1a\u5f53\u53c2\u6570\u9519\u8bef\u6216\u8005\u7f3a\u5931\u65f6\u3002 422 Unprocessable Entity : \u5f53\u8868\u8fbe\u5f0f\u65e0\u6cd5\u6267\u884c\u65f6\u3002 503 Service Unavailable : \u5f53\u8bf7\u6c42\u8d85\u65f6\u6216\u8005\u88ab\u4e2d\u65ad\u65f6\u3002 \u6240\u6709\u7684 API \u8bf7\u6c42\u8fd4\u56de\u7684\u683c\u5f0f\u5747\u4f7f\u7528\u4ee5\u4e0b\u7684 JSON \u683c\u5f0f\uff1a { \"status\": \"success\" | \"error\", \"data\": <data>, // Only set if status is \"error\". The data field may still hold // additional data. \"errorType\": \"<string>\", \"error\": \"<string>\" } \u67e5\u8be2\u53c2\u6570\u540d\u79f0\u53ef\u4ee5\u7528\u4e2d\u62ec\u53f7 [] \u91cd\u590d\u6b21\u6570\u3002 <series_selector> \u5360\u4f4d\u7b26\u63d0\u4f9b\u50cf http_requests_total \u6216\u8005 http_requests_total{method=~\"(GET|POST)\"} \u7684 Prometheus \u65f6\u95f4\u5e8f\u5217\u9009\u62e9\u5668\uff0c\u5e76\u9700\u8981\u5728 URL \u4e2d\u7f16\u7801\u4f20\u8f93\u3002 <duration> \u5360\u4f4d\u7b26\u6307\u7684\u662f [0-9]+[smhdwy] \u5f62\u5f0f\u7684 Prometheus \u6301\u7eed\u65f6\u95f4\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff1a 5m \u8868\u793a 5 \u5206\u949f\u7684\u6301\u7eed\u65f6\u95f4\u3002 <bool> \u63d0\u4f9b\u5e03\u5c14\u503c\uff08\u5b57\u7b26\u4e32 true \u548c false \uff09\u3002 2 \u8868\u8fbe\u5f0f\u67e5\u8be2 \u901a\u8fc7 HTTP API \u6211\u4eec\u53ef\u4ee5\u5206\u522b\u901a\u8fc7 /api/v1/query \u548c /api/v1/query_range \u67e5\u8be2 PromQL \u8868\u8fbe\u5f0f\u5f53\u524d\u6216\u8005\u4e00\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u8ba1\u7b97\u7ed3\u679c\u3002 2-1 \u77ac\u65f6\u6570\u636e\u67e5\u8be2 \u901a\u8fc7\u4f7f\u7528 QUERY API \u6211\u4eec\u53ef\u4ee5\u67e5\u8be2 PromQL \u5728\u7279\u5b9a\u65f6\u95f4\u70b9\u4e0b\u7684\u8ba1\u7b97\u7ed3\u679c\u3002 GET /api/v1/query URL \u8bf7\u6c42\u53c2\u6570 query=<string> : PromQL \u8868\u8fbe\u5f0f\u3002 time=<rfc3339 | unix_timestamp> : \u7528\u4e8e\u6307\u5b9a\u7528\u4e8e\u8ba1\u7b97 PromQL \u7684\u65f6\u95f4\u6233\u3002\u53ef\u9009\u53c2\u6570\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\u3002 timeout=<duration> : \u8d85\u65f6\u8bbe\u7f6e\u3002\u53ef\u9009\u53c2\u6570\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5168\u5c40\u8bbe\u7f6e\u7684\u53c2\u6570 -query.timeout \u3002 \u5982\u679c time \u53c2\u6570\u7f3a\u7701\uff0c\u5219\u4f7f\u7528\u5f53\u524d\u670d\u52a1\u5668\u65f6\u95f4\u3002 \u5f53 API \u8c03\u7528\u6210\u529f\u540e\uff0c Prometheus \u4f1a\u8fd4\u56de JSON \u683c\u5f0f\u7684\u54cd\u5e94\u5185\u5bb9\uff0c\u683c\u5f0f\u5982\u4e0a\u5c0f\u8282\u6240\u793a\u3002\u5e76\u4e14\u5728 data \u90e8\u5206\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u3002 data \u90e8\u5206\u683c\u5f0f\u5982\u4e0b\uff1a { \"resultType\": \"matrix\" | \"vector\" | \"scalar\" | \"string\", \"result\": <value> } <value> \u6307\u7684\u662f\u67e5\u8be2\u7ed3\u679c\u6570\u636e\uff0c\u5177\u4f53\u7684\u683c\u5f0f\u53d6\u51b3\u4e8e resultType\uff0c\u4e0d\u540c\u7684\u7ed3\u679c\u7c7b\u578b\uff0c\u4f1a\u6709\u4e0d\u540c\u7684\u7ed3\u679c\u6570\u636e\u683c\u5f0f\u3002 \u4f8b\u5982\u4f7f\u7528\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u67e5\u8be2\u8868\u8fbe\u5f0f up \u5728\u65f6\u95f4\u70b9 2015-07-01T20:10:51.781Z \u7684\u8ba1\u7b97\u7ed3\u679c\uff1a $ curl 'http://localhost:9090/api/v1/query?query=up&time=2015-07-01T20:10:51.781Z' { \"status\" : \"success\", \"data\" : { \"resultType\" : \"vector\", \"result\" : [ { \"metric\" : { \"__name__\" : \"up\", \"job\" : \"prometheus\", \"instance\" : \"localhost:9090\" }, \"value\": [ 1435781451.781, \"1\" ] }, { \"metric\" : { \"__name__\" : \"up\", \"job\" : \"node\", \"instance\" : \"localhost:9100\" }, \"value\" : [ 1435781451.781, \"0\" ] } ] } } 3 \u533a\u95f4\u6570\u636e\u67e5\u8be2 \u4f7f\u7528 QUERY_RANGE API \u6211\u4eec\u5219\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2 PromQL \u8868\u8fbe\u5f0f\u5728\u4e00\u6bb5\u65f6\u95f4\u8fd4\u56de\u5185\u7684\u8ba1\u7b97\u7ed3\u679c\u3002 GET /api/v1/query_range URL \u8bf7\u6c42\u53c2\u6570\uff1a query=<string> : PromQL \u8868\u8fbe\u5f0f\u3002 start=<rfc3339 | unix_timestamp> : \u8d77\u59cb\u65f6\u95f4\u6233\u3002 end=<rfc3339 | unix_timestamp> : \u7ed3\u675f\u65f6\u95f4\u6233\u3002 step=<duration | float> : \u67e5\u8be2\u65f6\u95f4\u6b65\u957f\uff0c\u65f6\u95f4\u533a\u95f4\u5185\u6bcf step \u79d2\u6267\u884c\u4e00\u6b21\u3002 timeout=<duration> : \u8d85\u65f6\u8bbe\u7f6e\u3002\u53ef\u9009\u53c2\u6570\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5168\u5c40\u8bbe\u7f6e\u7684\u53c2\u6570 -query.timeout \u3002 \u5f53\u4f7f\u7528 QUERY_RANGE API \u67e5\u8be2 PromQL \u8868\u8fbe\u5f0f\u65f6\uff0c\u8fd4\u56de\u7ed3\u679c\u4e00\u5b9a\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff1a { \"resultType\": \"matrix\", \"result\": <value> } \u5728 QUERY_RANGE API \u4e2d PromQL \u53ea\u80fd\u4f7f\u7528\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u3002 \u4f8b\u5982\u4f7f\u7528\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u67e5\u8be2\u8868\u8fbe\u5f0f up \u5728 30 \u79d2\u8303\u56f4\u5185\u4ee5 15 \u79d2\u4e3a\u95f4\u9694\u8ba1\u7b97 PromQL \u8868\u8fbe\u5f0f\u7684\u7ed3\u679c \u3002 $ curl 'http://localhost:9090/api/v1/query_range?query=up&start=2015-07-01T20:10:30.781Z&end=2015-07-01T20:11:00.781Z&step=15s' { \"status\" : \"success\", \"data\" : { \"resultType\" : \"matrix\", \"result\" : [ { \"metric\" : { \"__name__\" : \"up\", \"job\" : \"prometheus\", \"instance\" : \"localhost:9090\" }, \"values\" : [ [ 1435781430.781, \"1\" ], [ 1435781445.781, \"1\" ], [ 1435781460.781, \"1\" ] ] }, { \"metric\" : { \"__name__\" : \"up\", \"job\" : \"node\", \"instance\" : \"localhost:9091\" }, \"values\" : [ [ 1435781430.781, \"0\" ], [ 1435781445.781, \"0\" ], [ 1435781460.781, \"1\" ] ] } ] } } 3 \u67e5\u8be2\u5143\u6570\u636e 3-1 \u901a\u8fc7\u6807\u7b7e\u9009\u62e9\u5668\u67e5\u627e\u65f6\u95f4\u5e8f\u5217 \u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u4e0e\u7279\u5b9a\u6807\u7b7e\u96c6\u5339\u914d\u7684\u65f6\u95f4\u5e8f\u5217\u5217\u8868\uff1a GET /api/v1/series URL \u8bf7\u6c42\u53c2\u6570\uff1a match[]=<series_selector> : \u8868\u793a\u6807\u7b7e\u9009\u62e9\u5668\u662f series_selector\u3002\u5fc5\u987b\u81f3\u5c11\u63d0\u4f9b\u4e00\u4e2a match[] \u53c2\u6570\u3002 start=<rfc3339 | unix_timestamp> : \u8d77\u59cb\u65f6\u95f4\u6233\u3002 end=<rfc3339 | unix_timestamp> : \u7ed3\u675f\u65f6\u95f4\u6233\u3002 \u8fd4\u56de\u7ed3\u679c\u7684 data \u90e8\u5206\uff0c\u662f\u7531 key-value \u952e\u503c\u5bf9\u7684\u5bf9\u8c61\u5217\u8868\u7ec4\u6210\u7684\u3002 \u4f8b\u5982\u4f7f\u7528\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u67e5\u8be2\u8868\u8fbe\u5f0f up \u6216 process_start_time_seconds{job=\"prometheus\"} \u7684\u8ba1\u7b97\u7ed3\u679c\uff1a $ curl -g 'http://localhost:9090/api/v1/series?match[]=up&match[]=process_start_time_seconds{job=\"prometheus\"}' { \"status\" : \"success\", \"data\" : [ { \"__name__\" : \"up\", \"job\" : \"prometheus\", \"instance\" : \"localhost:9090\" }, { \"__name__\" : \"up\", \"job\" : \"node\", \"instance\" : \"localhost:9091\" }, { \"__name__\" : \"process_start_time_seconds\", \"job\" : \"prometheus\", \"instance\" : \"localhost:9090\" } ] } 3-2 \u67e5\u8be2\u6807\u7b7e\u503c \u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u8fd4\u56de\u4e86\u5e26\u6709\u6307\u5b9a\u6807\u7b7e\u7684\u7684\u65f6\u95f4\u5e8f\u5217\u5217\u8868\uff1a GET /api/v1/label/<label_name>/values \u8fd4\u56de\u7ed3\u679c\u7684 data \u90e8\u5206\u662f\u4e00\u4e2a\u6807\u7b7e\u503c\u5217\u8868\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u7ed3\u679c\u7684 data \u90e8\u5206\u662f\u6807\u7b7e\u540d\u79f0\u4e3a job \u7684\u6240\u6709\u6807\u7b7e\u503c\uff1a $ curl http://localhost:9090/api/v1/label/job/values { \"status\" : \"success\", \"data\" : [ \"node\", \"prometheus\" ] } 3-3 \u54cd\u5e94\u6570\u636e\u683c\u5f0f \u8868\u8fbe\u5f0f\u67e5\u8be2\u7ed3\u679c\u53ef\u80fd\u4f1a\u5728 data \u90e8\u5206\u7684 result \u5b57\u6bb5\u4e2d\u8fd4\u56de\u4ee5\u4e0b\u7684\u54cd\u5e94\u503c\u3002\u5176\u4e2d <sample_value> \u5360\u4f4d\u7b26\u662f\u6570\u503c\u6837\u672c\u503c\u3002\u7531\u4e8e json \u4e0d\u652f\u6301\u7279\u6b8a\u6d6e\u70b9\u503c\uff0c\u4f8b\u5982\uff1a NaN , Inf , \u548c -Inf \uff0c\u6240\u4ee5\u6837\u672c\u503c\u5c06\u4f1a\u4f5c\u4e3a\u5b57\u7b26\u4e32\uff08\u800c\u4e0d\u662f\u539f\u59cb\u6570\u503c\uff09\u6765\u8fdb\u884c\u4f20\u8f93\u3002 \u533a\u95f4\u5411\u91cf \u5f53\u8fd4\u56de\u6570\u636e\u7c7b\u578b resultType \u4e3a matrix \u65f6\uff0c result \u54cd\u5e94\u683c\u5f0f\u5982\u4e0b\uff1a [ { \"metric\": { \"<label_name>\": \"<label_value>\", ... }, \"values\": [ [ <unix_time>, \"<sample_value>\" ], ... ] }, ... ] \u5176\u4e2d metrics \u8868\u793a\u5f53\u524d\u65f6\u95f4\u5e8f\u5217\u7684\u7279\u5f81\u7ef4\u5ea6\uff0c values \u5305\u542b\u5f53\u524d\u4e8b\u4ef6\u5e8f\u5217\u7684\u4e00\u7ec4\u6837\u672c\u3002 3-4 \u77ac\u65f6\u5411\u91cf \u5f53\u8fd4\u56de\u6570\u636e\u7c7b\u578b resultType \u4e3a vector \u65f6\uff0c result \u54cd\u5e94\u683c\u5f0f\u5982\u4e0b\uff1a [ { \"metric\": { \"<label_name>\": \"<label_value>\", ... }, \"value\": [ <unix_time>, \"<sample_value>\" ] }, ... ] \u5176\u4e2d metrics \u8868\u793a\u5f53\u524d\u65f6\u95f4\u5e8f\u5217\u7684\u7279\u5f81\u7ef4\u5ea6\uff0c values \u5305\u542b\u5f53\u524d\u4e8b\u4ef6\u5e8f\u5217\u7684\u4e00\u7ec4\u6837\u672c\u3002 3-5 \u6807\u91cf \u5f53\u8fd4\u56de\u6570\u636e\u7c7b\u578b resultType \u4e3a scalar \u65f6\uff0c result \u54cd\u5e94\u683c\u5f0f\u5982\u4e0b\uff1a [ <unix_time>, \"<scalar_value>\" ] \u7531\u4e8e\u6807\u91cf\u4e0d\u5b58\u5728\u65f6\u95f4\u5e8f\u5217\u4e00\u8bf4\uff0c\u56e0\u6b64 result \u8868\u793a\u4e3a\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\u4e00\u4e2a\u6807\u91cf\u7684\u503c\u3002 3-6 \u5b57\u7b26\u4e32 \u5f53\u8fd4\u56de\u6570\u636e\u7c7b\u578b resultType \u4e3a string \u65f6\uff0c result \u54cd\u5e94\u683c\u5f0f\u5982\u4e0b\uff1a [ <unix_time>, \"<string_value>\" ] \u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u54cd\u5e94\u5185\u5bb9\u683c\u5f0f\u548c\u6807\u91cf\u76f8\u540c\u3002","title":"5 \u5728 HTTP API\u4e2d\u4f7f\u7528 PromQL"},{"location":"chap8/5Promql_basic5/#5-http-api-promql","text":"Prometheus \u5f53\u524d\u7a33\u5b9a\u7684 HTTP API \u53ef\u4ee5\u901a\u8fc7 /api/v1 \u8bbf\u95ee\u3002","title":"5 \u5728 HTTP API\u4e2d\u4f7f\u7528 PromQL"},{"location":"chap8/5Promql_basic5/#1-api","text":"Prometheus API \u4f7f\u7528\u4e86 JSON \u683c\u5f0f\u7684\u54cd\u5e94\u5185\u5bb9\u3002 \u5f53 API \u8c03\u7528\u6210\u529f\u540e\u5c06\u4f1a\u8fd4\u56de 2xx \u7684 HTTP \u72b6\u6001\u7801\u3002 \u53cd\u4e4b\uff0c\u5f53 API \u8c03\u7528\u5931\u8d25\u65f6\u53ef\u80fd\u8fd4\u56de\u4ee5\u4e0b\u51e0\u79cd\u4e0d\u540c\u7684 HTTP \u72b6\u6001\u7801\uff1a 404 Bad Request \uff1a\u5f53\u53c2\u6570\u9519\u8bef\u6216\u8005\u7f3a\u5931\u65f6\u3002 422 Unprocessable Entity : \u5f53\u8868\u8fbe\u5f0f\u65e0\u6cd5\u6267\u884c\u65f6\u3002 503 Service Unavailable : \u5f53\u8bf7\u6c42\u8d85\u65f6\u6216\u8005\u88ab\u4e2d\u65ad\u65f6\u3002 \u6240\u6709\u7684 API \u8bf7\u6c42\u8fd4\u56de\u7684\u683c\u5f0f\u5747\u4f7f\u7528\u4ee5\u4e0b\u7684 JSON \u683c\u5f0f\uff1a { \"status\": \"success\" | \"error\", \"data\": <data>, // Only set if status is \"error\". The data field may still hold // additional data. \"errorType\": \"<string>\", \"error\": \"<string>\" } \u67e5\u8be2\u53c2\u6570\u540d\u79f0\u53ef\u4ee5\u7528\u4e2d\u62ec\u53f7 [] \u91cd\u590d\u6b21\u6570\u3002 <series_selector> \u5360\u4f4d\u7b26\u63d0\u4f9b\u50cf http_requests_total \u6216\u8005 http_requests_total{method=~\"(GET|POST)\"} \u7684 Prometheus \u65f6\u95f4\u5e8f\u5217\u9009\u62e9\u5668\uff0c\u5e76\u9700\u8981\u5728 URL \u4e2d\u7f16\u7801\u4f20\u8f93\u3002 <duration> \u5360\u4f4d\u7b26\u6307\u7684\u662f [0-9]+[smhdwy] \u5f62\u5f0f\u7684 Prometheus \u6301\u7eed\u65f6\u95f4\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff1a 5m \u8868\u793a 5 \u5206\u949f\u7684\u6301\u7eed\u65f6\u95f4\u3002 <bool> \u63d0\u4f9b\u5e03\u5c14\u503c\uff08\u5b57\u7b26\u4e32 true \u548c false \uff09\u3002","title":"1 API \u54cd\u5e94\u683c\u5f0f"},{"location":"chap8/5Promql_basic5/#2","text":"\u901a\u8fc7 HTTP API \u6211\u4eec\u53ef\u4ee5\u5206\u522b\u901a\u8fc7 /api/v1/query \u548c /api/v1/query_range \u67e5\u8be2 PromQL \u8868\u8fbe\u5f0f\u5f53\u524d\u6216\u8005\u4e00\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u7684\u8ba1\u7b97\u7ed3\u679c\u3002","title":"2 \u8868\u8fbe\u5f0f\u67e5\u8be2"},{"location":"chap8/5Promql_basic5/#2-1","text":"\u901a\u8fc7\u4f7f\u7528 QUERY API \u6211\u4eec\u53ef\u4ee5\u67e5\u8be2 PromQL \u5728\u7279\u5b9a\u65f6\u95f4\u70b9\u4e0b\u7684\u8ba1\u7b97\u7ed3\u679c\u3002 GET /api/v1/query URL \u8bf7\u6c42\u53c2\u6570 query=<string> : PromQL \u8868\u8fbe\u5f0f\u3002 time=<rfc3339 | unix_timestamp> : \u7528\u4e8e\u6307\u5b9a\u7528\u4e8e\u8ba1\u7b97 PromQL \u7684\u65f6\u95f4\u6233\u3002\u53ef\u9009\u53c2\u6570\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\u3002 timeout=<duration> : \u8d85\u65f6\u8bbe\u7f6e\u3002\u53ef\u9009\u53c2\u6570\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5168\u5c40\u8bbe\u7f6e\u7684\u53c2\u6570 -query.timeout \u3002 \u5982\u679c time \u53c2\u6570\u7f3a\u7701\uff0c\u5219\u4f7f\u7528\u5f53\u524d\u670d\u52a1\u5668\u65f6\u95f4\u3002 \u5f53 API \u8c03\u7528\u6210\u529f\u540e\uff0c Prometheus \u4f1a\u8fd4\u56de JSON \u683c\u5f0f\u7684\u54cd\u5e94\u5185\u5bb9\uff0c\u683c\u5f0f\u5982\u4e0a\u5c0f\u8282\u6240\u793a\u3002\u5e76\u4e14\u5728 data \u90e8\u5206\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u3002 data \u90e8\u5206\u683c\u5f0f\u5982\u4e0b\uff1a { \"resultType\": \"matrix\" | \"vector\" | \"scalar\" | \"string\", \"result\": <value> } <value> \u6307\u7684\u662f\u67e5\u8be2\u7ed3\u679c\u6570\u636e\uff0c\u5177\u4f53\u7684\u683c\u5f0f\u53d6\u51b3\u4e8e resultType\uff0c\u4e0d\u540c\u7684\u7ed3\u679c\u7c7b\u578b\uff0c\u4f1a\u6709\u4e0d\u540c\u7684\u7ed3\u679c\u6570\u636e\u683c\u5f0f\u3002 \u4f8b\u5982\u4f7f\u7528\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u67e5\u8be2\u8868\u8fbe\u5f0f up \u5728\u65f6\u95f4\u70b9 2015-07-01T20:10:51.781Z \u7684\u8ba1\u7b97\u7ed3\u679c\uff1a $ curl 'http://localhost:9090/api/v1/query?query=up&time=2015-07-01T20:10:51.781Z' { \"status\" : \"success\", \"data\" : { \"resultType\" : \"vector\", \"result\" : [ { \"metric\" : { \"__name__\" : \"up\", \"job\" : \"prometheus\", \"instance\" : \"localhost:9090\" }, \"value\": [ 1435781451.781, \"1\" ] }, { \"metric\" : { \"__name__\" : \"up\", \"job\" : \"node\", \"instance\" : \"localhost:9100\" }, \"value\" : [ 1435781451.781, \"0\" ] } ] } }","title":"2-1 \u77ac\u65f6\u6570\u636e\u67e5\u8be2"},{"location":"chap8/5Promql_basic5/#3","text":"\u4f7f\u7528 QUERY_RANGE API \u6211\u4eec\u5219\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2 PromQL \u8868\u8fbe\u5f0f\u5728\u4e00\u6bb5\u65f6\u95f4\u8fd4\u56de\u5185\u7684\u8ba1\u7b97\u7ed3\u679c\u3002 GET /api/v1/query_range URL \u8bf7\u6c42\u53c2\u6570\uff1a query=<string> : PromQL \u8868\u8fbe\u5f0f\u3002 start=<rfc3339 | unix_timestamp> : \u8d77\u59cb\u65f6\u95f4\u6233\u3002 end=<rfc3339 | unix_timestamp> : \u7ed3\u675f\u65f6\u95f4\u6233\u3002 step=<duration | float> : \u67e5\u8be2\u65f6\u95f4\u6b65\u957f\uff0c\u65f6\u95f4\u533a\u95f4\u5185\u6bcf step \u79d2\u6267\u884c\u4e00\u6b21\u3002 timeout=<duration> : \u8d85\u65f6\u8bbe\u7f6e\u3002\u53ef\u9009\u53c2\u6570\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5168\u5c40\u8bbe\u7f6e\u7684\u53c2\u6570 -query.timeout \u3002 \u5f53\u4f7f\u7528 QUERY_RANGE API \u67e5\u8be2 PromQL \u8868\u8fbe\u5f0f\u65f6\uff0c\u8fd4\u56de\u7ed3\u679c\u4e00\u5b9a\u662f\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\uff1a { \"resultType\": \"matrix\", \"result\": <value> } \u5728 QUERY_RANGE API \u4e2d PromQL \u53ea\u80fd\u4f7f\u7528\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u3002 \u4f8b\u5982\u4f7f\u7528\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u67e5\u8be2\u8868\u8fbe\u5f0f up \u5728 30 \u79d2\u8303\u56f4\u5185\u4ee5 15 \u79d2\u4e3a\u95f4\u9694\u8ba1\u7b97 PromQL \u8868\u8fbe\u5f0f\u7684\u7ed3\u679c \u3002 $ curl 'http://localhost:9090/api/v1/query_range?query=up&start=2015-07-01T20:10:30.781Z&end=2015-07-01T20:11:00.781Z&step=15s' { \"status\" : \"success\", \"data\" : { \"resultType\" : \"matrix\", \"result\" : [ { \"metric\" : { \"__name__\" : \"up\", \"job\" : \"prometheus\", \"instance\" : \"localhost:9090\" }, \"values\" : [ [ 1435781430.781, \"1\" ], [ 1435781445.781, \"1\" ], [ 1435781460.781, \"1\" ] ] }, { \"metric\" : { \"__name__\" : \"up\", \"job\" : \"node\", \"instance\" : \"localhost:9091\" }, \"values\" : [ [ 1435781430.781, \"0\" ], [ 1435781445.781, \"0\" ], [ 1435781460.781, \"1\" ] ] } ] } }","title":"3 \u533a\u95f4\u6570\u636e\u67e5\u8be2"},{"location":"chap8/5Promql_basic5/#3_1","text":"","title":"3 \u67e5\u8be2\u5143\u6570\u636e"},{"location":"chap8/5Promql_basic5/#3-1","text":"\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u4e0e\u7279\u5b9a\u6807\u7b7e\u96c6\u5339\u914d\u7684\u65f6\u95f4\u5e8f\u5217\u5217\u8868\uff1a GET /api/v1/series URL \u8bf7\u6c42\u53c2\u6570\uff1a match[]=<series_selector> : \u8868\u793a\u6807\u7b7e\u9009\u62e9\u5668\u662f series_selector\u3002\u5fc5\u987b\u81f3\u5c11\u63d0\u4f9b\u4e00\u4e2a match[] \u53c2\u6570\u3002 start=<rfc3339 | unix_timestamp> : \u8d77\u59cb\u65f6\u95f4\u6233\u3002 end=<rfc3339 | unix_timestamp> : \u7ed3\u675f\u65f6\u95f4\u6233\u3002 \u8fd4\u56de\u7ed3\u679c\u7684 data \u90e8\u5206\uff0c\u662f\u7531 key-value \u952e\u503c\u5bf9\u7684\u5bf9\u8c61\u5217\u8868\u7ec4\u6210\u7684\u3002 \u4f8b\u5982\u4f7f\u7528\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u67e5\u8be2\u8868\u8fbe\u5f0f up \u6216 process_start_time_seconds{job=\"prometheus\"} \u7684\u8ba1\u7b97\u7ed3\u679c\uff1a $ curl -g 'http://localhost:9090/api/v1/series?match[]=up&match[]=process_start_time_seconds{job=\"prometheus\"}' { \"status\" : \"success\", \"data\" : [ { \"__name__\" : \"up\", \"job\" : \"prometheus\", \"instance\" : \"localhost:9090\" }, { \"__name__\" : \"up\", \"job\" : \"node\", \"instance\" : \"localhost:9091\" }, { \"__name__\" : \"process_start_time_seconds\", \"job\" : \"prometheus\", \"instance\" : \"localhost:9090\" } ] }","title":"3-1 \u901a\u8fc7\u6807\u7b7e\u9009\u62e9\u5668\u67e5\u627e\u65f6\u95f4\u5e8f\u5217"},{"location":"chap8/5Promql_basic5/#3-2","text":"\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u8fd4\u56de\u4e86\u5e26\u6709\u6307\u5b9a\u6807\u7b7e\u7684\u7684\u65f6\u95f4\u5e8f\u5217\u5217\u8868\uff1a GET /api/v1/label/<label_name>/values \u8fd4\u56de\u7ed3\u679c\u7684 data \u90e8\u5206\u662f\u4e00\u4e2a\u6807\u7b7e\u503c\u5217\u8868\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8fd4\u56de\u7ed3\u679c\u7684 data \u90e8\u5206\u662f\u6807\u7b7e\u540d\u79f0\u4e3a job \u7684\u6240\u6709\u6807\u7b7e\u503c\uff1a $ curl http://localhost:9090/api/v1/label/job/values { \"status\" : \"success\", \"data\" : [ \"node\", \"prometheus\" ] }","title":"3-2 \u67e5\u8be2\u6807\u7b7e\u503c"},{"location":"chap8/5Promql_basic5/#3-3","text":"\u8868\u8fbe\u5f0f\u67e5\u8be2\u7ed3\u679c\u53ef\u80fd\u4f1a\u5728 data \u90e8\u5206\u7684 result \u5b57\u6bb5\u4e2d\u8fd4\u56de\u4ee5\u4e0b\u7684\u54cd\u5e94\u503c\u3002\u5176\u4e2d <sample_value> \u5360\u4f4d\u7b26\u662f\u6570\u503c\u6837\u672c\u503c\u3002\u7531\u4e8e json \u4e0d\u652f\u6301\u7279\u6b8a\u6d6e\u70b9\u503c\uff0c\u4f8b\u5982\uff1a NaN , Inf , \u548c -Inf \uff0c\u6240\u4ee5\u6837\u672c\u503c\u5c06\u4f1a\u4f5c\u4e3a\u5b57\u7b26\u4e32\uff08\u800c\u4e0d\u662f\u539f\u59cb\u6570\u503c\uff09\u6765\u8fdb\u884c\u4f20\u8f93\u3002 \u533a\u95f4\u5411\u91cf \u5f53\u8fd4\u56de\u6570\u636e\u7c7b\u578b resultType \u4e3a matrix \u65f6\uff0c result \u54cd\u5e94\u683c\u5f0f\u5982\u4e0b\uff1a [ { \"metric\": { \"<label_name>\": \"<label_value>\", ... }, \"values\": [ [ <unix_time>, \"<sample_value>\" ], ... ] }, ... ] \u5176\u4e2d metrics \u8868\u793a\u5f53\u524d\u65f6\u95f4\u5e8f\u5217\u7684\u7279\u5f81\u7ef4\u5ea6\uff0c values \u5305\u542b\u5f53\u524d\u4e8b\u4ef6\u5e8f\u5217\u7684\u4e00\u7ec4\u6837\u672c\u3002","title":"3-3 \u54cd\u5e94\u6570\u636e\u683c\u5f0f"},{"location":"chap8/5Promql_basic5/#3-4","text":"\u5f53\u8fd4\u56de\u6570\u636e\u7c7b\u578b resultType \u4e3a vector \u65f6\uff0c result \u54cd\u5e94\u683c\u5f0f\u5982\u4e0b\uff1a [ { \"metric\": { \"<label_name>\": \"<label_value>\", ... }, \"value\": [ <unix_time>, \"<sample_value>\" ] }, ... ] \u5176\u4e2d metrics \u8868\u793a\u5f53\u524d\u65f6\u95f4\u5e8f\u5217\u7684\u7279\u5f81\u7ef4\u5ea6\uff0c values \u5305\u542b\u5f53\u524d\u4e8b\u4ef6\u5e8f\u5217\u7684\u4e00\u7ec4\u6837\u672c\u3002","title":"3-4 \u77ac\u65f6\u5411\u91cf"},{"location":"chap8/5Promql_basic5/#3-5","text":"\u5f53\u8fd4\u56de\u6570\u636e\u7c7b\u578b resultType \u4e3a scalar \u65f6\uff0c result \u54cd\u5e94\u683c\u5f0f\u5982\u4e0b\uff1a [ <unix_time>, \"<scalar_value>\" ] \u7531\u4e8e\u6807\u91cf\u4e0d\u5b58\u5728\u65f6\u95f4\u5e8f\u5217\u4e00\u8bf4\uff0c\u56e0\u6b64 result \u8868\u793a\u4e3a\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\u4e00\u4e2a\u6807\u91cf\u7684\u503c\u3002","title":"3-5 \u6807\u91cf"},{"location":"chap8/5Promql_basic5/#3-6","text":"\u5f53\u8fd4\u56de\u6570\u636e\u7c7b\u578b resultType \u4e3a string \u65f6\uff0c result \u54cd\u5e94\u683c\u5f0f\u5982\u4e0b\uff1a [ <unix_time>, \"<string_value>\" ] \u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u54cd\u5e94\u5185\u5bb9\u683c\u5f0f\u548c\u6807\u91cf\u76f8\u540c\u3002","title":"3-6 \u5b57\u7b26\u4e32"},{"location":"chap8/60prometheus_job/","text":"8 \u89e3\u51b3 Prometheus \u76d1\u63a7 Kubernetes Job \u8bef\u62a5\u7684\u5751 \u662f\u5173\u4e8e Prometheus \u76d1\u63a7 Job \u4efb\u52a1\u8bef\u62a5\u7684\u95ee\u9898\uff08\u5df2\u7ecf\u540c\u6b65\u5230\u793e\u533a\u7f51\u7ad9\uff09\uff0c\u5927\u6982\u7684\u610f\u601d\u5c31 CronJob \u63a7\u5236\u7684 Job\uff0c\u524d\u9762\u6267\u884c\u5931\u8d25\u4e86\u4f1a\u89e6\u53d1\u62a5\u8b66\uff0c\u540e\u9762\u751f\u6210\u7684\u65b0\u7684 Job \u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u540e\uff0c\u4f46\u662f\u8fd8\u662f\u4f1a\u6536\u5230\u524d\u9762\u7684\u62a5\u8b66 \uff1a \u8fd9\u662f\u56e0\u4e3a\u4e00\u822c\u5728\u6267\u884c Job \u4efb\u52a1\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u4fdd\u7559\u4e00\u4e9b\u5386\u53f2\u8bb0\u5f55\u65b9\u4fbf\u6392\u67e5\u95ee\u9898\uff0c\u6240\u4ee5\u5982\u679c\u4e4b\u524d\u6709\u5931\u8d25\u7684 Job \u4e86\uff0c\u5373\u4fbf\u7a0d\u540e\u4f1a\u53d8\u6210\u6210\u529f\u7684\uff0c\u90a3\u4e48\u4e4b\u524d\u7684 Job \u4e5f\u4f1a\u7ee7\u7eed\u5b58\u5728\uff0c\u800c\u5927\u90e8\u5206\u76f4\u63a5\u4f7f\u7528 kube-prometheus \u5b89\u88c5\u90e8\u7f72\u7684\u8bdd\u4f7f\u7528\u7684\u9ed8\u8ba4\u62a5\u8b66\u89c4\u5219\u662f kube_job_status_failed > 0 \uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u51c6\u786e\u7684 \uff0c \u53ea\u6709\u6211\u4eec\u53bb\u624b\u52a8\u5220\u9664\u4e4b\u524d\u8fd9\u4e2a\u5931\u8d25\u7684 Job \u4efb\u52a1\u624d\u53ef\u4ee5\u6d88\u9664\u8bef\u62a5 \uff0c\u5f53\u7136\u8fd9\u79cd\u65b9\u5f0f\u662f\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u7684\uff0c\u4f46\u662f\u4e0d\u591f\u81ea\u52a8\u5316\uff0c\u4e00\u5f00\u59cb\u6ca1\u6709\u60f3\u5f97\u5f88\u6df1\u5165\uff0c \u60f3\u53bb\u81ea\u52a8\u5316\u5220\u9664\u5931\u8d25\u7684 Job \u6765\u89e3\u51b3\uff0c\u4f46\u662f\u8fd9\u4e5f\u4f1a\u7ed9\u8fd0\u7ef4\u4eba\u5458\u5e26\u6765\u95ee\u9898\uff0c\u5c31\u662f\u4e0d\u65b9\u4fbf\u56de\u5934\u53bb\u6392\u67e5\u95ee\u9898\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u91cd\u65b0\u6574\u7406\u4e0b\u601d\u8def\u89e3\u51b3\u4e0b\u8fd9\u4e2a\u95ee\u9898\u3002 CronJob \u4f1a\u5728\u8ba1\u5212\u7684\u6bcf\u4e2a\u6267\u884c\u65f6\u95f4\u521b\u5efa\u4e00\u4e2a Job \u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7 .spec.successfulJobsHistoryLimit \u548c .spec.failedJobsHistoryLimit \u5c5e\u6027\u6765\u4fdd\u7559\u591a\u5c11\u5df2\u5b8c\u6210\u548c\u5931\u8d25\u7684 Job\uff0c\u9ed8\u8ba4\u5206\u522b\u4e3a3\u548c1\uff0c\u6bd4\u5982\u4e0b\u9762\u58f0\u660e\u4e00\u4e2a CronJob \u7684\u8d44\u6e90\u5bf9\u8c61 \uff1a apiVersion: batch/v1 kind: CronJob metadata: name: hello spec: schedule: \"*/1 * * * *\" successfulJobsHistoryLimit: 1 failedJobsHistoryLimit: 1 jobTemplate: spec: template: spec: containers: - name: hello image: busybox imagePullPolicy: IfNotPresent command: - /bin/sh - -c - date; restartPolicy: OnFailure \u6839\u636e\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u89c4\u8303\uff0cKubernetes \u5c06\u53ea\u4fdd\u7559\u4e00\u4e2a\u5931\u8d25\u7684 Job \u548c\u4e00\u4e2a\u6210\u529f\u7684 Job\uff1a NAME COMPLETIONS DURATION AGE hello-4111706356 0/1 2m 10d hello-4111706356 1/1 5s 5s \u8981\u89e3\u51b3\u4e0a\u9762\u7684\u8bef\u62a5\u95ee\u9898\uff0c\u540c\u6837\u8fd8\u662f\u9700\u8981\u4f7f\u7528\u5230 kube-state-metrics \u8fd9\u4e2a\u670d\u52a1\uff0c\u5b83\u901a\u8fc7\u76d1\u542c Kubernetes APIServer \u5e76\u751f\u6210\u6709\u5173\u5bf9\u8c61\u72b6\u6001\u7684\u6307\u6807\uff0c\u5b83\u5e76\u4e0d\u5173\u6ce8\u5355\u4e2a Kubernetes \u7ec4\u4ef6\u7684\u5065\u5eb7\u72b6\u51b5\uff0c\u800c\u662f\u5173\u6ce8\u5185\u90e8\u5404\u79cd\u5bf9\u8c61\u7684\u5065\u5eb7\u72b6\u51b5\uff0c\u4f8b\u5982 Deployment\u3001Node\u3001Job\u3001Pod \u7b49\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u3002\u8fd9\u91cc\u6211\u4eec\u5c06\u8981\u4f7f\u7528\u5230\u4ee5\u4e0b\u51e0\u4e2a\u6307\u6807\uff1a kube_job_owner \uff1a\u7528\u6765\u67e5\u627e Job \u548c\u89e6\u53d1\u5b83\u7684 CronJob \u4e4b\u95f4\u7684\u5173\u7cfb kube_job_status_start_time \uff1a\u83b7\u53d6 Job \u88ab\u89e6\u53d1\u7684\u65f6\u95f4 kube_job_status_failed \uff1a\u83b7\u53d6\u6267\u884c\u5931\u8d25\u7684\u4efb\u52a1 kube_cronjob_spec_suspend \uff1a\u8fc7\u6ee4\u6389\u6302\u8d77\u7684\u4f5c\u4e1a \u4e0b\u9762\u662f\u4e00\u4e2a\u6307\u6807\u793a\u4f8b\uff0c\u5176\u4e2d\u5305\u542b CronJob \u89e6\u53d1\u8fd0\u884c\u7684hello \u4efb\u52a1\u751f\u6210\u7684\u6807\u7b7e\uff1a kube_job_owner{job_name=\"hello-1604875860\", namespace=\"myNamespace\", owner_is_controller=\"true\", owner_kind=\"CronJob\", owner_name=\"hello\"} 1 kube_job_status_start_time{job_name=\"hello-1604875860\", namespace=\"myNamespace\"} 1604875874 kube_job_status_failed{job_name=\"hello-1604875860\", namespace=\"myNamespace\", reason=\"BackoffLimitExceeded\"} 1 kube_cronjob_spec_suspend{cronjob=\"hello\",job=\"kube-state-metrics\", namespace=\"myNamespace\"} 0 \u8981\u60f3\u505a\u5230\u76d1\u63a7\u62a5\u8b66\u51c6\u786e\uff0c\u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u53bb \u83b7\u53d6\u540c\u4e00\u4e2a CronJob \u89e6\u53d1\u7684\u4e00\u7ec4 Job \u7684\u6700\u540e\u4e00\u6b21\u4efb\u52a1\uff0c\u53ea\u6709\u8be5 Job \u5728\u6267\u884c\u5931\u8d25\u7684\u65f6\u5019\u624d\u89e6\u53d1\u62a5\u8b66\u5373\u53ef \u3002 \u7531\u4e8e kube_job_status_failed \u548c kube_job_status_start_time \u6307\u6807\u4e2d\u5e76\u4e0d\u5305\u542b\u6240\u5c5e CronJob \u7684\u6807\u7b7e\uff0c\u6240\u4ee5\u7b2c\u4e00\u6b65\u9700\u8981\u52a0\u5165\u8fd9\u4e2a\u6807\u7b7e\uff0c\u800c kube_job_owner \u6307\u6807\u4e2d\u7684 owner_name \u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\uff0c \u53ef\u4ee5\u7528\u4e0b\u9762\u7684 promql \u8bed\u53e5\u6765\u8fdb\u884c\u5408\u5e76\uff1a max( kube_job_status_start_time * ON(job_name, namespace) GROUP_RIGHT() kube_job_owner{owner_name != \"\"} ) BY (job_name, owner_name, namespace) \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 max \u51fd\u6570\u662f\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u4f1a\u56e0\u4e3a HA \u8fd0\u884c\u591a\u4e2a kube-state-metrics \uff0c\u6240\u4ee5\u7528 max \u51fd\u6570\u6765\u8fd4\u56de\u6bcf\u4e2a Job \u4efb\u52a1\u7684\u4e00\u4e2a\u7ed3\u679c\u5373\u53ef\u3002\u5047\u8bbe\u6211\u4eec\u7684 Job \u5386\u53f2\u8bb0\u5f55\u5305\u542b 2 \u4e2a\u4efb\u52a1\uff08\u4e00\u4e2a\u5931\u8d25\uff0c\u53e6\u4e00\u4e2a\u6210\u529f\uff09\uff0c\u7ed3\u679c\u5c06\u5982\u4e0b\u6240\u793a\uff1a {job_name=\"hello-1623578940\", namespace=\"myNamespace\", owner_name=\"hello\"} 1623578959 {job_name=\"hello-1617667200\", namespace=\"myNamespace\", owner_name=\"hello\"} 1617667204 \u73b0\u5728\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a Job \u7684\u6240\u6709\u8005\u4e86\uff0c\u63a5\u7740\u6211\u4eec\u9700\u8981\u627e\u51fa\u6700\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6309 owner_name \u6807\u7b7e\u805a\u5408\u7ed3\u679c\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (owner_name) \u4e0a\u9762\u8fd9\u6761\u8bed\u53e5\u4f1a\u627e\u5230\u6bcf\u4e2a owner\uff08\u4e5f\u5c31\u662f CronJob\uff09\u6700\u65b0\u7684\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4\uff0c\u7136\u540e\u518d\u548c\u4e0a\u9762\u7684\u8bed\u53e5\u8fdb\u884c\u5408\u5e76\uff0c\u4fdd\u7559\u5f00\u59cb\u65f6\u95f4\u76f8\u540c\u7684\u8bb0\u5f55\u5373\u4e3a\u6700\u65b0\u6267\u884c\u7684 Job \u4efb\u52a1\u4e86\uff1a max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (job_name, owner_name, namespace) == ON(owner_name) GROUP_LEFT() max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (owner_name) \u7ed3\u679c\u5c06\u663e\u793a\u6bcf\u4e2a CronJob \u6700\u540e\u6267\u884c\u7684\u4f5c\u4e1a\uff0c\u5e76\u4e14\u4ec5\u663e\u793a\u6700\u540e\u4e00\u4e2a\uff1a {job_name=\"hello-1623578940\", namespace=\"myNamespace\", owner_name=\"hello\"} 1623578959 \u4e3a\u4e86\u589e\u52a0\u53ef\u8bfb\u6027\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06 job_name \u3001 owner_name \u6807\u7b7e\u66ff\u6362\u4e3a job \u548c cronjob\uff0c\u8fd9\u6837\u66f4\u5bb9\u6613\u770b\u660e\u767d\uff1a label_replace( label_replace( max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (job_name, owner_name, namespace) == ON(owner_name) GROUP_LEFT() max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (owner_name), \"job\", \"$1\", \"job_name\", \"(.+)\"), \"cronjob\", \"$1\", \"owner_name\", \"(.+)\") \u73b0\u5728\u5c06\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u7ed3\u679c\uff1a {job=\"hello-1623578940\", cronjob=\"hello\", job_name=\"hello-1623578940\", namespace=\"myNamespace\", owner_name=\"hello\"} 1623578959 \u7531\u4e8e\u4e0a\u9762\u7684\u67e5\u8be2\u8bed\u53e5\u6bd4\u8f83\u590d\u6742\uff0c\u5982\u679c\u6bcf\u6b21\u62a5\u8b66\u8bc4\u4f30\u7684\u65f6\u5019\u90fd\u53bb\u8fdb\u884c\u4e00\u6b21\u5b9e\u65f6\u8ba1\u7b97\u4f1a\u5bf9 Prometheus \u4ea7\u751f\u975e\u5e38\u5927\u7684\u538b\u529b\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u501f\u52a9\u8bb0\u5f55\u89c4\u5219\u6765\u5b9e\u73b0\u7c7b\u79bb\u7ebf\u8ba1\u7b97\u7684\u65b9\u5f0f\uff0c\u5927\u5927\u63d0\u9ad8\u6548\u7387\uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684\u8bb0\u5f55\u89c4\u5219\uff0c\u7528\u6765\u8868\u793a\u83b7\u53d6\u6bcf\u4e2a CronJob \u6700\u540e\u6267\u884c\u7684\u4f5c\u4e1a\u8bb0\u5f55\uff1a - record: job:kube_job_status_start_time:max expr: | label_replace( label_replace( max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (job_name, owner_name, namespace) == ON(owner_name) GROUP_LEFT() max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (owner_name), \"job\", \"$1\", \"job_name\", \"(.+)\"), \"cronjob\", \"$1\", \"owner_name\", \"(.+)\") \u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86 CronJob \u6700\u8fd1\u5f00\u59cb\u6267\u884c\u7684 Job \u4e86\uff0c\u90a3\u4e48\u60f3\u8981\u8fc7\u6ee4\u51fa\u5931\u8d25\u7684\uff0c\u5219\u518d\u4f7f\u7528 kube_job_status_failed \u6307\u6807\u5c31\u53ef\u4ee5\u4e86\uff1a - record: job:kube_job_status_failed:sum expr: | clamp_max(job:kube_job_status_start_time:max, 1) * ON(job) GROUP_LEFT() label_replace( (kube_job_status_failed > 0), \"job\", \"$1\", \"job_name\", \"(.+)\" ) \u8fd9\u91cc\u4f7f\u7528 clamp_max \u51fd\u6570\u5c06 job:kube_job_status_start_time:max \u7684\u7ed3\u679c\u8f6c\u6362\u4e3a\u4e00\u7ec4\u4e0a\u9650\u4e3a 1 \u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u4f7f\u7528\u5b83\u6765\u901a\u8fc7\u4e58\u6cd5\u8fc7\u6ee4\u5931\u8d25\u7684\u4f5c\u4e1a\uff0c\u5f97\u5230\u5305\u542b\u4e00\u7ec4\u6700\u8fd1\u5931\u8d25\u7684 Job \u4efb\u52a1\uff0c\u8fd9\u91cc\u6211\u4eec\u4e5f\u6dfb\u52a0\u5230\u540d\u4e3a kube_job_status_failed:sum \u7684\u8bb0\u5f55\u89c4\u5219\u4e2d \u3002 \u6700\u540e\u4e00\u6b65\u5c31\u662f\u76f4\u63a5\u4e3a\u5931\u8d25\u7684 Job \u4efb\u52a1\u6dfb\u52a0\u62a5\u8b66\u89c4\u5219\uff0c\u5982\u4e0b\u6240\u793a\uff1a - alert: CronJobStatusFailed expr: | job:kube_job_status_failed:sum * ON(cronjob, namespace) GROUP_LEFT() (kube_cronjob_spec_suspend == 0) \u4e3a\u907f\u514d\u8bef\u62a5\uff0c\u6211\u4eec\u5df2\u5c06\u6302\u8d77\u7684\u4efb\u52a1\u6392\u9664\u5728\u5916\u4e86\u3002\u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u89e3\u51b3\u4e86 Prometheus \u76d1\u63a7 CronJob \u7684\u4efb\u52a1\u8bef\u62a5\u7684\u95ee\u9898\uff0c\u867d\u7136 kube-prometheus \u4e3a\u6211\u4eec\u5185\u7f6e\u4e86\u5927\u91cf\u7684\u76d1\u63a7\u62a5\u8b66\u89c4\u5219\uff0c\u4f46\u662f\u4e5f\u4e0d\u80fd\u5b8c\u5168\u8ff7\u4fe1\uff0c\u6709\u65f6\u5019\u5e76\u4e0d\u4e00\u5b9a\u9002\u5408\u5b9e\u9645\u7684\u9700\u6c42\u3002","title":"8 \u89e3\u51b3Prometheus\u76d1\u63a7Kubernetes Job\u8bef\u62a5\u7684\u5751"},{"location":"chap8/60prometheus_job/#8-prometheus-kubernetes-job","text":"\u662f\u5173\u4e8e Prometheus \u76d1\u63a7 Job \u4efb\u52a1\u8bef\u62a5\u7684\u95ee\u9898\uff08\u5df2\u7ecf\u540c\u6b65\u5230\u793e\u533a\u7f51\u7ad9\uff09\uff0c\u5927\u6982\u7684\u610f\u601d\u5c31 CronJob \u63a7\u5236\u7684 Job\uff0c\u524d\u9762\u6267\u884c\u5931\u8d25\u4e86\u4f1a\u89e6\u53d1\u62a5\u8b66\uff0c\u540e\u9762\u751f\u6210\u7684\u65b0\u7684 Job \u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u540e\uff0c\u4f46\u662f\u8fd8\u662f\u4f1a\u6536\u5230\u524d\u9762\u7684\u62a5\u8b66 \uff1a \u8fd9\u662f\u56e0\u4e3a\u4e00\u822c\u5728\u6267\u884c Job \u4efb\u52a1\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u4fdd\u7559\u4e00\u4e9b\u5386\u53f2\u8bb0\u5f55\u65b9\u4fbf\u6392\u67e5\u95ee\u9898\uff0c\u6240\u4ee5\u5982\u679c\u4e4b\u524d\u6709\u5931\u8d25\u7684 Job \u4e86\uff0c\u5373\u4fbf\u7a0d\u540e\u4f1a\u53d8\u6210\u6210\u529f\u7684\uff0c\u90a3\u4e48\u4e4b\u524d\u7684 Job \u4e5f\u4f1a\u7ee7\u7eed\u5b58\u5728\uff0c\u800c\u5927\u90e8\u5206\u76f4\u63a5\u4f7f\u7528 kube-prometheus \u5b89\u88c5\u90e8\u7f72\u7684\u8bdd\u4f7f\u7528\u7684\u9ed8\u8ba4\u62a5\u8b66\u89c4\u5219\u662f kube_job_status_failed > 0 \uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u51c6\u786e\u7684 \uff0c \u53ea\u6709\u6211\u4eec\u53bb\u624b\u52a8\u5220\u9664\u4e4b\u524d\u8fd9\u4e2a\u5931\u8d25\u7684 Job \u4efb\u52a1\u624d\u53ef\u4ee5\u6d88\u9664\u8bef\u62a5 \uff0c\u5f53\u7136\u8fd9\u79cd\u65b9\u5f0f\u662f\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u7684\uff0c\u4f46\u662f\u4e0d\u591f\u81ea\u52a8\u5316\uff0c\u4e00\u5f00\u59cb\u6ca1\u6709\u60f3\u5f97\u5f88\u6df1\u5165\uff0c \u60f3\u53bb\u81ea\u52a8\u5316\u5220\u9664\u5931\u8d25\u7684 Job \u6765\u89e3\u51b3\uff0c\u4f46\u662f\u8fd9\u4e5f\u4f1a\u7ed9\u8fd0\u7ef4\u4eba\u5458\u5e26\u6765\u95ee\u9898\uff0c\u5c31\u662f\u4e0d\u65b9\u4fbf\u56de\u5934\u53bb\u6392\u67e5\u95ee\u9898\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u91cd\u65b0\u6574\u7406\u4e0b\u601d\u8def\u89e3\u51b3\u4e0b\u8fd9\u4e2a\u95ee\u9898\u3002 CronJob \u4f1a\u5728\u8ba1\u5212\u7684\u6bcf\u4e2a\u6267\u884c\u65f6\u95f4\u521b\u5efa\u4e00\u4e2a Job \u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7 .spec.successfulJobsHistoryLimit \u548c .spec.failedJobsHistoryLimit \u5c5e\u6027\u6765\u4fdd\u7559\u591a\u5c11\u5df2\u5b8c\u6210\u548c\u5931\u8d25\u7684 Job\uff0c\u9ed8\u8ba4\u5206\u522b\u4e3a3\u548c1\uff0c\u6bd4\u5982\u4e0b\u9762\u58f0\u660e\u4e00\u4e2a CronJob \u7684\u8d44\u6e90\u5bf9\u8c61 \uff1a apiVersion: batch/v1 kind: CronJob metadata: name: hello spec: schedule: \"*/1 * * * *\" successfulJobsHistoryLimit: 1 failedJobsHistoryLimit: 1 jobTemplate: spec: template: spec: containers: - name: hello image: busybox imagePullPolicy: IfNotPresent command: - /bin/sh - -c - date; restartPolicy: OnFailure \u6839\u636e\u4e0a\u9762\u7684\u8d44\u6e90\u5bf9\u8c61\u89c4\u8303\uff0cKubernetes \u5c06\u53ea\u4fdd\u7559\u4e00\u4e2a\u5931\u8d25\u7684 Job \u548c\u4e00\u4e2a\u6210\u529f\u7684 Job\uff1a NAME COMPLETIONS DURATION AGE hello-4111706356 0/1 2m 10d hello-4111706356 1/1 5s 5s \u8981\u89e3\u51b3\u4e0a\u9762\u7684\u8bef\u62a5\u95ee\u9898\uff0c\u540c\u6837\u8fd8\u662f\u9700\u8981\u4f7f\u7528\u5230 kube-state-metrics \u8fd9\u4e2a\u670d\u52a1\uff0c\u5b83\u901a\u8fc7\u76d1\u542c Kubernetes APIServer \u5e76\u751f\u6210\u6709\u5173\u5bf9\u8c61\u72b6\u6001\u7684\u6307\u6807\uff0c\u5b83\u5e76\u4e0d\u5173\u6ce8\u5355\u4e2a Kubernetes \u7ec4\u4ef6\u7684\u5065\u5eb7\u72b6\u51b5\uff0c\u800c\u662f\u5173\u6ce8\u5185\u90e8\u5404\u79cd\u5bf9\u8c61\u7684\u5065\u5eb7\u72b6\u51b5\uff0c\u4f8b\u5982 Deployment\u3001Node\u3001Job\u3001Pod \u7b49\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u3002\u8fd9\u91cc\u6211\u4eec\u5c06\u8981\u4f7f\u7528\u5230\u4ee5\u4e0b\u51e0\u4e2a\u6307\u6807\uff1a kube_job_owner \uff1a\u7528\u6765\u67e5\u627e Job \u548c\u89e6\u53d1\u5b83\u7684 CronJob \u4e4b\u95f4\u7684\u5173\u7cfb kube_job_status_start_time \uff1a\u83b7\u53d6 Job \u88ab\u89e6\u53d1\u7684\u65f6\u95f4 kube_job_status_failed \uff1a\u83b7\u53d6\u6267\u884c\u5931\u8d25\u7684\u4efb\u52a1 kube_cronjob_spec_suspend \uff1a\u8fc7\u6ee4\u6389\u6302\u8d77\u7684\u4f5c\u4e1a \u4e0b\u9762\u662f\u4e00\u4e2a\u6307\u6807\u793a\u4f8b\uff0c\u5176\u4e2d\u5305\u542b CronJob \u89e6\u53d1\u8fd0\u884c\u7684hello \u4efb\u52a1\u751f\u6210\u7684\u6807\u7b7e\uff1a kube_job_owner{job_name=\"hello-1604875860\", namespace=\"myNamespace\", owner_is_controller=\"true\", owner_kind=\"CronJob\", owner_name=\"hello\"} 1 kube_job_status_start_time{job_name=\"hello-1604875860\", namespace=\"myNamespace\"} 1604875874 kube_job_status_failed{job_name=\"hello-1604875860\", namespace=\"myNamespace\", reason=\"BackoffLimitExceeded\"} 1 kube_cronjob_spec_suspend{cronjob=\"hello\",job=\"kube-state-metrics\", namespace=\"myNamespace\"} 0 \u8981\u60f3\u505a\u5230\u76d1\u63a7\u62a5\u8b66\u51c6\u786e\uff0c\u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u53bb \u83b7\u53d6\u540c\u4e00\u4e2a CronJob \u89e6\u53d1\u7684\u4e00\u7ec4 Job \u7684\u6700\u540e\u4e00\u6b21\u4efb\u52a1\uff0c\u53ea\u6709\u8be5 Job \u5728\u6267\u884c\u5931\u8d25\u7684\u65f6\u5019\u624d\u89e6\u53d1\u62a5\u8b66\u5373\u53ef \u3002 \u7531\u4e8e kube_job_status_failed \u548c kube_job_status_start_time \u6307\u6807\u4e2d\u5e76\u4e0d\u5305\u542b\u6240\u5c5e CronJob \u7684\u6807\u7b7e\uff0c\u6240\u4ee5\u7b2c\u4e00\u6b65\u9700\u8981\u52a0\u5165\u8fd9\u4e2a\u6807\u7b7e\uff0c\u800c kube_job_owner \u6307\u6807\u4e2d\u7684 owner_name \u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\uff0c \u53ef\u4ee5\u7528\u4e0b\u9762\u7684 promql \u8bed\u53e5\u6765\u8fdb\u884c\u5408\u5e76\uff1a max( kube_job_status_start_time * ON(job_name, namespace) GROUP_RIGHT() kube_job_owner{owner_name != \"\"} ) BY (job_name, owner_name, namespace) \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 max \u51fd\u6570\u662f\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u4f1a\u56e0\u4e3a HA \u8fd0\u884c\u591a\u4e2a kube-state-metrics \uff0c\u6240\u4ee5\u7528 max \u51fd\u6570\u6765\u8fd4\u56de\u6bcf\u4e2a Job \u4efb\u52a1\u7684\u4e00\u4e2a\u7ed3\u679c\u5373\u53ef\u3002\u5047\u8bbe\u6211\u4eec\u7684 Job \u5386\u53f2\u8bb0\u5f55\u5305\u542b 2 \u4e2a\u4efb\u52a1\uff08\u4e00\u4e2a\u5931\u8d25\uff0c\u53e6\u4e00\u4e2a\u6210\u529f\uff09\uff0c\u7ed3\u679c\u5c06\u5982\u4e0b\u6240\u793a\uff1a {job_name=\"hello-1623578940\", namespace=\"myNamespace\", owner_name=\"hello\"} 1623578959 {job_name=\"hello-1617667200\", namespace=\"myNamespace\", owner_name=\"hello\"} 1617667204 \u73b0\u5728\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a Job \u7684\u6240\u6709\u8005\u4e86\uff0c\u63a5\u7740\u6211\u4eec\u9700\u8981\u627e\u51fa\u6700\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6309 owner_name \u6807\u7b7e\u805a\u5408\u7ed3\u679c\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (owner_name) \u4e0a\u9762\u8fd9\u6761\u8bed\u53e5\u4f1a\u627e\u5230\u6bcf\u4e2a owner\uff08\u4e5f\u5c31\u662f CronJob\uff09\u6700\u65b0\u7684\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4\uff0c\u7136\u540e\u518d\u548c\u4e0a\u9762\u7684\u8bed\u53e5\u8fdb\u884c\u5408\u5e76\uff0c\u4fdd\u7559\u5f00\u59cb\u65f6\u95f4\u76f8\u540c\u7684\u8bb0\u5f55\u5373\u4e3a\u6700\u65b0\u6267\u884c\u7684 Job \u4efb\u52a1\u4e86\uff1a max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (job_name, owner_name, namespace) == ON(owner_name) GROUP_LEFT() max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (owner_name) \u7ed3\u679c\u5c06\u663e\u793a\u6bcf\u4e2a CronJob \u6700\u540e\u6267\u884c\u7684\u4f5c\u4e1a\uff0c\u5e76\u4e14\u4ec5\u663e\u793a\u6700\u540e\u4e00\u4e2a\uff1a {job_name=\"hello-1623578940\", namespace=\"myNamespace\", owner_name=\"hello\"} 1623578959 \u4e3a\u4e86\u589e\u52a0\u53ef\u8bfb\u6027\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06 job_name \u3001 owner_name \u6807\u7b7e\u66ff\u6362\u4e3a job \u548c cronjob\uff0c\u8fd9\u6837\u66f4\u5bb9\u6613\u770b\u660e\u767d\uff1a label_replace( label_replace( max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (job_name, owner_name, namespace) == ON(owner_name) GROUP_LEFT() max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (owner_name), \"job\", \"$1\", \"job_name\", \"(.+)\"), \"cronjob\", \"$1\", \"owner_name\", \"(.+)\") \u73b0\u5728\u5c06\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u7ed3\u679c\uff1a {job=\"hello-1623578940\", cronjob=\"hello\", job_name=\"hello-1623578940\", namespace=\"myNamespace\", owner_name=\"hello\"} 1623578959 \u7531\u4e8e\u4e0a\u9762\u7684\u67e5\u8be2\u8bed\u53e5\u6bd4\u8f83\u590d\u6742\uff0c\u5982\u679c\u6bcf\u6b21\u62a5\u8b66\u8bc4\u4f30\u7684\u65f6\u5019\u90fd\u53bb\u8fdb\u884c\u4e00\u6b21\u5b9e\u65f6\u8ba1\u7b97\u4f1a\u5bf9 Prometheus \u4ea7\u751f\u975e\u5e38\u5927\u7684\u538b\u529b\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u501f\u52a9\u8bb0\u5f55\u89c4\u5219\u6765\u5b9e\u73b0\u7c7b\u79bb\u7ebf\u8ba1\u7b97\u7684\u65b9\u5f0f\uff0c\u5927\u5927\u63d0\u9ad8\u6548\u7387\uff0c\u521b\u5efa\u5982\u4e0b\u6240\u793a\u7684\u8bb0\u5f55\u89c4\u5219\uff0c\u7528\u6765\u8868\u793a\u83b7\u53d6\u6bcf\u4e2a CronJob \u6700\u540e\u6267\u884c\u7684\u4f5c\u4e1a\u8bb0\u5f55\uff1a - record: job:kube_job_status_start_time:max expr: | label_replace( label_replace( max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (job_name, owner_name, namespace) == ON(owner_name) GROUP_LEFT() max( kube_job_status_start_time * ON(job_name,namespace) GROUP_RIGHT() kube_job_owner{owner_name!=\"\"} ) BY (owner_name), \"job\", \"$1\", \"job_name\", \"(.+)\"), \"cronjob\", \"$1\", \"owner_name\", \"(.+)\") \u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86 CronJob \u6700\u8fd1\u5f00\u59cb\u6267\u884c\u7684 Job \u4e86\uff0c\u90a3\u4e48\u60f3\u8981\u8fc7\u6ee4\u51fa\u5931\u8d25\u7684\uff0c\u5219\u518d\u4f7f\u7528 kube_job_status_failed \u6307\u6807\u5c31\u53ef\u4ee5\u4e86\uff1a - record: job:kube_job_status_failed:sum expr: | clamp_max(job:kube_job_status_start_time:max, 1) * ON(job) GROUP_LEFT() label_replace( (kube_job_status_failed > 0), \"job\", \"$1\", \"job_name\", \"(.+)\" ) \u8fd9\u91cc\u4f7f\u7528 clamp_max \u51fd\u6570\u5c06 job:kube_job_status_start_time:max \u7684\u7ed3\u679c\u8f6c\u6362\u4e3a\u4e00\u7ec4\u4e0a\u9650\u4e3a 1 \u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u4f7f\u7528\u5b83\u6765\u901a\u8fc7\u4e58\u6cd5\u8fc7\u6ee4\u5931\u8d25\u7684\u4f5c\u4e1a\uff0c\u5f97\u5230\u5305\u542b\u4e00\u7ec4\u6700\u8fd1\u5931\u8d25\u7684 Job \u4efb\u52a1\uff0c\u8fd9\u91cc\u6211\u4eec\u4e5f\u6dfb\u52a0\u5230\u540d\u4e3a kube_job_status_failed:sum \u7684\u8bb0\u5f55\u89c4\u5219\u4e2d \u3002 \u6700\u540e\u4e00\u6b65\u5c31\u662f\u76f4\u63a5\u4e3a\u5931\u8d25\u7684 Job \u4efb\u52a1\u6dfb\u52a0\u62a5\u8b66\u89c4\u5219\uff0c\u5982\u4e0b\u6240\u793a\uff1a - alert: CronJobStatusFailed expr: | job:kube_job_status_failed:sum * ON(cronjob, namespace) GROUP_LEFT() (kube_cronjob_spec_suspend == 0) \u4e3a\u907f\u514d\u8bef\u62a5\uff0c\u6211\u4eec\u5df2\u5c06\u6302\u8d77\u7684\u4efb\u52a1\u6392\u9664\u5728\u5916\u4e86\u3002\u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u89e3\u51b3\u4e86 Prometheus \u76d1\u63a7 CronJob \u7684\u4efb\u52a1\u8bef\u62a5\u7684\u95ee\u9898\uff0c\u867d\u7136 kube-prometheus \u4e3a\u6211\u4eec\u5185\u7f6e\u4e86\u5927\u91cf\u7684\u76d1\u63a7\u62a5\u8b66\u89c4\u5219\uff0c\u4f46\u662f\u4e5f\u4e0d\u80fd\u5b8c\u5168\u8ff7\u4fe1\uff0c\u6709\u65f6\u5019\u5e76\u4e0d\u4e00\u5b9a\u9002\u5408\u5b9e\u9645\u7684\u9700\u6c42\u3002","title":"8 \u89e3\u51b3 Prometheus \u76d1\u63a7 Kubernetes Job \u8bef\u62a5\u7684\u5751"},{"location":"chap8/6Promql_adv1/","text":"6 Prometheus\u8bb0\u5f55\u89c4\u5219\u7684\u4f7f\u7528(Recording Rule) PromQL \u8bed\u53e5\u67e5\u8be2\u6027\u80fd\u4f18\u5316 Prometheus \u4f5c\u4e3a\u73b0\u5728\u6700\u706b\u7684\u4e91\u539f\u751f\u76d1\u63a7\u5de5\u5177\uff0c\u5b83\u7684\u4f18\u79c0\u8868\u73b0\u662f\u6bcb\u5eb8\u7f6e\u7591\u7684\u3002\u4f46\u662f\u5728\u6211\u4eec\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5b58\u50a8\u5728 Prometheus \u4e2d\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\u8d8a\u6765\u8d8a\u591a\uff0c\u67e5\u8be2\u7684\u9891\u7387\u4e5f\u5728\u4e0d\u65ad\u7684\u589e\u52a0\uff0c\u5f53\u6211\u4eec\u7528 Grafana \u6dfb\u52a0\u66f4\u591a\u7684 Dashboard \u7684\u65f6\u5019\uff0c\u53ef\u80fd\u6162\u6162\u5730\u4f1a\u4f53\u9a8c\u5230 Grafana \u5df2\u7ecf\u65e0\u6cd5\u6309\u65f6\u6e32\u67d3\u56fe\u8868\uff0c\u5e76\u4e14\u5076\u5c14\u8fd8\u4f1a\u51fa\u73b0\u8d85\u65f6\u7684\u60c5\u51b5\uff0c\u7279\u522b\u662f\u5f53\u6211\u4eec\u5728\u957f\u65f6\u95f4\u6c47\u603b\u5927\u91cf\u7684\u6307\u6807\u6570\u636e\u7684\u65f6\u5019\uff0c Prometheus \u67e5\u8be2\u8d85\u65f6\u7684\u60c5\u51b5\u53ef\u80fd\u66f4\u591a\u4e86\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u4e00\u79cd\u80fd\u591f\u7c7b\u4f3c\u4e8e\u540e\u53f0\u6279\u5904\u7406\u7684\u673a\u5236\u5728\u540e\u53f0\u5b8c\u6210\u8fd9\u4e9b\u590d\u6742\u8fd0\u7b97\u7684\u8ba1\u7b97\uff0c\u5bf9\u4e8e\u4f7f\u7528\u8005\u800c\u8a00\u53ea\u9700\u8981\u67e5\u8be2\u8fd9\u4e9b\u8fd0\u7b97\u7ed3\u679c\u5373\u53ef\u3002 Prometheus \u63d0\u4f9b\u4e00\u79cd\u8bb0\u5f55\u89c4\u5219\uff08 Recording Rule \uff09 \u6765\u652f\u6301\u8fd9\u79cd\u540e\u53f0\u8ba1\u7b97\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u590d\u6742\u67e5\u8be2\u7684 PromQL \u8bed\u53e5\u7684\u6027\u80fd\u4f18\u5316\uff0c\u63d0\u9ad8\u67e5\u8be2\u6548\u7387 1 \u95ee\u9898 \u6bd4\u5982\u6211\u4eec\u60f3\u8981\u4e86\u89e3 Kubernetes \u8282\u70b9\u4e4b\u95f4 CPU \u548c\u5185\u5b58\u7684\u5b9e\u9645\u5229\u7528\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 container_cpu_usage_seconds_total \u548c container_memory_usage_bytes \u8fd9\u4e24\u4e2a\u6307\u6807\u6765\u67e5\u8be2 CPU \u548c\u5185\u5b58\u7684\u5229\u7528\u7387\u3002 \u56e0\u4e3a\u6bcf\u4e2a\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u90fd\u4f1a\u6536\u96c6\u8fd9\u4e24\u4e2a\u6307\u6807\u8fdb\u884c\uff0c\u4f46\u662f\u9700\u8981\u77e5\u9053\uff0c\u5bf9\u4e8e\u7a0d\u5fae\u5927\u70b9\u7684\u7ebf\u4e0a\u73af\u5883\uff0c\u53ef\u80fd\u6211\u4eec\u540c\u65f6\u8fd0\u884c\u7740\u6210\u5343\u4e0a\u4e07\u7684\u5bb9\u5668\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u4ee5\u6bcf5\u5206\u949f\u7684\u9891\u7387\u53bb\u67e5\u8be2\u4e0b\u4e00\u5468\u5185\u6570\u5343\u4e2a\u5bb9\u5668\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c Prometheus \u5c31\u6bd4\u8f83\u96be\u4ee5\u5feb\u901f\u8fdb\u884c\u6570\u636e\u67e5\u8be2\u4e86\u3002 \u6bd4\u5982\u6211\u4eec\u7528 container_cpu_usage_seconds_total \u603b\u6570\u9664\u4ee5 kube_node_status_allocatable_cpu_cores \u603b\u6570\u5f97\u51fa CPU \u5229\u7528\u7387\uff1a sum(rate(container_cpu_usage_seconds_total[5m])) / avg_over_time(sum(kube_node_status_allocatable_cpu_cores)[5m:5m]) Load time: 15723ms \u4f7f\u7528\u6eda\u52a8\u7a97\u53e3\u5c06 container_memory_usage_bytes \u603b\u6570\u9664\u4ee5 kube_node_status_allocatable_memory_bytes \u603b\u6570\u6765\u8ba1\u7b97\u5185\u5b58\u5229\u7528\u7387\uff1a avg_over_time(sum(container_memory_usage_bytes)[15m:15m]) / avg_over_time(sum(kube_node_status_allocatable_memory_bytes)[5m:5m]) Load time: 18656ms 2 \u8bb0\u5f55\u89c4\u5219 \u6211\u4eec\u8bf4\u4e86 Prometheus \u63d0\u4f9b\u4e86\u4e00\u79cd\u53eb\u505a \u8bb0\u5f55\u89c4\u5219\uff08 Recording Rule \uff09 \u7684\u65b9\u5f0f\u53ef\u4ee5\u6765\u4f18\u5316\u6211\u4eec\u7684\u67e5\u8be2\u8bed\u53e5\uff0c\u8bb0\u5f55\u89c4\u5219\u7684\u57fa\u672c\u601d\u60f3\u662f\uff0c \u5b83\u5141\u8bb8\u6211\u4eec\u57fa\u4e8e\u5176\u4ed6\u65f6\u95f4\u5e8f\u5217\u521b\u5efa\u81ea\u5b9a\u4e49\u7684 meta-time \u5e8f\u5217 \uff0c\u5982\u679c\u4f60\u4f7f\u7528 Prometheus Operator \u7684\u8bdd\u53ef\u4ee5\u53d1\u73b0 Prometheus \u4e2d \u5df2\u7ecf\u6709\u4e86\u5927\u91cf\u6b64\u7c7b\u89c4\u5219 \uff0c\u6bd4\u5982\uff1a groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{image!=\"\", container!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate - expr: | sum(container_memory_usage_bytes{image!=\"\", container!=\"\"}) by (namespace) record: namespace:container_memory_usage_bytes:sum \u4e0a\u9762\u7684\u8fd9\u4e24\u4e2a\u89c4\u5219\u5c31\u5b8c\u5168\u53ef\u4ee5\u6267\u884c\u4e0a\u9762\u6211\u4eec\u7684\u67e5\u8be2\uff0c\u5b83\u4eec\u4f1a\u8fde\u7eed\u6267\u884c\u5e76\u4ee5\u5f88\u5c0f\u7684\u65f6\u95f4\u5e8f\u5217\u5c06\u7ed3\u679c\u5b58\u50a8\u8d77\u6765\u3002 sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) \u5c06\u4ee5\u9884\u5b9a\u4e49\u7684\u65f6\u95f4\u95f4\u9694\u8fdb\u884c\u8bc4\u4f30\uff0c\u5e76\u5b58\u50a8\u4e3a\u65b0\u7684\u6307\u6807\uff1a namespace:container_cpu_usage_seconds_total:sum_rate \uff0c\u4e0e\u5185\u5b58\u67e5\u8be2\u76f8\u540c\u3002 \u73b0\u5728\uff0c\u6211\u53ef\u4ee5\u5c06\u67e5\u8be2\u66f4\u6539\u4e3a\u5982\u4e0b\u6240\u793a\u5f97\u51fa CPU \u5229\u7528\u7387\uff1a sum(namespace:container_cpu_usage_seconds_total:sum_rate) / avg_over_time(sum(kube_node_status_allocatable_cpu_cores)[5m:5m]) Load time: 1077ms \u73b0\u5728\uff0c\u5b83\u7684\u8fd0\u884c\u901f\u5ea6\u63d0\u9ad8\u4e8614\u500d\uff01 \u540c\u6837\u7684\u65b9\u5f0f\u8ba1\u7b97\u5185\u5b58\u5229\u7528\u7387\uff1a sum(namespace:container_memory_usage_bytes:sum) / avg_over_time(sum(kube_node_status_allocatable_memory_bytes)[5m:5m]) Load time: 677ms \u73b0\u5728\u8fd0\u884c\u901f\u5ea6\u63d0\u9ad8\u4e8627\u500d\uff01 3 \u8bb0\u5f55\u89c4\u5219\u7528\u6cd5 \u5728 Prometheus \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 rule_files \u5b9a\u4e49 recoding rule \u89c4\u5219\u6587\u4ef6\u7684\u8bbf\u95ee\u8def\u5f84\uff0c\u548c\u5b9a\u4e49\u62a5\u8b66\u89c4\u5219\u7684\u65b9\u5f0f\u57fa\u672c\u4e00\u81f4 \uff1a rule_files: [ - <filepath_glob> ... ] \u6bcf\u4e00\u4e2a\u89c4\u5219\u6587\u4ef6\u901a\u8fc7\u4ee5\u4e0b\u683c\u5f0f\u8fdb\u884c\u5b9a\u4e49\uff1a groups: [ - <rule_group> ] \u4e00\u4e2a\u7b80\u5355\u7684\u89c4\u5219\u6587\u4ef6\u53ef\u80fd\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\uff1a groups: - name: example rules: - record: job:http_inprogress_requests:sum expr: sum(http_inprogress_requests) by (job) rule_group \u7684\u5177\u4f53\u914d\u7f6e\u9879\u5982\u4e0b\u6240\u793a\uff1a # \u5206\u7ec4\u7684\u540d\u79f0\uff0c\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5fc5\u987b\u662f\u552f\u4e00\u7684 name: <string> # \u8bc4\u4f30\u5206\u7ec4\u4e2d\u89c4\u5219\u7684\u9891\u7387 [ interval: <duration> | default = global.evaluation_interval ] rules: [ - <rule> ... ] \u4e0e\u544a\u8b66\u89c4\u5219\u4e00\u81f4\uff0c\u4e00\u4e2a group \u4e0b\u53ef\u4ee5\u5305\u542b\u591a\u6761\u89c4\u5219 rule\u3002 # \u8f93\u51fa\u7684\u65f6\u95f4\u5e8f\u5217\u540d\u79f0\uff0c\u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u7684 metric \u540d\u79f0 record: <string> # \u8981\u8ba1\u7b97\u7684 PromQL \u8868\u8fbe\u5f0f\uff0c\u6bcf\u4e2a\u8bc4\u4f30\u5468\u671f\u90fd\u662f\u5728\u5f53\u524d\u65f6\u95f4\u8fdb\u884c\u8bc4\u4f30\u7684\uff0c\u7ed3\u679c\u8bb0\u5f55\u4e3a\u4e00\u7ec4\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\uff0cmetrics \u540d\u79f0\u7531 record \u8bbe\u7f6e expr: <string> # \u6dfb\u52a0\u6216\u8005\u8986\u76d6\u7684\u6807\u7b7e labels: [ <labelname>: <labelvalue> ] \u6839\u636e\u89c4\u5219\u4e2d\u7684\u5b9a\u4e49\uff0c Prometheus \u4f1a\u5728\u540e\u53f0\u5b8c\u6210 expr \u4e2d\u5b9a\u4e49\u7684 PromQL \u8868\u8fbe\u5f0f\u8ba1\u7b97\uff0c\u5e76\u4e14\u5c06\u8ba1\u7b97\u7ed3\u679c\u4fdd\u5b58\u5230\u65b0\u7684\u65f6\u95f4\u5e8f\u5217 record \u4e2d\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u901a\u8fc7 labels \u6807\u7b7e\u4e3a\u8fd9\u4e9b\u6837\u672c\u6dfb\u52a0\u989d\u5916\u7684\u6807\u7b7e\u3002 \u8fd9\u4e9b\u89c4\u5219\u6587\u4ef6\u7684\u8ba1\u7b97\u9891\u7387\u9ed8\u8ba4\u4e0e\u544a\u8b66\u89c4\u5219\u8ba1\u7b97\u9891\u7387\u4e00\u81f4\uff0c\u90fd\u901a\u8fc7 global.evaluation_interval \u8fdb\u884c\u5b9a\u4e49: global: [ evaluation_interval: <duration> | default = 1m ]","title":"6 Prometheus\u8bb0\u5f55\u89c4\u5219\u7684\u4f7f\u7528(Recording Rule)"},{"location":"chap8/6Promql_adv1/#6-prometheusrecording-rule","text":"PromQL \u8bed\u53e5\u67e5\u8be2\u6027\u80fd\u4f18\u5316 Prometheus \u4f5c\u4e3a\u73b0\u5728\u6700\u706b\u7684\u4e91\u539f\u751f\u76d1\u63a7\u5de5\u5177\uff0c\u5b83\u7684\u4f18\u79c0\u8868\u73b0\u662f\u6bcb\u5eb8\u7f6e\u7591\u7684\u3002\u4f46\u662f\u5728\u6211\u4eec\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5b58\u50a8\u5728 Prometheus \u4e2d\u7684\u76d1\u63a7\u6307\u6807\u6570\u636e\u8d8a\u6765\u8d8a\u591a\uff0c\u67e5\u8be2\u7684\u9891\u7387\u4e5f\u5728\u4e0d\u65ad\u7684\u589e\u52a0\uff0c\u5f53\u6211\u4eec\u7528 Grafana \u6dfb\u52a0\u66f4\u591a\u7684 Dashboard \u7684\u65f6\u5019\uff0c\u53ef\u80fd\u6162\u6162\u5730\u4f1a\u4f53\u9a8c\u5230 Grafana \u5df2\u7ecf\u65e0\u6cd5\u6309\u65f6\u6e32\u67d3\u56fe\u8868\uff0c\u5e76\u4e14\u5076\u5c14\u8fd8\u4f1a\u51fa\u73b0\u8d85\u65f6\u7684\u60c5\u51b5\uff0c\u7279\u522b\u662f\u5f53\u6211\u4eec\u5728\u957f\u65f6\u95f4\u6c47\u603b\u5927\u91cf\u7684\u6307\u6807\u6570\u636e\u7684\u65f6\u5019\uff0c Prometheus \u67e5\u8be2\u8d85\u65f6\u7684\u60c5\u51b5\u53ef\u80fd\u66f4\u591a\u4e86\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u4e00\u79cd\u80fd\u591f\u7c7b\u4f3c\u4e8e\u540e\u53f0\u6279\u5904\u7406\u7684\u673a\u5236\u5728\u540e\u53f0\u5b8c\u6210\u8fd9\u4e9b\u590d\u6742\u8fd0\u7b97\u7684\u8ba1\u7b97\uff0c\u5bf9\u4e8e\u4f7f\u7528\u8005\u800c\u8a00\u53ea\u9700\u8981\u67e5\u8be2\u8fd9\u4e9b\u8fd0\u7b97\u7ed3\u679c\u5373\u53ef\u3002 Prometheus \u63d0\u4f9b\u4e00\u79cd\u8bb0\u5f55\u89c4\u5219\uff08 Recording Rule \uff09 \u6765\u652f\u6301\u8fd9\u79cd\u540e\u53f0\u8ba1\u7b97\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u590d\u6742\u67e5\u8be2\u7684 PromQL \u8bed\u53e5\u7684\u6027\u80fd\u4f18\u5316\uff0c\u63d0\u9ad8\u67e5\u8be2\u6548\u7387","title":"6 Prometheus\u8bb0\u5f55\u89c4\u5219\u7684\u4f7f\u7528(Recording Rule)"},{"location":"chap8/6Promql_adv1/#1","text":"\u6bd4\u5982\u6211\u4eec\u60f3\u8981\u4e86\u89e3 Kubernetes \u8282\u70b9\u4e4b\u95f4 CPU \u548c\u5185\u5b58\u7684\u5b9e\u9645\u5229\u7528\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 container_cpu_usage_seconds_total \u548c container_memory_usage_bytes \u8fd9\u4e24\u4e2a\u6307\u6807\u6765\u67e5\u8be2 CPU \u548c\u5185\u5b58\u7684\u5229\u7528\u7387\u3002 \u56e0\u4e3a\u6bcf\u4e2a\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u90fd\u4f1a\u6536\u96c6\u8fd9\u4e24\u4e2a\u6307\u6807\u8fdb\u884c\uff0c\u4f46\u662f\u9700\u8981\u77e5\u9053\uff0c\u5bf9\u4e8e\u7a0d\u5fae\u5927\u70b9\u7684\u7ebf\u4e0a\u73af\u5883\uff0c\u53ef\u80fd\u6211\u4eec\u540c\u65f6\u8fd0\u884c\u7740\u6210\u5343\u4e0a\u4e07\u7684\u5bb9\u5668\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u4eec\u4ee5\u6bcf5\u5206\u949f\u7684\u9891\u7387\u53bb\u67e5\u8be2\u4e0b\u4e00\u5468\u5185\u6570\u5343\u4e2a\u5bb9\u5668\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c Prometheus \u5c31\u6bd4\u8f83\u96be\u4ee5\u5feb\u901f\u8fdb\u884c\u6570\u636e\u67e5\u8be2\u4e86\u3002 \u6bd4\u5982\u6211\u4eec\u7528 container_cpu_usage_seconds_total \u603b\u6570\u9664\u4ee5 kube_node_status_allocatable_cpu_cores \u603b\u6570\u5f97\u51fa CPU \u5229\u7528\u7387\uff1a sum(rate(container_cpu_usage_seconds_total[5m])) / avg_over_time(sum(kube_node_status_allocatable_cpu_cores)[5m:5m]) Load time: 15723ms \u4f7f\u7528\u6eda\u52a8\u7a97\u53e3\u5c06 container_memory_usage_bytes \u603b\u6570\u9664\u4ee5 kube_node_status_allocatable_memory_bytes \u603b\u6570\u6765\u8ba1\u7b97\u5185\u5b58\u5229\u7528\u7387\uff1a avg_over_time(sum(container_memory_usage_bytes)[15m:15m]) / avg_over_time(sum(kube_node_status_allocatable_memory_bytes)[5m:5m]) Load time: 18656ms","title":"1 \u95ee\u9898"},{"location":"chap8/6Promql_adv1/#2","text":"\u6211\u4eec\u8bf4\u4e86 Prometheus \u63d0\u4f9b\u4e86\u4e00\u79cd\u53eb\u505a \u8bb0\u5f55\u89c4\u5219\uff08 Recording Rule \uff09 \u7684\u65b9\u5f0f\u53ef\u4ee5\u6765\u4f18\u5316\u6211\u4eec\u7684\u67e5\u8be2\u8bed\u53e5\uff0c\u8bb0\u5f55\u89c4\u5219\u7684\u57fa\u672c\u601d\u60f3\u662f\uff0c \u5b83\u5141\u8bb8\u6211\u4eec\u57fa\u4e8e\u5176\u4ed6\u65f6\u95f4\u5e8f\u5217\u521b\u5efa\u81ea\u5b9a\u4e49\u7684 meta-time \u5e8f\u5217 \uff0c\u5982\u679c\u4f60\u4f7f\u7528 Prometheus Operator \u7684\u8bdd\u53ef\u4ee5\u53d1\u73b0 Prometheus \u4e2d \u5df2\u7ecf\u6709\u4e86\u5927\u91cf\u6b64\u7c7b\u89c4\u5219 \uff0c\u6bd4\u5982\uff1a groups: - name: k8s.rules rules: - expr: | sum(rate(container_cpu_usage_seconds_total{image!=\"\", container!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate - expr: | sum(container_memory_usage_bytes{image!=\"\", container!=\"\"}) by (namespace) record: namespace:container_memory_usage_bytes:sum \u4e0a\u9762\u7684\u8fd9\u4e24\u4e2a\u89c4\u5219\u5c31\u5b8c\u5168\u53ef\u4ee5\u6267\u884c\u4e0a\u9762\u6211\u4eec\u7684\u67e5\u8be2\uff0c\u5b83\u4eec\u4f1a\u8fde\u7eed\u6267\u884c\u5e76\u4ee5\u5f88\u5c0f\u7684\u65f6\u95f4\u5e8f\u5217\u5c06\u7ed3\u679c\u5b58\u50a8\u8d77\u6765\u3002 sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) \u5c06\u4ee5\u9884\u5b9a\u4e49\u7684\u65f6\u95f4\u95f4\u9694\u8fdb\u884c\u8bc4\u4f30\uff0c\u5e76\u5b58\u50a8\u4e3a\u65b0\u7684\u6307\u6807\uff1a namespace:container_cpu_usage_seconds_total:sum_rate \uff0c\u4e0e\u5185\u5b58\u67e5\u8be2\u76f8\u540c\u3002 \u73b0\u5728\uff0c\u6211\u53ef\u4ee5\u5c06\u67e5\u8be2\u66f4\u6539\u4e3a\u5982\u4e0b\u6240\u793a\u5f97\u51fa CPU \u5229\u7528\u7387\uff1a sum(namespace:container_cpu_usage_seconds_total:sum_rate) / avg_over_time(sum(kube_node_status_allocatable_cpu_cores)[5m:5m]) Load time: 1077ms \u73b0\u5728\uff0c\u5b83\u7684\u8fd0\u884c\u901f\u5ea6\u63d0\u9ad8\u4e8614\u500d\uff01 \u540c\u6837\u7684\u65b9\u5f0f\u8ba1\u7b97\u5185\u5b58\u5229\u7528\u7387\uff1a sum(namespace:container_memory_usage_bytes:sum) / avg_over_time(sum(kube_node_status_allocatable_memory_bytes)[5m:5m]) Load time: 677ms \u73b0\u5728\u8fd0\u884c\u901f\u5ea6\u63d0\u9ad8\u4e8627\u500d\uff01","title":"2 \u8bb0\u5f55\u89c4\u5219"},{"location":"chap8/6Promql_adv1/#3","text":"\u5728 Prometheus \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 rule_files \u5b9a\u4e49 recoding rule \u89c4\u5219\u6587\u4ef6\u7684\u8bbf\u95ee\u8def\u5f84\uff0c\u548c\u5b9a\u4e49\u62a5\u8b66\u89c4\u5219\u7684\u65b9\u5f0f\u57fa\u672c\u4e00\u81f4 \uff1a rule_files: [ - <filepath_glob> ... ] \u6bcf\u4e00\u4e2a\u89c4\u5219\u6587\u4ef6\u901a\u8fc7\u4ee5\u4e0b\u683c\u5f0f\u8fdb\u884c\u5b9a\u4e49\uff1a groups: [ - <rule_group> ] \u4e00\u4e2a\u7b80\u5355\u7684\u89c4\u5219\u6587\u4ef6\u53ef\u80fd\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\uff1a groups: - name: example rules: - record: job:http_inprogress_requests:sum expr: sum(http_inprogress_requests) by (job) rule_group \u7684\u5177\u4f53\u914d\u7f6e\u9879\u5982\u4e0b\u6240\u793a\uff1a # \u5206\u7ec4\u7684\u540d\u79f0\uff0c\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5fc5\u987b\u662f\u552f\u4e00\u7684 name: <string> # \u8bc4\u4f30\u5206\u7ec4\u4e2d\u89c4\u5219\u7684\u9891\u7387 [ interval: <duration> | default = global.evaluation_interval ] rules: [ - <rule> ... ] \u4e0e\u544a\u8b66\u89c4\u5219\u4e00\u81f4\uff0c\u4e00\u4e2a group \u4e0b\u53ef\u4ee5\u5305\u542b\u591a\u6761\u89c4\u5219 rule\u3002 # \u8f93\u51fa\u7684\u65f6\u95f4\u5e8f\u5217\u540d\u79f0\uff0c\u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u7684 metric \u540d\u79f0 record: <string> # \u8981\u8ba1\u7b97\u7684 PromQL \u8868\u8fbe\u5f0f\uff0c\u6bcf\u4e2a\u8bc4\u4f30\u5468\u671f\u90fd\u662f\u5728\u5f53\u524d\u65f6\u95f4\u8fdb\u884c\u8bc4\u4f30\u7684\uff0c\u7ed3\u679c\u8bb0\u5f55\u4e3a\u4e00\u7ec4\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\uff0cmetrics \u540d\u79f0\u7531 record \u8bbe\u7f6e expr: <string> # \u6dfb\u52a0\u6216\u8005\u8986\u76d6\u7684\u6807\u7b7e labels: [ <labelname>: <labelvalue> ] \u6839\u636e\u89c4\u5219\u4e2d\u7684\u5b9a\u4e49\uff0c Prometheus \u4f1a\u5728\u540e\u53f0\u5b8c\u6210 expr \u4e2d\u5b9a\u4e49\u7684 PromQL \u8868\u8fbe\u5f0f\u8ba1\u7b97\uff0c\u5e76\u4e14\u5c06\u8ba1\u7b97\u7ed3\u679c\u4fdd\u5b58\u5230\u65b0\u7684\u65f6\u95f4\u5e8f\u5217 record \u4e2d\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u901a\u8fc7 labels \u6807\u7b7e\u4e3a\u8fd9\u4e9b\u6837\u672c\u6dfb\u52a0\u989d\u5916\u7684\u6807\u7b7e\u3002 \u8fd9\u4e9b\u89c4\u5219\u6587\u4ef6\u7684\u8ba1\u7b97\u9891\u7387\u9ed8\u8ba4\u4e0e\u544a\u8b66\u89c4\u5219\u8ba1\u7b97\u9891\u7387\u4e00\u81f4\uff0c\u90fd\u901a\u8fc7 global.evaluation_interval \u8fdb\u884c\u5b9a\u4e49: global: [ evaluation_interval: <duration> | default = 1m ]","title":"3 \u8bb0\u5f55\u89c4\u5219\u7528\u6cd5"},{"location":"chap8/9promql_6errors/","text":"\u4f7f\u7528 Prometheus PromQL\u65f6\u9700\u8981\u907f\u514d\u8fd96\u4e2a\u9519\u8bef https://promlabs.com/blog/2022/12/11/avoid-these-6-mistakes-when-getting-started-with-prometheus \uff0c\u8fd9\u4e9b\u90fd\u662f Prometheus \u65b0\u624b\u7ecf\u5e38\u72af\u7684\u9519\u8bef\u3002 \u9519\u8bef 1\uff1a\u9ad8\u57fa\u6570\u70b8\u5f39 \u8fd9\u662f Prometheus \u4f7f\u7528\u8005\u7ecf\u5e38\u4f1a\u72af\u7684\u4e00\u4e2a\u9519\uff0c\u56e0\u4e3a Prometheus \u65f6\u5e8f\u662f\u57fa\u4e8e\u591a\u6807\u7b7e\u7684\uff0c\u5b83\u975e\u5e38\u7075\u6d3b\uff0c \u6709\u65f6\u4f60\u60f3\u65b0\u589e\u4e00\u4e2a\u6807\u7b7e\uff0c\u4ece\u800c\u5c06\u4e00\u4e2a\u7c97\u7c92\u5ea6\u7684\u6307\u6807\u8fdb\u884c\u62c6\u5206\uff0c\u4f46\u5207\u8bb0\u6dfb\u52a0\u7684\u6807\u7b7e\u503c\u5e94\u8be5\u505a\u5230\u5c3d\u91cf\u6536\u655b\uff0c\u4e0d\u7136\u4f1a\u5bfc\u81f4\u540c\u4e00\u6307\u6807\u540d\u7684\u6807\u7b7e\u6570\u91cf\u5de8\u5927\u800c\u5bfc\u81f4 Prometheus \u4e25\u91cd\u7684\u6027\u80fd\u95ee\u9898\uff08OOM\uff09 \u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\u4f60\u6709\u4e00\u4e2a\u53ea\u5305\u542b method \u6807\u7b7e\u7684\u65f6\u95f4\u5e8f\u5217 http_requests_total \uff1a http_requests_total{method=\"POST\"} http_requests_total{method=\"GET\"} http_requests_total{method=\"PUT\"} http_requests_total{method=\"DELETE\"} \u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u5b9a\u4e49\u6ca1\u95ee\u9898\uff0c\u56e0\u4e3a HTTP \u7684 method \u7c7b\u578b\u662f\u6709\u9650\u7684\uff0c\u4f46\u6709\u4e00\u5929\uff0c\u4f60\u53ef\u80fd\u60f3\u6839\u636e\u7528\u6237 id \u8fdb\u884c\u533a\u5206\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff1a http_requests_total{method=\"POST\",user_id=\"1\"} http_requests_total{method=\"POST\",user_id=\"2\"} http_requests_total{method=\"POST\",user_id=\"3\"} [\u2026many more\u2026] http_requests_total{method=\"POST\",user_id=\"16434313\"} http_requests_total{method=\"GET\",user_id=\"1\"} http_requests_total{method=\"GET\",user_id=\"2\"} http_requests_total{method=\"GET\",user_id=\"3\"} [\u2026many more\u2026] http_requests_total{method=\"GET\",user_id=\"16434313\"} [\u2026many more\u2026] \u5982\u679c\u4f60\u6709\u975e\u5e38\u591a\u7684\u4e0d\u540c\u7528\u6237\uff0c\u6b64\u65f6\u5c31\u4f1a\u5b58\u5728\u4e25\u91cd\u7684\u9ad8\u57fa\u6570\u95ee\u9898\uff0c\u8fd9\u5c06\u5bfc\u81f4 Prometheus \u5185\u5b58\u4f7f\u7528\u6fc0\u589e\uff0c\u6700\u7ec8\u53ef\u80fd\u56e0\u4e3a OOM \u800c\u5bfc\u81f4\u5d29\u6e83\u3002 \u6240\u4ee5\u8bf7\u7262\u8bb0\uff1a \u6307\u6807\u4e0a\u6807\u7b7e\u7684\u6bcf\u4e00\u79cd\u552f\u4e00\u7ec4\u5408\u90fd\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u65f6\u95f4\u5e8f\u5217\uff0cPrometheus \u90fd\u4f1a\u5bf9\u5176\u8fdb\u884c\u6444\u53d6\u3001\u7d22\u5f15\u3001\u5b58\u50a8\u548c\u5904\u7406 \u3002 \u867d\u7136\u9488\u5bf9\u5355\u4e2a\u6807\u7b7e\u7684\u4e0d\u540c\u503c\u7684\u6570\u91cf\u6ca1\u6709\u660e\u786e\u7684\u9650\u5236\uff0c\u4f46\u56e0\u4e3a\u4e0d\u540c\u503c\u90fd\u662f\u4e00\u4e2a\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u4f60\u9700\u8981\u786e\u4fdd\u5176\u6570\u91cf\u4fdd\u6301\u5728\u4f60 Prometheus \u670d\u52a1\u5668\u5bb9\u91cf\u4e4b\u4e0b\uff08\u4e00\u4e2a\u5927\u578b Prometheus \u5355\u8282\u70b9\u80fd\u591f\u5904\u7406\u51e0\u767e\u4e07\u4e2a\u65f6\u95f4\u5e8f\u5217\uff09\uff0c\u6240\u4ee5\u4f60\u5728\u8bbe\u8ba1\u65f6\u95f4\u5e8f\u5217\u7684\u6807\u7b7e\u7684\u65f6\u5019\uff0c\u9700\u8981\u786e\u4fdd\u5b83\u4eec\u7684\u6240\u6709\u7ec4\u5408\u603b\u6570\u5728\u4f60 Prometheus \u670d\u52a1\u5668\u53ef\u4ee5\u627f\u53d7\u7684\u8303\u56f4\u5185\u3002 \u5bf9\u6b64\uff0c\u6709\u4e00\u4e9b\u6807\u7b7e\u503c\u6211\u4eec\u8981\u7279\u522b\u6ce8\u610f\u907f\u514d\uff0c\u4f8b\u5982\uff1a \u516c\u7f51 IP \u6216\u8005\u90ae\u4ef6\u5730\u5740\u3002 HTTP \u8bf7\u6c42 Path \u5168\u8def\u5f84\uff0c\u5c24\u5176\u8fd9\u4e9b\u8def\u5f84\u5e26\u6709\u52a8\u6001 ID \u7b49\u4fe1\u606f\u3002 \u8fdb\u7a0b ID\uff08\u9664\u975e\u662f\u6709\u9650\u96c6\u5408\uff09\u3002 \u6709\u65f6\u4f60\u60f3\u5728\u4e0d\u5b8c\u5168\u5220\u9664\u6807\u7b7e\u7684\u60c5\u51b5\u4e0b\u89e3\u51b3\u6807\u7b7e\u9ad8\u57fa\u6570\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u60f3\u529e\u6cd5\u51cf\u5c11\u5176\u503c\u7684\u57fa\u6570\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e /api/users/739567637385/posts/28388445 \u7684 HTTP \u8bf7\u6c42, \u6211\u4eec\u5c06\u52a8\u6001\u4fe1\u606f\u90e8\u5206\u4f7f\u7528 user_id \u548c post_id \u5360\u4f4d\u7b26\u7edf\u4e00\u66ff\u6362\uff0c\u6240\u4ee5\u6574\u4e2a path \u53ef\u4ee5\u66ff\u6362\u4e3a /api/users/{user_id}/posts/{post_id} \uff0c\u4ece\u800c\u6709\u6548\u51cf\u5c11 path \u6807\u7b7e\u7684\u503c\u6570\u91cf \u3002 \u9519\u8bef 2\uff1a\u5728\u544a\u8b66\u8868\u8fbe\u5f0f\u4e2d\u56e0\u805a\u5408\u800c\u4e22\u5931\u6709\u4ef7\u503c\u7684\u6807\u7b7e \u5728\u505a\u544a\u8b66\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u901a\u8fc7\u805a\u5408\u8ba1\u7b97\u53bb\u9664\u4e0d\u5173\u5fc3\u7684\u4e00\u4e9b\u6807\u7b7e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u786e\u5b9a\u67d0\u4e2a\u670d\u52a1\u7684\u603b\u4f53\u9519\u8bef\u7387\uff08\u8de8\u6240\u6709\u6807\u7b7e\u7ef4\u5ea6\uff09\u662f\u5426\u8fc7\u9ad8\uff0c\u53ef\u4ee5\u7f16\u5199\u5982\u4e0b\u7684\u89c4\u5219\uff1a sum(rate(errors_total{job=\"my-job\"}[5m])) > 10 \u8fd9\u770b\u4e0a\u53bb\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c sum() \u805a\u5408\u5668\u4f1a\u53bb\u6389\u65f6\u5e8f\u7684\u6240\u6709\u6807\u7b7e\uff0c\u5b83\u4e0d\u4ec5\u4f1a\u5220\u9664\u4f60\u60f3\u8981\u805a\u5408\u7684\u7ef4\u5ea6\uff08\u5982\u5b9e\u4f8b\u3001\u9519\u8bef\u7c7b\u578b\u7b49\uff09\uff0c\u8fd8\u4f1a\u5220\u9664\u4e00\u4e9b\u6bd4\u8f83\u901a\u7528\u7684\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u5bf9\u4e8e Alertmanager \u4e2d\u8fdb\u884c\u544a\u8b66\u7684\u8def\u7531\u6216\u9759\u9ed8\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u7279\u522b\u662f job \u6807\u7b7e\uff0c\u56e0\u4e3a\u4e0d\u540c job \u901a\u5e38\u7531\u4e0d\u540c\u7684\u8fd0\u7ef4\u56e2\u961f\u8d1f\u8d23\u3002 \u56e0\u6b64\u6211\u4eec\u5e94\u8be5\u5c3d\u53ef\u80fd\u5728\u805a\u5408\u4e2d\u4fdd\u7559\u6b64\u6807\u7b7e\uff0c\u53ef\u4ee5\u4f7f\u7528 sum by(job) (rate(errors_total{job=\"my-job\"}[5m])) > 10 \u8fd9\u4e2a\u544a\u8b66\u8868\u8fbe\u5f0f\u3002 \u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\u662f\u901a\u8fc7\u4f7f\u7528 without() \u805a\u5408\u4fee\u9970\u7b26\u66ff\u6362 by() \u805a\u5408\u4fee\u9970\u7b26\uff0c\u4ece\u800c\u663e\u793a\u6392\u9664\u4e0d\u60f3\u8981\u7684\u6807\u7b7e\uff0c\u800c\u5c3d\u53ef\u80fd\u4fdd\u7559\u4e0b\u4e00\u4e9b\u4f60\u4e0d\u786e\u5b9a\u662f\u5426\u9700\u8981\u5220\u9664\u7684\u6807\u7b7e\uff1a sum without(instance, type) (rate(errors_total{job=\"my-job\"}[5m])) > 10 \u8fd9\u6837\uff0c\u805a\u5408\u65f6\u4f60\u6ca1\u6709\u660e\u786e\u6307\u5b9a\u5220\u9664\u7684\u6807\u7b7e\u5728 Alertmanager \u4e2d\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\uff0c\u8fd9\u5bf9\u4e8e\u544a\u8b66\u7684\u805a\u5408\u548c\u8def\u7531\u975e\u5e38\u6709\u7528\uff0c\u4e5f\u80fd\u5e2e\u52a9\u4f60\u66f4\u597d\u4e86\u89e3\u62a5\u8b66\u7684\u6765\u6e90\u3002 \u9519\u8bef 3\uff1a\u4f7f\u7528\u65e0\u4efb\u4f55\u9650\u5b9a\u8303\u56f4\u7684\u9009\u62e9\u5668 \u5728\u7f16\u5199 PromQL \u67e5\u8be2\uff08\u5c24\u5176\u662f\u544a\u8b66\uff09\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u683c\u5916\u5c0f\u5fc3\uff0c\u5e94\u8be5\u4ece\u5173\u5fc3\u7684\u4e1a\u52a1\u6216\u670d\u52a1\u7684\u6570\u636e\u4e2d\u8fdb\u884c\u67e5\u8be2\uff0c\u800c\u4e0d\u662f\u5168\u5c40\u8303\u56f4\u3002 \u56e0\u4e3a\u4e0d\u540c\u7684\u4e1a\u52a1\u53ef\u80fd\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u6307\u6807\u540d\u79f0\uff0c\u5b83\u4eec\u751a\u81f3\u8868\u8fbe\u4e86\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u76f8\u540c\u6307\u6807\u540d\u79f0\u7684\u670d\u52a1\u4f1a\u8d8a\u6765\u8d8a\u591a\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u4f60\u7684\u544a\u8b66\u89c4\u5219\u6216\u8005\u4eea\u8868\u76d8\u6570\u636e\u3002 \u4e3a\u907f\u514d\u4e0d\u5c0f\u5fc3\u4ece\u4e0d\u76f8\u5173\u7684\u4efb\u52a1\u6216\u8005\u670d\u52a1\u4e2d\u67e5\u8be2\u6570\u636e\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528 job \u6807\u7b7e\u6765\u9650\u5b9a\u9009\u62e9\u5668\u7684\u8303\u56f4\uff0c\u786e\u4fdd\u5176\u67e5\u8be2\u7684\u6570\u636e\u90fd\u662f\u4f60\u5173\u5fc3\u7684\u4e1a\u52a1\u6216\u670d\u52a1\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u67e5\u8be2\u5c31\u662f\u4e00\u4e2a\u4e0d\u5b89\u5168\u7684 \u88f8 \u9009\u62e9\u5668\uff0c\u5b83\u53ef\u80fd\u4f1a\u4ece\u4f60\u4e0d\u671f\u671b\u7684\u5176\u4ed6 job \u4e2d\u9009\u62e9\u5177\u6709\u76f8\u540c\u6307\u6807\u540d\u7684\u6570\u636e\uff1a rate(errors_total[5m]) > 10 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 {job=\"my-job\"} \u7684\u9009\u62e9\u5668\u4ece\u800c\u5c06\u6307\u6807\u9650\u5b9a\u5728 my-job \u670d\u52a1\u8303\u56f4\uff1a rate(errors_total{job=\"my-job\"}[5m]) > 10 \u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u66f4\u5b89\u5168\u7684\u65b9\u5f0f\uff0c\u5b83\u53ef\u4ee5\u6709\u6548\u907f\u514d\u4ece\u65e0\u5173\u670d\u52a1\u4e2d\u67e5\u8be2\u6570\u636e\uff0c\u5bf9\u4f60\u544a\u8b66\u4ea7\u751f\u5e72\u6270\uff0c\u4e5f\u80fd\u5927\u5927\u63d0\u5347\u67e5\u8be2\u6027\u80fd\u3002 \u9519\u8bef 4\uff1a\u544a\u8b66\u89c4\u5219\u6ca1\u6709\u4f7f\u7528 for \u5b57\u6bb5 for \u5b57\u6bb5\u4e3b\u8981\u7528\u4e8e\u544a\u8b66\u89c4\u5219\u8bc4\u4f30\uff0c\u5b83\u5141\u8bb8\u4f60\u80fd\u591f\u6307\u5b9a\u4efb\u610f\u544a\u8b66\u9700\u8981\u5728\u8fde\u7eed\u7684\u89c4\u5219\u8bc4\u4f30\u5468\u671f\u4e2d\u51fa\u73b0\u591a\u957f\u65f6\u95f4\u624d\u4ece pending \u72b6\u6001\u53d8\u4e3a firing\uff0c\u5927\u591a\u6570\u544a\u8b66\u89c4\u5219\u53ef\u80fd\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u8be5\u5b57\u6bb5\uff0c\u53ea\u9700\u8981\u4e24\u4e2a\u8bc4\u4f30\u5468\u671f\u5373\u53ef\u89e6\u53d1\u544a\u8b66\uff0c\u4f46\u6709\u65f6\uff0c\u6211\u4eec\u4e3a\u4e86\u6392\u9664\u6296\u52a8\u7684\u5e72\u6270\uff0c\u6bd4\u5982\u4e00\u4e9b CPU \u4f7f\u7528\u7387\uff0c\u6216\u8005\u67d0\u4e2a\u8282\u70b9\u56e0\u4e3a\u4e00\u4e24\u6b21\u6293\u53d6\u5f02\u5e38\u5c31\u5224\u5b9a down \u4e86 \u5982\u4e0b\u8b66\u62a5\u89c4\u5219\uff0c\u5b83\u4f7f\u7528 up \u6307\u6807\u6765\u67e5\u627e\u65e0\u6cd5\u6210\u529f\u6293\u53d6\u7684\u76ee\u6807\uff0c\u5e76\u7701\u7565\u4e86\u53ef\u9009\u7684 for \u4fee\u9970\u7b26 alert: InstanceDown expr: up == 0 \u4e00\u6b21\u5931\u8d25\u7684\u6293\u53d6\uff08\u5f88\u5bb9\u6613\u53d1\u751f\uff09\u5c06\u5bfc\u81f4\u89e6\u53d1\u6b64\u89c4\u5219\uff0c\u901a\u5e38\u4f60\u5e0c\u671b\u8ba9\u4f60\u7684\u8b66\u62a5\u89c4\u5219\u4e0d\u90a3\u4e48\u5bb9\u6613\u89e6\u53d1\uff0c\u5e76\u81f3\u5c11\u7b49\u5f85\u51e0\u5206\u949f\uff0c\u770b\u770b\u95ee\u9898\u662f\u5426\u771f\u7684\u5b58\u5728\uff0c\u7136\u540e\u518d\u89e6\u53d1\u901a\u77e5 alert: InstanceDown expr: up == 0 for: 5m # \u4e00\u4e2a\u5b9e\u4f8b\u53ea\u6709\u771f\u7684\u6302\u6389\u6216\u8005\u65e0\u6cd5\u8bbf\u95ee\u957f\u8fbe 5 \u5206\u949f\u624d\u521b\u5efa\u544a\u8b66\u4fe1\u606f \u4e0d\u5e26 for \u9488\u5bf9\u4e00\u4e9b\u5185\u7f6e\u7684\u5e26\u6709\u5e73\u5747\u6570\u8ba1\u7b97\u7684\u67e5\u8be2\u8868\u8fbe\u5f0f\u4e5f\u540c\u6837\u6709\u95ee\u9898 \uff0c\u4f8b\u5982\u8868\u793a\u9ad8\u9519\u8bef\u7387\u7684\u544a\u8b66\uff1a alert: HighErrorRate expr: rate(my_errors_total{job=\"my-job\"}[5m]) > 10 \u8fd9\u4e2a\u89c4\u5219\u5c06\u5728\u7b2c\u4e00\u6b21\u67e5\u8be2\u5230\u6700\u8fd1 5m \u4e2d\u8be5\u9519\u8bef\u6570\u7684\u5e73\u5747\u503c > 10 \u5c31\u7acb\u5373\u521b\u5efa\u544a\u8b66\uff0c\u867d\u7136 5m \u7684\u5e73\u5747\u5468\u671f\u80fd\u591f\u5e26\u6765\u4e00\u5b9a\u7684\u7a33\u5065\u6027\uff0c\u4f46\u662f\u7531\u4e8e Promtheus rate() \u7279\u6027\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u4e00\u4e2a\u5b8c\u5168\u65b0\u7684\u670d\u52a1\u6216\u8005\u4e00\u6bb5\u65f6\u95f4\u672a\u6536\u96c6\u5230\u6570\u636e\u4f1a\u53d1\u751f\u4ec0\u4e48 5 \u5206\u949f\u7684 rate() \u7a97\u53e3\u53ea\u4f1a\u8003\u8651\u4e00\u4e9b\u6700\u8fd1\u7684\u6837\u672c\uff0c\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4f1a\u5bf9\u4e94\u5206\u949f\u7684\u6570\u636e\u8fdb\u884c\u5e73\u5747\u3002 \u65f6\u95f4\u5e8f\u5217\u751a\u81f3\u6839\u672c\u8fd8\u6ca1\u4e94\u5206\u949f\u6570\u636e\uff0c\u8be5\u89c4\u5219\u4e5f\u53ef\u80fd\u4f1a\u7acb\u5373\u521b\u5efa\u544a\u8b66\u3002 \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 for \u4fee\u9970\u7b26\u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff1a alert: HighErrorRate expr: rate(my_errors_total{job=\"my-job\"}[5m]) > 10 for: 5m \u51e0\u4e4e\u5927\u591a\u6570\u7684\u544a\u8b66\u89c4\u5219\u90fd\u53ef\u4ee5\u6dfb\u52a0\u6b64\u53c2\u6570\uff0c\u4ece\u800c\u4f7f\u62a5\u8b66\u89c4\u5219\u66f4\u52a0\u7a33\u5065\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u4e5f\u4f1a\u5bfc\u81f4\u8b66\u62a5\u7684\u53cd\u5e94\u65f6\u95f4\u53d8\u6162\uff0c\u56e0\u6b64\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5e73\u8861\u70b9\u3002 \u9519\u8bef 5\uff1arate() \u7a97\u53e3\u65f6\u95f4\u592a\u77ed \u5728\u592a\u77ed\u7684\u65f6\u95f4\u7a97\u53e3\u5185\u8ba1\u7b97\u901f\u7387\u65f6\uff0c\u5f97\u5230\u7684\u56fe\u8868\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0d\u8fde\u7eed\u4e2d\u65ad\u7684\u60c5\u51b5\uff0c\u4f8b\u5982 rate(my_counter[1m])\uff1frate() \u548c \u5176\u4ed6 PromQL \u51fd\u6570\uff08\u5982 increase() \u3001 irate() \u3001 deriv() \uff09\u544a\u8bc9\u4f60\u65f6\u95f4\u5e8f\u5217\u5728\u7ed9\u5b9a\u65f6\u95f4\u7a97\u53e3\u5185\u4e0a\u5347\u6216\u4e0b\u964d\u7684\u901f\u5ea6\uff0c\u5728\u8f93\u5165\u65f6\u95f4\u7a97\u53e3\u4e0b\u81f3\u5c11\u9700\u8981\u4e24\u4e2a\u6837\u672c\uff0c\u4ece\u800c\u80fd\u591f\u544a\u8bc9\u4f60\u8fd9\u4e24\u4e2a\u6837\u672c\u4e4b\u95f4\u7684\u5e8f\u5217\u662f\u5982\u4f55\u53d1\u5c55\u7684 \u3002\u5982\u679c\u5c06\u65f6\u95f4\u7a97\u53e3\u8bbe\u7f6e\u5f97\u592a\u5c0f\uff0c\u5219\u5728\u8be5\u7a97\u53e3\u4e0b\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a\u6216\u96f6\u4e2a\u6837\u672c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\u7a7a\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u91c7\u7528 20s \u7684\u65f6\u95f4\u7a97\u53e3\u5bf9\u4e00\u4e2a 15s \u6293\u53d6\u95f4\u9694\u7684\u6307\u6807\u8fdb\u884c rate()\uff0c\u90a3\u4e48\u5728\u8fd9 20 \u79d2\u65f6\u95f4\u7a97\u53e3\u5185\u5f88\u53ef\u80fd\u4e0d\u4f1a\u6db5\u76d6\u4e24\u4e2a\u6837\u672c\uff0c\u56e0\u6b64\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e0e\u5b9e\u9645\u7ed3\u679c\u5dee\u5f02\u5f88\u5927\u7684\u6bd4\u7387\uff1a \u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u66f4\u6781\u7aef\u7684\u505a\u6cd5\uff1a\u5982\u679c\u5c06 rate \u7a97\u53e3\u7f29\u5c0f\u5230 16s\uff0c\u5f53\u4e24\u4e2a\u76f8\u8ddd 15s \u7684\u70b9\u6070\u597d\u843d\u5728\u4efb\u610f\u5bf9\u9f50\u7684 16s \u7a97\u53e3\u4e2d\u65f6\uff0c\u5219\u53ea\u4f1a\u5076\u5c14\u5f97\u5230\u4e00\u4e2a\u8f93\u51fa\u70b9\uff1a \u5f53\u4f7f\u7528 Grafana \u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 $__rate_interval \u6a21\u677f\u53d8\u91cf\u81ea\u52a8\u4e3a\u4f60\u9009\u62e9\u4e00\u4e2a\u5b89\u5168\u7684\u95f4\u9694\u3002 \u9519\u8bef 6\uff1arate() \u76f8\u5173\u51fd\u6570\u7528\u9519\u4e86\u6307\u6807\u7c7b\u578b \u867d\u7136 PromQL \u5728\u5176\u4ed6\u4e00\u4e9b\u65b9\u9762\u662f\u9759\u6001\u7c7b\u578b\u7684\uff0c\u4f46\u5b83\u4e0d\u80fd\u76f4\u63a5\u544a\u8bc9\u4f60\uff0c\u4f60\u662f\u5426\u628a\u9519\u8bef\u7684\u6307\u6807\u7c7b\u578b\u4f20\u5165\u4e86\u4e00\u4e2a\u4e0d\u662f\u4e3a\u5904\u7406\u5b83\u800c\u8bbe\u8ba1\u7684\u51fd\u6570\u3002 rate() \u51fd\u6570\u7528\u5728 gauge \u7c7b\u578b\u6307\u6807 rate()\u3001irate() \u548c increase() \u51fd\u6570\u88ab\u8bbe\u8ba1\u6210\u4e3a\u4ec5\u9002\u7528\u4e8e Counter \u7c7b\u578b\u6307\u6807\uff0cCounter \u7c7b\u578b\u662f\u8ffd\u8e2a\u7d2f\u8ba1\u8ba1\u6570\u7684\u6307\u6807\uff0c\u8fd9\u4e9b\u8ba1\u6570\u53ea\u4f1a\u4e0a\u5347\uff08\u6c38\u8fdc\u4e0d\u4f1a\u4e0b\u964d\uff09\uff0c\u9664\u4e86\u5728\u8ffd\u8e2a\u8fc7\u7a0b\u4e2d\u5076\u5c14\u56e0\u4e3a\u91cd\u542f\u800c\u91cd\u7f6e\u4e3a 0\u3002 \u4e3a\u4e86\u5728 rate \u8ba1\u7b97\u4e2d\u5c3d\u53ef\u80fd\u6d88\u9664\u8ba1\u6570\u5668\u91cd\u7f6e\u7684\u5f71\u54cd\uff0c\u8fd9\u4e9b\u51fd\u6570\u5c1d\u8bd5\u5c06\u63d0\u4f9b\u7684\u65f6\u95f4\u7a97\u53e3\u5185\u6837\u672c\u7684\u503c\u7684\u4efb\u4f55\u51cf\u5c0f\u90fd\u89e3\u91ca\u4e3a\u91cd\u7f6e\u5e76\u5bf9\u5176\u8fdb\u884c\u8865\u507f\u3002 \u8fd9\u79cd\u8ba1\u6570\u5668\u7684\u91cd\u7f6e\u68c0\u6d4b\u548c\u8865\u507f\u610f\u5473\u7740\u4f60\u53ea\u80fd\u4ece\u8fd9\u4e9b\u51fd\u6570\u4e2d\u83b7\u5f97\u6b63\u6570\u7684\u7ed3\u679c\uff08\u6216 0\uff09\u3002\u5982\u679c\u4f60\u4e0d\u5c0f\u5fc3\u4f20\u5165\u4e86\u4e00\u4e2a\u53ef\u4ee5\u81ea\u7136\u4e0a\u5347\u548c\u4e0b\u964d\u7684\u6307\u6807\uff08\u6bd4\u5982\u5185\u5b58\u4f7f\u7528\u91cf\uff09\uff0cPromQL \u5c06\u65e0\u6cd5\u5224\u65ad\u8fd9\u4e2a\u9519\u8bef\uff0c\u800c\u53ea\u4f1a\u8fd4\u56de\u4e00\u4e2a\u4e0d\u6b63\u786e\u7684\u8f93\u51fa\u503c\u3002\u8fd9\u662f\u56e0\u4e3a\u6bcf\u6b21\u4f60\u7684\u4eea\u8868\u6307\u6807\u4e0b\u964d\u65f6\uff0crate() \u90fd\u4f1a\u5c06\u5176\u7406\u89e3\u4e3a\u8ba1\u6570\u5668\u91cd\u7f6e\u5e76\u4e14\u4f1a\u9519\u8bef\u5730\u201c\u7ea0\u6b63\u201d\u5b83\u3002 deriv() \u51fd\u6570\u7528\u5728 counter \u7c7b\u578b\u6307\u6807 \u4f60\u53ef\u4ee5\u8ba4\u4e3a deriv() \u51fd\u6570\u5927\u81f4\u7b49\u540c\u4e8e rate()\uff0c\u4f46\u5b83\u4f5c\u7528\u4e8e Gauge \u7c7b\u578b\uff0c deriv() \u544a\u8bc9\u4f60\u5728\u8f93\u5165\u65f6\u95f4\u7a97\u53e3\u5185 Gauge \u7c7b\u578b\u6307\u6807\u6bcf\u79d2\u4e0a\u5347\u6216\u4e0b\u964d\u7684\u901f\u5ea6 \u3002 \u867d\u7136\u5e76\u4e0d\u5e38\u89c1\uff0c\u4f46\u8fd9\u91cc\u4e0e rate() \u76f8\u540c\u7684\u9677\u9631\u53ef\u80fd\u4f1a\u7ed9\u4f60\u5e26\u6765\u53e6\u5916\u7684\u56f0\u6270\uff1a\u56e0\u4e3a deriv() \u51fd\u6570\u6ca1\u6709\u5b9e\u73b0\u4efb\u4f55\u56f4\u7ed5 Counter \u7c7b\u578b\u91cd\u7f6e\u7684\u903b\u8f91\uff0c\u8bd5\u56fe\u4f7f\u7528 deriv() \u8ba1\u7b97\u4e00\u4e2a\u5728\u63d0\u4f9b\u7684\u7a97\u53e3\u4e0b\u6709\u91cd\u7f6e\u7684 Counter \u7684\u7c7b\u578b\u6307\u6807\uff0c\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e0d\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u6709\u65f6\u751a\u81f3\u662f\u4e00\u4e2a\u8d1f\u6570\u3002 \u5982\u4f55\u907f\u514d\u4f20\u5165\u9519\u8bef\u7c7b\u578b\u7684\u6307\u6807\uff1f \u7531\u4e8e PromQL \u65e0\u6cd5\u81ea\u52a8\u68c0\u6d4b\u8fd9\u79cd\u4e0d\u6b63\u786e\u7684\u7528\u6cd5\uff0c\u6240\u4ee5\u5728\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u65f6\u5fc5\u987b\u683c\u5916\u5c0f\u5fc3\uff0c\u6211\u4eec\u9664\u4e86\u7ecf\u9a8c\u548c\u5df2\u6709\u77e5\u8bc6\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f9d\u8d56\u4e00\u4e9b\u5f00\u6e90\u9879\u76ee\uff0c\u4f8b\u5982 PromLens \u67e5\u8be2\u6784\u5efa\u5668\u8fd9\u6837\u7684\u5de5\u5177\u6765\u8f85\u52a9\u68c0\u6d4b\u662f\u5426\u4f20\u4e86\u9519\u8bef\u7684\u6307\u6807\u7c7b\u578b\uff1a","title":"9 \u4f7f\u7528 Prometheus PromQL\u65f6\u9700\u8981\u907f\u514d\u8fd96\u4e2a\u9519\u8bef"},{"location":"chap8/9promql_6errors/#prometheus-promql6","text":"https://promlabs.com/blog/2022/12/11/avoid-these-6-mistakes-when-getting-started-with-prometheus \uff0c\u8fd9\u4e9b\u90fd\u662f Prometheus \u65b0\u624b\u7ecf\u5e38\u72af\u7684\u9519\u8bef\u3002","title":"\u4f7f\u7528 Prometheus PromQL\u65f6\u9700\u8981\u907f\u514d\u8fd96\u4e2a\u9519\u8bef"},{"location":"chap8/9promql_6errors/#1","text":"\u8fd9\u662f Prometheus \u4f7f\u7528\u8005\u7ecf\u5e38\u4f1a\u72af\u7684\u4e00\u4e2a\u9519\uff0c\u56e0\u4e3a Prometheus \u65f6\u5e8f\u662f\u57fa\u4e8e\u591a\u6807\u7b7e\u7684\uff0c\u5b83\u975e\u5e38\u7075\u6d3b\uff0c \u6709\u65f6\u4f60\u60f3\u65b0\u589e\u4e00\u4e2a\u6807\u7b7e\uff0c\u4ece\u800c\u5c06\u4e00\u4e2a\u7c97\u7c92\u5ea6\u7684\u6307\u6807\u8fdb\u884c\u62c6\u5206\uff0c\u4f46\u5207\u8bb0\u6dfb\u52a0\u7684\u6807\u7b7e\u503c\u5e94\u8be5\u505a\u5230\u5c3d\u91cf\u6536\u655b\uff0c\u4e0d\u7136\u4f1a\u5bfc\u81f4\u540c\u4e00\u6307\u6807\u540d\u7684\u6807\u7b7e\u6570\u91cf\u5de8\u5927\u800c\u5bfc\u81f4 Prometheus \u4e25\u91cd\u7684\u6027\u80fd\u95ee\u9898\uff08OOM\uff09 \u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\u4f60\u6709\u4e00\u4e2a\u53ea\u5305\u542b method \u6807\u7b7e\u7684\u65f6\u95f4\u5e8f\u5217 http_requests_total \uff1a http_requests_total{method=\"POST\"} http_requests_total{method=\"GET\"} http_requests_total{method=\"PUT\"} http_requests_total{method=\"DELETE\"} \u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u5b9a\u4e49\u6ca1\u95ee\u9898\uff0c\u56e0\u4e3a HTTP \u7684 method \u7c7b\u578b\u662f\u6709\u9650\u7684\uff0c\u4f46\u6709\u4e00\u5929\uff0c\u4f60\u53ef\u80fd\u60f3\u6839\u636e\u7528\u6237 id \u8fdb\u884c\u533a\u5206\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff1a http_requests_total{method=\"POST\",user_id=\"1\"} http_requests_total{method=\"POST\",user_id=\"2\"} http_requests_total{method=\"POST\",user_id=\"3\"} [\u2026many more\u2026] http_requests_total{method=\"POST\",user_id=\"16434313\"} http_requests_total{method=\"GET\",user_id=\"1\"} http_requests_total{method=\"GET\",user_id=\"2\"} http_requests_total{method=\"GET\",user_id=\"3\"} [\u2026many more\u2026] http_requests_total{method=\"GET\",user_id=\"16434313\"} [\u2026many more\u2026] \u5982\u679c\u4f60\u6709\u975e\u5e38\u591a\u7684\u4e0d\u540c\u7528\u6237\uff0c\u6b64\u65f6\u5c31\u4f1a\u5b58\u5728\u4e25\u91cd\u7684\u9ad8\u57fa\u6570\u95ee\u9898\uff0c\u8fd9\u5c06\u5bfc\u81f4 Prometheus \u5185\u5b58\u4f7f\u7528\u6fc0\u589e\uff0c\u6700\u7ec8\u53ef\u80fd\u56e0\u4e3a OOM \u800c\u5bfc\u81f4\u5d29\u6e83\u3002 \u6240\u4ee5\u8bf7\u7262\u8bb0\uff1a \u6307\u6807\u4e0a\u6807\u7b7e\u7684\u6bcf\u4e00\u79cd\u552f\u4e00\u7ec4\u5408\u90fd\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u65f6\u95f4\u5e8f\u5217\uff0cPrometheus \u90fd\u4f1a\u5bf9\u5176\u8fdb\u884c\u6444\u53d6\u3001\u7d22\u5f15\u3001\u5b58\u50a8\u548c\u5904\u7406 \u3002 \u867d\u7136\u9488\u5bf9\u5355\u4e2a\u6807\u7b7e\u7684\u4e0d\u540c\u503c\u7684\u6570\u91cf\u6ca1\u6709\u660e\u786e\u7684\u9650\u5236\uff0c\u4f46\u56e0\u4e3a\u4e0d\u540c\u503c\u90fd\u662f\u4e00\u4e2a\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u4f60\u9700\u8981\u786e\u4fdd\u5176\u6570\u91cf\u4fdd\u6301\u5728\u4f60 Prometheus \u670d\u52a1\u5668\u5bb9\u91cf\u4e4b\u4e0b\uff08\u4e00\u4e2a\u5927\u578b Prometheus \u5355\u8282\u70b9\u80fd\u591f\u5904\u7406\u51e0\u767e\u4e07\u4e2a\u65f6\u95f4\u5e8f\u5217\uff09\uff0c\u6240\u4ee5\u4f60\u5728\u8bbe\u8ba1\u65f6\u95f4\u5e8f\u5217\u7684\u6807\u7b7e\u7684\u65f6\u5019\uff0c\u9700\u8981\u786e\u4fdd\u5b83\u4eec\u7684\u6240\u6709\u7ec4\u5408\u603b\u6570\u5728\u4f60 Prometheus \u670d\u52a1\u5668\u53ef\u4ee5\u627f\u53d7\u7684\u8303\u56f4\u5185\u3002 \u5bf9\u6b64\uff0c\u6709\u4e00\u4e9b\u6807\u7b7e\u503c\u6211\u4eec\u8981\u7279\u522b\u6ce8\u610f\u907f\u514d\uff0c\u4f8b\u5982\uff1a \u516c\u7f51 IP \u6216\u8005\u90ae\u4ef6\u5730\u5740\u3002 HTTP \u8bf7\u6c42 Path \u5168\u8def\u5f84\uff0c\u5c24\u5176\u8fd9\u4e9b\u8def\u5f84\u5e26\u6709\u52a8\u6001 ID \u7b49\u4fe1\u606f\u3002 \u8fdb\u7a0b ID\uff08\u9664\u975e\u662f\u6709\u9650\u96c6\u5408\uff09\u3002 \u6709\u65f6\u4f60\u60f3\u5728\u4e0d\u5b8c\u5168\u5220\u9664\u6807\u7b7e\u7684\u60c5\u51b5\u4e0b\u89e3\u51b3\u6807\u7b7e\u9ad8\u57fa\u6570\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u60f3\u529e\u6cd5\u51cf\u5c11\u5176\u503c\u7684\u57fa\u6570\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e /api/users/739567637385/posts/28388445 \u7684 HTTP \u8bf7\u6c42, \u6211\u4eec\u5c06\u52a8\u6001\u4fe1\u606f\u90e8\u5206\u4f7f\u7528 user_id \u548c post_id \u5360\u4f4d\u7b26\u7edf\u4e00\u66ff\u6362\uff0c\u6240\u4ee5\u6574\u4e2a path \u53ef\u4ee5\u66ff\u6362\u4e3a /api/users/{user_id}/posts/{post_id} \uff0c\u4ece\u800c\u6709\u6548\u51cf\u5c11 path \u6807\u7b7e\u7684\u503c\u6570\u91cf \u3002","title":"\u9519\u8bef 1\uff1a\u9ad8\u57fa\u6570\u70b8\u5f39"},{"location":"chap8/9promql_6errors/#2","text":"\u5728\u505a\u544a\u8b66\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u901a\u8fc7\u805a\u5408\u8ba1\u7b97\u53bb\u9664\u4e0d\u5173\u5fc3\u7684\u4e00\u4e9b\u6807\u7b7e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u786e\u5b9a\u67d0\u4e2a\u670d\u52a1\u7684\u603b\u4f53\u9519\u8bef\u7387\uff08\u8de8\u6240\u6709\u6807\u7b7e\u7ef4\u5ea6\uff09\u662f\u5426\u8fc7\u9ad8\uff0c\u53ef\u4ee5\u7f16\u5199\u5982\u4e0b\u7684\u89c4\u5219\uff1a sum(rate(errors_total{job=\"my-job\"}[5m])) > 10 \u8fd9\u770b\u4e0a\u53bb\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c sum() \u805a\u5408\u5668\u4f1a\u53bb\u6389\u65f6\u5e8f\u7684\u6240\u6709\u6807\u7b7e\uff0c\u5b83\u4e0d\u4ec5\u4f1a\u5220\u9664\u4f60\u60f3\u8981\u805a\u5408\u7684\u7ef4\u5ea6\uff08\u5982\u5b9e\u4f8b\u3001\u9519\u8bef\u7c7b\u578b\u7b49\uff09\uff0c\u8fd8\u4f1a\u5220\u9664\u4e00\u4e9b\u6bd4\u8f83\u901a\u7528\u7684\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u5bf9\u4e8e Alertmanager \u4e2d\u8fdb\u884c\u544a\u8b66\u7684\u8def\u7531\u6216\u9759\u9ed8\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u7279\u522b\u662f job \u6807\u7b7e\uff0c\u56e0\u4e3a\u4e0d\u540c job \u901a\u5e38\u7531\u4e0d\u540c\u7684\u8fd0\u7ef4\u56e2\u961f\u8d1f\u8d23\u3002 \u56e0\u6b64\u6211\u4eec\u5e94\u8be5\u5c3d\u53ef\u80fd\u5728\u805a\u5408\u4e2d\u4fdd\u7559\u6b64\u6807\u7b7e\uff0c\u53ef\u4ee5\u4f7f\u7528 sum by(job) (rate(errors_total{job=\"my-job\"}[5m])) > 10 \u8fd9\u4e2a\u544a\u8b66\u8868\u8fbe\u5f0f\u3002 \u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\u662f\u901a\u8fc7\u4f7f\u7528 without() \u805a\u5408\u4fee\u9970\u7b26\u66ff\u6362 by() \u805a\u5408\u4fee\u9970\u7b26\uff0c\u4ece\u800c\u663e\u793a\u6392\u9664\u4e0d\u60f3\u8981\u7684\u6807\u7b7e\uff0c\u800c\u5c3d\u53ef\u80fd\u4fdd\u7559\u4e0b\u4e00\u4e9b\u4f60\u4e0d\u786e\u5b9a\u662f\u5426\u9700\u8981\u5220\u9664\u7684\u6807\u7b7e\uff1a sum without(instance, type) (rate(errors_total{job=\"my-job\"}[5m])) > 10 \u8fd9\u6837\uff0c\u805a\u5408\u65f6\u4f60\u6ca1\u6709\u660e\u786e\u6307\u5b9a\u5220\u9664\u7684\u6807\u7b7e\u5728 Alertmanager \u4e2d\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\uff0c\u8fd9\u5bf9\u4e8e\u544a\u8b66\u7684\u805a\u5408\u548c\u8def\u7531\u975e\u5e38\u6709\u7528\uff0c\u4e5f\u80fd\u5e2e\u52a9\u4f60\u66f4\u597d\u4e86\u89e3\u62a5\u8b66\u7684\u6765\u6e90\u3002","title":"\u9519\u8bef 2\uff1a\u5728\u544a\u8b66\u8868\u8fbe\u5f0f\u4e2d\u56e0\u805a\u5408\u800c\u4e22\u5931\u6709\u4ef7\u503c\u7684\u6807\u7b7e"},{"location":"chap8/9promql_6errors/#3","text":"\u5728\u7f16\u5199 PromQL \u67e5\u8be2\uff08\u5c24\u5176\u662f\u544a\u8b66\uff09\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u683c\u5916\u5c0f\u5fc3\uff0c\u5e94\u8be5\u4ece\u5173\u5fc3\u7684\u4e1a\u52a1\u6216\u670d\u52a1\u7684\u6570\u636e\u4e2d\u8fdb\u884c\u67e5\u8be2\uff0c\u800c\u4e0d\u662f\u5168\u5c40\u8303\u56f4\u3002 \u56e0\u4e3a\u4e0d\u540c\u7684\u4e1a\u52a1\u53ef\u80fd\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u6307\u6807\u540d\u79f0\uff0c\u5b83\u4eec\u751a\u81f3\u8868\u8fbe\u4e86\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u76f8\u540c\u6307\u6807\u540d\u79f0\u7684\u670d\u52a1\u4f1a\u8d8a\u6765\u8d8a\u591a\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u4f60\u7684\u544a\u8b66\u89c4\u5219\u6216\u8005\u4eea\u8868\u76d8\u6570\u636e\u3002 \u4e3a\u907f\u514d\u4e0d\u5c0f\u5fc3\u4ece\u4e0d\u76f8\u5173\u7684\u4efb\u52a1\u6216\u8005\u670d\u52a1\u4e2d\u67e5\u8be2\u6570\u636e\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528 job \u6807\u7b7e\u6765\u9650\u5b9a\u9009\u62e9\u5668\u7684\u8303\u56f4\uff0c\u786e\u4fdd\u5176\u67e5\u8be2\u7684\u6570\u636e\u90fd\u662f\u4f60\u5173\u5fc3\u7684\u4e1a\u52a1\u6216\u670d\u52a1\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u67e5\u8be2\u5c31\u662f\u4e00\u4e2a\u4e0d\u5b89\u5168\u7684 \u88f8 \u9009\u62e9\u5668\uff0c\u5b83\u53ef\u80fd\u4f1a\u4ece\u4f60\u4e0d\u671f\u671b\u7684\u5176\u4ed6 job \u4e2d\u9009\u62e9\u5177\u6709\u76f8\u540c\u6307\u6807\u540d\u7684\u6570\u636e\uff1a rate(errors_total[5m]) > 10 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 {job=\"my-job\"} \u7684\u9009\u62e9\u5668\u4ece\u800c\u5c06\u6307\u6807\u9650\u5b9a\u5728 my-job \u670d\u52a1\u8303\u56f4\uff1a rate(errors_total{job=\"my-job\"}[5m]) > 10 \u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u66f4\u5b89\u5168\u7684\u65b9\u5f0f\uff0c\u5b83\u53ef\u4ee5\u6709\u6548\u907f\u514d\u4ece\u65e0\u5173\u670d\u52a1\u4e2d\u67e5\u8be2\u6570\u636e\uff0c\u5bf9\u4f60\u544a\u8b66\u4ea7\u751f\u5e72\u6270\uff0c\u4e5f\u80fd\u5927\u5927\u63d0\u5347\u67e5\u8be2\u6027\u80fd\u3002","title":"\u9519\u8bef 3\uff1a\u4f7f\u7528\u65e0\u4efb\u4f55\u9650\u5b9a\u8303\u56f4\u7684\u9009\u62e9\u5668"},{"location":"chap8/9promql_6errors/#4-for","text":"for \u5b57\u6bb5\u4e3b\u8981\u7528\u4e8e\u544a\u8b66\u89c4\u5219\u8bc4\u4f30\uff0c\u5b83\u5141\u8bb8\u4f60\u80fd\u591f\u6307\u5b9a\u4efb\u610f\u544a\u8b66\u9700\u8981\u5728\u8fde\u7eed\u7684\u89c4\u5219\u8bc4\u4f30\u5468\u671f\u4e2d\u51fa\u73b0\u591a\u957f\u65f6\u95f4\u624d\u4ece pending \u72b6\u6001\u53d8\u4e3a firing\uff0c\u5927\u591a\u6570\u544a\u8b66\u89c4\u5219\u53ef\u80fd\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u8be5\u5b57\u6bb5\uff0c\u53ea\u9700\u8981\u4e24\u4e2a\u8bc4\u4f30\u5468\u671f\u5373\u53ef\u89e6\u53d1\u544a\u8b66\uff0c\u4f46\u6709\u65f6\uff0c\u6211\u4eec\u4e3a\u4e86\u6392\u9664\u6296\u52a8\u7684\u5e72\u6270\uff0c\u6bd4\u5982\u4e00\u4e9b CPU \u4f7f\u7528\u7387\uff0c\u6216\u8005\u67d0\u4e2a\u8282\u70b9\u56e0\u4e3a\u4e00\u4e24\u6b21\u6293\u53d6\u5f02\u5e38\u5c31\u5224\u5b9a down \u4e86 \u5982\u4e0b\u8b66\u62a5\u89c4\u5219\uff0c\u5b83\u4f7f\u7528 up \u6307\u6807\u6765\u67e5\u627e\u65e0\u6cd5\u6210\u529f\u6293\u53d6\u7684\u76ee\u6807\uff0c\u5e76\u7701\u7565\u4e86\u53ef\u9009\u7684 for \u4fee\u9970\u7b26 alert: InstanceDown expr: up == 0 \u4e00\u6b21\u5931\u8d25\u7684\u6293\u53d6\uff08\u5f88\u5bb9\u6613\u53d1\u751f\uff09\u5c06\u5bfc\u81f4\u89e6\u53d1\u6b64\u89c4\u5219\uff0c\u901a\u5e38\u4f60\u5e0c\u671b\u8ba9\u4f60\u7684\u8b66\u62a5\u89c4\u5219\u4e0d\u90a3\u4e48\u5bb9\u6613\u89e6\u53d1\uff0c\u5e76\u81f3\u5c11\u7b49\u5f85\u51e0\u5206\u949f\uff0c\u770b\u770b\u95ee\u9898\u662f\u5426\u771f\u7684\u5b58\u5728\uff0c\u7136\u540e\u518d\u89e6\u53d1\u901a\u77e5 alert: InstanceDown expr: up == 0 for: 5m # \u4e00\u4e2a\u5b9e\u4f8b\u53ea\u6709\u771f\u7684\u6302\u6389\u6216\u8005\u65e0\u6cd5\u8bbf\u95ee\u957f\u8fbe 5 \u5206\u949f\u624d\u521b\u5efa\u544a\u8b66\u4fe1\u606f \u4e0d\u5e26 for \u9488\u5bf9\u4e00\u4e9b\u5185\u7f6e\u7684\u5e26\u6709\u5e73\u5747\u6570\u8ba1\u7b97\u7684\u67e5\u8be2\u8868\u8fbe\u5f0f\u4e5f\u540c\u6837\u6709\u95ee\u9898 \uff0c\u4f8b\u5982\u8868\u793a\u9ad8\u9519\u8bef\u7387\u7684\u544a\u8b66\uff1a alert: HighErrorRate expr: rate(my_errors_total{job=\"my-job\"}[5m]) > 10 \u8fd9\u4e2a\u89c4\u5219\u5c06\u5728\u7b2c\u4e00\u6b21\u67e5\u8be2\u5230\u6700\u8fd1 5m \u4e2d\u8be5\u9519\u8bef\u6570\u7684\u5e73\u5747\u503c > 10 \u5c31\u7acb\u5373\u521b\u5efa\u544a\u8b66\uff0c\u867d\u7136 5m \u7684\u5e73\u5747\u5468\u671f\u80fd\u591f\u5e26\u6765\u4e00\u5b9a\u7684\u7a33\u5065\u6027\uff0c\u4f46\u662f\u7531\u4e8e Promtheus rate() \u7279\u6027\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u4e00\u4e2a\u5b8c\u5168\u65b0\u7684\u670d\u52a1\u6216\u8005\u4e00\u6bb5\u65f6\u95f4\u672a\u6536\u96c6\u5230\u6570\u636e\u4f1a\u53d1\u751f\u4ec0\u4e48 5 \u5206\u949f\u7684 rate() \u7a97\u53e3\u53ea\u4f1a\u8003\u8651\u4e00\u4e9b\u6700\u8fd1\u7684\u6837\u672c\uff0c\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4f1a\u5bf9\u4e94\u5206\u949f\u7684\u6570\u636e\u8fdb\u884c\u5e73\u5747\u3002 \u65f6\u95f4\u5e8f\u5217\u751a\u81f3\u6839\u672c\u8fd8\u6ca1\u4e94\u5206\u949f\u6570\u636e\uff0c\u8be5\u89c4\u5219\u4e5f\u53ef\u80fd\u4f1a\u7acb\u5373\u521b\u5efa\u544a\u8b66\u3002 \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 for \u4fee\u9970\u7b26\u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff1a alert: HighErrorRate expr: rate(my_errors_total{job=\"my-job\"}[5m]) > 10 for: 5m \u51e0\u4e4e\u5927\u591a\u6570\u7684\u544a\u8b66\u89c4\u5219\u90fd\u53ef\u4ee5\u6dfb\u52a0\u6b64\u53c2\u6570\uff0c\u4ece\u800c\u4f7f\u62a5\u8b66\u89c4\u5219\u66f4\u52a0\u7a33\u5065\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u4e5f\u4f1a\u5bfc\u81f4\u8b66\u62a5\u7684\u53cd\u5e94\u65f6\u95f4\u53d8\u6162\uff0c\u56e0\u6b64\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5e73\u8861\u70b9\u3002","title":"\u9519\u8bef 4\uff1a\u544a\u8b66\u89c4\u5219\u6ca1\u6709\u4f7f\u7528 for \u5b57\u6bb5"},{"location":"chap8/9promql_6errors/#5rate","text":"\u5728\u592a\u77ed\u7684\u65f6\u95f4\u7a97\u53e3\u5185\u8ba1\u7b97\u901f\u7387\u65f6\uff0c\u5f97\u5230\u7684\u56fe\u8868\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e0d\u8fde\u7eed\u4e2d\u65ad\u7684\u60c5\u51b5\uff0c\u4f8b\u5982 rate(my_counter[1m])\uff1frate() \u548c \u5176\u4ed6 PromQL \u51fd\u6570\uff08\u5982 increase() \u3001 irate() \u3001 deriv() \uff09\u544a\u8bc9\u4f60\u65f6\u95f4\u5e8f\u5217\u5728\u7ed9\u5b9a\u65f6\u95f4\u7a97\u53e3\u5185\u4e0a\u5347\u6216\u4e0b\u964d\u7684\u901f\u5ea6\uff0c\u5728\u8f93\u5165\u65f6\u95f4\u7a97\u53e3\u4e0b\u81f3\u5c11\u9700\u8981\u4e24\u4e2a\u6837\u672c\uff0c\u4ece\u800c\u80fd\u591f\u544a\u8bc9\u4f60\u8fd9\u4e24\u4e2a\u6837\u672c\u4e4b\u95f4\u7684\u5e8f\u5217\u662f\u5982\u4f55\u53d1\u5c55\u7684 \u3002\u5982\u679c\u5c06\u65f6\u95f4\u7a97\u53e3\u8bbe\u7f6e\u5f97\u592a\u5c0f\uff0c\u5219\u5728\u8be5\u7a97\u53e3\u4e0b\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a\u6216\u96f6\u4e2a\u6837\u672c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\u7a7a\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u91c7\u7528 20s \u7684\u65f6\u95f4\u7a97\u53e3\u5bf9\u4e00\u4e2a 15s \u6293\u53d6\u95f4\u9694\u7684\u6307\u6807\u8fdb\u884c rate()\uff0c\u90a3\u4e48\u5728\u8fd9 20 \u79d2\u65f6\u95f4\u7a97\u53e3\u5185\u5f88\u53ef\u80fd\u4e0d\u4f1a\u6db5\u76d6\u4e24\u4e2a\u6837\u672c\uff0c\u56e0\u6b64\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e0e\u5b9e\u9645\u7ed3\u679c\u5dee\u5f02\u5f88\u5927\u7684\u6bd4\u7387\uff1a \u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u66f4\u6781\u7aef\u7684\u505a\u6cd5\uff1a\u5982\u679c\u5c06 rate \u7a97\u53e3\u7f29\u5c0f\u5230 16s\uff0c\u5f53\u4e24\u4e2a\u76f8\u8ddd 15s \u7684\u70b9\u6070\u597d\u843d\u5728\u4efb\u610f\u5bf9\u9f50\u7684 16s \u7a97\u53e3\u4e2d\u65f6\uff0c\u5219\u53ea\u4f1a\u5076\u5c14\u5f97\u5230\u4e00\u4e2a\u8f93\u51fa\u70b9\uff1a \u5f53\u4f7f\u7528 Grafana \u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 $__rate_interval \u6a21\u677f\u53d8\u91cf\u81ea\u52a8\u4e3a\u4f60\u9009\u62e9\u4e00\u4e2a\u5b89\u5168\u7684\u95f4\u9694\u3002","title":"\u9519\u8bef 5\uff1arate() \u7a97\u53e3\u65f6\u95f4\u592a\u77ed"},{"location":"chap8/9promql_6errors/#6rate","text":"\u867d\u7136 PromQL \u5728\u5176\u4ed6\u4e00\u4e9b\u65b9\u9762\u662f\u9759\u6001\u7c7b\u578b\u7684\uff0c\u4f46\u5b83\u4e0d\u80fd\u76f4\u63a5\u544a\u8bc9\u4f60\uff0c\u4f60\u662f\u5426\u628a\u9519\u8bef\u7684\u6307\u6807\u7c7b\u578b\u4f20\u5165\u4e86\u4e00\u4e2a\u4e0d\u662f\u4e3a\u5904\u7406\u5b83\u800c\u8bbe\u8ba1\u7684\u51fd\u6570\u3002","title":"\u9519\u8bef 6\uff1arate() \u76f8\u5173\u51fd\u6570\u7528\u9519\u4e86\u6307\u6807\u7c7b\u578b"},{"location":"chap8/9promql_6errors/#rate-gauge","text":"rate()\u3001irate() \u548c increase() \u51fd\u6570\u88ab\u8bbe\u8ba1\u6210\u4e3a\u4ec5\u9002\u7528\u4e8e Counter \u7c7b\u578b\u6307\u6807\uff0cCounter \u7c7b\u578b\u662f\u8ffd\u8e2a\u7d2f\u8ba1\u8ba1\u6570\u7684\u6307\u6807\uff0c\u8fd9\u4e9b\u8ba1\u6570\u53ea\u4f1a\u4e0a\u5347\uff08\u6c38\u8fdc\u4e0d\u4f1a\u4e0b\u964d\uff09\uff0c\u9664\u4e86\u5728\u8ffd\u8e2a\u8fc7\u7a0b\u4e2d\u5076\u5c14\u56e0\u4e3a\u91cd\u542f\u800c\u91cd\u7f6e\u4e3a 0\u3002 \u4e3a\u4e86\u5728 rate \u8ba1\u7b97\u4e2d\u5c3d\u53ef\u80fd\u6d88\u9664\u8ba1\u6570\u5668\u91cd\u7f6e\u7684\u5f71\u54cd\uff0c\u8fd9\u4e9b\u51fd\u6570\u5c1d\u8bd5\u5c06\u63d0\u4f9b\u7684\u65f6\u95f4\u7a97\u53e3\u5185\u6837\u672c\u7684\u503c\u7684\u4efb\u4f55\u51cf\u5c0f\u90fd\u89e3\u91ca\u4e3a\u91cd\u7f6e\u5e76\u5bf9\u5176\u8fdb\u884c\u8865\u507f\u3002 \u8fd9\u79cd\u8ba1\u6570\u5668\u7684\u91cd\u7f6e\u68c0\u6d4b\u548c\u8865\u507f\u610f\u5473\u7740\u4f60\u53ea\u80fd\u4ece\u8fd9\u4e9b\u51fd\u6570\u4e2d\u83b7\u5f97\u6b63\u6570\u7684\u7ed3\u679c\uff08\u6216 0\uff09\u3002\u5982\u679c\u4f60\u4e0d\u5c0f\u5fc3\u4f20\u5165\u4e86\u4e00\u4e2a\u53ef\u4ee5\u81ea\u7136\u4e0a\u5347\u548c\u4e0b\u964d\u7684\u6307\u6807\uff08\u6bd4\u5982\u5185\u5b58\u4f7f\u7528\u91cf\uff09\uff0cPromQL \u5c06\u65e0\u6cd5\u5224\u65ad\u8fd9\u4e2a\u9519\u8bef\uff0c\u800c\u53ea\u4f1a\u8fd4\u56de\u4e00\u4e2a\u4e0d\u6b63\u786e\u7684\u8f93\u51fa\u503c\u3002\u8fd9\u662f\u56e0\u4e3a\u6bcf\u6b21\u4f60\u7684\u4eea\u8868\u6307\u6807\u4e0b\u964d\u65f6\uff0crate() \u90fd\u4f1a\u5c06\u5176\u7406\u89e3\u4e3a\u8ba1\u6570\u5668\u91cd\u7f6e\u5e76\u4e14\u4f1a\u9519\u8bef\u5730\u201c\u7ea0\u6b63\u201d\u5b83\u3002","title":"rate() \u51fd\u6570\u7528\u5728 gauge \u7c7b\u578b\u6307\u6807"},{"location":"chap8/9promql_6errors/#deriv-counter","text":"\u4f60\u53ef\u4ee5\u8ba4\u4e3a deriv() \u51fd\u6570\u5927\u81f4\u7b49\u540c\u4e8e rate()\uff0c\u4f46\u5b83\u4f5c\u7528\u4e8e Gauge \u7c7b\u578b\uff0c deriv() \u544a\u8bc9\u4f60\u5728\u8f93\u5165\u65f6\u95f4\u7a97\u53e3\u5185 Gauge \u7c7b\u578b\u6307\u6807\u6bcf\u79d2\u4e0a\u5347\u6216\u4e0b\u964d\u7684\u901f\u5ea6 \u3002 \u867d\u7136\u5e76\u4e0d\u5e38\u89c1\uff0c\u4f46\u8fd9\u91cc\u4e0e rate() \u76f8\u540c\u7684\u9677\u9631\u53ef\u80fd\u4f1a\u7ed9\u4f60\u5e26\u6765\u53e6\u5916\u7684\u56f0\u6270\uff1a\u56e0\u4e3a deriv() \u51fd\u6570\u6ca1\u6709\u5b9e\u73b0\u4efb\u4f55\u56f4\u7ed5 Counter \u7c7b\u578b\u91cd\u7f6e\u7684\u903b\u8f91\uff0c\u8bd5\u56fe\u4f7f\u7528 deriv() \u8ba1\u7b97\u4e00\u4e2a\u5728\u63d0\u4f9b\u7684\u7a97\u53e3\u4e0b\u6709\u91cd\u7f6e\u7684 Counter \u7684\u7c7b\u578b\u6307\u6807\uff0c\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e0d\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u6709\u65f6\u751a\u81f3\u662f\u4e00\u4e2a\u8d1f\u6570\u3002","title":"deriv() \u51fd\u6570\u7528\u5728 counter \u7c7b\u578b\u6307\u6807"},{"location":"chap8/9promql_6errors/#_1","text":"\u7531\u4e8e PromQL \u65e0\u6cd5\u81ea\u52a8\u68c0\u6d4b\u8fd9\u79cd\u4e0d\u6b63\u786e\u7684\u7528\u6cd5\uff0c\u6240\u4ee5\u5728\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u65f6\u5fc5\u987b\u683c\u5916\u5c0f\u5fc3\uff0c\u6211\u4eec\u9664\u4e86\u7ecf\u9a8c\u548c\u5df2\u6709\u77e5\u8bc6\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f9d\u8d56\u4e00\u4e9b\u5f00\u6e90\u9879\u76ee\uff0c\u4f8b\u5982 PromLens \u67e5\u8be2\u6784\u5efa\u5668\u8fd9\u6837\u7684\u5de5\u5177\u6765\u8f85\u52a9\u68c0\u6d4b\u662f\u5426\u4f20\u4e86\u9519\u8bef\u7684\u6307\u6807\u7c7b\u578b\uff1a","title":"\u5982\u4f55\u907f\u514d\u4f20\u5165\u9519\u8bef\u7c7b\u578b\u7684\u6307\u6807\uff1f"},{"location":"chap9/10Elasticsearch/","text":"8. Elasticsearch: elasticsearch_exporter https://github.com/justwatchcom/elasticsearch_exporter 1. Elastic Heap Usage Too High The heap usage is over 90% for 5m - alert: ElasticHeapUsageTooHigh expr: (elasticsearch_jvm_memory_used_bytes{area=\"heap\"} / elasticsearch_jvm_memory_max_bytes{area=\"heap\"}) * 100 > 90 for: 5m labels: severity: error annotations: summary: \"Elastic Heap Usage Too High (instance {{ $labels.instance }})\" description: \"The heap usage is over 90% for 5m\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2. Elastic Heap Usage warning The heap usage is over 80% for 5m - alert: ElasticHeapUsageWarning expr: (elasticsearch_jvm_memory_used_bytes{area=\"heap\"} / elasticsearch_jvm_memory_max_bytes{area=\"heap\"}) * 100 > 80 for: 5m labels: severity: warning annotations: summary: \"Elastic Heap Usage warning (instance {{ $labels.instance }})\" description: \"The heap usage is over 80% for 5m\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 3. Elasticsearch disk out of space The disk usage is over 90% - alert: ElasticsearchDiskOutOfSpace expr: elasticsearch_filesystem_data_available_bytes / elasticsearch_filesystem_data_size_bytes * 100 < 10 for: 0m labels: severity: critical annotations: summary: Elasticsearch disk out of space (instance {{ $labels.instance }}) description: \"The disk usage is over 90%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Elasticsearch disk space low The disk usage is over 80% - alert: ElasticsearchDiskSpaceLow expr: elasticsearch_filesystem_data_available_bytes / elasticsearch_filesystem_data_size_bytes * 100 < 20 for: 2m labels: severity: warning annotations: summary: Elasticsearch disk space low (instance {{ $labels.instance }}) description: \"The disk usage is over 80%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5. Elastic Cluster Red Elastic Cluster Red status - alert: ElasticClusterRed expr: elasticsearch_cluster_health_status{color=\"red\"} == 1 for: 5m labels: severity: error annotations: summary: \"Elastic Cluster Red (instance {{ $labels.instance }})\" description: \"Elastic Cluster Red status\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 6. Elastic Cluster Yellow Elastic Cluster Yellow status - alert: ElasticClusterYellow expr: elasticsearch_cluster_health_status{color=\"yellow\"} == 1 for: 5m labels: severity: warning annotations: summary: \"Elastic Cluster Yellow (instance {{ $labels.instance }})\" description: \"Elastic Cluster Yellow status\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 7. Elasticsearch Healthy Nodes Missing node in Elasticsearch cluster - alert: ElasticsearchHealthyNodes expr: elasticsearch_cluster_health_number_of_nodes < 3 for: 0m labels: severity: critical annotations: summary: Elasticsearch Healthy Nodes (instance {{ $labels.instance }}) description: \"Missing node in Elasticsearch cluster\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 8. Number of Elastic Healthy Nodes Number Healthy Nodes less then number_of_nodes - alert: NumberOfElasticHealthyNodes expr: elasticsearch_cluster_health_number_of_nodes < number_of_nodes for: 5m labels: severity: error annotations: summary: \"Number of Elastic Healthy Nodes (instance {{ $labels.instance }})\" description: \"Number Healthy Nodes less then number_of_nodes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 9. Elasticsearch relocating shards Elasticsearch is relocating shards - alert: ElasticsearchRelocatingShards expr: elasticsearch_cluster_health_relocating_shards > 0 for: 0m labels: severity: info annotations: summary: Elasticsearch relocating shards (instance {{ $labels.instance }}) description: \"Elasticsearch is relocating shards\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 10. Elasticsearch relocating shards too long Elasticsearch has been relocating shards for 15min - alert: ElasticsearchRelocatingShardsTooLong expr: elasticsearch_cluster_health_relocating_shards > 0 for: 15m labels: severity: warning annotations: summary: Elasticsearch relocating shards too long (instance {{ $labels.instance }}) description: \"Elasticsearch has been relocating shards for 15min\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 11. Elasticsearch initializing shards Elasticsearch is initializing shards - alert: ElasticsearchInitializingShards expr: elasticsearch_cluster_health_initializing_shards > 0 for: 0m labels: severity: info annotations: summary: Elasticsearch initializing shards (instance {{ $labels.instance }}) description: \"Elasticsearch is initializing shards\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 12. Elasticsearch initializing shards too long Elasticsearch has been initializing shards for 15 min - alert: ElasticsearchInitializingShardsTooLong expr: elasticsearch_cluster_health_initializing_shards > 0 for: 15m labels: severity: warning annotations: summary: Elasticsearch initializing shards too long (instance {{ $labels.instance }}) description: \"Elasticsearch has been initializing shards for 15 min\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 13. Elasticsearch unassigned shards Elasticsearch has unassigned shards - alert: ElasticsearchUnassignedShards expr: elasticsearch_cluster_health_unassigned_shards > 0 for: 0m labels: severity: critical annotations: summary: Elasticsearch unassigned shards (instance {{ $labels.instance }}) description: \"Elasticsearch has unassigned shards\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 14. Elasticsearch pending tasks Elasticsearch has pending tasks. Cluster works slowly. - alert: ElasticsearchPendingTasks expr: elasticsearch_cluster_health_number_of_pending_tasks > 0 for: 15m labels: severity: warning annotations: summary: Elasticsearch pending tasks (instance {{ $labels.instance }}) description: \"Elasticsearch has pending tasks. Cluster works slowly.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 15 Elasticsearch no new documents No new documents for 10 min! - alert: ElasticsearchNoNewDocuments expr: increase(elasticsearch_indices_docs{es_data_node=\"true\"}[10m]) < 1 for: 0m labels: severity: warning annotations: summary: Elasticsearch no new documents (instance {{ $labels.instance }}) description: \"No new documents for 10 min!\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 16. Number of pending tasks Number of pending tasks for 10 min. Cluster works slowly. - alert: NumberOfPendingTasks expr: elasticsearch_cluster_health_number_of_pending_tasks > 0 for: 5m labels: severity: warning annotations: summary: \"Number of pending tasks (instance {{ $labels.instance }})\" description: \"Number of pending tasks for 10 min. Cluster works slowly.\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 17. Number of Elastic Healthy Data Nodes Number Healthy Data Nodes less then number_of_data_nodes - alert: NumberOfElasticHealthyDataNodes expr: elasticsearch_cluster_health_number_of_data_nodes < number_of_data_nodes for: 5m labels: severity: error annotations: summary: \"Number of Elastic Healthy Data Nodes (instance {{ $labels.instance }})\" description: \"Number Healthy Data Nodes less then number_of_data_nodes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"8. Elasticsearch: `elasticsearch_exporter`"},{"location":"chap9/10Elasticsearch/#8-elasticsearch-elasticsearch_exporter","text":"https://github.com/justwatchcom/elasticsearch_exporter","title":"8. Elasticsearch: elasticsearch_exporter"},{"location":"chap9/10Elasticsearch/#1-elastic-heap-usage-too-high","text":"The heap usage is over 90% for 5m - alert: ElasticHeapUsageTooHigh expr: (elasticsearch_jvm_memory_used_bytes{area=\"heap\"} / elasticsearch_jvm_memory_max_bytes{area=\"heap\"}) * 100 > 90 for: 5m labels: severity: error annotations: summary: \"Elastic Heap Usage Too High (instance {{ $labels.instance }})\" description: \"The heap usage is over 90% for 5m\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1. Elastic Heap Usage Too High"},{"location":"chap9/10Elasticsearch/#2-elastic-heap-usage-warning","text":"The heap usage is over 80% for 5m - alert: ElasticHeapUsageWarning expr: (elasticsearch_jvm_memory_used_bytes{area=\"heap\"} / elasticsearch_jvm_memory_max_bytes{area=\"heap\"}) * 100 > 80 for: 5m labels: severity: warning annotations: summary: \"Elastic Heap Usage warning (instance {{ $labels.instance }})\" description: \"The heap usage is over 80% for 5m\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2. Elastic Heap Usage warning"},{"location":"chap9/10Elasticsearch/#3-elasticsearch-disk-out-of-space","text":"The disk usage is over 90% - alert: ElasticsearchDiskOutOfSpace expr: elasticsearch_filesystem_data_available_bytes / elasticsearch_filesystem_data_size_bytes * 100 < 10 for: 0m labels: severity: critical annotations: summary: Elasticsearch disk out of space (instance {{ $labels.instance }}) description: \"The disk usage is over 90%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Elasticsearch disk out of space"},{"location":"chap9/10Elasticsearch/#4-elasticsearch-disk-space-low","text":"The disk usage is over 80% - alert: ElasticsearchDiskSpaceLow expr: elasticsearch_filesystem_data_available_bytes / elasticsearch_filesystem_data_size_bytes * 100 < 20 for: 2m labels: severity: warning annotations: summary: Elasticsearch disk space low (instance {{ $labels.instance }}) description: \"The disk usage is over 80%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Elasticsearch disk space low"},{"location":"chap9/10Elasticsearch/#5-elastic-cluster-red","text":"Elastic Cluster Red status - alert: ElasticClusterRed expr: elasticsearch_cluster_health_status{color=\"red\"} == 1 for: 5m labels: severity: error annotations: summary: \"Elastic Cluster Red (instance {{ $labels.instance }})\" description: \"Elastic Cluster Red status\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"5. Elastic Cluster Red"},{"location":"chap9/10Elasticsearch/#6-elastic-cluster-yellow","text":"Elastic Cluster Yellow status - alert: ElasticClusterYellow expr: elasticsearch_cluster_health_status{color=\"yellow\"} == 1 for: 5m labels: severity: warning annotations: summary: \"Elastic Cluster Yellow (instance {{ $labels.instance }})\" description: \"Elastic Cluster Yellow status\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"6. Elastic Cluster Yellow"},{"location":"chap9/10Elasticsearch/#7-elasticsearch-healthy-nodes","text":"Missing node in Elasticsearch cluster - alert: ElasticsearchHealthyNodes expr: elasticsearch_cluster_health_number_of_nodes < 3 for: 0m labels: severity: critical annotations: summary: Elasticsearch Healthy Nodes (instance {{ $labels.instance }}) description: \"Missing node in Elasticsearch cluster\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7. Elasticsearch Healthy Nodes"},{"location":"chap9/10Elasticsearch/#8-number-of-elastic-healthy-nodes","text":"Number Healthy Nodes less then number_of_nodes - alert: NumberOfElasticHealthyNodes expr: elasticsearch_cluster_health_number_of_nodes < number_of_nodes for: 5m labels: severity: error annotations: summary: \"Number of Elastic Healthy Nodes (instance {{ $labels.instance }})\" description: \"Number Healthy Nodes less then number_of_nodes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"8. Number of Elastic Healthy Nodes"},{"location":"chap9/10Elasticsearch/#9-elasticsearch-relocating-shards","text":"Elasticsearch is relocating shards - alert: ElasticsearchRelocatingShards expr: elasticsearch_cluster_health_relocating_shards > 0 for: 0m labels: severity: info annotations: summary: Elasticsearch relocating shards (instance {{ $labels.instance }}) description: \"Elasticsearch is relocating shards\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9. Elasticsearch relocating shards"},{"location":"chap9/10Elasticsearch/#10-elasticsearch-relocating-shards-too-long","text":"Elasticsearch has been relocating shards for 15min - alert: ElasticsearchRelocatingShardsTooLong expr: elasticsearch_cluster_health_relocating_shards > 0 for: 15m labels: severity: warning annotations: summary: Elasticsearch relocating shards too long (instance {{ $labels.instance }}) description: \"Elasticsearch has been relocating shards for 15min\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"10. Elasticsearch relocating shards too long"},{"location":"chap9/10Elasticsearch/#11-elasticsearch-initializing-shards","text":"Elasticsearch is initializing shards - alert: ElasticsearchInitializingShards expr: elasticsearch_cluster_health_initializing_shards > 0 for: 0m labels: severity: info annotations: summary: Elasticsearch initializing shards (instance {{ $labels.instance }}) description: \"Elasticsearch is initializing shards\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"11. Elasticsearch initializing shards"},{"location":"chap9/10Elasticsearch/#12-elasticsearch-initializing-shards-too-long","text":"Elasticsearch has been initializing shards for 15 min - alert: ElasticsearchInitializingShardsTooLong expr: elasticsearch_cluster_health_initializing_shards > 0 for: 15m labels: severity: warning annotations: summary: Elasticsearch initializing shards too long (instance {{ $labels.instance }}) description: \"Elasticsearch has been initializing shards for 15 min\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"12. Elasticsearch initializing shards too long"},{"location":"chap9/10Elasticsearch/#13-elasticsearch-unassigned-shards","text":"Elasticsearch has unassigned shards - alert: ElasticsearchUnassignedShards expr: elasticsearch_cluster_health_unassigned_shards > 0 for: 0m labels: severity: critical annotations: summary: Elasticsearch unassigned shards (instance {{ $labels.instance }}) description: \"Elasticsearch has unassigned shards\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"13. Elasticsearch unassigned shards"},{"location":"chap9/10Elasticsearch/#14-elasticsearch-pending-tasks","text":"Elasticsearch has pending tasks. Cluster works slowly. - alert: ElasticsearchPendingTasks expr: elasticsearch_cluster_health_number_of_pending_tasks > 0 for: 15m labels: severity: warning annotations: summary: Elasticsearch pending tasks (instance {{ $labels.instance }}) description: \"Elasticsearch has pending tasks. Cluster works slowly.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"14. Elasticsearch pending tasks"},{"location":"chap9/10Elasticsearch/#15-elasticsearch-no-new-documents","text":"No new documents for 10 min! - alert: ElasticsearchNoNewDocuments expr: increase(elasticsearch_indices_docs{es_data_node=\"true\"}[10m]) < 1 for: 0m labels: severity: warning annotations: summary: Elasticsearch no new documents (instance {{ $labels.instance }}) description: \"No new documents for 10 min!\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"15 Elasticsearch no new documents"},{"location":"chap9/10Elasticsearch/#16-number-of-pending-tasks","text":"Number of pending tasks for 10 min. Cluster works slowly. - alert: NumberOfPendingTasks expr: elasticsearch_cluster_health_number_of_pending_tasks > 0 for: 5m labels: severity: warning annotations: summary: \"Number of pending tasks (instance {{ $labels.instance }})\" description: \"Number of pending tasks for 10 min. Cluster works slowly.\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"16. Number of pending tasks"},{"location":"chap9/10Elasticsearch/#17-number-of-elastic-healthy-data-nodes","text":"Number Healthy Data Nodes less then number_of_data_nodes - alert: NumberOfElasticHealthyDataNodes expr: elasticsearch_cluster_health_number_of_data_nodes < number_of_data_nodes for: 5m labels: severity: error annotations: summary: \"Number of Elastic Healthy Data Nodes (instance {{ $labels.instance }})\" description: \"Number Healthy Data Nodes less then number_of_data_nodes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"17. Number of Elastic Healthy Data Nodes"},{"location":"chap9/11Cassandra/","text":"9.Cassandra cassandra_exporter 1. instaclustr/cassandra_exporter 9.1. Cassandra Node is unavailable Cassandra Node is unavailable - {{ $labels.cassandra_cluster }} {{ $labels.exported_endpoint }} - alert: CassandraNodeIsUnavailable expr: sum(cassandra_endpoint_active) by (cassandra_cluster,instance,exported_endpoint) < 1 for: 0m labels: severity: critical annotations: summary: Cassandra Node is unavailable (instance {{ $labels.instance }}) description: \"Cassandra Node is unavailable - {{ $labels.cassandra_cluster }} {{ $labels.exported_endpoint }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9.2 Cassandra many compaction tasks are pending Many Cassandra compaction tasks are pending - {{ $labels.cassandra_cluster }} - alert: CassandraManyCompactionTasksArePending expr: cassandra_table_estimated_pending_compactions > 100 for: 0m labels: severity: warning annotations: summary: Cassandra many compaction tasks are pending (instance {{ $labels.instance }}) description: \"Many Cassandra compaction tasks are pending - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9.3 Cassandra commitlog pending tasks Cassandra commitlog pending tasks - {{ $labels.cassandra_cluster }} - alert: CassandraCommitlogPendingTasks expr: cassandra_commit_log_pending_tasks > 15 for: 2m labels: severity: warning annotations: summary: Cassandra commitlog pending tasks (instance {{ $labels.instance }}) description: \"Cassandra commitlog pending tasks - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9.4 Cassandra compaction executor blocked tasks Some Cassandra compaction executor tasks are blocked - {{ $labels.cassandra_cluster }} - alert: CassandraCompactionExecutorBlockedTasks expr: cassandra_thread_pool_blocked_tasks{pool=\"CompactionExecutor\"} > 15 for: 2m labels: severity: warning annotations: summary: Cassandra compaction executor blocked tasks (instance {{ $labels.instance }}) description: \"Some Cassandra compaction executor tasks are blocked - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9.5 Cassandra flush writer blocked tasks Some Cassandra flush writer tasks are blocked - {{ $labels.cassandra_cluster }} - alert: CassandraFlushWriterBlockedTasks expr: cassandra_thread_pool_blocked_tasks{pool=\"MemtableFlushWriter\"} > 15 for: 2m labels: severity: warning annotations: summary: Cassandra flush writer blocked tasks (instance {{ $labels.instance }}) description: \"Some Cassandra flush writer tasks are blocked - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9.6 Cassandra connection timeouts total Some connection between nodes are ending in timeout - {{ $labels.cassandra_cluster }} - alert: CassandraConnectionTimeoutsTotal expr: avg(cassandra_client_request_timeouts_total) by (cassandra_cluster,instance) > 5 for: 2m labels: severity: critical annotations: summary: Cassandra connection timeouts total (instance {{ $labels.instance }}) description: \"Some connection between nodes are ending in timeout - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9.7. Cassandra storage exceptions Something is going wrong with cassandra storage - {{ $labels.cassandra_cluster }} - alert: CassandraStorageExceptions expr: changes(cassandra_storage_exceptions_total[1m]) > 1 for: 0m labels: severity: critical annotations: summary: Cassandra storage exceptions (instance {{ $labels.instance }}) description: \"Something is going wrong with cassandra storage - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9.8. Cassandra tombstone dump Cassandra tombstone dump - {{ $labels.cassandra_cluster }} - alert: CassandraTombstoneDump expr: avg(cassandra_table_tombstones_scanned{quantile=\"0.99\"}) by (instance,cassandra_cluster,keyspace) > 100 for: 2m labels: severity: critical annotations: summary: Cassandra tombstone dump (instance {{ $labels.instance }}) description: \"Cassandra tombstone dump - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9.9 Cassandra client request unvailable write Some Cassandra client requests are unvailable to write - {{ $labels.cassandra_cluster }} - alert: CassandraClientRequestUnvailableWrite expr: changes(cassandra_client_request_unavailable_exceptions_total{operation=\"write\"}[1m]) > 0 for: 2m labels: severity: critical annotations: summary: Cassandra client request unvailable write (instance {{ $labels.instance }}) description: \"Some Cassandra client requests are unvailable to write - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9.10 Cassandra client request unvailable read Some Cassandra client requests are unvailable to read - {{ $labels.cassandra_cluster }} - alert: CassandraClientRequestUnvailableRead expr: changes(cassandra_client_request_unavailable_exceptions_total{operation=\"read\"}[1m]) > 0 for: 2m labels: severity: critical annotations: summary: Cassandra client request unvailable read (instance {{ $labels.instance }}) description: \"Some Cassandra client requests are unvailable to read - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9.11. Cassandra client request write failure Read failures have occurred, ensure there are not too many unavailable nodes - {{ $labels.cassandra_cluster }} - alert: CassandraClientRequestWriteFailure expr: increase(cassandra_client_request_failures_total{operation=\"write\"}[1m]) > 0 for: 2m labels: severity: critical annotations: summary: Cassandra client request write failure (instance {{ $labels.instance }}) description: \"Read failures have occurred, ensure there are not too many unavailable nodes - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9.12. Cassandra client request read failure Read failures have occurred, ensure there are not too many unavailable nodes - {{ $labels.cassandra_cluster }} - alert: CassandraClientRequestReadFailure expr: increase(cassandra_client_request_failures_total{operation=\"read\"}[1m]) > 0 for: 2m labels: severity: critical annotations: summary: Cassandra client request read failure (instance {{ $labels.instance }}) description: \"Read failures have occurred, ensure there are not too many unavailable nodes - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Cassandra : criteo/cassandra_exporter 1. Cassandra hints count Cassandra hints count has changed on {{ $labels.instance }} some nodes may go down - alert: CassandraHintsCount expr: changes(cassandra_stats{name=\"org:apache:cassandra:metrics:storage:totalhints:count\"}[1m]) > 3 for: 0m labels: severity: critical annotations: summary: Cassandra hints count (instance {{ $labels.instance }}) description: \"Cassandra hints count has changed on {{ $labels.instance }} some nodes may go down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2 Cassandra compaction task pending Many Cassandra compaction tasks are pending. You might need to increase I/O capacity by adding nodes to the cluster. - alert: CassandraCompactionTaskPending expr: avg_over_time(cassandra_stats{name=\"org:apache:cassandra:metrics:compaction:pendingtasks:value\"}[1m]) > 100 for: 2m labels: severity: warning annotations: summary: Cassandra compaction task pending (instance {{ $labels.instance }}) description: \"Many Cassandra compaction tasks are pending. You might need to increase I/O capacity by adding nodes to the cluster.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Cassandra viewwrite latency High viewwrite latency on {{ $labels.instance }} cassandra node - alert: CassandraViewwriteLatency expr: cassandra_stats{name=\"org:apache:cassandra:metrics:clientrequest:viewwrite:viewwritelatency:99thpercentile\",service=\"cas\"} > 100000 for: 2m labels: severity: warning annotations: summary: Cassandra viewwrite latency (instance {{ $labels.instance }}) description: \"High viewwrite latency on {{ $labels.instance }} cassandra node\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Cassandra bad hacker Increase of Cassandra authentication failures - alert: CassandraBadHacker expr: rate(cassandra_stats{name=\"org:apache:cassandra:metrics:client:authfailure:count\"}[1m]) > 5 for: 2m labels: severity: warning annotations: summary: Cassandra bad hacker (instance {{ $labels.instance }}) description: \"Increase of Cassandra authentication failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5. Cassandra node down Cassandra node down - alert: CassandraNodeDown expr: sum(cassandra_stats{name=\"org:apache:cassandra:net:failuredetector:downendpointcount\"}) by (service,group,cluster,env) > 0 for: 0m labels: severity: critical annotations: summary: Cassandra node down (instance {{ $labels.instance }}) description: \"Cassandra node down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6. Cassandra commitlog pending tasks Unexpected number of Cassandra commitlog pending tasks - alert: CassandraCommitlogPendingTasks expr: cassandra_stats{name=\"org:apache:cassandra:metrics:commitlog:pendingtasks:value\"} > 15 for: 2m labels: severity: warning annotations: summary: Cassandra commitlog pending tasks (instance {{ $labels.instance }}) description: \"Unexpected number of Cassandra commitlog pending tasks\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7. Cassandra compaction executor blocked tasks Some Cassandra compaction executor tasks are blocked - alert: CassandraCompactionExecutorBlockedTasks expr: cassandra_stats{name=\"org:apache:cassandra:metrics:threadpools:internal:compactionexecutor:currentlyblockedtasks:count\"} > 0 for: 2m labels: severity: warning annotations: summary: Cassandra compaction executor blocked tasks (instance {{ $labels.instance }}) description: \"Some Cassandra compaction executor tasks are blocked\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 8. Cassandra flush writer blocked tasks Some Cassandra flush writer tasks are blocked - alert: CassandraFlushWriterBlockedTasks expr: cassandra_stats{name=\"org:apache:cassandra:metrics:threadpools:internal:memtableflushwriter:currentlyblockedtasks:count\"} > 0 for: 2m labels: severity: warning annotations: summary: Cassandra flush writer blocked tasks (instance {{ $labels.instance }}) description: \"Some Cassandra flush writer tasks are blocked\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9. Cassandra repair pending tasks Some Cassandra repair tasks are pending - alert: CassandraRepairPendingTasks expr: cassandra_stats{name=\"org:apache:cassandra:metrics:threadpools:internal:antientropystage:pendingtasks:value\"} > 2 for: 2m labels: severity: warning annotations: summary: Cassandra repair pending tasks (instance {{ $labels.instance }}) description: \"Some Cassandra repair tasks are pending\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 10. Cassandra repair blocked tasks Some Cassandra repair tasks are blocked - alert: CassandraRepairBlockedTasks expr: cassandra_stats{name=\"org:apache:cassandra:metrics:threadpools:internal:antientropystage:currentlyblockedtasks:count\"} > 0 for: 2m labels: severity: warning annotations: summary: Cassandra repair blocked tasks (instance {{ $labels.instance }}) description: \"Some Cassandra repair tasks are blocked\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 11. Cassandra connection timeouts total Some connection between nodes are ending in timeout - alert: CassandraConnectionTimeoutsTotal expr: rate(cassandra_stats{name=\"org:apache:cassandra:metrics:connection:totaltimeouts:count\"}[1m]) > 5 for: 2m labels: severity: critical annotations: summary: Cassandra connection timeouts total (instance {{ $labels.instance }}) description: \"Some connection between nodes are ending in timeout\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 12. Cassandra storage exceptions Something is going wrong with cassandra storage - alert: CassandraStorageExceptions expr: changes(cassandra_stats{name=\"org:apache:cassandra:metrics:storage:exceptions:count\"}[1m]) > 1 for: 0m labels: severity: critical annotations: summary: Cassandra storage exceptions (instance {{ $labels.instance }}) description: \"Something is going wrong with cassandra storage\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 13. Cassandra tombstone dump Too much tombstones scanned in queries - alert: CassandraTombstoneDump expr: cassandra_stats{name=\"org:apache:cassandra:metrics:table:tombstonescannedhistogram:99thpercentile\"} > 1000 for: 0m labels: severity: critical annotations: summary: Cassandra tombstone dump (instance {{ $labels.instance }}) description: \"Too much tombstones scanned in queries\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 14. Cassandra client request unvailable write Write failures have occurred because too many nodes are unavailable - alert: CassandraClientRequestUnvailableWrite expr: changes(cassandra_stats{name=\"org:apache:cassandra:metrics:clientrequest:write:unavailables:count\"}[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Cassandra client request unvailable write (instance {{ $labels.instance }}) description: \"Write failures have occurred because too many nodes are unavailable\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 15. Cassandra client request unvailable read Read failures have occurred because too many nodes are unavailable - alert: CassandraClientRequestUnvailableRead expr: changes(cassandra_stats{name=\"org:apache:cassandra:metrics:clientrequest:read:unavailables:count\"}[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Cassandra client request unvailable read (instance {{ $labels.instance }}) description: \"Read failures have occurred because too many nodes are unavailable\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 16. Cassandra client request write failure A lot of write failures encountered. A write failure is a non-timeout exception encountered during a write request. Examine the reason map to find to the root cause. The most common cause for this type of error is when batch sizes are too large. - alert: CassandraClientRequestWriteFailure expr: increase(cassandra_stats{name=\"org:apache:cassandra:metrics:clientrequest:write:failures:oneminuterate\"}[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Cassandra client request write failure (instance {{ $labels.instance }}) description: \"A lot of write failures encountered. A write failure is a non-timeout exception encountered during a write request. Examine the reason map to find to the root cause. The most common cause for this type of error is when batch sizes are too large.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 17. Cassandra client request read failure A lot of read failures encountered. A read failure is a non-timeout exception encountered during a read request. Examine the reason map to find to the root cause. The most common cause for this type of error is when batch sizes are too large. - alert: CassandraClientRequestReadFailure expr: increase(cassandra_stats{name=\"org:apache:cassandra:metrics:clientrequest:read:failures:oneminuterate\"}[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Cassandra client request read failure (instance {{ $labels.instance }}) description: \"A lot of read failures encountered. A read failure is a non-timeout exception encountered during a read request. Examine the reason map to find to the root cause. The most common cause for this type of error is when batch sizes are too large.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 18. Cassandra cache hit rate key cache Key cache hit rate is below 85% - alert: CassandraCacheHitRateKeyCache expr: cassandra_stats{name=\"org:apache:cassandra:metrics:cache:keycache:hitrate:value\"} < .85 for: 2m labels: severity: critical annotations: summary: Cassandra cache hit rate key cache (instance {{ $labels.instance }}) description: \"Key cache hit rate is below 85%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.Cassandra `cassandra_exporter`"},{"location":"chap9/11Cassandra/#9cassandra-cassandra_exporter","text":"","title":"9.Cassandra cassandra_exporter"},{"location":"chap9/11Cassandra/#1instaclustrcassandra_exporter","text":"","title":"1.instaclustr/cassandra_exporter"},{"location":"chap9/11Cassandra/#91-cassandra-node-is-unavailable","text":"Cassandra Node is unavailable - {{ $labels.cassandra_cluster }} {{ $labels.exported_endpoint }} - alert: CassandraNodeIsUnavailable expr: sum(cassandra_endpoint_active) by (cassandra_cluster,instance,exported_endpoint) < 1 for: 0m labels: severity: critical annotations: summary: Cassandra Node is unavailable (instance {{ $labels.instance }}) description: \"Cassandra Node is unavailable - {{ $labels.cassandra_cluster }} {{ $labels.exported_endpoint }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.1. Cassandra Node is unavailable"},{"location":"chap9/11Cassandra/#92-cassandra-many-compaction-tasks-are-pending","text":"Many Cassandra compaction tasks are pending - {{ $labels.cassandra_cluster }} - alert: CassandraManyCompactionTasksArePending expr: cassandra_table_estimated_pending_compactions > 100 for: 0m labels: severity: warning annotations: summary: Cassandra many compaction tasks are pending (instance {{ $labels.instance }}) description: \"Many Cassandra compaction tasks are pending - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.2 Cassandra many compaction tasks are pending"},{"location":"chap9/11Cassandra/#93-cassandra-commitlog-pending-tasks","text":"Cassandra commitlog pending tasks - {{ $labels.cassandra_cluster }} - alert: CassandraCommitlogPendingTasks expr: cassandra_commit_log_pending_tasks > 15 for: 2m labels: severity: warning annotations: summary: Cassandra commitlog pending tasks (instance {{ $labels.instance }}) description: \"Cassandra commitlog pending tasks - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.3 Cassandra commitlog pending tasks"},{"location":"chap9/11Cassandra/#94-cassandra-compaction-executor-blocked-tasks","text":"Some Cassandra compaction executor tasks are blocked - {{ $labels.cassandra_cluster }} - alert: CassandraCompactionExecutorBlockedTasks expr: cassandra_thread_pool_blocked_tasks{pool=\"CompactionExecutor\"} > 15 for: 2m labels: severity: warning annotations: summary: Cassandra compaction executor blocked tasks (instance {{ $labels.instance }}) description: \"Some Cassandra compaction executor tasks are blocked - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.4 Cassandra compaction executor blocked tasks"},{"location":"chap9/11Cassandra/#95-cassandra-flush-writer-blocked-tasks","text":"Some Cassandra flush writer tasks are blocked - {{ $labels.cassandra_cluster }} - alert: CassandraFlushWriterBlockedTasks expr: cassandra_thread_pool_blocked_tasks{pool=\"MemtableFlushWriter\"} > 15 for: 2m labels: severity: warning annotations: summary: Cassandra flush writer blocked tasks (instance {{ $labels.instance }}) description: \"Some Cassandra flush writer tasks are blocked - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.5 Cassandra flush writer blocked tasks"},{"location":"chap9/11Cassandra/#96-cassandra-connection-timeouts-total","text":"Some connection between nodes are ending in timeout - {{ $labels.cassandra_cluster }} - alert: CassandraConnectionTimeoutsTotal expr: avg(cassandra_client_request_timeouts_total) by (cassandra_cluster,instance) > 5 for: 2m labels: severity: critical annotations: summary: Cassandra connection timeouts total (instance {{ $labels.instance }}) description: \"Some connection between nodes are ending in timeout - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.6 Cassandra connection timeouts total"},{"location":"chap9/11Cassandra/#97-cassandra-storage-exceptions","text":"Something is going wrong with cassandra storage - {{ $labels.cassandra_cluster }} - alert: CassandraStorageExceptions expr: changes(cassandra_storage_exceptions_total[1m]) > 1 for: 0m labels: severity: critical annotations: summary: Cassandra storage exceptions (instance {{ $labels.instance }}) description: \"Something is going wrong with cassandra storage - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.7. Cassandra storage exceptions"},{"location":"chap9/11Cassandra/#98-cassandra-tombstone-dump","text":"Cassandra tombstone dump - {{ $labels.cassandra_cluster }} - alert: CassandraTombstoneDump expr: avg(cassandra_table_tombstones_scanned{quantile=\"0.99\"}) by (instance,cassandra_cluster,keyspace) > 100 for: 2m labels: severity: critical annotations: summary: Cassandra tombstone dump (instance {{ $labels.instance }}) description: \"Cassandra tombstone dump - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.8. Cassandra tombstone dump"},{"location":"chap9/11Cassandra/#99-cassandra-client-request-unvailable-write","text":"Some Cassandra client requests are unvailable to write - {{ $labels.cassandra_cluster }} - alert: CassandraClientRequestUnvailableWrite expr: changes(cassandra_client_request_unavailable_exceptions_total{operation=\"write\"}[1m]) > 0 for: 2m labels: severity: critical annotations: summary: Cassandra client request unvailable write (instance {{ $labels.instance }}) description: \"Some Cassandra client requests are unvailable to write - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.9 Cassandra client request unvailable write"},{"location":"chap9/11Cassandra/#910-cassandra-client-request-unvailable-read","text":"Some Cassandra client requests are unvailable to read - {{ $labels.cassandra_cluster }} - alert: CassandraClientRequestUnvailableRead expr: changes(cassandra_client_request_unavailable_exceptions_total{operation=\"read\"}[1m]) > 0 for: 2m labels: severity: critical annotations: summary: Cassandra client request unvailable read (instance {{ $labels.instance }}) description: \"Some Cassandra client requests are unvailable to read - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.10 Cassandra client request unvailable read"},{"location":"chap9/11Cassandra/#911-cassandra-client-request-write-failure","text":"Read failures have occurred, ensure there are not too many unavailable nodes - {{ $labels.cassandra_cluster }} - alert: CassandraClientRequestWriteFailure expr: increase(cassandra_client_request_failures_total{operation=\"write\"}[1m]) > 0 for: 2m labels: severity: critical annotations: summary: Cassandra client request write failure (instance {{ $labels.instance }}) description: \"Read failures have occurred, ensure there are not too many unavailable nodes - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.11. Cassandra client request write failure"},{"location":"chap9/11Cassandra/#912-cassandra-client-request-read-failure","text":"Read failures have occurred, ensure there are not too many unavailable nodes - {{ $labels.cassandra_cluster }} - alert: CassandraClientRequestReadFailure expr: increase(cassandra_client_request_failures_total{operation=\"read\"}[1m]) > 0 for: 2m labels: severity: critical annotations: summary: Cassandra client request read failure (instance {{ $labels.instance }}) description: \"Read failures have occurred, ensure there are not too many unavailable nodes - {{ $labels.cassandra_cluster }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9.12. Cassandra client request read failure"},{"location":"chap9/11Cassandra/#2-cassandra-criteocassandra_exporter","text":"","title":"2. Cassandra : criteo/cassandra_exporter"},{"location":"chap9/11Cassandra/#1-cassandra-hints-count","text":"Cassandra hints count has changed on {{ $labels.instance }} some nodes may go down - alert: CassandraHintsCount expr: changes(cassandra_stats{name=\"org:apache:cassandra:metrics:storage:totalhints:count\"}[1m]) > 3 for: 0m labels: severity: critical annotations: summary: Cassandra hints count (instance {{ $labels.instance }}) description: \"Cassandra hints count has changed on {{ $labels.instance }} some nodes may go down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Cassandra hints count"},{"location":"chap9/11Cassandra/#2-cassandra-compaction-task-pending","text":"Many Cassandra compaction tasks are pending. You might need to increase I/O capacity by adding nodes to the cluster. - alert: CassandraCompactionTaskPending expr: avg_over_time(cassandra_stats{name=\"org:apache:cassandra:metrics:compaction:pendingtasks:value\"}[1m]) > 100 for: 2m labels: severity: warning annotations: summary: Cassandra compaction task pending (instance {{ $labels.instance }}) description: \"Many Cassandra compaction tasks are pending. You might need to increase I/O capacity by adding nodes to the cluster.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2 Cassandra compaction task pending"},{"location":"chap9/11Cassandra/#3-cassandra-viewwrite-latency","text":"High viewwrite latency on {{ $labels.instance }} cassandra node - alert: CassandraViewwriteLatency expr: cassandra_stats{name=\"org:apache:cassandra:metrics:clientrequest:viewwrite:viewwritelatency:99thpercentile\",service=\"cas\"} > 100000 for: 2m labels: severity: warning annotations: summary: Cassandra viewwrite latency (instance {{ $labels.instance }}) description: \"High viewwrite latency on {{ $labels.instance }} cassandra node\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Cassandra viewwrite latency"},{"location":"chap9/11Cassandra/#4-cassandra-bad-hacker","text":"Increase of Cassandra authentication failures - alert: CassandraBadHacker expr: rate(cassandra_stats{name=\"org:apache:cassandra:metrics:client:authfailure:count\"}[1m]) > 5 for: 2m labels: severity: warning annotations: summary: Cassandra bad hacker (instance {{ $labels.instance }}) description: \"Increase of Cassandra authentication failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Cassandra bad hacker"},{"location":"chap9/11Cassandra/#5-cassandra-node-down","text":"Cassandra node down - alert: CassandraNodeDown expr: sum(cassandra_stats{name=\"org:apache:cassandra:net:failuredetector:downendpointcount\"}) by (service,group,cluster,env) > 0 for: 0m labels: severity: critical annotations: summary: Cassandra node down (instance {{ $labels.instance }}) description: \"Cassandra node down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5. Cassandra node down"},{"location":"chap9/11Cassandra/#6-cassandra-commitlog-pending-tasks","text":"Unexpected number of Cassandra commitlog pending tasks - alert: CassandraCommitlogPendingTasks expr: cassandra_stats{name=\"org:apache:cassandra:metrics:commitlog:pendingtasks:value\"} > 15 for: 2m labels: severity: warning annotations: summary: Cassandra commitlog pending tasks (instance {{ $labels.instance }}) description: \"Unexpected number of Cassandra commitlog pending tasks\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6. Cassandra commitlog pending tasks"},{"location":"chap9/11Cassandra/#7-cassandra-compaction-executor-blocked-tasks","text":"Some Cassandra compaction executor tasks are blocked - alert: CassandraCompactionExecutorBlockedTasks expr: cassandra_stats{name=\"org:apache:cassandra:metrics:threadpools:internal:compactionexecutor:currentlyblockedtasks:count\"} > 0 for: 2m labels: severity: warning annotations: summary: Cassandra compaction executor blocked tasks (instance {{ $labels.instance }}) description: \"Some Cassandra compaction executor tasks are blocked\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7. Cassandra compaction executor blocked tasks"},{"location":"chap9/11Cassandra/#8-cassandra-flush-writer-blocked-tasks","text":"Some Cassandra flush writer tasks are blocked - alert: CassandraFlushWriterBlockedTasks expr: cassandra_stats{name=\"org:apache:cassandra:metrics:threadpools:internal:memtableflushwriter:currentlyblockedtasks:count\"} > 0 for: 2m labels: severity: warning annotations: summary: Cassandra flush writer blocked tasks (instance {{ $labels.instance }}) description: \"Some Cassandra flush writer tasks are blocked\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"8. Cassandra flush writer blocked tasks"},{"location":"chap9/11Cassandra/#9-cassandra-repair-pending-tasks","text":"Some Cassandra repair tasks are pending - alert: CassandraRepairPendingTasks expr: cassandra_stats{name=\"org:apache:cassandra:metrics:threadpools:internal:antientropystage:pendingtasks:value\"} > 2 for: 2m labels: severity: warning annotations: summary: Cassandra repair pending tasks (instance {{ $labels.instance }}) description: \"Some Cassandra repair tasks are pending\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9. Cassandra repair pending tasks"},{"location":"chap9/11Cassandra/#10-cassandra-repair-blocked-tasks","text":"Some Cassandra repair tasks are blocked - alert: CassandraRepairBlockedTasks expr: cassandra_stats{name=\"org:apache:cassandra:metrics:threadpools:internal:antientropystage:currentlyblockedtasks:count\"} > 0 for: 2m labels: severity: warning annotations: summary: Cassandra repair blocked tasks (instance {{ $labels.instance }}) description: \"Some Cassandra repair tasks are blocked\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"10. Cassandra repair blocked tasks"},{"location":"chap9/11Cassandra/#11-cassandra-connection-timeouts-total","text":"Some connection between nodes are ending in timeout - alert: CassandraConnectionTimeoutsTotal expr: rate(cassandra_stats{name=\"org:apache:cassandra:metrics:connection:totaltimeouts:count\"}[1m]) > 5 for: 2m labels: severity: critical annotations: summary: Cassandra connection timeouts total (instance {{ $labels.instance }}) description: \"Some connection between nodes are ending in timeout\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"11. Cassandra connection timeouts total"},{"location":"chap9/11Cassandra/#12-cassandra-storage-exceptions","text":"Something is going wrong with cassandra storage - alert: CassandraStorageExceptions expr: changes(cassandra_stats{name=\"org:apache:cassandra:metrics:storage:exceptions:count\"}[1m]) > 1 for: 0m labels: severity: critical annotations: summary: Cassandra storage exceptions (instance {{ $labels.instance }}) description: \"Something is going wrong with cassandra storage\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"12. Cassandra storage exceptions"},{"location":"chap9/11Cassandra/#13-cassandra-tombstone-dump","text":"Too much tombstones scanned in queries - alert: CassandraTombstoneDump expr: cassandra_stats{name=\"org:apache:cassandra:metrics:table:tombstonescannedhistogram:99thpercentile\"} > 1000 for: 0m labels: severity: critical annotations: summary: Cassandra tombstone dump (instance {{ $labels.instance }}) description: \"Too much tombstones scanned in queries\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"13. Cassandra tombstone dump"},{"location":"chap9/11Cassandra/#14-cassandra-client-request-unvailable-write","text":"Write failures have occurred because too many nodes are unavailable - alert: CassandraClientRequestUnvailableWrite expr: changes(cassandra_stats{name=\"org:apache:cassandra:metrics:clientrequest:write:unavailables:count\"}[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Cassandra client request unvailable write (instance {{ $labels.instance }}) description: \"Write failures have occurred because too many nodes are unavailable\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"14. Cassandra client request unvailable write"},{"location":"chap9/11Cassandra/#15-cassandra-client-request-unvailable-read","text":"Read failures have occurred because too many nodes are unavailable - alert: CassandraClientRequestUnvailableRead expr: changes(cassandra_stats{name=\"org:apache:cassandra:metrics:clientrequest:read:unavailables:count\"}[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Cassandra client request unvailable read (instance {{ $labels.instance }}) description: \"Read failures have occurred because too many nodes are unavailable\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"15. Cassandra client request unvailable read"},{"location":"chap9/11Cassandra/#16-cassandra-client-request-write-failure","text":"A lot of write failures encountered. A write failure is a non-timeout exception encountered during a write request. Examine the reason map to find to the root cause. The most common cause for this type of error is when batch sizes are too large. - alert: CassandraClientRequestWriteFailure expr: increase(cassandra_stats{name=\"org:apache:cassandra:metrics:clientrequest:write:failures:oneminuterate\"}[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Cassandra client request write failure (instance {{ $labels.instance }}) description: \"A lot of write failures encountered. A write failure is a non-timeout exception encountered during a write request. Examine the reason map to find to the root cause. The most common cause for this type of error is when batch sizes are too large.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"16. Cassandra client request write failure"},{"location":"chap9/11Cassandra/#17-cassandra-client-request-read-failure","text":"A lot of read failures encountered. A read failure is a non-timeout exception encountered during a read request. Examine the reason map to find to the root cause. The most common cause for this type of error is when batch sizes are too large. - alert: CassandraClientRequestReadFailure expr: increase(cassandra_stats{name=\"org:apache:cassandra:metrics:clientrequest:read:failures:oneminuterate\"}[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Cassandra client request read failure (instance {{ $labels.instance }}) description: \"A lot of read failures encountered. A read failure is a non-timeout exception encountered during a read request. Examine the reason map to find to the root cause. The most common cause for this type of error is when batch sizes are too large.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"17. Cassandra client request read failure"},{"location":"chap9/11Cassandra/#18-cassandra-cache-hit-rate-key-cache","text":"Key cache hit rate is below 85% - alert: CassandraCacheHitRateKeyCache expr: cassandra_stats{name=\"org:apache:cassandra:metrics:cache:keycache:hitrate:value\"} < .85 for: 2m labels: severity: critical annotations: summary: Cassandra cache hit rate key cache (instance {{ $labels.instance }}) description: \"Key cache hit rate is below 85%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"18. Cassandra cache hit rate key cache"},{"location":"chap9/12Apache/","text":"5 Apache apache_exporter Lusitaniae/apache_exporter 1. Apache down Apache down - alert: ApacheDown expr: apache_up == 0 for: 0m labels: severity: critical annotations: summary: Apache down (instance {{ $labels.instance }}) description: \"Apache down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Apache workers load Apache workers in busy state approach the max workers count 80% workers busy on {{ $labels.instance }} - alert: ApacheWorkersLoad expr: (sum by (instance) (apache_workers{state=\"busy\"}) / sum by (instance) (apache_scoreboard) ) * 100 > 80 for: 2m labels: severity: warning annotations: summary: Apache workers load (instance {{ $labels.instance }}) description: \"Apache workers in busy state approach the max workers count 80% workers busy on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Apache restart Apache has just been restarted. - alert: ApacheRestart expr: apache_uptime_seconds_total / 60 < 1 for: 0m labels: severity: warning annotations: summary: Apache restart (instance {{ $labels.instance }}) description: \"Apache has just been restarted.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5 Apache `apache_exporter`"},{"location":"chap9/12Apache/#5-apache-apache_exporter","text":"Lusitaniae/apache_exporter","title":"5 Apache apache_exporter"},{"location":"chap9/12Apache/#1-apache-down","text":"Apache down - alert: ApacheDown expr: apache_up == 0 for: 0m labels: severity: critical annotations: summary: Apache down (instance {{ $labels.instance }}) description: \"Apache down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Apache down"},{"location":"chap9/12Apache/#2-apache-workers-load","text":"Apache workers in busy state approach the max workers count 80% workers busy on {{ $labels.instance }} - alert: ApacheWorkersLoad expr: (sum by (instance) (apache_workers{state=\"busy\"}) / sum by (instance) (apache_scoreboard) ) * 100 > 80 for: 2m labels: severity: warning annotations: summary: Apache workers load (instance {{ $labels.instance }}) description: \"Apache workers in busy state approach the max workers count 80% workers busy on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Apache workers load"},{"location":"chap9/12Apache/#3-apache-restart","text":"Apache has just been restarted. - alert: ApacheRestart expr: apache_uptime_seconds_total / 60 < 1 for: 0m labels: severity: warning annotations: summary: Apache restart (instance {{ $labels.instance }}) description: \"Apache has just been restarted.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Apache restart"},{"location":"chap9/13HaProxy/","text":"3 HaProxy haproxy_exporter 1 Embedded exporter (HAProxy >= v2) 1.1.HAProxy high HTTP 4xx error rate backend Too many HTTP requests with status 4xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }} - alert: HaproxyHighHttp4xxErrorRateBackend expr: ((sum by (proxy) (rate(haproxy_server_http_responses_total{code=\"4xx\"}[1m])) / sum by (proxy) (rate(haproxy_server_http_responses_total[1m]))) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 4xx error rate backend (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 4xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.2. HAProxy high HTTP 5xx error rate backend Too many HTTP requests with status 5xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }} - alert: HaproxyHighHttp5xxErrorRateBackend expr: ((sum by (proxy) (rate(haproxy_server_http_responses_total{code=\"5xx\"}[1m])) / sum by (proxy) (rate(haproxy_server_http_responses_total[1m]))) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 5xx error rate backend (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 5xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.3. HAProxy high HTTP 4xx error rate server Too many HTTP requests with status 4xx (> 5%) on server {{ $labels.server }} - alert: HaproxyHighHttp4xxErrorRateServer expr: ((sum by (server) (rate(haproxy_server_http_responses_total{code=\"4xx\"}[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]))) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 4xx error rate server (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 4xx (> 5%) on server {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.4. HAProxy high HTTP 5xx error rate server Too many HTTP requests with status 5xx (> 5%) on server {{ $labels.server }} - alert: HaproxyHighHttp5xxErrorRateServer expr: ((sum by (server) (rate(haproxy_server_http_responses_total{code=\"5xx\"}[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]))) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 5xx error rate server (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 5xx (> 5%) on server {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.5. HAProxy server response errors Too many response errors to {{ $labels.server }} server (> 5%). - alert: HaproxyServerResponseErrors expr: (sum by (server) (rate(haproxy_server_response_errors_total[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]))) * 100 > 5 for: 1m labels: severity: critical annotations: summary: HAProxy server response errors (instance {{ $labels.instance }}) description: \"Too many response errors to {{ $labels.server }} server (> 5%).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.6. HAProxy backend connection errors Too many connection errors to {{ $labels.fqdn }}/{{ $labels.backend }} backend (> 100 req/s). Request throughput may be too high. - alert: HaproxyBackendConnectionErrors expr: (sum by (proxy) (rate(haproxy_backend_connection_errors_total[1m]))) > 100 for: 1m labels: severity: critical annotations: summary: HAProxy backend connection errors (instance {{ $labels.instance }}) description: \"Too many connection errors to {{ $labels.fqdn }}/{{ $labels.backend }} backend (> 100 req/s). Request throughput may be too high.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.7. HAProxy server connection errors Too many connection errors to {{ $labels.server }} server (> 100 req/s). Request throughput may be too high. - alert: HaproxyServerConnectionErrors expr: (sum by (proxy) (rate(haproxy_server_connection_errors_total[1m]))) > 100 for: 0m labels: severity: critical annotations: summary: HAProxy server connection errors (instance {{ $labels.instance }}) description: \"Too many connection errors to {{ $labels.server }} server (> 100 req/s). Request throughput may be too high.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.8. HAProxy backend max active session > 80% Session limit from backend {{ $labels.proxy }} to server {{ $labels.server }} reached 80% of limit - {{ $value | printf \"%.2f\"}}% - alert: HaproxyBackendMaxActiveSession>80% expr: ((haproxy_server_max_sessions >0) * 100) / (haproxy_server_limit_sessions > 0) > 80 for: 2m labels: severity: warning annotations: summary: HAProxy backend max active session > 80% (instance {{ $labels.instance }}) description: \"Session limit from backend {{ $labels.proxy }} to server {{ $labels.server }} reached 80% of limit - {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.9. HAProxy pending requests Some HAProxy requests are pending on {{ $labels.proxy }} - {{ $value | printf \"%.2f\"}} - alert: HaproxyPendingRequests expr: sum by (proxy) (rate(haproxy_backend_current_queue[2m])) > 0 for: 2m labels: severity: warning annotations: summary: HAProxy pending requests (instance {{ $labels.instance }}) description: \"Some HAProxy requests are pending on {{ $labels.proxy }} - {{ $value | printf \\\"%.2f\\\"}}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.10. HAProxy HTTP slowing down Average request time is increasing - {{ $value | printf \"%.2f\"}} - alert: HaproxyHttpSlowingDown expr: avg by (proxy) (haproxy_backend_max_total_time_seconds) > 1 for: 1m labels: severity: warning annotations: summary: HAProxy HTTP slowing down (instance {{ $labels.instance }}) description: \"Average request time is increasing - {{ $value | printf \\\"%.2f\\\"}}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.11. HAProxy retry high High rate of retry on {{ $labels.proxy }} - {{ $value | printf \"%.2f\"}} - alert: HaproxyRetryHigh expr: sum by (proxy) (rate(haproxy_backend_retry_warnings_total[1m])) > 10 for: 2m labels: severity: warning annotations: summary: HAProxy retry high (instance {{ $labels.instance }}) description: \"High rate of retry on {{ $labels.proxy }} - {{ $value | printf \\\"%.2f\\\"}}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.12. HAproxy has no alive backends HAProxy has no alive active or backup backends for {{ $labels.proxy }} - alert: HaproxyHasNoAliveBackends expr: haproxy_backend_active_servers + haproxy_backend_backup_servers == 0 for: 0m labels: severity: critical annotations: summary: HAproxy has no alive backends (instance {{ $labels.instance }}) description: \"HAProxy has no alive active or backup backends for {{ $labels.proxy }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.13. HAProxy frontend security blocked requests HAProxy is blocking requests for security reason - alert: HaproxyFrontendSecurityBlockedRequests expr: sum by (proxy) (rate(haproxy_frontend_denied_connections_total[2m])) > 10 for: 2m labels: severity: warning annotations: summary: HAProxy frontend security blocked requests (instance {{ $labels.instance }}) description: \"HAProxy is blocking requests for security reason\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.14. HAProxy server healthcheck failure Some server healthcheck are failing on {{ $labels.server }} - alert: HaproxyServerHealthcheckFailure expr: increase(haproxy_server_check_failures_total[1m]) > 0 for: 1m labels: severity: warning annotations: summary: HAProxy server healthcheck failure (instance {{ $labels.instance }}) description: \"Some server healthcheck are failing on {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2 HaProxy : prometheus/haproxy_exporter (HAProxy < v2) 2.1. HAProxy down HAProxy down - alert: HaproxyDown expr: haproxy_up == 0 for: 0m labels: severity: critical annotations: summary: HAProxy down (instance {{ $labels.instance }}) description: \"HAProxy down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.2. HAProxy high HTTP 4xx error rate backend Too many HTTP requests with status 4xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }} - alert: HaproxyHighHttp4xxErrorRateBackend expr: sum by (backend) (rate(haproxy_server_http_responses_total{code=\"4xx\"}[1m])) / sum by (backend) (rate(haproxy_server_http_responses_total[1m]) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 4xx error rate backend (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 4xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.3. HAProxy high HTTP 5xx error rate backend Too many HTTP requests with status 5xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }} - alert: HaproxyHighHttp5xxErrorRateBackend expr: sum by (backend) (rate(haproxy_server_http_responses_total{code=\"5xx\"}[1m])) / sum by (backend) (rate(haproxy_server_http_responses_total[1m]) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 5xx error rate backend (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 5xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.4. HAProxy high HTTP 4xx error rate server Too many HTTP requests with status 4xx (> 5%) on server {{ $labels.server }} - alert: HaproxyHighHttp4xxErrorRateServer expr: sum by (server) (rate(haproxy_server_http_responses_total{code=\"4xx\"}[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 4xx error rate server (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 4xx (> 5%) on server {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.5. HAProxy high HTTP 5xx error rate server Too many HTTP requests with status 5xx (> 5%) on server {{ $labels.server }} - alert: HaproxyHighHttp5xxErrorRateServer expr: sum by (server) (rate(haproxy_server_http_responses_total{code=\"5xx\"}[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 5xx error rate server (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 5xx (> 5%) on server {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.6. HAProxy server response errors Too many response errors to {{ $labels.server }} server (> 5%). - alert: HaproxyServerResponseErrors expr: sum by (server) (rate(haproxy_server_response_errors_total[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy server response errors (instance {{ $labels.instance }}) description: \"Too many response errors to {{ $labels.server }} server (> 5%).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.7. HAProxy backend connection errors Too many connection errors to {{ $labels.fqdn }}/{{ $labels.backend }} backend (> 100 req/s). Request throughput may be too high. - alert: HaproxyBackendConnectionErrors expr: sum by (backend) (rate(haproxy_backend_connection_errors_total[1m])) > 100 for: 1m labels: severity: critical annotations: summary: HAProxy backend connection errors (instance {{ $labels.instance }}) description: \"Too many connection errors to {{ $labels.fqdn }}/{{ $labels.backend }} backend (> 100 req/s). Request throughput may be too high.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.8. HAProxy server connection errors Too many connection errors to {{ $labels.server }} server (> 100 req/s). Request throughput may be too high. - alert: HaproxyServerConnectionErrors expr: sum by (server) (rate(haproxy_server_connection_errors_total[1m])) > 100 for: 0m labels: severity: critical annotations: summary: HAProxy server connection errors (instance {{ $labels.instance }}) description: \"Too many connection errors to {{ $labels.server }} server (> 100 req/s). Request throughput may be too high.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.9. HAProxy backend max active session HAproxy backend {{ $labels.fqdn }}/{{ $labels.backend }} is reaching session limit (> 80%). - alert: HaproxyBackendMaxActiveSession expr: ((sum by (backend) (avg_over_time(haproxy_backend_max_sessions[2m])) / sum by (backend) (avg_over_time(haproxy_backend_limit_sessions[2m]))) * 100) > 80 for: 2m labels: severity: warning annotations: summary: HAProxy backend max active session (instance {{ $labels.instance }}) description: \"HAproxy backend {{ $labels.fqdn }}/{{ $labels.backend }} is reaching session limit (> 80%).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.10. HAProxy pending requests Some HAProxy requests are pending on {{ $labels.fqdn }}/{{ $labels.backend }} backend - alert: HaproxyPendingRequests expr: sum by (backend) (haproxy_backend_current_queue) > 0 for: 2m labels: severity: warning annotations: summary: HAProxy pending requests (instance {{ $labels.instance }}) description: \"Some HAProxy requests are pending on {{ $labels.fqdn }}/{{ $labels.backend }} backend\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.11. HAProxy HTTP slowing down Average request time is increasing - alert: HaproxyHttpSlowingDown expr: avg by (backend) (haproxy_backend_http_total_time_average_seconds) > 1 for: 1m labels: severity: warning annotations: summary: HAProxy HTTP slowing down (instance {{ $labels.instance }}) description: \"Average request time is increasing\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.12. HAProxy retry high High rate of retry on {{ $labels.fqdn }}/{{ $labels.backend }} backend - alert: HaproxyRetryHigh expr: sum by (backend) (rate(haproxy_backend_retry_warnings_total[1m])) > 10 for: 2m labels: severity: warning annotations: summary: HAProxy retry high (instance {{ $labels.instance }}) description: \"High rate of retry on {{ $labels.fqdn }}/{{ $labels.backend }} backend\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.13. HAProxy backend down HAProxy backend is down - alert: HaproxyBackendDown expr: haproxy_backend_up == 0 for: 0m labels: severity: critical annotations: summary: HAProxy backend down (instance {{ $labels.instance }}) description: \"HAProxy backend is down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.14. HAProxy server down HAProxy server is down - alert: HaproxyServerDown expr: haproxy_server_up == 0 for: 0m labels: severity: critical annotations: summary: HAProxy server down (instance {{ $labels.instance }}) description: \"HAProxy server is down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.15. HAProxy frontend security blocked requests HAProxy is blocking requests for security reason - alert: HaproxyFrontendSecurityBlockedRequests expr: sum by (frontend) (rate(haproxy_frontend_requests_denied_total[2m])) > 10 for: 2m labels: severity: warning annotations: summary: HAProxy frontend security blocked requests (instance {{ $labels.instance }}) description: \"HAProxy is blocking requests for security reason\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.16. HAProxy server healthcheck failure Some server healthcheck are failing on {{ $labels.server }} - alert: HaproxyServerHealthcheckFailure expr: increase(haproxy_server_check_failures_total[1m]) > 0 for: 1m labels: severity: warning annotations: summary: HAProxy server healthcheck failure (instance {{ $labels.instance }}) description: \"Some server healthcheck are failing on {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3 HaProxy `haproxy_exporter`"},{"location":"chap9/13HaProxy/#3-haproxy-haproxy_exporter","text":"","title":"3 HaProxy haproxy_exporter"},{"location":"chap9/13HaProxy/#1-embedded-exporter-haproxy-v2","text":"","title":"1 Embedded exporter (HAProxy &gt;= v2)"},{"location":"chap9/13HaProxy/#11haproxy-high-http-4xx-error-rate-backend","text":"Too many HTTP requests with status 4xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }} - alert: HaproxyHighHttp4xxErrorRateBackend expr: ((sum by (proxy) (rate(haproxy_server_http_responses_total{code=\"4xx\"}[1m])) / sum by (proxy) (rate(haproxy_server_http_responses_total[1m]))) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 4xx error rate backend (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 4xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.HAProxy high HTTP 4xx error rate backend"},{"location":"chap9/13HaProxy/#12-haproxy-high-http-5xx-error-rate-backend","text":"Too many HTTP requests with status 5xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }} - alert: HaproxyHighHttp5xxErrorRateBackend expr: ((sum by (proxy) (rate(haproxy_server_http_responses_total{code=\"5xx\"}[1m])) / sum by (proxy) (rate(haproxy_server_http_responses_total[1m]))) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 5xx error rate backend (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 5xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.2. HAProxy high HTTP 5xx error rate backend"},{"location":"chap9/13HaProxy/#13-haproxy-high-http-4xx-error-rate-server","text":"Too many HTTP requests with status 4xx (> 5%) on server {{ $labels.server }} - alert: HaproxyHighHttp4xxErrorRateServer expr: ((sum by (server) (rate(haproxy_server_http_responses_total{code=\"4xx\"}[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]))) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 4xx error rate server (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 4xx (> 5%) on server {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.3. HAProxy high HTTP 4xx error rate server"},{"location":"chap9/13HaProxy/#14-haproxy-high-http-5xx-error-rate-server","text":"Too many HTTP requests with status 5xx (> 5%) on server {{ $labels.server }} - alert: HaproxyHighHttp5xxErrorRateServer expr: ((sum by (server) (rate(haproxy_server_http_responses_total{code=\"5xx\"}[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]))) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 5xx error rate server (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 5xx (> 5%) on server {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.4. HAProxy high HTTP 5xx error rate server"},{"location":"chap9/13HaProxy/#15-haproxy-server-response-errors","text":"Too many response errors to {{ $labels.server }} server (> 5%). - alert: HaproxyServerResponseErrors expr: (sum by (server) (rate(haproxy_server_response_errors_total[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]))) * 100 > 5 for: 1m labels: severity: critical annotations: summary: HAProxy server response errors (instance {{ $labels.instance }}) description: \"Too many response errors to {{ $labels.server }} server (> 5%).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.5. HAProxy server response errors"},{"location":"chap9/13HaProxy/#16-haproxy-backend-connection-errors","text":"Too many connection errors to {{ $labels.fqdn }}/{{ $labels.backend }} backend (> 100 req/s). Request throughput may be too high. - alert: HaproxyBackendConnectionErrors expr: (sum by (proxy) (rate(haproxy_backend_connection_errors_total[1m]))) > 100 for: 1m labels: severity: critical annotations: summary: HAProxy backend connection errors (instance {{ $labels.instance }}) description: \"Too many connection errors to {{ $labels.fqdn }}/{{ $labels.backend }} backend (> 100 req/s). Request throughput may be too high.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.6. HAProxy backend connection errors"},{"location":"chap9/13HaProxy/#17-haproxy-server-connection-errors","text":"Too many connection errors to {{ $labels.server }} server (> 100 req/s). Request throughput may be too high. - alert: HaproxyServerConnectionErrors expr: (sum by (proxy) (rate(haproxy_server_connection_errors_total[1m]))) > 100 for: 0m labels: severity: critical annotations: summary: HAProxy server connection errors (instance {{ $labels.instance }}) description: \"Too many connection errors to {{ $labels.server }} server (> 100 req/s). Request throughput may be too high.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.7. HAProxy server connection errors"},{"location":"chap9/13HaProxy/#18-haproxy-backend-max-active-session-80","text":"Session limit from backend {{ $labels.proxy }} to server {{ $labels.server }} reached 80% of limit - {{ $value | printf \"%.2f\"}}% - alert: HaproxyBackendMaxActiveSession>80% expr: ((haproxy_server_max_sessions >0) * 100) / (haproxy_server_limit_sessions > 0) > 80 for: 2m labels: severity: warning annotations: summary: HAProxy backend max active session > 80% (instance {{ $labels.instance }}) description: \"Session limit from backend {{ $labels.proxy }} to server {{ $labels.server }} reached 80% of limit - {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.8. HAProxy backend max active session &gt; 80%"},{"location":"chap9/13HaProxy/#19-haproxy-pending-requests","text":"Some HAProxy requests are pending on {{ $labels.proxy }} - {{ $value | printf \"%.2f\"}} - alert: HaproxyPendingRequests expr: sum by (proxy) (rate(haproxy_backend_current_queue[2m])) > 0 for: 2m labels: severity: warning annotations: summary: HAProxy pending requests (instance {{ $labels.instance }}) description: \"Some HAProxy requests are pending on {{ $labels.proxy }} - {{ $value | printf \\\"%.2f\\\"}}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.9. HAProxy pending requests"},{"location":"chap9/13HaProxy/#110-haproxy-http-slowing-down","text":"Average request time is increasing - {{ $value | printf \"%.2f\"}} - alert: HaproxyHttpSlowingDown expr: avg by (proxy) (haproxy_backend_max_total_time_seconds) > 1 for: 1m labels: severity: warning annotations: summary: HAProxy HTTP slowing down (instance {{ $labels.instance }}) description: \"Average request time is increasing - {{ $value | printf \\\"%.2f\\\"}}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.10. HAProxy HTTP slowing down"},{"location":"chap9/13HaProxy/#111-haproxy-retry-high","text":"High rate of retry on {{ $labels.proxy }} - {{ $value | printf \"%.2f\"}} - alert: HaproxyRetryHigh expr: sum by (proxy) (rate(haproxy_backend_retry_warnings_total[1m])) > 10 for: 2m labels: severity: warning annotations: summary: HAProxy retry high (instance {{ $labels.instance }}) description: \"High rate of retry on {{ $labels.proxy }} - {{ $value | printf \\\"%.2f\\\"}}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.11. HAProxy retry high"},{"location":"chap9/13HaProxy/#112-haproxy-has-no-alive-backends","text":"HAProxy has no alive active or backup backends for {{ $labels.proxy }} - alert: HaproxyHasNoAliveBackends expr: haproxy_backend_active_servers + haproxy_backend_backup_servers == 0 for: 0m labels: severity: critical annotations: summary: HAproxy has no alive backends (instance {{ $labels.instance }}) description: \"HAProxy has no alive active or backup backends for {{ $labels.proxy }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.12. HAproxy has no alive backends"},{"location":"chap9/13HaProxy/#113-haproxy-frontend-security-blocked-requests","text":"HAProxy is blocking requests for security reason - alert: HaproxyFrontendSecurityBlockedRequests expr: sum by (proxy) (rate(haproxy_frontend_denied_connections_total[2m])) > 10 for: 2m labels: severity: warning annotations: summary: HAProxy frontend security blocked requests (instance {{ $labels.instance }}) description: \"HAProxy is blocking requests for security reason\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.13. HAProxy frontend security blocked requests"},{"location":"chap9/13HaProxy/#114-haproxy-server-healthcheck-failure","text":"Some server healthcheck are failing on {{ $labels.server }} - alert: HaproxyServerHealthcheckFailure expr: increase(haproxy_server_check_failures_total[1m]) > 0 for: 1m labels: severity: warning annotations: summary: HAProxy server healthcheck failure (instance {{ $labels.instance }}) description: \"Some server healthcheck are failing on {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.14. HAProxy server healthcheck failure"},{"location":"chap9/13HaProxy/#2-haproxy-prometheushaproxy_exporter-haproxy-v2","text":"","title":"2 HaProxy : prometheus/haproxy_exporter (HAProxy &lt; v2)"},{"location":"chap9/13HaProxy/#21-haproxy-down","text":"HAProxy down - alert: HaproxyDown expr: haproxy_up == 0 for: 0m labels: severity: critical annotations: summary: HAProxy down (instance {{ $labels.instance }}) description: \"HAProxy down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.1. HAProxy down"},{"location":"chap9/13HaProxy/#22-haproxy-high-http-4xx-error-rate-backend","text":"Too many HTTP requests with status 4xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }} - alert: HaproxyHighHttp4xxErrorRateBackend expr: sum by (backend) (rate(haproxy_server_http_responses_total{code=\"4xx\"}[1m])) / sum by (backend) (rate(haproxy_server_http_responses_total[1m]) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 4xx error rate backend (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 4xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.2. HAProxy high HTTP 4xx error rate backend"},{"location":"chap9/13HaProxy/#23-haproxy-high-http-5xx-error-rate-backend","text":"Too many HTTP requests with status 5xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }} - alert: HaproxyHighHttp5xxErrorRateBackend expr: sum by (backend) (rate(haproxy_server_http_responses_total{code=\"5xx\"}[1m])) / sum by (backend) (rate(haproxy_server_http_responses_total[1m]) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 5xx error rate backend (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 5xx (> 5%) on backend {{ $labels.fqdn }}/{{ $labels.backend }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.3. HAProxy high HTTP 5xx error rate backend"},{"location":"chap9/13HaProxy/#24-haproxy-high-http-4xx-error-rate-server","text":"Too many HTTP requests with status 4xx (> 5%) on server {{ $labels.server }} - alert: HaproxyHighHttp4xxErrorRateServer expr: sum by (server) (rate(haproxy_server_http_responses_total{code=\"4xx\"}[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 4xx error rate server (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 4xx (> 5%) on server {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.4. HAProxy high HTTP 4xx error rate server"},{"location":"chap9/13HaProxy/#25-haproxy-high-http-5xx-error-rate-server","text":"Too many HTTP requests with status 5xx (> 5%) on server {{ $labels.server }} - alert: HaproxyHighHttp5xxErrorRateServer expr: sum by (server) (rate(haproxy_server_http_responses_total{code=\"5xx\"}[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy high HTTP 5xx error rate server (instance {{ $labels.instance }}) description: \"Too many HTTP requests with status 5xx (> 5%) on server {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.5. HAProxy high HTTP 5xx error rate server"},{"location":"chap9/13HaProxy/#26-haproxy-server-response-errors","text":"Too many response errors to {{ $labels.server }} server (> 5%). - alert: HaproxyServerResponseErrors expr: sum by (server) (rate(haproxy_server_response_errors_total[1m])) / sum by (server) (rate(haproxy_server_http_responses_total[1m]) * 100) > 5 for: 1m labels: severity: critical annotations: summary: HAProxy server response errors (instance {{ $labels.instance }}) description: \"Too many response errors to {{ $labels.server }} server (> 5%).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.6. HAProxy server response errors"},{"location":"chap9/13HaProxy/#27-haproxy-backend-connection-errors","text":"Too many connection errors to {{ $labels.fqdn }}/{{ $labels.backend }} backend (> 100 req/s). Request throughput may be too high. - alert: HaproxyBackendConnectionErrors expr: sum by (backend) (rate(haproxy_backend_connection_errors_total[1m])) > 100 for: 1m labels: severity: critical annotations: summary: HAProxy backend connection errors (instance {{ $labels.instance }}) description: \"Too many connection errors to {{ $labels.fqdn }}/{{ $labels.backend }} backend (> 100 req/s). Request throughput may be too high.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.7. HAProxy backend connection errors"},{"location":"chap9/13HaProxy/#28-haproxy-server-connection-errors","text":"Too many connection errors to {{ $labels.server }} server (> 100 req/s). Request throughput may be too high. - alert: HaproxyServerConnectionErrors expr: sum by (server) (rate(haproxy_server_connection_errors_total[1m])) > 100 for: 0m labels: severity: critical annotations: summary: HAProxy server connection errors (instance {{ $labels.instance }}) description: \"Too many connection errors to {{ $labels.server }} server (> 100 req/s). Request throughput may be too high.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.8. HAProxy server connection errors"},{"location":"chap9/13HaProxy/#29-haproxy-backend-max-active-session","text":"HAproxy backend {{ $labels.fqdn }}/{{ $labels.backend }} is reaching session limit (> 80%). - alert: HaproxyBackendMaxActiveSession expr: ((sum by (backend) (avg_over_time(haproxy_backend_max_sessions[2m])) / sum by (backend) (avg_over_time(haproxy_backend_limit_sessions[2m]))) * 100) > 80 for: 2m labels: severity: warning annotations: summary: HAProxy backend max active session (instance {{ $labels.instance }}) description: \"HAproxy backend {{ $labels.fqdn }}/{{ $labels.backend }} is reaching session limit (> 80%).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.9. HAProxy backend max active session"},{"location":"chap9/13HaProxy/#210-haproxy-pending-requests","text":"Some HAProxy requests are pending on {{ $labels.fqdn }}/{{ $labels.backend }} backend - alert: HaproxyPendingRequests expr: sum by (backend) (haproxy_backend_current_queue) > 0 for: 2m labels: severity: warning annotations: summary: HAProxy pending requests (instance {{ $labels.instance }}) description: \"Some HAProxy requests are pending on {{ $labels.fqdn }}/{{ $labels.backend }} backend\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.10. HAProxy pending requests"},{"location":"chap9/13HaProxy/#211-haproxy-http-slowing-down","text":"Average request time is increasing - alert: HaproxyHttpSlowingDown expr: avg by (backend) (haproxy_backend_http_total_time_average_seconds) > 1 for: 1m labels: severity: warning annotations: summary: HAProxy HTTP slowing down (instance {{ $labels.instance }}) description: \"Average request time is increasing\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.11. HAProxy HTTP slowing down"},{"location":"chap9/13HaProxy/#212-haproxy-retry-high","text":"High rate of retry on {{ $labels.fqdn }}/{{ $labels.backend }} backend - alert: HaproxyRetryHigh expr: sum by (backend) (rate(haproxy_backend_retry_warnings_total[1m])) > 10 for: 2m labels: severity: warning annotations: summary: HAProxy retry high (instance {{ $labels.instance }}) description: \"High rate of retry on {{ $labels.fqdn }}/{{ $labels.backend }} backend\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.12. HAProxy retry high"},{"location":"chap9/13HaProxy/#213-haproxy-backend-down","text":"HAProxy backend is down - alert: HaproxyBackendDown expr: haproxy_backend_up == 0 for: 0m labels: severity: critical annotations: summary: HAProxy backend down (instance {{ $labels.instance }}) description: \"HAProxy backend is down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.13. HAProxy backend down"},{"location":"chap9/13HaProxy/#214-haproxy-server-down","text":"HAProxy server is down - alert: HaproxyServerDown expr: haproxy_server_up == 0 for: 0m labels: severity: critical annotations: summary: HAProxy server down (instance {{ $labels.instance }}) description: \"HAProxy server is down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.14. HAProxy server down"},{"location":"chap9/13HaProxy/#215-haproxy-frontend-security-blocked-requests","text":"HAProxy is blocking requests for security reason - alert: HaproxyFrontendSecurityBlockedRequests expr: sum by (frontend) (rate(haproxy_frontend_requests_denied_total[2m])) > 10 for: 2m labels: severity: warning annotations: summary: HAProxy frontend security blocked requests (instance {{ $labels.instance }}) description: \"HAProxy is blocking requests for security reason\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.15. HAProxy frontend security blocked requests"},{"location":"chap9/13HaProxy/#216-haproxy-server-healthcheck-failure","text":"Some server healthcheck are failing on {{ $labels.server }} - alert: HaproxyServerHealthcheckFailure expr: increase(haproxy_server_check_failures_total[1m]) > 0 for: 1m labels: severity: warning annotations: summary: HAProxy server healthcheck failure (instance {{ $labels.instance }}) description: \"Some server healthcheck are failing on {{ $labels.server }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.16. HAProxy server healthcheck failure"},{"location":"chap9/14Traefikv1/","text":"4 Traefik 1 Traefik : Embedded exporter v2 1.1. Traefik service down All Traefik services are down - alert: TraefikServiceDown expr: count(traefik_service_server_up) by (service) == 0 for: 0m labels: severity: critical annotations: summary: Traefik service down (instance {{ $labels.instance }}) description: \"All Traefik services are down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.2. Traefik high HTTP 4xx error rate service Traefik service 4xx error rate is above 5% - alert: TraefikHighHttp4xxErrorRateService expr: sum(rate(traefik_service_requests_total{code=~\"4.*\"}[3m])) by (service) / sum(rate(traefik_service_requests_total[3m])) by (service) * 100 > 5 for: 1m labels: severity: critical annotations: summary: Traefik high HTTP 4xx error rate service (instance {{ $labels.instance }}) description: \"Traefik service 4xx error rate is above 5%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.3. Traefik high HTTP 5xx error rate service Traefik service 5xx error rate is above 5% - alert: TraefikHighHttp5xxErrorRateService expr: sum(rate(traefik_service_requests_total{code=~\"5.*\"}[3m])) by (service) / sum(rate(traefik_service_requests_total[3m])) by (service) * 100 > 5 for: 1m labels: severity: critical annotations: summary: Traefik high HTTP 5xx error rate service (instance {{ $labels.instance }}) description: \"Traefik service 5xx error rate is above 5%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Traefik : Embedded exporter v1 2.1. Traefik backend down All Traefik backends are down - alert: TraefikBackendDown expr: count(traefik_backend_server_up) by (backend) == 0 for: 5m labels: severity: error annotations: summary: \"Traefik backend down (instance {{ $labels.instance }})\" description: \"All Traefik backends are down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.2. Traefik backend errors Traefik backend error rate is above 10% - alert: TraefikBackendErrors expr: sum(rate(traefik_backend_requests_total{code=~\"5.*\"}[5m])) by (backend) / sum(rate(traefik_backend_requests_total[5m])) by (backend) > 0.1 for: 5m labels: severity: error annotations: summary: \"Traefik backend errors (instance {{ $labels.instance }})\" description: \"Traefik backend error rate is above 10%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.3. Traefik high HTTP 5xx error rate backend Traefik backend 5xx error rate is above 5% - alert: TraefikHighHttp5xxErrorRateBackend expr: sum(rate(traefik_backend_requests_total{code=~\"5.*\"}[3m])) by (backend) / sum(rate(traefik_backend_requests_total[3m])) by (backend) * 100 > 5 for: 1m labels: severity: critical annotations: summary: Traefik high HTTP 5xx error rate backend (instance {{ $labels.instance }}) description: \"Traefik backend 5xx error rate is above 5%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4 Traefik"},{"location":"chap9/14Traefikv1/#4-traefik","text":"","title":"4 Traefik"},{"location":"chap9/14Traefikv1/#1-traefik-embedded-exporter-v2","text":"","title":"1 Traefik : Embedded exporter v2"},{"location":"chap9/14Traefikv1/#11-traefik-service-down","text":"All Traefik services are down - alert: TraefikServiceDown expr: count(traefik_service_server_up) by (service) == 0 for: 0m labels: severity: critical annotations: summary: Traefik service down (instance {{ $labels.instance }}) description: \"All Traefik services are down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1. Traefik service down"},{"location":"chap9/14Traefikv1/#12-traefik-high-http-4xx-error-rate-service","text":"Traefik service 4xx error rate is above 5% - alert: TraefikHighHttp4xxErrorRateService expr: sum(rate(traefik_service_requests_total{code=~\"4.*\"}[3m])) by (service) / sum(rate(traefik_service_requests_total[3m])) by (service) * 100 > 5 for: 1m labels: severity: critical annotations: summary: Traefik high HTTP 4xx error rate service (instance {{ $labels.instance }}) description: \"Traefik service 4xx error rate is above 5%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.2. Traefik high HTTP 4xx error rate service"},{"location":"chap9/14Traefikv1/#13-traefik-high-http-5xx-error-rate-service","text":"Traefik service 5xx error rate is above 5% - alert: TraefikHighHttp5xxErrorRateService expr: sum(rate(traefik_service_requests_total{code=~\"5.*\"}[3m])) by (service) / sum(rate(traefik_service_requests_total[3m])) by (service) * 100 > 5 for: 1m labels: severity: critical annotations: summary: Traefik high HTTP 5xx error rate service (instance {{ $labels.instance }}) description: \"Traefik service 5xx error rate is above 5%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.3. Traefik high HTTP 5xx error rate service"},{"location":"chap9/14Traefikv1/#2-traefik-embedded-exporter-v1","text":"","title":"2. Traefik : Embedded exporter v1"},{"location":"chap9/14Traefikv1/#21-traefik-backend-down","text":"All Traefik backends are down - alert: TraefikBackendDown expr: count(traefik_backend_server_up) by (backend) == 0 for: 5m labels: severity: error annotations: summary: \"Traefik backend down (instance {{ $labels.instance }})\" description: \"All Traefik backends are down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.1. Traefik backend down"},{"location":"chap9/14Traefikv1/#22-traefik-backend-errors","text":"Traefik backend error rate is above 10% - alert: TraefikBackendErrors expr: sum(rate(traefik_backend_requests_total{code=~\"5.*\"}[5m])) by (backend) / sum(rate(traefik_backend_requests_total[5m])) by (backend) > 0.1 for: 5m labels: severity: error annotations: summary: \"Traefik backend errors (instance {{ $labels.instance }})\" description: \"Traefik backend error rate is above 10%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.2. Traefik backend errors"},{"location":"chap9/14Traefikv1/#23-traefik-high-http-5xx-error-rate-backend","text":"Traefik backend 5xx error rate is above 5% - alert: TraefikHighHttp5xxErrorRateBackend expr: sum(rate(traefik_backend_requests_total{code=~\"5.*\"}[3m])) by (backend) / sum(rate(traefik_backend_requests_total[3m])) by (backend) * 100 > 5 for: 1m labels: severity: critical annotations: summary: Traefik high HTTP 5xx error rate backend (instance {{ $labels.instance }}) description: \"Traefik backend 5xx error rate is above 5%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.3. Traefik high HTTP 5xx error rate backend"},{"location":"chap9/15PHP-FPM/","text":"1. PHP-FPM php-fpm-exporter bakins/php-fpm-exporter PHP-FPM max-children reached PHP-FPM reached max children - {{ $labels.instance }} - alert: Php-fpmMax-childrenReached expr: sum(phpfpm_max_children_reached_total) by (instance) > 0 for: 0m labels: severity: warning annotations: summary: PHP-FPM max-children reached (instance {{ $labels.instance }}) description: \"PHP-FPM reached max children - {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. PHP-FPM php-fpm-exporter"},{"location":"chap9/15PHP-FPM/#1-php-fpm-php-fpm-exporter","text":"bakins/php-fpm-exporter","title":"1. PHP-FPM php-fpm-exporter"},{"location":"chap9/15PHP-FPM/#php-fpm-max-children-reached","text":"PHP-FPM reached max children - {{ $labels.instance }} - alert: Php-fpmMax-childrenReached expr: sum(phpfpm_max_children_reached_total) by (instance) > 0 for: 0m labels: severity: warning annotations: summary: PHP-FPM max-children reached (instance {{ $labels.instance }}) description: \"PHP-FPM reached max children - {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"PHP-FPM max-children reached"},{"location":"chap9/16Java/","text":"2 Java : java-client java-client 1. JVM memory filling up JVM memory is filling up (> 80%) - alert: JvmMemoryFillingUp expr: jvm_memory_bytes_used / jvm_memory_bytes_max{area=\"heap\"} > 0.8 for: 5m labels: severity: warning annotations: summary: \"JVM memory filling up (instance {{ $labels.instance }})\" description: \"JVM memory is filling up (> 80%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2 Java : java-client"},{"location":"chap9/16Java/#2-java-java-client","text":"java-client","title":"2 Java : java-client"},{"location":"chap9/16Java/#1-jvm-memory-filling-up","text":"JVM memory is filling up (> 80%) - alert: JvmMemoryFillingUp expr: jvm_memory_bytes_used / jvm_memory_bytes_max{area=\"heap\"} > 0.8 for: 5m labels: severity: warning annotations: summary: \"JVM memory filling up (instance {{ $labels.instance }})\" description: \"JVM memory is filling up (> 80%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1. JVM memory filling up"},{"location":"chap9/17zfs/","text":"17. ZFS : node-exporter node-exporter","title":"17. ZFS : node-exporter"},{"location":"chap9/17zfs/#17-zfs-node-exporter","text":"node-exporter","title":"17. ZFS : node-exporter"},{"location":"chap9/18Kubernetes/","text":"1 Kubernetes : kube-state-metrics kube-state-metrics 1. Kubernetes Node ready Node {{ $labels.node }} has been unready for a long time - alert: KubernetesNodeReady expr: kube_node_status_condition{condition=\"Ready\",status=\"true\"} == 0 for: 10m labels: severity: critical annotations: summary: Kubernetes Node ready (instance {{ $labels.instance }}) description: \"Node {{ $labels.node }} has been unready for a long time\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Kubernetes MemoryPressure {{ $labels.node }} has MemoryPressure condition - alert: KubernetesMemorypressure expr: kube_node_status_condition{condition=\"MemoryPressure\",status=\"true\"} == 1 for: 5m labels: severity: error annotations: summary: \"Kubernetes MemoryPressure (instance {{ $labels.instance }})\" description: \"{{ $labels.node }} has MemoryPressure condition\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 3. Kubernetes DiskPressure {{ $labels.node }} has DiskPressure condition - alert: KubernetesDiskpressure expr: kube_node_status_condition{condition=\"DiskPressure\",status=\"true\"} == 1 for: 5m labels: severity: error annotations: summary: \"Kubernetes DiskPressure (instance {{ $labels.instance }})\" description: \"{{ $labels.node }} has DiskPressure condition\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 4. Kubernetes OutOfDisk {{ $labels.node }} has OutOfDisk condition - alert: KubernetesOutofdisk expr: kube_node_status_condition{condition=\"OutOfDisk\",status=\"true\"} == 1 for: 5m labels: severity: error annotations: summary: \"Kubernetes OutOfDisk (instance {{ $labels.instance }})\" description: \"{{ $labels.node }} has OutOfDisk condition\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 5. Kubernetes out of capacity {{ $labels.node }} is out of capacity - alert: KubernetesOutOfCapacity expr: sum by (node) ((kube_pod_status_phase{phase=\"Running\"} == 1) + on(uid) group_left(node) (0 * kube_pod_info{pod_template_hash=\"\"})) / sum by (node) (kube_node_status_allocatable{resource=\"pods\"}) * 100 > 90 for: 2m labels: severity: warning annotations: summary: Kubernetes out of capacity (instance {{ $labels.instance }}) description: \"{{ $labels.node }} is out of capacity\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6. Kubernetes container oom killer Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes. - alert: KubernetesContainerOomKiller expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason=\"OOMKilled\"}[10m]) == 1 for: 0m labels: severity: warning annotations: summary: Kubernetes container oom killer (instance {{ $labels.instance }}) description: \"Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7. Kubernetes Job failed Job {{$labels.namespace}}/{{$labels.exported_job}} failed to complete - alert: KubernetesJobFailed expr: kube_job_status_failed > 0 for: 5m labels: severity: warning annotations: summary: \"Kubernetes Job failed (instance {{ $labels.instance }})\" description: \"Job {{$labels.namespace}}/{{$labels.exported_job}} failed to complete\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 8. Kubernetes CronJob suspended CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is suspended - alert: KubernetesCronjobSuspended expr: kube_cronjob_spec_suspend != 0 for: 5m labels: severity: info annotations: summary: \"Kubernetes CronJob suspended (instance {{ $labels.instance }})\" description: \"CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is suspended\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 9. Kubernetes PersistentVolumeClaim pending PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending - alert: KubernetesPersistentvolumeclaimPending expr: kube_persistentvolumeclaim_status_phase{phase=\"Pending\"} == 1 for: 5m labels: severity: warning annotations: summary: \"Kubernetes PersistentVolumeClaim pending (instance {{ $labels.instance }})\" description: \"PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10. Volume out of disk space Volume is almost full (< 10% left) - alert: VolumeOutOfDiskSpace expr: kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes * 100 < 10 for: 5m labels: severity: warning annotations: summary: \"Volume out of disk space (instance {{ $labels.instance }})\" description: \"Volume is almost full (< 10% left)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 11. Volume full in four days {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is expected to fill up within four days. Currently {{ $value | humanize }}% is available. - alert: VolumeFullInFourDays expr: 100 * (kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes) < 15 and predict_linear(kubelet_volume_stats_available_bytes[6h], 4 * 24 * 3600) < 0 for: 5m labels: severity: error annotations: summary: \"Volume full in four days (instance {{ $labels.instance }})\" description: \"{{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is expected to fill up within four days. Currently {{ $value | humanize }}% is available.\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 12. Kubernetes PersistentVolume error Persistent volume is in bad state - alert: KubernetesPersistentvolumeError expr: kube_persistentvolume_status_phase{phase=~\"Failed|Pending\", job=\"kube-state-metrics\"} > 0 for: 0m labels: severity: critical annotations: summary: Kubernetes PersistentVolume error (instance {{ $labels.instance }}) description: \"Persistent volume is in bad state\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 13. StatefulSet down A StatefulSet went down - alert: StatefulsetDown expr: (kube_statefulset_status_replicas_ready / kube_statefulset_status_replicas_current) != 1 for: 5m labels: severity: error annotations: summary: \"StatefulSet down (instance {{ $labels.instance }})\" description: \"A StatefulSet went down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 14. Kubernetes HPA scaling ability Pod is unable to scale - alert: KubernetesHpaScalingAbility expr: kube_horizontalpodautoscaler_status_condition{status=\"false\", condition=\"AbleToScale\"} == 1 for: 2m labels: severity: warning annotations: summary: Kubernetes HPA scaling ability (instance {{ $labels.instance }}) description: \"Pod is unable to scale\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 15. Kubernetes HPA metric availability HPA is not able to collect metrics - alert: KubernetesHpaMetricAvailability expr: kube_horizontalpodautoscaler_status_condition{status=\"false\", condition=\"ScalingActive\"} == 1 for: 0m labels: severity: warning annotations: summary: Kubernetes HPA metric availability (instance {{ $labels.instance }}) description: \"HPA is not able to collect metrics\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 16. Kubernetes HPA scale capability The maximum number of desired Pods has been hit - alert: KubernetesHpaScaleCapability expr: kube_horizontalpodautoscaler_status_desired_replicas >= kube_horizontalpodautoscaler_spec_max_replicas for: 2m labels: severity: info annotations: summary: Kubernetes HPA scale capability (instance {{ $labels.instance }}) description: \"The maximum number of desired Pods has been hit\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 17. Kubernetes Pod not healthy Pod has been in a non-ready state for longer than 15 minutes. - alert: KubernetesPodNotHealthy expr: min_over_time(sum by (namespace, pod) (kube_pod_status_phase{phase=~\"Pending|Unknown|Failed\"})[15m:1m]) > 0 for: 0m labels: severity: critical annotations: summary: Kubernetes Pod not healthy (instance {{ $labels.instance }}) description: \"Pod has been in a non-ready state for longer than 15 minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 18. Kubernetes pod crash looping Pod {{ $labels.pod }} is crash looping - alert: KubernetesPodCrashLooping expr: increase(kube_pod_container_status_restarts_total[1m]) > 3 for: 2m labels: severity: warning annotations: summary: Kubernetes pod crash looping (instance {{ $labels.instance }}) description: \"Pod {{ $labels.pod }} is crash looping\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 19. Kubernetes ReplicasSet mismatch Deployment Replicas mismatch - alert: KubernetesReplicassetMismatch expr: kube_replicaset_spec_replicas != kube_replicaset_status_ready_replicas for: 10m labels: severity: warning annotations: summary: Kubernetes ReplicasSet mismatch (instance {{ $labels.instance }}) description: \"Deployment Replicas mismatch\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 20. Kubernetes Deployment replicas mismatch Deployment Replicas mismatch - alert: KubernetesDeploymentReplicasMismatch expr: kube_deployment_spec_replicas != kube_deployment_status_replicas_available for: 10m labels: severity: warning annotations: summary: Kubernetes Deployment replicas mismatch (instance {{ $labels.instance }}) description: \"Deployment Replicas mismatch\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 21. Kubernetes StatefulSet replicas mismatch A StatefulSet does not match the expected number of replicas. - alert: KubernetesStatefulsetReplicasMismatch expr: kube_statefulset_status_replicas_ready != kube_statefulset_status_replicas for: 10m labels: severity: warning annotations: summary: Kubernetes StatefulSet replicas mismatch (instance {{ $labels.instance }}) description: \"A StatefulSet does not match the expected number of replicas.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 22. Kubernetes Deployment generation mismatch A Deployment has failed but has not been rolled back. - alert: KubernetesDeploymentGenerationMismatch expr: kube_deployment_status_observed_generation != kube_deployment_metadata_generation for: 10m labels: severity: critical annotations: summary: Kubernetes Deployment generation mismatch (instance {{ $labels.instance }}) description: \"A Deployment has failed but has not been rolled back.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 23. Kubernetes StatefulSet generation mismatch A StatefulSet has failed but has not been rolled back. - alert: KubernetesStatefulsetGenerationMismatch expr: kube_statefulset_status_observed_generation != kube_statefulset_metadata_generation for: 10m labels: severity: critical annotations: summary: Kubernetes StatefulSet generation mismatch (instance {{ $labels.instance }}) description: \"A StatefulSet has failed but has not been rolled back.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 24. Kubernetes StatefulSet update not rolled out StatefulSet update has not been rolled out. - alert: KubernetesStatefulsetUpdateNotRolledOut expr: max without (revision) (kube_statefulset_status_current_revision unless kube_statefulset_status_update_revision) * (kube_statefulset_replicas != kube_statefulset_status_replicas_updated) for: 10m labels: severity: warning annotations: summary: Kubernetes StatefulSet update not rolled out (instance {{ $labels.instance }}) description: \"StatefulSet update has not been rolled out.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 25. Kubernetes DaemonSet rollout stuck Some Pods of DaemonSet are not scheduled or not ready - alert: KubernetesDaemonsetRolloutStuck expr: kube_daemonset_status_number_ready / kube_daemonset_status_desired_number_scheduled * 100 < 100 or kube_daemonset_status_desired_number_scheduled - kube_daemonset_status_current_number_scheduled > 0 for: 10m labels: severity: warning annotations: summary: Kubernetes DaemonSet rollout stuck (instance {{ $labels.instance }}) description: \"Some Pods of DaemonSet are not scheduled or not ready\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 26. Kubernetes DaemonSet misscheduled Some DaemonSet Pods are running where they are not supposed to run - alert: KubernetesDaemonsetMisscheduled expr: kube_daemonset_status_number_misscheduled > 0 for: 1m labels: severity: critical annotations: summary: Kubernetes DaemonSet misscheduled (instance {{ $labels.instance }}) description: \"Some DaemonSet Pods are running where they are not supposed to run\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 27. Kubernetes CronJob too long CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is taking more than 1h to complete. - alert: KubernetesCronjobTooLong expr: time() - kube_cronjob_next_schedule_time > 3600 for: 0m labels: severity: warning annotations: summary: Kubernetes CronJob too long (instance {{ $labels.instance }}) description: \"CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is taking more than 1h to complete.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 28. Kubernetes job slow completion Kubernetes Job {{ $labels.namespace }}/{{ $labels.job_name }} did not complete in time. - alert: KubernetesJobSlowCompletion expr: kube_job_spec_completions - kube_job_status_succeeded > 0 for: 12h labels: severity: critical annotations: summary: Kubernetes job slow completion (instance {{ $labels.instance }}) description: \"Kubernetes Job {{ $labels.namespace }}/{{ $labels.job_name }} did not complete in time.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 29. Kubernetes API server errors Kubernetes API server is experiencing high error rate - alert: KubernetesApiServerErrors expr: sum(rate(apiserver_request_total{job=\"apiserver\",code=~\"^(?:5..)$\"}[1m])) / sum(rate(apiserver_request_total{job=\"apiserver\"}[1m])) * 100 > 3 for: 2m labels: severity: critical annotations: summary: Kubernetes API server errors (instance {{ $labels.instance }}) description: \"Kubernetes API server is experiencing high error rate\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 30. Kubernetes API client errors Kubernetes API client is experiencing high error rate - alert: KubernetesApiClientErrors expr: (sum(rate(rest_client_requests_total{code=~\"(4|5)..\"}[1m])) by (instance, job) / sum(rate(rest_client_requests_total[1m])) by (instance, job)) * 100 > 1 for: 2m labels: severity: critical annotations: summary: Kubernetes API client errors (instance {{ $labels.instance }}) description: \"Kubernetes API client is experiencing high error rate\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 31. Kubernetes client certificate expires next week A client certificate used to authenticate to the apiserver is expiring next week. - alert: KubernetesClientCertificateExpiresNextWeek expr: apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 7*24*60*60 for: 0m labels: severity: warning annotations: summary: Kubernetes client certificate expires next week (instance {{ $labels.instance }}) description: \"A client certificate used to authenticate to the apiserver is expiring next week.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 32. Kubernetes client certificate expires soon A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours. - alert: KubernetesClientCertificateExpiresSoon expr: apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 24*60*60 for: 0m labels: severity: critical annotations: summary: Kubernetes client certificate expires soon (instance {{ $labels.instance }}) description: \"A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 33. Kubernetes API server latency Kubernetes API server has a 99th percentile latency of {{ $value }} seconds for {{ $labels.verb }} {{ $labels.resource }} . - alert: KubernetesApiServerLatency expr: histogram_quantile(0.99, sum(rate(apiserver_request_latencies_bucket{subresource!=\"log\",verb!~\"^(?:CONNECT|WATCHLIST|WATCH|PROXY)$\"} [10m])) WITHOUT (instance, resource)) / 1e+06 > 1 for: 2m labels: severity: warning annotations: summary: Kubernetes API server latency (instance {{ $labels.instance }}) description: \"Kubernetes API server has a 99th percentile latency of {{ $value }} seconds for {{ $labels.verb }} {{ $labels.resource }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1 Kubernetes : kube-state-metrics"},{"location":"chap9/18Kubernetes/#1-kubernetes-kube-state-metrics","text":"kube-state-metrics","title":"1 Kubernetes : kube-state-metrics"},{"location":"chap9/18Kubernetes/#1-kubernetes-node-ready","text":"Node {{ $labels.node }} has been unready for a long time - alert: KubernetesNodeReady expr: kube_node_status_condition{condition=\"Ready\",status=\"true\"} == 0 for: 10m labels: severity: critical annotations: summary: Kubernetes Node ready (instance {{ $labels.instance }}) description: \"Node {{ $labels.node }} has been unready for a long time\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Kubernetes Node ready"},{"location":"chap9/18Kubernetes/#2-kubernetes-memorypressure","text":"{{ $labels.node }} has MemoryPressure condition - alert: KubernetesMemorypressure expr: kube_node_status_condition{condition=\"MemoryPressure\",status=\"true\"} == 1 for: 5m labels: severity: error annotations: summary: \"Kubernetes MemoryPressure (instance {{ $labels.instance }})\" description: \"{{ $labels.node }} has MemoryPressure condition\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2. Kubernetes MemoryPressure"},{"location":"chap9/18Kubernetes/#3-kubernetes-diskpressure","text":"{{ $labels.node }} has DiskPressure condition - alert: KubernetesDiskpressure expr: kube_node_status_condition{condition=\"DiskPressure\",status=\"true\"} == 1 for: 5m labels: severity: error annotations: summary: \"Kubernetes DiskPressure (instance {{ $labels.instance }})\" description: \"{{ $labels.node }} has DiskPressure condition\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"3. Kubernetes DiskPressure"},{"location":"chap9/18Kubernetes/#4-kubernetes-outofdisk","text":"{{ $labels.node }} has OutOfDisk condition - alert: KubernetesOutofdisk expr: kube_node_status_condition{condition=\"OutOfDisk\",status=\"true\"} == 1 for: 5m labels: severity: error annotations: summary: \"Kubernetes OutOfDisk (instance {{ $labels.instance }})\" description: \"{{ $labels.node }} has OutOfDisk condition\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"4. Kubernetes OutOfDisk"},{"location":"chap9/18Kubernetes/#5-kubernetes-out-of-capacity","text":"{{ $labels.node }} is out of capacity - alert: KubernetesOutOfCapacity expr: sum by (node) ((kube_pod_status_phase{phase=\"Running\"} == 1) + on(uid) group_left(node) (0 * kube_pod_info{pod_template_hash=\"\"})) / sum by (node) (kube_node_status_allocatable{resource=\"pods\"}) * 100 > 90 for: 2m labels: severity: warning annotations: summary: Kubernetes out of capacity (instance {{ $labels.instance }}) description: \"{{ $labels.node }} is out of capacity\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5. Kubernetes out of capacity"},{"location":"chap9/18Kubernetes/#6-kubernetes-container-oom-killer","text":"Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes. - alert: KubernetesContainerOomKiller expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason=\"OOMKilled\"}[10m]) == 1 for: 0m labels: severity: warning annotations: summary: Kubernetes container oom killer (instance {{ $labels.instance }}) description: \"Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6. Kubernetes container oom killer"},{"location":"chap9/18Kubernetes/#7-kubernetes-job-failed","text":"Job {{$labels.namespace}}/{{$labels.exported_job}} failed to complete - alert: KubernetesJobFailed expr: kube_job_status_failed > 0 for: 5m labels: severity: warning annotations: summary: \"Kubernetes Job failed (instance {{ $labels.instance }})\" description: \"Job {{$labels.namespace}}/{{$labels.exported_job}} failed to complete\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"7. Kubernetes Job failed"},{"location":"chap9/18Kubernetes/#8-kubernetes-cronjob-suspended","text":"CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is suspended - alert: KubernetesCronjobSuspended expr: kube_cronjob_spec_suspend != 0 for: 5m labels: severity: info annotations: summary: \"Kubernetes CronJob suspended (instance {{ $labels.instance }})\" description: \"CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is suspended\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"8. Kubernetes CronJob suspended"},{"location":"chap9/18Kubernetes/#9-kubernetes-persistentvolumeclaim-pending","text":"PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending - alert: KubernetesPersistentvolumeclaimPending expr: kube_persistentvolumeclaim_status_phase{phase=\"Pending\"} == 1 for: 5m labels: severity: warning annotations: summary: \"Kubernetes PersistentVolumeClaim pending (instance {{ $labels.instance }})\" description: \"PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"9. Kubernetes PersistentVolumeClaim pending"},{"location":"chap9/18Kubernetes/#10-volume-out-of-disk-space","text":"Volume is almost full (< 10% left) - alert: VolumeOutOfDiskSpace expr: kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes * 100 < 10 for: 5m labels: severity: warning annotations: summary: \"Volume out of disk space (instance {{ $labels.instance }})\" description: \"Volume is almost full (< 10% left)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10. Volume out of disk space"},{"location":"chap9/18Kubernetes/#11-volume-full-in-four-days","text":"{{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is expected to fill up within four days. Currently {{ $value | humanize }}% is available. - alert: VolumeFullInFourDays expr: 100 * (kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes) < 15 and predict_linear(kubelet_volume_stats_available_bytes[6h], 4 * 24 * 3600) < 0 for: 5m labels: severity: error annotations: summary: \"Volume full in four days (instance {{ $labels.instance }})\" description: \"{{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is expected to fill up within four days. Currently {{ $value | humanize }}% is available.\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"11. Volume full in four days"},{"location":"chap9/18Kubernetes/#12-kubernetes-persistentvolume-error","text":"Persistent volume is in bad state - alert: KubernetesPersistentvolumeError expr: kube_persistentvolume_status_phase{phase=~\"Failed|Pending\", job=\"kube-state-metrics\"} > 0 for: 0m labels: severity: critical annotations: summary: Kubernetes PersistentVolume error (instance {{ $labels.instance }}) description: \"Persistent volume is in bad state\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"12. Kubernetes PersistentVolume error"},{"location":"chap9/18Kubernetes/#13-statefulset-down","text":"A StatefulSet went down - alert: StatefulsetDown expr: (kube_statefulset_status_replicas_ready / kube_statefulset_status_replicas_current) != 1 for: 5m labels: severity: error annotations: summary: \"StatefulSet down (instance {{ $labels.instance }})\" description: \"A StatefulSet went down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"13. StatefulSet down"},{"location":"chap9/18Kubernetes/#14-kubernetes-hpa-scaling-ability","text":"Pod is unable to scale - alert: KubernetesHpaScalingAbility expr: kube_horizontalpodautoscaler_status_condition{status=\"false\", condition=\"AbleToScale\"} == 1 for: 2m labels: severity: warning annotations: summary: Kubernetes HPA scaling ability (instance {{ $labels.instance }}) description: \"Pod is unable to scale\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"14. Kubernetes HPA scaling ability"},{"location":"chap9/18Kubernetes/#15-kubernetes-hpa-metric-availability","text":"HPA is not able to collect metrics - alert: KubernetesHpaMetricAvailability expr: kube_horizontalpodautoscaler_status_condition{status=\"false\", condition=\"ScalingActive\"} == 1 for: 0m labels: severity: warning annotations: summary: Kubernetes HPA metric availability (instance {{ $labels.instance }}) description: \"HPA is not able to collect metrics\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"15. Kubernetes HPA metric availability"},{"location":"chap9/18Kubernetes/#16-kubernetes-hpa-scale-capability","text":"The maximum number of desired Pods has been hit - alert: KubernetesHpaScaleCapability expr: kube_horizontalpodautoscaler_status_desired_replicas >= kube_horizontalpodautoscaler_spec_max_replicas for: 2m labels: severity: info annotations: summary: Kubernetes HPA scale capability (instance {{ $labels.instance }}) description: \"The maximum number of desired Pods has been hit\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"16. Kubernetes HPA scale capability"},{"location":"chap9/18Kubernetes/#17-kubernetes-pod-not-healthy","text":"Pod has been in a non-ready state for longer than 15 minutes. - alert: KubernetesPodNotHealthy expr: min_over_time(sum by (namespace, pod) (kube_pod_status_phase{phase=~\"Pending|Unknown|Failed\"})[15m:1m]) > 0 for: 0m labels: severity: critical annotations: summary: Kubernetes Pod not healthy (instance {{ $labels.instance }}) description: \"Pod has been in a non-ready state for longer than 15 minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"17. Kubernetes Pod not healthy"},{"location":"chap9/18Kubernetes/#18-kubernetes-pod-crash-looping","text":"Pod {{ $labels.pod }} is crash looping - alert: KubernetesPodCrashLooping expr: increase(kube_pod_container_status_restarts_total[1m]) > 3 for: 2m labels: severity: warning annotations: summary: Kubernetes pod crash looping (instance {{ $labels.instance }}) description: \"Pod {{ $labels.pod }} is crash looping\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"18. Kubernetes pod crash looping"},{"location":"chap9/18Kubernetes/#19-kubernetes-replicasset-mismatch","text":"Deployment Replicas mismatch - alert: KubernetesReplicassetMismatch expr: kube_replicaset_spec_replicas != kube_replicaset_status_ready_replicas for: 10m labels: severity: warning annotations: summary: Kubernetes ReplicasSet mismatch (instance {{ $labels.instance }}) description: \"Deployment Replicas mismatch\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"19. Kubernetes ReplicasSet mismatch"},{"location":"chap9/18Kubernetes/#20-kubernetes-deployment-replicas-mismatch","text":"Deployment Replicas mismatch - alert: KubernetesDeploymentReplicasMismatch expr: kube_deployment_spec_replicas != kube_deployment_status_replicas_available for: 10m labels: severity: warning annotations: summary: Kubernetes Deployment replicas mismatch (instance {{ $labels.instance }}) description: \"Deployment Replicas mismatch\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"20. Kubernetes Deployment replicas mismatch"},{"location":"chap9/18Kubernetes/#21-kubernetes-statefulset-replicas-mismatch","text":"A StatefulSet does not match the expected number of replicas. - alert: KubernetesStatefulsetReplicasMismatch expr: kube_statefulset_status_replicas_ready != kube_statefulset_status_replicas for: 10m labels: severity: warning annotations: summary: Kubernetes StatefulSet replicas mismatch (instance {{ $labels.instance }}) description: \"A StatefulSet does not match the expected number of replicas.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"21. Kubernetes StatefulSet replicas mismatch"},{"location":"chap9/18Kubernetes/#22-kubernetes-deployment-generation-mismatch","text":"A Deployment has failed but has not been rolled back. - alert: KubernetesDeploymentGenerationMismatch expr: kube_deployment_status_observed_generation != kube_deployment_metadata_generation for: 10m labels: severity: critical annotations: summary: Kubernetes Deployment generation mismatch (instance {{ $labels.instance }}) description: \"A Deployment has failed but has not been rolled back.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"22. Kubernetes Deployment generation mismatch"},{"location":"chap9/18Kubernetes/#23-kubernetes-statefulset-generation-mismatch","text":"A StatefulSet has failed but has not been rolled back. - alert: KubernetesStatefulsetGenerationMismatch expr: kube_statefulset_status_observed_generation != kube_statefulset_metadata_generation for: 10m labels: severity: critical annotations: summary: Kubernetes StatefulSet generation mismatch (instance {{ $labels.instance }}) description: \"A StatefulSet has failed but has not been rolled back.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"23. Kubernetes StatefulSet generation mismatch"},{"location":"chap9/18Kubernetes/#24-kubernetes-statefulset-update-not-rolled-out","text":"StatefulSet update has not been rolled out. - alert: KubernetesStatefulsetUpdateNotRolledOut expr: max without (revision) (kube_statefulset_status_current_revision unless kube_statefulset_status_update_revision) * (kube_statefulset_replicas != kube_statefulset_status_replicas_updated) for: 10m labels: severity: warning annotations: summary: Kubernetes StatefulSet update not rolled out (instance {{ $labels.instance }}) description: \"StatefulSet update has not been rolled out.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"24. Kubernetes StatefulSet update not rolled out"},{"location":"chap9/18Kubernetes/#25-kubernetes-daemonset-rollout-stuck","text":"Some Pods of DaemonSet are not scheduled or not ready - alert: KubernetesDaemonsetRolloutStuck expr: kube_daemonset_status_number_ready / kube_daemonset_status_desired_number_scheduled * 100 < 100 or kube_daemonset_status_desired_number_scheduled - kube_daemonset_status_current_number_scheduled > 0 for: 10m labels: severity: warning annotations: summary: Kubernetes DaemonSet rollout stuck (instance {{ $labels.instance }}) description: \"Some Pods of DaemonSet are not scheduled or not ready\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"25. Kubernetes DaemonSet rollout stuck"},{"location":"chap9/18Kubernetes/#26-kubernetes-daemonset-misscheduled","text":"Some DaemonSet Pods are running where they are not supposed to run - alert: KubernetesDaemonsetMisscheduled expr: kube_daemonset_status_number_misscheduled > 0 for: 1m labels: severity: critical annotations: summary: Kubernetes DaemonSet misscheduled (instance {{ $labels.instance }}) description: \"Some DaemonSet Pods are running where they are not supposed to run\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"26. Kubernetes DaemonSet misscheduled"},{"location":"chap9/18Kubernetes/#27-kubernetes-cronjob-too-long","text":"CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is taking more than 1h to complete. - alert: KubernetesCronjobTooLong expr: time() - kube_cronjob_next_schedule_time > 3600 for: 0m labels: severity: warning annotations: summary: Kubernetes CronJob too long (instance {{ $labels.instance }}) description: \"CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is taking more than 1h to complete.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"27. Kubernetes CronJob too long"},{"location":"chap9/18Kubernetes/#28-kubernetes-job-slow-completion","text":"Kubernetes Job {{ $labels.namespace }}/{{ $labels.job_name }} did not complete in time. - alert: KubernetesJobSlowCompletion expr: kube_job_spec_completions - kube_job_status_succeeded > 0 for: 12h labels: severity: critical annotations: summary: Kubernetes job slow completion (instance {{ $labels.instance }}) description: \"Kubernetes Job {{ $labels.namespace }}/{{ $labels.job_name }} did not complete in time.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"28. Kubernetes job slow completion"},{"location":"chap9/18Kubernetes/#29-kubernetes-api-server-errors","text":"Kubernetes API server is experiencing high error rate - alert: KubernetesApiServerErrors expr: sum(rate(apiserver_request_total{job=\"apiserver\",code=~\"^(?:5..)$\"}[1m])) / sum(rate(apiserver_request_total{job=\"apiserver\"}[1m])) * 100 > 3 for: 2m labels: severity: critical annotations: summary: Kubernetes API server errors (instance {{ $labels.instance }}) description: \"Kubernetes API server is experiencing high error rate\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"29. Kubernetes API server errors"},{"location":"chap9/18Kubernetes/#30-kubernetes-api-client-errors","text":"Kubernetes API client is experiencing high error rate - alert: KubernetesApiClientErrors expr: (sum(rate(rest_client_requests_total{code=~\"(4|5)..\"}[1m])) by (instance, job) / sum(rate(rest_client_requests_total[1m])) by (instance, job)) * 100 > 1 for: 2m labels: severity: critical annotations: summary: Kubernetes API client errors (instance {{ $labels.instance }}) description: \"Kubernetes API client is experiencing high error rate\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"30. Kubernetes API client errors"},{"location":"chap9/18Kubernetes/#31-kubernetes-client-certificate-expires-next-week","text":"A client certificate used to authenticate to the apiserver is expiring next week. - alert: KubernetesClientCertificateExpiresNextWeek expr: apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 7*24*60*60 for: 0m labels: severity: warning annotations: summary: Kubernetes client certificate expires next week (instance {{ $labels.instance }}) description: \"A client certificate used to authenticate to the apiserver is expiring next week.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"31. Kubernetes client certificate expires next week"},{"location":"chap9/18Kubernetes/#32-kubernetes-client-certificate-expires-soon","text":"A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours. - alert: KubernetesClientCertificateExpiresSoon expr: apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 24*60*60 for: 0m labels: severity: critical annotations: summary: Kubernetes client certificate expires soon (instance {{ $labels.instance }}) description: \"A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"32. Kubernetes client certificate expires soon"},{"location":"chap9/18Kubernetes/#33-kubernetes-api-server-latency","text":"Kubernetes API server has a 99th percentile latency of {{ $value }} seconds for {{ $labels.verb }} {{ $labels.resource }} . - alert: KubernetesApiServerLatency expr: histogram_quantile(0.99, sum(rate(apiserver_request_latencies_bucket{subresource!=\"log\",verb!~\"^(?:CONNECT|WATCHLIST|WATCH|PROXY)$\"} [10m])) WITHOUT (instance, resource)) / 1e+06 > 1 for: 2m labels: severity: warning annotations: summary: Kubernetes API server latency (instance {{ $labels.instance }}) description: \"Kubernetes API server has a 99th percentile latency of {{ $value }} seconds for {{ $labels.verb }} {{ $labels.resource }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"33. Kubernetes API server latency"},{"location":"chap9/19Nomad/","text":"2. Nomad : prometheus-nomad-exporter samber/prometheus-nomad-exporter 1. Nomad job failed Nomad job failed - alert: NomadJobFailed expr: nomad_nomad_job_summary_failed > 0 for: 0m labels: severity: warning annotations: summary: Nomad job failed (instance {{ $labels.instance }}) description: \"Nomad job failed\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Nomad job lost Nomad job lost - alert: NomadJobLost expr: nomad_nomad_job_summary_lost > 0 for: 0m labels: severity: warning annotations: summary: Nomad job lost (instance {{ $labels.instance }}) description: \"Nomad job lost\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Nomad job queued Nomad job queued - alert: NomadJobQueued expr: nomad_nomad_job_summary_queued > 0 for: 2m labels: severity: warning annotations: summary: Nomad job queued (instance {{ $labels.instance }}) description: \"Nomad job queued\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Nomad blocked evaluation Nomad blocked evaluation - alert: NomadBlockedEvaluation expr: nomad_nomad_blocked_evals_total_blocked > 0 for: 0m labels: severity: warning annotations: summary: Nomad blocked evaluation (instance {{ $labels.instance }}) description: \"Nomad blocked evaluation\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Nomad : prometheus-nomad-exporter"},{"location":"chap9/19Nomad/#2-nomad-prometheus-nomad-exporter","text":"samber/prometheus-nomad-exporter","title":"2. Nomad : prometheus-nomad-exporter"},{"location":"chap9/19Nomad/#1-nomad-job-failed","text":"Nomad job failed - alert: NomadJobFailed expr: nomad_nomad_job_summary_failed > 0 for: 0m labels: severity: warning annotations: summary: Nomad job failed (instance {{ $labels.instance }}) description: \"Nomad job failed\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Nomad job failed"},{"location":"chap9/19Nomad/#2-nomad-job-lost","text":"Nomad job lost - alert: NomadJobLost expr: nomad_nomad_job_summary_lost > 0 for: 0m labels: severity: warning annotations: summary: Nomad job lost (instance {{ $labels.instance }}) description: \"Nomad job lost\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Nomad job lost"},{"location":"chap9/19Nomad/#3-nomad-job-queued","text":"Nomad job queued - alert: NomadJobQueued expr: nomad_nomad_job_summary_queued > 0 for: 2m labels: severity: warning annotations: summary: Nomad job queued (instance {{ $labels.instance }}) description: \"Nomad job queued\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Nomad job queued"},{"location":"chap9/19Nomad/#4-nomad-blocked-evaluation","text":"Nomad blocked evaluation - alert: NomadBlockedEvaluation expr: nomad_nomad_blocked_evals_total_blocked > 0 for: 0m labels: severity: warning annotations: summary: Nomad blocked evaluation (instance {{ $labels.instance }}) description: \"Nomad blocked evaluation\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Nomad blocked evaluation"},{"location":"chap9/1Prometheus/","text":"1 Prometheus 1.1. Prometheus self-monitoring 1.1.1. Prometheus job missing A Prometheus job has disappeared - alert: PrometheusJobMissing expr: absent(up{job=\"prometheus\"}) for: 0m labels: severity: warning annotations: summary: Prometheus job missing (instance {{ $labels.instance }}) description: \"A Prometheus job has disappeared\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.2. Prometheus target missing A Prometheus target has disappeared. An exporter might be crashed. - alert: PrometheusTargetMissing expr: up == 0 for: 0m labels: severity: critical annotations: summary: Prometheus target missing (instance {{ $labels.instance }}) description: \"A Prometheus target has disappeared. An exporter might be crashed.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.3. Prometheus all targets missing A Prometheus job does not have living target anymore. - alert: PrometheusAllTargetsMissing expr: count by (job) (up) == 0 for: 0m labels: severity: critical annotations: summary: Prometheus all targets missing (instance {{ $labels.instance }}) description: \"A Prometheus job does not have living target anymore.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.4 Prometheus configuration reload failure Prometheus configuration reload error - alert: PrometheusConfigurationReload expr: prometheus_config_last_reload_successful != 1 for: 5m labels: severity: error annotations: summary: \"Prometheus configuration reload (instance {{ $labels.instance }})\" description: \"Prometheus configuration reload error\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 1.1.5. Prometheus too many restarts Prometheus has restarted more than twice in the last 15 minutes. It might be crashlooping. - alert: PrometheusTooManyRestarts expr: changes(process_start_time_seconds{job=~\"prometheus|pushgateway|alertmanager\"}[15m]) > 2 for: 0m labels: severity: warning annotations: summary: Prometheus too many restarts (instance {{ $labels.instance }}) description: \"Prometheus has restarted more than twice in the last 15 minutes. It might be crashlooping.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.6. Prometheus AlertManager job missing A Prometheus AlertManager job has disappeared - alert: PrometheusAlertmanagerJobMissing expr: absent(up{job=\"alertmanager\"}) for: 0m labels: severity: warning annotations: summary: Prometheus AlertManager job missing (instance {{ $labels.instance }}) description: \"A Prometheus AlertManager job has disappeared\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.7. Prometheus AlertManager configuration reload failure AlertManager configuration reload error - alert: PrometheusAlertmanagerConfigurationReloadFailure expr: alertmanager_config_last_reload_successful != 1 for: 0m labels: severity: warning annotations: summary: Prometheus AlertManager configuration reload failure (instance {{ $labels.instance }}) description: \"AlertManager configuration reload error\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.8. Prometheus AlertManager config not synced Configurations of AlertManager cluster instances are out of sync - alert: PrometheusAlertmanagerConfigNotSynced expr: count(count_values(\"config_hash\", alertmanager_config_hash)) > 1 for: 0m labels: severity: warning annotations: summary: Prometheus AlertManager config not synced (instance {{ $labels.instance }}) description: \"Configurations of AlertManager cluster instances are out of sync\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.9 Prometheus AlertManager E2E dead man switch Prometheus DeadManSwitch is an always-firing alert. It's used as an end-to-end test of Prometheus through the Alertmanager. - alert: PrometheusAlertmanagerE2eDeadManSwitch expr: vector(1) for: 0m labels: severity: critical annotations: summary: Prometheus AlertManager E2E dead man switch (instance {{ $labels.instance }}) description: \"Prometheus DeadManSwitch is an always-firing alert. It's used as an end-to-end test of Prometheus through the Alertmanager.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.10. Prometheus not connected to alertmanager Prometheus cannot connect the alertmanager - alert: PrometheusNotConnectedToAlertmanager expr: prometheus_notifications_alertmanagers_discovered < 1 for: 0m labels: severity: critical annotations: summary: Prometheus not connected to alertmanager (instance {{ $labels.instance }}) description: \"Prometheus cannot connect the alertmanager\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.11. Prometheus rule evaluation failures Prometheus encountered {{ $value }} rule evaluation failures, leading to potentially ignored alerts. - alert: PrometheusRuleEvaluationFailures expr: increase(prometheus_rule_evaluation_failures_total[3m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus rule evaluation failures (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} rule evaluation failures, leading to potentially ignored alerts.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.12. Prometheus template text expansion failures Prometheus encountered {{ $value }} template text expansion failures - alert: PrometheusTemplateTextExpansionFailures expr: increase(prometheus_template_text_expansion_failures_total[3m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus template text expansion failures (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} template text expansion failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.13. Prometheus rule evaluation slow Prometheus rule evaluation took more time than the scheduled interval. It indicates a slower storage backend access or too complex query. - alert: PrometheusRuleEvaluationSlow expr: prometheus_rule_group_last_duration_seconds > prometheus_rule_group_interval_seconds for: 5m labels: severity: warning annotations: summary: Prometheus rule evaluation slow (instance {{ $labels.instance }}) description: \"Prometheus rule evaluation took more time than the scheduled interval. It indicates a slower storage backend access or too complex query.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.14. Prometheus notifications backlog The Prometheus notification queue has not been empty for 10 minutes - alert: PrometheusNotificationsBacklog expr: min_over_time(prometheus_notifications_queue_length[10m]) > 0 for: 0m labels: severity: warning annotations: summary: Prometheus notifications backlog (instance {{ $labels.instance }}) description: \"The Prometheus notification queue has not been empty for 10 minutes\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.15. Prometheus AlertManager notification failing Alertmanager is failing sending notifications - alert: PrometheusAlertmanagerNotificationFailing expr: rate(alertmanager_notifications_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus AlertManager notification failing (instance {{ $labels.instance }}) description: \"Alertmanager is failing sending notifications\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.16. Prometheus target empty Prometheus has no target in service discovery - alert: PrometheusTargetEmpty expr: prometheus_sd_discovered_targets == 0 for: 0m labels: severity: critical annotations: summary: Prometheus target empty (instance {{ $labels.instance }}) description: \"Prometheus has no target in service discovery\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.17. Prometheus target scraping slow Prometheus is scraping exporters slowly - alert: PrometheusTargetScrapingSlow expr: prometheus_target_interval_length_seconds{quantile=\"0.9\"} > 60 for: 5m labels: severity: warning annotations: summary: Prometheus target scraping slow (instance {{ $labels.instance }}) description: \"Prometheus is scraping exporters slowly\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.18. Prometheus large scrape Prometheus has many scrapes that exceed the sample limit - alert: PrometheusLargeScrape expr: increase(prometheus_target_scrapes_exceeded_sample_limit_total[10m]) > 10 for: 5m labels: severity: warning annotations: summary: Prometheus large scrape (instance {{ $labels.instance }}) description: \"Prometheus has many scrapes that exceed the sample limit\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.19. Prometheus target scrape duplicate Prometheus has many samples rejected due to duplicate timestamps but different values - alert: PrometheusTargetScrapeDuplicate expr: increase(prometheus_target_scrapes_sample_duplicate_timestamp_total[5m]) > 0 for: 0m labels: severity: warning annotations: summary: Prometheus target scrape duplicate (instance {{ $labels.instance }}) description: \"Prometheus has many samples rejected due to duplicate timestamps but different values\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.20. Prometheus TSDB checkpoint creation failures Prometheus encountered {{ $value }} checkpoint creation failures - alert: PrometheusTsdbCheckpointCreationFailures expr: increase(prometheus_tsdb_checkpoint_creations_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB checkpoint creation failures (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} checkpoint creation failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.21. Prometheus TSDB checkpoint deletion failures Prometheus encountered {{ $value }} checkpoint deletion failures - alert: PrometheusTsdbCheckpointDeletionFailures expr: increase(prometheus_tsdb_checkpoint_deletions_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB checkpoint deletion failures (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} checkpoint deletion failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.22. Prometheus TSDB compactions failed Prometheus encountered {{ $value }} TSDB compactions failures - alert: PrometheusTsdbCompactionsFailed expr: increase(prometheus_tsdb_compactions_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB compactions failed (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} TSDB compactions failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.23. Prometheus TSDB head truncations failed Prometheus encountered {{ $value }} TSDB head truncation failures - alert: PrometheusTsdbHeadTruncationsFailed expr: increase(prometheus_tsdb_head_truncations_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB head truncations failed (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} TSDB head truncation failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.24. Prometheus TSDB reload failures Prometheus encountered {{ $value }} TSDB reload failures - alert: PrometheusTsdbReloadFailures expr: increase(prometheus_tsdb_reloads_failures_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB reload failures (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} TSDB reload failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.25. Prometheus TSDB WAL corruptions Prometheus encountered {{ $value }} TSDB WAL corruptions - alert: PrometheusTsdbWalCorruptions expr: increase(prometheus_tsdb_wal_corruptions_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB WAL corruptions (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} TSDB WAL corruptions\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.1.26. Prometheus TSDB WAL truncations failed Prometheus encountered {{ $value }} TSDB WAL truncation failures - alert: PrometheusTsdbWalTruncationsFailed expr: increase(prometheus_tsdb_wal_truncations_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB WAL truncations failed (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} TSDB WAL truncation failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.2. Exporter down Prometheus exporter down - alert: ExporterDown expr: up == 0 for: 5m labels: severity: warning annotations: summary: \"Exporter down (instance {{ $labels.instance }})\" description: \"Prometheus exporter down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1 Prometheus"},{"location":"chap9/1Prometheus/#1-prometheus","text":"","title":"1 Prometheus"},{"location":"chap9/1Prometheus/#11-prometheus-self-monitoring","text":"","title":"1.1. Prometheus self-monitoring"},{"location":"chap9/1Prometheus/#111-prometheus-job-missing","text":"A Prometheus job has disappeared - alert: PrometheusJobMissing expr: absent(up{job=\"prometheus\"}) for: 0m labels: severity: warning annotations: summary: Prometheus job missing (instance {{ $labels.instance }}) description: \"A Prometheus job has disappeared\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.1. Prometheus job missing"},{"location":"chap9/1Prometheus/#112-prometheus-target-missing","text":"A Prometheus target has disappeared. An exporter might be crashed. - alert: PrometheusTargetMissing expr: up == 0 for: 0m labels: severity: critical annotations: summary: Prometheus target missing (instance {{ $labels.instance }}) description: \"A Prometheus target has disappeared. An exporter might be crashed.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.2. Prometheus target missing"},{"location":"chap9/1Prometheus/#113-prometheus-all-targets-missing","text":"A Prometheus job does not have living target anymore. - alert: PrometheusAllTargetsMissing expr: count by (job) (up) == 0 for: 0m labels: severity: critical annotations: summary: Prometheus all targets missing (instance {{ $labels.instance }}) description: \"A Prometheus job does not have living target anymore.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.3. Prometheus all targets missing"},{"location":"chap9/1Prometheus/#114-prometheus-configuration-reload-failure","text":"Prometheus configuration reload error - alert: PrometheusConfigurationReload expr: prometheus_config_last_reload_successful != 1 for: 5m labels: severity: error annotations: summary: \"Prometheus configuration reload (instance {{ $labels.instance }})\" description: \"Prometheus configuration reload error\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1.1.4 Prometheus configuration reload failure"},{"location":"chap9/1Prometheus/#115-prometheus-too-many-restarts","text":"Prometheus has restarted more than twice in the last 15 minutes. It might be crashlooping. - alert: PrometheusTooManyRestarts expr: changes(process_start_time_seconds{job=~\"prometheus|pushgateway|alertmanager\"}[15m]) > 2 for: 0m labels: severity: warning annotations: summary: Prometheus too many restarts (instance {{ $labels.instance }}) description: \"Prometheus has restarted more than twice in the last 15 minutes. It might be crashlooping.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.5. Prometheus too many restarts"},{"location":"chap9/1Prometheus/#116-prometheus-alertmanager-job-missing","text":"A Prometheus AlertManager job has disappeared - alert: PrometheusAlertmanagerJobMissing expr: absent(up{job=\"alertmanager\"}) for: 0m labels: severity: warning annotations: summary: Prometheus AlertManager job missing (instance {{ $labels.instance }}) description: \"A Prometheus AlertManager job has disappeared\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.6. Prometheus AlertManager job missing"},{"location":"chap9/1Prometheus/#117-prometheus-alertmanager-configuration-reload-failure","text":"AlertManager configuration reload error - alert: PrometheusAlertmanagerConfigurationReloadFailure expr: alertmanager_config_last_reload_successful != 1 for: 0m labels: severity: warning annotations: summary: Prometheus AlertManager configuration reload failure (instance {{ $labels.instance }}) description: \"AlertManager configuration reload error\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.7. Prometheus AlertManager configuration reload failure"},{"location":"chap9/1Prometheus/#118-prometheus-alertmanager-config-not-synced","text":"Configurations of AlertManager cluster instances are out of sync - alert: PrometheusAlertmanagerConfigNotSynced expr: count(count_values(\"config_hash\", alertmanager_config_hash)) > 1 for: 0m labels: severity: warning annotations: summary: Prometheus AlertManager config not synced (instance {{ $labels.instance }}) description: \"Configurations of AlertManager cluster instances are out of sync\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.8. Prometheus AlertManager config not synced"},{"location":"chap9/1Prometheus/#119-prometheus-alertmanager-e2e-dead-man-switch","text":"Prometheus DeadManSwitch is an always-firing alert. It's used as an end-to-end test of Prometheus through the Alertmanager. - alert: PrometheusAlertmanagerE2eDeadManSwitch expr: vector(1) for: 0m labels: severity: critical annotations: summary: Prometheus AlertManager E2E dead man switch (instance {{ $labels.instance }}) description: \"Prometheus DeadManSwitch is an always-firing alert. It's used as an end-to-end test of Prometheus through the Alertmanager.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.9 Prometheus AlertManager E2E dead man switch"},{"location":"chap9/1Prometheus/#1110-prometheus-not-connected-to-alertmanager","text":"Prometheus cannot connect the alertmanager - alert: PrometheusNotConnectedToAlertmanager expr: prometheus_notifications_alertmanagers_discovered < 1 for: 0m labels: severity: critical annotations: summary: Prometheus not connected to alertmanager (instance {{ $labels.instance }}) description: \"Prometheus cannot connect the alertmanager\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.10. Prometheus not connected to alertmanager"},{"location":"chap9/1Prometheus/#1111-prometheus-rule-evaluation-failures","text":"Prometheus encountered {{ $value }} rule evaluation failures, leading to potentially ignored alerts. - alert: PrometheusRuleEvaluationFailures expr: increase(prometheus_rule_evaluation_failures_total[3m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus rule evaluation failures (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} rule evaluation failures, leading to potentially ignored alerts.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.11. Prometheus rule evaluation failures"},{"location":"chap9/1Prometheus/#1112-prometheus-template-text-expansion-failures","text":"Prometheus encountered {{ $value }} template text expansion failures - alert: PrometheusTemplateTextExpansionFailures expr: increase(prometheus_template_text_expansion_failures_total[3m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus template text expansion failures (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} template text expansion failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.12. Prometheus template text expansion failures"},{"location":"chap9/1Prometheus/#1113-prometheus-rule-evaluation-slow","text":"Prometheus rule evaluation took more time than the scheduled interval. It indicates a slower storage backend access or too complex query. - alert: PrometheusRuleEvaluationSlow expr: prometheus_rule_group_last_duration_seconds > prometheus_rule_group_interval_seconds for: 5m labels: severity: warning annotations: summary: Prometheus rule evaluation slow (instance {{ $labels.instance }}) description: \"Prometheus rule evaluation took more time than the scheduled interval. It indicates a slower storage backend access or too complex query.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.13. Prometheus rule evaluation slow"},{"location":"chap9/1Prometheus/#1114-prometheus-notifications-backlog","text":"The Prometheus notification queue has not been empty for 10 minutes - alert: PrometheusNotificationsBacklog expr: min_over_time(prometheus_notifications_queue_length[10m]) > 0 for: 0m labels: severity: warning annotations: summary: Prometheus notifications backlog (instance {{ $labels.instance }}) description: \"The Prometheus notification queue has not been empty for 10 minutes\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.14. Prometheus notifications backlog"},{"location":"chap9/1Prometheus/#1115-prometheus-alertmanager-notification-failing","text":"Alertmanager is failing sending notifications - alert: PrometheusAlertmanagerNotificationFailing expr: rate(alertmanager_notifications_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus AlertManager notification failing (instance {{ $labels.instance }}) description: \"Alertmanager is failing sending notifications\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.15. Prometheus AlertManager notification failing"},{"location":"chap9/1Prometheus/#1116-prometheus-target-empty","text":"Prometheus has no target in service discovery - alert: PrometheusTargetEmpty expr: prometheus_sd_discovered_targets == 0 for: 0m labels: severity: critical annotations: summary: Prometheus target empty (instance {{ $labels.instance }}) description: \"Prometheus has no target in service discovery\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.16. Prometheus target empty"},{"location":"chap9/1Prometheus/#1117-prometheus-target-scraping-slow","text":"Prometheus is scraping exporters slowly - alert: PrometheusTargetScrapingSlow expr: prometheus_target_interval_length_seconds{quantile=\"0.9\"} > 60 for: 5m labels: severity: warning annotations: summary: Prometheus target scraping slow (instance {{ $labels.instance }}) description: \"Prometheus is scraping exporters slowly\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.17. Prometheus target scraping slow"},{"location":"chap9/1Prometheus/#1118-prometheus-large-scrape","text":"Prometheus has many scrapes that exceed the sample limit - alert: PrometheusLargeScrape expr: increase(prometheus_target_scrapes_exceeded_sample_limit_total[10m]) > 10 for: 5m labels: severity: warning annotations: summary: Prometheus large scrape (instance {{ $labels.instance }}) description: \"Prometheus has many scrapes that exceed the sample limit\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.18. Prometheus large scrape"},{"location":"chap9/1Prometheus/#1119-prometheus-target-scrape-duplicate","text":"Prometheus has many samples rejected due to duplicate timestamps but different values - alert: PrometheusTargetScrapeDuplicate expr: increase(prometheus_target_scrapes_sample_duplicate_timestamp_total[5m]) > 0 for: 0m labels: severity: warning annotations: summary: Prometheus target scrape duplicate (instance {{ $labels.instance }}) description: \"Prometheus has many samples rejected due to duplicate timestamps but different values\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.19. Prometheus target scrape duplicate"},{"location":"chap9/1Prometheus/#1120-prometheus-tsdb-checkpoint-creation-failures","text":"Prometheus encountered {{ $value }} checkpoint creation failures - alert: PrometheusTsdbCheckpointCreationFailures expr: increase(prometheus_tsdb_checkpoint_creations_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB checkpoint creation failures (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} checkpoint creation failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.20. Prometheus TSDB checkpoint creation failures"},{"location":"chap9/1Prometheus/#1121-prometheus-tsdb-checkpoint-deletion-failures","text":"Prometheus encountered {{ $value }} checkpoint deletion failures - alert: PrometheusTsdbCheckpointDeletionFailures expr: increase(prometheus_tsdb_checkpoint_deletions_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB checkpoint deletion failures (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} checkpoint deletion failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.21. Prometheus TSDB checkpoint deletion failures"},{"location":"chap9/1Prometheus/#1122-prometheus-tsdb-compactions-failed","text":"Prometheus encountered {{ $value }} TSDB compactions failures - alert: PrometheusTsdbCompactionsFailed expr: increase(prometheus_tsdb_compactions_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB compactions failed (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} TSDB compactions failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.22. Prometheus TSDB compactions failed"},{"location":"chap9/1Prometheus/#1123-prometheus-tsdb-head-truncations-failed","text":"Prometheus encountered {{ $value }} TSDB head truncation failures - alert: PrometheusTsdbHeadTruncationsFailed expr: increase(prometheus_tsdb_head_truncations_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB head truncations failed (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} TSDB head truncation failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.23. Prometheus TSDB head truncations failed"},{"location":"chap9/1Prometheus/#1124-prometheus-tsdb-reload-failures","text":"Prometheus encountered {{ $value }} TSDB reload failures - alert: PrometheusTsdbReloadFailures expr: increase(prometheus_tsdb_reloads_failures_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB reload failures (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} TSDB reload failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.24. Prometheus TSDB reload failures"},{"location":"chap9/1Prometheus/#1125-prometheus-tsdb-wal-corruptions","text":"Prometheus encountered {{ $value }} TSDB WAL corruptions - alert: PrometheusTsdbWalCorruptions expr: increase(prometheus_tsdb_wal_corruptions_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB WAL corruptions (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} TSDB WAL corruptions\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.25. Prometheus TSDB WAL corruptions"},{"location":"chap9/1Prometheus/#1126-prometheus-tsdb-wal-truncations-failed","text":"Prometheus encountered {{ $value }} TSDB WAL truncation failures - alert: PrometheusTsdbWalTruncationsFailed expr: increase(prometheus_tsdb_wal_truncations_failed_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Prometheus TSDB WAL truncations failed (instance {{ $labels.instance }}) description: \"Prometheus encountered {{ $value }} TSDB WAL truncation failures\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.1.26. Prometheus TSDB WAL truncations failed"},{"location":"chap9/1Prometheus/#12-exporter-down","text":"","title":"1.2. Exporter down"},{"location":"chap9/1Prometheus/#prometheus-exporter-down","text":"- alert: ExporterDown expr: up == 0 for: 5m labels: severity: warning annotations: summary: \"Exporter down (instance {{ $labels.instance }})\" description: \"Prometheus exporter down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"Prometheus exporter down"},{"location":"chap9/1basic_resource/","text":"1 Basic resource monitoring https://awesome-prometheus-alerts.grep.to/alertmanager 1 Prometheus self-monitoring Prometheus job missing Prometheus target missing Prometheus all targets missing Prometheus configuration reload failure Prometheus too many restarts Prometheus AlertManager job missing Prometheus AlertManager configuration reload failure Prometheus AlertManager config not synced Prometheus AlertManager E2E dead man switch Prometheus not connected to alertmanager Prometheus rule evaluation failures Prometheus template text expansion failures Prometheus rule evaluation slow Prometheus notifications backlog Prometheus AlertManager notification failing Prometheus target empty Prometheus target scraping slow Prometheus large scrape Prometheus target scrape duplicate Prometheus TSDB checkpoint creation failures Prometheus TSDB checkpoint deletion failures Prometheus TSDB compactions failed Prometheus TSDB head truncations failed Prometheus TSDB reload failure Prometheus TSDB WAL corruptions Prometheus TSDB WAL truncations failed Prometheus exporter down 2 Host node-exporter Out of memory Host memory under memory pressure Unusual network throughput in Unusual network throughput out Unusual disk read rate Unusual disk write rate Out of disk space Host disk will fill in 24 hours Out of inodes Host inodes will fill in 24 hours Unusual disk read latency Unusual disk write latency High CPU load Host CPU steal noisy neighbor Host Context switching Swap is filling up Host Systemd service crashed Host physical component too hot Host node overtemperature alarm Host RAID array got inactive Host RAID disk failure Host kernel version deviations Host OOM kill detected Host EDAC Correctable Errors detected Host EDAC Uncorrectable Errors detected Host Network Receive Errors Host Network Transmit Errors Host Network Interface Saturated Host Network Bond Degraded Host conntrack limit Host clock skew Host clock not synchronising Host requires reboot 3 Docker containers : cAdvisor Container killed Container CPU usage Container Memory usage Container Volume usage Container Volume I/O usage Container absent Container high throttle rate 4. Blackbox : prometheus Blackbox probe failed Blackbox slow probe Blackbox probe HTTP failure SSL certificate will expire soon SSL certificate expired Blackbox probe slow HTTP Blackbox probe slow ping 5. Windows Server Windows Server collector Error Windows Server service Status Windows Server CPU Usage Windows Server memory Usage Windows Server disk Space Usage 6. VMware Virtual Machine Memory Warning Virtual Machine Memory Critical High Number of Snapshots Outdated Snapshots 7.Netdata Netdata high cpu usage Host CPU steal noisy neighbor Netdata high memory usage Netdata low disk space Netdata predicted disk full Netdata MD mismatch cnt unsynchronized blocks Netdata disk reallocated sectors Netdata disk current pending sector Netdata reported uncorrectable disk sectors","title":"1 Basic resource monitoring"},{"location":"chap9/1basic_resource/#1-basic-resource-monitoring","text":"https://awesome-prometheus-alerts.grep.to/alertmanager","title":"1 Basic resource monitoring"},{"location":"chap9/1basic_resource/#1-prometheus-self-monitoring","text":"Prometheus job missing Prometheus target missing Prometheus all targets missing Prometheus configuration reload failure Prometheus too many restarts Prometheus AlertManager job missing Prometheus AlertManager configuration reload failure Prometheus AlertManager config not synced Prometheus AlertManager E2E dead man switch Prometheus not connected to alertmanager Prometheus rule evaluation failures Prometheus template text expansion failures Prometheus rule evaluation slow Prometheus notifications backlog Prometheus AlertManager notification failing Prometheus target empty Prometheus target scraping slow Prometheus large scrape Prometheus target scrape duplicate Prometheus TSDB checkpoint creation failures Prometheus TSDB checkpoint deletion failures Prometheus TSDB compactions failed Prometheus TSDB head truncations failed Prometheus TSDB reload failure Prometheus TSDB WAL corruptions Prometheus TSDB WAL truncations failed Prometheus exporter down","title":"1 Prometheus self-monitoring"},{"location":"chap9/1basic_resource/#2-host-node-exporter","text":"Out of memory Host memory under memory pressure Unusual network throughput in Unusual network throughput out Unusual disk read rate Unusual disk write rate Out of disk space Host disk will fill in 24 hours Out of inodes Host inodes will fill in 24 hours Unusual disk read latency Unusual disk write latency High CPU load Host CPU steal noisy neighbor Host Context switching Swap is filling up Host Systemd service crashed Host physical component too hot Host node overtemperature alarm Host RAID array got inactive Host RAID disk failure Host kernel version deviations Host OOM kill detected Host EDAC Correctable Errors detected Host EDAC Uncorrectable Errors detected Host Network Receive Errors Host Network Transmit Errors Host Network Interface Saturated Host Network Bond Degraded Host conntrack limit Host clock skew Host clock not synchronising Host requires reboot","title":"2 Host node-exporter"},{"location":"chap9/1basic_resource/#3-docker-containers-cadvisor","text":"Container killed Container CPU usage Container Memory usage Container Volume usage Container Volume I/O usage Container absent Container high throttle rate","title":"3 Docker containers : cAdvisor"},{"location":"chap9/1basic_resource/#4-blackbox-prometheus","text":"Blackbox probe failed Blackbox slow probe Blackbox probe HTTP failure SSL certificate will expire soon SSL certificate expired Blackbox probe slow HTTP Blackbox probe slow ping","title":"4. Blackbox : prometheus"},{"location":"chap9/1basic_resource/#5-windows-server","text":"Windows Server collector Error Windows Server service Status Windows Server CPU Usage Windows Server memory Usage Windows Server disk Space Usage","title":"5. Windows Server"},{"location":"chap9/1basic_resource/#6-vmware","text":"Virtual Machine Memory Warning Virtual Machine Memory Critical High Number of Snapshots Outdated Snapshots","title":"6. VMware"},{"location":"chap9/1basic_resource/#7netdata","text":"Netdata high cpu usage Host CPU steal noisy neighbor Netdata high memory usage Netdata low disk space Netdata predicted disk full Netdata MD mismatch cnt unsynchronized blocks Netdata disk reallocated sectors Netdata disk current pending sector Netdata reported uncorrectable disk sectors","title":"7.Netdata"},{"location":"chap9/20Consul/","text":"20. Consul : prometheus/consul_exporter Consul Exporter 1. Service healthcheck failed Service: {{ $labels.service_name }} Healthcheck: {{ $labels.service_id }} - alert: ServiceHealthcheckFailed expr: consul_catalog_service_node_healthy == 0 for: 5m labels: severity: error annotations: summary: \"Service healthcheck failed (instance {{ $labels.instance }})\" description: \"Service: `{{ $labels.service_name }}` Healthcheck: `{{ $labels.service_id }}`\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2. Missing Consul master node Numbers of consul raft peers less then expected <https://example.ru/ui/{{ $labels.dc }}/services/consul|Consul masters> - alert: MissingConsulMasterNode expr: consul_raft_peers < number_of_consul_master for: 5m labels: severity: error annotations: summary: \"Missing Consul master node (instance {{ $labels.instance }})\" description: \"Numbers of consul raft peers less then expected <https://example.ru/ui/{{ $labels.dc }}/services/consul|Consul masters>\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 3. Consul agent unhealthy A Consul agent is down - alert: ConsulAgentUnhealthy expr: consul_health_node_status{status=\"critical\"} == 1 for: 0m labels: severity: critical annotations: summary: Consul agent unhealthy (instance {{ $labels.instance }}) description: \"A Consul agent is down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"20. Consul : prometheus/consul_exporter"},{"location":"chap9/20Consul/#20-consul-prometheusconsul_exporter","text":"Consul Exporter","title":"20. Consul : prometheus/consul_exporter"},{"location":"chap9/20Consul/#1-service-healthcheck-failed","text":"Service: {{ $labels.service_name }} Healthcheck: {{ $labels.service_id }} - alert: ServiceHealthcheckFailed expr: consul_catalog_service_node_healthy == 0 for: 5m labels: severity: error annotations: summary: \"Service healthcheck failed (instance {{ $labels.instance }})\" description: \"Service: `{{ $labels.service_name }}` Healthcheck: `{{ $labels.service_id }}`\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1. Service healthcheck failed"},{"location":"chap9/20Consul/#2-missing-consul-master-node","text":"Numbers of consul raft peers less then expected <https://example.ru/ui/{{ $labels.dc }}/services/consul|Consul masters> - alert: MissingConsulMasterNode expr: consul_raft_peers < number_of_consul_master for: 5m labels: severity: error annotations: summary: \"Missing Consul master node (instance {{ $labels.instance }})\" description: \"Numbers of consul raft peers less then expected <https://example.ru/ui/{{ $labels.dc }}/services/consul|Consul masters>\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2. Missing Consul master node"},{"location":"chap9/20Consul/#3-consul-agent-unhealthy","text":"A Consul agent is down - alert: ConsulAgentUnhealthy expr: consul_health_node_status{status=\"critical\"} == 1 for: 0m labels: severity: critical annotations: summary: Consul agent unhealthy (instance {{ $labels.instance }}) description: \"A Consul agent is down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Consul agent unhealthy"},{"location":"chap9/21Etcd/","text":"21. Etcd 21.1. Insufficient Members Etcd cluster should have an odd number of members - alert: InsufficientMembers expr: count(etcd_server_id) > (count(etcd_server_id) / 2 - 1) for: 5m labels: severity: error annotations: summary: \"Insufficient Members (instance {{ $labels.instance }})\" description: \"Etcd cluster should have an odd number of members\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.2. No Leader Etcd cluster have no leader - alert: NoLeader expr: etcd_server_has_leader == 0 for: 5m labels: severity: error annotations: summary: \"No Leader (instance {{ $labels.instance }})\" description: \"Etcd cluster have no leader\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.3. High number of leader changes Etcd leader changed more than 3 times during last hour - alert: HighNumberOfLeaderChanges expr: increase(etcd_server_leader_changes_seen_total[1h]) > 3 for: 5m labels: severity: warning annotations: summary: \"High number of leader changes (instance {{ $labels.instance }})\" description: \"Etcd leader changed more than 3 times during last hour\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.4. High number of failed GRPC requests More than 1% GRPC request failure detected in Etcd for 5 minutes - alert: HighNumberOfFailedGrpcRequests expr: sum(rate(grpc_server_handled_total{grpc_code!=\"OK\"}[5m])) BY (grpc_service, grpc_method) / sum(rate(grpc_server_handled_total[5m])) BY (grpc_service, grpc_method) > 0.01 for: 5m labels: severity: warning annotations: summary: \"High number of failed GRPC requests (instance {{ $labels.instance }})\" description: \"More than 1% GRPC request failure detected in Etcd for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.5. High number of failed GRPC requests More than 5% GRPC request failure detected in Etcd for 5 minutes - alert: HighNumberOfFailedGrpcRequests expr: sum(rate(grpc_server_handled_total{grpc_code!=\"OK\"}[5m])) BY (grpc_service, grpc_method) / sum(rate(grpc_server_handled_total[5m])) BY (grpc_service, grpc_method) > 0.05 for: 5m labels: severity: error annotations: summary: \"High number of failed GRPC requests (instance {{ $labels.instance }})\" description: \"More than 5% GRPC request failure detected in Etcd for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.6. GRPC requests slow GRPC requests slowing down, 99th percentil is over 0.15s for 5 minutes - alert: GrpcRequestsSlow expr: histogram_quantile(0.99, sum(rate(grpc_server_handling_seconds_bucket{grpc_type=\"unary\"}[5m])) by (grpc_service, grpc_method, le)) > 0.15 for: 5m labels: severity: warning annotations: summary: \"GRPC requests slow (instance {{ $labels.instance }})\" description: \"GRPC requests slowing down, 99th percentil is over 0.15s for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.7. High number of failed HTTP requests More than 1% HTTP failure detected in Etcd for 5 minutes - alert: HighNumberOfFailedHttpRequests expr: sum(rate(etcd_http_failed_total[5m])) BY (method) / sum(rate(etcd_http_received_total[5m])) BY (method) > 0.01 for: 5m labels: severity: warning annotations: summary: \"High number of failed HTTP requests (instance {{ $labels.instance }})\" description: \"More than 1% HTTP failure detected in Etcd for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.8. High number of failed HTTP requests More than 5% HTTP failure detected in Etcd for 5 minutes - alert: HighNumberOfFailedHttpRequests expr: sum(rate(etcd_http_failed_total[5m])) BY (method) / sum(rate(etcd_http_received_total[5m])) BY (method) > 0.05 for: 5m labels: severity: error annotations: summary: \"High number of failed HTTP requests (instance {{ $labels.instance }})\" description: \"More than 5% HTTP failure detected in Etcd for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.9. HTTP requests slow HTTP requests slowing down, 99th percentil is over 0.15s for 5 minutes - alert: HttpRequestsSlow expr: histogram_quantile(0.99, rate(etcd_http_successful_duration_seconds_bucket[5m])) > 0.15 for: 5m labels: severity: warning annotations: summary: \"HTTP requests slow (instance {{ $labels.instance }})\" description: \"HTTP requests slowing down, 99th percentil is over 0.15s for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.10. Etcd member communication slow Etcd member communication slowing down, 99th percentil is over 0.15s for 5 minutes - alert: EtcdMemberCommunicationSlow expr: histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket[5m])) > 0.15 for: 5m labels: severity: warning annotations: summary: \"Etcd member communication slow (instance {{ $labels.instance }})\" description: \"Etcd member communication slowing down, 99th percentil is over 0.15s for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.11. High number of failed proposals Etcd server got more than 5 failed proposals past hour - alert: HighNumberOfFailedProposals expr: increase(etcd_server_proposals_failed_total[1h]) > 5 for: 5m labels: severity: warning annotations: summary: \"High number of failed proposals (instance {{ $labels.instance }})\" description: \"Etcd server got more than 5 failed proposals past hour\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.12. High fsync durations Etcd WAL fsync duration increasing, 99th percentil is over 0.5s for 5 minutes - alert: HighFsyncDurations expr: histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket[5m])) > 0.5 for: 5m labels: severity: warning annotations: summary: \"High fsync durations (instance {{ $labels.instance }})\" description: \"Etcd WAL fsync duration increasing, 99th percentil is over 0.5s for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 21.13. High commit durations Etcd commit duration increasing, 99th percentil is over 0.25s for 5 minutes - alert: HighCommitDurations expr: histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket[5m])) > 0.25 for: 5m labels: severity: warning annotations: summary: \"High commit durations (instance {{ $labels.instance }})\" description: \"Etcd commit duration increasing, 99th percentil is over 0.25s for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21. Etcd"},{"location":"chap9/21Etcd/#21-etcd","text":"","title":"21. Etcd"},{"location":"chap9/21Etcd/#211-insufficient-members","text":"Etcd cluster should have an odd number of members - alert: InsufficientMembers expr: count(etcd_server_id) > (count(etcd_server_id) / 2 - 1) for: 5m labels: severity: error annotations: summary: \"Insufficient Members (instance {{ $labels.instance }})\" description: \"Etcd cluster should have an odd number of members\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.1. Insufficient Members"},{"location":"chap9/21Etcd/#212-no-leader","text":"Etcd cluster have no leader - alert: NoLeader expr: etcd_server_has_leader == 0 for: 5m labels: severity: error annotations: summary: \"No Leader (instance {{ $labels.instance }})\" description: \"Etcd cluster have no leader\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.2. No Leader"},{"location":"chap9/21Etcd/#213-high-number-of-leader-changes","text":"Etcd leader changed more than 3 times during last hour - alert: HighNumberOfLeaderChanges expr: increase(etcd_server_leader_changes_seen_total[1h]) > 3 for: 5m labels: severity: warning annotations: summary: \"High number of leader changes (instance {{ $labels.instance }})\" description: \"Etcd leader changed more than 3 times during last hour\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.3. High number of leader changes"},{"location":"chap9/21Etcd/#214-high-number-of-failed-grpc-requests","text":"More than 1% GRPC request failure detected in Etcd for 5 minutes - alert: HighNumberOfFailedGrpcRequests expr: sum(rate(grpc_server_handled_total{grpc_code!=\"OK\"}[5m])) BY (grpc_service, grpc_method) / sum(rate(grpc_server_handled_total[5m])) BY (grpc_service, grpc_method) > 0.01 for: 5m labels: severity: warning annotations: summary: \"High number of failed GRPC requests (instance {{ $labels.instance }})\" description: \"More than 1% GRPC request failure detected in Etcd for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.4. High number of failed GRPC requests"},{"location":"chap9/21Etcd/#215-high-number-of-failed-grpc-requests","text":"More than 5% GRPC request failure detected in Etcd for 5 minutes - alert: HighNumberOfFailedGrpcRequests expr: sum(rate(grpc_server_handled_total{grpc_code!=\"OK\"}[5m])) BY (grpc_service, grpc_method) / sum(rate(grpc_server_handled_total[5m])) BY (grpc_service, grpc_method) > 0.05 for: 5m labels: severity: error annotations: summary: \"High number of failed GRPC requests (instance {{ $labels.instance }})\" description: \"More than 5% GRPC request failure detected in Etcd for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.5. High number of failed GRPC requests"},{"location":"chap9/21Etcd/#216-grpc-requests-slow","text":"GRPC requests slowing down, 99th percentil is over 0.15s for 5 minutes - alert: GrpcRequestsSlow expr: histogram_quantile(0.99, sum(rate(grpc_server_handling_seconds_bucket{grpc_type=\"unary\"}[5m])) by (grpc_service, grpc_method, le)) > 0.15 for: 5m labels: severity: warning annotations: summary: \"GRPC requests slow (instance {{ $labels.instance }})\" description: \"GRPC requests slowing down, 99th percentil is over 0.15s for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.6. GRPC requests slow"},{"location":"chap9/21Etcd/#217-high-number-of-failed-http-requests","text":"More than 1% HTTP failure detected in Etcd for 5 minutes - alert: HighNumberOfFailedHttpRequests expr: sum(rate(etcd_http_failed_total[5m])) BY (method) / sum(rate(etcd_http_received_total[5m])) BY (method) > 0.01 for: 5m labels: severity: warning annotations: summary: \"High number of failed HTTP requests (instance {{ $labels.instance }})\" description: \"More than 1% HTTP failure detected in Etcd for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.7. High number of failed HTTP requests"},{"location":"chap9/21Etcd/#218-high-number-of-failed-http-requests","text":"More than 5% HTTP failure detected in Etcd for 5 minutes - alert: HighNumberOfFailedHttpRequests expr: sum(rate(etcd_http_failed_total[5m])) BY (method) / sum(rate(etcd_http_received_total[5m])) BY (method) > 0.05 for: 5m labels: severity: error annotations: summary: \"High number of failed HTTP requests (instance {{ $labels.instance }})\" description: \"More than 5% HTTP failure detected in Etcd for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.8. High number of failed HTTP requests"},{"location":"chap9/21Etcd/#219-http-requests-slow","text":"HTTP requests slowing down, 99th percentil is over 0.15s for 5 minutes - alert: HttpRequestsSlow expr: histogram_quantile(0.99, rate(etcd_http_successful_duration_seconds_bucket[5m])) > 0.15 for: 5m labels: severity: warning annotations: summary: \"HTTP requests slow (instance {{ $labels.instance }})\" description: \"HTTP requests slowing down, 99th percentil is over 0.15s for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.9. HTTP requests slow"},{"location":"chap9/21Etcd/#2110-etcd-member-communication-slow","text":"Etcd member communication slowing down, 99th percentil is over 0.15s for 5 minutes - alert: EtcdMemberCommunicationSlow expr: histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket[5m])) > 0.15 for: 5m labels: severity: warning annotations: summary: \"Etcd member communication slow (instance {{ $labels.instance }})\" description: \"Etcd member communication slowing down, 99th percentil is over 0.15s for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.10. Etcd member communication slow"},{"location":"chap9/21Etcd/#2111-high-number-of-failed-proposals","text":"Etcd server got more than 5 failed proposals past hour - alert: HighNumberOfFailedProposals expr: increase(etcd_server_proposals_failed_total[1h]) > 5 for: 5m labels: severity: warning annotations: summary: \"High number of failed proposals (instance {{ $labels.instance }})\" description: \"Etcd server got more than 5 failed proposals past hour\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.11. High number of failed proposals"},{"location":"chap9/21Etcd/#2112-high-fsync-durations","text":"Etcd WAL fsync duration increasing, 99th percentil is over 0.5s for 5 minutes - alert: HighFsyncDurations expr: histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket[5m])) > 0.5 for: 5m labels: severity: warning annotations: summary: \"High fsync durations (instance {{ $labels.instance }})\" description: \"Etcd WAL fsync duration increasing, 99th percentil is over 0.5s for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.12. High fsync durations"},{"location":"chap9/21Etcd/#2113-high-commit-durations","text":"Etcd commit duration increasing, 99th percentil is over 0.25s for 5 minutes - alert: HighCommitDurations expr: histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket[5m])) > 0.25 for: 5m labels: severity: warning annotations: summary: \"High commit durations (instance {{ $labels.instance }})\" description: \"Etcd commit duration increasing, 99th percentil is over 0.25s for 5 minutes\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"21.13. High commit durations"},{"location":"chap9/22Zookkeeper/","text":"11. Zookeeper: kafka_zookeeper_exporter 1 Zookeeper : kafka_zookeeper_exporter 2. Zookeeper : dabealu/zookeeper-exporter 1 Zookeeper Down Zookeeper down on instance {{ $labels.instance }} - alert: ZookeeperDown expr: zk_up == 0 for: 0m labels: severity: critical annotations: summary: Zookeeper Down (instance {{ $labels.instance }}) description: \"Zookeeper down on instance {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2 Zookeeper missing leader Zookeeper cluster has no node marked as leader - alert: ZookeeperMissingLeader expr: sum(zk_server_leader) == 0 for: 0m labels: severity: critical annotations: summary: Zookeeper missing leader (instance {{ $labels.instance }}) description: \"Zookeeper cluster has no node marked as leader\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Zookeeper Too Many Leaders Zookeeper cluster has too many nodes marked as leader - alert: ZookeeperTooManyLeaders expr: sum(zk_server_leader) > 1 for: 0m labels: severity: critical annotations: summary: Zookeeper Too Many Leaders (instance {{ $labels.instance }}) description: \"Zookeeper cluster has too many nodes marked as leader\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Zookeeper Not Ok Zookeeper instance is not ok - alert: ZookeeperNotOk expr: zk_ruok == 0 for: 3m labels: severity: warning annotations: summary: Zookeeper Not Ok (instance {{ $labels.instance }}) description: \"Zookeeper instance is not ok\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"11. Zookeeper: `kafka_zookeeper_exporter`"},{"location":"chap9/22Zookkeeper/#11-zookeeper-kafka_zookeeper_exporter","text":"","title":"11. Zookeeper: kafka_zookeeper_exporter"},{"location":"chap9/22Zookkeeper/#1-zookeeper-kafka_zookeeper_exporter","text":"","title":"1 Zookeeper : kafka_zookeeper_exporter"},{"location":"chap9/22Zookkeeper/#2-zookeeper-dabealuzookeeper-exporter","text":"","title":"2. Zookeeper : dabealu/zookeeper-exporter"},{"location":"chap9/22Zookkeeper/#1-zookeeper-down","text":"Zookeeper down on instance {{ $labels.instance }} - alert: ZookeeperDown expr: zk_up == 0 for: 0m labels: severity: critical annotations: summary: Zookeeper Down (instance {{ $labels.instance }}) description: \"Zookeeper down on instance {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1 Zookeeper Down"},{"location":"chap9/22Zookkeeper/#2-zookeeper-missing-leader","text":"Zookeeper cluster has no node marked as leader - alert: ZookeeperMissingLeader expr: sum(zk_server_leader) == 0 for: 0m labels: severity: critical annotations: summary: Zookeeper missing leader (instance {{ $labels.instance }}) description: \"Zookeeper cluster has no node marked as leader\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2 Zookeeper missing leader"},{"location":"chap9/22Zookkeeper/#3-zookeeper-too-many-leaders","text":"Zookeeper cluster has too many nodes marked as leader - alert: ZookeeperTooManyLeaders expr: sum(zk_server_leader) > 1 for: 0m labels: severity: critical annotations: summary: Zookeeper Too Many Leaders (instance {{ $labels.instance }}) description: \"Zookeeper cluster has too many nodes marked as leader\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Zookeeper Too Many Leaders"},{"location":"chap9/22Zookkeeper/#4-zookeeper-not-ok","text":"Zookeeper instance is not ok - alert: ZookeeperNotOk expr: zk_ruok == 0 for: 3m labels: severity: warning annotations: summary: Zookeeper Not Ok (instance {{ $labels.instance }}) description: \"Zookeeper instance is not ok\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Zookeeper Not Ok"},{"location":"chap9/23Kafka/","text":"23. Kafka : kafka_exporter 1 Kafka danielqsj/kafka_exporter 1. Kafka Topics Kafka topic in-sync partition - alert: KafkaTopics expr: sum(kafka_topic_partition_in_sync_replica) by (topic) < 3 for: 5m labels: severity: error annotations: summary: \"Kafka Topics (instance {{ $labels.instance }})\" description: \"Kafka topic in-sync partition\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2. Kafka consumers group Kafka consumers group - alert: KafkaConsumersGroup expr: sum(kafka_consumergroup_lag) by (consumergroup) > 50 for: 5m labels: severity: error annotations: summary: \"Kafka consumers group (instance {{ $labels.instance }})\" description: \"Kafka consumers group\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2 Kafka : linkedin/Burrow 1. Kafka topic offset decreased Kafka topic offset has decreased - alert: KafkaTopicOffsetDecreased expr: delta(kafka_burrow_partition_current_offset[1m]) < 0 for: 0m labels: severity: warning annotations: summary: Kafka topic offset decreased (instance {{ $labels.instance }}) description: \"Kafka topic offset has decreased\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Kafka consumer lag Kafka consumer has a 30 minutes and increasing lag - alert: KafkaConsumerLag expr: kafka_burrow_topic_partition_offset - on(partition, cluster, topic) group_right() kafka_burrow_partition_current_offset >= (kafka_burrow_topic_partition_offset offset 15m - on(partition, cluster, topic) group_right() kafka_burrow_partition_current_offset offset 15m) AND kafka_burrow_topic_partition_offset - on(partition, cluster, topic) group_right() kafka_burrow_partition_current_offset > 0 for: 15m labels: severity: warning annotations: summary: Kafka consumer lag (instance {{ $labels.instance }}) description: \"Kafka consumer has a 30 minutes and increasing lag\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"23. Kafka : `kafka_exporter`"},{"location":"chap9/23Kafka/#23-kafka-kafka_exporter","text":"","title":"23. Kafka : kafka_exporter"},{"location":"chap9/23Kafka/#1-kafka-danielqsjkafka_exporter","text":"","title":"1 Kafka danielqsj/kafka_exporter"},{"location":"chap9/23Kafka/#1-kafka-topics","text":"Kafka topic in-sync partition - alert: KafkaTopics expr: sum(kafka_topic_partition_in_sync_replica) by (topic) < 3 for: 5m labels: severity: error annotations: summary: \"Kafka Topics (instance {{ $labels.instance }})\" description: \"Kafka topic in-sync partition\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1. Kafka Topics"},{"location":"chap9/23Kafka/#2-kafka-consumers-group","text":"Kafka consumers group - alert: KafkaConsumersGroup expr: sum(kafka_consumergroup_lag) by (consumergroup) > 50 for: 5m labels: severity: error annotations: summary: \"Kafka consumers group (instance {{ $labels.instance }})\" description: \"Kafka consumers group\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2. Kafka consumers group"},{"location":"chap9/23Kafka/#2-kafka-linkedinburrow","text":"","title":"2 Kafka : linkedin/Burrow"},{"location":"chap9/23Kafka/#1-kafka-topic-offset-decreased","text":"Kafka topic offset has decreased - alert: KafkaTopicOffsetDecreased expr: delta(kafka_burrow_partition_current_offset[1m]) < 0 for: 0m labels: severity: warning annotations: summary: Kafka topic offset decreased (instance {{ $labels.instance }}) description: \"Kafka topic offset has decreased\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Kafka topic offset decreased"},{"location":"chap9/23Kafka/#2-kafka-consumer-lag","text":"Kafka consumer has a 30 minutes and increasing lag - alert: KafkaConsumerLag expr: kafka_burrow_topic_partition_offset - on(partition, cluster, topic) group_right() kafka_burrow_partition_current_offset >= (kafka_burrow_topic_partition_offset offset 15m - on(partition, cluster, topic) group_right() kafka_burrow_partition_current_offset offset 15m) AND kafka_burrow_topic_partition_offset - on(partition, cluster, topic) group_right() kafka_burrow_partition_current_offset > 0 for: 15m labels: severity: warning annotations: summary: Kafka consumer lag (instance {{ $labels.instance }}) description: \"Kafka consumer has a 30 minutes and increasing lag\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Kafka consumer lag"},{"location":"chap9/24Linkerd/","text":"24. Linkerd Embedded exporter 1. Linkerd high error rate Linkerd error rate for {{ $labels.deployment | $labels.statefulset | $labels.daemonset }} is over 10% - alert: LinkerdHighErrorRate expr: sum(rate(request_errors_total[1m])) by (deployment, statefulset, daemonset) / sum(rate(request_total[1m])) by (deployment, statefulset, daemonset) * 100 > 10 for: 1m labels: severity: warning annotations: summary: Linkerd high error rate (instance {{ $labels.instance }}) description: \"Linkerd error rate for {{ $labels.deployment | $labels.statefulset | $labels.daemonset }} is over 10%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"24. Linkerd"},{"location":"chap9/24Linkerd/#24-linkerd","text":"Embedded exporter","title":"24. Linkerd"},{"location":"chap9/24Linkerd/#1-linkerd-high-error-rate","text":"Linkerd error rate for {{ $labels.deployment | $labels.statefulset | $labels.daemonset }} is over 10% - alert: LinkerdHighErrorRate expr: sum(rate(request_errors_total[1m])) by (deployment, statefulset, daemonset) / sum(rate(request_total[1m])) by (deployment, statefulset, daemonset) * 100 > 10 for: 1m labels: severity: warning annotations: summary: Linkerd high error rate (instance {{ $labels.instance }}) description: \"Linkerd error rate for {{ $labels.deployment | $labels.statefulset | $labels.daemonset }} is over 10%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Linkerd high error rate"},{"location":"chap9/25Istio/","text":"6 Istio : Embedded exporter Embedded exporter 1. Istio Kubernetes gateway availability drop Gateway pods have dropped. Inbound traffic will likely be affected. - alert: IstioKubernetesGatewayAvailabilityDrop expr: min(kube_deployment_status_replicas_available{deployment=\"istio-ingressgateway\", namespace=\"istio-system\"}) without (instance, pod) < 2 for: 1m labels: severity: warning annotations: summary: Istio Kubernetes gateway availability drop (instance {{ $labels.instance }}) description: \"Gateway pods have dropped. Inbound traffic will likely be affected.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Istio Pilot high total request rate Number of Istio Pilot push errors is too high (> 5%). Envoy sidecars might have outdated configuration. - alert: IstioPilotHighTotalRequestRate expr: sum(rate(pilot_xds_push_errors[1m])) / sum(rate(pilot_xds_pushes[1m])) * 100 > 5 for: 1m labels: severity: warning annotations: summary: Istio Pilot high total request rate (instance {{ $labels.instance }}) description: \"Number of Istio Pilot push errors is too high (> 5%). Envoy sidecars might have outdated configuration.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Istio Mixer Prometheus dispatches low Number of Mixer dispatches to Prometheus is too low. Istio metrics might not be being exported properly. - alert: IstioMixerPrometheusDispatchesLow expr: sum(rate(mixer_runtime_dispatches_total{adapter=~\"prometheus\"}[1m])) < 180 for: 1m labels: severity: warning annotations: summary: Istio Mixer Prometheus dispatches low (instance {{ $labels.instance }}) description: \"Number of Mixer dispatches to Prometheus is too low. Istio metrics might not be being exported properly.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Istio high total request rate Global request rate in the service mesh is unusually high. - alert: IstioHighTotalRequestRate expr: sum(rate(istio_requests_total{reporter=\"destination\"}[5m])) > 1000 for: 2m labels: severity: warning annotations: summary: Istio high total request rate (instance {{ $labels.instance }}) description: \"Global request rate in the service mesh is unusually high.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5. Istio low total request rate Global request rate in the service mesh is unusually low. - alert: IstioLowTotalRequestRate expr: sum(rate(istio_requests_total{reporter=\"destination\"}[5m])) < 100 for: 2m labels: severity: warning annotations: summary: Istio low total request rate (instance {{ $labels.instance }}) description: \"Global request rate in the service mesh is unusually low.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6. Istio high 4xx error rate High percentage of HTTP 5xx responses in Istio (> 5%). - alert: IstioHigh4xxErrorRate expr: sum(rate(istio_requests_total{reporter=\"destination\", response_code=~\"4.*\"}[5m])) / sum(rate(istio_requests_total{reporter=\"destination\"}[5m])) * 100 > 5 for: 1m labels: severity: warning annotations: summary: Istio high 4xx error rate (instance {{ $labels.instance }}) description: \"High percentage of HTTP 5xx responses in Istio (> 5%).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7. Istio high 5xx error rate**** High percentage of HTTP 5xx responses in Istio (> 5%). - alert: IstioHigh5xxErrorRate expr: sum(rate(istio_requests_total{reporter=\"destination\", response_code=~\"5.*\"}[5m])) / sum(rate(istio_requests_total{reporter=\"destination\"}[5m])) * 100 > 5 for: 1m labels: severity: warning annotations: summary: Istio high 5xx error rate (instance {{ $labels.instance }}) description: \"High percentage of HTTP 5xx responses in Istio (> 5%).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 8. Istio high request latency Istio average requests execution is longer than 100ms. - alert: IstioHighRequestLatency expr: rate(istio_request_duration_milliseconds_sum[1m]) / rate(istio_request_duration_milliseconds_count[1m]) > 0.1 for: 1m labels: severity: warning annotations: summary: Istio high request latency (instance {{ $labels.instance }}) description: \"Istio average requests execution is longer than 100ms.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9. Istio latency 99 percentile Istio 1% slowest requests are longer than 1s. - alert: IstioLatency99Percentile expr: histogram_quantile(0.99, rate(istio_request_duration_milliseconds_bucket[1m])) > 1 for: 1m labels: severity: warning annotations: summary: Istio latency 99 percentile (instance {{ $labels.instance }}) description: \"Istio 1% slowest requests are longer than 1s.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 10. Istio Pilot Duplicate Entry Istio pilot duplicate entry error. - alert: IstioPilotDuplicateEntry expr: sum(rate(pilot_duplicate_envoy_clusters{}[5m])) > 0 for: 0m labels: severity: critical annotations: summary: Istio Pilot Duplicate Entry (instance {{ $labels.instance }}) description: \"Istio pilot duplicate entry error.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6 Istio : Embedded exporter"},{"location":"chap9/25Istio/#6-istio-embedded-exporter","text":"Embedded exporter","title":"6 Istio : Embedded exporter"},{"location":"chap9/25Istio/#1-istio-kubernetes-gateway-availability-drop","text":"Gateway pods have dropped. Inbound traffic will likely be affected. - alert: IstioKubernetesGatewayAvailabilityDrop expr: min(kube_deployment_status_replicas_available{deployment=\"istio-ingressgateway\", namespace=\"istio-system\"}) without (instance, pod) < 2 for: 1m labels: severity: warning annotations: summary: Istio Kubernetes gateway availability drop (instance {{ $labels.instance }}) description: \"Gateway pods have dropped. Inbound traffic will likely be affected.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Istio Kubernetes gateway availability drop"},{"location":"chap9/25Istio/#2-istio-pilot-high-total-request-rate","text":"Number of Istio Pilot push errors is too high (> 5%). Envoy sidecars might have outdated configuration. - alert: IstioPilotHighTotalRequestRate expr: sum(rate(pilot_xds_push_errors[1m])) / sum(rate(pilot_xds_pushes[1m])) * 100 > 5 for: 1m labels: severity: warning annotations: summary: Istio Pilot high total request rate (instance {{ $labels.instance }}) description: \"Number of Istio Pilot push errors is too high (> 5%). Envoy sidecars might have outdated configuration.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Istio Pilot high total request rate"},{"location":"chap9/25Istio/#3-istio-mixer-prometheus-dispatches-low","text":"Number of Mixer dispatches to Prometheus is too low. Istio metrics might not be being exported properly. - alert: IstioMixerPrometheusDispatchesLow expr: sum(rate(mixer_runtime_dispatches_total{adapter=~\"prometheus\"}[1m])) < 180 for: 1m labels: severity: warning annotations: summary: Istio Mixer Prometheus dispatches low (instance {{ $labels.instance }}) description: \"Number of Mixer dispatches to Prometheus is too low. Istio metrics might not be being exported properly.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Istio Mixer Prometheus dispatches low"},{"location":"chap9/25Istio/#4-istio-high-total-request-rate","text":"Global request rate in the service mesh is unusually high. - alert: IstioHighTotalRequestRate expr: sum(rate(istio_requests_total{reporter=\"destination\"}[5m])) > 1000 for: 2m labels: severity: warning annotations: summary: Istio high total request rate (instance {{ $labels.instance }}) description: \"Global request rate in the service mesh is unusually high.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Istio high total request rate"},{"location":"chap9/25Istio/#5-istio-low-total-request-rate","text":"Global request rate in the service mesh is unusually low. - alert: IstioLowTotalRequestRate expr: sum(rate(istio_requests_total{reporter=\"destination\"}[5m])) < 100 for: 2m labels: severity: warning annotations: summary: Istio low total request rate (instance {{ $labels.instance }}) description: \"Global request rate in the service mesh is unusually low.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5. Istio low total request rate"},{"location":"chap9/25Istio/#6-istio-high-4xx-error-rate","text":"High percentage of HTTP 5xx responses in Istio (> 5%). - alert: IstioHigh4xxErrorRate expr: sum(rate(istio_requests_total{reporter=\"destination\", response_code=~\"4.*\"}[5m])) / sum(rate(istio_requests_total{reporter=\"destination\"}[5m])) * 100 > 5 for: 1m labels: severity: warning annotations: summary: Istio high 4xx error rate (instance {{ $labels.instance }}) description: \"High percentage of HTTP 5xx responses in Istio (> 5%).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6. Istio high 4xx error rate"},{"location":"chap9/25Istio/#7-istio-high-5xx-error-rate","text":"High percentage of HTTP 5xx responses in Istio (> 5%). - alert: IstioHigh5xxErrorRate expr: sum(rate(istio_requests_total{reporter=\"destination\", response_code=~\"5.*\"}[5m])) / sum(rate(istio_requests_total{reporter=\"destination\"}[5m])) * 100 > 5 for: 1m labels: severity: warning annotations: summary: Istio high 5xx error rate (instance {{ $labels.instance }}) description: \"High percentage of HTTP 5xx responses in Istio (> 5%).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7. Istio high 5xx error rate****"},{"location":"chap9/25Istio/#8-istio-high-request-latency","text":"Istio average requests execution is longer than 100ms. - alert: IstioHighRequestLatency expr: rate(istio_request_duration_milliseconds_sum[1m]) / rate(istio_request_duration_milliseconds_count[1m]) > 0.1 for: 1m labels: severity: warning annotations: summary: Istio high request latency (instance {{ $labels.instance }}) description: \"Istio average requests execution is longer than 100ms.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"8. Istio high request latency"},{"location":"chap9/25Istio/#9-istio-latency-99-percentile","text":"Istio 1% slowest requests are longer than 1s. - alert: IstioLatency99Percentile expr: histogram_quantile(0.99, rate(istio_request_duration_milliseconds_bucket[1m])) > 1 for: 1m labels: severity: warning annotations: summary: Istio latency 99 percentile (instance {{ $labels.instance }}) description: \"Istio 1% slowest requests are longer than 1s.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9. Istio latency 99 percentile"},{"location":"chap9/25Istio/#10-istio-pilot-duplicate-entry","text":"Istio pilot duplicate entry error. - alert: IstioPilotDuplicateEntry expr: sum(rate(pilot_duplicate_envoy_clusters{}[5m])) > 0 for: 0m labels: severity: critical annotations: summary: Istio Pilot Duplicate Entry (instance {{ $labels.instance }}) description: \"Istio pilot duplicate entry error.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"10. Istio Pilot Duplicate Entry"},{"location":"chap9/26Blackbox/","text":"4. Blackbox : prometheus/blackbox_exporter prometheus/blackbox_exporter blackbox_exporter.yml modules: http_get_2xx: prober: http timeout: 10s http: valid_http_versions: [\"HTTP/1.1\", \"HTTP/2\"] method: GET baidu.com: prober: dns timeout: 10s dns: query_name: \"baidu.com\" query_type: \"A\" preferred_ip_protocol: \"ip4\" 26.1 Blackbox probe failed Probe failed - alert: ProbeFailed expr: probe_success == 0 for: 5m labels: severity: error annotations: summary: \"Probe failed (instance {{ $labels.instance }})\" description: \"Probe failed\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 26.2. Blackbox slow probe Blackbox probe took more than 1s to complete - alert: SlowProbe expr: avg_over_time(probe_duration_seconds[1m]) > 1 for: 5m labels: severity: warning annotations: summary: \"Slow probe (instance {{ $labels.instance }})\" description: \"Blackbox probe took more than 1s to complete\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 26.3. Blackbox probe HTTP failure HTTP status code is not 200-399 - alert: HttpStatusCode expr: probe_http_status_code <= 199 OR probe_http_status_code >= 400 for: 5m labels: severity: error annotations: summary: \"HTTP Status Code (instance {{ $labels.instance }})\" description: \"HTTP status code is not 200-399\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 26.4. SSL certificate will expire soon SSL certificate expires in 30 days - alert: SslCertificateWillExpireSoon expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 30 for: 5m labels: severity: warning annotations: summary: \"SSL certificate will expire soon (instance {{ $labels.instance }})\" description: \"SSL certificate expires in 30 days\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 26.5. SSL certificate expired SSL certificate has expired already - alert: SslCertificateExpired expr: probe_ssl_earliest_cert_expiry - time() <= 0 for: 5m labels: severity: error annotations: summary: \"SSL certificate expired (instance {{ $labels.instance }})\" description: \"SSL certificate has expired already\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 26.6. Blackbox probe slow HTTP HTTP request took more than 1s - alert: HttpSlowRequests expr: avg_over_time(probe_http_duration_seconds[1m]) > 1 for: 5m labels: severity: warning annotations: summary: \"HTTP slow requests (instance {{ $labels.instance }})\" description: \"HTTP request took more than 1s\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 26.7. Blackbox probe slow ping Blackbox ping took more than 1s - alert: SlowPing expr: avg_over_time(probe_icmp_duration_seconds[1m]) > 1 for: 5m labels: severity: warning annotations: summary: \"Slow ping (instance {{ $labels.instance }})\" description: \"Blackbox ping took more than 1s\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"4. Blackbox : prometheus/blackbox_exporter"},{"location":"chap9/26Blackbox/#4-blackbox-prometheusblackbox_exporter","text":"prometheus/blackbox_exporter","title":"4. Blackbox : prometheus/blackbox_exporter"},{"location":"chap9/26Blackbox/#blackbox_exporteryml","text":"modules: http_get_2xx: prober: http timeout: 10s http: valid_http_versions: [\"HTTP/1.1\", \"HTTP/2\"] method: GET baidu.com: prober: dns timeout: 10s dns: query_name: \"baidu.com\" query_type: \"A\" preferred_ip_protocol: \"ip4\"","title":"blackbox_exporter.yml"},{"location":"chap9/26Blackbox/#261-blackbox-probe-failed","text":"Probe failed - alert: ProbeFailed expr: probe_success == 0 for: 5m labels: severity: error annotations: summary: \"Probe failed (instance {{ $labels.instance }})\" description: \"Probe failed\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"26.1 Blackbox probe failed"},{"location":"chap9/26Blackbox/#262-blackbox-slow-probe","text":"Blackbox probe took more than 1s to complete - alert: SlowProbe expr: avg_over_time(probe_duration_seconds[1m]) > 1 for: 5m labels: severity: warning annotations: summary: \"Slow probe (instance {{ $labels.instance }})\" description: \"Blackbox probe took more than 1s to complete\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"26.2. Blackbox slow probe"},{"location":"chap9/26Blackbox/#263-blackbox-probe-http-failure","text":"HTTP status code is not 200-399 - alert: HttpStatusCode expr: probe_http_status_code <= 199 OR probe_http_status_code >= 400 for: 5m labels: severity: error annotations: summary: \"HTTP Status Code (instance {{ $labels.instance }})\" description: \"HTTP status code is not 200-399\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"26.3. Blackbox probe HTTP failure"},{"location":"chap9/26Blackbox/#264-ssl-certificate-will-expire-soon","text":"SSL certificate expires in 30 days - alert: SslCertificateWillExpireSoon expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 30 for: 5m labels: severity: warning annotations: summary: \"SSL certificate will expire soon (instance {{ $labels.instance }})\" description: \"SSL certificate expires in 30 days\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"26.4. SSL certificate will expire soon"},{"location":"chap9/26Blackbox/#265-ssl-certificate-expired","text":"SSL certificate has expired already - alert: SslCertificateExpired expr: probe_ssl_earliest_cert_expiry - time() <= 0 for: 5m labels: severity: error annotations: summary: \"SSL certificate expired (instance {{ $labels.instance }})\" description: \"SSL certificate has expired already\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"26.5. SSL certificate expired"},{"location":"chap9/26Blackbox/#266-blackbox-probe-slow-http","text":"HTTP request took more than 1s - alert: HttpSlowRequests expr: avg_over_time(probe_http_duration_seconds[1m]) > 1 for: 5m labels: severity: warning annotations: summary: \"HTTP slow requests (instance {{ $labels.instance }})\" description: \"HTTP request took more than 1s\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"26.6. Blackbox probe slow HTTP"},{"location":"chap9/26Blackbox/#267-blackbox-probe-slow-ping","text":"Blackbox ping took more than 1s - alert: SlowPing expr: avg_over_time(probe_icmp_duration_seconds[1m]) > 1 for: 5m labels: severity: warning annotations: summary: \"Slow ping (instance {{ $labels.instance }})\" description: \"Blackbox ping took more than 1s\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"26.7. Blackbox probe slow ping"},{"location":"chap9/27OpenEBS/","text":"4. OpenEBS 1. Used pool capacity OpenEBS Pool use more than 80% of his capacity \\n VALUE = {{ $value }}\\n LABELS: {{ $labels }} - alert: UsedPoolCapacity expr: (openebs_used_pool_capacity_percent) > 80 for: 5m labels: severity: warning annotations: summary: \"Used pool capacity (instance {{ $labels.instance }})\" description: \"OpenEBS Pool use more than 80% of his capacity\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"4. OpenEBS"},{"location":"chap9/27OpenEBS/#4-openebs","text":"","title":"4. OpenEBS"},{"location":"chap9/27OpenEBS/#1-used-pool-capacity","text":"OpenEBS Pool use more than 80% of his capacity \\n VALUE = {{ $value }}\\n LABELS: {{ $labels }} - alert: UsedPoolCapacity expr: (openebs_used_pool_capacity_percent) > 80 for: 5m labels: severity: warning annotations: summary: \"Used pool capacity (instance {{ $labels.instance }})\" description: \"OpenEBS Pool use more than 80% of his capacity\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1. Used pool capacity"},{"location":"chap9/28Minio/","text":"5. Minio 1. Disk down Minio Disk is down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }} - alert: DiskDown expr: minio_offline_disks > 0 for: 5m labels: severity: error annotations: summary: \"Disk down (instance {{ $labels.instance }})\" description: \"Minio Disk is down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.Minio disk space usage Minio available free space is low (< 10%) - alert: MinioDiskSpaceUsage expr: disk_storage_available / disk_storage_total * 100 < 10 for: 0m labels: severity: warning annotations: summary: Minio disk space usage (instance {{ $labels.instance }}) description: \"Minio available free space is low (< 10%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5. Minio"},{"location":"chap9/28Minio/#5-minio","text":"","title":"5. Minio"},{"location":"chap9/28Minio/#1-disk-down","text":"Minio Disk is down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }} - alert: DiskDown expr: minio_offline_disks > 0 for: 5m labels: severity: error annotations: summary: \"Disk down (instance {{ $labels.instance }})\" description: \"Minio Disk is down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1. Disk down"},{"location":"chap9/28Minio/#2minio-disk-space-usage","text":"Minio available free space is low (< 10%) - alert: MinioDiskSpaceUsage expr: disk_storage_available / disk_storage_total * 100 < 10 for: 0m labels: severity: warning annotations: summary: Minio disk space usage (instance {{ $labels.instance }}) description: \"Minio available free space is low (< 10%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.Minio disk space usage"},{"location":"chap9/29Juniper/","text":"7. Juniper : junos_exporter czerwonk/junos_exporter 1. Switch is down The switch appears to be down - alert: SwitchIsDown expr: junos_up == 0 for: 5m labels: severity: error annotations: summary: \"Switch is down (instance {{ $labels.instance }})\" description: \"The switch appears to be down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2. High Bandwith Usage 1GiB Interface is highly saturated for at least 1 min. (> 0.90GiB/s) - alert: HighBandwithUsage1gib expr: irate(junos_interface_transmit_bytes[1m]) * 8 > 1e+9 * 0.90 for: 5m labels: severity: error annotations: summary: \"High Bandwith Usage 1GiB (instance {{ $labels.instance }})\" description: \"Interface is highly saturated for at least 1 min. (> 0.90GiB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 3. High Bandwith Usage 1GiB Interface is getting saturated for at least 1 min. (> 0.80GiB/s) - alert: HighBandwithUsage1gib expr: irate(junos_interface_transmit_bytes[1m]) * 8 > 1e+9 * 0.80 for: 5m labels: severity: warning annotations: summary: \"High Bandwith Usage 1GiB (instance {{ $labels.instance }})\" description: \"Interface is getting saturated for at least 1 min. (> 0.80GiB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"7. Juniper : `junos_exporter`"},{"location":"chap9/29Juniper/#7-juniper-junos_exporter","text":"czerwonk/junos_exporter","title":"7. Juniper : junos_exporter"},{"location":"chap9/29Juniper/#1-switch-is-down","text":"The switch appears to be down - alert: SwitchIsDown expr: junos_up == 0 for: 5m labels: severity: error annotations: summary: \"Switch is down (instance {{ $labels.instance }})\" description: \"The switch appears to be down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1. Switch is down"},{"location":"chap9/29Juniper/#2-high-bandwith-usage-1gib","text":"Interface is highly saturated for at least 1 min. (> 0.90GiB/s) - alert: HighBandwithUsage1gib expr: irate(junos_interface_transmit_bytes[1m]) * 8 > 1e+9 * 0.90 for: 5m labels: severity: error annotations: summary: \"High Bandwith Usage 1GiB (instance {{ $labels.instance }})\" description: \"Interface is highly saturated for at least 1 min. (> 0.90GiB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2. High Bandwith Usage 1GiB"},{"location":"chap9/29Juniper/#3-high-bandwith-usage-1gib","text":"Interface is getting saturated for at least 1 min. (> 0.80GiB/s) - alert: HighBandwithUsage1gib expr: irate(junos_interface_transmit_bytes[1m]) * 8 > 1e+9 * 0.80 for: 5m labels: severity: warning annotations: summary: \"High Bandwith Usage 1GiB (instance {{ $labels.instance }})\" description: \"Interface is getting saturated for at least 1 min. (> 0.80GiB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"3. High Bandwith Usage 1GiB"},{"location":"chap9/2Host_node-exporter/","text":"2 Host node-exporter 2.1 Out of memory Node memory is filling up (< 10% left) - alert: OutOfMemory expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10 for: 5m labels: severity: warning annotations: summary: \"Out of memory (instance {{ $labels.instance }})\" description: \"Node memory is filling up (< 10% left)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.2. Host memory under memory pressure The node is under heavy memory pressure. High rate of major page faults - alert: HostMemoryUnderMemoryPressure expr: rate(node_vmstat_pgmajfault[1m]) > 1000 for: 2m labels: severity: warning annotations: summary: Host memory under memory pressure (instance {{ $labels.instance }}) description: \"The node is under heavy memory pressure. High rate of major page faults\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.3 Unusual network throughput in Host network interfaces are probably receiving too much data (> 100 MB/s) - alert: UnusualNetworkThroughputIn expr: sum by (instance) (irate(node_network_receive_bytes_total[2m])) / 1024 / 1024 > 100 for: 5m labels: severity: warning annotations: summary: \"Unusual network throughput in (instance {{ $labels.instance }})\" description: \"Host network interfaces are probably receiving too much data (> 100 MB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.4. Unusual network throughput out Host network interfaces are probably sending too much data (> 100 MB/s) - alert: UnusualNetworkThroughputOut expr: sum by (instance) (irate(node_network_transmit_bytes_total[2m])) / 1024 / 1024 > 100 for: 5m labels: severity: warning annotations: summary: \"Unusual network throughput out (instance {{ $labels.instance }})\" description: \"Host network interfaces are probably sending too much data (> 100 MB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.5. Unusual disk read rate Disk is probably reading too much data (> 50 MB/s) - alert: UnusualDiskReadRate expr: sum by (instance) (irate(node_disk_read_bytes_total[2m])) / 1024 / 1024 > 50 for: 5m labels: severity: warning annotations: summary: \"Unusual disk read rate (instance {{ $labels.instance }})\" description: \"Disk is probably reading too much data (> 50 MB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.6. Unusual disk write rate Disk is probably writing too much data (> 50 MB/s) - alert: UnusualDiskWriteRate expr: sum by (instance) (irate(node_disk_written_bytes_total[2m])) / 1024 / 1024 > 50 for: 5m labels: severity: warning annotations: summary: \"Unusual disk write rate (instance {{ $labels.instance }})\" description: \"Disk is probably writing too much data (> 50 MB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.7 Out of disk space Disk is almost full (< 10% left) - alert: OutOfDiskSpace expr: node_filesystem_free_bytes{mountpoint =\"/rootfs\"} / node_filesystem_size_bytes{mountpoint =\"/rootfs\"} * 100 < 10 for: 5m labels: severity: warning annotations: summary: \"Out of disk space (instance {{ $labels.instance }})\" description: \"Disk is almost full (< 10% left)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.8 Host disk will fill in 24 hours Filesystem is predicted to run out of space within the next 24 hours at current write rate # Please add ignored mountpoints in node_exporter parameters like # \"--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run)($|/)\". # Same rule using \"node_filesystem_free_bytes\" will fire when disk fills for non-root users. - alert: HostDiskWillFillIn24Hours expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) predict_linear(node_filesystem_avail_bytes{fstype!~\"tmpfs\"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly == 0 for: 2m labels: severity: warning annotations: summary: Host disk will fill in 24 hours (instance {{ $labels.instance }}) description: \"Filesystem is predicted to run out of space within the next 24 hours at current write rate\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.9 Out of inodes Disk is almost running out of available inodes (< 10% left) - alert: OutOfInodes expr: node_filesystem_files_free{mountpoint =\"/rootfs\"} / node_filesystem_files{mountpoint =\"/rootfs\"} * 100 < 10 for: 5m labels: severity: warning annotations: summary: \"Out of inodes (instance {{ $labels.instance }})\" description: \"Disk is almost running out of available inodes (< 10% left)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.10. Host inodes will fill in 24 hours Filesystem is predicted to run out of inodes within the next 24 hours at current write rate - alert: HostInodesWillFillIn24Hours expr: node_filesystem_files_free{mountpoint =\"/rootfs\"} / node_filesystem_files{mountpoint=\"/rootfs\"} * 100 < 10 and predict_linear(node_filesystem_files_free{mountpoint=\"/rootfs\"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly{mountpoint=\"/rootfs\"} == 0 for: 2m labels: severity: warning annotations: summary: Host inodes will fill in 24 hours (instance {{ $labels.instance }}) description: \"Filesystem is predicted to run out of inodes within the next 24 hours at current write rate\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.11 Unusual disk read latency Disk latency is growing (read operations > 100ms) - alert: UnusualDiskReadLatency expr: rate(node_disk_read_time_seconds_total[1m]) / rate(node_disk_reads_completed_total[1m]) > 100 for: 5m labels: severity: warning annotations: summary: \"Unusual disk read latency (instance {{ $labels.instance }})\" description: \"Disk latency is growing (read operations > 100ms)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.12 Unusual disk write latency Disk latency is growing (write operations > 100ms) - alert: UnusualDiskWriteLatency expr: rate(node_disk_write_time_seconds_total[1m]) / rate(node_disk_writes_completed_total[1m]) > 100 for: 5m labels: severity: warning annotations: summary: \"Unusual disk write latency (instance {{ $labels.instance }})\" description: \"Disk latency is growing (write operations > 100ms)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.13 High CPU load CPU load is > 80% - alert: HighCpuLoad expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100) > 80 for: 5m labels: severity: warning annotations: summary: \"High CPU load (instance {{ $labels.instance }})\" description: \"CPU load is > 80%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.14. Host CPU steal noisy neighbor CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit. - alert: HostCpuStealNoisyNeighbor expr: avg by(instance) (rate(node_cpu_seconds_total{mode=\"steal\"}[5m])) * 100 > 10 for: 0m labels: severity: warning annotations: summary: Host CPU steal noisy neighbor (instance {{ $labels.instance }}) description: \"CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.15 Host Context switching Context switching is growing on node (> 1000 / s) # 1000 context switches is an arbitrary number. # Alert threshold depends on nature of application. # Please read: https://github.com/samber/awesome-prometheus-alerts/issues/58 - alert: ContextSwitching expr: rate(node_context_switches_total[5m]) > 1000 for: 5m labels: severity: warning annotations: summary: \"Context switching (instance {{ $labels.instance }})\" description: \"Context switching is growing on node (> 1000 / s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.16 Swap is filling up Swap is filling up (>80%) - alert: SwapIsFillingUp expr: (1 - (node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes)) * 100 > 80 for: 5m labels: severity: warning annotations: summary: \"Swap is filling up (instance {{ $labels.instance }})\" description: \"Swap is filling up (>80%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.17 Host Systemd service crashed SystemD service crashed - alert: SystemdServiceCrashed expr: node_systemd_unit_state{state=\"failed\"} == 1 for: 5m labels: severity: warning annotations: summary: \"SystemD service crashed (instance {{ $labels.instance }})\" description: \"SystemD service crashed\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2.18. Host physical component too hot Physical hardware component too hot - alert: HostPhysicalComponentTooHot expr: node_hwmon_temp_celsius > 75 for: 5m labels: severity: warning annotations: summary: Host physical component too hot (instance {{ $labels.instance }}) description: \"Physical hardware component too hot\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.19. Host node overtemperature alarm Physical node temperature alarm triggered - alert: HostNodeOvertemperatureAlarm expr: node_hwmon_temp_crit_alarm_celsius == 1 for: 0m labels: severity: critical annotations: summary: Host node overtemperature alarm (instance {{ $labels.instance }}) description: \"Physical node temperature alarm triggered\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.20. Host RAID array got inactive RAID array {{ $labels.device }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically. - alert: HostRaidArrayGotInactive expr: node_md_state{state=\"inactive\"} > 0 for: 0m labels: severity: critical annotations: summary: Host RAID array got inactive (instance {{ $labels.instance }}) description: \"RAID array {{ $labels.device }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.21. Host RAID disk failure At least one device in RAID array on {{ $labels.instance }} failed. Array {{ $labels.md_device }} needs attention and possibly a disk swap - alert: HostRaidDiskFailure expr: node_md_disks{state=\"failed\"} > 0 for: 2m labels: severity: warning annotations: summary: Host RAID disk failure (instance {{ $labels.instance }}) description: \"At least one device in RAID array on {{ $labels.instance }} failed. Array {{ $labels.md_device }} needs attention and possibly a disk swap\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.22. Host kernel version deviations Different kernel versions are running - alert: HostKernelVersionDeviations expr: count(sum(label_replace(node_uname_info, \"kernel\", \"$1\", \"release\", \"([0-9]+.[0-9]+.[0-9]+).*\")) by (kernel)) > 1 for: 6h labels: severity: warning annotations: summary: Host kernel version deviations (instance {{ $labels.instance }}) description: \"Different kernel versions are running\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.23. Host OOM kill detected OOM kill detected - alert: HostOomKillDetected expr: increase(node_vmstat_oom_kill[1m]) > 0 for: 0m labels: severity: warning annotations: summary: Host OOM kill detected (instance {{ $labels.instance }}) description: \"OOM kill detected\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.24. Host EDAC Correctable Errors detected Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} correctable memory errors reported by EDAC in the last 5 minutes. - alert: HostEdacCorrectableErrorsDetected expr: increase(node_edac_correctable_errors_total[1m]) > 0 for: 0m labels: severity: info annotations: summary: Host EDAC Correctable Errors detected (instance {{ $labels.instance }}) description: \"Host {{ $labels.instance }} has had {{ printf \\\"%.0f\\\" $value }} correctable memory errors reported by EDAC in the last 5 minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.25. Host EDAC Uncorrectable Errors detected Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} correctable memory errors reported by EDAC in the last 5 minutes. - alert: HostEdacCorrectableErrorsDetected expr: increase(node_edac_correctable_errors_total[1m]) > 0 for: 0m labels: severity: info annotations: summary: Host EDAC Correctable Errors detected (instance {{ $labels.instance }}) description: \"Host {{ $labels.instance }} has had {{ printf \\\"%.0f\\\" $value }} correctable memory errors reported by EDAC in the last 5 minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.26. Host Network Receive Errors Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last two minutes. - alert: HostNetworkReceiveErrors expr: rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01 for: 2m labels: severity: warning annotations: summary: Host Network Receive Errors (instance {{ $labels.instance }}) description: \"Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \\\"%.0f\\\" $value }} receive errors in the last two minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.27. Host Network Transmit Errors Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last two minutes. - alert: HostNetworkTransmitErrors expr: rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01 for: 2m labels: severity: warning annotations: summary: Host Network Transmit Errors (instance {{ $labels.instance }}) description: \"Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \\\"%.0f\\\" $value }} transmit errors in the last two minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.28. Host Network Interface Saturated The network interface \"{{ $labels.device }}\" on \"{{ $labels.instance }}\" is getting overloaded. - alert: HostNetworkInterfaceSaturated expr: (rate(node_network_receive_bytes_total{device!~\"^tap.*\"}[1m]) + rate(node_network_transmit_bytes_total{device!~\"^tap.*\"}[1m])) / node_network_speed_bytes{device!~\"^tap.*\"} > 0.8 < 10000 for: 1m labels: severity: warning annotations: summary: Host Network Interface Saturated (instance {{ $labels.instance }}) description: \"The network interface \\\"{{ $labels.device }}\\\" on \\\"{{ $labels.instance }}\\\" is getting overloaded.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.29. Host Network Bond Degraded Bond \"{{ $labels.device }}\" degraded on \" {{ $labels.instance }} \". - alert: HostNetworkBondDegraded expr: (node_bonding_active - node_bonding_slaves) != 0 for: 2m labels: severity: warning annotations: summary: Host Network Bond Degraded (instance {{ $labels.instance }}) description: \"Bond \\\"{{ $labels.device }}\\\" degraded on \\\"{{ $labels.instance }}\\\".\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.30. Host conntrack limit The number of conntrack is approaching limit - alert: HostConntrackLimit expr: node_nf_conntrack_entries / node_nf_conntrack_entries_limit > 0.8 for: 5m labels: severity: warning annotations: summary: Host conntrack limit (instance {{ $labels.instance }}) description: \"The number of conntrack is approaching limit\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.31. Host clock skew Clock skew detected. Clock is out of sync. Ensure NTP is configured correctly on this host. - alert: HostClockSkew expr: (node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0) or (node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0) for: 2m labels: severity: warning annotations: summary: Host clock skew (instance {{ $labels.instance }}) description: \"Clock skew detected. Clock is out of sync. Ensure NTP is configured correctly on this host.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.32. Host clock not synchronising Clock not synchronising. Ensure NTP is configured on this host. - alert: HostClockNotSynchronising expr: min_over_time(node_timex_sync_status[1m]) == 0 and node_timex_maxerror_seconds >= 16 for: 2m labels: severity: warning annotations: summary: Host clock not synchronising (instance {{ $labels.instance }}) description: \"Clock not synchronising. Ensure NTP is configured on this host.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2.33. Host requires reboot {{ $labels.instance }} requires a reboot. - alert: HostRequiresReboot expr: node_reboot_required > 0 for: 4h labels: severity: info annotations: summary: Host requires reboot (instance {{ $labels.instance }}) description: \"{{ $labels.instance }} requires a reboot.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2 Host node-exporter"},{"location":"chap9/2Host_node-exporter/#2-host-node-exporter","text":"","title":"2 Host node-exporter"},{"location":"chap9/2Host_node-exporter/#21-out-of-memory","text":"Node memory is filling up (< 10% left) - alert: OutOfMemory expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10 for: 5m labels: severity: warning annotations: summary: \"Out of memory (instance {{ $labels.instance }})\" description: \"Node memory is filling up (< 10% left)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.1 Out of memory"},{"location":"chap9/2Host_node-exporter/#22-host-memory-under-memory-pressure","text":"The node is under heavy memory pressure. High rate of major page faults - alert: HostMemoryUnderMemoryPressure expr: rate(node_vmstat_pgmajfault[1m]) > 1000 for: 2m labels: severity: warning annotations: summary: Host memory under memory pressure (instance {{ $labels.instance }}) description: \"The node is under heavy memory pressure. High rate of major page faults\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.2. Host memory under memory pressure"},{"location":"chap9/2Host_node-exporter/#23-unusual-network-throughput-in","text":"Host network interfaces are probably receiving too much data (> 100 MB/s) - alert: UnusualNetworkThroughputIn expr: sum by (instance) (irate(node_network_receive_bytes_total[2m])) / 1024 / 1024 > 100 for: 5m labels: severity: warning annotations: summary: \"Unusual network throughput in (instance {{ $labels.instance }})\" description: \"Host network interfaces are probably receiving too much data (> 100 MB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.3 Unusual network throughput in"},{"location":"chap9/2Host_node-exporter/#24-unusual-network-throughput-out","text":"Host network interfaces are probably sending too much data (> 100 MB/s) - alert: UnusualNetworkThroughputOut expr: sum by (instance) (irate(node_network_transmit_bytes_total[2m])) / 1024 / 1024 > 100 for: 5m labels: severity: warning annotations: summary: \"Unusual network throughput out (instance {{ $labels.instance }})\" description: \"Host network interfaces are probably sending too much data (> 100 MB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.4. Unusual network throughput out"},{"location":"chap9/2Host_node-exporter/#25-unusual-disk-read-rate","text":"Disk is probably reading too much data (> 50 MB/s) - alert: UnusualDiskReadRate expr: sum by (instance) (irate(node_disk_read_bytes_total[2m])) / 1024 / 1024 > 50 for: 5m labels: severity: warning annotations: summary: \"Unusual disk read rate (instance {{ $labels.instance }})\" description: \"Disk is probably reading too much data (> 50 MB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.5. Unusual disk read rate"},{"location":"chap9/2Host_node-exporter/#26-unusual-disk-write-rate","text":"Disk is probably writing too much data (> 50 MB/s) - alert: UnusualDiskWriteRate expr: sum by (instance) (irate(node_disk_written_bytes_total[2m])) / 1024 / 1024 > 50 for: 5m labels: severity: warning annotations: summary: \"Unusual disk write rate (instance {{ $labels.instance }})\" description: \"Disk is probably writing too much data (> 50 MB/s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.6. Unusual disk write rate"},{"location":"chap9/2Host_node-exporter/#27-out-of-disk-space","text":"Disk is almost full (< 10% left) - alert: OutOfDiskSpace expr: node_filesystem_free_bytes{mountpoint =\"/rootfs\"} / node_filesystem_size_bytes{mountpoint =\"/rootfs\"} * 100 < 10 for: 5m labels: severity: warning annotations: summary: \"Out of disk space (instance {{ $labels.instance }})\" description: \"Disk is almost full (< 10% left)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.7 Out of disk space"},{"location":"chap9/2Host_node-exporter/#28-host-disk-will-fill-in-24-hours","text":"Filesystem is predicted to run out of space within the next 24 hours at current write rate # Please add ignored mountpoints in node_exporter parameters like # \"--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run)($|/)\". # Same rule using \"node_filesystem_free_bytes\" will fire when disk fills for non-root users. - alert: HostDiskWillFillIn24Hours expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) predict_linear(node_filesystem_avail_bytes{fstype!~\"tmpfs\"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly == 0 for: 2m labels: severity: warning annotations: summary: Host disk will fill in 24 hours (instance {{ $labels.instance }}) description: \"Filesystem is predicted to run out of space within the next 24 hours at current write rate\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.8 Host disk will fill in 24 hours"},{"location":"chap9/2Host_node-exporter/#29-out-of-inodes","text":"Disk is almost running out of available inodes (< 10% left) - alert: OutOfInodes expr: node_filesystem_files_free{mountpoint =\"/rootfs\"} / node_filesystem_files{mountpoint =\"/rootfs\"} * 100 < 10 for: 5m labels: severity: warning annotations: summary: \"Out of inodes (instance {{ $labels.instance }})\" description: \"Disk is almost running out of available inodes (< 10% left)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.9 Out of inodes"},{"location":"chap9/2Host_node-exporter/#210-host-inodes-will-fill-in-24-hours","text":"Filesystem is predicted to run out of inodes within the next 24 hours at current write rate - alert: HostInodesWillFillIn24Hours expr: node_filesystem_files_free{mountpoint =\"/rootfs\"} / node_filesystem_files{mountpoint=\"/rootfs\"} * 100 < 10 and predict_linear(node_filesystem_files_free{mountpoint=\"/rootfs\"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly{mountpoint=\"/rootfs\"} == 0 for: 2m labels: severity: warning annotations: summary: Host inodes will fill in 24 hours (instance {{ $labels.instance }}) description: \"Filesystem is predicted to run out of inodes within the next 24 hours at current write rate\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.10. Host inodes will fill in 24 hours"},{"location":"chap9/2Host_node-exporter/#211-unusual-disk-read-latency","text":"Disk latency is growing (read operations > 100ms) - alert: UnusualDiskReadLatency expr: rate(node_disk_read_time_seconds_total[1m]) / rate(node_disk_reads_completed_total[1m]) > 100 for: 5m labels: severity: warning annotations: summary: \"Unusual disk read latency (instance {{ $labels.instance }})\" description: \"Disk latency is growing (read operations > 100ms)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.11 Unusual disk read latency"},{"location":"chap9/2Host_node-exporter/#212-unusual-disk-write-latency","text":"Disk latency is growing (write operations > 100ms) - alert: UnusualDiskWriteLatency expr: rate(node_disk_write_time_seconds_total[1m]) / rate(node_disk_writes_completed_total[1m]) > 100 for: 5m labels: severity: warning annotations: summary: \"Unusual disk write latency (instance {{ $labels.instance }})\" description: \"Disk latency is growing (write operations > 100ms)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.12 Unusual disk write latency"},{"location":"chap9/2Host_node-exporter/#213-high-cpu-load","text":"CPU load is > 80% - alert: HighCpuLoad expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100) > 80 for: 5m labels: severity: warning annotations: summary: \"High CPU load (instance {{ $labels.instance }})\" description: \"CPU load is > 80%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.13 High CPU load"},{"location":"chap9/2Host_node-exporter/#214-host-cpu-steal-noisy-neighbor","text":"CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit. - alert: HostCpuStealNoisyNeighbor expr: avg by(instance) (rate(node_cpu_seconds_total{mode=\"steal\"}[5m])) * 100 > 10 for: 0m labels: severity: warning annotations: summary: Host CPU steal noisy neighbor (instance {{ $labels.instance }}) description: \"CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.14. Host CPU steal noisy neighbor"},{"location":"chap9/2Host_node-exporter/#215-host-context-switching","text":"Context switching is growing on node (> 1000 / s) # 1000 context switches is an arbitrary number. # Alert threshold depends on nature of application. # Please read: https://github.com/samber/awesome-prometheus-alerts/issues/58 - alert: ContextSwitching expr: rate(node_context_switches_total[5m]) > 1000 for: 5m labels: severity: warning annotations: summary: \"Context switching (instance {{ $labels.instance }})\" description: \"Context switching is growing on node (> 1000 / s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.15 Host Context switching"},{"location":"chap9/2Host_node-exporter/#216-swap-is-filling-up","text":"Swap is filling up (>80%) - alert: SwapIsFillingUp expr: (1 - (node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes)) * 100 > 80 for: 5m labels: severity: warning annotations: summary: \"Swap is filling up (instance {{ $labels.instance }})\" description: \"Swap is filling up (>80%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.16 Swap is filling up"},{"location":"chap9/2Host_node-exporter/#217-host-systemd-service-crashed","text":"SystemD service crashed - alert: SystemdServiceCrashed expr: node_systemd_unit_state{state=\"failed\"} == 1 for: 5m labels: severity: warning annotations: summary: \"SystemD service crashed (instance {{ $labels.instance }})\" description: \"SystemD service crashed\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2.17 Host Systemd service crashed"},{"location":"chap9/2Host_node-exporter/#218-host-physical-component-too-hot","text":"Physical hardware component too hot - alert: HostPhysicalComponentTooHot expr: node_hwmon_temp_celsius > 75 for: 5m labels: severity: warning annotations: summary: Host physical component too hot (instance {{ $labels.instance }}) description: \"Physical hardware component too hot\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.18. Host physical component too hot"},{"location":"chap9/2Host_node-exporter/#219-host-node-overtemperature-alarm","text":"Physical node temperature alarm triggered - alert: HostNodeOvertemperatureAlarm expr: node_hwmon_temp_crit_alarm_celsius == 1 for: 0m labels: severity: critical annotations: summary: Host node overtemperature alarm (instance {{ $labels.instance }}) description: \"Physical node temperature alarm triggered\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.19. Host node overtemperature alarm"},{"location":"chap9/2Host_node-exporter/#220-host-raid-array-got-inactive","text":"RAID array {{ $labels.device }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically. - alert: HostRaidArrayGotInactive expr: node_md_state{state=\"inactive\"} > 0 for: 0m labels: severity: critical annotations: summary: Host RAID array got inactive (instance {{ $labels.instance }}) description: \"RAID array {{ $labels.device }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.20. Host RAID array got inactive"},{"location":"chap9/2Host_node-exporter/#221-host-raid-disk-failure","text":"At least one device in RAID array on {{ $labels.instance }} failed. Array {{ $labels.md_device }} needs attention and possibly a disk swap - alert: HostRaidDiskFailure expr: node_md_disks{state=\"failed\"} > 0 for: 2m labels: severity: warning annotations: summary: Host RAID disk failure (instance {{ $labels.instance }}) description: \"At least one device in RAID array on {{ $labels.instance }} failed. Array {{ $labels.md_device }} needs attention and possibly a disk swap\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.21. Host RAID disk failure"},{"location":"chap9/2Host_node-exporter/#222-host-kernel-version-deviations","text":"Different kernel versions are running - alert: HostKernelVersionDeviations expr: count(sum(label_replace(node_uname_info, \"kernel\", \"$1\", \"release\", \"([0-9]+.[0-9]+.[0-9]+).*\")) by (kernel)) > 1 for: 6h labels: severity: warning annotations: summary: Host kernel version deviations (instance {{ $labels.instance }}) description: \"Different kernel versions are running\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.22. Host kernel version deviations"},{"location":"chap9/2Host_node-exporter/#223-host-oom-kill-detected","text":"OOM kill detected - alert: HostOomKillDetected expr: increase(node_vmstat_oom_kill[1m]) > 0 for: 0m labels: severity: warning annotations: summary: Host OOM kill detected (instance {{ $labels.instance }}) description: \"OOM kill detected\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.23. Host OOM kill detected"},{"location":"chap9/2Host_node-exporter/#224-host-edac-correctable-errors-detected","text":"Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} correctable memory errors reported by EDAC in the last 5 minutes. - alert: HostEdacCorrectableErrorsDetected expr: increase(node_edac_correctable_errors_total[1m]) > 0 for: 0m labels: severity: info annotations: summary: Host EDAC Correctable Errors detected (instance {{ $labels.instance }}) description: \"Host {{ $labels.instance }} has had {{ printf \\\"%.0f\\\" $value }} correctable memory errors reported by EDAC in the last 5 minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.24. Host EDAC Correctable Errors detected"},{"location":"chap9/2Host_node-exporter/#225-host-edac-uncorrectable-errors-detected","text":"Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} correctable memory errors reported by EDAC in the last 5 minutes. - alert: HostEdacCorrectableErrorsDetected expr: increase(node_edac_correctable_errors_total[1m]) > 0 for: 0m labels: severity: info annotations: summary: Host EDAC Correctable Errors detected (instance {{ $labels.instance }}) description: \"Host {{ $labels.instance }} has had {{ printf \\\"%.0f\\\" $value }} correctable memory errors reported by EDAC in the last 5 minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.25. Host EDAC Uncorrectable Errors detected"},{"location":"chap9/2Host_node-exporter/#226-host-network-receive-errors","text":"Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last two minutes. - alert: HostNetworkReceiveErrors expr: rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01 for: 2m labels: severity: warning annotations: summary: Host Network Receive Errors (instance {{ $labels.instance }}) description: \"Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \\\"%.0f\\\" $value }} receive errors in the last two minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.26. Host Network Receive Errors"},{"location":"chap9/2Host_node-exporter/#227-host-network-transmit-errors","text":"Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last two minutes. - alert: HostNetworkTransmitErrors expr: rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01 for: 2m labels: severity: warning annotations: summary: Host Network Transmit Errors (instance {{ $labels.instance }}) description: \"Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \\\"%.0f\\\" $value }} transmit errors in the last two minutes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.27. Host Network Transmit Errors"},{"location":"chap9/2Host_node-exporter/#228-host-network-interface-saturated","text":"The network interface \"{{ $labels.device }}\" on \"{{ $labels.instance }}\" is getting overloaded. - alert: HostNetworkInterfaceSaturated expr: (rate(node_network_receive_bytes_total{device!~\"^tap.*\"}[1m]) + rate(node_network_transmit_bytes_total{device!~\"^tap.*\"}[1m])) / node_network_speed_bytes{device!~\"^tap.*\"} > 0.8 < 10000 for: 1m labels: severity: warning annotations: summary: Host Network Interface Saturated (instance {{ $labels.instance }}) description: \"The network interface \\\"{{ $labels.device }}\\\" on \\\"{{ $labels.instance }}\\\" is getting overloaded.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.28. Host Network Interface Saturated"},{"location":"chap9/2Host_node-exporter/#229-host-network-bond-degraded","text":"Bond \"{{ $labels.device }}\" degraded on \" {{ $labels.instance }} \". - alert: HostNetworkBondDegraded expr: (node_bonding_active - node_bonding_slaves) != 0 for: 2m labels: severity: warning annotations: summary: Host Network Bond Degraded (instance {{ $labels.instance }}) description: \"Bond \\\"{{ $labels.device }}\\\" degraded on \\\"{{ $labels.instance }}\\\".\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.29. Host Network Bond Degraded"},{"location":"chap9/2Host_node-exporter/#230-host-conntrack-limit","text":"The number of conntrack is approaching limit - alert: HostConntrackLimit expr: node_nf_conntrack_entries / node_nf_conntrack_entries_limit > 0.8 for: 5m labels: severity: warning annotations: summary: Host conntrack limit (instance {{ $labels.instance }}) description: \"The number of conntrack is approaching limit\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.30. Host conntrack limit"},{"location":"chap9/2Host_node-exporter/#231-host-clock-skew","text":"Clock skew detected. Clock is out of sync. Ensure NTP is configured correctly on this host. - alert: HostClockSkew expr: (node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0) or (node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0) for: 2m labels: severity: warning annotations: summary: Host clock skew (instance {{ $labels.instance }}) description: \"Clock skew detected. Clock is out of sync. Ensure NTP is configured correctly on this host.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.31. Host clock skew"},{"location":"chap9/2Host_node-exporter/#232-host-clock-not-synchronising","text":"Clock not synchronising. Ensure NTP is configured on this host. - alert: HostClockNotSynchronising expr: min_over_time(node_timex_sync_status[1m]) == 0 and node_timex_maxerror_seconds >= 16 for: 2m labels: severity: warning annotations: summary: Host clock not synchronising (instance {{ $labels.instance }}) description: \"Clock not synchronising. Ensure NTP is configured on this host.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.32. Host clock not synchronising"},{"location":"chap9/2Host_node-exporter/#233-host-requires-reboot","text":"{{ $labels.instance }} requires a reboot. - alert: HostRequiresReboot expr: node_reboot_required > 0 for: 4h labels: severity: info annotations: summary: Host requires reboot (instance {{ $labels.instance }}) description: \"{{ $labels.instance }} requires a reboot.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2.33. Host requires reboot"},{"location":"chap9/2database_broker/","text":"2 Databases and brokers 1. MySQL : prometheus MySQL down MySQL too many connections (> 80%) MySQL high threads running MySQL Slave IO thread not running MySQL Slave SQL thread not running MySQL Slave replication lag MySQL slow queries MySQL InnoDB log waits MySQL restarted 2. PostgreSQL PostgreSQL down Postgresql restarted Postgresql exporter error Replication lag Table not vaccumed Table not analyzed Too many connections Not enough connections Dead locks High rollback rate Postgresql commit rate low Postgresql low XID consumption Postgresql high rate statement timeout Postgresql high rate deadlock Postgresql unused replication slot Postgresql too many dead tuples Postgresql split brain Postgresql promoted node Postgresql configuration changed Postgresql SSL compression active Postgresql too many locks acquired Slow queries 3. SQL Server SQL Server down 4 PGBouncer PGBouncer active connections PGBouncer errors PGBouncer max connections 5 Redis Redis down Redis missing master Redis too many masters Redis disconnected slaves Redis replication broken Redis cluster flapping Missing backup Redis out of system memory Redis out of configured maxmemory Too many connections Not enough connections Rejected connections 6 MongoDB percona/ mongodb_exporter MongoDB Down MongoDB replication lag MongoDB replication headroom MongoDB number cursors open MongoDB cursors timeouts MongoDB too many connections MongoDB virtual memory usage dcu/mongodb_exporter Mongodb replication lag is more than 10s MongoDB replication Status 3 MongoDB replication Status 6 MongoDB replication Status 8 MongoDB replication Status 9 MongoDB replication Status 10 MongoDB number cursors open MongoDB cursors timeouts MongoDB too many connections MongoDB virtual memory usage 7 RabbitMQ rabbitmq/rabbitmq-prometheus Rabbitmq node down Rabbitmq node not distributed Rabbitmq instances different versions Rabbitmq memory high Rabbitmq file descriptors usage Rabbitmq too many unack messages Rabbitmq too many connections Rabbitmq no queue consumer Rabbitmq unroutable messages kbudde/rabbitmq-exporter Rabbitmq node down Rabbitmq Cluster down Rabbitmq cluster partition Rabbitmq out of memory Too many connections Dead letter queue filling up Too many messages in queue Rabbitmq Slow queue consuming No consumer Too many consumers Unactive exchange 8 Elasticsearch Elastic Heap Usage Too High Elastic Heap Usage warning Elasticsearch disk out of space Elasticsearch disk space low Elastic Cluster Red Elastic Cluster Yellow Elasticsearch Healthy Nodes Number of Elastic Healthy Nodes Elasticsearch relocating shards Elasticsearch relocating shards too long Elasticsearch initializing shards Elasticsearch initializing shards too long Elasticsearch unassigned shards Elasticsearch pending tasks Elasticsearch no new documents Number of pending tasks Number of Elastic Healthy Data Nodes 9.Cassandra instaclustr/cassandra_exporter Cassandra Node is unavailable Cassandra many compaction tasks are pending Cassandra commitlog pending tasks Cassandra compaction executor blocked tasks Cassandra flush writer blocked tasks Cassandra connection timeouts total Cassandra storage exceptions Cassandra tombstone dump Cassandra client request unvailable write Cassandra client request unvailable read Cassandra client request write failure Cassandra client request read failure criteo/cassandra_exporter Cassandra hints count Cassandra compaction task pending Cassandra viewwrite latency Cassandra bad hacker Cassandra node down Cassandra commitlog pending tasks Cassandra compaction executor blocked tasks Cassandra flush writer blocked tasks Cassandra repair pending tasks Cassandra repair blocked tasks Cassandra connection timeouts total Cassandra storage exceptions Cassandra tombstone dump Cassandra client request unvailable write Cassandra client request unvailable read Cassandra client request write failure Cassandra client request read failure Cassandra cache hit rate key cache 10 Kafka danielqsj/kafka_exporter Kafka Topics Kafka consumers group linkedin/Burrow Kafka topic offset decreased Kafka consumer lag 11 Zookeeper Zookeeper Down Zookeeper missing leader Zookeeper Too Many Leaders Zookeeper Not Ok 12 Solr Solr update errors Solr query errors Solr replication errors Solr low live node count","title":"2 Databases and brokers"},{"location":"chap9/2database_broker/#2-databases-and-brokers","text":"","title":"2 Databases and brokers"},{"location":"chap9/2database_broker/#1-mysql-prometheus","text":"MySQL down MySQL too many connections (> 80%) MySQL high threads running MySQL Slave IO thread not running MySQL Slave SQL thread not running MySQL Slave replication lag MySQL slow queries MySQL InnoDB log waits MySQL restarted","title":"1. MySQL : prometheus"},{"location":"chap9/2database_broker/#2-postgresql","text":"PostgreSQL down Postgresql restarted Postgresql exporter error Replication lag Table not vaccumed Table not analyzed Too many connections Not enough connections Dead locks High rollback rate Postgresql commit rate low Postgresql low XID consumption Postgresql high rate statement timeout Postgresql high rate deadlock Postgresql unused replication slot Postgresql too many dead tuples Postgresql split brain Postgresql promoted node Postgresql configuration changed Postgresql SSL compression active Postgresql too many locks acquired Slow queries","title":"2. PostgreSQL"},{"location":"chap9/2database_broker/#3-sql-server","text":"SQL Server down","title":"3. SQL Server"},{"location":"chap9/2database_broker/#4-pgbouncer","text":"PGBouncer active connections PGBouncer errors PGBouncer max connections","title":"4 PGBouncer"},{"location":"chap9/2database_broker/#5-redis","text":"Redis down Redis missing master Redis too many masters Redis disconnected slaves Redis replication broken Redis cluster flapping Missing backup Redis out of system memory Redis out of configured maxmemory Too many connections Not enough connections Rejected connections","title":"5 Redis"},{"location":"chap9/2database_broker/#6-mongodb","text":"percona/ mongodb_exporter MongoDB Down MongoDB replication lag MongoDB replication headroom MongoDB number cursors open MongoDB cursors timeouts MongoDB too many connections MongoDB virtual memory usage dcu/mongodb_exporter Mongodb replication lag is more than 10s MongoDB replication Status 3 MongoDB replication Status 6 MongoDB replication Status 8 MongoDB replication Status 9 MongoDB replication Status 10 MongoDB number cursors open MongoDB cursors timeouts MongoDB too many connections MongoDB virtual memory usage","title":"6 MongoDB"},{"location":"chap9/2database_broker/#7-rabbitmq","text":"rabbitmq/rabbitmq-prometheus Rabbitmq node down Rabbitmq node not distributed Rabbitmq instances different versions Rabbitmq memory high Rabbitmq file descriptors usage Rabbitmq too many unack messages Rabbitmq too many connections Rabbitmq no queue consumer Rabbitmq unroutable messages kbudde/rabbitmq-exporter Rabbitmq node down Rabbitmq Cluster down Rabbitmq cluster partition Rabbitmq out of memory Too many connections Dead letter queue filling up Too many messages in queue Rabbitmq Slow queue consuming No consumer Too many consumers Unactive exchange","title":"7 RabbitMQ"},{"location":"chap9/2database_broker/#8-elasticsearch","text":"Elastic Heap Usage Too High Elastic Heap Usage warning Elasticsearch disk out of space Elasticsearch disk space low Elastic Cluster Red Elastic Cluster Yellow Elasticsearch Healthy Nodes Number of Elastic Healthy Nodes Elasticsearch relocating shards Elasticsearch relocating shards too long Elasticsearch initializing shards Elasticsearch initializing shards too long Elasticsearch unassigned shards Elasticsearch pending tasks Elasticsearch no new documents Number of pending tasks Number of Elastic Healthy Data Nodes","title":"8 Elasticsearch"},{"location":"chap9/2database_broker/#9cassandra","text":"instaclustr/cassandra_exporter Cassandra Node is unavailable Cassandra many compaction tasks are pending Cassandra commitlog pending tasks Cassandra compaction executor blocked tasks Cassandra flush writer blocked tasks Cassandra connection timeouts total Cassandra storage exceptions Cassandra tombstone dump Cassandra client request unvailable write Cassandra client request unvailable read Cassandra client request write failure Cassandra client request read failure criteo/cassandra_exporter Cassandra hints count Cassandra compaction task pending Cassandra viewwrite latency Cassandra bad hacker Cassandra node down Cassandra commitlog pending tasks Cassandra compaction executor blocked tasks Cassandra flush writer blocked tasks Cassandra repair pending tasks Cassandra repair blocked tasks Cassandra connection timeouts total Cassandra storage exceptions Cassandra tombstone dump Cassandra client request unvailable write Cassandra client request unvailable read Cassandra client request write failure Cassandra client request read failure Cassandra cache hit rate key cache","title":"9.Cassandra"},{"location":"chap9/2database_broker/#10-kafka","text":"danielqsj/kafka_exporter Kafka Topics Kafka consumers group linkedin/Burrow Kafka topic offset decreased Kafka consumer lag","title":"10 Kafka"},{"location":"chap9/2database_broker/#11-zookeeper","text":"Zookeeper Down Zookeeper missing leader Zookeeper Too Many Leaders Zookeeper Not Ok","title":"11 Zookeeper"},{"location":"chap9/2database_broker/#12-solr","text":"Solr update errors Solr query errors Solr replication errors Solr low live node count","title":"12 Solr"},{"location":"chap9/30CoreDNS/","text":"30. CoreDNS 1. CoreDNS Panic Count Number of CoreDNS panics encountered - alert: CorednsPanicCount expr: increase(coredns_panic_count_total[10m]) > 0 for: 5m labels: severity: error annotations: summary: \"CoreDNS Panic Count (instance {{ $labels.instance }})\" description: \"Number of CoreDNS panics encountered\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"30. CoreDNS"},{"location":"chap9/30CoreDNS/#30-coredns","text":"","title":"30. CoreDNS"},{"location":"chap9/30CoreDNS/#1-coredns-panic-count","text":"Number of CoreDNS panics encountered - alert: CorednsPanicCount expr: increase(coredns_panic_count_total[10m]) > 0 for: 5m labels: severity: error annotations: summary: \"CoreDNS Panic Count (instance {{ $labels.instance }})\" description: \"Number of CoreDNS panics encountered\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1. CoreDNS Panic Count"},{"location":"chap9/31windows_server/","text":"5. Windows Server: prometheus-community/windows_exporter https://github.com/prometheus-community/windows_exporter 5.1. Windows Server collector Error Collector {{ $labels.collector }} was not successful - alert: WindowsServerCollectorError expr: windows_exporter_collector_success == 0 for: 0m labels: severity: critical annotations: summary: Windows Server collector Error (instance {{ $labels.instance }}) description: \"Collector {{ $labels.collector }} was not successful\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5.2 Windows Server service Status Windows Service state is not OK - alert: WindowsServerServiceStatus expr: windows_service_status{status=\"ok\"} != 1 for: 1m labels: severity: critical annotations: summary: Windows Server service Status (instance {{ $labels.instance }}) description: \"Windows Service state is not OK\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5.3. Windows Server CPU Usage CPU Usage is more than 80% - alert: WindowsServerCpuUsage expr: 100 - (avg by (instance) (rate(windows_cpu_time_total{mode=\"idle\"}[2m])) * 100) > 80 for: 0m labels: severity: warning annotations: summary: Windows Server CPU Usage (instance {{ $labels.instance }}) description: \"CPU Usage is more than 80%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5.4. Windows Server memory Usage Memory usage is more than 90% - alert: WindowsServerMemoryUsage expr: 100 - ((windows_os_physical_memory_free_bytes / windows_cs_physical_memory_bytes) * 100) > 90 for: 2m labels: severity: warning annotations: summary: Windows Server memory Usage (instance {{ $labels.instance }}) description: \"Memory usage is more than 90%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5.5. Windows Server disk Space Usage Disk usage is more than 80% - alert: WindowsServerDiskSpaceUsage expr: 100.0 - 100 * ((windows_logical_disk_free_bytes / 1024 / 1024 ) / (windows_logical_disk_size_bytes / 1024 / 1024)) > 80 for: 2m labels: severity: critical annotations: summary: Windows Server disk Space Usage (instance {{ $labels.instance }}) description: \"Disk usage is more than 80%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5. Windows Server: `prometheus-community/windows_exporter`"},{"location":"chap9/31windows_server/#5-windows-server-prometheus-communitywindows_exporter","text":"https://github.com/prometheus-community/windows_exporter","title":"5. Windows Server: prometheus-community/windows_exporter"},{"location":"chap9/31windows_server/#51-windows-server-collector-error","text":"Collector {{ $labels.collector }} was not successful - alert: WindowsServerCollectorError expr: windows_exporter_collector_success == 0 for: 0m labels: severity: critical annotations: summary: Windows Server collector Error (instance {{ $labels.instance }}) description: \"Collector {{ $labels.collector }} was not successful\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5.1. Windows Server collector Error"},{"location":"chap9/31windows_server/#52-windows-server-service-status","text":"Windows Service state is not OK - alert: WindowsServerServiceStatus expr: windows_service_status{status=\"ok\"} != 1 for: 1m labels: severity: critical annotations: summary: Windows Server service Status (instance {{ $labels.instance }}) description: \"Windows Service state is not OK\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5.2 Windows Server service Status"},{"location":"chap9/31windows_server/#53-windows-server-cpu-usage","text":"CPU Usage is more than 80% - alert: WindowsServerCpuUsage expr: 100 - (avg by (instance) (rate(windows_cpu_time_total{mode=\"idle\"}[2m])) * 100) > 80 for: 0m labels: severity: warning annotations: summary: Windows Server CPU Usage (instance {{ $labels.instance }}) description: \"CPU Usage is more than 80%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5.3. Windows Server CPU Usage"},{"location":"chap9/31windows_server/#54-windows-server-memory-usage","text":"Memory usage is more than 90% - alert: WindowsServerMemoryUsage expr: 100 - ((windows_os_physical_memory_free_bytes / windows_cs_physical_memory_bytes) * 100) > 90 for: 2m labels: severity: warning annotations: summary: Windows Server memory Usage (instance {{ $labels.instance }}) description: \"Memory usage is more than 90%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5.4. Windows Server memory Usage"},{"location":"chap9/31windows_server/#55-windows-server-disk-space-usage","text":"Disk usage is more than 80% - alert: WindowsServerDiskSpaceUsage expr: 100.0 - 100 * ((windows_logical_disk_free_bytes / 1024 / 1024 ) / (windows_logical_disk_size_bytes / 1024 / 1024)) > 80 for: 2m labels: severity: critical annotations: summary: Windows Server disk Space Usage (instance {{ $labels.instance }}) description: \"Disk usage is more than 80%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5.5. Windows Server disk Space Usage"},{"location":"chap9/32VMware/","text":"6 VMware : pryorda/vmware_exporter 6.1 Virtual Machine Memory Warning High memory usage on {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: VirtualMachineMemoryWarning expr: vmware_vm_mem_usage_average / 100 >= 80 and vmware_vm_mem_usage_average / 100 < 90 for: 5m labels: severity: warning annotations: summary: Virtual Machine Memory Warning (instance {{ $labels.instance }}) description: \"High memory usage on {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6.2. Virtual Machine Memory Critical High memory usage on {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: VirtualMachineMemoryCritical expr: vmware_vm_mem_usage_average / 100 >= 90 for: 1m labels: severity: critical annotations: summary: Virtual Machine Memory Critical (instance {{ $labels.instance }}) description: \"High memory usage on {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6.3. High Number of Snapshots High snapshots number on {{ $labels.instance }}: {{ $value }} - alert: HighNumberOfSnapshots expr: vmware_vm_snapshots > 3 for: 30m labels: severity: warning annotations: summary: High Number of Snapshots (instance {{ $labels.instance }}) description: \"High snapshots number on {{ $labels.instance }}: {{ $value }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6.4. Outdated Snapshots Outdated snapshots on {{ $labels.instance }}: {{ $value | printf \"%.0f\"}} days - alert: OutdatedSnapshots expr: (time() - vmware_vm_snapshot_timestamp_seconds) / (60 * 60 * 24) >= 3 for: 5m labels: severity: warning annotations: summary: Outdated Snapshots (instance {{ $labels.instance }}) description: \"Outdated snapshots on {{ $labels.instance }}: {{ $value | printf \\\"%.0f\\\"}} days\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6 VMware : pryorda/vmware_exporter"},{"location":"chap9/32VMware/#6-vmware-pryordavmware_exporter","text":"","title":"6 VMware : pryorda/vmware_exporter"},{"location":"chap9/32VMware/#61-virtual-machine-memory-warning","text":"High memory usage on {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: VirtualMachineMemoryWarning expr: vmware_vm_mem_usage_average / 100 >= 80 and vmware_vm_mem_usage_average / 100 < 90 for: 5m labels: severity: warning annotations: summary: Virtual Machine Memory Warning (instance {{ $labels.instance }}) description: \"High memory usage on {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6.1 Virtual Machine Memory Warning"},{"location":"chap9/32VMware/#62-virtual-machine-memory-critical","text":"High memory usage on {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: VirtualMachineMemoryCritical expr: vmware_vm_mem_usage_average / 100 >= 90 for: 1m labels: severity: critical annotations: summary: Virtual Machine Memory Critical (instance {{ $labels.instance }}) description: \"High memory usage on {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6.2. Virtual Machine Memory Critical"},{"location":"chap9/32VMware/#63-high-number-of-snapshots","text":"High snapshots number on {{ $labels.instance }}: {{ $value }} - alert: HighNumberOfSnapshots expr: vmware_vm_snapshots > 3 for: 30m labels: severity: warning annotations: summary: High Number of Snapshots (instance {{ $labels.instance }}) description: \"High snapshots number on {{ $labels.instance }}: {{ $value }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6.3. High Number of Snapshots"},{"location":"chap9/32VMware/#64-outdated-snapshots","text":"Outdated snapshots on {{ $labels.instance }}: {{ $value | printf \"%.0f\"}} days - alert: OutdatedSnapshots expr: (time() - vmware_vm_snapshot_timestamp_seconds) / (60 * 60 * 24) >= 3 for: 5m labels: severity: warning annotations: summary: Outdated Snapshots (instance {{ $labels.instance }}) description: \"Outdated snapshots on {{ $labels.instance }}: {{ $value | printf \\\"%.0f\\\"}} days\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6.4. Outdated Snapshots"},{"location":"chap9/33Netdata/","text":"7 Netdata : Embedded exporter Embedded exporter 7.1. Netdata high cpu usage Netdata high CPU usage (> 80%) - alert: NetdataHighCpuUsage expr: rate(netdata_cpu_cpu_percentage_average{dimension=\"idle\"}[1m]) > 80 for: 5m labels: severity: warning annotations: summary: Netdata high cpu usage (instance {{ $labels.instance }}) description: \"Netdata high CPU usage (> 80%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7.2. Host CPU steal noisy neighbor CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit. - alert: HostCpuStealNoisyNeighbor expr: rate(netdata_cpu_cpu_percentage_average{dimension=\"steal\"}[1m]) > 10 for: 5m labels: severity: warning annotations: summary: Host CPU steal noisy neighbor (instance {{ $labels.instance }}) description: \"CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7.3. Netdata high memory usage Netdata high memory usage (> 80%) - alert: NetdataHighMemoryUsage expr: 100 / netdata_system_ram_MB_average * netdata_system_ram_MB_average{dimension=~\"free|cached\"} < 20 for: 5m labels: severity: warning annotations: summary: Netdata high memory usage (instance {{ $labels.instance }}) description: \"Netdata high memory usage (> 80%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7.4. Netdata low disk space Netdata low disk space (> 80%) - alert: NetdataLowDiskSpace expr: 100 / netdata_disk_space_GB_average * netdata_disk_space_GB_average{dimension=~\"avail|cached\"} < 20 for: 5m labels: severity: warning annotations: summary: Netdata low disk space (instance {{ $labels.instance }}) description: \"Netdata low disk space (> 80%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7.5. Netdata predicted disk full Netdata predicted disk full in 24 hours - alert: NetdataPredictedDiskFull expr: predict_linear(netdata_disk_space_GB_average{dimension=~\"avail|cached\"}[3h], 24 * 3600) < 0 for: 0m labels: severity: warning annotations: summary: Netdata predicted disk full (instance {{ $labels.instance }}) description: \"Netdata predicted disk full in 24 hours\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7.6. Netdata MD mismatch cnt unsynchronized blocks RAID Array have unsynchronized blocks - alert: NetdataMdMismatchCntUnsynchronizedBlocks expr: netdata_md_mismatch_cnt_unsynchronized_blocks_average > 1024 for: 2m labels: severity: warning annotations: summary: Netdata MD mismatch cnt unsynchronized blocks (instance {{ $labels.instance }}) description: \"RAID Array have unsynchronized blocks\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7.7. Netdata disk reallocated sectors Reallocated sectors on disk - alert: NetdataDiskReallocatedSectors expr: increase(netdata_smartd_log_reallocated_sectors_count_sectors_average[1m]) > 0 for: 0m labels: severity: info annotations: summary: Netdata disk reallocated sectors (instance {{ $labels.instance }}) description: \"Reallocated sectors on disk\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7.8. Netdata disk current pending sector Disk current pending sector - alert: NetdataDiskCurrentPendingSector expr: netdata_smartd_log_current_pending_sector_count_sectors_average > 0 for: 0m labels: severity: warning annotations: summary: Netdata disk current pending sector (instance {{ $labels.instance }}) description: \"Disk current pending sector\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7.9. Netdata reported uncorrectable disk sectors Reported uncorrectable disk sectors - alert: NetdataReportedUncorrectableDiskSectors expr: increase(netdata_smartd_log_offline_uncorrectable_sector_count_sectors_average[2m]) > 0 for: 0m labels: severity: warning annotations: summary: Netdata reported uncorrectable disk sectors (instance {{ $labels.instance }}) description: \"Reported uncorrectable disk sectors\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7 Netdata : Embedded exporter"},{"location":"chap9/33Netdata/#7-netdata-embedded-exporter","text":"Embedded exporter","title":"7 Netdata : Embedded exporter"},{"location":"chap9/33Netdata/#71-netdata-high-cpu-usage","text":"Netdata high CPU usage (> 80%) - alert: NetdataHighCpuUsage expr: rate(netdata_cpu_cpu_percentage_average{dimension=\"idle\"}[1m]) > 80 for: 5m labels: severity: warning annotations: summary: Netdata high cpu usage (instance {{ $labels.instance }}) description: \"Netdata high CPU usage (> 80%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7.1. Netdata high cpu usage"},{"location":"chap9/33Netdata/#72-host-cpu-steal-noisy-neighbor","text":"CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit. - alert: HostCpuStealNoisyNeighbor expr: rate(netdata_cpu_cpu_percentage_average{dimension=\"steal\"}[1m]) > 10 for: 5m labels: severity: warning annotations: summary: Host CPU steal noisy neighbor (instance {{ $labels.instance }}) description: \"CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7.2. Host CPU steal noisy neighbor"},{"location":"chap9/33Netdata/#73-netdata-high-memory-usage","text":"Netdata high memory usage (> 80%) - alert: NetdataHighMemoryUsage expr: 100 / netdata_system_ram_MB_average * netdata_system_ram_MB_average{dimension=~\"free|cached\"} < 20 for: 5m labels: severity: warning annotations: summary: Netdata high memory usage (instance {{ $labels.instance }}) description: \"Netdata high memory usage (> 80%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7.3. Netdata high memory usage"},{"location":"chap9/33Netdata/#74-netdata-low-disk-space","text":"Netdata low disk space (> 80%) - alert: NetdataLowDiskSpace expr: 100 / netdata_disk_space_GB_average * netdata_disk_space_GB_average{dimension=~\"avail|cached\"} < 20 for: 5m labels: severity: warning annotations: summary: Netdata low disk space (instance {{ $labels.instance }}) description: \"Netdata low disk space (> 80%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7.4. Netdata low disk space"},{"location":"chap9/33Netdata/#75-netdata-predicted-disk-full","text":"Netdata predicted disk full in 24 hours - alert: NetdataPredictedDiskFull expr: predict_linear(netdata_disk_space_GB_average{dimension=~\"avail|cached\"}[3h], 24 * 3600) < 0 for: 0m labels: severity: warning annotations: summary: Netdata predicted disk full (instance {{ $labels.instance }}) description: \"Netdata predicted disk full in 24 hours\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7.5. Netdata predicted disk full"},{"location":"chap9/33Netdata/#76-netdata-md-mismatch-cnt-unsynchronized-blocks","text":"RAID Array have unsynchronized blocks - alert: NetdataMdMismatchCntUnsynchronizedBlocks expr: netdata_md_mismatch_cnt_unsynchronized_blocks_average > 1024 for: 2m labels: severity: warning annotations: summary: Netdata MD mismatch cnt unsynchronized blocks (instance {{ $labels.instance }}) description: \"RAID Array have unsynchronized blocks\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7.6. Netdata MD mismatch cnt unsynchronized blocks"},{"location":"chap9/33Netdata/#77-netdata-disk-reallocated-sectors","text":"Reallocated sectors on disk - alert: NetdataDiskReallocatedSectors expr: increase(netdata_smartd_log_reallocated_sectors_count_sectors_average[1m]) > 0 for: 0m labels: severity: info annotations: summary: Netdata disk reallocated sectors (instance {{ $labels.instance }}) description: \"Reallocated sectors on disk\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7.7. Netdata disk reallocated sectors"},{"location":"chap9/33Netdata/#78-netdata-disk-current-pending-sector","text":"Disk current pending sector - alert: NetdataDiskCurrentPendingSector expr: netdata_smartd_log_current_pending_sector_count_sectors_average > 0 for: 0m labels: severity: warning annotations: summary: Netdata disk current pending sector (instance {{ $labels.instance }}) description: \"Disk current pending sector\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7.8. Netdata disk current pending sector"},{"location":"chap9/33Netdata/#79-netdata-reported-uncorrectable-disk-sectors","text":"Reported uncorrectable disk sectors - alert: NetdataReportedUncorrectableDiskSectors expr: increase(netdata_smartd_log_offline_uncorrectable_sector_count_sectors_average[2m]) > 0 for: 0m labels: severity: warning annotations: summary: Netdata reported uncorrectable disk sectors (instance {{ $labels.instance }}) description: \"Reported uncorrectable disk sectors\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7.9. Netdata reported uncorrectable disk sectors"},{"location":"chap9/34SQLServer/","text":"3 SQL Server Ozarklake/prometheus-mssql-exporter 1. SQL Server down SQL server instance is down - alert: SqlServerDown expr: mssql_up == 0 for: 0m labels: severity: critical annotations: summary: SQL Server down (instance {{ $labels.instance }}) description: \"SQL server instance is down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 8.2. SQL Server deadlock SQL Server is having some deadlock. - alert: SqlServerDeadlock expr: increase(mssql_deadlocks[1m]) > 5 for: 0m labels: severity: warning annotations: summary: SQL Server deadlock (instance {{ $labels.instance }}) description: \"SQL Server is having some deadlock.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3 SQL Server"},{"location":"chap9/34SQLServer/#3-sql-server","text":"Ozarklake/prometheus-mssql-exporter","title":"3 SQL Server"},{"location":"chap9/34SQLServer/#1-sql-server-down","text":"SQL server instance is down - alert: SqlServerDown expr: mssql_up == 0 for: 0m labels: severity: critical annotations: summary: SQL Server down (instance {{ $labels.instance }}) description: \"SQL server instance is down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. SQL Server down"},{"location":"chap9/34SQLServer/#82-sql-server-deadlock","text":"SQL Server is having some deadlock. - alert: SqlServerDeadlock expr: increase(mssql_deadlocks[1m]) > 5 for: 0m labels: severity: warning annotations: summary: SQL Server deadlock (instance {{ $labels.instance }}) description: \"SQL Server is having some deadlock.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"8.2. SQL Server deadlock"},{"location":"chap9/35PGBouncer/","text":"4 PGBouncer spreaker/prometheus-pgbouncer-exporter 1 PGBouncer active connections PGBouncer pools are filling up - alert: PgbouncerActiveConnections expr: pgbouncer_pools_server_active_connections > 200 for: 2m labels: severity: warning annotations: summary: PGBouncer active connections (instance {{ $labels.instance }}) description: \"PGBouncer pools are filling up\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. PGBouncer errors PGBouncer is logging errors. This may be due to a a server restart or an admin typing commands at the pgbouncer console. - alert: PgbouncerErrors expr: increase(pgbouncer_errors_count{errmsg!=\"server conn crashed?\"}[1m]) > 10 for: 0m labels: severity: warning annotations: summary: PGBouncer errors (instance {{ $labels.instance }}) description: \"PGBouncer is logging errors. This may be due to a a server restart or an admin typing commands at the pgbouncer console.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. PGBouncer max connections The number of PGBouncer client connections has reached max_client_conn . - alert: PgbouncerMaxConnections expr: increase(pgbouncer_errors_count{errmsg=\"no more connections allowed (max_client_conn)\"}[30s]) > 0 for: 0m labels: severity: critical annotations: summary: PGBouncer max connections (instance {{ $labels.instance }}) description: \"The number of PGBouncer client connections has reached max_client_conn.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4 PGBouncer"},{"location":"chap9/35PGBouncer/#4-pgbouncer","text":"spreaker/prometheus-pgbouncer-exporter","title":"4 PGBouncer"},{"location":"chap9/35PGBouncer/#1-pgbouncer-active-connections","text":"PGBouncer pools are filling up - alert: PgbouncerActiveConnections expr: pgbouncer_pools_server_active_connections > 200 for: 2m labels: severity: warning annotations: summary: PGBouncer active connections (instance {{ $labels.instance }}) description: \"PGBouncer pools are filling up\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1 PGBouncer active connections"},{"location":"chap9/35PGBouncer/#2-pgbouncer-errors","text":"PGBouncer is logging errors. This may be due to a a server restart or an admin typing commands at the pgbouncer console. - alert: PgbouncerErrors expr: increase(pgbouncer_errors_count{errmsg!=\"server conn crashed?\"}[1m]) > 10 for: 0m labels: severity: warning annotations: summary: PGBouncer errors (instance {{ $labels.instance }}) description: \"PGBouncer is logging errors. This may be due to a a server restart or an admin typing commands at the pgbouncer console.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. PGBouncer errors"},{"location":"chap9/35PGBouncer/#3-pgbouncer-max-connections","text":"The number of PGBouncer client connections has reached max_client_conn . - alert: PgbouncerMaxConnections expr: increase(pgbouncer_errors_count{errmsg=\"no more connections allowed (max_client_conn)\"}[30s]) > 0 for: 0m labels: severity: critical annotations: summary: PGBouncer max connections (instance {{ $labels.instance }}) description: \"The number of PGBouncer client connections has reached max_client_conn.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. PGBouncer max connections"},{"location":"chap9/36solr/","text":"12 Solr : embedded exporter embedded exporter 1. Solr update errors Solr collection {{ $labels.collection }} has failed updates for replica {{ $labels.replica }} on {{ $labels.base_url }} . - alert: SolrUpdateErrors expr: increase(solr_metrics_core_update_handler_errors_total[1m]) > 1 for: 0m labels: severity: critical annotations: summary: Solr update errors (instance {{ $labels.instance }}) description: \"Solr collection {{ $labels.collection }} has failed updates for replica {{ $labels.replica }} on {{ $labels.base_url }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Solr query errors Solr has increased query errors in collection {{ $labels.collection }} for replica {{ $labels.replica }} on {{ $labels.base_url }} . - alert: SolrQueryErrors expr: increase(solr_metrics_core_errors_total{category=\"QUERY\"}[1m]) > 1 for: 5m labels: severity: warning annotations: summary: Solr query errors (instance {{ $labels.instance }}) description: \"Solr has increased query errors in collection {{ $labels.collection }} for replica {{ $labels.replica }} on {{ $labels.base_url }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Solr replication errors Solr collection {{ $labels.collection }} has failed updates for replica {{ $labels.replica }} on {{ $labels.base_url }} . - alert: SolrReplicationErrors expr: increase(solr_metrics_core_errors_total{category=\"REPLICATION\"}[1m]) > 1 for: 0m labels: severity: critical annotations: summary: Solr replication errors (instance {{ $labels.instance }}) description: \"Solr collection {{ $labels.collection }} has failed updates for replica {{ $labels.replica }} on {{ $labels.base_url }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Solr low live node count Solr collection {{ $labels.collection }} has less than two live nodes for replica {{ $labels.replica }} on {{ $labels.base_url }} . - alert: SolrLowLiveNodeCount expr: solr_collections_live_nodes < 2 for: 0m labels: severity: critical annotations: summary: Solr low live node count (instance {{ $labels.instance }}) description: \"Solr collection {{ $labels.collection }} has less than two live nodes for replica {{ $labels.replica }} on {{ $labels.base_url }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"12 Solr : embedded exporter"},{"location":"chap9/36solr/#12-solr-embedded-exporter","text":"embedded exporter","title":"12 Solr : embedded exporter"},{"location":"chap9/36solr/#1-solr-update-errors","text":"Solr collection {{ $labels.collection }} has failed updates for replica {{ $labels.replica }} on {{ $labels.base_url }} . - alert: SolrUpdateErrors expr: increase(solr_metrics_core_update_handler_errors_total[1m]) > 1 for: 0m labels: severity: critical annotations: summary: Solr update errors (instance {{ $labels.instance }}) description: \"Solr collection {{ $labels.collection }} has failed updates for replica {{ $labels.replica }} on {{ $labels.base_url }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Solr update errors"},{"location":"chap9/36solr/#2-solr-query-errors","text":"Solr has increased query errors in collection {{ $labels.collection }} for replica {{ $labels.replica }} on {{ $labels.base_url }} . - alert: SolrQueryErrors expr: increase(solr_metrics_core_errors_total{category=\"QUERY\"}[1m]) > 1 for: 5m labels: severity: warning annotations: summary: Solr query errors (instance {{ $labels.instance }}) description: \"Solr has increased query errors in collection {{ $labels.collection }} for replica {{ $labels.replica }} on {{ $labels.base_url }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Solr query errors"},{"location":"chap9/36solr/#3-solr-replication-errors","text":"Solr collection {{ $labels.collection }} has failed updates for replica {{ $labels.replica }} on {{ $labels.base_url }} . - alert: SolrReplicationErrors expr: increase(solr_metrics_core_errors_total{category=\"REPLICATION\"}[1m]) > 1 for: 0m labels: severity: critical annotations: summary: Solr replication errors (instance {{ $labels.instance }}) description: \"Solr collection {{ $labels.collection }} has failed updates for replica {{ $labels.replica }} on {{ $labels.base_url }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Solr replication errors"},{"location":"chap9/36solr/#4-solr-low-live-node-count","text":"Solr collection {{ $labels.collection }} has less than two live nodes for replica {{ $labels.replica }} on {{ $labels.base_url }} . - alert: SolrLowLiveNodeCount expr: solr_collections_live_nodes < 2 for: 0m labels: severity: critical annotations: summary: Solr low live node count (instance {{ $labels.instance }}) description: \"Solr collection {{ $labels.collection }} has less than two live nodes for replica {{ $labels.replica }} on {{ $labels.base_url }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Solr low live node count"},{"location":"chap9/37Sidekiq/","text":"3 Sidekiq Strech/sidekiq-prometheus-exporter 1 Sidekiq queue size Sidekiq queue {{ $labels.name }} is growing - alert: SidekiqQueueSize expr: sidekiq_queue_size > 100 for: 1m labels: severity: warning annotations: summary: Sidekiq queue size (instance {{ $labels.instance }}) description: \"Sidekiq queue {{ $labels.name }} is growing\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2 Sidekiq scheduling latency too high Sidekiq jobs are taking more than 1min to be picked up. Users may be seeing delays in background processing. - alert: SidekiqSchedulingLatencyTooHigh expr: max(sidekiq_queue_latency) > 60 for: 0m labels: severity: critical annotations: summary: Sidekiq scheduling latency too high (instance {{ $labels.instance }}) description: \"Sidekiq jobs are taking more than 1min to be picked up. Users may be seeing delays in background processing.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3 Sidekiq"},{"location":"chap9/37Sidekiq/#3-sidekiq","text":"","title":"3 Sidekiq"},{"location":"chap9/37Sidekiq/#strechsidekiq-prometheus-exporter","text":"","title":"Strech/sidekiq-prometheus-exporter"},{"location":"chap9/37Sidekiq/#1-sidekiq-queue-size","text":"Sidekiq queue {{ $labels.name }} is growing - alert: SidekiqQueueSize expr: sidekiq_queue_size > 100 for: 1m labels: severity: warning annotations: summary: Sidekiq queue size (instance {{ $labels.instance }}) description: \"Sidekiq queue {{ $labels.name }} is growing\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1 Sidekiq queue size"},{"location":"chap9/37Sidekiq/#2-sidekiq-scheduling-latency-too-high","text":"Sidekiq jobs are taking more than 1min to be picked up. Users may be seeing delays in background processing. - alert: SidekiqSchedulingLatencyTooHigh expr: max(sidekiq_queue_latency) > 60 for: 0m labels: severity: critical annotations: summary: Sidekiq scheduling latency too high (instance {{ $labels.instance }}) description: \"Sidekiq jobs are taking more than 1min to be picked up. Users may be seeing delays in background processing.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2 Sidekiq scheduling latency too high"},{"location":"chap9/38ceph/","text":"1 Ceph : Embedded exporter Embedded exporter 1. Ceph State Ceph instance unhealthy - alert: CephState expr: ceph_health_status != 0 for: 0m labels: severity: critical annotations: summary: Ceph State (instance {{ $labels.instance }}) description: \"Ceph instance unhealthy\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Ceph monitor clock skew Ceph monitor clock skew detected. Please check ntp and hardware clock settings - alert: CephMonitorClockSkew expr: abs(ceph_monitor_clock_skew_seconds) > 0.2 for: 2m labels: severity: warning annotations: summary: Ceph monitor clock skew (instance {{ $labels.instance }}) description: \"Ceph monitor clock skew detected. Please check ntp and hardware clock settings\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Ceph monitor low space Ceph monitor storage is low. - alert: CephMonitorLowSpace expr: ceph_monitor_avail_percent < 10 for: 2m labels: severity: warning annotations: summary: Ceph monitor low space (instance {{ $labels.instance }}) description: \"Ceph monitor storage is low.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Ceph OSD Down Ceph Object Storage Daemon Down - alert: CephOsdDown expr: ceph_osd_up == 0 for: 0m labels: severity: critical annotations: summary: Ceph OSD Down (instance {{ $labels.instance }}) description: \"Ceph Object Storage Daemon Down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5. Ceph high OSD latency Ceph Object Storage Daemon latency is high. Please check if it doesn't stuck in weird state. - alert: CephHighOsdLatency expr: ceph_osd_perf_apply_latency_seconds > 5 for: 1m labels: severity: warning annotations: summary: Ceph high OSD latency (instance {{ $labels.instance }}) description: \"Ceph Object Storage Daemon latency is high. Please check if it doesn't stuck in weird state.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6. Ceph OSD low space Ceph Object Storage Daemon is going out of space. Please add more disks. - alert: CephOsdLowSpace expr: ceph_osd_utilization > 90 for: 2m labels: severity: warning annotations: summary: Ceph OSD low space (instance {{ $labels.instance }}) description: \"Ceph Object Storage Daemon is going out of space. Please add more disks.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7. Ceph OSD reweighted Ceph Object Storage Daemon takes too much time to resize. - alert: CephOsdReweighted expr: ceph_osd_weight < 1 for: 2m labels: severity: warning annotations: summary: Ceph OSD reweighted (instance {{ $labels.instance }}) description: \"Ceph Object Storage Daemon takes too much time to resize.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 8. Ceph PG down Some Ceph placement groups are down. Please ensure that all the data are available. - alert: CephPgDown expr: ceph_pg_down > 0 for: 0m labels: severity: critical annotations: summary: Ceph PG down (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are down. Please ensure that all the data are available.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9. Ceph PG incomplete Some Ceph placement groups are incomplete. Please ensure that all the data are available. - alert: CephPgIncomplete expr: ceph_pg_incomplete > 0 for: 0m labels: severity: critical annotations: summary: Ceph PG incomplete (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are incomplete. Please ensure that all the data are available.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 10. Ceph PG inconsistent Some Ceph placement groups are inconsistent. Data is available but inconsistent across nodes. - alert: CephPgInconsistent expr: ceph_pg_inconsistent > 0 for: 0m labels: severity: warning annotations: summary: Ceph PG inconsistent (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are inconsistent. Data is available but inconsistent across nodes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 11. Ceph PG activation long Some Ceph placement groups are too long to activate. - alert: CephPgActivationLong expr: ceph_pg_activating > 0 for: 2m labels: severity: warning annotations: summary: Ceph PG activation long (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are too long to activate.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 12. Ceph PG backfill full Some Ceph placement groups are located on full Object Storage Daemon on cluster. Those PGs can be unavailable shortly. Please check OSDs, change weight or reconfigure CRUSH rules. - alert: CephPgBackfillFull expr: ceph_pg_backfill_toofull > 0 for: 2m labels: severity: warning annotations: summary: Ceph PG backfill full (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are located on full Object Storage Daemon on cluster. Those PGs can be unavailable shortly. Please check OSDs, change weight or reconfigure CRUSH rules.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 13. Ceph PG unavailable Some Ceph placement groups are unavailable. - alert: CephPgUnavailable expr: ceph_pg_total - ceph_pg_active > 0 for: 0m labels: severity: critical annotations: summary: Ceph PG unavailable (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are unavailable.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1 Ceph : Embedded exporter"},{"location":"chap9/38ceph/#1-ceph-embedded-exporter","text":"Embedded exporter","title":"1 Ceph : Embedded exporter"},{"location":"chap9/38ceph/#1-ceph-state","text":"Ceph instance unhealthy - alert: CephState expr: ceph_health_status != 0 for: 0m labels: severity: critical annotations: summary: Ceph State (instance {{ $labels.instance }}) description: \"Ceph instance unhealthy\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Ceph State"},{"location":"chap9/38ceph/#2-ceph-monitor-clock-skew","text":"Ceph monitor clock skew detected. Please check ntp and hardware clock settings - alert: CephMonitorClockSkew expr: abs(ceph_monitor_clock_skew_seconds) > 0.2 for: 2m labels: severity: warning annotations: summary: Ceph monitor clock skew (instance {{ $labels.instance }}) description: \"Ceph monitor clock skew detected. Please check ntp and hardware clock settings\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Ceph monitor clock skew"},{"location":"chap9/38ceph/#3-ceph-monitor-low-space","text":"Ceph monitor storage is low. - alert: CephMonitorLowSpace expr: ceph_monitor_avail_percent < 10 for: 2m labels: severity: warning annotations: summary: Ceph monitor low space (instance {{ $labels.instance }}) description: \"Ceph monitor storage is low.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Ceph monitor low space"},{"location":"chap9/38ceph/#4-ceph-osd-down","text":"Ceph Object Storage Daemon Down - alert: CephOsdDown expr: ceph_osd_up == 0 for: 0m labels: severity: critical annotations: summary: Ceph OSD Down (instance {{ $labels.instance }}) description: \"Ceph Object Storage Daemon Down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Ceph OSD Down"},{"location":"chap9/38ceph/#5-ceph-high-osd-latency","text":"Ceph Object Storage Daemon latency is high. Please check if it doesn't stuck in weird state. - alert: CephHighOsdLatency expr: ceph_osd_perf_apply_latency_seconds > 5 for: 1m labels: severity: warning annotations: summary: Ceph high OSD latency (instance {{ $labels.instance }}) description: \"Ceph Object Storage Daemon latency is high. Please check if it doesn't stuck in weird state.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5. Ceph high OSD latency"},{"location":"chap9/38ceph/#6-ceph-osd-low-space","text":"Ceph Object Storage Daemon is going out of space. Please add more disks. - alert: CephOsdLowSpace expr: ceph_osd_utilization > 90 for: 2m labels: severity: warning annotations: summary: Ceph OSD low space (instance {{ $labels.instance }}) description: \"Ceph Object Storage Daemon is going out of space. Please add more disks.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6. Ceph OSD low space"},{"location":"chap9/38ceph/#7-ceph-osd-reweighted","text":"Ceph Object Storage Daemon takes too much time to resize. - alert: CephOsdReweighted expr: ceph_osd_weight < 1 for: 2m labels: severity: warning annotations: summary: Ceph OSD reweighted (instance {{ $labels.instance }}) description: \"Ceph Object Storage Daemon takes too much time to resize.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7. Ceph OSD reweighted"},{"location":"chap9/38ceph/#8-ceph-pg-down","text":"Some Ceph placement groups are down. Please ensure that all the data are available. - alert: CephPgDown expr: ceph_pg_down > 0 for: 0m labels: severity: critical annotations: summary: Ceph PG down (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are down. Please ensure that all the data are available.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"8. Ceph PG down"},{"location":"chap9/38ceph/#9-ceph-pg-incomplete","text":"Some Ceph placement groups are incomplete. Please ensure that all the data are available. - alert: CephPgIncomplete expr: ceph_pg_incomplete > 0 for: 0m labels: severity: critical annotations: summary: Ceph PG incomplete (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are incomplete. Please ensure that all the data are available.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9. Ceph PG incomplete"},{"location":"chap9/38ceph/#10-ceph-pg-inconsistent","text":"Some Ceph placement groups are inconsistent. Data is available but inconsistent across nodes. - alert: CephPgInconsistent expr: ceph_pg_inconsistent > 0 for: 0m labels: severity: warning annotations: summary: Ceph PG inconsistent (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are inconsistent. Data is available but inconsistent across nodes.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"10. Ceph PG inconsistent"},{"location":"chap9/38ceph/#11-ceph-pg-activation-long","text":"Some Ceph placement groups are too long to activate. - alert: CephPgActivationLong expr: ceph_pg_activating > 0 for: 2m labels: severity: warning annotations: summary: Ceph PG activation long (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are too long to activate.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"11. Ceph PG activation long"},{"location":"chap9/38ceph/#12-ceph-pg-backfill-full","text":"Some Ceph placement groups are located on full Object Storage Daemon on cluster. Those PGs can be unavailable shortly. Please check OSDs, change weight or reconfigure CRUSH rules. - alert: CephPgBackfillFull expr: ceph_pg_backfill_toofull > 0 for: 2m labels: severity: warning annotations: summary: Ceph PG backfill full (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are located on full Object Storage Daemon on cluster. Those PGs can be unavailable shortly. Please check OSDs, change weight or reconfigure CRUSH rules.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"12. Ceph PG backfill full"},{"location":"chap9/38ceph/#13-ceph-pg-unavailable","text":"Some Ceph placement groups are unavailable. - alert: CephPgUnavailable expr: ceph_pg_total - ceph_pg_active > 0 for: 0m labels: severity: critical annotations: summary: Ceph PG unavailable (instance {{ $labels.instance }}) description: \"Some Ceph placement groups are unavailable.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"13. Ceph PG unavailable"},{"location":"chap9/39SpeedTest/","text":"2 SpeedTest : Speedtest exporter Speedtest exporter 1. SpeedTest Slow Internet Download Internet download speed is currently {{humanize $value}} Mbps. - alert: SpeedtestSlowInternetDownload expr: avg_over_time(speedtest_download[10m]) < 100 for: 0m labels: severity: warning annotations: summary: SpeedTest Slow Internet Download (instance {{ $labels.instance }}) description: \"Internet download speed is currently {{humanize $value}} Mbps.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. SpeedTest Slow Internet Upload Internet upload speed is currently {{humanize $value}} Mbps. - alert: SpeedtestSlowInternetUpload expr: avg_over_time(speedtest_upload[10m]) < 20 for: 0m labels: severity: warning annotations: summary: SpeedTest Slow Internet Upload (instance {{ $labels.instance }}) description: \"Internet upload speed is currently {{humanize $value}} Mbps.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2 SpeedTest : Speedtest exporter"},{"location":"chap9/39SpeedTest/#2-speedtest-speedtest-exporter","text":"Speedtest exporter","title":"2 SpeedTest : Speedtest exporter"},{"location":"chap9/39SpeedTest/#1-speedtest-slow-internet-download","text":"Internet download speed is currently {{humanize $value}} Mbps. - alert: SpeedtestSlowInternetDownload expr: avg_over_time(speedtest_download[10m]) < 100 for: 0m labels: severity: warning annotations: summary: SpeedTest Slow Internet Download (instance {{ $labels.instance }}) description: \"Internet download speed is currently {{humanize $value}} Mbps.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. SpeedTest Slow Internet Download"},{"location":"chap9/39SpeedTest/#2-speedtest-slow-internet-upload","text":"Internet upload speed is currently {{humanize $value}} Mbps. - alert: SpeedtestSlowInternetUpload expr: avg_over_time(speedtest_upload[10m]) < 20 for: 0m labels: severity: warning annotations: summary: SpeedTest Slow Internet Upload (instance {{ $labels.instance }}) description: \"Internet upload speed is currently {{humanize $value}} Mbps.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. SpeedTest Slow Internet Upload"},{"location":"chap9/3Docker_cadvisor/","text":"3 Docker containers : cAdvisor https://github.com/google/cadvisor 3.1 Container killed A container has disappeared - alert: ContainerKilled expr: time() - container_last_seen > 60 for: 5m labels: severity: warning annotations: summary: \"Container killed (instance {{ $labels.instance }})\" description: \"A container has disappeared\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 3.2 Container CPU usage Container CPU usage is above 80% - alert: ContainerCpuUsage expr: (sum(rate(container_cpu_usage_seconds_total[3m])) BY (ip, name) * 100) > 80 for: 5m labels: severity: warning annotations: summary: \"Container CPU usage (instance {{ $labels.instance }})\" description: \"Container CPU usage is above 80%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 3.3 Container Memory usage Container Memory usage is above 80% - alert: ContainerMemoryUsage expr: (sum(container_memory_usage_bytes) BY (ip) / sum(container_memory_max_usage_bytes) BY (ip) * 100) > 80 for: 5m labels: severity: warning annotations: summary: \"Container Memory usage (instance {{ $labels.instance }})\" description: \"Container Memory usage is above 80%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 3.4 Container Volume usage Container Volume usage is above 80% - alert: ContainerVolumeUsage expr: (1 - (sum(container_fs_inodes_free) BY (ip) / sum(container_fs_inodes_total) BY (ip)) * 100) > 80 for: 5m labels: severity: warning annotations: summary: \"Container Volume usage (instance {{ $labels.instance }})\" description: \"Container Volume usage is above 80%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 3.5 Container Volume I/O usage Container Volume IO usage is above 80% - alert: ContainerVolumeIoUsage expr: (sum(container_fs_io_current) BY (ip, name) * 100) > 80 for: 5m labels: severity: warning annotations: summary: \"Container Volume IO usage (instance {{ $labels.instance }})\" description: \"Container Volume IO usage is above 80%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 3.6 Container absent A container is absent for 5 min # This rule can be very noisy in dynamic infra with legitimate container start/stop/deployment. - alert: ContainerAbsent expr: absent(container_last_seen) for: 5m labels: severity: warning annotations: summary: Container absent (instance {{ $labels.instance }}) description: \"A container is absent for 5 min\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3.7. Container high throttle rate Container is being throttled - alert: ContainerHighThrottleRate expr: rate(container_cpu_cfs_throttled_seconds_total[3m]) > 1 for: 2m labels: severity: warning annotations: summary: Container high throttle rate (instance {{ $labels.instance }}) description: \"Container is being throttled\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3 Docker containers : cAdvisor"},{"location":"chap9/3Docker_cadvisor/#3-docker-containers-cadvisor","text":"https://github.com/google/cadvisor","title":"3 Docker containers : cAdvisor"},{"location":"chap9/3Docker_cadvisor/#31-container-killed","text":"A container has disappeared - alert: ContainerKilled expr: time() - container_last_seen > 60 for: 5m labels: severity: warning annotations: summary: \"Container killed (instance {{ $labels.instance }})\" description: \"A container has disappeared\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"3.1 Container killed"},{"location":"chap9/3Docker_cadvisor/#32-container-cpu-usage","text":"Container CPU usage is above 80% - alert: ContainerCpuUsage expr: (sum(rate(container_cpu_usage_seconds_total[3m])) BY (ip, name) * 100) > 80 for: 5m labels: severity: warning annotations: summary: \"Container CPU usage (instance {{ $labels.instance }})\" description: \"Container CPU usage is above 80%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"3.2 Container CPU usage"},{"location":"chap9/3Docker_cadvisor/#33-container-memory-usage","text":"Container Memory usage is above 80% - alert: ContainerMemoryUsage expr: (sum(container_memory_usage_bytes) BY (ip) / sum(container_memory_max_usage_bytes) BY (ip) * 100) > 80 for: 5m labels: severity: warning annotations: summary: \"Container Memory usage (instance {{ $labels.instance }})\" description: \"Container Memory usage is above 80%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"3.3 Container Memory usage"},{"location":"chap9/3Docker_cadvisor/#34-container-volume-usage","text":"Container Volume usage is above 80% - alert: ContainerVolumeUsage expr: (1 - (sum(container_fs_inodes_free) BY (ip) / sum(container_fs_inodes_total) BY (ip)) * 100) > 80 for: 5m labels: severity: warning annotations: summary: \"Container Volume usage (instance {{ $labels.instance }})\" description: \"Container Volume usage is above 80%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"3.4 Container Volume usage"},{"location":"chap9/3Docker_cadvisor/#35-container-volume-io-usage","text":"Container Volume IO usage is above 80% - alert: ContainerVolumeIoUsage expr: (sum(container_fs_io_current) BY (ip, name) * 100) > 80 for: 5m labels: severity: warning annotations: summary: \"Container Volume IO usage (instance {{ $labels.instance }})\" description: \"Container Volume IO usage is above 80%\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"3.5 Container Volume I/O usage"},{"location":"chap9/3Docker_cadvisor/#36-container-absent","text":"A container is absent for 5 min # This rule can be very noisy in dynamic infra with legitimate container start/stop/deployment. - alert: ContainerAbsent expr: absent(container_last_seen) for: 5m labels: severity: warning annotations: summary: Container absent (instance {{ $labels.instance }}) description: \"A container is absent for 5 min\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3.6 Container absent"},{"location":"chap9/3Docker_cadvisor/#37-container-high-throttle-rate","text":"Container is being throttled - alert: ContainerHighThrottleRate expr: rate(container_cpu_cfs_throttled_seconds_total[3m]) > 1 for: 2m labels: severity: warning annotations: summary: Container high throttle rate (instance {{ $labels.instance }}) description: \"Container is being throttled\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3.7. Container high throttle rate"},{"location":"chap9/3proxy_lb/","text":"3 Reverse proxies and load balancers 1 Nginx HTTP errors 4xx HTTP errors 5xx Nginx latency high 2 Apache Apache down Apache workers load Apache restart 3 HaProxy Embedded exporter (HAProxy >= v2) HAProxy high HTTP 4xx error rate backend HAProxy high HTTP 5xx error rate backend HAProxy high HTTP 4xx error rate server HAProxy high HTTP 5xx error rate server HAProxy server response errors HAProxy backend connection errors HAProxy server connection errors HAProxy backend max active session > 80% HAProxy pending requests HAProxy HTTP slowing down HAProxy retry high HAproxy has no alive backends HAProxy frontend security blocked requests HAProxy server healthcheck failure prometheus/haproxy_exporter (HAProxy < v2) HAProxy down HAProxy high HTTP 4xx error rate backend HAProxy high HTTP 5xx error rate backend HAProxy high HTTP 4xx error rate server HAProxy high HTTP 5xx error rate server HAProxy server response errors HAProxy backend connection errors HAProxy server connection errors HAProxy backend max active session HAProxy pending requests HAProxy HTTP slowing down HAProxy retry high HAProxy backend down HAProxy server down HAProxy frontend security blocked requests HAProxy server healthcheck failure 4 Traefik ExporterV2: observability/metrics/prometheus/ Traefik service down Traefik high HTTP 4xx error rate service Traefik high HTTP 5xx error rate service ExporterV1: observability/metrics/prometheus/ Traefik backend down Traefik backend errors Traefik high HTTP 5xx error rate backend","title":"3 Reverse proxies and load balancers"},{"location":"chap9/3proxy_lb/#3-reverse-proxies-and-load-balancers","text":"","title":"3 Reverse proxies and load balancers"},{"location":"chap9/3proxy_lb/#1-nginx","text":"HTTP errors 4xx HTTP errors 5xx Nginx latency high","title":"1 Nginx"},{"location":"chap9/3proxy_lb/#2-apache","text":"Apache down Apache workers load Apache restart","title":"2 Apache"},{"location":"chap9/3proxy_lb/#3-haproxy","text":"Embedded exporter (HAProxy >= v2) HAProxy high HTTP 4xx error rate backend HAProxy high HTTP 5xx error rate backend HAProxy high HTTP 4xx error rate server HAProxy high HTTP 5xx error rate server HAProxy server response errors HAProxy backend connection errors HAProxy server connection errors HAProxy backend max active session > 80% HAProxy pending requests HAProxy HTTP slowing down HAProxy retry high HAproxy has no alive backends HAProxy frontend security blocked requests HAProxy server healthcheck failure prometheus/haproxy_exporter (HAProxy < v2) HAProxy down HAProxy high HTTP 4xx error rate backend HAProxy high HTTP 5xx error rate backend HAProxy high HTTP 4xx error rate server HAProxy high HTTP 5xx error rate server HAProxy server response errors HAProxy backend connection errors HAProxy server connection errors HAProxy backend max active session HAProxy pending requests HAProxy HTTP slowing down HAProxy retry high HAProxy backend down HAProxy server down HAProxy frontend security blocked requests HAProxy server healthcheck failure","title":"3 HaProxy"},{"location":"chap9/3proxy_lb/#4-traefik","text":"ExporterV2: observability/metrics/prometheus/ Traefik service down Traefik high HTTP 4xx error rate service Traefik high HTTP 5xx error rate service ExporterV1: observability/metrics/prometheus/ Traefik backend down Traefik backend errors Traefik high HTTP 5xx error rate backend","title":"4 Traefik"},{"location":"chap9/40ssl_tls/","text":"6. SSL/TLS : ssl_exporter 1. SSL certificate probe failed Failed to fetch SSL information {{ $labels.instance }} - alert: SslCertificateProbeFailed expr: ssl_probe_success == 0 for: 0m labels: severity: critical annotations: summary: SSL certificate probe failed (instance {{ $labels.instance }}) description: \"Failed to fetch SSL information {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. SSL certificate OSCP status unknown Failed to get the OSCP status {{ $labels.instance }} - alert: SslCertificateOscpStatusUnknown expr: ssl_ocsp_response_status == 2 for: 0m labels: severity: warning annotations: summary: SSL certificate OSCP status unknown (instance {{ $labels.instance }}) description: \"Failed to get the OSCP status {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. SSL certificate revoked SSL certificate revoked {{ $labels.instance }} - alert: SslCertificateRevoked expr: ssl_ocsp_response_status == 1 for: 0m labels: severity: critical annotations: summary: SSL certificate revoked (instance {{ $labels.instance }}) description: \"SSL certificate revoked {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. SSL certificate expiry (< 7 days) {{ $labels.instance }} Certificate is expiring in 7 days - alert: SslCertificateExpiry(<7Days) expr: ssl_verified_cert_not_after{chain_no=\"0\"} - time() < 86400 * 7 for: 0m labels: severity: warning annotations: summary: SSL certificate expiry (< 7 days) (instance {{ $labels.instance }}) description: \"{{ $labels.instance }} Certificate is expiring in 7 days\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6. SSL/TLS : ssl_exporter"},{"location":"chap9/40ssl_tls/#6-ssltls-ssl_exporter","text":"","title":"6. SSL/TLS : ssl_exporter"},{"location":"chap9/40ssl_tls/#1-ssl-certificate-probe-failed","text":"Failed to fetch SSL information {{ $labels.instance }} - alert: SslCertificateProbeFailed expr: ssl_probe_success == 0 for: 0m labels: severity: critical annotations: summary: SSL certificate probe failed (instance {{ $labels.instance }}) description: \"Failed to fetch SSL information {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. SSL certificate probe failed"},{"location":"chap9/40ssl_tls/#2-ssl-certificate-oscp-status-unknown","text":"Failed to get the OSCP status {{ $labels.instance }} - alert: SslCertificateOscpStatusUnknown expr: ssl_ocsp_response_status == 2 for: 0m labels: severity: warning annotations: summary: SSL certificate OSCP status unknown (instance {{ $labels.instance }}) description: \"Failed to get the OSCP status {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. SSL certificate OSCP status unknown"},{"location":"chap9/40ssl_tls/#3-ssl-certificate-revoked","text":"SSL certificate revoked {{ $labels.instance }} - alert: SslCertificateRevoked expr: ssl_ocsp_response_status == 1 for: 0m labels: severity: critical annotations: summary: SSL certificate revoked (instance {{ $labels.instance }}) description: \"SSL certificate revoked {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. SSL certificate revoked"},{"location":"chap9/40ssl_tls/#4-ssl-certificate-expiry-7-days","text":"{{ $labels.instance }} Certificate is expiring in 7 days - alert: SslCertificateExpiry(<7Days) expr: ssl_verified_cert_not_after{chain_no=\"0\"} - time() < 86400 * 7 for: 0m labels: severity: warning annotations: summary: SSL certificate expiry (< 7 days) (instance {{ $labels.instance }}) description: \"{{ $labels.instance }} Certificate is expiring in 7 days\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. SSL certificate expiry (&lt; 7 days)"},{"location":"chap9/41Freeswitch/","text":"9 Freeswitch znerol/prometheus-freeswitch-exporter 1. Freeswitch down Freeswitch is unresponsive - alert: FreeswitchDown expr: freeswitch_up == 0 for: 0m labels: severity: critical annotations: summary: Freeswitch down (instance {{ $labels.instance }}) description: \"Freeswitch is unresponsive\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Freeswitch Sessions Warning High sessions usage on {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: FreeswitchSessionsWarning expr: (freeswitch_session_active * 100 / freeswitch_session_limit) > 80 for: 10m labels: severity: warning annotations: summary: Freeswitch Sessions Warning (instance {{ $labels.instance }}) description: \"High sessions usage on {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Freeswitch Sessions Critical High sessions usage on {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: FreeswitchSessionsCritical expr: (freeswitch_session_active * 100 / freeswitch_session_limit) > 90 for: 5m labels: severity: critical annotations: summary: Freeswitch Sessions Critical (instance {{ $labels.instance }}) description: \"High sessions usage on {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9 Freeswitch"},{"location":"chap9/41Freeswitch/#9-freeswitch","text":"znerol/prometheus-freeswitch-exporter","title":"9 Freeswitch"},{"location":"chap9/41Freeswitch/#1-freeswitch-down","text":"Freeswitch is unresponsive - alert: FreeswitchDown expr: freeswitch_up == 0 for: 0m labels: severity: critical annotations: summary: Freeswitch down (instance {{ $labels.instance }}) description: \"Freeswitch is unresponsive\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Freeswitch down"},{"location":"chap9/41Freeswitch/#2-freeswitch-sessions-warning","text":"High sessions usage on {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: FreeswitchSessionsWarning expr: (freeswitch_session_active * 100 / freeswitch_session_limit) > 80 for: 10m labels: severity: warning annotations: summary: Freeswitch Sessions Warning (instance {{ $labels.instance }}) description: \"High sessions usage on {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Freeswitch Sessions Warning"},{"location":"chap9/41Freeswitch/#3-freeswitch-sessions-critical","text":"High sessions usage on {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: FreeswitchSessionsCritical expr: (freeswitch_session_active * 100 / freeswitch_session_limit) > 90 for: 5m labels: severity: critical annotations: summary: Freeswitch Sessions Critical (instance {{ $labels.instance }}) description: \"High sessions usage on {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Freeswitch Sessions Critical"},{"location":"chap9/42vault/","text":"10. Hashicorp Vault Embedded exporter 1. Vault sealed Vault instance is sealed on {{ $labels.instance }} - alert: VaultSealed expr: vault_core_unsealed == 0 for: 0m labels: severity: critical annotations: summary: Vault sealed (instance {{ $labels.instance }}) description: \"Vault instance is sealed on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Vault too many pending tokens Too many pending tokens {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: VaultTooManyPendingTokens expr: avg(vault_token_create_count - vault_token_store_count) > 0 for: 5m labels: severity: warning annotations: summary: Vault too many pending tokens (instance {{ $labels.instance }}) description: \"Too many pending tokens {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Vault too many infinity tokens Too many infinity tokens {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: VaultTooManyInfinityTokens expr: vault_token_count_by_ttl{creation_ttl=\"+Inf\"} > 3 for: 5m labels: severity: warning annotations: summary: Vault too many infinity tokens (instance {{ $labels.instance }}) description: \"Too many infinity tokens {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"10. Hashicorp Vault"},{"location":"chap9/42vault/#10-hashicorp-vault","text":"Embedded exporter","title":"10. Hashicorp Vault"},{"location":"chap9/42vault/#1-vault-sealed","text":"Vault instance is sealed on {{ $labels.instance }} - alert: VaultSealed expr: vault_core_unsealed == 0 for: 0m labels: severity: critical annotations: summary: Vault sealed (instance {{ $labels.instance }}) description: \"Vault instance is sealed on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Vault sealed"},{"location":"chap9/42vault/#2-vault-too-many-pending-tokens","text":"Too many pending tokens {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: VaultTooManyPendingTokens expr: avg(vault_token_create_count - vault_token_store_count) > 0 for: 5m labels: severity: warning annotations: summary: Vault too many pending tokens (instance {{ $labels.instance }}) description: \"Too many pending tokens {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Vault too many pending tokens"},{"location":"chap9/42vault/#3-vault-too-many-infinity-tokens","text":"Too many infinity tokens {{ $labels.instance }}: {{ $value | printf \"%.2f\"}}% - alert: VaultTooManyInfinityTokens expr: vault_token_count_by_ttl{creation_ttl=\"+Inf\"} > 3 for: 5m labels: severity: warning annotations: summary: Vault too many infinity tokens (instance {{ $labels.instance }}) description: \"Too many infinity tokens {{ $labels.instance }}: {{ $value | printf \\\"%.2f\\\"}}%\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Vault too many infinity tokens"},{"location":"chap9/43Thanos/","text":"1 Thanos 1. Thanos compaction halted Thanos compaction has failed to run and is now halted. - alert: ThanosCompactionHalted expr: thanos_compact_halted == 1 for: 0m labels: severity: critical annotations: summary: Thanos compaction halted (instance {{ $labels.instance }}) description: \"Thanos compaction has failed to run and is now halted.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Thanos compact bucket operation failure Thanos compaction has failing storage operations - alert: ThanosCompactBucketOperationFailure expr: rate(thanos_objstore_bucket_operation_failures_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Thanos compact bucket operation failure (instance {{ $labels.instance }}) description: \"Thanos compaction has failing storage operations\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Thanos compact not run Thanos compaction has not run in 24 hours. - alert: ThanosCompactNotRun expr: (time() - thanos_objstore_bucket_last_successful_upload_time) > 24*60*60 for: 0m labels: severity: critical annotations: summary: Thanos compact not run (instance {{ $labels.instance }}) description: \"Thanos compaction has not run in 24 hours.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1 Thanos"},{"location":"chap9/43Thanos/#1-thanos","text":"","title":"1 Thanos"},{"location":"chap9/43Thanos/#1-thanos-compaction-halted","text":"Thanos compaction has failed to run and is now halted. - alert: ThanosCompactionHalted expr: thanos_compact_halted == 1 for: 0m labels: severity: critical annotations: summary: Thanos compaction halted (instance {{ $labels.instance }}) description: \"Thanos compaction has failed to run and is now halted.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Thanos compaction halted"},{"location":"chap9/43Thanos/#2-thanos-compact-bucket-operation-failure","text":"Thanos compaction has failing storage operations - alert: ThanosCompactBucketOperationFailure expr: rate(thanos_objstore_bucket_operation_failures_total[1m]) > 0 for: 0m labels: severity: critical annotations: summary: Thanos compact bucket operation failure (instance {{ $labels.instance }}) description: \"Thanos compaction has failing storage operations\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Thanos compact bucket operation failure"},{"location":"chap9/43Thanos/#3-thanos-compact-not-run","text":"Thanos compaction has not run in 24 hours. - alert: ThanosCompactNotRun expr: (time() - thanos_objstore_bucket_last_successful_upload_time) > 24*60*60 for: 0m labels: severity: critical annotations: summary: Thanos compact not run (instance {{ $labels.instance }}) description: \"Thanos compaction has not run in 24 hours.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Thanos compact not run"},{"location":"chap9/44loki/","text":"2 Loki 1. Loki process too many restarts A loki process had too many restarts (target {{ $labels.instance }}) - alert: LokiProcessTooManyRestarts expr: changes(process_start_time_seconds{job=~\"loki\"}[15m]) > 2 for: 0m labels: severity: warning annotations: summary: Loki process too many restarts (instance {{ $labels.instance }}) description: \"A loki process had too many restarts (target {{ $labels.instance }})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Loki request errors The {{ $labels.job }} and {{ $labels.route }} are experiencing errors - alert: LokiRequestErrors expr: 100 * sum(rate(loki_request_duration_seconds_count{status_code=~\"5..\"}[1m])) by (namespace, job, route) / sum(rate(loki_request_duration_seconds_count[1m])) by (namespace, job, route) > 10 for: 15m labels: severity: critical annotations: summary: Loki request errors (instance {{ $labels.instance }}) description: \"The {{ $labels.job }} and {{ $labels.route }} are experiencing errors\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Loki request panic The {{ $labels.job }} is experiencing {{ printf \"%.2f\" $value }}% increase of panics - alert: LokiRequestPanic expr: sum(increase(loki_panic_total[10m])) by (namespace, job) > 0 for: 5m labels: severity: critical annotations: summary: Loki request panic (instance {{ $labels.instance }}) description: \"The {{ $labels.job }} is experiencing {{ printf \\\"%.2f\\\" $value }}% increase of panics\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Loki request latency The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }} s 99th percentile latency - alert: LokiRequestLatency expr: (histogram_quantile(0.99, sum(rate(loki_request_duration_seconds_bucket{route!~\"(?i).*tail.*\"}[5m])) by (le))) > 1 for: 5m labels: severity: critical annotations: summary: Loki request latency (instance {{ $labels.instance }}) description: \"The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \\\"%.2f\\\" $value }}s 99th percentile latency\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2 Loki"},{"location":"chap9/44loki/#2-loki","text":"","title":"2 Loki"},{"location":"chap9/44loki/#1-loki-process-too-many-restarts","text":"A loki process had too many restarts (target {{ $labels.instance }}) - alert: LokiProcessTooManyRestarts expr: changes(process_start_time_seconds{job=~\"loki\"}[15m]) > 2 for: 0m labels: severity: warning annotations: summary: Loki process too many restarts (instance {{ $labels.instance }}) description: \"A loki process had too many restarts (target {{ $labels.instance }})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Loki process too many restarts"},{"location":"chap9/44loki/#2-loki-request-errors","text":"The {{ $labels.job }} and {{ $labels.route }} are experiencing errors - alert: LokiRequestErrors expr: 100 * sum(rate(loki_request_duration_seconds_count{status_code=~\"5..\"}[1m])) by (namespace, job, route) / sum(rate(loki_request_duration_seconds_count[1m])) by (namespace, job, route) > 10 for: 15m labels: severity: critical annotations: summary: Loki request errors (instance {{ $labels.instance }}) description: \"The {{ $labels.job }} and {{ $labels.route }} are experiencing errors\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Loki request errors"},{"location":"chap9/44loki/#3-loki-request-panic","text":"The {{ $labels.job }} is experiencing {{ printf \"%.2f\" $value }}% increase of panics - alert: LokiRequestPanic expr: sum(increase(loki_panic_total[10m])) by (namespace, job) > 0 for: 5m labels: severity: critical annotations: summary: Loki request panic (instance {{ $labels.instance }}) description: \"The {{ $labels.job }} is experiencing {{ printf \\\"%.2f\\\" $value }}% increase of panics\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Loki request panic"},{"location":"chap9/44loki/#4-loki-request-latency","text":"The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }} s 99th percentile latency - alert: LokiRequestLatency expr: (histogram_quantile(0.99, sum(rate(loki_request_duration_seconds_bucket{route!~\"(?i).*tail.*\"}[5m])) by (le))) > 1 for: 5m labels: severity: critical annotations: summary: Loki request latency (instance {{ $labels.instance }}) description: \"The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \\\"%.2f\\\" $value }}s 99th percentile latency\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Loki request latency"},{"location":"chap9/45Promtail/","text":"3. Promtail 1. Promtail request errors The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }}% errors. - alert: PromtailRequestErrors expr: 100 * sum(rate(promtail_request_duration_seconds_count{status_code=~\"5..|failed\"}[1m])) by (namespace, job, route, instance) / sum(rate(promtail_request_duration_seconds_count[1m])) by (namespace, job, route, instance) > 10 for: 5m labels: severity: critical annotations: summary: Promtail request errors (instance {{ $labels.instance }}) description: \"The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \\\"%.2f\\\" $value }}% errors.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Promtail request latency The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }}s 99th percentile latency. - alert: PromtailRequestLatency expr: histogram_quantile(0.99, sum(rate(promtail_request_duration_seconds_bucket[5m])) by (le)) > 1 for: 5m labels: severity: critical annotations: summary: Promtail request latency (instance {{ $labels.instance }}) description: \"The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \\\"%.2f\\\" $value }}s 99th percentile latency.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Promtail"},{"location":"chap9/45Promtail/#3-promtail","text":"","title":"3. Promtail"},{"location":"chap9/45Promtail/#1-promtail-request-errors","text":"The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }}% errors. - alert: PromtailRequestErrors expr: 100 * sum(rate(promtail_request_duration_seconds_count{status_code=~\"5..|failed\"}[1m])) by (namespace, job, route, instance) / sum(rate(promtail_request_duration_seconds_count[1m])) by (namespace, job, route, instance) > 10 for: 5m labels: severity: critical annotations: summary: Promtail request errors (instance {{ $labels.instance }}) description: \"The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \\\"%.2f\\\" $value }}% errors.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Promtail request errors"},{"location":"chap9/45Promtail/#2-promtail-request-latency","text":"The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }}s 99th percentile latency. - alert: PromtailRequestLatency expr: histogram_quantile(0.99, sum(rate(promtail_request_duration_seconds_bucket[5m])) by (le)) > 1 for: 5m labels: severity: critical annotations: summary: Promtail request latency (instance {{ $labels.instance }}) description: \"The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \\\"%.2f\\\" $value }}s 99th percentile latency.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Promtail request latency"},{"location":"chap9/46Cortex/","text":"4 Cortex 1. Cortex ruler configuration reload failure Cortex ruler configuration reload failure (instance {{ $labels.instance }}) - alert: CortexRulerConfigurationReloadFailure expr: cortex_ruler_config_last_reload_successful != 1 for: 0m labels: severity: warning annotations: summary: Cortex ruler configuration reload failure (instance {{ $labels.instance }}) description: \"Cortex ruler configuration reload failure (instance {{ $labels.instance }})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Cortex not connected to Alertmanager Cortex not connected to Alertmanager (instance {{ $labels.instance }}) - alert: CortexNotConnectedToAlertmanager expr: cortex_prometheus_notifications_alertmanagers_discovered < 1 for: 0m labels: severity: critical annotations: summary: Cortex not connected to Alertmanager (instance {{ $labels.instance }}) description: \"Cortex not connected to Alertmanager (instance {{ $labels.instance }})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Cortex notification are being dropped Cortex notification are being dropped due to errors (instance {{ $labels.instance }} ) - alert: CortexNotificationAreBeingDropped expr: rate(cortex_prometheus_notifications_dropped_total[5m]) > 0 for: 0m labels: severity: critical annotations: summary: Cortex notification are being dropped (instance {{ $labels.instance }}) description: \"Cortex notification are being dropped due to errors (instance {{ $labels.instance }})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Cortex notification error Cortex is failing when sending alert notifications (instance {{ $labels.instance }} ) - alert: CortexNotificationError expr: rate(cortex_prometheus_notifications_errors_total[5m]) > 0 for: 0m labels: severity: critical annotations: summary: Cortex notification error (instance {{ $labels.instance }}) description: \"Cortex is failing when sending alert notifications (instance {{ $labels.instance }})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5. Cortex ingester unhealthy Cortex has an unhealthy ingester - alert: CortexIngesterUnhealthy expr: cortex_ring_members{state=\"Unhealthy\", name=\"ingester\"} > 0 for: 0m labels: severity: critical annotations: summary: Cortex ingester unhealthy (instance {{ $labels.instance }}) description: \"Cortex has an unhealthy ingester\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6. Cortex frontend queries stuck There are queued up queries in query-frontend. - alert: CortexFrontendQueriesStuck expr: sum by (job) (cortex_query_frontend_queue_length) > 0 for: 5m labels: severity: critical annotations: summary: Cortex frontend queries stuck (instance {{ $labels.instance }}) description: \"There are queued up queries in query-frontend.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4 Cortex"},{"location":"chap9/46Cortex/#4-cortex","text":"","title":"4 Cortex"},{"location":"chap9/46Cortex/#1-cortex-ruler-configuration-reload-failure","text":"Cortex ruler configuration reload failure (instance {{ $labels.instance }}) - alert: CortexRulerConfigurationReloadFailure expr: cortex_ruler_config_last_reload_successful != 1 for: 0m labels: severity: warning annotations: summary: Cortex ruler configuration reload failure (instance {{ $labels.instance }}) description: \"Cortex ruler configuration reload failure (instance {{ $labels.instance }})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Cortex ruler configuration reload failure"},{"location":"chap9/46Cortex/#2-cortex-not-connected-to-alertmanager","text":"Cortex not connected to Alertmanager (instance {{ $labels.instance }}) - alert: CortexNotConnectedToAlertmanager expr: cortex_prometheus_notifications_alertmanagers_discovered < 1 for: 0m labels: severity: critical annotations: summary: Cortex not connected to Alertmanager (instance {{ $labels.instance }}) description: \"Cortex not connected to Alertmanager (instance {{ $labels.instance }})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Cortex not connected to Alertmanager"},{"location":"chap9/46Cortex/#3-cortex-notification-are-being-dropped","text":"Cortex notification are being dropped due to errors (instance {{ $labels.instance }} ) - alert: CortexNotificationAreBeingDropped expr: rate(cortex_prometheus_notifications_dropped_total[5m]) > 0 for: 0m labels: severity: critical annotations: summary: Cortex notification are being dropped (instance {{ $labels.instance }}) description: \"Cortex notification are being dropped due to errors (instance {{ $labels.instance }})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Cortex notification are being dropped"},{"location":"chap9/46Cortex/#4-cortex-notification-error","text":"Cortex is failing when sending alert notifications (instance {{ $labels.instance }} ) - alert: CortexNotificationError expr: rate(cortex_prometheus_notifications_errors_total[5m]) > 0 for: 0m labels: severity: critical annotations: summary: Cortex notification error (instance {{ $labels.instance }}) description: \"Cortex is failing when sending alert notifications (instance {{ $labels.instance }})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Cortex notification error"},{"location":"chap9/46Cortex/#5-cortex-ingester-unhealthy","text":"Cortex has an unhealthy ingester - alert: CortexIngesterUnhealthy expr: cortex_ring_members{state=\"Unhealthy\", name=\"ingester\"} > 0 for: 0m labels: severity: critical annotations: summary: Cortex ingester unhealthy (instance {{ $labels.instance }}) description: \"Cortex has an unhealthy ingester\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5. Cortex ingester unhealthy"},{"location":"chap9/46Cortex/#6-cortex-frontend-queries-stuck","text":"There are queued up queries in query-frontend. - alert: CortexFrontendQueriesStuck expr: sum by (job) (cortex_query_frontend_queue_length) > 0 for: 5m labels: severity: critical annotations: summary: Cortex frontend queries stuck (instance {{ $labels.instance }}) description: \"There are queued up queries in query-frontend.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6. Cortex frontend queries stuck"},{"location":"chap9/47jekins/","text":"5 Jenkins https://plugins.jenkins.io/prometheus/ 1. Jenkins offline Jenkins offline: {{$labels.instance}} in realm {{$labels.realm}}/{{$labels.env}} ( {{$labels.region}} ) - alert: JenkinsOffline expr: jenkins_node_offline_value > 1 for: 0m labels: severity: critical annotations: summary: Jenkins offline (instance {{ $labels.instance }}) description: \"Jenkins offline: `{{$labels.instance}}` in realm {{$labels.realm}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Jenkins healthcheck Jenkins healthcheck score: {{$value}} . Healthcheck failure for {{$labels.instance}} in realm {{$labels.realm}}/{{$labels.env}} ( {{$labels.region}} ) - alert: JenkinsHealthcheck expr: jenkins_health_check_score < 1 for: 0m labels: severity: critical annotations: summary: Jenkins healthcheck (instance {{ $labels.instance }}) description: \"Jenkins healthcheck score: {{$value}}. Healthcheck failure for `{{$labels.instance}}` in realm {{$labels.realm}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Jenkins outdated plugins {{ $value }} plugins need update - alert: JenkinsOutdatedPlugins expr: sum(jenkins_plugins_withUpdate) by (instance) > 3 for: 1d labels: severity: warning annotations: summary: Jenkins outdated plugins (instance {{ $labels.instance }}) description: \"{{ $value }} plugins need update\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Jenkins builds health score Healthcheck failure for {{$labels.instance}} in realm {{$labels.realm}}/{{$labels.env}} ( {{$labels.region}} ) - alert: JenkinsBuildsHealthScore expr: default_jenkins_builds_health_score < 1 for: 0m labels: severity: critical annotations: summary: Jenkins builds health score (instance {{ $labels.instance }}) description: \"Healthcheck failure for `{{$labels.instance}}` in realm {{$labels.realm}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5. Jenkins run failure total Job run failures: ( {{$value}} ) {{$labels.jenkins_job}} . Healthcheck failure for {{$labels.instance}} in realm {{$labels.realm}}/{{$labels.env}} ({{$labels.region}} ) - alert: JenkinsRunFailureTotal expr: delta(jenkins_runs_failure_total[1h]) > 100 for: 0m labels: severity: warning annotations: summary: Jenkins run failure total (instance {{ $labels.instance }}) description: \"Job run failures: ({{$value}}) {{$labels.jenkins_job}}. Healthcheck failure for `{{$labels.instance}}` in realm {{$labels.realm}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6. Jenkins build tests failing Last build tests failed: {{$labels.jenkins_job}} . Failed build Tests for job {{$labels.jenkins_job}} on {{$labels.instance}}/{{$labels.env}} ( {{$labels.region}} ) - alert: JenkinsBuildTestsFailing expr: default_jenkins_builds_last_build_tests_failing > 0 for: 0m labels: severity: warning annotations: summary: Jenkins build tests failing (instance {{ $labels.instance }}) description: \"Last build tests failed: {{$labels.jenkins_job}}. Failed build Tests for job `{{$labels.jenkins_job}}` on {{$labels.instance}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7. Jenkins last build failed Last build failed: {{$labels.jenkins_job}} . Failed build for job {{$labels.jenkins_job}} on {{$labels.instance}}/{{$labels.env}} ( {{$labels.region}} ) # * RUNNING -1 true - The build had no errors. # * SUCCESS 0 true - The build had no errors. # * UNSTABLE 1 true - The build had some errors but they were not fatal. For example, some tests failed. # * FAILURE 2 false - The build had a fatal error. # * NOT_BUILT 3 false - The module was not built. # * ABORTED 4 false - The build was manually aborted. - alert: JenkinsLastBuildFailed expr: default_jenkins_builds_last_build_result_ordinal == 2 for: 0m labels: severity: warning annotations: summary: Jenkins last build failed (instance {{ $labels.instance }}) description: \"Last build failed: {{$labels.jenkins_job}}. Failed build for job `{{$labels.jenkins_job}}` on {{$labels.instance}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5 Jenkins"},{"location":"chap9/47jekins/#5-jenkins","text":"https://plugins.jenkins.io/prometheus/","title":"5 Jenkins"},{"location":"chap9/47jekins/#1-jenkins-offline","text":"Jenkins offline: {{$labels.instance}} in realm {{$labels.realm}}/{{$labels.env}} ( {{$labels.region}} ) - alert: JenkinsOffline expr: jenkins_node_offline_value > 1 for: 0m labels: severity: critical annotations: summary: Jenkins offline (instance {{ $labels.instance }}) description: \"Jenkins offline: `{{$labels.instance}}` in realm {{$labels.realm}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Jenkins offline"},{"location":"chap9/47jekins/#2-jenkins-healthcheck","text":"Jenkins healthcheck score: {{$value}} . Healthcheck failure for {{$labels.instance}} in realm {{$labels.realm}}/{{$labels.env}} ( {{$labels.region}} ) - alert: JenkinsHealthcheck expr: jenkins_health_check_score < 1 for: 0m labels: severity: critical annotations: summary: Jenkins healthcheck (instance {{ $labels.instance }}) description: \"Jenkins healthcheck score: {{$value}}. Healthcheck failure for `{{$labels.instance}}` in realm {{$labels.realm}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Jenkins healthcheck"},{"location":"chap9/47jekins/#3-jenkins-outdated-plugins","text":"{{ $value }} plugins need update - alert: JenkinsOutdatedPlugins expr: sum(jenkins_plugins_withUpdate) by (instance) > 3 for: 1d labels: severity: warning annotations: summary: Jenkins outdated plugins (instance {{ $labels.instance }}) description: \"{{ $value }} plugins need update\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Jenkins outdated plugins"},{"location":"chap9/47jekins/#4-jenkins-builds-health-score","text":"Healthcheck failure for {{$labels.instance}} in realm {{$labels.realm}}/{{$labels.env}} ( {{$labels.region}} ) - alert: JenkinsBuildsHealthScore expr: default_jenkins_builds_health_score < 1 for: 0m labels: severity: critical annotations: summary: Jenkins builds health score (instance {{ $labels.instance }}) description: \"Healthcheck failure for `{{$labels.instance}}` in realm {{$labels.realm}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Jenkins builds health score"},{"location":"chap9/47jekins/#5-jenkins-run-failure-total","text":"Job run failures: ( {{$value}} ) {{$labels.jenkins_job}} . Healthcheck failure for {{$labels.instance}} in realm {{$labels.realm}}/{{$labels.env}} ({{$labels.region}} ) - alert: JenkinsRunFailureTotal expr: delta(jenkins_runs_failure_total[1h]) > 100 for: 0m labels: severity: warning annotations: summary: Jenkins run failure total (instance {{ $labels.instance }}) description: \"Job run failures: ({{$value}}) {{$labels.jenkins_job}}. Healthcheck failure for `{{$labels.instance}}` in realm {{$labels.realm}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5. Jenkins run failure total"},{"location":"chap9/47jekins/#6-jenkins-build-tests-failing","text":"Last build tests failed: {{$labels.jenkins_job}} . Failed build Tests for job {{$labels.jenkins_job}} on {{$labels.instance}}/{{$labels.env}} ( {{$labels.region}} ) - alert: JenkinsBuildTestsFailing expr: default_jenkins_builds_last_build_tests_failing > 0 for: 0m labels: severity: warning annotations: summary: Jenkins build tests failing (instance {{ $labels.instance }}) description: \"Last build tests failed: {{$labels.jenkins_job}}. Failed build Tests for job `{{$labels.jenkins_job}}` on {{$labels.instance}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6. Jenkins build tests failing"},{"location":"chap9/47jekins/#7-jenkins-last-build-failed","text":"Last build failed: {{$labels.jenkins_job}} . Failed build for job {{$labels.jenkins_job}} on {{$labels.instance}}/{{$labels.env}} ( {{$labels.region}} ) # * RUNNING -1 true - The build had no errors. # * SUCCESS 0 true - The build had no errors. # * UNSTABLE 1 true - The build had some errors but they were not fatal. For example, some tests failed. # * FAILURE 2 false - The build had a fatal error. # * NOT_BUILT 3 false - The module was not built. # * ABORTED 4 false - The build was manually aborted. - alert: JenkinsLastBuildFailed expr: default_jenkins_builds_last_build_result_ordinal == 2 for: 0m labels: severity: warning annotations: summary: Jenkins last build failed (instance {{ $labels.instance }}) description: \"Last build failed: {{$labels.jenkins_job}}. Failed build for job `{{$labels.jenkins_job}}` on {{$labels.instance}}/{{$labels.env}} ({{$labels.region}})\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7. Jenkins last build failed"},{"location":"chap9/4Nginx/","text":"4 Nginx : nginx-lua-prometheus https://github.com/knyar/nginx-lua-prometheus 1. HTTP errors 4xx Too many HTTP requests with status 4xx (> 5%) - alert: HttpErrors4xx expr: sum(rate(nginx_http_requests_total{status=~\"^4..\"}[1m])) / sum(rate(nginx_http_requests_total[1m])) * 100 > 5 for: 5m labels: severity: error annotations: summary: \"HTTP errors 4xx (instance {{ $labels.instance }})\" description: \"Too many HTTP requests with status 4xx (> 5%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2. HTTP errors 5xx Too many HTTP requests with status 5xx (> 5%) - alert: HttpErrors5xx expr: sum(rate(nginx_http_requests_total{status=~\"^5..\"}[1m])) / sum(rate(nginx_http_requests_total[1m])) * 100 > 5 for: 5m labels: severity: error annotations: summary: \"HTTP errors 5xx (instance {{ $labels.instance }})\" description: \"Too many HTTP requests with status 5xx (> 5%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2. Nginx latency high Nginx p99 latency is higher than 3 seconds - alert: NginxLatencyHigh expr: histogram_quantile(0.99, sum(rate(nginx_http_request_duration_seconds_bucket[2m])) by (host, node)) > 3 for: 2m labels: severity: warning annotations: summary: Nginx latency high (instance {{ $labels.instance }}) description: \"Nginx p99 latency is higher than 3 seconds\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"**4 Nginx : nginx-lua-prometheus**"},{"location":"chap9/4Nginx/#4-nginx-nginx-lua-prometheus","text":"https://github.com/knyar/nginx-lua-prometheus","title":"4 Nginx : nginx-lua-prometheus"},{"location":"chap9/4Nginx/#1-http-errors-4xx","text":"Too many HTTP requests with status 4xx (> 5%) - alert: HttpErrors4xx expr: sum(rate(nginx_http_requests_total{status=~\"^4..\"}[1m])) / sum(rate(nginx_http_requests_total[1m])) * 100 > 5 for: 5m labels: severity: error annotations: summary: \"HTTP errors 4xx (instance {{ $labels.instance }})\" description: \"Too many HTTP requests with status 4xx (> 5%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1. HTTP errors 4xx"},{"location":"chap9/4Nginx/#2-http-errors-5xx","text":"Too many HTTP requests with status 5xx (> 5%) - alert: HttpErrors5xx expr: sum(rate(nginx_http_requests_total{status=~\"^5..\"}[1m])) / sum(rate(nginx_http_requests_total[1m])) * 100 > 5 for: 5m labels: severity: error annotations: summary: \"HTTP errors 5xx (instance {{ $labels.instance }})\" description: \"Too many HTTP requests with status 5xx (> 5%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2. HTTP errors 5xx"},{"location":"chap9/4Nginx/#2-nginx-latency-high","text":"Nginx p99 latency is higher than 3 seconds - alert: NginxLatencyHigh expr: histogram_quantile(0.99, sum(rate(nginx_http_request_duration_seconds_bucket[2m])) by (host, node)) > 3 for: 2m labels: severity: warning annotations: summary: Nginx latency high (instance {{ $labels.instance }}) description: \"Nginx p99 latency is higher than 3 seconds\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Nginx latency high"},{"location":"chap9/4runtimes/","text":"4 Runtimes 1 PHP-FPM PHP-FPM max-children reached 2 Java : java-client JVM memory filling up 3 Sidekiq Sidekiq queue size Sidekiq scheduling latency too high","title":"4 Runtimes"},{"location":"chap9/4runtimes/#4-runtimes","text":"","title":"4 Runtimes"},{"location":"chap9/4runtimes/#1-php-fpm","text":"PHP-FPM max-children reached","title":"1 PHP-FPM"},{"location":"chap9/4runtimes/#2-java-java-client","text":"JVM memory filling up","title":"2 Java : java-client"},{"location":"chap9/4runtimes/#3-sidekiq","text":"Sidekiq queue size Sidekiq scheduling latency too high","title":"3 Sidekiq"},{"location":"chap9/5Orchestrators/","text":"5 Orchestrators 1 Kubernetes Kubernetes Node ready Kubernetes MemoryPressure Kubernetes DiskPressure Kubernetes OutOfDisk Kubernetes out of capacity Kubernetes container oom killer Kubernetes Job failed Kubernetes CronJob suspended Kubernetes PersistentVolumeClaim pending Volume out of disk space Volume full in four days Kubernetes PersistentVolume error StatefulSet down Kubernetes HPA scaling ability Kubernetes HPA metric availability Kubernetes HPA scale capability Kubernetes Pod not healthy Kubernetes pod crash looping Kubernetes ReplicasSet mismatch Kubernetes Deployment replicas mismatch Kubernetes StatefulSet replicas mismatch Kubernetes Deployment generation mismatch Kubernetes StatefulSet generation mismatch Kubernetes StatefulSet update not rolled out Kubernetes DaemonSet rollout stuck Kubernetes DaemonSet misscheduled Kubernetes CronJob too long Kubernetes job slow completion Kubernetes API server errors Kubernetes API client errors Kubernetes client certificate expires next week Kubernetes client certificate expires soon Kubernetes API server latency 2 Nomad Nomad job failed Nomad job lost Nomad job queued Nomad blocked evaluation 3 Consul Service healthcheck failed Missing Consul master node Consul agent unhealthy 4 Etcd Insufficient Members No Leader High number of leader changes High number of failed GRPC requests High number of failed GRPC requests GRPC requests slow High number of failed HTTP requests High number of failed HTTP requests HTTP requests slow Etcd member communication slow High number of failed proposals High fsync durations High commit durations 5 Linkerd Linkerd high error rate 6 Istio Istio Kubernetes gateway availability drop Istio Pilot high total request rate Istio Mixer Prometheus dispatches low Istio high total request rate Istio low total request rate Istio high 4xx error rate Istio high 5xx error rate Istio high request latency Istio latency 99 percentile Istio Pilot Duplicate Entry","title":"5 Orchestrators"},{"location":"chap9/5Orchestrators/#5-orchestrators","text":"","title":"5 Orchestrators"},{"location":"chap9/5Orchestrators/#1-kubernetes","text":"Kubernetes Node ready Kubernetes MemoryPressure Kubernetes DiskPressure Kubernetes OutOfDisk Kubernetes out of capacity Kubernetes container oom killer Kubernetes Job failed Kubernetes CronJob suspended Kubernetes PersistentVolumeClaim pending Volume out of disk space Volume full in four days Kubernetes PersistentVolume error StatefulSet down Kubernetes HPA scaling ability Kubernetes HPA metric availability Kubernetes HPA scale capability Kubernetes Pod not healthy Kubernetes pod crash looping Kubernetes ReplicasSet mismatch Kubernetes Deployment replicas mismatch Kubernetes StatefulSet replicas mismatch Kubernetes Deployment generation mismatch Kubernetes StatefulSet generation mismatch Kubernetes StatefulSet update not rolled out Kubernetes DaemonSet rollout stuck Kubernetes DaemonSet misscheduled Kubernetes CronJob too long Kubernetes job slow completion Kubernetes API server errors Kubernetes API client errors Kubernetes client certificate expires next week Kubernetes client certificate expires soon Kubernetes API server latency","title":"1 Kubernetes"},{"location":"chap9/5Orchestrators/#2-nomad","text":"Nomad job failed Nomad job lost Nomad job queued Nomad blocked evaluation","title":"2 Nomad"},{"location":"chap9/5Orchestrators/#3-consul","text":"Service healthcheck failed Missing Consul master node Consul agent unhealthy","title":"3 Consul"},{"location":"chap9/5Orchestrators/#4-etcd","text":"Insufficient Members No Leader High number of leader changes High number of failed GRPC requests High number of failed GRPC requests GRPC requests slow High number of failed HTTP requests High number of failed HTTP requests HTTP requests slow Etcd member communication slow High number of failed proposals High fsync durations High commit durations","title":"4 Etcd"},{"location":"chap9/5Orchestrators/#5-linkerd","text":"Linkerd high error rate","title":"5 Linkerd"},{"location":"chap9/5Orchestrators/#6-istio","text":"Istio Kubernetes gateway availability drop Istio Pilot high total request rate Istio Mixer Prometheus dispatches low Istio high total request rate Istio low total request rate Istio high 4xx error rate Istio high 5xx error rate Istio high request latency Istio latency 99 percentile Istio Pilot Duplicate Entry","title":"6 Istio"},{"location":"chap9/5RabbitMQ/","text":"7. RabbitMQ rabbitmq/rabbitmq-prometheus 1. Rabbitmq node down Less than 3 nodes running in RabbitMQ cluster - alert: RabbitmqNodeDown expr: sum(rabbitmq_build_info) < 3 for: 0m labels: severity: critical annotations: summary: Rabbitmq node down (instance {{ $labels.instance }}) description: \"Less than 3 nodes running in RabbitMQ cluster\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. Rabbitmq node not distributed Distribution link state is not 'up' - alert: RabbitmqNodeNotDistributed expr: erlang_vm_dist_node_state < 3 for: 0m labels: severity: critical annotations: summary: Rabbitmq node not distributed (instance {{ $labels.instance }}) description: \"Distribution link state is not 'up'\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Rabbitmq instances different versions Running different version of Rabbitmq in the same cluster, can lead to failure. - alert: RabbitmqInstancesDifferentVersions expr: count(count(rabbitmq_build_info) by (rabbitmq_version)) > 1 for: 1h labels: severity: warning annotations: summary: Rabbitmq instances different versions (instance {{ $labels.instance }}) description: \"Running different version of Rabbitmq in the same cluster, can lead to failure.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Rabbitmq memory high A node use more than 90% of allocated RAM - alert: RabbitmqMemoryHigh expr: rabbitmq_process_resident_memory_bytes / rabbitmq_resident_memory_limit_bytes * 100 > 90 for: 2m labels: severity: warning annotations: summary: Rabbitmq memory high (instance {{ $labels.instance }}) description: \"A node use more than 90% of allocated RAM\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5. Rabbitmq file descriptors usage A node use more than 90% of file descriptors - alert: RabbitmqFileDescriptorsUsage expr: rabbitmq_process_open_fds / rabbitmq_process_max_fds * 100 > 90 for: 2m labels: severity: warning annotations: summary: Rabbitmq file descriptors usage (instance {{ $labels.instance }}) description: \"A node use more than 90% of file descriptors\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6. Rabbitmq too many unack messages Too many unacknowledged messages - alert: RabbitmqTooManyUnackMessages expr: sum(rabbitmq_queue_messages_unacked) BY (queue) > 1000 for: 1m labels: severity: warning annotations: summary: Rabbitmq too many unack messages (instance {{ $labels.instance }}) description: \"Too many unacknowledged messages\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7 Rabbitmq too many connections The total connections of a node is too high - alert: RabbitmqTooManyConnections expr: rabbitmq_connections > 1000 for: 2m labels: severity: warning annotations: summary: Rabbitmq too many connections (instance {{ $labels.instance }}) description: \"The total connections of a node is too high\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 8 Rabbitmq no queue consumer A queue has less than 1 consumer - alert: RabbitmqNoQueueConsumer expr: rabbitmq_queue_consumers < 1 for: 1m labels: severity: warning annotations: summary: Rabbitmq no queue consumer (instance {{ $labels.instance }}) description: \"A queue has less than 1 consumer\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 9. Rabbitmq unroutable messages A queue has unroutable messages - alert: RabbitmqUnroutableMessages expr: increase(rabbitmq_channel_messages_unroutable_returned_total[1m]) > 0 or increase(rabbitmq_channel_messages_unroutable_dropped_total[1m]) > 0 for: 2m labels: severity: warning annotations: summary: Rabbitmq unroutable messages (instance {{ $labels.instance }}) description: \"A queue has unroutable messages\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2 RabbitMQ : kbudde/rabbitmq-exporter 10.1. Rabbitmq node down RabbitMQ node down - alert: RabbitmqDown expr: rabbitmq_up == 0 for: 5m labels: severity: error annotations: summary: \"Rabbitmq down (instance {{ $labels.instance }})\" description: \"RabbitMQ node down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10.2. Rabbitmq Cluster down Less than 3 nodes running in RabbitMQ cluster - alert: ClusterDown expr: rabbitmq_running < 3 for: 5m labels: severity: error annotations: summary: \"Cluster down (instance {{ $labels.instance }})\" description: \"Less than 3 nodes running in RabbitMQ cluster\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10.3. Rabbitmq cluster partition Cluster partition - alert: ClusterPartition expr: rabbitmq_partitions > 0 for: 5m labels: severity: error annotations: summary: \"Cluster partition (instance {{ $labels.instance }})\" description: \"Cluster partition\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10.4. Rabbitmq out of memory Memory available for RabbmitMQ is low (< 10%) - alert: OutOfMemory expr: rabbitmq_node_mem_used / rabbitmq_node_mem_limit * 100 > 90 for: 5m labels: severity: warning annotations: summary: \"Out of memory (instance {{ $labels.instance }})\" description: \"Memory available for RabbmitMQ is low (< 10%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10.5. Too many connections RabbitMQ instance has too many connections (> 1000) - alert: TooManyConnections expr: rabbitmq_connectionsTotal > 1000 for: 5m labels: severity: warning annotations: summary: \"Too many connections (instance {{ $labels.instance }})\" description: \"RabbitMQ instance has too many connections (> 1000)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10.6. Dead letter queue filling up Dead letter queue is filling up (> 10 msgs) - alert: DeadLetterQueueFillingUp expr: rabbitmq_queue_messages{queue=\"my-dead-letter-queue\"} > 10 for: 5m labels: severity: error annotations: summary: \"Dead letter queue filling up (instance {{ $labels.instance }})\" description: \"Dead letter queue is filling up (> 10 msgs)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10.7. Too many messages in queue Queue is filling up (> 1000 msgs) - alert: TooManyMessagesInQueue expr: rabbitmq_queue_messages_ready{queue=\"my-queue\"} > 1000 for: 5m labels: severity: warning annotations: summary: \"Too many messages in queue (instance {{ $labels.instance }})\" description: \"Queue is filling up (> 1000 msgs)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10.8. Rabbitmq Slow queue consuming Queue messages are consumed slowly (> 60s) - alert: SlowQueueConsuming expr: time() - rabbitmq_queue_head_message_timestamp{queue=\"my-queue\"} > 60 for: 5m labels: severity: warning annotations: summary: \"Slow queue consuming (instance {{ $labels.instance }})\" description: \"Queue messages are consumed slowly (> 60s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10.9. No consumer Queue has no consumer - alert: NoConsumer expr: rabbitmq_queue_consumers == 0 for: 5m labels: severity: error annotations: summary: \"No consumer (instance {{ $labels.instance }})\" description: \"Queue has no consumer\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10.10. Too many consumers Queue should have only 1 consumer - alert: TooManyConsumers expr: rabbitmq_queue_consumers > 1 for: 5m labels: severity: error annotations: summary: \"Too many consumers (instance {{ $labels.instance }})\" description: \"Queue should have only 1 consumer\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10.11. Unactive exchange Exchange receive less than 5 msgs per second - alert: UnactiveExchange expr: rate(rabbitmq_exchange_messages_published_in_total{exchange=\"my-exchange\"}[1m]) < 5 for: 5m labels: severity: warning annotations: summary: \"Unactive exchange (instance {{ $labels.instance }})\" description: \"Exchange receive less than 5 msgs per second\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"7. RabbitMQ"},{"location":"chap9/5RabbitMQ/#7-rabbitmq","text":"","title":"7. RabbitMQ"},{"location":"chap9/5RabbitMQ/#rabbitmqrabbitmq-prometheus","text":"","title":"rabbitmq/rabbitmq-prometheus"},{"location":"chap9/5RabbitMQ/#1-rabbitmq-node-down","text":"Less than 3 nodes running in RabbitMQ cluster - alert: RabbitmqNodeDown expr: sum(rabbitmq_build_info) < 3 for: 0m labels: severity: critical annotations: summary: Rabbitmq node down (instance {{ $labels.instance }}) description: \"Less than 3 nodes running in RabbitMQ cluster\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. Rabbitmq node down"},{"location":"chap9/5RabbitMQ/#2-rabbitmq-node-not-distributed","text":"Distribution link state is not 'up' - alert: RabbitmqNodeNotDistributed expr: erlang_vm_dist_node_state < 3 for: 0m labels: severity: critical annotations: summary: Rabbitmq node not distributed (instance {{ $labels.instance }}) description: \"Distribution link state is not 'up'\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Rabbitmq node not distributed"},{"location":"chap9/5RabbitMQ/#3-rabbitmq-instances-different-versions","text":"Running different version of Rabbitmq in the same cluster, can lead to failure. - alert: RabbitmqInstancesDifferentVersions expr: count(count(rabbitmq_build_info) by (rabbitmq_version)) > 1 for: 1h labels: severity: warning annotations: summary: Rabbitmq instances different versions (instance {{ $labels.instance }}) description: \"Running different version of Rabbitmq in the same cluster, can lead to failure.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Rabbitmq instances different versions"},{"location":"chap9/5RabbitMQ/#4-rabbitmq-memory-high","text":"A node use more than 90% of allocated RAM - alert: RabbitmqMemoryHigh expr: rabbitmq_process_resident_memory_bytes / rabbitmq_resident_memory_limit_bytes * 100 > 90 for: 2m labels: severity: warning annotations: summary: Rabbitmq memory high (instance {{ $labels.instance }}) description: \"A node use more than 90% of allocated RAM\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Rabbitmq memory high"},{"location":"chap9/5RabbitMQ/#5-rabbitmq-file-descriptors-usage","text":"A node use more than 90% of file descriptors - alert: RabbitmqFileDescriptorsUsage expr: rabbitmq_process_open_fds / rabbitmq_process_max_fds * 100 > 90 for: 2m labels: severity: warning annotations: summary: Rabbitmq file descriptors usage (instance {{ $labels.instance }}) description: \"A node use more than 90% of file descriptors\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5. Rabbitmq file descriptors usage"},{"location":"chap9/5RabbitMQ/#6-rabbitmq-too-many-unack-messages","text":"Too many unacknowledged messages - alert: RabbitmqTooManyUnackMessages expr: sum(rabbitmq_queue_messages_unacked) BY (queue) > 1000 for: 1m labels: severity: warning annotations: summary: Rabbitmq too many unack messages (instance {{ $labels.instance }}) description: \"Too many unacknowledged messages\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6. Rabbitmq too many unack messages"},{"location":"chap9/5RabbitMQ/#7-rabbitmq-too-many-connections","text":"The total connections of a node is too high - alert: RabbitmqTooManyConnections expr: rabbitmq_connections > 1000 for: 2m labels: severity: warning annotations: summary: Rabbitmq too many connections (instance {{ $labels.instance }}) description: \"The total connections of a node is too high\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7 Rabbitmq too many connections"},{"location":"chap9/5RabbitMQ/#8-rabbitmq-no-queue-consumer","text":"A queue has less than 1 consumer - alert: RabbitmqNoQueueConsumer expr: rabbitmq_queue_consumers < 1 for: 1m labels: severity: warning annotations: summary: Rabbitmq no queue consumer (instance {{ $labels.instance }}) description: \"A queue has less than 1 consumer\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"8 Rabbitmq no queue consumer"},{"location":"chap9/5RabbitMQ/#9-rabbitmq-unroutable-messages","text":"A queue has unroutable messages - alert: RabbitmqUnroutableMessages expr: increase(rabbitmq_channel_messages_unroutable_returned_total[1m]) > 0 or increase(rabbitmq_channel_messages_unroutable_dropped_total[1m]) > 0 for: 2m labels: severity: warning annotations: summary: Rabbitmq unroutable messages (instance {{ $labels.instance }}) description: \"A queue has unroutable messages\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9. Rabbitmq unroutable messages"},{"location":"chap9/5RabbitMQ/#2-rabbitmq-kbudderabbitmq-exporter","text":"","title":"2 RabbitMQ :  kbudde/rabbitmq-exporter"},{"location":"chap9/5RabbitMQ/#101-rabbitmq-node-down","text":"RabbitMQ node down - alert: RabbitmqDown expr: rabbitmq_up == 0 for: 5m labels: severity: error annotations: summary: \"Rabbitmq down (instance {{ $labels.instance }})\" description: \"RabbitMQ node down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10.1. Rabbitmq node down"},{"location":"chap9/5RabbitMQ/#102-rabbitmq-cluster-down","text":"Less than 3 nodes running in RabbitMQ cluster - alert: ClusterDown expr: rabbitmq_running < 3 for: 5m labels: severity: error annotations: summary: \"Cluster down (instance {{ $labels.instance }})\" description: \"Less than 3 nodes running in RabbitMQ cluster\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10.2. Rabbitmq Cluster down"},{"location":"chap9/5RabbitMQ/#103-rabbitmq-cluster-partition","text":"Cluster partition - alert: ClusterPartition expr: rabbitmq_partitions > 0 for: 5m labels: severity: error annotations: summary: \"Cluster partition (instance {{ $labels.instance }})\" description: \"Cluster partition\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10.3. Rabbitmq cluster partition"},{"location":"chap9/5RabbitMQ/#104-rabbitmq-out-of-memory","text":"Memory available for RabbmitMQ is low (< 10%) - alert: OutOfMemory expr: rabbitmq_node_mem_used / rabbitmq_node_mem_limit * 100 > 90 for: 5m labels: severity: warning annotations: summary: \"Out of memory (instance {{ $labels.instance }})\" description: \"Memory available for RabbmitMQ is low (< 10%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10.4. Rabbitmq out of memory"},{"location":"chap9/5RabbitMQ/#105-too-many-connections","text":"RabbitMQ instance has too many connections (> 1000) - alert: TooManyConnections expr: rabbitmq_connectionsTotal > 1000 for: 5m labels: severity: warning annotations: summary: \"Too many connections (instance {{ $labels.instance }})\" description: \"RabbitMQ instance has too many connections (> 1000)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10.5. Too many connections"},{"location":"chap9/5RabbitMQ/#106-dead-letter-queue-filling-up","text":"Dead letter queue is filling up (> 10 msgs) - alert: DeadLetterQueueFillingUp expr: rabbitmq_queue_messages{queue=\"my-dead-letter-queue\"} > 10 for: 5m labels: severity: error annotations: summary: \"Dead letter queue filling up (instance {{ $labels.instance }})\" description: \"Dead letter queue is filling up (> 10 msgs)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10.6. Dead letter queue filling up"},{"location":"chap9/5RabbitMQ/#107-too-many-messages-in-queue","text":"Queue is filling up (> 1000 msgs) - alert: TooManyMessagesInQueue expr: rabbitmq_queue_messages_ready{queue=\"my-queue\"} > 1000 for: 5m labels: severity: warning annotations: summary: \"Too many messages in queue (instance {{ $labels.instance }})\" description: \"Queue is filling up (> 1000 msgs)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10.7. Too many messages in queue"},{"location":"chap9/5RabbitMQ/#108-rabbitmq-slow-queue-consuming","text":"Queue messages are consumed slowly (> 60s) - alert: SlowQueueConsuming expr: time() - rabbitmq_queue_head_message_timestamp{queue=\"my-queue\"} > 60 for: 5m labels: severity: warning annotations: summary: \"Slow queue consuming (instance {{ $labels.instance }})\" description: \"Queue messages are consumed slowly (> 60s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10.8. Rabbitmq Slow queue consuming"},{"location":"chap9/5RabbitMQ/#109-no-consumer","text":"Queue has no consumer - alert: NoConsumer expr: rabbitmq_queue_consumers == 0 for: 5m labels: severity: error annotations: summary: \"No consumer (instance {{ $labels.instance }})\" description: \"Queue has no consumer\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10.9. No consumer"},{"location":"chap9/5RabbitMQ/#1010-too-many-consumers","text":"Queue should have only 1 consumer - alert: TooManyConsumers expr: rabbitmq_queue_consumers > 1 for: 5m labels: severity: error annotations: summary: \"Too many consumers (instance {{ $labels.instance }})\" description: \"Queue should have only 1 consumer\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10.10. Too many consumers"},{"location":"chap9/5RabbitMQ/#1011-unactive-exchange","text":"Exchange receive less than 5 msgs per second - alert: UnactiveExchange expr: rate(rabbitmq_exchange_messages_published_in_total{exchange=\"my-exchange\"}[1m]) < 5 for: 5m labels: severity: warning annotations: summary: \"Unactive exchange (instance {{ $labels.instance }})\" description: \"Exchange receive less than 5 msgs per second\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10.11. Unactive exchange"},{"location":"chap9/6Mysql/","text":"1. MySQL : prometheus/ mysqld_exporter https://github.com/prometheus/mysqld_exporter MYSQLDown MysqlQPSTooHigh \u57fa\u4e8ePrometheus\u6784\u5efaMySQL\u53ef\u89c6\u5316\u76d1\u63a7\u5e73\u53f0 groups: - name: MYSQL\u670d\u52a1\u76d1\u63a7 rules: - alert: MYSQLDown expr: mysql_up != 1 for: 10m labels: severity: critical annotations: summary: mysql server {{ $labels.realip }} is down. please check it in time. - alert: MysqlQPSTooHigh expr: (rate(mysql_global_status_queries{job=\"mysql_exporter\"}[5m]) or irate(mysql_global_status_queries{job=\"mysql_exporter\"}[5m])) > 300 for: 10m labels: severity: critical annotations: summary: mysql server {{ $labels.realip }} QPS is too high. please keep an eyes on it. 1. MySQL down MySQL instance is down on {{ $labels.instance }} - alert: MysqlDown expr: mysql_up == 0 for: 0m labels: severity: critical annotations: summary: MySQL down (instance {{ $labels.instance }}) description: \"MySQL instance is down on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.2. MySQL too many connections (> 80%) More than 80% of MySQL connections are in use on {{ $labels.instance }} - alert: MysqlTooManyConnections(>80%) expr: max_over_time(mysql_global_status_threads_connected[1m]) / mysql_global_variables_max_connections * 100 > 80 for: 2m labels: severity: warning annotations: summary: MySQL too many connections (> 80%) (instance {{ $labels.instance }}) description: \"More than 80% of MySQL connections are in use on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.3. MySQL high threads running More than 60% of MySQL connections are in running state on {{ $labels.instance }} - alert: MysqlHighThreadsRunning expr: max_over_time(mysql_global_status_threads_running[1m]) / mysql_global_variables_max_connections * 100 > 60 for: 2m labels: severity: warning annotations: summary: MySQL high threads running (instance {{ $labels.instance }}) description: \"More than 60% of MySQL connections are in running state on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.4. MySQL Slave IO thread not running MySQL Slave IO thread not running on {{ $labels.instance }} - alert: MysqlSlaveIoThreadNotRunning expr: mysql_slave_status_master_server_id > 0 and ON (instance) mysql_slave_status_slave_io_running == 0 for: 0m labels: severity: critical annotations: summary: MySQL Slave IO thread not running (instance {{ $labels.instance }}) description: \"MySQL Slave IO thread not running on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.5. MySQL Slave SQL thread not running MySQL Slave SQL thread not running on {{ $labels.instance }} - alert: MysqlSlaveSqlThreadNotRunning expr: mysql_slave_status_master_server_id > 0 and ON (instance) mysql_slave_status_slave_sql_running == 0 for: 0m labels: severity: critical annotations: summary: MySQL Slave SQL thread not running (instance {{ $labels.instance }}) description: \"MySQL Slave SQL thread not running on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.6. MySQL Slave replication lag MySQL replication lag on {{ $labels.instance }} - alert: MysqlSlaveReplicationLag expr: mysql_slave_status_master_server_id > 0 and ON (instance) (mysql_slave_status_seconds_behind_master - mysql_slave_status_sql_delay) > 30 for: 1m labels: severity: critical annotations: summary: MySQL Slave replication lag (instance {{ $labels.instance }}) description: \"MySQL replication lag on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.7. MySQL slow queries MySQL server mysql has some new slow query. - alert: MysqlSlowQueries expr: increase(mysql_global_status_slow_queries[1m]) > 0 for: 2m labels: severity: warning annotations: summary: MySQL slow queries (instance {{ $labels.instance }}) description: \"MySQL server mysql has some new slow query.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.8. MySQL InnoDB log waits MySQL innodb log writes stalling - alert: MysqlInnodbLogWaits expr: rate(mysql_global_status_innodb_log_waits[15m]) > 10 for: 0m labels: severity: warning annotations: summary: MySQL InnoDB log waits (instance {{ $labels.instance }}) description: \"MySQL innodb log writes stalling\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 1.9. MySQL restarted MySQL has just been restarted, less than one minute ago on {{ $labels.instance }} . - alert: MysqlRestarted expr: mysql_global_status_uptime < 60 for: 0m labels: severity: info annotations: summary: MySQL restarted (instance {{ $labels.instance }}) description: \"MySQL has just been restarted, less than one minute ago on {{ $labels.instance }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. MySQL : prometheus/`mysqld_exporter`"},{"location":"chap9/6Mysql/#1-mysql-prometheusmysqld_exporter","text":"https://github.com/prometheus/mysqld_exporter MYSQLDown MysqlQPSTooHigh \u57fa\u4e8ePrometheus\u6784\u5efaMySQL\u53ef\u89c6\u5316\u76d1\u63a7\u5e73\u53f0 groups: - name: MYSQL\u670d\u52a1\u76d1\u63a7 rules: - alert: MYSQLDown expr: mysql_up != 1 for: 10m labels: severity: critical annotations: summary: mysql server {{ $labels.realip }} is down. please check it in time. - alert: MysqlQPSTooHigh expr: (rate(mysql_global_status_queries{job=\"mysql_exporter\"}[5m]) or irate(mysql_global_status_queries{job=\"mysql_exporter\"}[5m])) > 300 for: 10m labels: severity: critical annotations: summary: mysql server {{ $labels.realip }} QPS is too high. please keep an eyes on it.","title":"1. MySQL : prometheus/mysqld_exporter"},{"location":"chap9/6Mysql/#1-mysql-down","text":"MySQL instance is down on {{ $labels.instance }} - alert: MysqlDown expr: mysql_up == 0 for: 0m labels: severity: critical annotations: summary: MySQL down (instance {{ $labels.instance }}) description: \"MySQL instance is down on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. MySQL down"},{"location":"chap9/6Mysql/#12-mysql-too-many-connections-80","text":"More than 80% of MySQL connections are in use on {{ $labels.instance }} - alert: MysqlTooManyConnections(>80%) expr: max_over_time(mysql_global_status_threads_connected[1m]) / mysql_global_variables_max_connections * 100 > 80 for: 2m labels: severity: warning annotations: summary: MySQL too many connections (> 80%) (instance {{ $labels.instance }}) description: \"More than 80% of MySQL connections are in use on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.2. MySQL too many connections (&gt; 80%)"},{"location":"chap9/6Mysql/#13-mysql-high-threads-running","text":"More than 60% of MySQL connections are in running state on {{ $labels.instance }} - alert: MysqlHighThreadsRunning expr: max_over_time(mysql_global_status_threads_running[1m]) / mysql_global_variables_max_connections * 100 > 60 for: 2m labels: severity: warning annotations: summary: MySQL high threads running (instance {{ $labels.instance }}) description: \"More than 60% of MySQL connections are in running state on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.3. MySQL high threads running"},{"location":"chap9/6Mysql/#14-mysql-slave-io-thread-not-running","text":"MySQL Slave IO thread not running on {{ $labels.instance }} - alert: MysqlSlaveIoThreadNotRunning expr: mysql_slave_status_master_server_id > 0 and ON (instance) mysql_slave_status_slave_io_running == 0 for: 0m labels: severity: critical annotations: summary: MySQL Slave IO thread not running (instance {{ $labels.instance }}) description: \"MySQL Slave IO thread not running on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.4. MySQL Slave IO thread not running"},{"location":"chap9/6Mysql/#15-mysql-slave-sql-thread-not-running","text":"MySQL Slave SQL thread not running on {{ $labels.instance }} - alert: MysqlSlaveSqlThreadNotRunning expr: mysql_slave_status_master_server_id > 0 and ON (instance) mysql_slave_status_slave_sql_running == 0 for: 0m labels: severity: critical annotations: summary: MySQL Slave SQL thread not running (instance {{ $labels.instance }}) description: \"MySQL Slave SQL thread not running on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.5. MySQL Slave SQL thread not running"},{"location":"chap9/6Mysql/#16-mysql-slave-replication-lag","text":"MySQL replication lag on {{ $labels.instance }} - alert: MysqlSlaveReplicationLag expr: mysql_slave_status_master_server_id > 0 and ON (instance) (mysql_slave_status_seconds_behind_master - mysql_slave_status_sql_delay) > 30 for: 1m labels: severity: critical annotations: summary: MySQL Slave replication lag (instance {{ $labels.instance }}) description: \"MySQL replication lag on {{ $labels.instance }}\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.6. MySQL Slave replication lag"},{"location":"chap9/6Mysql/#17-mysql-slow-queries","text":"MySQL server mysql has some new slow query. - alert: MysqlSlowQueries expr: increase(mysql_global_status_slow_queries[1m]) > 0 for: 2m labels: severity: warning annotations: summary: MySQL slow queries (instance {{ $labels.instance }}) description: \"MySQL server mysql has some new slow query.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.7. MySQL slow queries"},{"location":"chap9/6Mysql/#18-mysql-innodb-log-waits","text":"MySQL innodb log writes stalling - alert: MysqlInnodbLogWaits expr: rate(mysql_global_status_innodb_log_waits[15m]) > 10 for: 0m labels: severity: warning annotations: summary: MySQL InnoDB log waits (instance {{ $labels.instance }}) description: \"MySQL innodb log writes stalling\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.8. MySQL InnoDB log waits"},{"location":"chap9/6Mysql/#19-mysql-restarted","text":"MySQL has just been restarted, less than one minute ago on {{ $labels.instance }} . - alert: MysqlRestarted expr: mysql_global_status_uptime < 60 for: 0m labels: severity: info annotations: summary: MySQL restarted (instance {{ $labels.instance }}) description: \"MySQL has just been restarted, less than one minute ago on {{ $labels.instance }}.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1.9. MySQL restarted"},{"location":"chap9/6network_sec_storage/","text":"6 Network, security and storage 1 Ceph Ceph State Ceph monitor clock skew Ceph monitor low space Ceph OSD Down Ceph high OSD latency Ceph OSD low space Ceph OSD reweighted Ceph PG down Ceph PG incomplete Ceph PG inconsistent Ceph PG activation long Ceph PG backfill full Ceph PG unavailable 2 SpeedTest SpeedTest Slow Internet Download SpeedTest Slow Internet Upload 3 ZFS 4 OpenEBS Used pool capacity 5 Minio Disk down Minio disk space usage 6 SSL/TLS SSL certificate probe failed SSL certificate OSCP status unknown SSL certificate revoked SSL certificate expiry (< 7 days) 7 Juniper Switch is down High Bandwith Usage 1Gi High Bandwith Usage 1GiB 8 CoreDNS CoreDNS Panic Count 9 Freeswitch Freeswitch down Freeswitch Sessions Warning Freeswitch Sessions Critical 10 Hashicorp Vault Vault sealed Vault too many pending tokens Vault too many infinity tokens","title":"6 Network, security and storage"},{"location":"chap9/6network_sec_storage/#6-network-security-and-storage","text":"","title":"6 Network, security and storage"},{"location":"chap9/6network_sec_storage/#1-ceph","text":"Ceph State Ceph monitor clock skew Ceph monitor low space Ceph OSD Down Ceph high OSD latency Ceph OSD low space Ceph OSD reweighted Ceph PG down Ceph PG incomplete Ceph PG inconsistent Ceph PG activation long Ceph PG backfill full Ceph PG unavailable","title":"1 Ceph"},{"location":"chap9/6network_sec_storage/#2-speedtest","text":"SpeedTest Slow Internet Download SpeedTest Slow Internet Upload","title":"2 SpeedTest"},{"location":"chap9/6network_sec_storage/#3-zfs","text":"","title":"3 ZFS"},{"location":"chap9/6network_sec_storage/#4-openebs","text":"Used pool capacity","title":"4 OpenEBS"},{"location":"chap9/6network_sec_storage/#5-minio","text":"Disk down Minio disk space usage","title":"5 Minio"},{"location":"chap9/6network_sec_storage/#6-ssltls","text":"SSL certificate probe failed SSL certificate OSCP status unknown SSL certificate revoked SSL certificate expiry (< 7 days) 7 Juniper Switch is down High Bandwith Usage 1Gi High Bandwith Usage 1GiB 8 CoreDNS CoreDNS Panic Count 9 Freeswitch Freeswitch down Freeswitch Sessions Warning Freeswitch Sessions Critical 10 Hashicorp Vault Vault sealed Vault too many pending tokens Vault too many infinity tokens","title":"6 SSL/TLS"},{"location":"chap9/7PostgreSQL/","text":"2. PostgreSQL https://github.com/wrouesnel/postgres_exporter/ 1. PostgreSQL down PostgreSQL instance is down - alert: PostgresqlDown expr: pg_up == 0 for: 5m labels: severity: error annotations: summary: \"PostgreSQL down (instance {{ $labels.instance }})\" description: \"PostgreSQL instance is down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2. Postgresql restarted Postgresql restarted - alert: PostgresqlRestarted expr: time() - pg_postmaster_start_time_seconds < 60 for: 0m labels: severity: critical annotations: summary: Postgresql restarted (instance {{ $labels.instance }}) description: \"Postgresql restarted\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Postgresql exporter error Postgresql exporter is showing errors. A query may be buggy in query.yaml - alert: PostgresqlExporterError expr: pg_exporter_last_scrape_error > 0 for: 0m labels: severity: critical annotations: summary: Postgresql exporter error (instance {{ $labels.instance }}) description: \"Postgresql exporter is showing errors. A query may be buggy in query.yaml\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Replication lag PostgreSQL replication lag is going up (> 10s) - alert: ReplicationLag expr: pg_replication_lag > 10 for: 5m labels: severity: warning annotations: summary: \"Replication lag (instance {{ $labels.instance }})\" description: \"PostgreSQL replication lag is going up (> 10s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 5 Table not vaccumed Table has not been vaccum for 24 hours - alert: TableNotVaccumed expr: time() - pg_stat_user_tables_last_autovacuum > 60 * 60 * 24 for: 5m labels: severity: warning annotations: summary: \"Table not vaccumed (instance {{ $labels.instance }})\" description: \"Table has not been vaccum for 24 hours\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 6. Table not analyzed Table has not been analyzed for 24 hours - alert: TableNotAnalyzed expr: time() - pg_stat_user_tables_last_autoanalyze > 60 * 60 * 24 for: 5m labels: severity: warning annotations: summary: \"Table not analyzed (instance {{ $labels.instance }})\" description: \"Table has not been analyzed for 24 hours\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 7. Too many connections PostgreSQL instance has too many connections - alert: TooManyConnections expr: sum by (datname) (pg_stat_activity_count{datname!~\"template.*|postgres\"}) > 100 for: 5m labels: severity: warning annotations: summary: \"Too many connections (instance {{ $labels.instance }})\" description: \"PostgreSQL instance has too many connections\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 8. Not enough connections PostgreSQL instance should have more connections (> 5) - alert: NotEnoughConnections expr: sum by (datname) (pg_stat_activity_count{datname!~\"template.*|postgres\"}) < 5 for: 5m labels: severity: warning annotations: summary: \"Not enough connections (instance {{ $labels.instance }})\" description: \"PostgreSQL instance should have more connections (> 5)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 9. Dead locks PostgreSQL has dead-locks - alert: DeadLocks expr: rate(pg_stat_database_deadlocks{datname!~\"template.*|postgres\"}[1m]) > 0 for: 5m labels: severity: warning annotations: summary: \"Dead locks (instance {{ $labels.instance }})\" description: \"PostgreSQL has dead-locks\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10. High rollback rate Ratio of transactions being aborted compared to committed is > 2 % - alert: HighRollbackRate expr: rate(pg_stat_database_xact_rollback{datname!~\"template.*\"}[3m]) / rate(pg_stat_database_xact_commit{datname!~\"template.*\"}[3m]) > 0.02 for: 5m labels: severity: warning annotations: summary: \"High rollback rate (instance {{ $labels.instance }})\" description: \"Ratio of transactions being aborted compared to committed is > 2 %\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 11. Postgresql commit rate low Postgresql seems to be processing very few transactions - alert: PostgresqlCommitRateLow expr: rate(pg_stat_database_xact_commit[1m]) < 10 for: 2m labels: severity: critical annotations: summary: Postgresql commit rate low (instance {{ $labels.instance }}) description: \"Postgresql seems to be processing very few transactions\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 12. Postgresql low XID consumption Postgresql seems to be consuming transaction IDs very slowly - alert: PostgresqlLowXidConsumption expr: rate(pg_txid_current[1m]) < 5 for: 2m labels: severity: warning annotations: summary: Postgresql low XID consumption (instance {{ $labels.instance }}) description: \"Postgresql seems to be consuming transaction IDs very slowly\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 13. Postgresql high rate statement timeout Postgres transactions showing high rate of statement timeouts - alert: PostgresqlHighRateStatementTimeout expr: rate(postgresql_errors_total{type=\"statement_timeout\"}[1m]) > 3 for: 0m labels: severity: critical annotations: summary: Postgresql high rate statement timeout (instance {{ $labels.instance }}) description: \"Postgres transactions showing high rate of statement timeouts\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 14. Postgresql high rate deadlock Postgres detected deadlocks - alert: PostgresqlHighRateDeadlock expr: increase(postgresql_errors_total{type=\"deadlock_detected\"}[1m]) > 1 for: 0m labels: severity: critical annotations: summary: Postgresql high rate deadlock (instance {{ $labels.instance }}) description: \"Postgres detected deadlocks\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 15. Postgresql unused replication slot Unused Replication Slots - alert: PostgresqlUnusedReplicationSlot expr: pg_replication_slots_active == 0 for: 1m labels: severity: warning annotations: summary: Postgresql unused replication slot (instance {{ $labels.instance }}) description: \"Unused Replication Slots\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 16. Postgresql too many dead tuples PostgreSQL dead tuples is too large - alert: PostgresqlTooManyDeadTuples expr: ((pg_stat_user_tables_n_dead_tup > 10000) / (pg_stat_user_tables_n_live_tup + pg_stat_user_tables_n_dead_tup)) >= 0.1 unless ON(instance) (pg_replication_is_replica == 1) for: 2m labels: severity: warning annotations: summary: Postgresql too many dead tuples (instance {{ $labels.instance }}) description: \"PostgreSQL dead tuples is too large\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 17. Postgresql split brain Split Brain, too many primary Postgresql databases in read-write mode - alert: PostgresqlSplitBrain expr: count(pg_replication_is_replica == 0) != 1 for: 0m labels: severity: critical annotations: summary: Postgresql split brain (instance {{ $labels.instance }}) description: \"Split Brain, too many primary Postgresql databases in read-write mode\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 18. Postgresql promoted node Postgresql standby server has been promoted as primary node - alert: PostgresqlPromotedNode expr: pg_replication_is_replica and changes(pg_replication_is_replica[1m]) > 0 for: 0m labels: severity: warning annotations: summary: Postgresql promoted node (instance {{ $labels.instance }}) description: \"Postgresql standby server has been promoted as primary node\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 19. Postgresql configuration changed Postgres Database configuration change has occurred - alert: PostgresqlConfigurationChanged expr: {__name__=~\"pg_settings_.*\"} != ON(__name__) {__name__=~\"pg_settings_([^t]|t[^r]|tr[^a]|tra[^n]|tran[^s]|trans[^a]|transa[^c]|transac[^t]|transact[^i]|transacti[^o]|transactio[^n]|transaction[^_]|transaction_[^r]|transaction_r[^e]|transaction_re[^a]|transaction_rea[^d]|transaction_read[^_]|transaction_read_[^o]|transaction_read_o[^n]|transaction_read_on[^l]|transaction_read_onl[^y]).*\"} OFFSET 5m for: 0m labels: severity: info annotations: summary: Postgresql configuration changed (instance {{ $labels.instance }}) description: \"Postgres Database configuration change has occurred\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 20. Postgresql SSL compression active Database connections with SSL compression enabled. This may add significant jitter in replication delay. Replicas should turn off SSL compression via sslcompression=0 in recovery.conf . - alert: PostgresqlSslCompressionActive expr: sum(pg_stat_ssl_compression) > 0 for: 0m labels: severity: critical annotations: summary: Postgresql SSL compression active (instance {{ $labels.instance }}) description: \"Database connections with SSL compression enabled. This may add significant jitter in replication delay. Replicas should turn off SSL compression via `sslcompression=0` in `recovery.conf`.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 21. Postgresql too many locks acquired Too many locks acquired on the database. If this alert happens frequently, we may need to increase the postgres setting max_locks_per_transaction . - alert: PostgresqlTooManyLocksAcquired expr: ((sum (pg_locks_count)) / (pg_settings_max_locks_per_transaction * pg_settings_max_connections)) > 0.20 for: 2m labels: severity: critical annotations: summary: Postgresql too many locks acquired (instance {{ $labels.instance }}) description: \"Too many locks acquired on the database. If this alert happens frequently, we may need to increase the postgres setting max_locks_per_transaction.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 22. Slow queries PostgreSQL executes slow queries (> 1min) - alert: SlowQueries expr: avg(rate(pg_stat_activity_max_tx_duration{datname!~\"template.*\"}[1m])) BY (datname) > 60 for: 5m labels: severity: warning annotations: summary: \"Slow queries (instance {{ $labels.instance }})\" description: \"PostgreSQL executes slow queries (> 1min)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2. PostgreSQL"},{"location":"chap9/7PostgreSQL/#2-postgresql","text":"https://github.com/wrouesnel/postgres_exporter/","title":"2. PostgreSQL"},{"location":"chap9/7PostgreSQL/#1-postgresql-down","text":"PostgreSQL instance is down - alert: PostgresqlDown expr: pg_up == 0 for: 5m labels: severity: error annotations: summary: \"PostgreSQL down (instance {{ $labels.instance }})\" description: \"PostgreSQL instance is down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1. PostgreSQL down"},{"location":"chap9/7PostgreSQL/#2-postgresql-restarted","text":"Postgresql restarted - alert: PostgresqlRestarted expr: time() - pg_postmaster_start_time_seconds < 60 for: 0m labels: severity: critical annotations: summary: Postgresql restarted (instance {{ $labels.instance }}) description: \"Postgresql restarted\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Postgresql restarted"},{"location":"chap9/7PostgreSQL/#3-postgresql-exporter-error","text":"Postgresql exporter is showing errors. A query may be buggy in query.yaml - alert: PostgresqlExporterError expr: pg_exporter_last_scrape_error > 0 for: 0m labels: severity: critical annotations: summary: Postgresql exporter error (instance {{ $labels.instance }}) description: \"Postgresql exporter is showing errors. A query may be buggy in query.yaml\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Postgresql exporter error"},{"location":"chap9/7PostgreSQL/#4-replication-lag","text":"PostgreSQL replication lag is going up (> 10s) - alert: ReplicationLag expr: pg_replication_lag > 10 for: 5m labels: severity: warning annotations: summary: \"Replication lag (instance {{ $labels.instance }})\" description: \"PostgreSQL replication lag is going up (> 10s)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"4. Replication lag"},{"location":"chap9/7PostgreSQL/#5-table-not-vaccumed","text":"Table has not been vaccum for 24 hours - alert: TableNotVaccumed expr: time() - pg_stat_user_tables_last_autovacuum > 60 * 60 * 24 for: 5m labels: severity: warning annotations: summary: \"Table not vaccumed (instance {{ $labels.instance }})\" description: \"Table has not been vaccum for 24 hours\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"5 Table not vaccumed"},{"location":"chap9/7PostgreSQL/#6-table-not-analyzed","text":"Table has not been analyzed for 24 hours - alert: TableNotAnalyzed expr: time() - pg_stat_user_tables_last_autoanalyze > 60 * 60 * 24 for: 5m labels: severity: warning annotations: summary: \"Table not analyzed (instance {{ $labels.instance }})\" description: \"Table has not been analyzed for 24 hours\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"6. Table not analyzed"},{"location":"chap9/7PostgreSQL/#7-too-many-connections","text":"PostgreSQL instance has too many connections - alert: TooManyConnections expr: sum by (datname) (pg_stat_activity_count{datname!~\"template.*|postgres\"}) > 100 for: 5m labels: severity: warning annotations: summary: \"Too many connections (instance {{ $labels.instance }})\" description: \"PostgreSQL instance has too many connections\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"7. Too many connections"},{"location":"chap9/7PostgreSQL/#8-not-enough-connections","text":"PostgreSQL instance should have more connections (> 5) - alert: NotEnoughConnections expr: sum by (datname) (pg_stat_activity_count{datname!~\"template.*|postgres\"}) < 5 for: 5m labels: severity: warning annotations: summary: \"Not enough connections (instance {{ $labels.instance }})\" description: \"PostgreSQL instance should have more connections (> 5)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"8. Not enough connections"},{"location":"chap9/7PostgreSQL/#9-dead-locks","text":"PostgreSQL has dead-locks - alert: DeadLocks expr: rate(pg_stat_database_deadlocks{datname!~\"template.*|postgres\"}[1m]) > 0 for: 5m labels: severity: warning annotations: summary: \"Dead locks (instance {{ $labels.instance }})\" description: \"PostgreSQL has dead-locks\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"9. Dead locks"},{"location":"chap9/7PostgreSQL/#10-high-rollback-rate","text":"Ratio of transactions being aborted compared to committed is > 2 % - alert: HighRollbackRate expr: rate(pg_stat_database_xact_rollback{datname!~\"template.*\"}[3m]) / rate(pg_stat_database_xact_commit{datname!~\"template.*\"}[3m]) > 0.02 for: 5m labels: severity: warning annotations: summary: \"High rollback rate (instance {{ $labels.instance }})\" description: \"Ratio of transactions being aborted compared to committed is > 2 %\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10. High rollback rate"},{"location":"chap9/7PostgreSQL/#11-postgresql-commit-rate-low","text":"Postgresql seems to be processing very few transactions - alert: PostgresqlCommitRateLow expr: rate(pg_stat_database_xact_commit[1m]) < 10 for: 2m labels: severity: critical annotations: summary: Postgresql commit rate low (instance {{ $labels.instance }}) description: \"Postgresql seems to be processing very few transactions\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"11. Postgresql commit rate low"},{"location":"chap9/7PostgreSQL/#12-postgresql-low-xid-consumption","text":"Postgresql seems to be consuming transaction IDs very slowly - alert: PostgresqlLowXidConsumption expr: rate(pg_txid_current[1m]) < 5 for: 2m labels: severity: warning annotations: summary: Postgresql low XID consumption (instance {{ $labels.instance }}) description: \"Postgresql seems to be consuming transaction IDs very slowly\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"12. Postgresql low XID consumption"},{"location":"chap9/7PostgreSQL/#13-postgresql-high-rate-statement-timeout","text":"Postgres transactions showing high rate of statement timeouts - alert: PostgresqlHighRateStatementTimeout expr: rate(postgresql_errors_total{type=\"statement_timeout\"}[1m]) > 3 for: 0m labels: severity: critical annotations: summary: Postgresql high rate statement timeout (instance {{ $labels.instance }}) description: \"Postgres transactions showing high rate of statement timeouts\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"13. Postgresql high rate statement timeout"},{"location":"chap9/7PostgreSQL/#14-postgresql-high-rate-deadlock","text":"Postgres detected deadlocks - alert: PostgresqlHighRateDeadlock expr: increase(postgresql_errors_total{type=\"deadlock_detected\"}[1m]) > 1 for: 0m labels: severity: critical annotations: summary: Postgresql high rate deadlock (instance {{ $labels.instance }}) description: \"Postgres detected deadlocks\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"14. Postgresql high rate deadlock"},{"location":"chap9/7PostgreSQL/#15-postgresql-unused-replication-slot","text":"Unused Replication Slots - alert: PostgresqlUnusedReplicationSlot expr: pg_replication_slots_active == 0 for: 1m labels: severity: warning annotations: summary: Postgresql unused replication slot (instance {{ $labels.instance }}) description: \"Unused Replication Slots\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"15. Postgresql unused replication slot"},{"location":"chap9/7PostgreSQL/#16-postgresql-too-many-dead-tuples","text":"PostgreSQL dead tuples is too large - alert: PostgresqlTooManyDeadTuples expr: ((pg_stat_user_tables_n_dead_tup > 10000) / (pg_stat_user_tables_n_live_tup + pg_stat_user_tables_n_dead_tup)) >= 0.1 unless ON(instance) (pg_replication_is_replica == 1) for: 2m labels: severity: warning annotations: summary: Postgresql too many dead tuples (instance {{ $labels.instance }}) description: \"PostgreSQL dead tuples is too large\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"16. Postgresql too many dead tuples"},{"location":"chap9/7PostgreSQL/#17-postgresql-split-brain","text":"Split Brain, too many primary Postgresql databases in read-write mode - alert: PostgresqlSplitBrain expr: count(pg_replication_is_replica == 0) != 1 for: 0m labels: severity: critical annotations: summary: Postgresql split brain (instance {{ $labels.instance }}) description: \"Split Brain, too many primary Postgresql databases in read-write mode\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"17. Postgresql split brain"},{"location":"chap9/7PostgreSQL/#18-postgresql-promoted-node","text":"Postgresql standby server has been promoted as primary node - alert: PostgresqlPromotedNode expr: pg_replication_is_replica and changes(pg_replication_is_replica[1m]) > 0 for: 0m labels: severity: warning annotations: summary: Postgresql promoted node (instance {{ $labels.instance }}) description: \"Postgresql standby server has been promoted as primary node\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"18. Postgresql promoted node"},{"location":"chap9/7PostgreSQL/#19-postgresql-configuration-changed","text":"Postgres Database configuration change has occurred - alert: PostgresqlConfigurationChanged expr: {__name__=~\"pg_settings_.*\"} != ON(__name__) {__name__=~\"pg_settings_([^t]|t[^r]|tr[^a]|tra[^n]|tran[^s]|trans[^a]|transa[^c]|transac[^t]|transact[^i]|transacti[^o]|transactio[^n]|transaction[^_]|transaction_[^r]|transaction_r[^e]|transaction_re[^a]|transaction_rea[^d]|transaction_read[^_]|transaction_read_[^o]|transaction_read_o[^n]|transaction_read_on[^l]|transaction_read_onl[^y]).*\"} OFFSET 5m for: 0m labels: severity: info annotations: summary: Postgresql configuration changed (instance {{ $labels.instance }}) description: \"Postgres Database configuration change has occurred\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"19. Postgresql configuration changed"},{"location":"chap9/7PostgreSQL/#20-postgresql-ssl-compression-active","text":"Database connections with SSL compression enabled. This may add significant jitter in replication delay. Replicas should turn off SSL compression via sslcompression=0 in recovery.conf . - alert: PostgresqlSslCompressionActive expr: sum(pg_stat_ssl_compression) > 0 for: 0m labels: severity: critical annotations: summary: Postgresql SSL compression active (instance {{ $labels.instance }}) description: \"Database connections with SSL compression enabled. This may add significant jitter in replication delay. Replicas should turn off SSL compression via `sslcompression=0` in `recovery.conf`.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"20. Postgresql SSL compression active"},{"location":"chap9/7PostgreSQL/#21-postgresql-too-many-locks-acquired","text":"Too many locks acquired on the database. If this alert happens frequently, we may need to increase the postgres setting max_locks_per_transaction . - alert: PostgresqlTooManyLocksAcquired expr: ((sum (pg_locks_count)) / (pg_settings_max_locks_per_transaction * pg_settings_max_connections)) > 0.20 for: 2m labels: severity: critical annotations: summary: Postgresql too many locks acquired (instance {{ $labels.instance }}) description: \"Too many locks acquired on the database. If this alert happens frequently, we may need to increase the postgres setting max_locks_per_transaction.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"21. Postgresql too many locks acquired"},{"location":"chap9/7PostgreSQL/#22-slow-queries","text":"PostgreSQL executes slow queries (> 1min) - alert: SlowQueries expr: avg(rate(pg_stat_activity_max_tx_duration{datname!~\"template.*\"}[1m])) BY (datname) > 60 for: 5m labels: severity: warning annotations: summary: \"Slow queries (instance {{ $labels.instance }})\" description: \"PostgreSQL executes slow queries (> 1min)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"22. Slow queries"},{"location":"chap9/7other/","text":"7 Others 1 Thanos Thanos compaction halted Thanos compact bucket operation failure Thanos compact not run 2 Loki Loki process too many restarts Loki request errors Loki request panic Loki request latency 3. Promtail Promtail request errors Promtail request latency 4. Cortex Cortex ruler configuration reload failure Cortex not connected to Alertmanager Cortex notification are being dropped Cortex notification error Cortex ingester unhealthy Cortex frontend queries stuck 5 Jenkins Jenkins offline Jenkins healthcheck Jenkins outdated plugins Jenkins builds health score Jenkins run failure total Jenkins build tests failing Jenkins last build failed","title":"7 Others"},{"location":"chap9/7other/#7-others","text":"","title":"7 Others"},{"location":"chap9/7other/#1-thanos","text":"Thanos compaction halted Thanos compact bucket operation failure Thanos compact not run","title":"1 Thanos"},{"location":"chap9/7other/#2-loki","text":"Loki process too many restarts Loki request errors Loki request panic Loki request latency","title":"2 Loki"},{"location":"chap9/7other/#3-promtail","text":"Promtail request errors Promtail request latency","title":"3. Promtail"},{"location":"chap9/7other/#4-cortex","text":"Cortex ruler configuration reload failure Cortex not connected to Alertmanager Cortex notification are being dropped Cortex notification error Cortex ingester unhealthy Cortex frontend queries stuck","title":"4. Cortex"},{"location":"chap9/7other/#5-jenkins","text":"Jenkins offline Jenkins healthcheck Jenkins outdated plugins Jenkins builds health score Jenkins run failure total Jenkins build tests failing Jenkins last build failed","title":"5 Jenkins"},{"location":"chap9/8Alerting_sleep/","text":"8 Alert Sleep Peacefully 1 Alerting time window In some applications, load and activity can vary over the day/week/year. In order to prevent alarm fatigue and busy pager, alerts can be disabled during a period of time (such as night or weekend). Example: Weekday: node_load5 > 10 and ON() (0 < day_of_week() < 6) Day time: node_load5 > 10 and ON() (8 < hour() < 18) Exclude December: node_load5 > 10 and ON() (month() != 12) Advanced time windows and timezones # rules.yml - record: is_european_summer_time expr: | (vector(1) and (month() > 3 and month() < 10)) or (vector(1) and (month() == 3 and (day_of_month() - day_of_week()) >= 25) and absent((day_of_month() >= 25) and (day_of_week() == 0))) or (vector(1) and (month() == 10 and (day_of_month() - day_of_week()) < 25) and absent((day_of_month() >= 25) and (day_of_week() == 0))) or (vector(1) and ((month() == 10 and hour() < 1) or (month() == 3 and hour() > 0)) and ((day_of_month() >= 25) and (day_of_week() == 0))) or vector(0) - record: europe_london_time expr: time() + 3600 * is_european_summer_time - record: europe_paris_time expr: time() + 3600 * (1 + is_european_summer_time) - record: europe_london_hour expr: hour(europe_london_time) - record: europe_paris_hour expr: hour(europe_paris_time) - record: europe_london_weekday expr: 0 < day_of_week(europe_london_time) < 6 - record: europe_paris_weekday expr: 0 < day_of_week(europe_paris_time) < 6 - record: europe_london_daytime expr: 8 < europe_london_hour < 18 - record: europe_paris_daytime expr: 8 < europe_paris_hour < 18 # new year's day / xmas / labor day / all saints' day / ... - record: europe_french_public_holidays expr: | (vector(1) and month(europe_paris_time) == 1 and day_of_month(europe_paris_time) == 1) or (vector(1) and month(europe_paris_time) == 12 and day_of_month(europe_paris_time) == 25) or (vector(1) and month(europe_paris_time) == 5 and day_of_month(europe_paris_time) == 1) or (vector(1) and month(europe_paris_time) == 11 and day_of_month(europe_paris_time) == 1) or vector(0) # alerts.yml - alert: HighLoadQuietDuringWeekendAndNight expr: node_load5 > 10 and ON() (europe_london_weekday and europe_paris_weekday) - alert: HighLoadQuietDuringBackup expr: node_load5 > 10 and ON() absent(hour() == 2) - alert: HighLoad expr: | node_load5 > 20 and ON() (europe_london_weekday and europe_paris_weekday) or node_load5 > 10 Sources https://medium.com/@tom.fawcett/time-of-day-based-notifications-with-prometheus-and-alertmanager-1bf7a23b7695 https://promcon.io/2019-munich/slides/improved-alerting-with-prometheus-and-alertmanager.pdf","title":"8 Alert Sleep Peacefully"},{"location":"chap9/8Alerting_sleep/#8-alert-sleep-peacefully","text":"","title":"8 Alert Sleep Peacefully"},{"location":"chap9/8Alerting_sleep/#1-alerting-time-window","text":"In some applications, load and activity can vary over the day/week/year. In order to prevent alarm fatigue and busy pager, alerts can be disabled during a period of time (such as night or weekend). Example: Weekday: node_load5 > 10 and ON() (0 < day_of_week() < 6) Day time: node_load5 > 10 and ON() (8 < hour() < 18) Exclude December: node_load5 > 10 and ON() (month() != 12)","title":"1 Alerting time window"},{"location":"chap9/8Alerting_sleep/#advanced-time-windows-and-timezones","text":"# rules.yml - record: is_european_summer_time expr: | (vector(1) and (month() > 3 and month() < 10)) or (vector(1) and (month() == 3 and (day_of_month() - day_of_week()) >= 25) and absent((day_of_month() >= 25) and (day_of_week() == 0))) or (vector(1) and (month() == 10 and (day_of_month() - day_of_week()) < 25) and absent((day_of_month() >= 25) and (day_of_week() == 0))) or (vector(1) and ((month() == 10 and hour() < 1) or (month() == 3 and hour() > 0)) and ((day_of_month() >= 25) and (day_of_week() == 0))) or vector(0) - record: europe_london_time expr: time() + 3600 * is_european_summer_time - record: europe_paris_time expr: time() + 3600 * (1 + is_european_summer_time) - record: europe_london_hour expr: hour(europe_london_time) - record: europe_paris_hour expr: hour(europe_paris_time) - record: europe_london_weekday expr: 0 < day_of_week(europe_london_time) < 6 - record: europe_paris_weekday expr: 0 < day_of_week(europe_paris_time) < 6 - record: europe_london_daytime expr: 8 < europe_london_hour < 18 - record: europe_paris_daytime expr: 8 < europe_paris_hour < 18 # new year's day / xmas / labor day / all saints' day / ... - record: europe_french_public_holidays expr: | (vector(1) and month(europe_paris_time) == 1 and day_of_month(europe_paris_time) == 1) or (vector(1) and month(europe_paris_time) == 12 and day_of_month(europe_paris_time) == 25) or (vector(1) and month(europe_paris_time) == 5 and day_of_month(europe_paris_time) == 1) or (vector(1) and month(europe_paris_time) == 11 and day_of_month(europe_paris_time) == 1) or vector(0) # alerts.yml - alert: HighLoadQuietDuringWeekendAndNight expr: node_load5 > 10 and ON() (europe_london_weekday and europe_paris_weekday) - alert: HighLoadQuietDuringBackup expr: node_load5 > 10 and ON() absent(hour() == 2) - alert: HighLoad expr: | node_load5 > 20 and ON() (europe_london_weekday and europe_paris_weekday) or node_load5 > 10 Sources https://medium.com/@tom.fawcett/time-of-day-based-notifications-with-prometheus-and-alertmanager-1bf7a23b7695 https://promcon.io/2019-munich/slides/improved-alerting-with-prometheus-and-alertmanager.pdf","title":"Advanced time windows and timezones"},{"location":"chap9/8Redis/","text":"5 Redis https://github.com/oliver006/redis_exporter 1. Redis down Redis instance is down - alert: RedisDown expr: redis_up == 0 for: 5m labels: severity: error annotations: summary: \"Redis down (instance {{ $labels.instance }})\" description: \"Redis instance is down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 2. Redis missing master Redis cluster has no node marked as master. - alert: RedisMissingMaster expr: (count(redis_instance_info{role=\"master\"}) or vector(0)) < 1 for: 0m labels: severity: critical annotations: summary: Redis missing master (instance {{ $labels.instance }}) description: \"Redis cluster has no node marked as master.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 3. Redis too many masters Redis cluster has too many nodes marked as master. - alert: RedisTooManyMasters expr: count(redis_instance_info{role=\"master\"}) > 1 for: 0m labels: severity: critical annotations: summary: Redis too many masters (instance {{ $labels.instance }}) description: \"Redis cluster has too many nodes marked as master.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 4. Redis disconnected slaves Redis not replicating for all slaves. Consider reviewing the redis replication status. - alert: RedisDisconnectedSlaves expr: count without (instance, job) (redis_connected_slaves) - sum without (instance, job) (redis_connected_slaves) - 1 > 1 for: 0m labels: severity: critical annotations: summary: Redis disconnected slaves (instance {{ $labels.instance }}) description: \"Redis not replicating for all slaves. Consider reviewing the redis replication status.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5. Redis replication broken Redis instance lost a slave - alert: RedisReplicationBroken expr: delta(redis_connected_slaves[1m]) < 0 for: 0m labels: severity: critical annotations: summary: Redis replication broken (instance {{ $labels.instance }}) description: \"Redis instance lost a slave\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6. Redis cluster flapping Changes have been detected in Redis replica connection. This can occur when replica nodes lose connection to the master and reconnect (a.k.a flapping). - alert: RedisClusterFlapping expr: changes(redis_connected_slaves[1m]) > 1 for: 2m labels: severity: critical annotations: summary: Redis cluster flapping (instance {{ $labels.instance }}) description: \"Changes have been detected in Redis replica connection. This can occur when replica nodes lose connection to the master and reconnect (a.k.a flapping).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7. Missing backup Redis has not been backuped for 24 hours - alert: MissingBackup expr: time() - redis_rdb_last_save_timestamp_seconds > 60 * 60 * 24 for: 5m labels: severity: error annotations: summary: \"Missing backup (instance {{ $labels.instance }})\" description: \"Redis has not been backuped for 24 hours\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 8. Redis out of system memory Redis is running out of memory (> 90%) - alert: OutOfMemory expr: redis_memory_used_bytes / redis_total_system_memory_bytes * 100 > 90 for: 5m labels: severity: warning annotations: summary: \"Out of memory (instance {{ $labels.instance }})\" description: \"Redis is running out of memory (> 90%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 9. Redis out of configured maxmemory Redis is running out of configured maxmemory (> 90%) - alert: RedisOutOfConfiguredMaxmemory expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 90 for: 2m labels: severity: warning annotations: summary: Redis out of configured maxmemory (instance {{ $labels.instance }}) description: \"Redis is running out of configured maxmemory (> 90%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 10. Too many connections Redis instance has too many connections - alert: TooManyConnections expr: redis_connected_clients > 100 for: 5m labels: severity: warning annotations: summary: \"Too many connections (instance {{ $labels.instance }})\" description: \"Redis instance has too many connections\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 11. Not enough connections Redis instance should have more connections (> 5) - alert: NotEnoughConnections expr: redis_connected_clients < 5 for: 5m labels: severity: warning annotations: summary: \"Not enough connections (instance {{ $labels.instance }})\" description: \"Redis instance should have more connections (> 5)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 12. Rejected connections Some connections to Redis has been rejected - alert: RejectedConnections expr: increase(redis_rejected_connections_total[1m]) > 0 for: 5m labels: severity: error annotations: summary: \"Rejected connections (instance {{ $labels.instance }})\" description: \"Some connections to Redis has been rejected\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"5 Redis"},{"location":"chap9/8Redis/#5-redis","text":"https://github.com/oliver006/redis_exporter","title":"5 Redis"},{"location":"chap9/8Redis/#1-redis-down","text":"Redis instance is down - alert: RedisDown expr: redis_up == 0 for: 5m labels: severity: error annotations: summary: \"Redis down (instance {{ $labels.instance }})\" description: \"Redis instance is down\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"1. Redis down"},{"location":"chap9/8Redis/#2-redis-missing-master","text":"Redis cluster has no node marked as master. - alert: RedisMissingMaster expr: (count(redis_instance_info{role=\"master\"}) or vector(0)) < 1 for: 0m labels: severity: critical annotations: summary: Redis missing master (instance {{ $labels.instance }}) description: \"Redis cluster has no node marked as master.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"2. Redis missing master"},{"location":"chap9/8Redis/#3-redis-too-many-masters","text":"Redis cluster has too many nodes marked as master. - alert: RedisTooManyMasters expr: count(redis_instance_info{role=\"master\"}) > 1 for: 0m labels: severity: critical annotations: summary: Redis too many masters (instance {{ $labels.instance }}) description: \"Redis cluster has too many nodes marked as master.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"3. Redis too many masters"},{"location":"chap9/8Redis/#4-redis-disconnected-slaves","text":"Redis not replicating for all slaves. Consider reviewing the redis replication status. - alert: RedisDisconnectedSlaves expr: count without (instance, job) (redis_connected_slaves) - sum without (instance, job) (redis_connected_slaves) - 1 > 1 for: 0m labels: severity: critical annotations: summary: Redis disconnected slaves (instance {{ $labels.instance }}) description: \"Redis not replicating for all slaves. Consider reviewing the redis replication status.\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. Redis disconnected slaves"},{"location":"chap9/8Redis/#5-redis-replication-broken","text":"Redis instance lost a slave - alert: RedisReplicationBroken expr: delta(redis_connected_slaves[1m]) < 0 for: 0m labels: severity: critical annotations: summary: Redis replication broken (instance {{ $labels.instance }}) description: \"Redis instance lost a slave\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5. Redis replication broken"},{"location":"chap9/8Redis/#6-redis-cluster-flapping","text":"Changes have been detected in Redis replica connection. This can occur when replica nodes lose connection to the master and reconnect (a.k.a flapping). - alert: RedisClusterFlapping expr: changes(redis_connected_slaves[1m]) > 1 for: 2m labels: severity: critical annotations: summary: Redis cluster flapping (instance {{ $labels.instance }}) description: \"Changes have been detected in Redis replica connection. This can occur when replica nodes lose connection to the master and reconnect (a.k.a flapping).\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6. Redis cluster flapping"},{"location":"chap9/8Redis/#7-missing-backup","text":"Redis has not been backuped for 24 hours - alert: MissingBackup expr: time() - redis_rdb_last_save_timestamp_seconds > 60 * 60 * 24 for: 5m labels: severity: error annotations: summary: \"Missing backup (instance {{ $labels.instance }})\" description: \"Redis has not been backuped for 24 hours\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"7. Missing backup"},{"location":"chap9/8Redis/#8-redis-out-of-system-memory","text":"Redis is running out of memory (> 90%) - alert: OutOfMemory expr: redis_memory_used_bytes / redis_total_system_memory_bytes * 100 > 90 for: 5m labels: severity: warning annotations: summary: \"Out of memory (instance {{ $labels.instance }})\" description: \"Redis is running out of memory (> 90%)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"8. Redis out of system memory"},{"location":"chap9/8Redis/#9-redis-out-of-configured-maxmemory","text":"Redis is running out of configured maxmemory (> 90%) - alert: RedisOutOfConfiguredMaxmemory expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 90 for: 2m labels: severity: warning annotations: summary: Redis out of configured maxmemory (instance {{ $labels.instance }}) description: \"Redis is running out of configured maxmemory (> 90%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"9. Redis out of configured maxmemory"},{"location":"chap9/8Redis/#10-too-many-connections","text":"Redis instance has too many connections - alert: TooManyConnections expr: redis_connected_clients > 100 for: 5m labels: severity: warning annotations: summary: \"Too many connections (instance {{ $labels.instance }})\" description: \"Redis instance has too many connections\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10. Too many connections"},{"location":"chap9/8Redis/#11-not-enough-connections","text":"Redis instance should have more connections (> 5) - alert: NotEnoughConnections expr: redis_connected_clients < 5 for: 5m labels: severity: warning annotations: summary: \"Not enough connections (instance {{ $labels.instance }})\" description: \"Redis instance should have more connections (> 5)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"11. Not enough connections"},{"location":"chap9/8Redis/#12-rejected-connections","text":"Some connections to Redis has been rejected - alert: RejectedConnections expr: increase(redis_rejected_connections_total[1m]) > 0 for: 5m labels: severity: error annotations: summary: \"Rejected connections (instance {{ $labels.instance }})\" description: \"Some connections to Redis has been rejected\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"12. Rejected connections"},{"location":"chap9/9Mongodb/","text":"6. MongoDB https://github.com/percona/mongodb_exporter 1. MongoDB Down MongoDB instance is down - alert: MongodbDown expr: mongodb_up == 0 for: 0m labels: severity: critical annotations: summary: MongoDB Down (instance {{ $labels.instance }}) description: \"MongoDB instance is down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. MongoDB replication lag Mongodb replication lag is more than 10s - alert: MongodbReplicationLag expr: avg(mongodb_replset_member_optime_date{state=\"PRIMARY\"}) - avg(mongodb_replset_member_optime_date{state=\"SECONDARY\"}) > 10 for: 5m labels: severity: error annotations: summary: \"MongoDB replication lag (instance {{ $labels.instance }})\" description: \"Mongodb replication lag is more than 10s\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 3. MongoDB replication headroom MongoDB replication headroom is <= 0 - alert: MongodbReplicationHeadroom expr: (avg(mongodb_replset_oplog_tail_timestamp - mongodb_replset_oplog_head_timestamp) - (avg(mongodb_replset_member_optime_date{state=\"PRIMARY\"}) - avg(mongodb_replset_member_optime_date{state=\"SECONDARY\"}))) <= 0 for: 5m labels: severity: error annotations: summary: \"MongoDB replication headroom (instance {{ $labels.instance }})\" description: \"MongoDB replication headroom is <= 0\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 4. MongoDB number cursors open Too many cursors opened by MongoDB for clients (> 10k) - alert: MongodbNumberCursorsOpen expr: mongodb_mongod_metrics_cursor_open{state=\"total\"} > 10 * 1000 for: 2m labels: severity: warning annotations: summary: MongoDB number cursors open (instance {{ $labels.instance }}) description: \"Too many cursors opened by MongoDB for clients (> 10k)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 5. MongoDB cursors timeouts Too many cursors are timing out - alert: MongodbCursorsTimeouts expr: increase(mongodb_mongod_metrics_cursor_timed_out_total[1m]) > 100 for: 2m labels: severity: warning annotations: summary: MongoDB cursors timeouts (instance {{ $labels.instance }}) description: \"Too many cursors are timing out\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 6. MongoDB too many connections Too many connections (> 80%) - alert: MongodbTooManyConnections expr: avg by(instance) (rate(mongodb_connections{state=\"current\"}[1m])) / avg by(instance) (sum (mongodb_connections) by (instance)) * 100 > 80 for: 2m labels: severity: warning annotations: summary: MongoDB too many connections (instance {{ $labels.instance }}) description: \"Too many connections (> 80%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 7. MongoDB virtual memory usage High memory usage - alert: MongodbVirtualMemoryUsage expr: (sum(mongodb_memory{type=\"virtual\"}) BY (instance) / sum(mongodb_memory{type=\"mapped\"}) BY (instance)) > 3 for: 2m labels: severity: warning annotations: summary: MongoDB virtual memory usage (instance {{ $labels.instance }}) description: \"High memory usage\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" MongoDB : dcu/mongodb_exporter 1. MongoDB replication lag Mongodb replication lag is more than 10s - alert: MongodbReplicationLag expr: avg(mongodb_replset_member_optime_date{state=\"PRIMARY\"}) - avg(mongodb_replset_member_optime_date{state=\"SECONDARY\"}) > 10 for: 0m labels: severity: critical annotations: summary: MongoDB replication lag (instance {{ $labels.instance }}) description: \"Mongodb replication lag is more than 10s\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\" 2. MongoDB replication Status 3 MongoDB Replication set member either perform startup self-checks, or transition from completing a rollback or resync - alert: MongodbReplicationStatus3 expr: mongodb_replset_member_state == 3 for: 5m labels: severity: error annotations: summary: \"MongoDB replication Status 3 (instance {{ $labels.instance }})\" description: \"MongoDB Replication set member either perform startup self-checks, or transition from completing a rollback or resync\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 3. MongoDB replication Status 6 MongoDB Replication set member as seen from another member of the set, is not yet known - alert: MongodbReplicationStatus6 expr: mongodb_replset_member_state == 6 for: 5m labels: severity: error annotations: summary: \"MongoDB replication Status 6 (instance {{ $labels.instance }})\" description: \"MongoDB Replication set member as seen from another member of the set, is not yet known\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 4 MongoDB replication Status 8 MongoDB Replication set member as seen from another member of the set, is unreachable - alert: MongodbReplicationStatus8 expr: mongodb_replset_member_state == 8 for: 5m labels: severity: error annotations: summary: \"MongoDB replication Status 8 (instance {{ $labels.instance }})\" description: \"MongoDB Replication set member as seen from another member of the set, is unreachable\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 5. MongoDB replication Status 9 MongoDB Replication set member is actively performing a rollback. Data is not available for reads - alert: MongodbReplicationStatus9 expr: mongodb_replset_member_state == 9 for: 5m labels: severity: error annotations: summary: \"MongoDB replication Status 9 (instance {{ $labels.instance }})\" description: \"MongoDB Replication set member is actively performing a rollback. Data is not available for reads\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 14. MongoDB replication Status 10 MongoDB Replication set member was once in a replica set but was subsequently removed - alert: MongodbReplicationStatus10 expr: mongodb_replset_member_state == 10 for: 5m labels: severity: error annotations: summary: \"MongoDB replication Status 10 (instance {{ $labels.instance }})\" description: \"MongoDB Replication set member was once in a replica set but was subsequently removed\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 15. MongoDB number cursors open Too many cursors opened by MongoDB for clients (> 10k) - alert: MongodbNumberCursorsOpen expr: mongodb_metrics_cursor_open{state=\"total_open\"} > 10000 for: 5m labels: severity: warning annotations: summary: \"MongoDB number cursors open (instance {{ $labels.instance }})\" description: \"Too many cursors opened by MongoDB for clients (> 10k)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 16. MongoDB cursors timeouts Too many cursors are timing out - alert: MongodbCursorsTimeouts expr: increase(mongodb_metrics_cursor_timed_out_total[10m]) > 100 for: 5m labels: severity: warning annotations: summary: \"MongoDB cursors timeouts (instance {{ $labels.instance }})\" description: \"Too many cursors are timing out\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 17. MongoDB too many connections Too many connections - alert: MongodbTooManyConnections expr: mongodb_connections{state=\"current\"} > 500 for: 5m labels: severity: warning annotations: summary: \"MongoDB too many connections (instance {{ $labels.instance }})\" description: \"Too many connections\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\" 10. MongoDB virtual memory usage High memory usage - alert: MongodbVirtualMemoryUsage expr: (sum(mongodb_memory{type=\"virtual\"}) BY (ip) / sum(mongodb_memory{type=\"mapped\"}) BY (ip)) > 3 for: 5m labels: severity: warning annotations: summary: \"MongoDB virtual memory usage (instance {{ $labels.instance }})\" description: \"High memory usage\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"6. MongoDB"},{"location":"chap9/9Mongodb/#6-mongodb","text":"https://github.com/percona/mongodb_exporter","title":"6. MongoDB"},{"location":"chap9/9Mongodb/#1-mongodb-down","text":"MongoDB instance is down - alert: MongodbDown expr: mongodb_up == 0 for: 0m labels: severity: critical annotations: summary: MongoDB Down (instance {{ $labels.instance }}) description: \"MongoDB instance is down\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. MongoDB Down"},{"location":"chap9/9Mongodb/#2-mongodb-replication-lag","text":"Mongodb replication lag is more than 10s - alert: MongodbReplicationLag expr: avg(mongodb_replset_member_optime_date{state=\"PRIMARY\"}) - avg(mongodb_replset_member_optime_date{state=\"SECONDARY\"}) > 10 for: 5m labels: severity: error annotations: summary: \"MongoDB replication lag (instance {{ $labels.instance }})\" description: \"Mongodb replication lag is more than 10s\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2. MongoDB replication lag"},{"location":"chap9/9Mongodb/#3-mongodb-replication-headroom","text":"MongoDB replication headroom is <= 0 - alert: MongodbReplicationHeadroom expr: (avg(mongodb_replset_oplog_tail_timestamp - mongodb_replset_oplog_head_timestamp) - (avg(mongodb_replset_member_optime_date{state=\"PRIMARY\"}) - avg(mongodb_replset_member_optime_date{state=\"SECONDARY\"}))) <= 0 for: 5m labels: severity: error annotations: summary: \"MongoDB replication headroom (instance {{ $labels.instance }})\" description: \"MongoDB replication headroom is <= 0\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"3. MongoDB replication headroom"},{"location":"chap9/9Mongodb/#4-mongodb-number-cursors-open","text":"Too many cursors opened by MongoDB for clients (> 10k) - alert: MongodbNumberCursorsOpen expr: mongodb_mongod_metrics_cursor_open{state=\"total\"} > 10 * 1000 for: 2m labels: severity: warning annotations: summary: MongoDB number cursors open (instance {{ $labels.instance }}) description: \"Too many cursors opened by MongoDB for clients (> 10k)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"4. MongoDB number cursors open"},{"location":"chap9/9Mongodb/#5-mongodb-cursors-timeouts","text":"Too many cursors are timing out - alert: MongodbCursorsTimeouts expr: increase(mongodb_mongod_metrics_cursor_timed_out_total[1m]) > 100 for: 2m labels: severity: warning annotations: summary: MongoDB cursors timeouts (instance {{ $labels.instance }}) description: \"Too many cursors are timing out\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"5. MongoDB cursors timeouts"},{"location":"chap9/9Mongodb/#6-mongodb-too-many-connections","text":"Too many connections (> 80%) - alert: MongodbTooManyConnections expr: avg by(instance) (rate(mongodb_connections{state=\"current\"}[1m])) / avg by(instance) (sum (mongodb_connections) by (instance)) * 100 > 80 for: 2m labels: severity: warning annotations: summary: MongoDB too many connections (instance {{ $labels.instance }}) description: \"Too many connections (> 80%)\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"6. MongoDB too many connections"},{"location":"chap9/9Mongodb/#7-mongodb-virtual-memory-usage","text":"High memory usage - alert: MongodbVirtualMemoryUsage expr: (sum(mongodb_memory{type=\"virtual\"}) BY (instance) / sum(mongodb_memory{type=\"mapped\"}) BY (instance)) > 3 for: 2m labels: severity: warning annotations: summary: MongoDB virtual memory usage (instance {{ $labels.instance }}) description: \"High memory usage\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"7. MongoDB virtual memory usage"},{"location":"chap9/9Mongodb/#mongodb-dcumongodb_exporter","text":"","title":"MongoDB : dcu/mongodb_exporter"},{"location":"chap9/9Mongodb/#1-mongodb-replication-lag","text":"Mongodb replication lag is more than 10s - alert: MongodbReplicationLag expr: avg(mongodb_replset_member_optime_date{state=\"PRIMARY\"}) - avg(mongodb_replset_member_optime_date{state=\"SECONDARY\"}) > 10 for: 0m labels: severity: critical annotations: summary: MongoDB replication lag (instance {{ $labels.instance }}) description: \"Mongodb replication lag is more than 10s\\n VALUE = {{ $value }}\\n LABELS = {{ $labels }}\"","title":"1. MongoDB replication lag"},{"location":"chap9/9Mongodb/#2-mongodb-replication-status-3","text":"MongoDB Replication set member either perform startup self-checks, or transition from completing a rollback or resync - alert: MongodbReplicationStatus3 expr: mongodb_replset_member_state == 3 for: 5m labels: severity: error annotations: summary: \"MongoDB replication Status 3 (instance {{ $labels.instance }})\" description: \"MongoDB Replication set member either perform startup self-checks, or transition from completing a rollback or resync\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"2. MongoDB replication Status 3"},{"location":"chap9/9Mongodb/#3-mongodb-replication-status-6","text":"MongoDB Replication set member as seen from another member of the set, is not yet known - alert: MongodbReplicationStatus6 expr: mongodb_replset_member_state == 6 for: 5m labels: severity: error annotations: summary: \"MongoDB replication Status 6 (instance {{ $labels.instance }})\" description: \"MongoDB Replication set member as seen from another member of the set, is not yet known\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"3. MongoDB replication Status 6"},{"location":"chap9/9Mongodb/#4-mongodb-replication-status-8","text":"MongoDB Replication set member as seen from another member of the set, is unreachable - alert: MongodbReplicationStatus8 expr: mongodb_replset_member_state == 8 for: 5m labels: severity: error annotations: summary: \"MongoDB replication Status 8 (instance {{ $labels.instance }})\" description: \"MongoDB Replication set member as seen from another member of the set, is unreachable\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"4 MongoDB replication Status 8"},{"location":"chap9/9Mongodb/#5-mongodb-replication-status-9","text":"MongoDB Replication set member is actively performing a rollback. Data is not available for reads - alert: MongodbReplicationStatus9 expr: mongodb_replset_member_state == 9 for: 5m labels: severity: error annotations: summary: \"MongoDB replication Status 9 (instance {{ $labels.instance }})\" description: \"MongoDB Replication set member is actively performing a rollback. Data is not available for reads\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"5. MongoDB replication Status 9"},{"location":"chap9/9Mongodb/#14-mongodb-replication-status-10","text":"MongoDB Replication set member was once in a replica set but was subsequently removed - alert: MongodbReplicationStatus10 expr: mongodb_replset_member_state == 10 for: 5m labels: severity: error annotations: summary: \"MongoDB replication Status 10 (instance {{ $labels.instance }})\" description: \"MongoDB Replication set member was once in a replica set but was subsequently removed\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"14. MongoDB replication Status 10"},{"location":"chap9/9Mongodb/#15-mongodb-number-cursors-open","text":"Too many cursors opened by MongoDB for clients (> 10k) - alert: MongodbNumberCursorsOpen expr: mongodb_metrics_cursor_open{state=\"total_open\"} > 10000 for: 5m labels: severity: warning annotations: summary: \"MongoDB number cursors open (instance {{ $labels.instance }})\" description: \"Too many cursors opened by MongoDB for clients (> 10k)\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"15. MongoDB number cursors open"},{"location":"chap9/9Mongodb/#16-mongodb-cursors-timeouts","text":"Too many cursors are timing out - alert: MongodbCursorsTimeouts expr: increase(mongodb_metrics_cursor_timed_out_total[10m]) > 100 for: 5m labels: severity: warning annotations: summary: \"MongoDB cursors timeouts (instance {{ $labels.instance }})\" description: \"Too many cursors are timing out\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"16. MongoDB cursors timeouts"},{"location":"chap9/9Mongodb/#17-mongodb-too-many-connections","text":"Too many connections - alert: MongodbTooManyConnections expr: mongodb_connections{state=\"current\"} > 500 for: 5m labels: severity: warning annotations: summary: \"MongoDB too many connections (instance {{ $labels.instance }})\" description: \"Too many connections\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"17. MongoDB too many connections"},{"location":"chap9/9Mongodb/#10-mongodb-virtual-memory-usage","text":"High memory usage - alert: MongodbVirtualMemoryUsage expr: (sum(mongodb_memory{type=\"virtual\"}) BY (ip) / sum(mongodb_memory{type=\"mapped\"}) BY (ip)) > 3 for: 5m labels: severity: warning annotations: summary: \"MongoDB virtual memory usage (instance {{ $labels.instance }})\" description: \"High memory usage\\n VALUE = {{ $value }}\\n LABELS: {{ $labels }}\"","title":"10. MongoDB virtual memory usage"},{"location":"chap_apm/1apm_prods/","text":"\u7b2c\u4e00\u8282 APM\u4ea7\u54c1\u843d\u5730\u5b9e\u6218 1 \u7cfb\u7edf\u76d1\u63a7\uff1a\u8001\u724c\u76d1\u63a7\u70b9\u8bc4 CAT CAT\uff08Central Application Tracking\uff09 \u9996\u5148\uff0c\u4ece\u65f6\u95f4\u4e0a\u770b\uff0cCAT \u9996\u4e2a\u5f00\u6e90\u7248\u672c\u662f\u5728 2012 \u5e74\uff0c\u6b64\u65f6\u671f\u4e0e APM \u76f8\u5173\u91cd\u5927\u4e8b\u4ef6\u6709\uff1a Google \u516c\u53f8\u53d1\u5e03\u300a Dapper \u8bba\u6587 \u300b\uff1b \u7d27\u968f\u5176\u540e\uff0cNaver \u516c\u53f8\u53d1\u5e03\u5f00\u6e90\u65e0\u4fb5\u5165 APM \u7cfb\u7edf Pinpoint \uff1b Twitter \u516c\u53f8\u53d1\u5e03\u5f00\u6e90 APM \u7cfb\u7edf Zipkin \uff0cZipkin \u662f Spring Cloud \u5206\u5e03\u5f0f\u8ffd\u8e2a\u7cfb\u7edf Spring-Cloud-Sleuth \u7684\u89e3\u51b3\u65b9\u6848\u3002 1-1 CAT \u51ed\u4ec0\u4e48\u79f0\u4e3a\u201c\u8001\u724c\u76d1\u63a7\u201d\uff1f Java \u5f00\u53d1\u5b9e\u73b0\u7684\u5b9e\u65f6\u5e94\u7528\u76d1\u63a7\u5e73\u53f0, \u8d77\u521d\u4e13\u4e3a\u5927\u89c4\u6a21 Java \u5fae\u670d\u52a1\u96c6\u7fa4\u63d0\u4f9b\u5b9e\u65f6\u76d1\u63a7\u62a5\u8b66\u573a\u666f \u5e94\u7528\u670d\u52a1\u5728\u4ee3\u7801\u4e2d\u5f15\u5165 CAT \u5ba2\u6237\u7aef\u548c\u76f8\u5173\u57cb\u70b9\u96c6\u6210\u65b9\u6848\u5373\u53ef\u5b8c\u6210\u63a5 \u670d\u52a1\u7aef\u7531\u4e24\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c \u8d1f\u8d23\u6536\u96c6\u5206\u6790\u5ba2\u6237\u7aef\u6570\u636e\u7684\u6536\u96c6\u5668\u6a21\u5757 \u548c \u8d1f\u8d23\u7ed9\u7528\u6237\u63d0\u4f9b\u62a5\u8868\u5c55\u793a\u7684\u63a7\u5236\u7aef\u6a21\u5757 \u603b\u7684\u6765\u8bf4 CAT \u4ea7\u54c1\u67b6\u6784\u662f\u7531\u4e09\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u67b6\u6784\u8bbe\u8ba1\u975e\u5e38\u6e05\u6670\uff1a Cat-client \u63d0\u4f9b\u7ed9\u5e94\u7528\u4ee5\u53ca\u4e2d\u95f4\u5c42\u57cb\u70b9\u7684\u5e95\u5c42 SDK Cat-consumer \u7528\u4e8e\u5b9e\u65f6\u5206\u6790\u4ece\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u6570\u636e\uff08\u6536\u96c6\u5668\u6a21\u5757\uff09 Cat-home \u4f5c\u4e3a\u7ed9\u7528\u6237\u63d0\u4f9b\u5c55\u793a\u7684\u63a7\u5236\u7aef\uff08\u63a7\u5236\u7aef\u6a21\u5757\uff09 1-2 \u5b9e\u65f6\u7684\u4ee3\u7801\u6bb5\u76d1\u63a7\u62a5\u8868 CAT \u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u62a5\u8868\uff0c\u5e94\u7528\u670d\u52a1\u7b80\u5355\u63a5\u5165 CAT \u5ba2\u6237\u7aef\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 CAT \u670d\u52a1\u7aef\u5168\u65b9\u4f4d\u5730\u76d1\u63a7\u5e94\u7528\u96c6\u7fa4\u4e86 1-3 \u5ba2\u6237\u7aef\u6027\u80fd\u635f\u8017\u4f4e 1-4 \u843d\u5730\u5b9e\u8df5\u8981\u70b9 \u5efa\u8bae\u6240\u6709\u5e94\u7528\u670d\u52a1\u63a5\u5165 CAT \u4e0d\u5efa\u8bae\u4f7f\u7528 CAT \u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u529f\u80fd \u201c\u6811\u5f62\u201d\u6a21\u578b\u65e0\u6cd5\u8ffd\u8e2a\u6279\u5904\u7406\u6846\u67b6\u7684\u94fe\u8def CAT \u4f7f\u7528 ROOT\u3001PARENT \u548c CHILD \u4e09\u4e2a\u53c2\u6570\u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f\u94fe\u8def\u8ddf\u8e2a\u7684\u201c\u6811\u5f62\u201d\u6a21\u578b\uff0c\u800c\u201c\u6811\u5f62\u201d\u6a21\u578b\u662f \u65e0\u6cd5\u7ed8\u5236\u5206\u5e03\u5f0f\u96c6\u7fa4\u4e2d\u5b58\u5728\u6279\u5904\u7406\u6846\u67b6\u7684\u94fe\u8def\u7684 \u3002 \u5373\u4f7f\u4e0d\u9700\u8981\u8ffd\u8e2a\u6279\u5904\u7406\u6846\u67b6\u7684\u94fe\u8def\uff0cCAT \u5206\u5e03\u5f0f\u94fe\u8def\u8ddf\u8e2a\u4ee3\u7801\u4e5f\u9700\u8981\u8ba9\u6bcf\u4e2a RD \u7406\u89e3\u8ddf\u8e2a\u6a21\u578b\uff0c\u7136\u540e\u5206\u5e03\u5f0f\u8ddf\u8e2a\u7684\u4e0a\u4e0b\u6e38\u90fd\u9700\u8981\u53bb\u8fdb\u884c\u624b\u52a8\u57cb\u70b9\u624d\u53ef\u4ee5\u5b9e\u73b0 \u62a5\u8868\u5c55\u793a\u6548\u679c\u4e0d\u7406\u60f3\uff0c\u4e14\u8fc7\u65f6 CAT \u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u5c55\u793a\uff0c\u53ef\u901a\u8fc7 Transaction \u62a5\u8868\u7684 logview \u89c6\u56fe\u67e5\u770b\u3002\u4e2a\u4eba\u89c9\u5f97\u5176\u5c55\u793a\u6548\u679c\u76f8\u8f83 SkyWalking\u3001Zipkin \u7684\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u89c6\u56fe\u5b58\u5728\u660e\u663e\u5dee\u8ddd\u3002 1-5 \u7ebf\u7a0b\u4f18\u5316 1.\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u7ebf\u7a0b\u4f18\u5316\uff1f \u4ece\u8f6f\u4ef6\u8d44\u6e90\u89d2\u5ea6 \uff1aJava\u4ece\u5e94\u7528\u89c6\u89d2\u770b\uff0c\u7ebf\u7a0b\u7684\u4f18\u5316\u53ef\u4ee5\u4f18\u5316 JVM \u8d44\u6e90\uff0c\u4ece\u800c\u51cf\u5c11 GC\u3002 \u4ece\u786c\u4ef6\u8d44\u6e90\u89d2\u5ea6 \uff1a \u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u8282\u70b9\u8d44\u6e90\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\uff0c\u964d\u4f4e\u786c\u4ef6\u6210\u672c \u4ece\u53ef\u7528\u6027\u89d2\u5ea6 \uff1a\u975e\u9884\u671f\u7684 GC \u5bfc\u81f4\u5e94\u7528\u8282\u70b9\u4e0d\u80fd\u6309\u7167\u9884\u671f\u54cd\u5e94\u6d88\u8d39\u8005\uff0c\u9020\u6210\u5e94\u7528\u670d\u52a1\u4e0d\u53ef\u7528\u3002 2.\u4f7f\u7528\u7ebf\u7a0b\u7684\u6b63\u786e\u59ff\u52bf \u6b63\u786e\u4f7f\u7528\u65b9\u5f0f\u662f \u4f7f\u7528\u7ebf\u7a0b\u6c60\u53bb\u7ba1\u7406\u7ebf\u7a0b\uff1b \u7ebf\u7a0b\u7684\u547d\u540d\u9700\u8981\u6709\u610f\u4e49\uff1b \u4efb\u52a1\u7ebf\u7a0b\u7684\u6570\u91cf\u9700\u8981\u4e0e\u5de5\u4f5c\u7ebf\u7a0b\u6302\u94a9\uff0c\u4e14\u9700\u8981\u8003\u8651\u6781\u7aef\u60c5\u51b5\uff0c\u5982\u6545\u969c\u91cd\u542f\u3002 3.CAT \u6539\u9020 \u4e3a\u4e86\u8ba9 Heartbeat \u62a5\u8868\u652f\u6301\u66f4\u7ec6\u7684\u6846\u67b6\u7ebf\u7a0b\u7c92\u5ea6\u76d1\u63a7\uff0c\u6211\u4eec\u9700\u8981\u638c\u63e1 CAT \u7684\u76d1\u63a7\u7ebf\u7a0b\u5b9e\u73b0\u539f\u7406\u3002Heartbeat \u529f\u80fd\u91c7\u96c6\u7ebf\u7a0b\u901a\u8fc7 Java ThreadMXBean \u83b7\u53d6\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u4fe1 \u539f\u7406\u5f88\u7b80\u5355\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u76d1\u63a7 Apache Dubbo \u7684\u6838\u5fc3\u7ebf\u7a0b\u548c\u6d3b\u8dc3\u7ebf\u7a0b\u6570\uff0c\u53ea\u9700\u8981\u5728\u6b64\u5904\u4ee3\u7801\u589e\u52a0\u524d\u7f00 DubboServerHandler- \uff0c\u5373\u53ef\u76d1\u63a7 Apache Dubbo \u7684\u6838\u5fc3\u7ebf\u7a0b\uff0c\u7136\u540e\u904d\u5386\u6240\u6709\u7684\u7ebf\u7a0b\uff0c\u901a\u8fc7\u83b7\u53d6\u8fd0\u884c\u72b6\u6001\u6216\u8005\u975e\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b\uff0c\u5c31\u53ef\u4ee5\u7edf\u8ba1\u51fa\u6d3b\u8dc3\u7ebf\u7a0b\u6570\u3002 4. \u4f18\u5316\u5b9e\u6218 \u6b64\u5e94\u7528\u670d\u52a1\u5b58\u5728\u5927\u91cf\u7684\u5185\u7f6e\u6846\u67b6\uff08Apache Dubbo\u3001Netty\uff09\u7684\u8fc7\u5ea6\u7ebf\u7a0b\u4f7f\u7528\uff0c\u8fd9\u4e9b \u6846\u67b6\u6ee5\u7528\u7ebf\u7a0b \u7684\u5f62\u5f0f\u901a\u5e38\u4f1a\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u3002 \u7b2c\u4e00\u79cd\uff1a\u7ebf\u7a0b\u6c60\u4f7f\u7528\u4e00\u4e2a\u8f83\u5927\u7684\u56fa\u5b9a\u503c\u3002\u4f8b\u5982 Apache Dubbo \u4e3a\u4f8b\uff0c\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u9ed8\u8ba4\u7ebf\u7a0b\u6570\u4e3a 200 \u7684 Fixed \u7684\u7ebf\u7a0b\u6c60\u3002 \u7b2c\u4e8c\u79cd\uff1a\u548c CPU \u6838\u5fc3\u6570\u6302\u94a9\u7684\u7ebf\u7a0b\u6c60\u3002\u975e\u5e38\u5178\u578b\u7684\u4ee3\u7801 Runtime.getRuntime().availableProcessors()*2 \u83b7\u53d6\u786c\u4ef6\u73af\u5883\u53ef\u7528\u7684 CPU \u6838\u5fc3\u6570 2 \u500d\u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u4e2a\u6570\uff0c\u4f8b\u5982 Redisson\u3002 \u6570\u91cf\u4f18\u5316 \u7b2c\u4e00\u79cd\uff0c\u6846\u67b6\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684\u65b9\u5f0f\u663e\u7136\u5c31\u4e0d\u5408\u7406\u3002\u901a\u8fc7 CAT \u6539\u9020\uff0c\u53ef\u4ee5\u76d1\u63a7 Apache Dubbo \u7684\u7ebf\u7a0b\u6570\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u822c\u7684\u5e94\u7528\u670d\u52a1\u53ea\u7528\u4e86\u5341\u51e0\u4e2a\u7ebf\u7a0b\u3002 \u5efa\u8bae\uff0c\u53ef\u4ee5\u6839\u636e\u9ad8\u5cf0\u548c\u4e00\u5b9a\u7684\u672a\u6765\u9884\u4f30\u6765\u9002\u5f53\u7f29\u5c0f\u7ebf\u7a0b\u6c60\uff0c\u5e76\u4e14\u8003\u8651\u5c06\u7ebf\u7a0b\u6c60\u7c7b\u578b\u7531 Fixed \u6539\u4e3a Cache\uff0c\u5b9e\u73b0\u51cf\u5c11\u9879\u76ee\u7684\u542f\u52a8\u65f6\u95f4\u548c\u4e0d\u5fc5\u8981\u7684\u7ebf\u7a0b\u6c60\u6570\u91cf\u3002 \u7b2c\u4e8c\u79cd\uff0c\u4e3b\u8981\u4f1a\u5728\u516c\u53f8\u4f7f\u7528 IDC \u673a\u623f\uff0c\u91c7\u53d6\u7269\u7406\u673a\u591a\u8fdb\u7a0b\u6df7\u5408\u90e8\u7f72\u7684\u65b9\u5f0f\uff0c\u4f1a\u5b58\u5728\u7ebf\u7a0b\u6ee5\u7528\u8fc7\u591a\u7684\u60c5\u51b5\u3002 \u4ee5 Redis \u5ba2\u6237\u7aef Redisson \u4e3a\u4f8b\uff0cRedisson \u5ba2\u6237\u7aef\u4f7f\u7528 Netty \u4e0e Redis \u96c6\u7fa4\u901a\u8baf\uff0c\u9ed8\u8ba4\u7684 Netty threads \u4e3a 0\uff0c\u8fd9\u79cd\u914d\u7f6e\u4f1a\u5f62\u6210\u7ebf\u7a0b\u6570\u4e0e CPU \u6838\u5fc3\u6570\u6302\u94a9\u3002 \u5bf9\u4e8e\u5e38\u89c4\u7684\u5fae\u670d\u52a1\u8fdb\u7a0b\uff0c\u57fa\u672c\u90fd\u4f1a\u7528\u5230\u7684\u6846\u67b6\u6709 HTTP Server\u3001HTTP Client\u3001JDBC\u3001RPC Framework\u3001MQ \u548c NoSQL\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5e95\u5411\u4e0a\uff0c\u5c06\u6bcf\u4e2a\u5e94\u7528\u670d\u52a1\u7684\u5404\u4e2a\u6846\u67b6\u4f18\u5316\u4efb\u52a1\u5206\u914d\u5230\u5404\u4e2a\u6210\u5458\u3002\u7136\u540e\u81ea\u9876\u5411\u4e0b\uff0c\u901a\u8fc7 CAT \u7684\u6301\u7eed\u8ddf\u8fdb\u4f18\u5316\uff0c\u770b\u662f\u5426\u8fbe\u5230\u4e86\u9884\u671f\u3002 \u4f53\u79ef\u4f18\u5316 \u9002\u5f53\u7f29\u5c0f\u7ebf\u7a0b\u6808\u5230 512k \u4ee5\u4e0b\uff0c\u5728\u5e94\u7528\u670d\u52a1\u4f7f\u7528\u8f83\u591a\u7ebf\u7a0b\u65f6\uff0c\u4f18\u5316\u7684\u6548\u679c\u4f1a\u975e\u5e38\u660e\u663e 2 APM \u5f15\u9886\u8005\uff1aApache SkyWalking 2-1 Apache SkyWalking \u53d1\u5c55\u5386\u7a0b \u8fd9\u91cc\u6211\u5148\u5bf9\u4e0b\u9762\u5185\u5bb9\u4f7f\u7528\u7684\u7248\u672c\u53f7\uff0c\u8fdb\u884c\u7b80\u8981\u8bf4\u660e\u3002\u7248\u672c\u540e\u7f00\u4e3a\u4ec0\u4e48\u662f\u201c.X\u201d\uff1f\u5176\u5b9e\u8f6f\u4ef6\u7684\u53d1\u5e03\u7248\u672c\u53f7\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff0c\u5373\u201cX.Y.Z\u201d\uff1a \u201cX\u201d\u4ee3\u8868\u4e3b\u8981\u7248\u672c\uff0c\u6b64\u7248\u672c\u53f7\u7684\u5347\u7ea7\u4ee3\u8868\u8f6f\u4ef6\u6709\u91cd\u5927\u7279\u6027\u53d1\u5e03\uff0c\u4e14\u7279\u6027\u5f88\u53ef\u80fd\u4e0d\u5411\u524d\u517c\u5bb9\uff1b \u201cY\u201d\u4ee3\u8868\u6b21\u8981\u7248\u672c\uff0c\u8fd9\u4e2a\u7248\u672c\u901a\u5e38\u4e0d\u63d0\u4f9b\u91cd\u8981\u7684\u529f\u80fd\u7279\u6027\uff0c\u800c\u4f1a\u5bf9\u4e3b\u8981\u7248\u672c\u5e26\u6765\u7684\u91cd\u5927\u7279\u6027\uff0c\u8fdb\u884c\u8fed\u4ee3\u5347\u7ea7\uff1b \u201cZ\u201d\u4ee3\u8868\u4fee\u590d\u7248\u672c\uff0c\u7528\u4e8e Bug \u4fee\u590d\u3002 2-2 \u4f01\u4e1a\u7ea7\u843d\u5730 \u5982\u679c\u65e9\u671f\u843d\u5730\u65b9\u6848\u4e0d\u597d\uff0c\u77ed\u671f\u770b\u5230\u7684\u90fd\u662f APM \u5de5\u5177\u5e26\u6765\u7684\u95ee\u9898\uff0c\u5bf9 APM \u65e5\u540e\u7684\u63a8\u5e7f\u975e\u5e38\u4e0d\u5229\u3002 1.\u63a2\u9488\u4e0d\u7a33\u5b9a\uff0c\u5982\u4f55\u53ca\u65f6\u6b62\u635f\u5e76\u4fee\u590d\uff1f \u89e3\u51b3\u601d\u8def\u662f\uff1a\u5b9e\u73b0\u79d2\u7ea7\u522b\u7684\u6545\u969c\u6062\u590d\u548c\u95ee\u9898\u73b0\u573a\u4fdd\u7559\uff0c\u7136\u540e\u901a\u8fc7\u6301\u7eed\u7684\u5b9e\u8df5\uff0c\u6700\u7ec8\u627e\u5230\u9002\u5408\u81ea\u5df1\u56e2\u961f\u7684\u65b9\u6cd5\u8bba\u3002 \u6b62\u635f\u65b9\u6848\uff1a\u4e1a\u52a1\u65b9\u63a5\u5165 SkyWalking \u63a2\u9488\u65f6\uff0c \u9700\u8981\u8fdb\u884c\u4e00\u6bb5\u65f6\u95f4\u7684\u7070\u5ea6\u63a5\u5165\uff0c\u786e\u4fdd\u7070\u5ea6\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u95ee\u9898\uff0c\u624d\u53ef\u4ee5\u5168\u91cf\u63a5\u5165 \u3002\u800c\u5982\u679c\u7070\u5ea6\u8282\u70b9\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u4e00\u4e9b CASE \u81ea\u52a8\uff08\u5982\u8fdb\u7a0b\u6302\u6389\uff09\u548c\u515c\u5e95\u624b\u52a8\u5c06\u901a\u8fc7\u811a\u672c\u4f7f\u7528 Dump \u547d\u4ee4\u5bf9\u73b0\u573a\u8fdb\u884c\u4fdd\u7559\uff0c\u7136\u540e\u6253\u901a\u53d1\u5e03\u5e73\u53f0\u5feb\u901f\u6458\u9664\u63a2\u9488\u5e76\u4e0a\u7ebf\u3002 2.\u9488\u5bf9\u4e0d\u540c\u4e2d\u95f4\u4ef6\uff0c\u5982\u4f55\u8bbe\u8ba1\u5dee\u5f02\u5316\u843d\u5730\u65b9\u6848\uff1f APM \u76d1\u63a7\u5b58\u50a8\u7684\u6570\u636e\u90fd\u662f\u6d77\u91cf\u7ea7\u522b\u7684\u3002\u5982\u679c\u5168\u8bb0\u5f55\u4e0b\u6765\uff0c\u9700\u8981\u6295\u5165\u5927\u91cf\u7684\u8bbe\u5907\u8d44\u6e90\uff0c\u4f46\u5e26\u6765\u7684\u6536\u76ca\u5374\u5f88\u5c0f\uff0c \u5047\u8bbe\u8981\u8bbe\u8ba1\u4e00\u6b3e\u9488\u5bf9 Redis \u7684 APM \u7cfb\u7edf\uff0c\u4e5f\u5c31\u662f\u8981\u505a\u5230\u80fd\u76d1\u63a7\u5230\u7684\u6570\u636e\u6700\u5c0f\u7c92\u5ea6\u4e3a Redis \u64cd\u4f5c\u547d\u4ee4\uff0c\u90a3\u52bf\u5fc5\u8981\u505a\u51fa\u6027\u80fd\u6bd4 Redis \u8fd8\u8981\u597d\u7684\u4ea7\u54c1\u624d\u53ef\u4ee5 \u5c06\u8981\u76d1\u63a7\u7684\u4e1a\u52a1\u7cfb\u7edf\u5feb\u901f\u7684\u5206\u4e3a\u4e24\u7c7b\uff1a \u9ad8 QPS \u4f4e\u4e1a\u52a1\u7f16\u6392\u80fd\u529b\u7684\u5e95\u5c42\u7cfb\u7edf \u4f4e QPS \u9ad8\u4e1a\u52a1\u8d4b\u80fd\u7684\u4e1a\u52a1\u7cfb\u7edf 3.\u6570\u636e\u66b4\u9732\u7684\u540c\u65f6\uff0c\u5982\u4f55\u4fdd\u969c\u4fe1\u606f\u5b89\u5168\uff1f \u5f53\u4f60\u5f15\u5165 SkyWalking \u540e\uff0c\u4f1a\u53d1\u73b0\u56fa\u5b9a\u7684\u8d26\u6237\u5bc6\u7801\u767b\u5f55\u540e\uff0c\u8fd9\u4e9b\u6d89\u5bc6\u4fe1\u606f\u4fbf\u4e00\u89c8\u65e0\u4f59\u3002 SkyWalking \u63a5\u5165\u516c\u53f8\u7684\u767b\u5f55\u7cfb\u7edf\uff0c\u6bcf\u4e2a APM \u6570\u636e\u90fd\u5fc5\u987b\u6709\u76f8\u5e94\u7684\u5e94\u7528\u5f52\u5c5e\u3002\u5f53\u7528\u6237\u67e5\u8be2\u6570\u636e\u65f6\uff0c\u53ea\u6709\u7528\u6237\u6240\u5728\u7684\u5e94\u7528\u5f52\u5c5e\u4e0e APM \u6570\u636e\u7684\u5e94\u7528\u5f52\u5c5e\u4e00\u81f4\u624d\u53ef\u4ee5\u5c55\u793a\u3002 APM \u5728\u5b9a\u4f4d\u95ee\u9898\u65f6\uff0c\u9700\u8981\u76f8\u5173\u8d44\u6e90\u7684\u6570\u636e\u8054\u52a8\u5c55\u793a\uff0c\u624d\u80fd\u53d1\u6325\u51fa\u771f\u6b63\u7684\u4ef7\u503c\u3002\u6240\u4ee5\u5728\u5e94\u7528\u62d3\u6251\u548c\u5168\u94fe\u8def\u8ffd\u8e2a\u65f6\uff0c\u4f1a\u5c55\u793a\u76f8\u5173\u8054\u7684\u6280\u672f\u6570\u636e\uff0c\u5982\u7aef\u70b9\u4fe1\u606f\u3001\u8017\u65f6\u7b49\uff1b\u4f46\u4e0d\u4f1a\u5c55\u793a\u6838\u5fc3\u6570\u636e\uff0c\u5982\u63a5\u53e3\u7684\u51fa\u5165\u53c2\uff0c\u6267\u884c SQL \u5177\u4f53\u4fe1\u606f\u7b49\u3002 \u540c\u65f6\u4e5f\u6709\u90e8\u5206\u76f8\u5173\u8054\u7684\u6570\u636e\u662f\u4e0d\u5bf9\u5916\u5c55\u793a\u7684\uff0c\u5982\u516c\u53f8\u7684\u4eba\u4e8b\u3001\u85aa\u916c\u7b49\uff0c\u53ea\u5bf9\u672c\u5e94\u7528\u8d1f\u8d23\u7684 RD \u5c55\u793a\u3002 3 Java \u6027\u80fd\u5206\u6790\u795e\u5668 Alibaba Arthas 3-1 Arthas \u7684\u6838\u5fc3\u5e94\u7528\u573a\u666f\u5982\u4e0b \u573a\u666f 1\uff1a\u8fd9\u4e2a\u7c7b\u4ece\u54ea\u4e2a jar \u5305\u52a0\u8f7d\u7684\uff1f\u4e3a\u4ec0\u4e48\u4f1a\u62a5\u5404\u79cd\u7c7b\u76f8\u5173\u7684 Exception\uff1f \u573a\u666f 2\uff1a\u6211\u6539\u7684\u4ee3\u7801\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6267\u884c\uff1f\u96be\u9053\u662f\u6211\u6ca1 commit\uff1f\u5206\u652f\u641e\u9519\u4e86\uff1f \u573a\u666f 3\uff1a\u9047\u5230\u95ee\u9898\u65e0\u6cd5\u5728\u7ebf\u4e0a debug\uff0c\u96be\u9053\u53ea\u80fd\u901a\u8fc7\u52a0\u65e5\u5fd7\u518d\u91cd\u65b0\u53d1\u5e03\u5417\uff1f \u573a\u666f 4\uff1a\u7ebf\u4e0a\u9047\u5230\u67d0\u4e2a\u7528\u6237\u7684\u6570\u636e\u5904\u7406\u6709\u95ee\u9898\uff0c\u4f46\u7ebf\u4e0a\u540c\u6837\u65e0\u6cd5 debug\uff0c\u7ebf\u4e0b\u65e0\u6cd5\u91cd\u73b0\uff01 \u573a\u666f 5\uff1a\u662f\u5426\u6709\u4e00\u4e2a\u5168\u5c40\u89c6\u89d2\u6765\u67e5\u770b\u7cfb\u7edf\u7684\u8fd0\u884c\u72b6\u51b5\uff1f \u573a\u666f 6\uff1a\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u76d1\u63a7\u5230 JVM \u7684\u5b9e\u65f6\u8fd0\u884c\u72b6\u6001\uff1f \u573a\u666f 7\uff1a\u600e\u4e48\u5feb\u901f\u5b9a\u4f4d\u5e94\u7528\u7684\u70ed\u70b9\uff0c\u751f\u6210\u706b\u7130\u56fe\uff1f \u603b\u7ed3\u8d77\u6765\u5c31\u662f\uff0cArthas \u4e0d\u4ec5\u80fd\u89e3\u51b3\u5f00\u53d1\u8005\u65e0\u6cd5\u5bf9\u7ebf\u4e0a\u670d\u52a1\u8fdb\u884c Remote Debug \u7684\u96be\u9898\uff0c\u8fd8\u80fd\u4ee5\u5168\u5c40\u7684\u89c6\u89d2\u8fdb\u884c\u5728\u7ebf\u76d1\u63a7\u8bca\u65ad\u548c\u70ed\u4fee\u590d 3-2 \u5b66\u4e60\u8def\u5f84\uff1a\u547d\u4ee4+\u573a\u666f+\u539f\u7406 Arthas \u76ee\u524d\u5df2\u7ecf\u96c6\u6210\u4e86 41 \u4e2a\u5728\u7ebf\u547d\u4ee4 1.\u901a\u8fc7\u5b9e\u64cd\uff0c\u719f\u6089\u547d\u4ee4 \u6839\u636e\u5b98\u7f51\u7684\u5728\u7ebf\u6559\u7a0b \uff0c\u6309\u7167\u56db\u4e2a\u5206\u7c7b\uff1a\u57fa\u7840\u547d\u4ee4\u3001\u7cfb\u7edf\u547d\u4ee4\u3001\u7c7b\u547d\u4ee4\u548c\u589e\u5f3a\u547d\u4ee4\uff0c\u5c06\u8fd9\u4e9b\u547d\u4ee4\u901a\u901a\u5b9e\u64cd\u4e00\u904d\uff0c\u5bf9 Arthas \u547d\u4ee4\u6709\u4e2a\u5168\u5c40\u7684\u611f\u6027\u8ba4\u77e5\u3002 2.\u6df1\u5165\u573a\u666f\uff0c\u8fdb\u884c\u8bca\u65ad \u4e0b\u9762\u4fbf\u662f\u6211\u5bf9 Arthas \u5b98\u7f51\u4e0a\u4e03\u5927\u573a\u666f\u7684\u603b\u7ed3\uff0c\u8fd9\u4e03\u4e2a\u573a\u666f\u4e5f\u6700\u80fd\u4f53\u73b0 Arthas \u4ea7\u54c1\u7684\u4ef7\u503c\u3002 3-3 \u4e24\u5957\u90e8\u7f72\u65b9\u6848 4 Alibaba Sentinel \u65f6\u523b\u5b88\u536b\u6d41\u91cf\u5065\u5eb7 Sentinel \u662f\u963f\u91cc\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u67b6\u6784\u7684\u9ad8\u53ef\u7528\u9632\u62a4\u5de5\u5177\uff0c \u5b83\u4ee5\u6d41\u91cf\u4e3a\u5207\u5165\u70b9\uff0c\u63d0\u4f9b\u6d41\u91cf\u63a7\u5236\u3001\u6d41\u91cf\u5851\u5f62\u3001\u7194\u65ad\u964d\u7ea7\u548c\u8fc7\u8f7d\u4fdd\u62a4\u7b49\u591a\u7ef4\u5ea6\u7684\u9ad8\u53ef\u7528\u4fdd\u969c\u7b56\u7565 Sentinel \u4fbf\u5f00\u59cb\u7740\u529b\u751f\u6001\u53d1\u5c55\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1aSentinel \u63d0\u4f9b\u66f4\u591a Java \u5fae\u670d\u52a1\u6846\u67b6\u7684\u5f00\u7bb1\u5373\u7528\u80fd\u529b\uff1b\u540c\u65f6 Sentinel \u4e13\u6ce8 API \u7f51\u5173\u670d\u52a1\uff0c\u8ba9\u5f00\u53d1\u8005\u7684\u9ad8\u53ef\u7528\u914d\u7f6e\u5c3d\u53ef\u80fd\u5730\u6536\u53e3\uff0c\u5e76\u7740\u529b\u4e8e\u62e5\u62b1\u591a\u8bed\u8a00\u751f\u6001\u548c\u4e91\u539f\u751f\u652f\u6301\u7684\u80fd\u529b\u5efa\u8bbe\u3002 Java \u5fae\u670d\u52a1\u6846\u67b6\u9002\u914d\uff1a Sentinel \u4e0e\u5176\u4ed6 APM \u7cfb\u7edf\uff08\u5982 SkyWalking\u3001CAT\uff09\u76d1\u63a7\u6846\u67b6\u7684\u5b9e\u73b0\u65b9\u5f0f\u7c7b\u4f3c\uff0c\u901a\u8fc7\u63d2\u4ef6\u5316\u6269\u5c55\u548c\u5b9e\u73b0\u6846\u67b6\u62e6\u622a\u5668\u7684\u65b9\u5f0f\uff0c\u5bf9 Java \u5fae\u670d\u52a1\u7684 Web \u670d\u52a1\u7aef\u3001RPC \u6846\u67b6\u3001HTTP \u5ba2\u6237\u7aef\u3001\u6d88\u606f\u961f\u5217\u7b49\u591a\u4e2a\u65b9\u5411\u7684\u6846\u67b6\u8fdb\u884c\u9002\u914d\u3002 \u5f15\u5165\u76f8\u5e94\u7684\u7ec4\u4ef6\u4f9d\u8d56\uff0c\u5e76\u5b8c\u6210\u7b80\u5355\u7684\u914d\u7f6e\uff0c\u5373\u53ef\u5b8c\u6210\u76f8\u5e94\u7684\u6846\u67b6\u63a5\u5165 Sentinel\u3002\u5982\u4e0a\u56fe\u53f3\u4fa7\u6240\u793a\uff1aSentinel \u9002\u914d\u7684\u6846\u67b6\u6709 Spring\u3001Dubbo\u3001RocketMQ \u7b49 Java \u5fae\u670d\u52a1\u6846\u67b6\u3002 API \u7f51\u5173\u670d\u52a1\uff1a Sentinel \u5bf9\u5f88\u591a\u5e38\u7528\u7684\u7f51\u5173\u670d\u52a1\u8fdb\u884c\u4e86\u9002\u914d \u3002 Sentinel \u8ba4\u4e3a\uff1a\u5728\u6d41\u91cf\u5904\u4e8e\u5165\u53e3\u6216\u662f\u8f6c\u53d1\u65f6\u8fdb\u884c\u9ad8\u53ef\u7528\u9632\u62a4\uff0c\u8981\u6bd4\u6d41\u91cf\u6765\u5230\u5e94\u7528\u670d\u52a1\u540e\u518d\u8fdb\u884c\u6d41\u91cf\u63a7\u5236\uff0c\u6709\u6548\u5f97\u591a\u3002\u5982\u4e0a\u56fe\u5de6\u4fa7\u6240\u793a\uff1aSentinel \u652f\u6301\u7684 API \u7f51\u5173\u7ec4\u4ef6\u6709 ZUUL\u3001Spring Cloud Gateway \u548c Nginx \u591a\u8bed\u8a00\u652f\u6301\uff1a Sentinel \u5728\u5f00\u6e90\u540e\uff0c\u4e00\u76f4\u5728\u63a2\u7d22\u591a\u8bed\u8a00\u751f\u6001\u6f14\u8fdb\u7684\u8def\u7ebf \u3002 \u5f00\u6e90\u4e4b\u521d\uff0cSentinel \u53ea\u652f\u6301 Java\uff1b\u5f00\u6e90\u540e\uff0c\u793e\u533a\u5927\u529b\u53d1\u5c55\u591a\u8bed\u8a00\u751f\u6001\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5df2\u7ecf\u6269\u5c55\u652f\u6301\u4e86 C++ \u548c GO \u8bed\u8a00\u7684\u539f\u751f\u5ba2\u6237\u7aef\u7248\u672c\u3002\u501f\u52a9\u591a\u8bed\u8a00\u7684\u751f\u6001\uff0cSentinel \u8986\u76d6\u4e86\u66f4\u591a\u3001\u66f4\u5e7f\u7684\u573a\u666f\uff0c\u5982 GO \u8bed\u8a00\u7684 Web \u5e94\u7528\u7b49\u3002\u5982\u4e0a\u56fe\u4e2d\u90e8\u6240\u793a\uff1aSentinel \u652f\u6301\u4e86 GO \u8bed\u8a00\u548c\u591a\u79cd\u4e91\u539f\u751f\u4ea7\u54c1 Sentinel \u4e00\u76f4\u5728\u505a\u4e91\u539f\u751f\u65b9\u5411\u4e0a\u7684\u63a2\u7d22\uff0c\u76ee\u524d\u5df2\u7ecf\u5177\u5907\u652f\u6301 Service Mesh \u9ad8\u53ef\u7528\u7684\u80fd\u529b\uff0c\u5305\u62ec Istio\u3001envoy \u548c\u8682\u8681 MOSN \u7b49\u67b6\u6784\u7684\u539f\u751f\u6d41\u63a7\u652f\u6301\uff0c\u672a\u6765\u4f1a\u5bf9\u4e91\u539f\u751f\u8fdb\u884c\u66f4\u591a\u573a\u666f\u843d\u5730\uff0c\u6bd4\u5982 kubernetes \u5e73\u53f0\u6574\u5408\u7b49\u3002 1.\u6280\u672f\u9aa8\u67b6\u56fe\uff0c\u6df1\u5165\u8bbe\u8ba1\u539f\u7406 2 \u6784\u5efa\u8c03\u7528\u6811\uff08TreeNodeBuilder \u548c Cluster NODE Builder\uff09 \u89c4\u5219\u63a7\u5236\uff08Action\uff09 3 \u670d\u52a1\u8282\u70b9\u5f15\u5165 \u5bf9\u4e8e\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u5c06\u7edf\u4e00\u7684\u57fa\u5efa\u811a\u624b\u67b6\u4e2d\u5f15\u5165 Sentinel \u5ba2\u6237\u7aef\uff0c\u5373\u53ef\u5b8c\u6210\u90e8\u7f72 \u3002\u5982\u679c\u5e94\u7528\u670d\u52a1\u6ca1\u6709\u811a\u624b\u67b6\u57fa\u5efa\uff0c\u7f51\u5173\u7684\u5e94\u7528\u670d\u52a1\u5f15\u5165 Sentinel \u5ba2\u6237\u7aef\u53ef\u4ee5\u4f18\u5148\u4e8e\u4e1a\u52a1\u7684\u5e94\u7528\u670d\u52a1\u3002 \u5bf9\u4e8e\u670d\u52a1\u7aef\uff0c\u6211\u4eec\u9700\u8981\u5bf9 Sentinel \u5f15\u5165\u52a8\u6001\u6570\u636e\u6e90\uff0c\u89e3\u51b3\u5e94\u7528\u670d\u52a1\u91cd\u542f\u540e\uff0c\u89c4\u5219\u4e22\u5931\u7684\u95ee\u9898\u3002Sentinel \u5df2\u7ecf\u9002\u914d\u4e86\u6240\u6709\u5e38\u89c1\u7684\u52a8\u6001\u6570\u636e\u6e90\u7ec4\u4ef6\uff0c\u4f60\u53ef\u4ee5\u56e0\u5730\u5236\u5b9c\u5730\u9009\u62e9\u5176\u4e00\u8fdb\u884c\u90e8\u7f72\u3002\u4f8b\u5982\uff0c\u4f01\u4e1a\u5185\u90e8\u4f7f\u7528 Apollo \u89e3\u51b3\u4e86\u5206\u5e03\u5f0f\u914d\u7f6e\u7edf\u4e00\u7ba1\u7406\u7684\u95ee\u9898\uff0c\u90a3 Sentinel \u52a8\u6001\u6570\u636e\u6e90\u53ef\u4ee5\u4f7f\u7528 sentinel-datasource-apollo \u7ec4\u4ef6\u5b8c\u6210 Sentinel \u670d\u52a1\u7aef\u7684\u52a8\u6001\u6570\u636e\u6e90\u3002 4 \u6545\u969c\u5b9a\u4f4d\uff1aJava VisualVM Java VisualVM\uff08All-in-One Java Troubleshooting Tool\uff09 \uff0cVisualVM \u662f\u7b2c\u4e00\u6b3e\u96c6\u6210\u4e86Java \u547d\u4ee4\u884c\u5de5\u5177\u548c\u652f\u6301\u5b9e\u65f6\u5728\u7ebf\u95ee\u9898\u5206\u6790\u7684\u8f7b\u91cf\u7ea7\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u4f5c\u4e3a Oracle Java 6 \u7684\u4e00\u90e8\u5206\u5bf9\u5916\u53d1\u5e03\u3002 1.\u64cd\u4f5c\u6743\u9650 VisualVM \u4e0d\u652f\u6301\u591a\u7528\u6237-\u89d2\u8272\u6a21\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c3d\u53ef\u80fd\u7f29\u5c0f\u4f7f\u7528 VisualVM \u64cd\u4f5c\u5e94\u7528\u670d\u52a1\u7684\u4eba\u5458\u8303\u56f4\u3002 \u52a8\u6001\u7ba1\u7406\u4ea7\u54c1\u6811\u4e0a\u6bcf\u4e2a\u5e94\u7528\u670d\u52a1\u8282\u70b9\u4e0a\u7684\u5f52\u5c5e\u6210\u5458\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0 VisualVM \u5de5\u5177\u6743\u9650\u7684\u7edf\u4e00\u7ba1\u7406\u3002\u4f7f\u7528\u4ea7\u54c1\u6811\u5bf9\u6240\u6709 APM \u5de5\u5177\u7684\u4f7f\u7528\u6743\u9650\u8fdb\u884c\u6536\u53e3\uff0c\u5728\u56e2\u961f\u6108\u53d1\u58ee\u5927\u65f6\uff0c\u6536\u76ca\u4e5f\u4f1a\u8d8a\u6765\u8d8a\u5927\u3002 2.\u5b89\u5168\u9650\u5236 JMX\uff08Java Management Extensions\uff09 JMX \u662f\u4e00\u4e2a\u89c4\u8303\uff0c\u5b83\u5b9e\u73b0\u4e86 Java \u8fdc\u7a0b\u76d1\u63a7\u7ba1\u7406\u7684\u63a5\u53e3\u3002 3 VisualVM \u56db\u4e2a\u9009\u9879\u5361\u90fd\u6709\u54ea\u4e9b\u80fd\u529b\uff1f \u6982\u8ff0\uff1a\u6b64\u754c\u9762\u5c55\u793a\u8fdb\u7a0b\u76f8\u5173\u7684\u6982\u89c8\u4fe1\u606f\u3001JVM \u53c2\u6570\u548c\u7cfb\u7edf\u5c5e\u6027 \u3002\u56e0\u4e3a\u4f01\u4e1a\u4e2d\u5f00\u53d1\u4eba\u5458\u662f\u65e0\u6cd5\u76f4\u89c2\u67e5\u770b\u7ebf\u4e0a\u914d\u7f6e\uff0c\u6240\u4ee5\u6982\u8ff0\u9009\u9879\u5361\u5f88\u597d\u5730\u5c55\u793a\u8fdb\u7a0b\u4f7f\u7528\u7684\u7ebf\u4e0a\u73af\u5883\u4fe1\u606f\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u5feb\u901f\u786e\u5b9a\u662f\u5426\u662f\u73af\u5883\u95ee\u9898\u9020\u6210\u7684\u7ebf\u4e0a\u95ee\u9898\u3002 \u76d1\u89c6\uff1a\u6b64\u754c\u9762\u5c55\u793a\u5b9e\u65f6\u7684 CPU \u4f7f\u7528\u60c5\u51b5\u3001JVM \u5806\u4fe1\u606f\uff0c\u4ee5\u53ca Java 8 \u7684\u5143\u7a7a\u95f4\u4fe1\u606f\u3001\u7c7b\u52a0\u8f7d\u60c5\u51b5\u3001\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u60c5\u51b5 \u3002\u6b64\u9875\u9762\u7684\u76d1\u89c6\u6570\u636e\u4e0d\u652f\u6301\u8ffd\u6eaf\u5386\u53f2\uff0c\u6240\u4ee5\u8ffd\u6eaf\u5386\u53f2\u53ef\u4ee5\u4f7f\u7528 CAT \u7b49 APM \u5de5\u5177\u89e3\u51b3\u3002\u76d1\u89c6\u754c\u9762\u7684\u6267\u884c GC\u3001\u5806 Dump \u53ef\u4ee5\u4ee5\u6700\u5feb\u901f\u5ea6\u8fdb\u884c\u73b0\u573a\u4fdd\u7559\u3002 \u7ebf\u7a0b\uff1a\u6b64\u9875\u754c\u9762\u5c55\u793a\u5b9e\u65f6\u8fd0\u884c\u7684\u5404\u4e2a\u7ebf\u7a0b\u60c5\u51b5\uff0c\u4e3b\u8981\u5305\u62ec\u7ebf\u7a0b\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u8fd0\u884c\u72b6\u51b5\uff0c\u901a\u8fc7\u4e0d\u540c\u989c\u8272\u7684\u6807\u8bc6\u7ebf\u7a0b\u5206\u522b\u5904\u4e8e\u7684 5 \u79cd\u5e38\u89c1\u72b6\u6001\uff1a \u8fd0\u884c\u3001\u4f11\u7720\u3001\u7b49\u5f85\u3001\u9a7b\u7559\u3001\u76d1\u89c6 \uff1b\u53f3\u4e0a\u89d2\u201c\u7ebf\u7a0b Dump\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5bf9\u7ebf\u7a0b\u8fdb\u884c\u5feb\u7167\u64cd\u4f5c\u3002 \u62bd\u6837\u5668\uff1a\u6b64\u754c\u9762\u5bf9\u8fdb\u7a0b\u4f7f\u7528\u7684 CPU \u548c\u5185\u5b58\u8fdb\u884c\u91c7\u6837\uff0c\u8fdb\u884c\u6027\u80fd\u5206\u6790 \u3002CPU \u62bd\u6837\uff0c\u901a\u8fc7\u65b9\u6cd5\u7684\u89c6\u89d2\uff0c\u67e5\u770b\u65b9\u6cd5\u5360\u7528 CPU \u7684\u60c5\u51b5\uff1b\u5185\u5b58\u62bd\u6837\uff0c\u901a\u8fc7\u7c7b\u540d\u5f52\u7c7b\u548c\u7ebf\u7a0b\u4f7f\u7528\u5185\u5b58\u7684\u89c6\u89d2\uff0c\u8fdb\u884c\u5185\u5b58\u5206\u914d\u7684\u8c03\u4f18\u3002 4 VisualVM \u7684\u63d2\u4ef6\u4f53\u7cfb \u5bf9\u4e8e\u4f7f\u7528 Java 8 \u7684\u7528\u6237\uff0cVisualVM \u5df2\u7ecf\u5728 JDK \u7684 bin \u76ee\u5f55\u4e2d\u4e86\u3002\u4f46\u5f53\u4f60\u6253\u5f00\u63d2\u4ef6\u4ed3\u5e93\uff0c\u4f1a\u53d1\u73b0\u6ca1\u6709\u53ef\u4ee5\u5b89\u88c5\u7684\u63d2\u4ef6\uff0c\u662f\u56e0\u4e3a\u63d2\u4ef6\u7684\u5730\u5740\u5df2\u5931\u6548\uff0c\u9700\u8981\u6211\u4eec\u624b\u52a8\u66f4\u65b0\u5b98\u65b9\u7684\u63d2\u4ef6\u4e2d\u5fc3\u5730\u5740\u3002 \u5bf9\u4e8e\u4f7f\u7528 Java 11 \u7684\u7528\u6237\uff0cVisualVM \u5728 JDK9 \u540e\uff0c\u5df2\u4e0d\u518d\u4e3a Oracle JDK \u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u9700\u8981\u53bb VisualVM\u5b98\u7f51 \u8fdb\u884c\u4e0b\u8f7d\u3002 \u76ee\u524d VisualVM \u5386\u7ecf\u4e86\u5341\u51e0\u5e74\u7684\u53d1\u5c55\uff0c\u603b\u5171\u6709 20 \u4e2a\u591a\u63d2\u4ef6\uff0c\u6839\u636e\u63d2\u4ef6\u7c7b\u578b\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b 8 \u79cd\u3002 Profiling\uff08\u6027\u80fd\u5256\u6790\uff09\uff1aStartup Profiler\u3001BTrace Workbench Sources\uff08\u4ee3\u7801\u8d44\u6e90\uff09\uff1aVisualVM-GoToSource Tools\uff08\u5de5\u5177\uff09\uff1aThreads Inspector\u3001VisualVM-JConsole\u3001VisualVM-BufferMonitor\u3001VisualVM-TDA-Module\u3001KillApplication\u3001VisualVM-Coherence\u3001Visual GC\u3001VisualVM-MBeans Platform\uff08\u76d1\u63a7\uff09\uff1aVisualVM-Extensions Security\uff08\u5b89\u5168\uff09\uff1aVisualVM-Security Tracer\uff08\u8ffd\u8e2a\uff09\uff1aTracer-Monitor Probes\u3001Tracer-Collections Probes\u3001Tracer-JavaFX Probes\u3001Tracer-IO Probes\u3001Tracer-Swing Probes\u3001Tracer-Jvmstat Probes\u3001Tracer-JVM Probes UI\uff08\u9875\u9762\u589e\u5f3a\uff09\uff1aOQL Syntax Support Libraries\uff08\u7c7b\u5e93\uff09\uff1aGraalJS \u6bd4\u5982\uff1aStartup Profiler\u63d2\u4ef6\u662f\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u542f\u52a8\u9636\u6bb5\u8fdb\u884c\u5256\u6790\u7684\u5de5\u5177\uff1bGoToSource \u63d2\u4ef6\u662f\u652f\u6301\u6e90\u4ee3\u7801\u5bfc\u822a\u548c\u5c55\u793a\u3002 4 \u65e5\u5fd7\u53ef\u89c6\u5316\uff1aKibana ELK \u662f Elastic \u516c\u53f8\u7684\u4e09\u4e2a\u5f00\u6e90\u9879\u76ee\u7684\u7f29\u5199\uff0c\u8fd9\u4e09\u4e2a\u9879\u76ee\u5206\u522b\u5982\u4e0b\u3002 Elasticsearch\uff1a\u57fa\u4e8e Apache Lucene \u641c\u7d22\u5f15\u64ce\uff0c\u4f7f\u7528 RESTful \u63a5\u53e3\u5c4f\u853d\u4e86\u641c\u7d22\u67b6\u6784\u7684\u590d\u6742\u6027\u3002 Logstash\uff1a\u670d\u52a1\u5668\u6570\u636e\u5904\u7406\u7ba1\u9053\u3002 Kibana\uff1aElasticsearch \u641c\u7d22\u5f15\u64ce\u7684\u53ef\u89c6\u5316\u5e73\u53f0\u3002 1 \u91cd\u65b0\u8ba4\u8bc6\u65e5\u5fd7 \u5f53\u4e0b\u7684\u4e1a\u52a1\u5f00\u53d1\u4eba\u5458\u90fd\u662f\u5c06\u65e5\u5fd7\u4fe1\u606f\u59d4\u6258\u7ed9\u65e5\u5fd7\u6846\u67b6\u8fdb\u884c\u6253\u5370\uff0c\u6240\u4ee5\u65e5\u5fd7\u5185\u5bb9\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a \u65e5\u5fd7\u6846\u67b6\u6253\u5370\u7684\u65e5\u5fd7\u4fe1\u606f \u4e00\u7ebf\u5f00\u53d1\u4eba\u5458\u6253\u5370\u7684\u65e5\u5fd7\u4fe1\u606f \u9664\u4e86\u4e1a\u52a1\u5f00\u53d1\u4eba\u5458\u901a\u8fc7\u65e5\u5fd7\u6846\u67b6\u6253\u5370\u4e1a\u52a1\u65e5\u5fd7\u5916\uff0c\u5728\u6846\u67b6\u5c42\u9762\u8fd8\u6709\u6846\u67b6\u65e5\u5fd7\u3002 \u5176\u4e2d\u65e5\u5fd7\u6846\u67b6\u6253\u5370\u7684\u4fe1\u606f\uff0c\u5e38\u7528\u7684\u5c5e\u6027\u5982\u4e0b\u3002 \u65f6\u95f4\u6233 \uff1a\u8c03\u7528\u65e5\u5fd7\u65b9\u6cd5\u65f6\u751f\u6210\u65f6\u95f4\u6233\uff0c\u89e3\u51b3\u5f02\u6b65\u6253\u5370\u3001\u5f02\u6b65\u6536\u96c6\u9020\u6210\u7684\u65f6\u95f4\u4e0d\u7cbe\u51c6\u95ee\u9898\u3002 \u7ebf\u7a0b\u540d\u79f0 \uff1a\u7531\u4e8e\u7ebf\u7a0b ID \u4e0d\u76f4\u89c2\uff0c\u6240\u4ee5\u901a\u5e38\u4f7f\u7528\u7ebf\u7a0b\u540d\u79f0\u6765\u6807\u8bc6\u7ebf\u7a0b\uff08\u6ce8\u610f\u4e0d\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u7ebf\u7a0b\u540d\u79f0\uff0c\u9700\u8981\u6839\u636e\u4f7f\u7528\u7ebf\u7a0b\u60c5\u51b5\u6765\u91cd\u547d\u540d\u7ebf\u7a0b\u540d\u79f0\uff09\u3002 \u65e5\u5fd7\u7ea7\u522b \uff1a\u6839\u636e\u65e5\u5fd7\u7ea7\u522b\u7684\u4e0d\u540c\uff0c\u53ef\u7c97\u7565\u5730\u5bf9\u65e5\u5fd7\u8fdb\u884c\u9884\u5904\u7406\u3002\u6bd4\u5982 DEBUG\u3001TRACE \u7ea7\u522b\u7684\u65e5\u5fd7\u53ea\u6709\u5728\u5b9a\u4f4d\u95ee\u9898\u65f6\u624d\u8bb0\u5f55\uff1b\u5f53\u65e5\u5fd7\u4e3a ERROR \u7ea7\u522b\u65f6\uff0c\u7acb\u523b\u53d1\u51fa\u544a\u8b66\u3002 \u8c03\u7528\u4f4d\u7f6e \uff1a\u8bb0\u5f55\u6253\u5370\u65e5\u5fd7\u7684\u7c7b\u540d\u548c\u884c\u53f7\uff0c\u6709\u52a9\u4e8e\u5f00\u53d1\u4eba\u5458\u5feb\u901f\u5bfb\u627e\u6e90\u4ee3\u7801\u7684\u4e0a\u4e0b\u6587\u73b0\u573a\u3002 \u589e\u5f3a\u5c5e\u6027 \uff1a\u5982\u5168\u94fe\u8def\u8ddf\u8e2a ID\uff0c\u7528\u4e8e\u8ffd\u6eaf\u5f15\u8d77\u65e5\u5fd7\u6253\u5370\u7684\u4e0a\u4e0b\u6e38\u3002 2 Kibana \u63a2\u7d22\u548c\u5206\u6790\u65e5\u5fd7 \u7b2c\u4e00\u79cd\uff1a\u901a\u8fc7 Kibana \u63a2\u7d22\uff08Discovery\uff09\u529f\u80fd\uff0c\u8fdb\u884c\u51c6\u786e\u3001\u5b9e\u65f6\u7684\u96c6\u4e2d\u65e5\u5fd7\u641c\u7d22\u3002 \u7b2c\u4e8c\u79cd\uff1a\u521b\u5efa\u591a\u6837\u7684\u53ef\u89c6\u5316\u89c6\u56fe\uff08Visualize\uff09\uff0c\u5c06\u76f8\u5173\u8054\u7684\u89c6\u56fe\u7ec4\u5408\u6210\u4eea\u8868\u76d8\uff08Dashboard\uff09\u3002 \u7b2c\u4e09\u79cd\uff1a\u901a\u8fc7 Elasticsearch SQL \u76f4\u63a5\u4ece Elasticsearch \u4e2d\u63d0\u53d6\u6570\u636e\uff0c\u52a0\u4e0a\u4e30\u5bcc\u5143\u7d20\u5e03\u5c40\u7ed8\u5236\u753b\u5e03\uff08Canvas\uff09\u3002 \u4f7f\u7528\u65b9\u5f0f\u90fd\u662f\u5fc5\u987b\u57fa\u4e8e\u521b\u5efa\u7d22\u5f15\u6a21\u5f0f\uff08index pattern\uff09 1.\u521b\u5efa\u7d22\u5f15\u6a21\u5f0f \u7d22\u5f15\u6a21\u5f0f\u544a\u8bc9 Kibana \u54ea\u4e9b Elasticsearch \u7d22\u5f15\u5305\u542b\u4e86\u4f60\u60f3\u5904\u7406\u7684\u65e5\u5fd7\u6570\u636e\uff0c\u521b\u5efa\u7d22\u5f15\u6a21\u5f0f\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u6700\u5e38\u89c1\u7684\u5c31\u662f\u4f7f\u7528\u540e\u7f6e\u901a\u914d\u7b26\u3002 \u5728\u5355\u4e2a Elasticsearch \u96c6\u7fa4\u5185\u90e8\u5b8c\u6210\u7d22\u5f15\u6a21\u5f0f\u7684\u521b\u5efa\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u96c6\u7fa4\u5185\u90e8\u6709\u591a\u4e2a\u4ee5\u201c\u5929\u201d\u4e3a\u5207\u5206\u7ef4\u5ea6\u7684\u65e5\u5fd7\u7d22\u5f15\u3002\u5982 data_logs-20210307 \u3001 data_logs-20210306 \u3001d ata_logs-20210305 \u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 data_logs-* \u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5b8c\u6210\u7d22\u5f15\u7684\u5339\u914d\u3002 2.\u63a2\u7d22\u65e5\u5fd7 \u641c\u7d22\u6761\u4ef6\uff1a\u7f51\u7ad9\u8bf7\u6c42\u975e\u6b63\u5e38\u8fd4\u56de\uff08HTTP \u72b6\u6001\u7801\u975e 200\uff09\uff0c\u4e14\u5730\u57df\u4e3a\u4e2d\u56fd\u6d41\u91cf\u3002 \u7ed3\u679c\u8fc7\u6ee4\uff1a\u7531\u4e8e\u65e5\u5fd7\u5c5e\u6027\u8f83\u591a\uff0c\u5b9e\u73b0\u53ea\u8fd4\u56de IP \u5730\u5740\u3001\u673a\u5668\u8bbe\u5907\u548c\u8bf7\u6c42\u7684 host\u3002 \u65f6\u95f4\u8303\u56f4\uff1a\u6700\u8fd1\u4e03\u5929\u3002 3.\u5236\u4f5c\u591a\u6837\u7684\u53ef\u89c6\u5316\u89c6\u56fe 4.\u6784\u5efa\u4eea\u8868\u76d8 \u4eea\u8868\u76d8\u662f\u76f8\u5173\u53ef\u89c6\u5316\u89c6\u56fe\u7684\u96c6\u5408\uff0c\u8fdb\u5165\u4eea\u8868\u76d8\u7684\u7f16\u8f91\u6a21\u5f0f\uff0c\u5f15\u5165\u76f8\u5173\u4e3b\u9898\u7684\u53ef\u89c6\u5316\u89c6\u56fe\u3002\u7136\u540e\u5bf9\u53ef\u89c6\u5316\u89c6\u56fe\u8fdb\u884c\u5c55\u793a\u5e03\u5c40\u8c03\u6574\uff0c\u5c31\u5b8c\u6210\u4e86\u4eea\u8868\u76d8\u7684\u521b\u5efa\u3002 5.\u7ed8\u5236\u753b\u5e03 \u521b\u5efa\u7a7a\u767d\u5de5\u4f5c\u533a\u57df\uff08workpad\uff09 \u9009\u62e9\u5143\u7d20\uff0c\u8bbe\u7f6e\u5143\u7d20\u7684\u989c\u8272\u3001\u56fe\u50cf\u548c\u6570\u636e \u6307\u5b9a\u5143\u7d20\u7684\u5c3a\u5bf8\u548c\u8c03\u6574\u5e03\u5c40 \u4fdd\u5b58\u753b\u5e03\u7684\u6f14\u793a\u5e03\u5c40 5 \u591a\u6570\u636e\u6e90\u8ba9 Grafana \u76d1\u63a7\u62a5\u8b66\u66f4\u9ad8\u6548 5-1 Grafana \u7684\u6838\u5fc3\u8bbe\u8ba1 Zabbix \u4f46\u5f53\u4e0b\u5bf9\u7269\u7406\u8282\u70b9\u7684\u76d1\u63a7\u8bc9\u6c42\u8fd8\u662f\u5f88\u9700\u8981\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u5c06\u8bb2\u8ff0 Grafana \u5982\u4f55\u901a\u8fc7\u63d2\u4ef6\u751f\u6001\uff0c\u96c6\u6210 Zabbix \u6570\u636e\u6e90\uff0c\u5b8c\u6210\u5bf9\u7269\u7406\u8282\u70b9\u7684\u6027\u80fd\u6307\u6807\u76d1\u63a7\u3002 Zabbix \u662f\u76d1\u63a7\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5176\u5177\u5907\u7269\u7406\u673a\u6027\u80fd\u76d1\u63a7\u548c\u5bf9\u7f51\u7edc\u72b6\u51b5\u7684\u76d1\u63a7\u3002\u4f7f\u7528\u5ba2\u6237\u7aef\u3001\u670d\u52a1\u7aef\u6a21\u5f0f\u8fdb\u884c\u6536\u96c6\u6570\u636e\uff0c\u5373\u7269\u7406\u673a\u5b89\u88c5 Zabbix Agent \u5ba2\u6237\u7aef\u91c7\u96c6\u6570\u636e\u4f20\u9001\u7ed9\u670d\u52a1\u7aef\uff0c\u901a\u8fc7 web \u670d\u52a1\u76f4\u63a5\u5bf9\u63a5\u670d\u52a1\u7aef\u5b8c\u6210\u5c55\u793a\u3002\u7531\u4e8e Zabbix web \u5c55\u793a\u76d1\u63a7\u6570\u636e\u4e0d\u7406\u60f3\uff0c\u6240\u4ee5\u89e3\u51b3\u65b9\u6848\u662f\u901a\u8fc7 Grafana \u96c6\u6210 Zabbix \u6570\u636e\u6e90\u5b8c\u6210\u76d1\u63a7\u6570\u636e\u7684\u5c55\u793a\u3002 Zabbix \u6570\u636e\u6e90\u5c5e\u4e8e\u975e\u5b98\u65b9\u652f\u6301\u7684\u6570\u636e\u6e90\uff0c\u9700\u8981\u4ece\u5f00\u653e\u7684\u63d2\u4ef6\u751f\u6001\u5f15\u5165\uff0c\u91cd\u542f Grafana \u670d\u52a1\u540e\uff0c\u5373\u53ef\u5728\u6570\u636e\u6e90\u4e2d\u770b\u5230 Zabbix \u6570\u636e\u6e90\u3002 \u591a\u7ef4\u5ea6\u62a5\u8b66 \u76f8\u8f83\u4e8e Kibana \u9700\u8981\u5c06\u7528\u6237\u5347\u7ea7\u4e3a\u9ec4\u91d1\u7528\u6237\u4ee5\u4e0a\u7ea7\u522b\u624d\u652f\u6301\u62a5\u8b66\u529f\u80fd\uff0cGrafana \u62a5\u8b66\u529f\u80fd\u662f\u5b8c\u5168\u5f00\u653e\u7684\uff0c\u53ea\u8981\u5c06 Grafana \u5347\u7ea7\u5230 4.0 \u7248\u672c\u4ee5\u4e0a\u5373\u53ef\u3002 \u5728\u62a5\u8b66\u914d\u7f6e\u754c\u9762\uff0c\u53ef\u4ee5\u5c06\u62a5\u8b66\u4fe1\u606f\u53d1\u9001\u81f3\u804a\u5929\u5de5\u5177 Slack\u3001\u4e8b\u4ef6\u7ba1\u7406\u5e73\u53f0 PagerDuty \u7b49\u5728 Github \u4e3b\u6d41\u7684\u62a5\u8b66\u5a92\u4ecb\uff1b\u4e5f\u53ef\u4ee5\u6309\u7167\u4f01\u4e1a\u5fae\u4fe1\u548c\u9489\u9489\u7684 API \u5f00\u53d1\u6587\u6863\uff0c\u5bf9\u63a5\u56fd\u5185\u4e3b\u6d41\u529e\u516c\u5e73\u53f0\u3002\u901a\u8fc7\u914d\u7f6e\u62a5\u8b66\u5a92\u4ecb\u5e76\u96c6\u6210\u76d1\u63a7\u6570\u636e\u6e90\u540e\uff0c\u4fbf\u80fd\u4f9d\u636e\u53ef\u89c6\u5316\u9762\u677f\u7684\u6307\u6807\u914d\u7f6e\u62a5\u8b66\u7684\u89c4\u5219\u4e86\u3002 Grafana\u62a5\u8b66\u89c4\u5219\u7684\u8bbe\u8ba1\u662f\u901a\u8fc7\u540e\u53f0\u7684\u4e00\u4e2a\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u5b9a\u65f6\u5730\u901a\u8fc7\u67e5\u8be2\u5f15\u64ce\u8bc6\u522b\u51fa\u5f53\u524d\u53ef\u89c6\u5316\u9762\u677f\u4e2d\u7684\u6307\u6807\u662f\u5426\u89e6\u53ca\u62a5\u8b66\u89c4\u5219\u3002\u5982\u679c\u89e6\u53ca\uff0c\u5219\u8c03\u7528\u62a5\u8b66\u5a92\u4ecb\u4e0b\u8fbe\u62a5\u8b66\u901a\u77e5\u3002 \u7531\u4e8e Grafana \u662f\u53ef\u89c6\u5316\u5e73\u53f0\uff0c\u76d1\u63a7\u6570\u636e\u7684\u83b7\u53d6\u65b9\u5f0f\u53ef\u89c6\u4f5c\u4e3a\u201c\u62c9\u6a21\u5f0f\u201d\uff0c\u4e14\u62a5\u8b66\u8bbe\u8ba1\u901a\u8fc7\u540e\u53f0\u8c03\u5ea6\u7a0b\u5e8f\u5b8c\u6210\uff0c\u6240\u4ee5\u6b64\u65b9\u6848\u7684\u8bbe\u8ba1\u6765\u62a5\u8b66\u4f1a\u7a0d\u8bb8\u6ede\u540e\u3002 \u5e94\u7528\u670d\u52a1\u914d\u7f6e Grafana \u6307\u6807 1.\u7528\u6237\u884c\u4e3a\u76d1\u63a7 1\uff09\u7528\u6237\u751f\u547d\u5468\u671f\u76d1\u63a7 \u5e38\u89c1\u751f\u547d\u5468\u671f\u5206\u4e3a\u5982\u4e0b\u56fe\u7684 5 \u5c42\uff0c\u4ece\u7528\u6237\u63a5\u89e6\u4ea7\u54c1\u5230\u9057\u5fd8\u4ea7\u54c1\u7684\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u76d1\u63a7\u5206\u6790\u7528\u6237\u5728\u4e0d\u540c\u9636\u6bb5\u7684\u8868\u73b0\uff0c\u6709\u7684\u653e\u77e2\u5730\u4f18\u5316\u4ea7\u54c1\u4f53\u9a8c\uff0c\u5f15\u5bfc\u7528\u6237\u5b8c\u6210\u8fd0\u8425\u7b56\u7565\u3002 2.\u6838\u5fc3\u573a\u666f\u76d1\u63a7 \u4e1a\u52a1\u573a\u666f\uff1a\u901a\u8fc7\u4e00\u7ec4\u76f8\u5173\u8054\u7684\u6570\u636e\u6216\u4e8b\u4ef6\uff0c\u6765\u53cd\u6620\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u7684\u4e1a\u52a1\u573a\u666f\u3002 \u4e1a\u52a1\u5047\u8bbe\uff1a\u901a\u8fc7\u4e1a\u52a1\u573a\u666f\u53ef\u80fd\u5728\u672a\u6765\u53d1\u751f\u7684\u4e8b\u60c5\u505a\u4e00\u7cfb\u5217\u7684\u4e1a\u52a1\u5047\u8bbe\u3002 \u76d1\u63a7\u65b9\u6848\uff1a\u4ee5\u4e1a\u52a1\u573a\u666f\u7684\u6570\u636e\u6307\u6807\u4e3a\u4f9d\u636e\uff0c\u76d1\u63a7\u4e1a\u52a1\u5047\u8bbe\u662f\u5426\u6210\u7acb\u3002 \u5173\u952e\u4e3e\u63aa\uff1a\u5f53\u5047\u8bbe\u6210\u7acb\u65f6\uff0c\u542f\u52a8\u4e00\u4e9b\u5e94\u6025\u4e3e\u63aa\u3002 1.\u9884\u9632\u62d6\u57ae\u6838\u5fc3\u8d44\u6e90 2.\u7528\u6237\u6743\u9650\u9694\u79bb 6 \u719f\u6089 APM \u4ea7\u54c1 APM \u662f\u5e94\u7528\u6027\u80fd\u7ba1\u7406\uff08Application Performance Management\uff09\u7684\u7f29\u5199\u3002\u4ece\u5b8f\u89c2\u89d2\u5ea6\u4e0a\u770b\uff0c\u9762\u5411\u89e3\u51b3\u4ea7\u54c1\uff08\u5bf9\u7528\u6237\uff09\u4f53\u9a8c\u4e0d\u597d\u7684\u884c\u4e3a\uff0c\u90fd\u53ef\u4ee5\u79f0\u4e3a APM\uff0c\u56e0\u6b64 APM \u6d89\u53ca\u7684\u8303\u7574\u975e\u5e38\u5e7f\u6cdb Apache SkyWalking \u901a\u8fc7\u94fe\u8def\u8ffd\u8e2a\u9875\u9762\u83b7\u53d6\u6162\u94fe\u8def\u7684 Endpoint\uff1b \u518d\u901a\u8fc7\u6027\u80fd\u5256\u6790\u9875\u9762\u4e0a\u7684\u8f93\u5165\u6846\uff0c\u63cf\u8ff0\u4f60\u8981\u5256\u6790\u7684 Endpoint\uff1b \u6700\u540e SkyWalking \u4f1a\u901a\u8fc7\u62bd\u6837\u5c55\u793a\u8fd9\u4e2a Endpoint \u5173\u8054\u7684\u7ebf\u7a0b\u5806\u6808\u4fe1\u606f Alibaba Arthas \u901a\u8fc7\u65e5\u5fd7\u4e0a\u7684\u6570\u636e\u9762\u677f\uff08dashboard\uff09\u547d\u4ee4\u6216\u7ebf\u7a0b\uff08thread\uff09\u547d\u4ee4\uff0c\u83b7\u53d6\u60f3\u8981 Dump \u7684\u7ebf\u7a0b ID\uff1b \u518d\u901a\u8fc7\u7ebf\u7a0b\u547d\u4ee4\uff0c\u8ffd\u52a0\u7ebf\u7a0b ID \u53c2\u6570\u83b7\u53d6\u7ebf\u7a0b\u7684\u5806\u6808\u4fe1\u606f\uff1b \u6700\u540e\u901a\u8fc7\u5404\u79cd\u5728\u7ebf\u6545\u969c\u6392\u67e5\u547d\u4ee4\uff0c\u4ece\u800c\u53bb\u8bca\u65ad\u95ee\u9898\u3002 Java VisualVM \u901a\u8fc7\u5e94\u7528\u670d\u52a1\u4f7f\u7528\u65e5\u5fd7\u6846\u67b6\u4e2d\u6253\u5370\u7684\u7ebf\u7a0b\u540d\u79f0\uff0c\u6216 VisualVM \u53ef\u89c6\u5316\u5ba2\u6237\u7aef\u7684\u7ebf\u7a0b\u9009\u9879\u5361\u5c55\u793a\u7684\u5e94\u7528\u540d\u79f0\uff0c\u4ece\u800c\u83b7\u53d6\u7ebf\u7a0b\u5b9e\u65f6\u5de5\u4f5c\u72b6\u6001\uff1b \u518d\u901a\u8fc7\u7ebf\u7a0b\u540d\u79f0\uff0c\u4f7f\u7528 Threads intspector \u63d2\u4ef6\u83b7\u53d6\u7ebf\u7a0b\u7684\u5806\u6808\u4fe1\u606f\uff1b \u6700\u540e\u4f7f\u7528\u5404\u79cd\u63d2\u4ef6\u8fdb\u884c\u95ee\u9898\u8bca\u65ad\u3002","title":"\u7b2c\u4e00\u8282 APM\u4ea7\u54c1\u843d\u5730\u5b9e\u6218"},{"location":"chap_apm/1apm_prods/#apm","text":"","title":"\u7b2c\u4e00\u8282 APM\u4ea7\u54c1\u843d\u5730\u5b9e\u6218"},{"location":"chap_apm/1apm_prods/#1-cat","text":"CAT\uff08Central Application Tracking\uff09 \u9996\u5148\uff0c\u4ece\u65f6\u95f4\u4e0a\u770b\uff0cCAT \u9996\u4e2a\u5f00\u6e90\u7248\u672c\u662f\u5728 2012 \u5e74\uff0c\u6b64\u65f6\u671f\u4e0e APM \u76f8\u5173\u91cd\u5927\u4e8b\u4ef6\u6709\uff1a Google \u516c\u53f8\u53d1\u5e03\u300a Dapper \u8bba\u6587 \u300b\uff1b \u7d27\u968f\u5176\u540e\uff0cNaver \u516c\u53f8\u53d1\u5e03\u5f00\u6e90\u65e0\u4fb5\u5165 APM \u7cfb\u7edf Pinpoint \uff1b Twitter \u516c\u53f8\u53d1\u5e03\u5f00\u6e90 APM \u7cfb\u7edf Zipkin \uff0cZipkin \u662f Spring Cloud \u5206\u5e03\u5f0f\u8ffd\u8e2a\u7cfb\u7edf Spring-Cloud-Sleuth \u7684\u89e3\u51b3\u65b9\u6848\u3002","title":"1 \u7cfb\u7edf\u76d1\u63a7\uff1a\u8001\u724c\u76d1\u63a7\u70b9\u8bc4 CAT"},{"location":"chap_apm/1apm_prods/#1-1-cat","text":"Java \u5f00\u53d1\u5b9e\u73b0\u7684\u5b9e\u65f6\u5e94\u7528\u76d1\u63a7\u5e73\u53f0, \u8d77\u521d\u4e13\u4e3a\u5927\u89c4\u6a21 Java \u5fae\u670d\u52a1\u96c6\u7fa4\u63d0\u4f9b\u5b9e\u65f6\u76d1\u63a7\u62a5\u8b66\u573a\u666f \u5e94\u7528\u670d\u52a1\u5728\u4ee3\u7801\u4e2d\u5f15\u5165 CAT \u5ba2\u6237\u7aef\u548c\u76f8\u5173\u57cb\u70b9\u96c6\u6210\u65b9\u6848\u5373\u53ef\u5b8c\u6210\u63a5 \u670d\u52a1\u7aef\u7531\u4e24\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c \u8d1f\u8d23\u6536\u96c6\u5206\u6790\u5ba2\u6237\u7aef\u6570\u636e\u7684\u6536\u96c6\u5668\u6a21\u5757 \u548c \u8d1f\u8d23\u7ed9\u7528\u6237\u63d0\u4f9b\u62a5\u8868\u5c55\u793a\u7684\u63a7\u5236\u7aef\u6a21\u5757 \u603b\u7684\u6765\u8bf4 CAT \u4ea7\u54c1\u67b6\u6784\u662f\u7531\u4e09\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u67b6\u6784\u8bbe\u8ba1\u975e\u5e38\u6e05\u6670\uff1a Cat-client \u63d0\u4f9b\u7ed9\u5e94\u7528\u4ee5\u53ca\u4e2d\u95f4\u5c42\u57cb\u70b9\u7684\u5e95\u5c42 SDK Cat-consumer \u7528\u4e8e\u5b9e\u65f6\u5206\u6790\u4ece\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u6570\u636e\uff08\u6536\u96c6\u5668\u6a21\u5757\uff09 Cat-home \u4f5c\u4e3a\u7ed9\u7528\u6237\u63d0\u4f9b\u5c55\u793a\u7684\u63a7\u5236\u7aef\uff08\u63a7\u5236\u7aef\u6a21\u5757\uff09","title":"1-1 CAT \u51ed\u4ec0\u4e48\u79f0\u4e3a\u201c\u8001\u724c\u76d1\u63a7\u201d\uff1f"},{"location":"chap_apm/1apm_prods/#1-2","text":"CAT \u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u62a5\u8868\uff0c\u5e94\u7528\u670d\u52a1\u7b80\u5355\u63a5\u5165 CAT \u5ba2\u6237\u7aef\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 CAT \u670d\u52a1\u7aef\u5168\u65b9\u4f4d\u5730\u76d1\u63a7\u5e94\u7528\u96c6\u7fa4\u4e86","title":"1-2 \u5b9e\u65f6\u7684\u4ee3\u7801\u6bb5\u76d1\u63a7\u62a5\u8868"},{"location":"chap_apm/1apm_prods/#1-3","text":"","title":"1-3 \u5ba2\u6237\u7aef\u6027\u80fd\u635f\u8017\u4f4e"},{"location":"chap_apm/1apm_prods/#1-4","text":"\u5efa\u8bae\u6240\u6709\u5e94\u7528\u670d\u52a1\u63a5\u5165 CAT \u4e0d\u5efa\u8bae\u4f7f\u7528 CAT \u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u529f\u80fd \u201c\u6811\u5f62\u201d\u6a21\u578b\u65e0\u6cd5\u8ffd\u8e2a\u6279\u5904\u7406\u6846\u67b6\u7684\u94fe\u8def CAT \u4f7f\u7528 ROOT\u3001PARENT \u548c CHILD \u4e09\u4e2a\u53c2\u6570\u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f\u94fe\u8def\u8ddf\u8e2a\u7684\u201c\u6811\u5f62\u201d\u6a21\u578b\uff0c\u800c\u201c\u6811\u5f62\u201d\u6a21\u578b\u662f \u65e0\u6cd5\u7ed8\u5236\u5206\u5e03\u5f0f\u96c6\u7fa4\u4e2d\u5b58\u5728\u6279\u5904\u7406\u6846\u67b6\u7684\u94fe\u8def\u7684 \u3002 \u5373\u4f7f\u4e0d\u9700\u8981\u8ffd\u8e2a\u6279\u5904\u7406\u6846\u67b6\u7684\u94fe\u8def\uff0cCAT \u5206\u5e03\u5f0f\u94fe\u8def\u8ddf\u8e2a\u4ee3\u7801\u4e5f\u9700\u8981\u8ba9\u6bcf\u4e2a RD \u7406\u89e3\u8ddf\u8e2a\u6a21\u578b\uff0c\u7136\u540e\u5206\u5e03\u5f0f\u8ddf\u8e2a\u7684\u4e0a\u4e0b\u6e38\u90fd\u9700\u8981\u53bb\u8fdb\u884c\u624b\u52a8\u57cb\u70b9\u624d\u53ef\u4ee5\u5b9e\u73b0 \u62a5\u8868\u5c55\u793a\u6548\u679c\u4e0d\u7406\u60f3\uff0c\u4e14\u8fc7\u65f6 CAT \u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u5c55\u793a\uff0c\u53ef\u901a\u8fc7 Transaction \u62a5\u8868\u7684 logview \u89c6\u56fe\u67e5\u770b\u3002\u4e2a\u4eba\u89c9\u5f97\u5176\u5c55\u793a\u6548\u679c\u76f8\u8f83 SkyWalking\u3001Zipkin \u7684\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u89c6\u56fe\u5b58\u5728\u660e\u663e\u5dee\u8ddd\u3002","title":"1-4 \u843d\u5730\u5b9e\u8df5\u8981\u70b9"},{"location":"chap_apm/1apm_prods/#1-5","text":"1.\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u7ebf\u7a0b\u4f18\u5316\uff1f \u4ece\u8f6f\u4ef6\u8d44\u6e90\u89d2\u5ea6 \uff1aJava\u4ece\u5e94\u7528\u89c6\u89d2\u770b\uff0c\u7ebf\u7a0b\u7684\u4f18\u5316\u53ef\u4ee5\u4f18\u5316 JVM \u8d44\u6e90\uff0c\u4ece\u800c\u51cf\u5c11 GC\u3002 \u4ece\u786c\u4ef6\u8d44\u6e90\u89d2\u5ea6 \uff1a \u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u8282\u70b9\u8d44\u6e90\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\uff0c\u964d\u4f4e\u786c\u4ef6\u6210\u672c \u4ece\u53ef\u7528\u6027\u89d2\u5ea6 \uff1a\u975e\u9884\u671f\u7684 GC \u5bfc\u81f4\u5e94\u7528\u8282\u70b9\u4e0d\u80fd\u6309\u7167\u9884\u671f\u54cd\u5e94\u6d88\u8d39\u8005\uff0c\u9020\u6210\u5e94\u7528\u670d\u52a1\u4e0d\u53ef\u7528\u3002 2.\u4f7f\u7528\u7ebf\u7a0b\u7684\u6b63\u786e\u59ff\u52bf \u6b63\u786e\u4f7f\u7528\u65b9\u5f0f\u662f \u4f7f\u7528\u7ebf\u7a0b\u6c60\u53bb\u7ba1\u7406\u7ebf\u7a0b\uff1b \u7ebf\u7a0b\u7684\u547d\u540d\u9700\u8981\u6709\u610f\u4e49\uff1b \u4efb\u52a1\u7ebf\u7a0b\u7684\u6570\u91cf\u9700\u8981\u4e0e\u5de5\u4f5c\u7ebf\u7a0b\u6302\u94a9\uff0c\u4e14\u9700\u8981\u8003\u8651\u6781\u7aef\u60c5\u51b5\uff0c\u5982\u6545\u969c\u91cd\u542f\u3002 3.CAT \u6539\u9020 \u4e3a\u4e86\u8ba9 Heartbeat \u62a5\u8868\u652f\u6301\u66f4\u7ec6\u7684\u6846\u67b6\u7ebf\u7a0b\u7c92\u5ea6\u76d1\u63a7\uff0c\u6211\u4eec\u9700\u8981\u638c\u63e1 CAT \u7684\u76d1\u63a7\u7ebf\u7a0b\u5b9e\u73b0\u539f\u7406\u3002Heartbeat \u529f\u80fd\u91c7\u96c6\u7ebf\u7a0b\u901a\u8fc7 Java ThreadMXBean \u83b7\u53d6\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u4fe1 \u539f\u7406\u5f88\u7b80\u5355\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u76d1\u63a7 Apache Dubbo \u7684\u6838\u5fc3\u7ebf\u7a0b\u548c\u6d3b\u8dc3\u7ebf\u7a0b\u6570\uff0c\u53ea\u9700\u8981\u5728\u6b64\u5904\u4ee3\u7801\u589e\u52a0\u524d\u7f00 DubboServerHandler- \uff0c\u5373\u53ef\u76d1\u63a7 Apache Dubbo \u7684\u6838\u5fc3\u7ebf\u7a0b\uff0c\u7136\u540e\u904d\u5386\u6240\u6709\u7684\u7ebf\u7a0b\uff0c\u901a\u8fc7\u83b7\u53d6\u8fd0\u884c\u72b6\u6001\u6216\u8005\u975e\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b\uff0c\u5c31\u53ef\u4ee5\u7edf\u8ba1\u51fa\u6d3b\u8dc3\u7ebf\u7a0b\u6570\u3002 4. \u4f18\u5316\u5b9e\u6218 \u6b64\u5e94\u7528\u670d\u52a1\u5b58\u5728\u5927\u91cf\u7684\u5185\u7f6e\u6846\u67b6\uff08Apache Dubbo\u3001Netty\uff09\u7684\u8fc7\u5ea6\u7ebf\u7a0b\u4f7f\u7528\uff0c\u8fd9\u4e9b \u6846\u67b6\u6ee5\u7528\u7ebf\u7a0b \u7684\u5f62\u5f0f\u901a\u5e38\u4f1a\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u3002 \u7b2c\u4e00\u79cd\uff1a\u7ebf\u7a0b\u6c60\u4f7f\u7528\u4e00\u4e2a\u8f83\u5927\u7684\u56fa\u5b9a\u503c\u3002\u4f8b\u5982 Apache Dubbo \u4e3a\u4f8b\uff0c\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u9ed8\u8ba4\u7ebf\u7a0b\u6570\u4e3a 200 \u7684 Fixed \u7684\u7ebf\u7a0b\u6c60\u3002 \u7b2c\u4e8c\u79cd\uff1a\u548c CPU \u6838\u5fc3\u6570\u6302\u94a9\u7684\u7ebf\u7a0b\u6c60\u3002\u975e\u5e38\u5178\u578b\u7684\u4ee3\u7801 Runtime.getRuntime().availableProcessors()*2 \u83b7\u53d6\u786c\u4ef6\u73af\u5883\u53ef\u7528\u7684 CPU \u6838\u5fc3\u6570 2 \u500d\u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u4e2a\u6570\uff0c\u4f8b\u5982 Redisson\u3002 \u6570\u91cf\u4f18\u5316 \u7b2c\u4e00\u79cd\uff0c\u6846\u67b6\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684\u65b9\u5f0f\u663e\u7136\u5c31\u4e0d\u5408\u7406\u3002\u901a\u8fc7 CAT \u6539\u9020\uff0c\u53ef\u4ee5\u76d1\u63a7 Apache Dubbo \u7684\u7ebf\u7a0b\u6570\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u822c\u7684\u5e94\u7528\u670d\u52a1\u53ea\u7528\u4e86\u5341\u51e0\u4e2a\u7ebf\u7a0b\u3002 \u5efa\u8bae\uff0c\u53ef\u4ee5\u6839\u636e\u9ad8\u5cf0\u548c\u4e00\u5b9a\u7684\u672a\u6765\u9884\u4f30\u6765\u9002\u5f53\u7f29\u5c0f\u7ebf\u7a0b\u6c60\uff0c\u5e76\u4e14\u8003\u8651\u5c06\u7ebf\u7a0b\u6c60\u7c7b\u578b\u7531 Fixed \u6539\u4e3a Cache\uff0c\u5b9e\u73b0\u51cf\u5c11\u9879\u76ee\u7684\u542f\u52a8\u65f6\u95f4\u548c\u4e0d\u5fc5\u8981\u7684\u7ebf\u7a0b\u6c60\u6570\u91cf\u3002 \u7b2c\u4e8c\u79cd\uff0c\u4e3b\u8981\u4f1a\u5728\u516c\u53f8\u4f7f\u7528 IDC \u673a\u623f\uff0c\u91c7\u53d6\u7269\u7406\u673a\u591a\u8fdb\u7a0b\u6df7\u5408\u90e8\u7f72\u7684\u65b9\u5f0f\uff0c\u4f1a\u5b58\u5728\u7ebf\u7a0b\u6ee5\u7528\u8fc7\u591a\u7684\u60c5\u51b5\u3002 \u4ee5 Redis \u5ba2\u6237\u7aef Redisson \u4e3a\u4f8b\uff0cRedisson \u5ba2\u6237\u7aef\u4f7f\u7528 Netty \u4e0e Redis \u96c6\u7fa4\u901a\u8baf\uff0c\u9ed8\u8ba4\u7684 Netty threads \u4e3a 0\uff0c\u8fd9\u79cd\u914d\u7f6e\u4f1a\u5f62\u6210\u7ebf\u7a0b\u6570\u4e0e CPU \u6838\u5fc3\u6570\u6302\u94a9\u3002 \u5bf9\u4e8e\u5e38\u89c4\u7684\u5fae\u670d\u52a1\u8fdb\u7a0b\uff0c\u57fa\u672c\u90fd\u4f1a\u7528\u5230\u7684\u6846\u67b6\u6709 HTTP Server\u3001HTTP Client\u3001JDBC\u3001RPC Framework\u3001MQ \u548c NoSQL\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5e95\u5411\u4e0a\uff0c\u5c06\u6bcf\u4e2a\u5e94\u7528\u670d\u52a1\u7684\u5404\u4e2a\u6846\u67b6\u4f18\u5316\u4efb\u52a1\u5206\u914d\u5230\u5404\u4e2a\u6210\u5458\u3002\u7136\u540e\u81ea\u9876\u5411\u4e0b\uff0c\u901a\u8fc7 CAT \u7684\u6301\u7eed\u8ddf\u8fdb\u4f18\u5316\uff0c\u770b\u662f\u5426\u8fbe\u5230\u4e86\u9884\u671f\u3002 \u4f53\u79ef\u4f18\u5316 \u9002\u5f53\u7f29\u5c0f\u7ebf\u7a0b\u6808\u5230 512k \u4ee5\u4e0b\uff0c\u5728\u5e94\u7528\u670d\u52a1\u4f7f\u7528\u8f83\u591a\u7ebf\u7a0b\u65f6\uff0c\u4f18\u5316\u7684\u6548\u679c\u4f1a\u975e\u5e38\u660e\u663e","title":"1-5 \u7ebf\u7a0b\u4f18\u5316"},{"location":"chap_apm/1apm_prods/#2-apm-apache-skywalking","text":"","title":"2 APM \u5f15\u9886\u8005\uff1aApache SkyWalking"},{"location":"chap_apm/1apm_prods/#2-1-apache-skywalking","text":"\u8fd9\u91cc\u6211\u5148\u5bf9\u4e0b\u9762\u5185\u5bb9\u4f7f\u7528\u7684\u7248\u672c\u53f7\uff0c\u8fdb\u884c\u7b80\u8981\u8bf4\u660e\u3002\u7248\u672c\u540e\u7f00\u4e3a\u4ec0\u4e48\u662f\u201c.X\u201d\uff1f\u5176\u5b9e\u8f6f\u4ef6\u7684\u53d1\u5e03\u7248\u672c\u53f7\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff0c\u5373\u201cX.Y.Z\u201d\uff1a \u201cX\u201d\u4ee3\u8868\u4e3b\u8981\u7248\u672c\uff0c\u6b64\u7248\u672c\u53f7\u7684\u5347\u7ea7\u4ee3\u8868\u8f6f\u4ef6\u6709\u91cd\u5927\u7279\u6027\u53d1\u5e03\uff0c\u4e14\u7279\u6027\u5f88\u53ef\u80fd\u4e0d\u5411\u524d\u517c\u5bb9\uff1b \u201cY\u201d\u4ee3\u8868\u6b21\u8981\u7248\u672c\uff0c\u8fd9\u4e2a\u7248\u672c\u901a\u5e38\u4e0d\u63d0\u4f9b\u91cd\u8981\u7684\u529f\u80fd\u7279\u6027\uff0c\u800c\u4f1a\u5bf9\u4e3b\u8981\u7248\u672c\u5e26\u6765\u7684\u91cd\u5927\u7279\u6027\uff0c\u8fdb\u884c\u8fed\u4ee3\u5347\u7ea7\uff1b \u201cZ\u201d\u4ee3\u8868\u4fee\u590d\u7248\u672c\uff0c\u7528\u4e8e Bug \u4fee\u590d\u3002","title":"2-1 Apache SkyWalking \u53d1\u5c55\u5386\u7a0b"},{"location":"chap_apm/1apm_prods/#2-2","text":"\u5982\u679c\u65e9\u671f\u843d\u5730\u65b9\u6848\u4e0d\u597d\uff0c\u77ed\u671f\u770b\u5230\u7684\u90fd\u662f APM \u5de5\u5177\u5e26\u6765\u7684\u95ee\u9898\uff0c\u5bf9 APM \u65e5\u540e\u7684\u63a8\u5e7f\u975e\u5e38\u4e0d\u5229\u3002 1.\u63a2\u9488\u4e0d\u7a33\u5b9a\uff0c\u5982\u4f55\u53ca\u65f6\u6b62\u635f\u5e76\u4fee\u590d\uff1f \u89e3\u51b3\u601d\u8def\u662f\uff1a\u5b9e\u73b0\u79d2\u7ea7\u522b\u7684\u6545\u969c\u6062\u590d\u548c\u95ee\u9898\u73b0\u573a\u4fdd\u7559\uff0c\u7136\u540e\u901a\u8fc7\u6301\u7eed\u7684\u5b9e\u8df5\uff0c\u6700\u7ec8\u627e\u5230\u9002\u5408\u81ea\u5df1\u56e2\u961f\u7684\u65b9\u6cd5\u8bba\u3002 \u6b62\u635f\u65b9\u6848\uff1a\u4e1a\u52a1\u65b9\u63a5\u5165 SkyWalking \u63a2\u9488\u65f6\uff0c \u9700\u8981\u8fdb\u884c\u4e00\u6bb5\u65f6\u95f4\u7684\u7070\u5ea6\u63a5\u5165\uff0c\u786e\u4fdd\u7070\u5ea6\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u95ee\u9898\uff0c\u624d\u53ef\u4ee5\u5168\u91cf\u63a5\u5165 \u3002\u800c\u5982\u679c\u7070\u5ea6\u8282\u70b9\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u4e00\u4e9b CASE \u81ea\u52a8\uff08\u5982\u8fdb\u7a0b\u6302\u6389\uff09\u548c\u515c\u5e95\u624b\u52a8\u5c06\u901a\u8fc7\u811a\u672c\u4f7f\u7528 Dump \u547d\u4ee4\u5bf9\u73b0\u573a\u8fdb\u884c\u4fdd\u7559\uff0c\u7136\u540e\u6253\u901a\u53d1\u5e03\u5e73\u53f0\u5feb\u901f\u6458\u9664\u63a2\u9488\u5e76\u4e0a\u7ebf\u3002 2.\u9488\u5bf9\u4e0d\u540c\u4e2d\u95f4\u4ef6\uff0c\u5982\u4f55\u8bbe\u8ba1\u5dee\u5f02\u5316\u843d\u5730\u65b9\u6848\uff1f APM \u76d1\u63a7\u5b58\u50a8\u7684\u6570\u636e\u90fd\u662f\u6d77\u91cf\u7ea7\u522b\u7684\u3002\u5982\u679c\u5168\u8bb0\u5f55\u4e0b\u6765\uff0c\u9700\u8981\u6295\u5165\u5927\u91cf\u7684\u8bbe\u5907\u8d44\u6e90\uff0c\u4f46\u5e26\u6765\u7684\u6536\u76ca\u5374\u5f88\u5c0f\uff0c \u5047\u8bbe\u8981\u8bbe\u8ba1\u4e00\u6b3e\u9488\u5bf9 Redis \u7684 APM \u7cfb\u7edf\uff0c\u4e5f\u5c31\u662f\u8981\u505a\u5230\u80fd\u76d1\u63a7\u5230\u7684\u6570\u636e\u6700\u5c0f\u7c92\u5ea6\u4e3a Redis \u64cd\u4f5c\u547d\u4ee4\uff0c\u90a3\u52bf\u5fc5\u8981\u505a\u51fa\u6027\u80fd\u6bd4 Redis \u8fd8\u8981\u597d\u7684\u4ea7\u54c1\u624d\u53ef\u4ee5 \u5c06\u8981\u76d1\u63a7\u7684\u4e1a\u52a1\u7cfb\u7edf\u5feb\u901f\u7684\u5206\u4e3a\u4e24\u7c7b\uff1a \u9ad8 QPS \u4f4e\u4e1a\u52a1\u7f16\u6392\u80fd\u529b\u7684\u5e95\u5c42\u7cfb\u7edf \u4f4e QPS \u9ad8\u4e1a\u52a1\u8d4b\u80fd\u7684\u4e1a\u52a1\u7cfb\u7edf 3.\u6570\u636e\u66b4\u9732\u7684\u540c\u65f6\uff0c\u5982\u4f55\u4fdd\u969c\u4fe1\u606f\u5b89\u5168\uff1f \u5f53\u4f60\u5f15\u5165 SkyWalking \u540e\uff0c\u4f1a\u53d1\u73b0\u56fa\u5b9a\u7684\u8d26\u6237\u5bc6\u7801\u767b\u5f55\u540e\uff0c\u8fd9\u4e9b\u6d89\u5bc6\u4fe1\u606f\u4fbf\u4e00\u89c8\u65e0\u4f59\u3002 SkyWalking \u63a5\u5165\u516c\u53f8\u7684\u767b\u5f55\u7cfb\u7edf\uff0c\u6bcf\u4e2a APM \u6570\u636e\u90fd\u5fc5\u987b\u6709\u76f8\u5e94\u7684\u5e94\u7528\u5f52\u5c5e\u3002\u5f53\u7528\u6237\u67e5\u8be2\u6570\u636e\u65f6\uff0c\u53ea\u6709\u7528\u6237\u6240\u5728\u7684\u5e94\u7528\u5f52\u5c5e\u4e0e APM \u6570\u636e\u7684\u5e94\u7528\u5f52\u5c5e\u4e00\u81f4\u624d\u53ef\u4ee5\u5c55\u793a\u3002 APM \u5728\u5b9a\u4f4d\u95ee\u9898\u65f6\uff0c\u9700\u8981\u76f8\u5173\u8d44\u6e90\u7684\u6570\u636e\u8054\u52a8\u5c55\u793a\uff0c\u624d\u80fd\u53d1\u6325\u51fa\u771f\u6b63\u7684\u4ef7\u503c\u3002\u6240\u4ee5\u5728\u5e94\u7528\u62d3\u6251\u548c\u5168\u94fe\u8def\u8ffd\u8e2a\u65f6\uff0c\u4f1a\u5c55\u793a\u76f8\u5173\u8054\u7684\u6280\u672f\u6570\u636e\uff0c\u5982\u7aef\u70b9\u4fe1\u606f\u3001\u8017\u65f6\u7b49\uff1b\u4f46\u4e0d\u4f1a\u5c55\u793a\u6838\u5fc3\u6570\u636e\uff0c\u5982\u63a5\u53e3\u7684\u51fa\u5165\u53c2\uff0c\u6267\u884c SQL \u5177\u4f53\u4fe1\u606f\u7b49\u3002 \u540c\u65f6\u4e5f\u6709\u90e8\u5206\u76f8\u5173\u8054\u7684\u6570\u636e\u662f\u4e0d\u5bf9\u5916\u5c55\u793a\u7684\uff0c\u5982\u516c\u53f8\u7684\u4eba\u4e8b\u3001\u85aa\u916c\u7b49\uff0c\u53ea\u5bf9\u672c\u5e94\u7528\u8d1f\u8d23\u7684 RD \u5c55\u793a\u3002","title":"2-2 \u4f01\u4e1a\u7ea7\u843d\u5730"},{"location":"chap_apm/1apm_prods/#3-java-alibaba-arthas","text":"","title":"3 Java \u6027\u80fd\u5206\u6790\u795e\u5668 Alibaba Arthas"},{"location":"chap_apm/1apm_prods/#3-1-arthas","text":"\u573a\u666f 1\uff1a\u8fd9\u4e2a\u7c7b\u4ece\u54ea\u4e2a jar \u5305\u52a0\u8f7d\u7684\uff1f\u4e3a\u4ec0\u4e48\u4f1a\u62a5\u5404\u79cd\u7c7b\u76f8\u5173\u7684 Exception\uff1f \u573a\u666f 2\uff1a\u6211\u6539\u7684\u4ee3\u7801\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6267\u884c\uff1f\u96be\u9053\u662f\u6211\u6ca1 commit\uff1f\u5206\u652f\u641e\u9519\u4e86\uff1f \u573a\u666f 3\uff1a\u9047\u5230\u95ee\u9898\u65e0\u6cd5\u5728\u7ebf\u4e0a debug\uff0c\u96be\u9053\u53ea\u80fd\u901a\u8fc7\u52a0\u65e5\u5fd7\u518d\u91cd\u65b0\u53d1\u5e03\u5417\uff1f \u573a\u666f 4\uff1a\u7ebf\u4e0a\u9047\u5230\u67d0\u4e2a\u7528\u6237\u7684\u6570\u636e\u5904\u7406\u6709\u95ee\u9898\uff0c\u4f46\u7ebf\u4e0a\u540c\u6837\u65e0\u6cd5 debug\uff0c\u7ebf\u4e0b\u65e0\u6cd5\u91cd\u73b0\uff01 \u573a\u666f 5\uff1a\u662f\u5426\u6709\u4e00\u4e2a\u5168\u5c40\u89c6\u89d2\u6765\u67e5\u770b\u7cfb\u7edf\u7684\u8fd0\u884c\u72b6\u51b5\uff1f \u573a\u666f 6\uff1a\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u76d1\u63a7\u5230 JVM \u7684\u5b9e\u65f6\u8fd0\u884c\u72b6\u6001\uff1f \u573a\u666f 7\uff1a\u600e\u4e48\u5feb\u901f\u5b9a\u4f4d\u5e94\u7528\u7684\u70ed\u70b9\uff0c\u751f\u6210\u706b\u7130\u56fe\uff1f \u603b\u7ed3\u8d77\u6765\u5c31\u662f\uff0cArthas \u4e0d\u4ec5\u80fd\u89e3\u51b3\u5f00\u53d1\u8005\u65e0\u6cd5\u5bf9\u7ebf\u4e0a\u670d\u52a1\u8fdb\u884c Remote Debug \u7684\u96be\u9898\uff0c\u8fd8\u80fd\u4ee5\u5168\u5c40\u7684\u89c6\u89d2\u8fdb\u884c\u5728\u7ebf\u76d1\u63a7\u8bca\u65ad\u548c\u70ed\u4fee\u590d","title":"3-1 Arthas \u7684\u6838\u5fc3\u5e94\u7528\u573a\u666f\u5982\u4e0b"},{"location":"chap_apm/1apm_prods/#3-2","text":"Arthas \u76ee\u524d\u5df2\u7ecf\u96c6\u6210\u4e86 41 \u4e2a\u5728\u7ebf\u547d\u4ee4 1.\u901a\u8fc7\u5b9e\u64cd\uff0c\u719f\u6089\u547d\u4ee4 \u6839\u636e\u5b98\u7f51\u7684\u5728\u7ebf\u6559\u7a0b \uff0c\u6309\u7167\u56db\u4e2a\u5206\u7c7b\uff1a\u57fa\u7840\u547d\u4ee4\u3001\u7cfb\u7edf\u547d\u4ee4\u3001\u7c7b\u547d\u4ee4\u548c\u589e\u5f3a\u547d\u4ee4\uff0c\u5c06\u8fd9\u4e9b\u547d\u4ee4\u901a\u901a\u5b9e\u64cd\u4e00\u904d\uff0c\u5bf9 Arthas \u547d\u4ee4\u6709\u4e2a\u5168\u5c40\u7684\u611f\u6027\u8ba4\u77e5\u3002 2.\u6df1\u5165\u573a\u666f\uff0c\u8fdb\u884c\u8bca\u65ad \u4e0b\u9762\u4fbf\u662f\u6211\u5bf9 Arthas \u5b98\u7f51\u4e0a\u4e03\u5927\u573a\u666f\u7684\u603b\u7ed3\uff0c\u8fd9\u4e03\u4e2a\u573a\u666f\u4e5f\u6700\u80fd\u4f53\u73b0 Arthas \u4ea7\u54c1\u7684\u4ef7\u503c\u3002","title":"3-2 \u5b66\u4e60\u8def\u5f84\uff1a\u547d\u4ee4+\u573a\u666f+\u539f\u7406"},{"location":"chap_apm/1apm_prods/#3-3","text":"","title":"3-3 \u4e24\u5957\u90e8\u7f72\u65b9\u6848"},{"location":"chap_apm/1apm_prods/#4-alibaba-sentinel","text":"Sentinel \u662f\u963f\u91cc\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u67b6\u6784\u7684\u9ad8\u53ef\u7528\u9632\u62a4\u5de5\u5177\uff0c \u5b83\u4ee5\u6d41\u91cf\u4e3a\u5207\u5165\u70b9\uff0c\u63d0\u4f9b\u6d41\u91cf\u63a7\u5236\u3001\u6d41\u91cf\u5851\u5f62\u3001\u7194\u65ad\u964d\u7ea7\u548c\u8fc7\u8f7d\u4fdd\u62a4\u7b49\u591a\u7ef4\u5ea6\u7684\u9ad8\u53ef\u7528\u4fdd\u969c\u7b56\u7565 Sentinel \u4fbf\u5f00\u59cb\u7740\u529b\u751f\u6001\u53d1\u5c55\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1aSentinel \u63d0\u4f9b\u66f4\u591a Java \u5fae\u670d\u52a1\u6846\u67b6\u7684\u5f00\u7bb1\u5373\u7528\u80fd\u529b\uff1b\u540c\u65f6 Sentinel \u4e13\u6ce8 API \u7f51\u5173\u670d\u52a1\uff0c\u8ba9\u5f00\u53d1\u8005\u7684\u9ad8\u53ef\u7528\u914d\u7f6e\u5c3d\u53ef\u80fd\u5730\u6536\u53e3\uff0c\u5e76\u7740\u529b\u4e8e\u62e5\u62b1\u591a\u8bed\u8a00\u751f\u6001\u548c\u4e91\u539f\u751f\u652f\u6301\u7684\u80fd\u529b\u5efa\u8bbe\u3002 Java \u5fae\u670d\u52a1\u6846\u67b6\u9002\u914d\uff1a Sentinel \u4e0e\u5176\u4ed6 APM \u7cfb\u7edf\uff08\u5982 SkyWalking\u3001CAT\uff09\u76d1\u63a7\u6846\u67b6\u7684\u5b9e\u73b0\u65b9\u5f0f\u7c7b\u4f3c\uff0c\u901a\u8fc7\u63d2\u4ef6\u5316\u6269\u5c55\u548c\u5b9e\u73b0\u6846\u67b6\u62e6\u622a\u5668\u7684\u65b9\u5f0f\uff0c\u5bf9 Java \u5fae\u670d\u52a1\u7684 Web \u670d\u52a1\u7aef\u3001RPC \u6846\u67b6\u3001HTTP \u5ba2\u6237\u7aef\u3001\u6d88\u606f\u961f\u5217\u7b49\u591a\u4e2a\u65b9\u5411\u7684\u6846\u67b6\u8fdb\u884c\u9002\u914d\u3002 \u5f15\u5165\u76f8\u5e94\u7684\u7ec4\u4ef6\u4f9d\u8d56\uff0c\u5e76\u5b8c\u6210\u7b80\u5355\u7684\u914d\u7f6e\uff0c\u5373\u53ef\u5b8c\u6210\u76f8\u5e94\u7684\u6846\u67b6\u63a5\u5165 Sentinel\u3002\u5982\u4e0a\u56fe\u53f3\u4fa7\u6240\u793a\uff1aSentinel \u9002\u914d\u7684\u6846\u67b6\u6709 Spring\u3001Dubbo\u3001RocketMQ \u7b49 Java \u5fae\u670d\u52a1\u6846\u67b6\u3002 API \u7f51\u5173\u670d\u52a1\uff1a Sentinel \u5bf9\u5f88\u591a\u5e38\u7528\u7684\u7f51\u5173\u670d\u52a1\u8fdb\u884c\u4e86\u9002\u914d \u3002 Sentinel \u8ba4\u4e3a\uff1a\u5728\u6d41\u91cf\u5904\u4e8e\u5165\u53e3\u6216\u662f\u8f6c\u53d1\u65f6\u8fdb\u884c\u9ad8\u53ef\u7528\u9632\u62a4\uff0c\u8981\u6bd4\u6d41\u91cf\u6765\u5230\u5e94\u7528\u670d\u52a1\u540e\u518d\u8fdb\u884c\u6d41\u91cf\u63a7\u5236\uff0c\u6709\u6548\u5f97\u591a\u3002\u5982\u4e0a\u56fe\u5de6\u4fa7\u6240\u793a\uff1aSentinel \u652f\u6301\u7684 API \u7f51\u5173\u7ec4\u4ef6\u6709 ZUUL\u3001Spring Cloud Gateway \u548c Nginx \u591a\u8bed\u8a00\u652f\u6301\uff1a Sentinel \u5728\u5f00\u6e90\u540e\uff0c\u4e00\u76f4\u5728\u63a2\u7d22\u591a\u8bed\u8a00\u751f\u6001\u6f14\u8fdb\u7684\u8def\u7ebf \u3002 \u5f00\u6e90\u4e4b\u521d\uff0cSentinel \u53ea\u652f\u6301 Java\uff1b\u5f00\u6e90\u540e\uff0c\u793e\u533a\u5927\u529b\u53d1\u5c55\u591a\u8bed\u8a00\u751f\u6001\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5df2\u7ecf\u6269\u5c55\u652f\u6301\u4e86 C++ \u548c GO \u8bed\u8a00\u7684\u539f\u751f\u5ba2\u6237\u7aef\u7248\u672c\u3002\u501f\u52a9\u591a\u8bed\u8a00\u7684\u751f\u6001\uff0cSentinel \u8986\u76d6\u4e86\u66f4\u591a\u3001\u66f4\u5e7f\u7684\u573a\u666f\uff0c\u5982 GO \u8bed\u8a00\u7684 Web \u5e94\u7528\u7b49\u3002\u5982\u4e0a\u56fe\u4e2d\u90e8\u6240\u793a\uff1aSentinel \u652f\u6301\u4e86 GO \u8bed\u8a00\u548c\u591a\u79cd\u4e91\u539f\u751f\u4ea7\u54c1 Sentinel \u4e00\u76f4\u5728\u505a\u4e91\u539f\u751f\u65b9\u5411\u4e0a\u7684\u63a2\u7d22\uff0c\u76ee\u524d\u5df2\u7ecf\u5177\u5907\u652f\u6301 Service Mesh \u9ad8\u53ef\u7528\u7684\u80fd\u529b\uff0c\u5305\u62ec Istio\u3001envoy \u548c\u8682\u8681 MOSN \u7b49\u67b6\u6784\u7684\u539f\u751f\u6d41\u63a7\u652f\u6301\uff0c\u672a\u6765\u4f1a\u5bf9\u4e91\u539f\u751f\u8fdb\u884c\u66f4\u591a\u573a\u666f\u843d\u5730\uff0c\u6bd4\u5982 kubernetes \u5e73\u53f0\u6574\u5408\u7b49\u3002","title":"4 Alibaba Sentinel \u65f6\u523b\u5b88\u536b\u6d41\u91cf\u5065\u5eb7"},{"location":"chap_apm/1apm_prods/#1","text":"","title":"1.\u6280\u672f\u9aa8\u67b6\u56fe\uff0c\u6df1\u5165\u8bbe\u8ba1\u539f\u7406"},{"location":"chap_apm/1apm_prods/#2-treenodebuilder-cluster-node-builder","text":"\u89c4\u5219\u63a7\u5236\uff08Action\uff09","title":"2 \u6784\u5efa\u8c03\u7528\u6811\uff08TreeNodeBuilder \u548c Cluster NODE Builder\uff09"},{"location":"chap_apm/1apm_prods/#3","text":"\u5bf9\u4e8e\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u5c06\u7edf\u4e00\u7684\u57fa\u5efa\u811a\u624b\u67b6\u4e2d\u5f15\u5165 Sentinel \u5ba2\u6237\u7aef\uff0c\u5373\u53ef\u5b8c\u6210\u90e8\u7f72 \u3002\u5982\u679c\u5e94\u7528\u670d\u52a1\u6ca1\u6709\u811a\u624b\u67b6\u57fa\u5efa\uff0c\u7f51\u5173\u7684\u5e94\u7528\u670d\u52a1\u5f15\u5165 Sentinel \u5ba2\u6237\u7aef\u53ef\u4ee5\u4f18\u5148\u4e8e\u4e1a\u52a1\u7684\u5e94\u7528\u670d\u52a1\u3002 \u5bf9\u4e8e\u670d\u52a1\u7aef\uff0c\u6211\u4eec\u9700\u8981\u5bf9 Sentinel \u5f15\u5165\u52a8\u6001\u6570\u636e\u6e90\uff0c\u89e3\u51b3\u5e94\u7528\u670d\u52a1\u91cd\u542f\u540e\uff0c\u89c4\u5219\u4e22\u5931\u7684\u95ee\u9898\u3002Sentinel \u5df2\u7ecf\u9002\u914d\u4e86\u6240\u6709\u5e38\u89c1\u7684\u52a8\u6001\u6570\u636e\u6e90\u7ec4\u4ef6\uff0c\u4f60\u53ef\u4ee5\u56e0\u5730\u5236\u5b9c\u5730\u9009\u62e9\u5176\u4e00\u8fdb\u884c\u90e8\u7f72\u3002\u4f8b\u5982\uff0c\u4f01\u4e1a\u5185\u90e8\u4f7f\u7528 Apollo \u89e3\u51b3\u4e86\u5206\u5e03\u5f0f\u914d\u7f6e\u7edf\u4e00\u7ba1\u7406\u7684\u95ee\u9898\uff0c\u90a3 Sentinel \u52a8\u6001\u6570\u636e\u6e90\u53ef\u4ee5\u4f7f\u7528 sentinel-datasource-apollo \u7ec4\u4ef6\u5b8c\u6210 Sentinel \u670d\u52a1\u7aef\u7684\u52a8\u6001\u6570\u636e\u6e90\u3002","title":"3 \u670d\u52a1\u8282\u70b9\u5f15\u5165"},{"location":"chap_apm/1apm_prods/#4-java-visualvm","text":"Java VisualVM\uff08All-in-One Java Troubleshooting Tool\uff09 \uff0cVisualVM \u662f\u7b2c\u4e00\u6b3e\u96c6\u6210\u4e86Java \u547d\u4ee4\u884c\u5de5\u5177\u548c\u652f\u6301\u5b9e\u65f6\u5728\u7ebf\u95ee\u9898\u5206\u6790\u7684\u8f7b\u91cf\u7ea7\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u4f5c\u4e3a Oracle Java 6 \u7684\u4e00\u90e8\u5206\u5bf9\u5916\u53d1\u5e03\u3002","title":"4 \u6545\u969c\u5b9a\u4f4d\uff1aJava VisualVM"},{"location":"chap_apm/1apm_prods/#1_1","text":"VisualVM \u4e0d\u652f\u6301\u591a\u7528\u6237-\u89d2\u8272\u6a21\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c3d\u53ef\u80fd\u7f29\u5c0f\u4f7f\u7528 VisualVM \u64cd\u4f5c\u5e94\u7528\u670d\u52a1\u7684\u4eba\u5458\u8303\u56f4\u3002 \u52a8\u6001\u7ba1\u7406\u4ea7\u54c1\u6811\u4e0a\u6bcf\u4e2a\u5e94\u7528\u670d\u52a1\u8282\u70b9\u4e0a\u7684\u5f52\u5c5e\u6210\u5458\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0 VisualVM \u5de5\u5177\u6743\u9650\u7684\u7edf\u4e00\u7ba1\u7406\u3002\u4f7f\u7528\u4ea7\u54c1\u6811\u5bf9\u6240\u6709 APM \u5de5\u5177\u7684\u4f7f\u7528\u6743\u9650\u8fdb\u884c\u6536\u53e3\uff0c\u5728\u56e2\u961f\u6108\u53d1\u58ee\u5927\u65f6\uff0c\u6536\u76ca\u4e5f\u4f1a\u8d8a\u6765\u8d8a\u5927\u3002","title":"1.\u64cd\u4f5c\u6743\u9650"},{"location":"chap_apm/1apm_prods/#2","text":"JMX\uff08Java Management Extensions\uff09 JMX \u662f\u4e00\u4e2a\u89c4\u8303\uff0c\u5b83\u5b9e\u73b0\u4e86 Java \u8fdc\u7a0b\u76d1\u63a7\u7ba1\u7406\u7684\u63a5\u53e3\u3002","title":"2.\u5b89\u5168\u9650\u5236"},{"location":"chap_apm/1apm_prods/#3-visualvm","text":"\u6982\u8ff0\uff1a\u6b64\u754c\u9762\u5c55\u793a\u8fdb\u7a0b\u76f8\u5173\u7684\u6982\u89c8\u4fe1\u606f\u3001JVM \u53c2\u6570\u548c\u7cfb\u7edf\u5c5e\u6027 \u3002\u56e0\u4e3a\u4f01\u4e1a\u4e2d\u5f00\u53d1\u4eba\u5458\u662f\u65e0\u6cd5\u76f4\u89c2\u67e5\u770b\u7ebf\u4e0a\u914d\u7f6e\uff0c\u6240\u4ee5\u6982\u8ff0\u9009\u9879\u5361\u5f88\u597d\u5730\u5c55\u793a\u8fdb\u7a0b\u4f7f\u7528\u7684\u7ebf\u4e0a\u73af\u5883\u4fe1\u606f\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u5feb\u901f\u786e\u5b9a\u662f\u5426\u662f\u73af\u5883\u95ee\u9898\u9020\u6210\u7684\u7ebf\u4e0a\u95ee\u9898\u3002 \u76d1\u89c6\uff1a\u6b64\u754c\u9762\u5c55\u793a\u5b9e\u65f6\u7684 CPU \u4f7f\u7528\u60c5\u51b5\u3001JVM \u5806\u4fe1\u606f\uff0c\u4ee5\u53ca Java 8 \u7684\u5143\u7a7a\u95f4\u4fe1\u606f\u3001\u7c7b\u52a0\u8f7d\u60c5\u51b5\u3001\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u60c5\u51b5 \u3002\u6b64\u9875\u9762\u7684\u76d1\u89c6\u6570\u636e\u4e0d\u652f\u6301\u8ffd\u6eaf\u5386\u53f2\uff0c\u6240\u4ee5\u8ffd\u6eaf\u5386\u53f2\u53ef\u4ee5\u4f7f\u7528 CAT \u7b49 APM \u5de5\u5177\u89e3\u51b3\u3002\u76d1\u89c6\u754c\u9762\u7684\u6267\u884c GC\u3001\u5806 Dump \u53ef\u4ee5\u4ee5\u6700\u5feb\u901f\u5ea6\u8fdb\u884c\u73b0\u573a\u4fdd\u7559\u3002 \u7ebf\u7a0b\uff1a\u6b64\u9875\u754c\u9762\u5c55\u793a\u5b9e\u65f6\u8fd0\u884c\u7684\u5404\u4e2a\u7ebf\u7a0b\u60c5\u51b5\uff0c\u4e3b\u8981\u5305\u62ec\u7ebf\u7a0b\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u8fd0\u884c\u72b6\u51b5\uff0c\u901a\u8fc7\u4e0d\u540c\u989c\u8272\u7684\u6807\u8bc6\u7ebf\u7a0b\u5206\u522b\u5904\u4e8e\u7684 5 \u79cd\u5e38\u89c1\u72b6\u6001\uff1a \u8fd0\u884c\u3001\u4f11\u7720\u3001\u7b49\u5f85\u3001\u9a7b\u7559\u3001\u76d1\u89c6 \uff1b\u53f3\u4e0a\u89d2\u201c\u7ebf\u7a0b Dump\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5bf9\u7ebf\u7a0b\u8fdb\u884c\u5feb\u7167\u64cd\u4f5c\u3002 \u62bd\u6837\u5668\uff1a\u6b64\u754c\u9762\u5bf9\u8fdb\u7a0b\u4f7f\u7528\u7684 CPU \u548c\u5185\u5b58\u8fdb\u884c\u91c7\u6837\uff0c\u8fdb\u884c\u6027\u80fd\u5206\u6790 \u3002CPU \u62bd\u6837\uff0c\u901a\u8fc7\u65b9\u6cd5\u7684\u89c6\u89d2\uff0c\u67e5\u770b\u65b9\u6cd5\u5360\u7528 CPU \u7684\u60c5\u51b5\uff1b\u5185\u5b58\u62bd\u6837\uff0c\u901a\u8fc7\u7c7b\u540d\u5f52\u7c7b\u548c\u7ebf\u7a0b\u4f7f\u7528\u5185\u5b58\u7684\u89c6\u89d2\uff0c\u8fdb\u884c\u5185\u5b58\u5206\u914d\u7684\u8c03\u4f18\u3002","title":"3 VisualVM \u56db\u4e2a\u9009\u9879\u5361\u90fd\u6709\u54ea\u4e9b\u80fd\u529b\uff1f"},{"location":"chap_apm/1apm_prods/#4-visualvm","text":"\u5bf9\u4e8e\u4f7f\u7528 Java 8 \u7684\u7528\u6237\uff0cVisualVM \u5df2\u7ecf\u5728 JDK \u7684 bin \u76ee\u5f55\u4e2d\u4e86\u3002\u4f46\u5f53\u4f60\u6253\u5f00\u63d2\u4ef6\u4ed3\u5e93\uff0c\u4f1a\u53d1\u73b0\u6ca1\u6709\u53ef\u4ee5\u5b89\u88c5\u7684\u63d2\u4ef6\uff0c\u662f\u56e0\u4e3a\u63d2\u4ef6\u7684\u5730\u5740\u5df2\u5931\u6548\uff0c\u9700\u8981\u6211\u4eec\u624b\u52a8\u66f4\u65b0\u5b98\u65b9\u7684\u63d2\u4ef6\u4e2d\u5fc3\u5730\u5740\u3002 \u5bf9\u4e8e\u4f7f\u7528 Java 11 \u7684\u7528\u6237\uff0cVisualVM \u5728 JDK9 \u540e\uff0c\u5df2\u4e0d\u518d\u4e3a Oracle JDK \u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u9700\u8981\u53bb VisualVM\u5b98\u7f51 \u8fdb\u884c\u4e0b\u8f7d\u3002 \u76ee\u524d VisualVM \u5386\u7ecf\u4e86\u5341\u51e0\u5e74\u7684\u53d1\u5c55\uff0c\u603b\u5171\u6709 20 \u4e2a\u591a\u63d2\u4ef6\uff0c\u6839\u636e\u63d2\u4ef6\u7c7b\u578b\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b 8 \u79cd\u3002 Profiling\uff08\u6027\u80fd\u5256\u6790\uff09\uff1aStartup Profiler\u3001BTrace Workbench Sources\uff08\u4ee3\u7801\u8d44\u6e90\uff09\uff1aVisualVM-GoToSource Tools\uff08\u5de5\u5177\uff09\uff1aThreads Inspector\u3001VisualVM-JConsole\u3001VisualVM-BufferMonitor\u3001VisualVM-TDA-Module\u3001KillApplication\u3001VisualVM-Coherence\u3001Visual GC\u3001VisualVM-MBeans Platform\uff08\u76d1\u63a7\uff09\uff1aVisualVM-Extensions Security\uff08\u5b89\u5168\uff09\uff1aVisualVM-Security Tracer\uff08\u8ffd\u8e2a\uff09\uff1aTracer-Monitor Probes\u3001Tracer-Collections Probes\u3001Tracer-JavaFX Probes\u3001Tracer-IO Probes\u3001Tracer-Swing Probes\u3001Tracer-Jvmstat Probes\u3001Tracer-JVM Probes UI\uff08\u9875\u9762\u589e\u5f3a\uff09\uff1aOQL Syntax Support Libraries\uff08\u7c7b\u5e93\uff09\uff1aGraalJS \u6bd4\u5982\uff1aStartup Profiler\u63d2\u4ef6\u662f\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u542f\u52a8\u9636\u6bb5\u8fdb\u884c\u5256\u6790\u7684\u5de5\u5177\uff1bGoToSource \u63d2\u4ef6\u662f\u652f\u6301\u6e90\u4ee3\u7801\u5bfc\u822a\u548c\u5c55\u793a\u3002","title":"4 VisualVM \u7684\u63d2\u4ef6\u4f53\u7cfb"},{"location":"chap_apm/1apm_prods/#4-kibana","text":"ELK \u662f Elastic \u516c\u53f8\u7684\u4e09\u4e2a\u5f00\u6e90\u9879\u76ee\u7684\u7f29\u5199\uff0c\u8fd9\u4e09\u4e2a\u9879\u76ee\u5206\u522b\u5982\u4e0b\u3002 Elasticsearch\uff1a\u57fa\u4e8e Apache Lucene \u641c\u7d22\u5f15\u64ce\uff0c\u4f7f\u7528 RESTful \u63a5\u53e3\u5c4f\u853d\u4e86\u641c\u7d22\u67b6\u6784\u7684\u590d\u6742\u6027\u3002 Logstash\uff1a\u670d\u52a1\u5668\u6570\u636e\u5904\u7406\u7ba1\u9053\u3002 Kibana\uff1aElasticsearch \u641c\u7d22\u5f15\u64ce\u7684\u53ef\u89c6\u5316\u5e73\u53f0\u3002","title":"4 \u65e5\u5fd7\u53ef\u89c6\u5316\uff1aKibana"},{"location":"chap_apm/1apm_prods/#1_2","text":"\u5f53\u4e0b\u7684\u4e1a\u52a1\u5f00\u53d1\u4eba\u5458\u90fd\u662f\u5c06\u65e5\u5fd7\u4fe1\u606f\u59d4\u6258\u7ed9\u65e5\u5fd7\u6846\u67b6\u8fdb\u884c\u6253\u5370\uff0c\u6240\u4ee5\u65e5\u5fd7\u5185\u5bb9\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a \u65e5\u5fd7\u6846\u67b6\u6253\u5370\u7684\u65e5\u5fd7\u4fe1\u606f \u4e00\u7ebf\u5f00\u53d1\u4eba\u5458\u6253\u5370\u7684\u65e5\u5fd7\u4fe1\u606f \u9664\u4e86\u4e1a\u52a1\u5f00\u53d1\u4eba\u5458\u901a\u8fc7\u65e5\u5fd7\u6846\u67b6\u6253\u5370\u4e1a\u52a1\u65e5\u5fd7\u5916\uff0c\u5728\u6846\u67b6\u5c42\u9762\u8fd8\u6709\u6846\u67b6\u65e5\u5fd7\u3002 \u5176\u4e2d\u65e5\u5fd7\u6846\u67b6\u6253\u5370\u7684\u4fe1\u606f\uff0c\u5e38\u7528\u7684\u5c5e\u6027\u5982\u4e0b\u3002 \u65f6\u95f4\u6233 \uff1a\u8c03\u7528\u65e5\u5fd7\u65b9\u6cd5\u65f6\u751f\u6210\u65f6\u95f4\u6233\uff0c\u89e3\u51b3\u5f02\u6b65\u6253\u5370\u3001\u5f02\u6b65\u6536\u96c6\u9020\u6210\u7684\u65f6\u95f4\u4e0d\u7cbe\u51c6\u95ee\u9898\u3002 \u7ebf\u7a0b\u540d\u79f0 \uff1a\u7531\u4e8e\u7ebf\u7a0b ID \u4e0d\u76f4\u89c2\uff0c\u6240\u4ee5\u901a\u5e38\u4f7f\u7528\u7ebf\u7a0b\u540d\u79f0\u6765\u6807\u8bc6\u7ebf\u7a0b\uff08\u6ce8\u610f\u4e0d\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u7ebf\u7a0b\u540d\u79f0\uff0c\u9700\u8981\u6839\u636e\u4f7f\u7528\u7ebf\u7a0b\u60c5\u51b5\u6765\u91cd\u547d\u540d\u7ebf\u7a0b\u540d\u79f0\uff09\u3002 \u65e5\u5fd7\u7ea7\u522b \uff1a\u6839\u636e\u65e5\u5fd7\u7ea7\u522b\u7684\u4e0d\u540c\uff0c\u53ef\u7c97\u7565\u5730\u5bf9\u65e5\u5fd7\u8fdb\u884c\u9884\u5904\u7406\u3002\u6bd4\u5982 DEBUG\u3001TRACE \u7ea7\u522b\u7684\u65e5\u5fd7\u53ea\u6709\u5728\u5b9a\u4f4d\u95ee\u9898\u65f6\u624d\u8bb0\u5f55\uff1b\u5f53\u65e5\u5fd7\u4e3a ERROR \u7ea7\u522b\u65f6\uff0c\u7acb\u523b\u53d1\u51fa\u544a\u8b66\u3002 \u8c03\u7528\u4f4d\u7f6e \uff1a\u8bb0\u5f55\u6253\u5370\u65e5\u5fd7\u7684\u7c7b\u540d\u548c\u884c\u53f7\uff0c\u6709\u52a9\u4e8e\u5f00\u53d1\u4eba\u5458\u5feb\u901f\u5bfb\u627e\u6e90\u4ee3\u7801\u7684\u4e0a\u4e0b\u6587\u73b0\u573a\u3002 \u589e\u5f3a\u5c5e\u6027 \uff1a\u5982\u5168\u94fe\u8def\u8ddf\u8e2a ID\uff0c\u7528\u4e8e\u8ffd\u6eaf\u5f15\u8d77\u65e5\u5fd7\u6253\u5370\u7684\u4e0a\u4e0b\u6e38\u3002","title":"1 \u91cd\u65b0\u8ba4\u8bc6\u65e5\u5fd7"},{"location":"chap_apm/1apm_prods/#2-kibana","text":"\u7b2c\u4e00\u79cd\uff1a\u901a\u8fc7 Kibana \u63a2\u7d22\uff08Discovery\uff09\u529f\u80fd\uff0c\u8fdb\u884c\u51c6\u786e\u3001\u5b9e\u65f6\u7684\u96c6\u4e2d\u65e5\u5fd7\u641c\u7d22\u3002 \u7b2c\u4e8c\u79cd\uff1a\u521b\u5efa\u591a\u6837\u7684\u53ef\u89c6\u5316\u89c6\u56fe\uff08Visualize\uff09\uff0c\u5c06\u76f8\u5173\u8054\u7684\u89c6\u56fe\u7ec4\u5408\u6210\u4eea\u8868\u76d8\uff08Dashboard\uff09\u3002 \u7b2c\u4e09\u79cd\uff1a\u901a\u8fc7 Elasticsearch SQL \u76f4\u63a5\u4ece Elasticsearch \u4e2d\u63d0\u53d6\u6570\u636e\uff0c\u52a0\u4e0a\u4e30\u5bcc\u5143\u7d20\u5e03\u5c40\u7ed8\u5236\u753b\u5e03\uff08Canvas\uff09\u3002 \u4f7f\u7528\u65b9\u5f0f\u90fd\u662f\u5fc5\u987b\u57fa\u4e8e\u521b\u5efa\u7d22\u5f15\u6a21\u5f0f\uff08index pattern\uff09 1.\u521b\u5efa\u7d22\u5f15\u6a21\u5f0f \u7d22\u5f15\u6a21\u5f0f\u544a\u8bc9 Kibana \u54ea\u4e9b Elasticsearch \u7d22\u5f15\u5305\u542b\u4e86\u4f60\u60f3\u5904\u7406\u7684\u65e5\u5fd7\u6570\u636e\uff0c\u521b\u5efa\u7d22\u5f15\u6a21\u5f0f\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u6700\u5e38\u89c1\u7684\u5c31\u662f\u4f7f\u7528\u540e\u7f6e\u901a\u914d\u7b26\u3002 \u5728\u5355\u4e2a Elasticsearch \u96c6\u7fa4\u5185\u90e8\u5b8c\u6210\u7d22\u5f15\u6a21\u5f0f\u7684\u521b\u5efa\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u96c6\u7fa4\u5185\u90e8\u6709\u591a\u4e2a\u4ee5\u201c\u5929\u201d\u4e3a\u5207\u5206\u7ef4\u5ea6\u7684\u65e5\u5fd7\u7d22\u5f15\u3002\u5982 data_logs-20210307 \u3001 data_logs-20210306 \u3001d ata_logs-20210305 \u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 data_logs-* \u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5b8c\u6210\u7d22\u5f15\u7684\u5339\u914d\u3002 2.\u63a2\u7d22\u65e5\u5fd7 \u641c\u7d22\u6761\u4ef6\uff1a\u7f51\u7ad9\u8bf7\u6c42\u975e\u6b63\u5e38\u8fd4\u56de\uff08HTTP \u72b6\u6001\u7801\u975e 200\uff09\uff0c\u4e14\u5730\u57df\u4e3a\u4e2d\u56fd\u6d41\u91cf\u3002 \u7ed3\u679c\u8fc7\u6ee4\uff1a\u7531\u4e8e\u65e5\u5fd7\u5c5e\u6027\u8f83\u591a\uff0c\u5b9e\u73b0\u53ea\u8fd4\u56de IP \u5730\u5740\u3001\u673a\u5668\u8bbe\u5907\u548c\u8bf7\u6c42\u7684 host\u3002 \u65f6\u95f4\u8303\u56f4\uff1a\u6700\u8fd1\u4e03\u5929\u3002 3.\u5236\u4f5c\u591a\u6837\u7684\u53ef\u89c6\u5316\u89c6\u56fe 4.\u6784\u5efa\u4eea\u8868\u76d8 \u4eea\u8868\u76d8\u662f\u76f8\u5173\u53ef\u89c6\u5316\u89c6\u56fe\u7684\u96c6\u5408\uff0c\u8fdb\u5165\u4eea\u8868\u76d8\u7684\u7f16\u8f91\u6a21\u5f0f\uff0c\u5f15\u5165\u76f8\u5173\u4e3b\u9898\u7684\u53ef\u89c6\u5316\u89c6\u56fe\u3002\u7136\u540e\u5bf9\u53ef\u89c6\u5316\u89c6\u56fe\u8fdb\u884c\u5c55\u793a\u5e03\u5c40\u8c03\u6574\uff0c\u5c31\u5b8c\u6210\u4e86\u4eea\u8868\u76d8\u7684\u521b\u5efa\u3002 5.\u7ed8\u5236\u753b\u5e03 \u521b\u5efa\u7a7a\u767d\u5de5\u4f5c\u533a\u57df\uff08workpad\uff09 \u9009\u62e9\u5143\u7d20\uff0c\u8bbe\u7f6e\u5143\u7d20\u7684\u989c\u8272\u3001\u56fe\u50cf\u548c\u6570\u636e \u6307\u5b9a\u5143\u7d20\u7684\u5c3a\u5bf8\u548c\u8c03\u6574\u5e03\u5c40 \u4fdd\u5b58\u753b\u5e03\u7684\u6f14\u793a\u5e03\u5c40","title":"2 Kibana \u63a2\u7d22\u548c\u5206\u6790\u65e5\u5fd7"},{"location":"chap_apm/1apm_prods/#5-grafana","text":"","title":"5 \u591a\u6570\u636e\u6e90\u8ba9 Grafana \u76d1\u63a7\u62a5\u8b66\u66f4\u9ad8\u6548"},{"location":"chap_apm/1apm_prods/#5-1-grafana","text":"Zabbix \u4f46\u5f53\u4e0b\u5bf9\u7269\u7406\u8282\u70b9\u7684\u76d1\u63a7\u8bc9\u6c42\u8fd8\u662f\u5f88\u9700\u8981\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u5c06\u8bb2\u8ff0 Grafana \u5982\u4f55\u901a\u8fc7\u63d2\u4ef6\u751f\u6001\uff0c\u96c6\u6210 Zabbix \u6570\u636e\u6e90\uff0c\u5b8c\u6210\u5bf9\u7269\u7406\u8282\u70b9\u7684\u6027\u80fd\u6307\u6807\u76d1\u63a7\u3002 Zabbix \u662f\u76d1\u63a7\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5176\u5177\u5907\u7269\u7406\u673a\u6027\u80fd\u76d1\u63a7\u548c\u5bf9\u7f51\u7edc\u72b6\u51b5\u7684\u76d1\u63a7\u3002\u4f7f\u7528\u5ba2\u6237\u7aef\u3001\u670d\u52a1\u7aef\u6a21\u5f0f\u8fdb\u884c\u6536\u96c6\u6570\u636e\uff0c\u5373\u7269\u7406\u673a\u5b89\u88c5 Zabbix Agent \u5ba2\u6237\u7aef\u91c7\u96c6\u6570\u636e\u4f20\u9001\u7ed9\u670d\u52a1\u7aef\uff0c\u901a\u8fc7 web \u670d\u52a1\u76f4\u63a5\u5bf9\u63a5\u670d\u52a1\u7aef\u5b8c\u6210\u5c55\u793a\u3002\u7531\u4e8e Zabbix web \u5c55\u793a\u76d1\u63a7\u6570\u636e\u4e0d\u7406\u60f3\uff0c\u6240\u4ee5\u89e3\u51b3\u65b9\u6848\u662f\u901a\u8fc7 Grafana \u96c6\u6210 Zabbix \u6570\u636e\u6e90\u5b8c\u6210\u76d1\u63a7\u6570\u636e\u7684\u5c55\u793a\u3002 Zabbix \u6570\u636e\u6e90\u5c5e\u4e8e\u975e\u5b98\u65b9\u652f\u6301\u7684\u6570\u636e\u6e90\uff0c\u9700\u8981\u4ece\u5f00\u653e\u7684\u63d2\u4ef6\u751f\u6001\u5f15\u5165\uff0c\u91cd\u542f Grafana \u670d\u52a1\u540e\uff0c\u5373\u53ef\u5728\u6570\u636e\u6e90\u4e2d\u770b\u5230 Zabbix \u6570\u636e\u6e90\u3002 \u591a\u7ef4\u5ea6\u62a5\u8b66 \u76f8\u8f83\u4e8e Kibana \u9700\u8981\u5c06\u7528\u6237\u5347\u7ea7\u4e3a\u9ec4\u91d1\u7528\u6237\u4ee5\u4e0a\u7ea7\u522b\u624d\u652f\u6301\u62a5\u8b66\u529f\u80fd\uff0cGrafana \u62a5\u8b66\u529f\u80fd\u662f\u5b8c\u5168\u5f00\u653e\u7684\uff0c\u53ea\u8981\u5c06 Grafana \u5347\u7ea7\u5230 4.0 \u7248\u672c\u4ee5\u4e0a\u5373\u53ef\u3002 \u5728\u62a5\u8b66\u914d\u7f6e\u754c\u9762\uff0c\u53ef\u4ee5\u5c06\u62a5\u8b66\u4fe1\u606f\u53d1\u9001\u81f3\u804a\u5929\u5de5\u5177 Slack\u3001\u4e8b\u4ef6\u7ba1\u7406\u5e73\u53f0 PagerDuty \u7b49\u5728 Github \u4e3b\u6d41\u7684\u62a5\u8b66\u5a92\u4ecb\uff1b\u4e5f\u53ef\u4ee5\u6309\u7167\u4f01\u4e1a\u5fae\u4fe1\u548c\u9489\u9489\u7684 API \u5f00\u53d1\u6587\u6863\uff0c\u5bf9\u63a5\u56fd\u5185\u4e3b\u6d41\u529e\u516c\u5e73\u53f0\u3002\u901a\u8fc7\u914d\u7f6e\u62a5\u8b66\u5a92\u4ecb\u5e76\u96c6\u6210\u76d1\u63a7\u6570\u636e\u6e90\u540e\uff0c\u4fbf\u80fd\u4f9d\u636e\u53ef\u89c6\u5316\u9762\u677f\u7684\u6307\u6807\u914d\u7f6e\u62a5\u8b66\u7684\u89c4\u5219\u4e86\u3002 Grafana\u62a5\u8b66\u89c4\u5219\u7684\u8bbe\u8ba1\u662f\u901a\u8fc7\u540e\u53f0\u7684\u4e00\u4e2a\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u5b9a\u65f6\u5730\u901a\u8fc7\u67e5\u8be2\u5f15\u64ce\u8bc6\u522b\u51fa\u5f53\u524d\u53ef\u89c6\u5316\u9762\u677f\u4e2d\u7684\u6307\u6807\u662f\u5426\u89e6\u53ca\u62a5\u8b66\u89c4\u5219\u3002\u5982\u679c\u89e6\u53ca\uff0c\u5219\u8c03\u7528\u62a5\u8b66\u5a92\u4ecb\u4e0b\u8fbe\u62a5\u8b66\u901a\u77e5\u3002 \u7531\u4e8e Grafana \u662f\u53ef\u89c6\u5316\u5e73\u53f0\uff0c\u76d1\u63a7\u6570\u636e\u7684\u83b7\u53d6\u65b9\u5f0f\u53ef\u89c6\u4f5c\u4e3a\u201c\u62c9\u6a21\u5f0f\u201d\uff0c\u4e14\u62a5\u8b66\u8bbe\u8ba1\u901a\u8fc7\u540e\u53f0\u8c03\u5ea6\u7a0b\u5e8f\u5b8c\u6210\uff0c\u6240\u4ee5\u6b64\u65b9\u6848\u7684\u8bbe\u8ba1\u6765\u62a5\u8b66\u4f1a\u7a0d\u8bb8\u6ede\u540e\u3002","title":"5-1 Grafana \u7684\u6838\u5fc3\u8bbe\u8ba1"},{"location":"chap_apm/1apm_prods/#grafana","text":"1.\u7528\u6237\u884c\u4e3a\u76d1\u63a7 1\uff09\u7528\u6237\u751f\u547d\u5468\u671f\u76d1\u63a7 \u5e38\u89c1\u751f\u547d\u5468\u671f\u5206\u4e3a\u5982\u4e0b\u56fe\u7684 5 \u5c42\uff0c\u4ece\u7528\u6237\u63a5\u89e6\u4ea7\u54c1\u5230\u9057\u5fd8\u4ea7\u54c1\u7684\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u76d1\u63a7\u5206\u6790\u7528\u6237\u5728\u4e0d\u540c\u9636\u6bb5\u7684\u8868\u73b0\uff0c\u6709\u7684\u653e\u77e2\u5730\u4f18\u5316\u4ea7\u54c1\u4f53\u9a8c\uff0c\u5f15\u5bfc\u7528\u6237\u5b8c\u6210\u8fd0\u8425\u7b56\u7565\u3002 2.\u6838\u5fc3\u573a\u666f\u76d1\u63a7 \u4e1a\u52a1\u573a\u666f\uff1a\u901a\u8fc7\u4e00\u7ec4\u76f8\u5173\u8054\u7684\u6570\u636e\u6216\u4e8b\u4ef6\uff0c\u6765\u53cd\u6620\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u7684\u4e1a\u52a1\u573a\u666f\u3002 \u4e1a\u52a1\u5047\u8bbe\uff1a\u901a\u8fc7\u4e1a\u52a1\u573a\u666f\u53ef\u80fd\u5728\u672a\u6765\u53d1\u751f\u7684\u4e8b\u60c5\u505a\u4e00\u7cfb\u5217\u7684\u4e1a\u52a1\u5047\u8bbe\u3002 \u76d1\u63a7\u65b9\u6848\uff1a\u4ee5\u4e1a\u52a1\u573a\u666f\u7684\u6570\u636e\u6307\u6807\u4e3a\u4f9d\u636e\uff0c\u76d1\u63a7\u4e1a\u52a1\u5047\u8bbe\u662f\u5426\u6210\u7acb\u3002 \u5173\u952e\u4e3e\u63aa\uff1a\u5f53\u5047\u8bbe\u6210\u7acb\u65f6\uff0c\u542f\u52a8\u4e00\u4e9b\u5e94\u6025\u4e3e\u63aa\u3002 1.\u9884\u9632\u62d6\u57ae\u6838\u5fc3\u8d44\u6e90 2.\u7528\u6237\u6743\u9650\u9694\u79bb","title":"\u5e94\u7528\u670d\u52a1\u914d\u7f6e Grafana \u6307\u6807"},{"location":"chap_apm/1apm_prods/#6-apm","text":"APM \u662f\u5e94\u7528\u6027\u80fd\u7ba1\u7406\uff08Application Performance Management\uff09\u7684\u7f29\u5199\u3002\u4ece\u5b8f\u89c2\u89d2\u5ea6\u4e0a\u770b\uff0c\u9762\u5411\u89e3\u51b3\u4ea7\u54c1\uff08\u5bf9\u7528\u6237\uff09\u4f53\u9a8c\u4e0d\u597d\u7684\u884c\u4e3a\uff0c\u90fd\u53ef\u4ee5\u79f0\u4e3a APM\uff0c\u56e0\u6b64 APM \u6d89\u53ca\u7684\u8303\u7574\u975e\u5e38\u5e7f\u6cdb","title":"6 \u719f\u6089 APM \u4ea7\u54c1"},{"location":"chap_apm/1apm_prods/#apache-skywalking","text":"\u901a\u8fc7\u94fe\u8def\u8ffd\u8e2a\u9875\u9762\u83b7\u53d6\u6162\u94fe\u8def\u7684 Endpoint\uff1b \u518d\u901a\u8fc7\u6027\u80fd\u5256\u6790\u9875\u9762\u4e0a\u7684\u8f93\u5165\u6846\uff0c\u63cf\u8ff0\u4f60\u8981\u5256\u6790\u7684 Endpoint\uff1b \u6700\u540e SkyWalking \u4f1a\u901a\u8fc7\u62bd\u6837\u5c55\u793a\u8fd9\u4e2a Endpoint \u5173\u8054\u7684\u7ebf\u7a0b\u5806\u6808\u4fe1\u606f","title":"Apache SkyWalking"},{"location":"chap_apm/1apm_prods/#alibaba-arthas","text":"\u901a\u8fc7\u65e5\u5fd7\u4e0a\u7684\u6570\u636e\u9762\u677f\uff08dashboard\uff09\u547d\u4ee4\u6216\u7ebf\u7a0b\uff08thread\uff09\u547d\u4ee4\uff0c\u83b7\u53d6\u60f3\u8981 Dump \u7684\u7ebf\u7a0b ID\uff1b \u518d\u901a\u8fc7\u7ebf\u7a0b\u547d\u4ee4\uff0c\u8ffd\u52a0\u7ebf\u7a0b ID \u53c2\u6570\u83b7\u53d6\u7ebf\u7a0b\u7684\u5806\u6808\u4fe1\u606f\uff1b \u6700\u540e\u901a\u8fc7\u5404\u79cd\u5728\u7ebf\u6545\u969c\u6392\u67e5\u547d\u4ee4\uff0c\u4ece\u800c\u53bb\u8bca\u65ad\u95ee\u9898\u3002","title":"Alibaba Arthas"},{"location":"chap_apm/1apm_prods/#java-visualvm","text":"\u901a\u8fc7\u5e94\u7528\u670d\u52a1\u4f7f\u7528\u65e5\u5fd7\u6846\u67b6\u4e2d\u6253\u5370\u7684\u7ebf\u7a0b\u540d\u79f0\uff0c\u6216 VisualVM \u53ef\u89c6\u5316\u5ba2\u6237\u7aef\u7684\u7ebf\u7a0b\u9009\u9879\u5361\u5c55\u793a\u7684\u5e94\u7528\u540d\u79f0\uff0c\u4ece\u800c\u83b7\u53d6\u7ebf\u7a0b\u5b9e\u65f6\u5de5\u4f5c\u72b6\u6001\uff1b \u518d\u901a\u8fc7\u7ebf\u7a0b\u540d\u79f0\uff0c\u4f7f\u7528 Threads intspector \u63d2\u4ef6\u83b7\u53d6\u7ebf\u7a0b\u7684\u5806\u6808\u4fe1\u606f\uff1b \u6700\u540e\u4f7f\u7528\u5404\u79cd\u63d2\u4ef6\u8fdb\u884c\u95ee\u9898\u8bca\u65ad\u3002","title":"Java VisualVM"},{"location":"chap_apm/2opentracing/","text":"\u7b2c\u4e8c\u8282 APM + OpenTracing \u539f\u7406 1 OpenTracing \u89e3\u5bc6: Dapper\u662f\u6811\uff0cSkyWalking\u662f\u56fe \u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u94fe\u8def\u8ddf\u8e2a\uff1f \u5206\u5e03\u5f0f\u8ffd\u8e2a\u5c31\u662f\u628a\u4e00\u6b21\u7528\u6237\u8bf7\u6c42\u5f15\u8d77\u7684\uff0c\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u4e2d\u7684\u76f8\u5173\u65e5\u5fd7\uff0c\u4e32\u8054\u8d77\u6765\u7684\u8fc7\u7a0b\u3002 \u5e02\u573a\u4e0a\u6d41\u884c\u7684\u5206\u5e03\u5f0f\u8ffd\u8e2a\u5b9e\u73b0\u662f\uff1a\u901a\u8fc7\u94fe\u8def\u6807\u8bc6\uff0c\u5c06\u4e00\u6b21\u7528\u6237\u8bf7\u6c42\uff0c\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u4e2d\u5404\u4e2a\u5e94\u7528\u8282\u70b9\u6253\u5370\u7684\u65e5\u5fd7\u4e32\u8054\u8d77\u6765\u7684\u8fc7\u7a0b\uff0c\u5c31\u662f\u5206\u5e03\u5f0f\u94fe\u8def\u8ddf\u8e2a\u3002 \u8ffd\u8e2a\u53c8\u53ef\u4ee5\u7b80\u5355\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\u3002 \u5bf9\u4e8e \u8de8\u8fdb\u7a0b\u7684\u94fe\u8def\u8ffd\u8e2a\u65b9\u6848 \uff0c\u6700\u4f18\u7684\u6280\u672f\u65b9\u6848\u662f\u5728\u8fdc\u7a0b\u8c03\u7528\u53d1\u751f\u65f6\uff0c \u901a\u8fc7\u5bf9\u8bf7\u6c42\u534f\u8bae\u589e\u52a0\u94fe\u8def\u6807\u8bc6\uff0c\u5c06\u4e0a\u4e0b\u6e38\u8c03\u7528\u94fe\u7ed1\u5b9a\u8d77\u6765\uff0c\u5c31\u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u7684\u8de8\u8fdb\u7a0b\u8ffd\u8e2a \u3002 \u5bf9\u4e8e \u8de8\u7ebf\u7a0b\u7684\u94fe\u8def\u8ffd\u8e2a\u65b9\u6848 \uff0c\u5982 Java \u8bed\u8a00\u7684\u5fae\u670d\u52a1\u5e94\u7528\uff0c \u6211\u4eec\u53ef\u4ee5\u5728\u4e3b\u7ebf\u7a0b\u521b\u5efa\u5b50\u7ebf\u7a0b\u65f6\uff0c\u5c06\u4e3b\u7ebf\u7a0b\u7684\u94fe\u8def\u6807\u8bc6\u4ee3\u5165\u5b50\u7ebf\u7a0b\uff0c\u5c06\u4e3b-\u5b50\u7ebf\u7a0b\u7ed1\u5b9a\u8d77\u6765\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u8de8\u7ebf\u7a0b\u8ffd\u8e2a \u76ee\u524d\u4ee5 SkyWalking\u3001Zipkin \u4e3a\u4ee3\u8868\u7684\u5206\u5e03\u5f0f\u8ffd\u8e2a\u7cfb\u7edf\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u5730\u63a5\u5165\u5230\u7ebf\u4e0a\u5e94\u7528\u670d\u52a1\u4e86 \u65e9\u671f\u5bf9\u5178\u578b\u8ffd\u8e2a\u573a\u666f\u7684\u8bba\u8ff0 1.\u6807\u8bb0\u65b9\u6848\uff08\u6709\u4fb5\u5165\u3001\u51c6\u786e\u5ea6\u9ad8\uff09 \u6807\u8bb0\u6cd5\u987e\u540d\u601d\u4e49\uff0c \u5c31\u662f\u5bf9\u5e94\u7528\u76d1\u63a7\u65e5\u5fd7\u6253\u6807\u8bb0 \u3002\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u5bf9\u65e5\u5fd7\u6253\u6807\u8bb0\uff0c\u6216\u8005\u5728\u6846\u67b6\u62e6\u622a\u5668\u4e2d\u5bf9\u8bf7\u6c42\u8fdb\u884c\u6807\u8bb0 \u3002\u901a\u8fc7\u8fd9\u4e9b\u6807\u8bb0\uff0c\u5c06\u4e00\u6b21\u8bf7\u6c42\u5f15\u8d77\u7684\u5e94\u7528\u670d\u52a1\u96c6\u7fa4\u4e2d\u7684\u76d1\u63a7\u65e5\u5fd7\u5168\u90e8\u4e32\u8054\u6c47\u603b\u8d77\u6765\u7684\u8fc7\u7a0b\u5c31\u662f\u6807\u8bb0\u65b9\u6848 \u3002 Dapper \u6240\u8bba\u8ff0\u7684\u793a\u4f8b \u524d\u53f0\u670d\u52a1 A \u6536\u5230 RequestX \u8bf7\u6c42\uff0cHttp Server \u6846\u67b6\u53d1\u73b0\u8bf7\u6c42\u4e2d\u6ca1\u6709\u6807\u8bb0\uff0c\u90a3\u4e48\u5bf9\u8fd9\u6b21\u6d41\u91cf\u8fdb\u884c\u6807\u8bb0\uff0c\u5e76\u8bc6\u522b\u4e3a\u7528\u6237\u8bf7\u6c42\u8fdb\u884c\u4f20\u64ad\u3002 \u5f53\u8bf7\u6c42\u4f20\u64ad\u5230 B\u3001C\u3001D\u3001E\uff0c\u518d\u6253\u5370\u76d1\u63a7\u65e5\u5fd7\u65f6\uff0c\u76d1\u63a7\u65e5\u5fd7\u5c31\u5e26\u7740\u4e0e A \u884d\u751f\u51fa\u6765\u7684\u6807\u8bb0\uff0c\u8fd9\u6837\u8fd9\u6b21\u7528\u6237\u7684\u8bf7\u6c42\u901a\u8fc7 A \u670d\u52a1\u751f\u6210\u7684\u6807\u8bb0\u5c31\u5f88\u5bb9\u6613\u88ab\u6536\u96c6\u8d77\u6765\u4e86\u3002 \u4e0d\u96be\u770b\u51fa\uff0c\u6807\u8bb0\u6cd5\u7684\u4f18\u70b9\u662f\u7cbe\u51c6\uff1b\u4f46\u7f3a\u70b9\u4e5f\u663e\u800c\u6613\u89c1\uff0c\u9700\u8981\u6253\u6807\u8bb0\u3002 2.\u9ed1\u76d2\u65b9\u6848\uff08\u65e0\u4fb5\u5165\u3001\u51c6\u786e\u5ea6\u4f4e\uff09 \u9ed1\u76d2\u65b9\u6848\u5728\u65e0\u4fb5\u5165\u7684\u5b9e\u73b0\u4e0a\uff0c\u9ad8\u4e8e\u6807\u8bb0\u65b9\u6848\u4e00\u4e2a\u7ef4\u5ea6\u3002\u9ed1\u76d2\u65b9\u6848\u8ba4\u4e3a\u5e94\u7528\u670d\u52a1\u662f\u9ed1\u76d2\u7684\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u53ef\u89c1\u7684\u8bf7\u6c42\u4e0e\u65e5\u5fd7\uff0c\u901a\u8fc7\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5\uff0c\u5c06\u8fd9\u4e9b\u8bf7\u6c42\u548c\u65e5\u5fd7\u5173\u8054\u8d77\u6765 \u6700\u5e38\u89c1\u7684\u673a\u5668\u5b66\u4e60\u65b9\u5f0f\u7528\u56de\u5f52\u5206\u6790\u7b49\u7edf\u8ba1\u5b66\u7b97\u6cd5\uff0c\u5c06\u8fd9\u4e9b\u788e\u7247\u5316\u7684\u8bf7\u6c42\u548c\u65e5\u5fd7\u901a\u8fc7\u63a8\u6d4b\uff0c\u91cd\u65b0\u7ec4\u5408\u6210\u5b8c\u6574\u7684\u94fe\u8def\u3002 \u9ed1\u76d2\u65b9\u6848\u7684\u4f18\u52bf\u663e\u800c\u6613\u89c1\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u5e94\u7528\u670d\u52a1\u7684\u67b6\u6784\u4fee\u6539\u548c\u76d1\u63a7\u65e5\u5fd7\u7684\u53d8\u66f4\uff1b \u9ed1\u76d2\u65b9\u6848\u7684\u7f3a\u70b9\u5f88\u660e\u663e\uff0c\u673a\u5668\u5b66\u4e60\u7684\u7cbe\u5ea6\u662f\u9010\u6e10\u63d0\u9ad8\u7684\u3002\u6240\u4ee5\u4e0a\u7ebf\u65b0\u529f\u80fd\u65f6\uff0c\u5f80\u5f80\u5206\u5e03\u5f0f\u76d1\u63a7\u53ef\u7528\u5ea6\u975e\u5e38\u4f4e\uff0c\u800c\u4e14\u673a\u5668\u5b66\u4e60\u4f1a\u6d88\u8017\u5f88\u591a\u7684\u8fd0\u7b97\u8d44\u6e90\u3002 SkyWalking \u7684\u56fe\u5f62\u8ffd\u8e2a\u6a21\u578b (\u517c\u5bb9\u6811\u5f62\u6a21\u578b\u7684\u56fe\u5f62\u8ffd\u8e2a\u6a21\u578b) 1.\u514b\u670d\u6811\u5f62\u8ffd\u8e2a\u7684\u4e0d\u8db3\u2014\u2014\u65e0\u6cd5\u6279\u5904\u7406 \u56fe\u4e0e\u6811\u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u6709\u591a\u4e2a\u7236\u8282\u70b9 \u3010\u9884\u6d4b\u7cfb\u7edf\u573a\u666f\u3011 \u4e00\u4e2a\u5178\u578b\u7684\u573a\u666f\u5c31\u662f\u9884\u6d4b\u7cfb\u7edf\uff0c\u901a\u8fc7\u5404\u4e2a\u7cfb\u7edf\u7684\u884c\u4e3a\u6570\u636e\u5bf9\u4ea7\u54c1\u7684\u672a\u6765\u505a\u51fa\u9884\u6d4b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u7528\u6237\u5bf9\u5404\u4e2a\u7cfb\u7edf\u7684\u64cd\u4f5c\u5f15\u53d1\u4e86\u4e00\u7cfb\u5217\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u4f1a\u63a8\u9001\u5230\u6d88\u606f\u961f\u5217\uff0c\u7136\u540e\u9884\u6d4b\u670d\u52a1\u6279\u91cf\u6d88\u8d39\u3002\u53ef\u4ee5\u770b\u5230\u9884\u6d4b\u670d\u52a1\u7684\u4e00\u6b21\u9884\u6d4b\u7b97\u6cd5\u4ee3\u7801\u5757\u7684\u6267\u884c\uff0c\u662f\u7531\u591a\u4e2a\u4e1a\u52a1\u670d\u52a1\u5f15\u53d1\u7684\u3002\u90a3\u4ece\u9884\u6d4b\u670d\u52a1\u8fd9\u4e2a\u70b9\u6765\u770b\uff0c\u5982\u4f55\u4e0e\u591a\u4e2a\u751f\u4ea7\u8005\u670d\u52a1\u4e32\u8054\u94fe\u8def\u5462\uff1f\u6811\u5f62\u8ffd\u8e2a\u6a21\u578b\u663e\u7136\u662f\u4e0d\u80fd\u6ee1\u8db3\u7684\u3002 2.\u56fe\u5f62\u8ffd\u8e2a\u7684\u5b9e\u73b0\u2014\u2014\u652f\u6301\u6279\u5904\u7406\u548c\u201c\u65ad\u94fe\u201d\u573a\u666f \u4ee5 SkyWalking \u7684\u5b58\u50a8\u6a21\u578b\u4e3a\u4f8b Span \u6253\u5305 \uff1aSkyWalking \u5c06\u4e00\u4e2a\u4efb\u52a1\u7ebf\u7a0b\u4e2d\u7684\u6240\u6709 Span \u6253\u5305\u4e3a Segment\u3002 \u4e00\u4e2a Segment \u4e2d\u7684 Span \u7531 0 \u9012\u589e\uff0c\u4e14\u5177\u6709\u76f8\u540c\u7236\u8282\u70b9\u4f9d\u8d56 \u3002 \u7236\u8282\u70b9\u63cf\u8ff0\uff1aSkyWalking \u7236\u8282\u70b9\u63cf\u8ff0\u7531\u591a\u4e2a\u5c5e\u6027\u7ec4\u6210 \u3002 Refs \u5c5e\u6027\uff1a\u63cf\u8ff0\u5f53\u524d Segment \u4e0e\u76f8\u5173\u751f\u4ea7\u8005\u7684 Segment \u6807\u8bc6\u3002 \u5728 RPC \u8c03\u7528\u7684\u6811\u5f62\u8ffd\u8e2a\u94fe\u8def\u4e2d\uff0c\u4e3a 1 \u4e2a\u5143\u7d20\uff1b\u4f46\u662f\u5f53\u8ffd\u8e2a\u573a\u666f\u6709\u6279\u5904\u7406\u6846\u67b6\u65f6\uff0c\u94fe\u8def\u4ece\u6279\u5904\u7406\u6846\u67b6\u8d77\u5c31\u4e3a\u591a\u4e2a\u5143\u7d20\u3002 \u5206\u5e03\u5f0f\u94fe\u8def ID\uff1a\u5206\u5e03\u5f0f\u94fe\u8def ID \u662f\u91cd\u8981\u7684\u94fe\u8def\u6807\u8bb0\uff0c\u5176\u6570\u636e\u7ed3\u6784\u4e3a\u6570\u7ec4 \u3002 \u5982\u9884\u6d4b\u573a\u666f\u4e2d\uff0c\u5546\u54c1\u7c7b\u76ee\u548c\u4ea4\u6613\u670d\u52a1\u7b49\u4e1a\u52a1\u670d\u52a1\u7684\u5206\u5e03\u5f0f\u94fe\u8def ID \u7684\u6570\u7ec4\u957f\u5ea6\u4e3a 1 \u4e2a\uff1b\u5f53\u9884\u6d4b\u670d\u52a1\u62c9\u53d6\u4e00\u6279\u7528\u6237\u8bf7\u6c42\u884c\u4e3a\u540e\uff0c\u5206\u5e03\u5f0f\u94fe\u8def\u8ddf\u8e2a ID \u5c31\u662f\u591a\u4e2a\u4e86\u3002\u6570\u91cf\u548c\u62c9\u53d6\u6d88\u606f\u4e2d\u7684\u7236\u8282\u70b9\u63cf\u8ff0\u6570\u91cf\u6709\u5173\u3002 2 \u4eb2\u548c\u7ebf\u7a0b\u6a21\u578b\uff1a\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a SkyWalking SkyWalking \u4f7f\u7528\u5b57\u8282\u7801\u589e\u5f3a\u6280\u672f\u5b9e\u73b0\u4e86\u76d1\u63a7\uff0c\u901a\u5e38\u7684\u573a\u666f\u4e0b\u5728\u5e94\u7528\u670d\u52a1\u7684\u542f\u52a8\u547d\u4ee4\u4e2d\uff0c\u589e\u52a0\u63a2\u9488\u5c5e\u6027\u5c31\u80fd\u5b8c\u6210\u63a5\u5165 SkyWalking \u7684 APM \u76d1\u63a7\u3002 \u5de5\u4f5c\u7ebf\u7a0b\u3001\u4efb\u52a1\u7ebf\u7a0b\u3001\u7ebf\u7a0b\u6c60\u662f\u5982\u4f55\u914d\u5408\u7684\uff1f \u4e24\u4e2a\u5173\u952e\u8bcd\u6765\u63cf\u8ff0\u7ebf\u7a0b\uff0c \u90a3\u5c31\u662f\u5de5\u4f5c\u7ebf\u7a0b\u548c\u4efb\u52a1\u7ebf\u7a0b \u3002 \u8fd9\u4e24\u4e2a\u8bcd\u6765\u81ea Java \u5e76\u53d1\u6846\u67b6\u5305\uff08java.util.concurrent\uff09\u4e2d\u7684\u7ebf\u7a0b\u6c60\u6267\u884c\u5668\u7c7b\uff08ThreadPoolExecutor\uff09\uff0c\u5176\u4e2d\u5f53\u524d\u6b63\u5728\u6267\u884c runWorker \u65b9\u6cd5\u7684\u7ebf\u7a0b\u662f\u5de5\u4f5c\u7ebf\u7a0b\uff1b\u5728 runWorker \u4e0d\u505c\u5faa\u73af\uff0c\u4ece\u7b49\u5f85\u6267\u884c\u961f\u5217\u4e2d\u83b7\u53d6\u7684\u5bf9\u8c61\u4e3a\u4efb\u52a1\u7ebf\u7a0b\u3002 \u6700\u597d\u7684\u7ebf\u7a0b\u7ba1\u7406\u7b56\u7565\u5c31\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\u6240\u793a\u3002 \u6574\u4e2a\u6d41\u7a0b\u975e\u5e38\u7b80\u5355\u5730\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u5728\u4e3b\u7ebf\u7a0b\u4e2d\u56e0\u4e3a\u6709\u5f02\u6b65\u5904\u7406\u529f\u80fd\uff0c\u6240\u4ee5\u521b\u5efa\u4efb\u52a1\u7ebf\u7a0b\u5e76\u63d0\u4ea4\u5230\u963b\u585e\u961f\u5217\uff1b \u5de5\u4f5c\u7ebf\u7a0b\u4f1a\u6301\u7eed\u4ece\u961f\u5217\u4e2d\u62ff\u53d6\u4efb\u52a1\u7ebf\u7a0b\u5e76\u6267\u884c\u3002 \u4e0a\u56fe\u4e2d\u7684 \u4e3b\u7ebf\u7a0b\uff0c\u662f\u5176\u4ed6\u7ebf\u7a0b\u6c60\u4e2d\u5de5\u4f5c\u7ebf\u7a0b\u5728\u6267\u884c\u7684\u4efb\u52a1\u7ebf\u7a0b \u4ece\u76d1\u63a7\u89c6\u89d2\u91cd\u65b0\u8ba4\u8bc6\u7ebf\u7a0b \u4ee5 Spring Boot \u5fae\u670d\u52a1\u4e3a\u4f8b\uff0c\u6765\u770b\u4e0b SkyWalking \u662f\u5982\u4f55\u5b9e\u73b0 Web \u670d\u52a1\u5668\u7684\u76d1\u63a7\u7684\u3002 \u5de5\u4f5c\u7ebf\u7a0b \u5728 Spring Boot \u5fae\u670d\u52a1\u7684\u573a\u666f\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u662f\u5728 Tomcat \u5bb9\u5668\u7684\u7ebf\u7a0b\u6c60\u4e2d\u6b63\u5728\u54cd\u5e94\u7528\u6237\u8bf7\u6c42\u65f6\u6267\u884c\u7684\u4e1a\u52a1\u4ee3\u7801\u7684\u4efb\u52a1\u7ebf\u7a0b\u3002 SkyWalking \u5728 Tomcat \u8fdb\u884c\u8f6c\u53d1\u8bf7\u6c42\u7684\u4ee3\u7801\u5757\u8fdb\u884c\u76d1\u63a7 \u3002\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u6574\u4f53\u7684\u76d1\u63a7\u7c7b\u540c\u4e8e Spring AOP \u9762\u5411\u5207\u9762\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u5728\u6267\u884c\u65b9\u6cd5\u7684\u524d\u540e\u8fdb\u884c\u76d1\u63a7\u6570\u636e\u7684\u6536\u96c6\uff0c\u4e5f\u5c31\u662f\u5bf9\u4efb\u52a1\u7ebf\u7a0b\u7684\u6267\u884c\u8fc7\u7a0b\u8fdb\u884c\u76d1\u63a7\u3002 \u4efb\u52a1\u7ebf\u7a0b \u4e3a\u4e86\u5b9e\u73b0\u5728\u6267\u884c\u4efb\u52a1\u7ebf\u7a0b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u5904\u6536\u96c6\u7684\u76d1\u63a7\u4fe1\u606f\u53ef\u4ee5\u4e0d\u88ab\u5f00\u53d1\u4eba\u5458\u611f\u77e5\u5373\u53ef\u5b9e\u73b0\u5173\u8054\uff0cSkyWalking \u4f7f\u7528\u4e86 Java \u7ebf\u7a0b\u63d0\u4f9b\u7684\u7ebf\u7a0b\u672c\u5730\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f ThreadLocal \u80fd\u529b\u6765\u5b9e\u73b0\u3002 \u5728\u6267\u884c\u4efb\u52a1\u7ebf\u7a0b\u5f00\u59cb\u4e4b\u521d\uff0c\u5f53\u6808\u9488\u89e6\u53ca\u7b2c\u4e00\u4e2a SkyWalking \u76d1\u63a7\u57cb\u70b9\u540e\uff0c\u4f1a\u5728 ThreadLocal \u521b\u5efa\u5f53\u524d\u4efb\u52a1\u7ebf\u7a0b\u7684\u8ddf\u8e2a\u4fe1\u606f\uff0c\u91cd\u8981\u7684\u5c5e\u6027\u5982\u4e0b \u4efb\u52a1\u7ebf\u7a0b\u7c7b\u578b \u6839\u636e\u7b2c\u4e00\u4e2a\u76d1\u63a7\u57cb\u70b9\u7684\u7c7b\u578b\uff0c\u5c06\u4efb\u52a1\u7ebf\u7a0b\u5206\u4e3a\u662f\u8981\u8ffd\u8e2a\u8de8\u8fdb\u7a0b\u94fe\u8def\u8fd8\u662f \u8de8\u7ebf\u7a0b\u94fe\u8def \u5bf9\u4e8e\u8de8\u8fdb\u7a0b\u94fe\u8def\uff0c\u53c8\u53ef\u4ee5\u5206\u4e3a\u4e0a\u6e38\u662f\u4eba\u8fd8\u662f\u673a\u5668\u3002\u4ee5 SpringMvc \u8ffd\u8e2a\u4e3a\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u76d1\u63a7\u57cb\u70b9\u9700\u8981\u8bc6\u522b HTTP Header \u4e2d\u7684\u6807\u8bb0\u4fe1\u606f\u3002 \u5168\u94fe\u8def\u8ddf\u8e2a\u6807\u8bc6 \u82e5 HTTP Header \u6ca1\u6709\u94fe\u8def\u6807\u8bc6\u4fe1\u606f\uff0c\u5c31\u5c06\u8ffd\u8e2a\u7684\u94fe\u8def\u6e32\u67d3\u4e3a\u4eba\u4e3a\u8c03\u7528\uff0c\u5e76\u521b\u5efa\u5168\u94fe\u8def\u6807\u8bc6\u7ed1\u5b9a\u5230 ThreadLocal \u4fe1\u606f\u4e2d\uff1b \u53cd\u4e4b\uff0c\u8bc6\u522b HTTP Header \u7684\u94fe\u8def\u6807\u8bc6\uff0c\u89e3\u6790\u51fa\u5168\u94fe\u8def\u8ddf\u8e2a\u6807\u8bc6\uff0c\u5e76\u8ffd\u52a0\u5230 ThreadLocal \u4e2d\u7684\u5168\u94fe\u8def\u6807\u8bc6\u4fe1\u606f\u3002 \u5f53\u4efb\u52a1\u7ebf\u7a0b\u5f00\u59cb\u6267\u884c\u540e\uff0cSkyWalking \u76d1\u63a7\u57cb\u70b9\u4f1a\u6709\u4ee5\u4e0b\u4e24\u7c7b\uff1a \u8de8\u8fdb\u7a0b\u76d1\u63a7\u57cb\u70b9\u548c\u8de8\u7ebf\u7a0b\u76d1\u63a7\u57cb\u70b9 \u3002 \u5bf9\u4e8e\u8de8\u8fdb\u7a0b\u76d1\u63a7\uff0c\u9700\u8981\u627e\u5230\u9762\u5411\u4f20\u8f93\u7684\u8bf7\u6c42\u5934\u90e8\u5c5e\u6027\uff0c\u5c06 ThreadLocal \u4e2d\u7684\u5168\u94fe\u8def\u6807\u8bc6\u653e\u5165\u5176\u4e2d\u3002 \u5bf9\u4e8e\u8de8\u7ebf\u7a0b\u76d1\u63a7\uff0c\u90a3\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u5728\u4e3b\u7ebf\u7a0b\u521b\u5efa\u4efb\u52a1\u7ebf\u7a0b\u65f6\uff0c\u6269\u5c55\u4efb\u52a1\u7ebf\u7a0b\u5bf9\u8c61\u7684\u5c5e\u6027\u3002\u5c06\u4e3b\u7ebf\u7a0b\u7684 ThreadLocal \u4e2d\u7684\u94fe\u8def\u6807\u8bc6\u653e\u5230\u6269\u5c55\u5c5e\u6027\u4e2d\uff0c\u5728\u4efb\u52a1\u7ebf\u7a0b\u6267\u884c\u65f6\uff0c\u8bc6\u522b\u8fd9\u4e2a\u5c5e\u6027\u5b8c\u6210\u4e32\u8054\u3002 \u6700\u540e\uff0c\u5c31\u662f\u4efb\u52a1\u7ebf\u7a0b\u6267\u884c\u63a5\u8fd1\u7ed3\u675f\u65f6\uff0c\u76d1\u63a7\u4efb\u52a1\u7ebf\u7a0b\u7684\u7ed3\u675f\uff0c\u4f9d\u8d56\u4e8e\u9996\u4e2a\u76d1\u63a7\u65b9\u6cd5\u7684\u9000\u51fa\u65f6\u673a\uff0c\u6b64\u65f6\u9700\u8981\u6e05\u7406 SkyWalking \u6240\u6709\u76d1\u63a7\u7684 ThreadLocal \u4fe1\u606f \u6240\u4ee5\u5728\u7ebf\u7a0b\u590d\u7528\u7684\u65f6\u5019\uff0c\u82e5\u5728\u4efb\u52a1\u7ebf\u7a0b\u7ed3\u675f\u7684\u65f6\u5019\u6ca1\u6709\u6e05\u7406\u5e72\u51c0\uff0c\u90a3\u63a5\u4e0b\u6765\u6267\u884c\u7684\u4efb\u52a1\u7ebf\u7a0b\uff1a\u8f7b\u5219\u5185\u5b58\u6cc4\u6f0f\uff0c\u65e0\u6cd5\u4e32\u8054\u94fe\u8def\uff1b\u91cd\u5219\u5185\u5b58\u6ea2\u51fa\uff0c\u6574\u4e2a\u8fdb\u7a0b\u88ab\u4e0d\u505c\u7684 Long GC \u592f\u4f4f\u3002 \u5728 SkyWalking \u7684\u76d1\u63a7\u7ebf\u7a0b\u6a21\u578b\u4e0b\uff0c\u82e5\u76d1\u63a7\u4e86\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u5c31\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u60c5\u51b5\uff1a \u5de5\u4f5c\u7ebf\u7a0b\u5728\u542f\u52a8\u540e\uff0c\u5c31\u4f1a\u5f00\u542f\u76d1\u63a7\uff0c\u5728\u6267\u884c\u4efb\u52a1\u7ebf\u7a0b\u65f6\u4f1a\u4e0e\u4e3b\u7ebf\u7a0b\u8fdb\u884c\u5173\u8054\uff1b \u5728\u7ed3\u675f\u4efb\u52a1\u7ebf\u7a0b\u65f6\uff0c\u7531\u4e8e\u5de5\u4f5c\u7ebf\u7a0b\u5e76\u6ca1\u6709\u9000\u51fa\uff0c\u6240\u4ee5\u76d1\u63a7\u4fe1\u606f\u4e0d\u4f1a\u4e0a\u62a5\uff1b \u5f53\u590d\u7528\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u518d\u6b21\u6267\u884c\u4efb\u52a1\u7ebf\u7a0b\u65f6\uff0c\u4f1a\u7ee7\u7eed\u4e0e\u65b0\u7684\uff08\u521b\u5efa\u672c\u6b21\u4efb\u52a1\u7ebf\u7a0b\u7684\uff09\u4e3b\u7ebf\u7a0b\u8fdb\u884c\u5173\u8054\u3002 \u90a3\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f\uff1a\u6bcf\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u5185\u90e8\u7684\u76d1\u63a7\u4fe1\u606f\u7531\u4e8e\u4e00\u76f4\u65e0\u6cd5\u4e0a\u62a5\u800c\u65e0\u6cd5\u5f97\u5230\u91ca\u653e\uff0c\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u4f1a\u76f4\u7ebf\u4e0a\u5347\u3002\u4e14\u8fd9\u4e9b\u88ab\u5360\u7528\u7684\u5185\u5b58\u7531\u4e8e\u4e0d\u80fd\u5339\u914d\u5185\u5b58\u5783\u573e\u56de\u6536\u7b97\u6cd5\uff0cJVM \u8fdb\u7a0b\u5728\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u5230\u8fbe\u4e34\u754c\u503c\u540e\uff0c\u4f1a\u9891\u7e41\u6267\u884c\u5783\u573e\u56de\u6536\uff0c\u4f46\u901a\u8fc7\u5783\u573e\u56de\u6536\u65e5\u5fd7\u4f1a\u53d1\u73b0\u6536\u6548\u751a\u5fae\u3002","title":"\u7b2c\u4e8c\u8282 APM + OpenTracing\u539f\u7406"},{"location":"chap_apm/2opentracing/#apm-opentracing","text":"","title":"\u7b2c\u4e8c\u8282 APM + OpenTracing \u539f\u7406"},{"location":"chap_apm/2opentracing/#1-opentracing-dapperskywalking","text":"","title":"1 OpenTracing \u89e3\u5bc6: Dapper\u662f\u6811\uff0cSkyWalking\u662f\u56fe"},{"location":"chap_apm/2opentracing/#_1","text":"\u5206\u5e03\u5f0f\u8ffd\u8e2a\u5c31\u662f\u628a\u4e00\u6b21\u7528\u6237\u8bf7\u6c42\u5f15\u8d77\u7684\uff0c\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u4e2d\u7684\u76f8\u5173\u65e5\u5fd7\uff0c\u4e32\u8054\u8d77\u6765\u7684\u8fc7\u7a0b\u3002 \u5e02\u573a\u4e0a\u6d41\u884c\u7684\u5206\u5e03\u5f0f\u8ffd\u8e2a\u5b9e\u73b0\u662f\uff1a\u901a\u8fc7\u94fe\u8def\u6807\u8bc6\uff0c\u5c06\u4e00\u6b21\u7528\u6237\u8bf7\u6c42\uff0c\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u4e2d\u5404\u4e2a\u5e94\u7528\u8282\u70b9\u6253\u5370\u7684\u65e5\u5fd7\u4e32\u8054\u8d77\u6765\u7684\u8fc7\u7a0b\uff0c\u5c31\u662f\u5206\u5e03\u5f0f\u94fe\u8def\u8ddf\u8e2a\u3002 \u8ffd\u8e2a\u53c8\u53ef\u4ee5\u7b80\u5355\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\u3002 \u5bf9\u4e8e \u8de8\u8fdb\u7a0b\u7684\u94fe\u8def\u8ffd\u8e2a\u65b9\u6848 \uff0c\u6700\u4f18\u7684\u6280\u672f\u65b9\u6848\u662f\u5728\u8fdc\u7a0b\u8c03\u7528\u53d1\u751f\u65f6\uff0c \u901a\u8fc7\u5bf9\u8bf7\u6c42\u534f\u8bae\u589e\u52a0\u94fe\u8def\u6807\u8bc6\uff0c\u5c06\u4e0a\u4e0b\u6e38\u8c03\u7528\u94fe\u7ed1\u5b9a\u8d77\u6765\uff0c\u5c31\u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u7684\u8de8\u8fdb\u7a0b\u8ffd\u8e2a \u3002 \u5bf9\u4e8e \u8de8\u7ebf\u7a0b\u7684\u94fe\u8def\u8ffd\u8e2a\u65b9\u6848 \uff0c\u5982 Java \u8bed\u8a00\u7684\u5fae\u670d\u52a1\u5e94\u7528\uff0c \u6211\u4eec\u53ef\u4ee5\u5728\u4e3b\u7ebf\u7a0b\u521b\u5efa\u5b50\u7ebf\u7a0b\u65f6\uff0c\u5c06\u4e3b\u7ebf\u7a0b\u7684\u94fe\u8def\u6807\u8bc6\u4ee3\u5165\u5b50\u7ebf\u7a0b\uff0c\u5c06\u4e3b-\u5b50\u7ebf\u7a0b\u7ed1\u5b9a\u8d77\u6765\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u8de8\u7ebf\u7a0b\u8ffd\u8e2a \u76ee\u524d\u4ee5 SkyWalking\u3001Zipkin \u4e3a\u4ee3\u8868\u7684\u5206\u5e03\u5f0f\u8ffd\u8e2a\u7cfb\u7edf\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u5730\u63a5\u5165\u5230\u7ebf\u4e0a\u5e94\u7528\u670d\u52a1\u4e86","title":"\u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u94fe\u8def\u8ddf\u8e2a\uff1f"},{"location":"chap_apm/2opentracing/#_2","text":"1.\u6807\u8bb0\u65b9\u6848\uff08\u6709\u4fb5\u5165\u3001\u51c6\u786e\u5ea6\u9ad8\uff09 \u6807\u8bb0\u6cd5\u987e\u540d\u601d\u4e49\uff0c \u5c31\u662f\u5bf9\u5e94\u7528\u76d1\u63a7\u65e5\u5fd7\u6253\u6807\u8bb0 \u3002\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u5bf9\u65e5\u5fd7\u6253\u6807\u8bb0\uff0c\u6216\u8005\u5728\u6846\u67b6\u62e6\u622a\u5668\u4e2d\u5bf9\u8bf7\u6c42\u8fdb\u884c\u6807\u8bb0 \u3002\u901a\u8fc7\u8fd9\u4e9b\u6807\u8bb0\uff0c\u5c06\u4e00\u6b21\u8bf7\u6c42\u5f15\u8d77\u7684\u5e94\u7528\u670d\u52a1\u96c6\u7fa4\u4e2d\u7684\u76d1\u63a7\u65e5\u5fd7\u5168\u90e8\u4e32\u8054\u6c47\u603b\u8d77\u6765\u7684\u8fc7\u7a0b\u5c31\u662f\u6807\u8bb0\u65b9\u6848 \u3002 Dapper \u6240\u8bba\u8ff0\u7684\u793a\u4f8b \u524d\u53f0\u670d\u52a1 A \u6536\u5230 RequestX \u8bf7\u6c42\uff0cHttp Server \u6846\u67b6\u53d1\u73b0\u8bf7\u6c42\u4e2d\u6ca1\u6709\u6807\u8bb0\uff0c\u90a3\u4e48\u5bf9\u8fd9\u6b21\u6d41\u91cf\u8fdb\u884c\u6807\u8bb0\uff0c\u5e76\u8bc6\u522b\u4e3a\u7528\u6237\u8bf7\u6c42\u8fdb\u884c\u4f20\u64ad\u3002 \u5f53\u8bf7\u6c42\u4f20\u64ad\u5230 B\u3001C\u3001D\u3001E\uff0c\u518d\u6253\u5370\u76d1\u63a7\u65e5\u5fd7\u65f6\uff0c\u76d1\u63a7\u65e5\u5fd7\u5c31\u5e26\u7740\u4e0e A \u884d\u751f\u51fa\u6765\u7684\u6807\u8bb0\uff0c\u8fd9\u6837\u8fd9\u6b21\u7528\u6237\u7684\u8bf7\u6c42\u901a\u8fc7 A \u670d\u52a1\u751f\u6210\u7684\u6807\u8bb0\u5c31\u5f88\u5bb9\u6613\u88ab\u6536\u96c6\u8d77\u6765\u4e86\u3002 \u4e0d\u96be\u770b\u51fa\uff0c\u6807\u8bb0\u6cd5\u7684\u4f18\u70b9\u662f\u7cbe\u51c6\uff1b\u4f46\u7f3a\u70b9\u4e5f\u663e\u800c\u6613\u89c1\uff0c\u9700\u8981\u6253\u6807\u8bb0\u3002 2.\u9ed1\u76d2\u65b9\u6848\uff08\u65e0\u4fb5\u5165\u3001\u51c6\u786e\u5ea6\u4f4e\uff09 \u9ed1\u76d2\u65b9\u6848\u5728\u65e0\u4fb5\u5165\u7684\u5b9e\u73b0\u4e0a\uff0c\u9ad8\u4e8e\u6807\u8bb0\u65b9\u6848\u4e00\u4e2a\u7ef4\u5ea6\u3002\u9ed1\u76d2\u65b9\u6848\u8ba4\u4e3a\u5e94\u7528\u670d\u52a1\u662f\u9ed1\u76d2\u7684\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u53ef\u89c1\u7684\u8bf7\u6c42\u4e0e\u65e5\u5fd7\uff0c\u901a\u8fc7\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5\uff0c\u5c06\u8fd9\u4e9b\u8bf7\u6c42\u548c\u65e5\u5fd7\u5173\u8054\u8d77\u6765 \u6700\u5e38\u89c1\u7684\u673a\u5668\u5b66\u4e60\u65b9\u5f0f\u7528\u56de\u5f52\u5206\u6790\u7b49\u7edf\u8ba1\u5b66\u7b97\u6cd5\uff0c\u5c06\u8fd9\u4e9b\u788e\u7247\u5316\u7684\u8bf7\u6c42\u548c\u65e5\u5fd7\u901a\u8fc7\u63a8\u6d4b\uff0c\u91cd\u65b0\u7ec4\u5408\u6210\u5b8c\u6574\u7684\u94fe\u8def\u3002 \u9ed1\u76d2\u65b9\u6848\u7684\u4f18\u52bf\u663e\u800c\u6613\u89c1\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u5e94\u7528\u670d\u52a1\u7684\u67b6\u6784\u4fee\u6539\u548c\u76d1\u63a7\u65e5\u5fd7\u7684\u53d8\u66f4\uff1b \u9ed1\u76d2\u65b9\u6848\u7684\u7f3a\u70b9\u5f88\u660e\u663e\uff0c\u673a\u5668\u5b66\u4e60\u7684\u7cbe\u5ea6\u662f\u9010\u6e10\u63d0\u9ad8\u7684\u3002\u6240\u4ee5\u4e0a\u7ebf\u65b0\u529f\u80fd\u65f6\uff0c\u5f80\u5f80\u5206\u5e03\u5f0f\u76d1\u63a7\u53ef\u7528\u5ea6\u975e\u5e38\u4f4e\uff0c\u800c\u4e14\u673a\u5668\u5b66\u4e60\u4f1a\u6d88\u8017\u5f88\u591a\u7684\u8fd0\u7b97\u8d44\u6e90\u3002","title":"\u65e9\u671f\u5bf9\u5178\u578b\u8ffd\u8e2a\u573a\u666f\u7684\u8bba\u8ff0"},{"location":"chap_apm/2opentracing/#skywalking","text":"1.\u514b\u670d\u6811\u5f62\u8ffd\u8e2a\u7684\u4e0d\u8db3\u2014\u2014\u65e0\u6cd5\u6279\u5904\u7406 \u56fe\u4e0e\u6811\u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u6709\u591a\u4e2a\u7236\u8282\u70b9 \u3010\u9884\u6d4b\u7cfb\u7edf\u573a\u666f\u3011 \u4e00\u4e2a\u5178\u578b\u7684\u573a\u666f\u5c31\u662f\u9884\u6d4b\u7cfb\u7edf\uff0c\u901a\u8fc7\u5404\u4e2a\u7cfb\u7edf\u7684\u884c\u4e3a\u6570\u636e\u5bf9\u4ea7\u54c1\u7684\u672a\u6765\u505a\u51fa\u9884\u6d4b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u7528\u6237\u5bf9\u5404\u4e2a\u7cfb\u7edf\u7684\u64cd\u4f5c\u5f15\u53d1\u4e86\u4e00\u7cfb\u5217\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u4f1a\u63a8\u9001\u5230\u6d88\u606f\u961f\u5217\uff0c\u7136\u540e\u9884\u6d4b\u670d\u52a1\u6279\u91cf\u6d88\u8d39\u3002\u53ef\u4ee5\u770b\u5230\u9884\u6d4b\u670d\u52a1\u7684\u4e00\u6b21\u9884\u6d4b\u7b97\u6cd5\u4ee3\u7801\u5757\u7684\u6267\u884c\uff0c\u662f\u7531\u591a\u4e2a\u4e1a\u52a1\u670d\u52a1\u5f15\u53d1\u7684\u3002\u90a3\u4ece\u9884\u6d4b\u670d\u52a1\u8fd9\u4e2a\u70b9\u6765\u770b\uff0c\u5982\u4f55\u4e0e\u591a\u4e2a\u751f\u4ea7\u8005\u670d\u52a1\u4e32\u8054\u94fe\u8def\u5462\uff1f\u6811\u5f62\u8ffd\u8e2a\u6a21\u578b\u663e\u7136\u662f\u4e0d\u80fd\u6ee1\u8db3\u7684\u3002 2.\u56fe\u5f62\u8ffd\u8e2a\u7684\u5b9e\u73b0\u2014\u2014\u652f\u6301\u6279\u5904\u7406\u548c\u201c\u65ad\u94fe\u201d\u573a\u666f \u4ee5 SkyWalking \u7684\u5b58\u50a8\u6a21\u578b\u4e3a\u4f8b Span \u6253\u5305 \uff1aSkyWalking \u5c06\u4e00\u4e2a\u4efb\u52a1\u7ebf\u7a0b\u4e2d\u7684\u6240\u6709 Span \u6253\u5305\u4e3a Segment\u3002 \u4e00\u4e2a Segment \u4e2d\u7684 Span \u7531 0 \u9012\u589e\uff0c\u4e14\u5177\u6709\u76f8\u540c\u7236\u8282\u70b9\u4f9d\u8d56 \u3002 \u7236\u8282\u70b9\u63cf\u8ff0\uff1aSkyWalking \u7236\u8282\u70b9\u63cf\u8ff0\u7531\u591a\u4e2a\u5c5e\u6027\u7ec4\u6210 \u3002 Refs \u5c5e\u6027\uff1a\u63cf\u8ff0\u5f53\u524d Segment \u4e0e\u76f8\u5173\u751f\u4ea7\u8005\u7684 Segment \u6807\u8bc6\u3002 \u5728 RPC \u8c03\u7528\u7684\u6811\u5f62\u8ffd\u8e2a\u94fe\u8def\u4e2d\uff0c\u4e3a 1 \u4e2a\u5143\u7d20\uff1b\u4f46\u662f\u5f53\u8ffd\u8e2a\u573a\u666f\u6709\u6279\u5904\u7406\u6846\u67b6\u65f6\uff0c\u94fe\u8def\u4ece\u6279\u5904\u7406\u6846\u67b6\u8d77\u5c31\u4e3a\u591a\u4e2a\u5143\u7d20\u3002 \u5206\u5e03\u5f0f\u94fe\u8def ID\uff1a\u5206\u5e03\u5f0f\u94fe\u8def ID \u662f\u91cd\u8981\u7684\u94fe\u8def\u6807\u8bb0\uff0c\u5176\u6570\u636e\u7ed3\u6784\u4e3a\u6570\u7ec4 \u3002 \u5982\u9884\u6d4b\u573a\u666f\u4e2d\uff0c\u5546\u54c1\u7c7b\u76ee\u548c\u4ea4\u6613\u670d\u52a1\u7b49\u4e1a\u52a1\u670d\u52a1\u7684\u5206\u5e03\u5f0f\u94fe\u8def ID \u7684\u6570\u7ec4\u957f\u5ea6\u4e3a 1 \u4e2a\uff1b\u5f53\u9884\u6d4b\u670d\u52a1\u62c9\u53d6\u4e00\u6279\u7528\u6237\u8bf7\u6c42\u884c\u4e3a\u540e\uff0c\u5206\u5e03\u5f0f\u94fe\u8def\u8ddf\u8e2a ID \u5c31\u662f\u591a\u4e2a\u4e86\u3002\u6570\u91cf\u548c\u62c9\u53d6\u6d88\u606f\u4e2d\u7684\u7236\u8282\u70b9\u63cf\u8ff0\u6570\u91cf\u6709\u5173\u3002","title":"SkyWalking \u7684\u56fe\u5f62\u8ffd\u8e2a\u6a21\u578b (\u517c\u5bb9\u6811\u5f62\u6a21\u578b\u7684\u56fe\u5f62\u8ffd\u8e2a\u6a21\u578b)"},{"location":"chap_apm/2opentracing/#2-skywalking","text":"SkyWalking \u4f7f\u7528\u5b57\u8282\u7801\u589e\u5f3a\u6280\u672f\u5b9e\u73b0\u4e86\u76d1\u63a7\uff0c\u901a\u5e38\u7684\u573a\u666f\u4e0b\u5728\u5e94\u7528\u670d\u52a1\u7684\u542f\u52a8\u547d\u4ee4\u4e2d\uff0c\u589e\u52a0\u63a2\u9488\u5c5e\u6027\u5c31\u80fd\u5b8c\u6210\u63a5\u5165 SkyWalking \u7684 APM \u76d1\u63a7\u3002","title":"2 \u4eb2\u548c\u7ebf\u7a0b\u6a21\u578b\uff1a\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a SkyWalking"},{"location":"chap_apm/2opentracing/#_3","text":"\u4e24\u4e2a\u5173\u952e\u8bcd\u6765\u63cf\u8ff0\u7ebf\u7a0b\uff0c \u90a3\u5c31\u662f\u5de5\u4f5c\u7ebf\u7a0b\u548c\u4efb\u52a1\u7ebf\u7a0b \u3002 \u8fd9\u4e24\u4e2a\u8bcd\u6765\u81ea Java \u5e76\u53d1\u6846\u67b6\u5305\uff08java.util.concurrent\uff09\u4e2d\u7684\u7ebf\u7a0b\u6c60\u6267\u884c\u5668\u7c7b\uff08ThreadPoolExecutor\uff09\uff0c\u5176\u4e2d\u5f53\u524d\u6b63\u5728\u6267\u884c runWorker \u65b9\u6cd5\u7684\u7ebf\u7a0b\u662f\u5de5\u4f5c\u7ebf\u7a0b\uff1b\u5728 runWorker \u4e0d\u505c\u5faa\u73af\uff0c\u4ece\u7b49\u5f85\u6267\u884c\u961f\u5217\u4e2d\u83b7\u53d6\u7684\u5bf9\u8c61\u4e3a\u4efb\u52a1\u7ebf\u7a0b\u3002 \u6700\u597d\u7684\u7ebf\u7a0b\u7ba1\u7406\u7b56\u7565\u5c31\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\u6240\u793a\u3002 \u6574\u4e2a\u6d41\u7a0b\u975e\u5e38\u7b80\u5355\u5730\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u5728\u4e3b\u7ebf\u7a0b\u4e2d\u56e0\u4e3a\u6709\u5f02\u6b65\u5904\u7406\u529f\u80fd\uff0c\u6240\u4ee5\u521b\u5efa\u4efb\u52a1\u7ebf\u7a0b\u5e76\u63d0\u4ea4\u5230\u963b\u585e\u961f\u5217\uff1b \u5de5\u4f5c\u7ebf\u7a0b\u4f1a\u6301\u7eed\u4ece\u961f\u5217\u4e2d\u62ff\u53d6\u4efb\u52a1\u7ebf\u7a0b\u5e76\u6267\u884c\u3002 \u4e0a\u56fe\u4e2d\u7684 \u4e3b\u7ebf\u7a0b\uff0c\u662f\u5176\u4ed6\u7ebf\u7a0b\u6c60\u4e2d\u5de5\u4f5c\u7ebf\u7a0b\u5728\u6267\u884c\u7684\u4efb\u52a1\u7ebf\u7a0b","title":"\u5de5\u4f5c\u7ebf\u7a0b\u3001\u4efb\u52a1\u7ebf\u7a0b\u3001\u7ebf\u7a0b\u6c60\u662f\u5982\u4f55\u914d\u5408\u7684\uff1f"},{"location":"chap_apm/2opentracing/#_4","text":"\u4ee5 Spring Boot \u5fae\u670d\u52a1\u4e3a\u4f8b\uff0c\u6765\u770b\u4e0b SkyWalking \u662f\u5982\u4f55\u5b9e\u73b0 Web \u670d\u52a1\u5668\u7684\u76d1\u63a7\u7684\u3002 \u5de5\u4f5c\u7ebf\u7a0b \u5728 Spring Boot \u5fae\u670d\u52a1\u7684\u573a\u666f\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u662f\u5728 Tomcat \u5bb9\u5668\u7684\u7ebf\u7a0b\u6c60\u4e2d\u6b63\u5728\u54cd\u5e94\u7528\u6237\u8bf7\u6c42\u65f6\u6267\u884c\u7684\u4e1a\u52a1\u4ee3\u7801\u7684\u4efb\u52a1\u7ebf\u7a0b\u3002 SkyWalking \u5728 Tomcat \u8fdb\u884c\u8f6c\u53d1\u8bf7\u6c42\u7684\u4ee3\u7801\u5757\u8fdb\u884c\u76d1\u63a7 \u3002\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u6574\u4f53\u7684\u76d1\u63a7\u7c7b\u540c\u4e8e Spring AOP \u9762\u5411\u5207\u9762\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u5728\u6267\u884c\u65b9\u6cd5\u7684\u524d\u540e\u8fdb\u884c\u76d1\u63a7\u6570\u636e\u7684\u6536\u96c6\uff0c\u4e5f\u5c31\u662f\u5bf9\u4efb\u52a1\u7ebf\u7a0b\u7684\u6267\u884c\u8fc7\u7a0b\u8fdb\u884c\u76d1\u63a7\u3002 \u4efb\u52a1\u7ebf\u7a0b \u4e3a\u4e86\u5b9e\u73b0\u5728\u6267\u884c\u4efb\u52a1\u7ebf\u7a0b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u5904\u6536\u96c6\u7684\u76d1\u63a7\u4fe1\u606f\u53ef\u4ee5\u4e0d\u88ab\u5f00\u53d1\u4eba\u5458\u611f\u77e5\u5373\u53ef\u5b9e\u73b0\u5173\u8054\uff0cSkyWalking \u4f7f\u7528\u4e86 Java \u7ebf\u7a0b\u63d0\u4f9b\u7684\u7ebf\u7a0b\u672c\u5730\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f ThreadLocal \u80fd\u529b\u6765\u5b9e\u73b0\u3002 \u5728\u6267\u884c\u4efb\u52a1\u7ebf\u7a0b\u5f00\u59cb\u4e4b\u521d\uff0c\u5f53\u6808\u9488\u89e6\u53ca\u7b2c\u4e00\u4e2a SkyWalking \u76d1\u63a7\u57cb\u70b9\u540e\uff0c\u4f1a\u5728 ThreadLocal \u521b\u5efa\u5f53\u524d\u4efb\u52a1\u7ebf\u7a0b\u7684\u8ddf\u8e2a\u4fe1\u606f\uff0c\u91cd\u8981\u7684\u5c5e\u6027\u5982\u4e0b \u4efb\u52a1\u7ebf\u7a0b\u7c7b\u578b \u6839\u636e\u7b2c\u4e00\u4e2a\u76d1\u63a7\u57cb\u70b9\u7684\u7c7b\u578b\uff0c\u5c06\u4efb\u52a1\u7ebf\u7a0b\u5206\u4e3a\u662f\u8981\u8ffd\u8e2a\u8de8\u8fdb\u7a0b\u94fe\u8def\u8fd8\u662f \u8de8\u7ebf\u7a0b\u94fe\u8def \u5bf9\u4e8e\u8de8\u8fdb\u7a0b\u94fe\u8def\uff0c\u53c8\u53ef\u4ee5\u5206\u4e3a\u4e0a\u6e38\u662f\u4eba\u8fd8\u662f\u673a\u5668\u3002\u4ee5 SpringMvc \u8ffd\u8e2a\u4e3a\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u76d1\u63a7\u57cb\u70b9\u9700\u8981\u8bc6\u522b HTTP Header \u4e2d\u7684\u6807\u8bb0\u4fe1\u606f\u3002 \u5168\u94fe\u8def\u8ddf\u8e2a\u6807\u8bc6 \u82e5 HTTP Header \u6ca1\u6709\u94fe\u8def\u6807\u8bc6\u4fe1\u606f\uff0c\u5c31\u5c06\u8ffd\u8e2a\u7684\u94fe\u8def\u6e32\u67d3\u4e3a\u4eba\u4e3a\u8c03\u7528\uff0c\u5e76\u521b\u5efa\u5168\u94fe\u8def\u6807\u8bc6\u7ed1\u5b9a\u5230 ThreadLocal \u4fe1\u606f\u4e2d\uff1b \u53cd\u4e4b\uff0c\u8bc6\u522b HTTP Header \u7684\u94fe\u8def\u6807\u8bc6\uff0c\u89e3\u6790\u51fa\u5168\u94fe\u8def\u8ddf\u8e2a\u6807\u8bc6\uff0c\u5e76\u8ffd\u52a0\u5230 ThreadLocal \u4e2d\u7684\u5168\u94fe\u8def\u6807\u8bc6\u4fe1\u606f\u3002 \u5f53\u4efb\u52a1\u7ebf\u7a0b\u5f00\u59cb\u6267\u884c\u540e\uff0cSkyWalking \u76d1\u63a7\u57cb\u70b9\u4f1a\u6709\u4ee5\u4e0b\u4e24\u7c7b\uff1a \u8de8\u8fdb\u7a0b\u76d1\u63a7\u57cb\u70b9\u548c\u8de8\u7ebf\u7a0b\u76d1\u63a7\u57cb\u70b9 \u3002 \u5bf9\u4e8e\u8de8\u8fdb\u7a0b\u76d1\u63a7\uff0c\u9700\u8981\u627e\u5230\u9762\u5411\u4f20\u8f93\u7684\u8bf7\u6c42\u5934\u90e8\u5c5e\u6027\uff0c\u5c06 ThreadLocal \u4e2d\u7684\u5168\u94fe\u8def\u6807\u8bc6\u653e\u5165\u5176\u4e2d\u3002 \u5bf9\u4e8e\u8de8\u7ebf\u7a0b\u76d1\u63a7\uff0c\u90a3\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u5728\u4e3b\u7ebf\u7a0b\u521b\u5efa\u4efb\u52a1\u7ebf\u7a0b\u65f6\uff0c\u6269\u5c55\u4efb\u52a1\u7ebf\u7a0b\u5bf9\u8c61\u7684\u5c5e\u6027\u3002\u5c06\u4e3b\u7ebf\u7a0b\u7684 ThreadLocal \u4e2d\u7684\u94fe\u8def\u6807\u8bc6\u653e\u5230\u6269\u5c55\u5c5e\u6027\u4e2d\uff0c\u5728\u4efb\u52a1\u7ebf\u7a0b\u6267\u884c\u65f6\uff0c\u8bc6\u522b\u8fd9\u4e2a\u5c5e\u6027\u5b8c\u6210\u4e32\u8054\u3002 \u6700\u540e\uff0c\u5c31\u662f\u4efb\u52a1\u7ebf\u7a0b\u6267\u884c\u63a5\u8fd1\u7ed3\u675f\u65f6\uff0c\u76d1\u63a7\u4efb\u52a1\u7ebf\u7a0b\u7684\u7ed3\u675f\uff0c\u4f9d\u8d56\u4e8e\u9996\u4e2a\u76d1\u63a7\u65b9\u6cd5\u7684\u9000\u51fa\u65f6\u673a\uff0c\u6b64\u65f6\u9700\u8981\u6e05\u7406 SkyWalking \u6240\u6709\u76d1\u63a7\u7684 ThreadLocal \u4fe1\u606f \u6240\u4ee5\u5728\u7ebf\u7a0b\u590d\u7528\u7684\u65f6\u5019\uff0c\u82e5\u5728\u4efb\u52a1\u7ebf\u7a0b\u7ed3\u675f\u7684\u65f6\u5019\u6ca1\u6709\u6e05\u7406\u5e72\u51c0\uff0c\u90a3\u63a5\u4e0b\u6765\u6267\u884c\u7684\u4efb\u52a1\u7ebf\u7a0b\uff1a\u8f7b\u5219\u5185\u5b58\u6cc4\u6f0f\uff0c\u65e0\u6cd5\u4e32\u8054\u94fe\u8def\uff1b\u91cd\u5219\u5185\u5b58\u6ea2\u51fa\uff0c\u6574\u4e2a\u8fdb\u7a0b\u88ab\u4e0d\u505c\u7684 Long GC \u592f\u4f4f\u3002 \u5728 SkyWalking \u7684\u76d1\u63a7\u7ebf\u7a0b\u6a21\u578b\u4e0b\uff0c\u82e5\u76d1\u63a7\u4e86\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u5c31\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u60c5\u51b5\uff1a \u5de5\u4f5c\u7ebf\u7a0b\u5728\u542f\u52a8\u540e\uff0c\u5c31\u4f1a\u5f00\u542f\u76d1\u63a7\uff0c\u5728\u6267\u884c\u4efb\u52a1\u7ebf\u7a0b\u65f6\u4f1a\u4e0e\u4e3b\u7ebf\u7a0b\u8fdb\u884c\u5173\u8054\uff1b \u5728\u7ed3\u675f\u4efb\u52a1\u7ebf\u7a0b\u65f6\uff0c\u7531\u4e8e\u5de5\u4f5c\u7ebf\u7a0b\u5e76\u6ca1\u6709\u9000\u51fa\uff0c\u6240\u4ee5\u76d1\u63a7\u4fe1\u606f\u4e0d\u4f1a\u4e0a\u62a5\uff1b \u5f53\u590d\u7528\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u518d\u6b21\u6267\u884c\u4efb\u52a1\u7ebf\u7a0b\u65f6\uff0c\u4f1a\u7ee7\u7eed\u4e0e\u65b0\u7684\uff08\u521b\u5efa\u672c\u6b21\u4efb\u52a1\u7ebf\u7a0b\u7684\uff09\u4e3b\u7ebf\u7a0b\u8fdb\u884c\u5173\u8054\u3002 \u90a3\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f\uff1a\u6bcf\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u5185\u90e8\u7684\u76d1\u63a7\u4fe1\u606f\u7531\u4e8e\u4e00\u76f4\u65e0\u6cd5\u4e0a\u62a5\u800c\u65e0\u6cd5\u5f97\u5230\u91ca\u653e\uff0c\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u4f1a\u76f4\u7ebf\u4e0a\u5347\u3002\u4e14\u8fd9\u4e9b\u88ab\u5360\u7528\u7684\u5185\u5b58\u7531\u4e8e\u4e0d\u80fd\u5339\u914d\u5185\u5b58\u5783\u573e\u56de\u6536\u7b97\u6cd5\uff0cJVM \u8fdb\u7a0b\u5728\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u5230\u8fbe\u4e34\u754c\u503c\u540e\uff0c\u4f1a\u9891\u7e41\u6267\u884c\u5783\u573e\u56de\u6536\uff0c\u4f46\u901a\u8fc7\u5783\u573e\u56de\u6536\u65e5\u5fd7\u4f1a\u53d1\u73b0\u6536\u6548\u751a\u5fae\u3002","title":"\u4ece\u76d1\u63a7\u89c6\u89d2\u91cd\u65b0\u8ba4\u8bc6\u7ebf\u7a0b"},{"location":"chap_apm/3apm_tracing/","text":"3 \u600e\u4e48\u7406\u89e3\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u6280\u672f\uff1f 1 \u4e3a\u4ec0\u4e48\u9700\u8981\u94fe\u8def\u8ffd\u8e2a \u5728\u5b66\u4e60\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u7406\u89e3\u8fd9\u9879\u6280\u672f\u4ea7\u751f\u7684\u80cc\u666f\uff0c\u4ee5\u53ca\u5b83\u80fd\u591f\u5e2e\u6211\u4eec\u89e3\u51b3\u54ea\u4e9b\u68d8\u624b\u95ee\u9898\u3002 \u63d0\u5230\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\uff0c\u6211\u4eec\u8981\u5148\u63d0\u5230\u5fae\u670d\u52a1\u3002\u76f8\u4fe1\u5f88\u591a\u4eba\u90fd\u63a5\u89e6\u8fc7\u5fae\u670d\u52a1\uff0c\u8fd9\u91cc\u518d\u56de\u987e\u4e00\u4e0b\u57fa\u672c\u6982\u5ff5\u3002 \u5fae\u670d\u52a1\u662f\u4e00\u79cd\u5f00\u53d1\u8f6f\u4ef6\u7684\u67b6\u6784\u548c\u7ec4\u7ec7\u65b9\u6cd5\uff0c \u5b83\u4fa7\u91cd\u5c06\u670d\u52a1\u89e3\u8026\uff0c\u670d\u52a1\u4e4b\u95f4\u901a\u8fc7API\u901a\u4fe1 \u3002\u4f7f\u5e94\u7528\u7a0b\u5e8f\u66f4\u6613\u4e8e\u6269\u5c55\u548c\u66f4\u5feb\u5730\u5f00\u53d1\uff0c\u4ece\u800c\u52a0\u901f\u65b0\u529f\u80fd\u4e0a\u7ebf\u3002 \u5fae\u670d\u52a1\u6f14\u53d8-\u4e9a\u9a6c\u900a\u4e91 \u52a0\u901f\u7814\u53d1\u5feb\u901f\u8fed\u4ee3\uff0c\u8ba9\u5fae\u670d\u52a1\u5728\u4e1a\u52a1\u9a71\u52a8\u7684\u4e92\u8054\u7f51\u9886\u57df\u5168\u9762\u666e\u53ca\uff0c\u72ec\u9886\u98ce\u9a9a\u3002\u4f46\u662f\uff0c\u968f\u4e4b\u800c\u6765\u4e5f\u4ea7\u751f\u4e86\u65b0\u95ee\u9898\uff1a \u5f53\u751f\u4ea7\u7cfb\u7edf\u9762\u5bf9\u9ad8\u5e76\u53d1\uff0c\u6216\u8005\u89e3\u8026\u6210\u5927\u91cf\u5fae\u670d\u52a1\u65f6\uff0c\u4ee5\u524d\u5f88\u5bb9\u6613\u5c31\u80fd\u5b9e\u73b0\u7684\u76d1\u63a7\u3001\u9884\u8b66\u3001\u5b9a\u4f4d\u6545\u969c\u5c31\u53d8\u56f0\u96be\u4e86 \u3002 2 \u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a \u521a\u624d\u8bf4\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8feb\u5207\u9700\u8981\u4e00\u4e9b\u65b0\u5de5\u5177\uff0c\u5e2e\u6211\u4eec\u7406\u89e3\u5fae\u670d\u52a1\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u884c\u4e3a\u3001\u7cbe\u51c6\u5206\u6790\u6027\u80fd\u95ee\u9898\u3002\u4e8e\u662f\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0b\u94fe\u8def\u8ffd\u8e2a\u6280\u672f\uff08Distributed Tracing\uff09\u51fa\u73b0\u4e86\u3002 \u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a \u5728\u7528\u6237\u4e00\u6b21\u8bf7\u6c42\u670d\u52a1\u7684\u8c03\u2f64\u8fc7\u7a0b\u4e2d\uff0c\u65e0\u8bba\u8bf7\u6c42\u88ab\u5206\u53d1\u5230\u591a\u5c11\u4e2a\u5b50\u7cfb\u7edf\u4e2d\uff0c\u5b50\u7cfb\u7edf\u53c8\u8c03\u7528\u4e86\u66f4\u591a\u7684\u5b50\u7cfb\u7edf\uff0c\u6211\u4eec\u628a\u7cfb\u7edf\u4fe1\u606f\u548c\u7cfb\u7edf\u95f4\u8c03\u7528\u5173\u7cfb\u90fd\u8ffd\u8e2a\u8bb0\u5f55\u4e0b\u6765\u3002\u6700\u7ec8\u628a\u6570\u636e\u96c6\u4e2d\u8d77\u6765\u53ef\u89c6\u5316\u5c55\u793a\u3002\u5b83\u4f1a\u5f62\u6210\u4e00\u4e2a\u6709\u5411\u56fe\u7684\u94fe\u8def\uff0c\u770b\u8d77\u6765\u50cf\u4e0b\u9762\u8fd9\u6837 \u3002 \u7535\u5546\u7cfb\u7edf\u7684\u94fe\u8def\u8ffd\u8e2a\u56fe \u540e\u6765\uff0c\u94fe\u8def\u8ffd\u8e2a\u6280\u672f\u76f8\u5173\u7cfb\u7edf\u6162\u6162\u6210\u719f\uff0c \u6d8c\u73b0\u4e86\u50cfDapper\u3001Zipkin\u3001HTrace\u3001OpenTelemetry\u7b49\u4f18\u79c0\u5f00\u6e90\u7cfb\u7edf \u3002\u4ed6\u4eec\u4e5f\u88ab\u4e1a\u754c\uff0c\u7279\u522b\u662f\u4e92\u8054\u7f51\u666e\u904d\u91c7\u7528\u3002 \u76ee\u524dDapper\uff08\u8bde\u751f\u4e8eGoogle\u56e2\u961f\uff09\u5e94\u7528\u5f71\u54cd\u6700\u5927\uff0cOpenTelemetry\u5df2\u7ecf\u6210\u4e3a\u6700\u65b0\u4e1a\u754c\u6807\u51c6\uff0c\u6211\u4eec\u91cd\u70b9\u57fa\u4e8eOpenTelemetry\u8bb2\u89e3\u4e00\u4e0bTrace\u5185\u90e8\u7ed3\u6784 3 \u94fe\u8defTrace\u7684\u6838\u5fc3\u7ed3\u6784 3-1 \u5feb\u901f\u5165\u95e8 \u6211\u4eec\u770b\u770b\u4e00\u4e2a\u4f8b\u5b50\uff0c\u67d0\u5546\u5bb6\u7ed9\uff08\u987e\u5ba2\uff09\u5f00\u8d26\u5355\uff08\u8981\u6c42\u4ed8\u6b3e\uff09\uff0c\u5728\u7cfb\u7edf\u4e2d\u5927\u4f53\u7684\u6d41\u7a0b\uff1a \u5f53\u5546\u5bb6\u4ececlient\u53d1\u8d77\u5f00\u8d26\u5355\u670d\u52a1\uff0c\u8bf7\u6c42\u4ececlient\u7a0b\u5e8f\u5148\u540e\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u64cd\u4f5c\uff1a \u7f51\u5173load balancer\uff1aclient\u7684https\u8bf7\u6c42\u5148\u7ecf\u8fc7\u7f51\u5173\uff0c\u7f51\u5173\u8c03\u7528\u4e0b\u9762\u7684\u5b50\u7cfb\u7edf \u8eab\u4efd\u8ba4\u8bc1auth\uff1a\u7f51\u5173RPC\u8bf7\u6c42\u5230\u670d\u52a1auth\uff0cauth\u53d1\u8d77\u8eab\u4efd\u8ba4\u8bc1\uff0c\u5b8c\u6210\u540e\u901a\u77e5\u7f51\u5173\u7a0b\u5e8f \u751f\u6210\u8d26\u5355billing\uff1a\u8eab\u4efd\u8ba4\u8bc1\u6210\u529f\u540e\uff0c\u7f51\u5173\u518d\u53d1\u9001RPC\u8bf7\u6c42\u5230\u670d\u52a1billing\uff0cbilling\u662f\u751f\u6210\u8d26\u5355\u7684\u64cd\u4f5c\uff0cbilling\u5904\u7406\u5b8c\u901a\u77e5\u7f51\u5173\u4e0b\u4e00\u6b65 \u8d44\u6e90\u52a0\u8f7dresource\uff1abilling\u6210\u529f\uff0c\u7f51\u5173\u53d1\u9001\u4e00\u4e2aHTTP\u8bf7\u6c42\u5230\u670d\u52a1resource\uff0c\u52a0\u8f7d\u548c\u8d26\u5355\u76f8\u5173\u8d44\u6e90\uff0c\u6bd4\u5982\u9759\u6001\u56fe\u7247\uff0c\u76f8\u5173\u987e\u5ba2\u8d44\u6599\uff0cresource\u5b8c\u6210\u901a\u77e5\u7f51\u5173 \u6700\u540e\u7f51\u5173\u7a0b\u5e8f\u5904\u7406\u5b8c\u5f00\u8d26\u5355\u670d\u52a1\uff0c\u8fd4\u56de\u7ed3\u679c\u7ed9client \u4f8b\u5b50\u4e2d\uff0c \u6211\u4eec\u628a\u5f00\u8d26\u5355\u670d\u52a1\u4e00\u4e2a\u6d41\u7a0b\u6216\u8005\u53eb\u4e00\u4e2a\u4e8b\u52a1\u79f0\u4e3aTrace \u3002\u8fd9\u91cc\u9762\u6709\u51e0\u4e2a\u64cd\u4f5c\uff0c\u5206\u522b\u662f\u8bf7\u6c42\u7f51\u5173\u3001\u8eab\u4efd\u8ba4\u8bc1\u3001\u751f\u6210\u8d26\u5355\u3001\u52a0\u8f7d\u8d44\u6e90\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u64cd\u4f5c\uff08Operation\uff09\u79f0\u4e3a\u4e00\u4e2a Span\u3002 3-2 Trace\u6570\u636e\u6a21\u578b \u6211\u4eec\u770b\u770bTrace\u5e7f\u4e49\u7684\u5b9a\u4e49\uff1a Trace\u662f\u591a\u4e2a Span \u7ec4\u6210\u7684\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\uff0c\u6bcf\u4e00\u4e2a Span \u4ee3\u8868 Trace \u4e2d\u88ab\u547d\u540d\u5e76\u8ba1\u65f6\u7684\u8fde\u7eed\u6027\u7684\u6267\u884c\u7247\u6bb5 \u3002 \u6211\u4eec\u4e00\u822c\u7528\u8fd9\u6837\u6570\u636e\u6a21\u578b\u63cf\u8ff0Trace\u548cSpan\u5173\u7cfb\uff1a [Span user click] \u2190\u2190\u2190(the root Span) | [Span gateway] | +------+----------+-----------------------+ | | | [Span auth] [Span billing] [Span loading resource] \u5f00\u8d26\u5355Trace\u6570\u636e\u6a21\u578b \u6570\u636e\u6a21\u578b\u5305\u542b\u4e86Span\u4e4b\u95f4\u5173\u7cfb\u3002 Span\u5b9a\u4e49\u4e86\u7236\u7ea7Span\uff0c\u5b50Span\u7684\u6982\u5ff5 \u3002\u4e00\u4e2a\u7236\u7ea7\u7684Span\u4f1a\u5e76\u884c\u6216\u8005\u4e32\u884c\u542f\u52a8\u591a\u4e2a\u5b50Span\u3002\u56fe\u4e09\uff0cGateway\u5c31\u662fauth\u3001billing\u7684\u7236\u7ea7Span\u3002 \u4e0a\u9762\u8fd9\u79cd\u56fe\u5bf9\u4e8e\u770b\u6e05\u5404\u7ec4\u4ef6\u7684\u7ec4\u5408\u5173\u7cfb\u662f\u5f88\u6709\u7528\u7684\uff0c\u4f46\u662f\uff0c\u5b83\u4e0d\u80fd\u5f88\u597d\u663e\u793a\u7ec4\u4ef6\u7684\u8c03\u7528\u65f6\u95f4\uff0c\u662f\u4e32\u884c\u8c03\u7528\u8fd8\u662f\u5e76\u884c\u8c03\u7528\u3002\u53e6\u5916\uff0c\u8fd9\u79cd\u56fe\u4e5f\u65e0\u6cd5\u663e\u793a\u670d\u52a1\u8c03\u7528\u7684\u65f6\u95f4\u548c\u5148\u540e\u987a\u5e8f\u3002\u56e0\u6b64\uff0c\u5728\u94fe\u8def\u8ffd\u8e2a\u7cfb\u7edf\u4f1a\u7528\u53e6\u4e00\u79cd\u56fe\u5c55\u73b0\u4e00\u4e2a\u5178\u578b\u7684Trace\u8fc7\u7a0b\uff0c\u5982\u4e0b\u9762\u6240\u793a\uff1a \u8fd9\u79cd\u5c55\u73b0\u65b9\u5f0f\u589e\u52a0\u663e\u793a\u4e86\u6267\u884c\u65f6\u95f4\u7684\u4e0a\u4e0b\u6587\uff0c\u76f8\u5173\u670d\u52a1\u95f4\u7684\u5c42\u6b21\u5173\u7cfb\uff0c\u4efb\u52a1\u7684\u4e32\u884c\u6216\u5e76\u884c\u8c03\u7528\u5173\u7cfb\u3002\u8fd9\u6837\u7684\u89c6\u56fe\u6709\u52a9\u4e8e\u53d1\u73b0\u7cfb\u7edf\u8c03\u7528\u7684\u5173\u952e\u8def\u5f84\u3002\u901a\u8fc7\u5173\u6ce8\u5173\u952e\u8def\u5f84\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u9879\u76ee\u56e2\u961f\u53ef\u80fd\u4e13\u6ce8\u4e8e\u4f18\u5316\u8def\u5f84\u4e2d\u7684\u5173\u952e\u4f4d\u7f6e\uff0c\u6700\u5927\u5e45\u5ea6\u7684\u63d0\u5347\u7cfb\u7edf\u6027\u80fd\u3002\u4f8b\u5982\uff1a\u53ef\u4ee5\u901a\u8fc7\u8ffd\u8e2a\u4e00\u4e2a\u7528\u6237\u8bf7\u6c42\u8bbf\u95ee\u94fe\u8def\uff0c\u89c2\u5bdf\u5e95\u5c42\u7684\u5b50\u7cfb\u7edf\u8c03\u7528\u60c5\u51b5\uff0c\u53d1\u73b0\u54ea\u4e9b\u64cd\u4f5c\u6709\u8017\u65f6\u91cd\u8981\u5173\u6ce8\u4f18\u5316\u3002 3-3 Span\u57fa\u672c\u7ed3\u6784 \u524d\u9762\u63d0\u5230Span\u901a\u4fd7\u6982\u5ff5\uff1a \u4e00\u4e2a\u64cd\u4f5c\uff0c\u5b83\u4ee3\u8868\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u903b\u8f91\u8fd0\u884c\u5355\u5143\u3002Span\u4e4b\u95f4\u901a\u8fc7\u5d4c\u5957\u6216\u8005\u987a\u5e8f\u6392\u5217\u5efa\u7acb\u56e0\u679c\u5173\u7cfb \u3002Span\u5305\u542b\u4ee5\u4e0b\u5bf9\u8c61\uff1a \u64cd\u4f5c\u540d\u79f0Name \uff1a\u8fd9\u4e2a\u540d\u79f0\u7b80\u5355\uff0c\u5e76\u5177\u6709\u53ef\u8bfb\u6027\u9ad8\u3002\u4f8b\u5982\uff1a\u4e00\u4e2aRPC\u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u6216\u8005\u4e00\u4e2a\u5927\u578b\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u7684\u5b50\u4efb\u52a1\u6216\u9636\u6bb5 \u8d77\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4 \uff1a\u64cd\u4f5c\u7684\u751f\u547d\u5468\u671f \u5c5e\u6027Attributes \uff1a\u4e00\u7ec4 \u952e\u503c\u5bf9\u6784\u6210\u7684\u96c6\u5408\u3002\u503c\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u3001\u5e03\u5c14\u6216\u8005\u6570\u5b57\u7c7b\u578b\uff0c\u4e00\u4e9b\u94fe\u8def\u8ffd\u8e2a\u7cfb\u7edf\u4e5f\u79f0\u4e3aTags \u4e8b\u4ef6Event \u4e0a\u4e0b\u6587 SpanContext \uff1aSpan\u4e0a\u4e0b\u6587\u5185\u5bb9 \u94fe\u63a5Links \uff1a\u63cf\u8ff0Span\u8282\u70b9\u5173\u7cfb\u7684\u8fde\u7ebf\uff0c\u5b83\u7684\u63cf\u8ff0\u4fe1\u606f\u4fdd\u5b58\u5728SpanContext\u4e2d \u5c5e\u6027Attributes\uff1a \u6211\u4eec\u5206\u6790\u4e00\u4e2aTrace\uff0c\u901a\u8fc7Span\u91cc\u952e\u503c\u5bf9 <K,V> \u5f62\u5f0f\u7684Attributes\u83b7\u53d6\u57fa\u672c\u4fe1\u606f\u3002\u4e3a\u4e86\u7edf\u4e00\u7ea6\u5b9a\uff0c Span\u63d0\u4f9b\u4e86\u57fa\u7840\u7684Attributes \u3002\u6bd4\u5982\uff0cSpan\u6709\u4e0b\u9762\u5e38\u7528\u7684Attributes\u5c5e\u6027\uff1a \u7f51\u7edc\u8fde\u63a5Attributes\uff1a\u8fd9\u4e9bAttributes\u7528\u5728\u7f51\u7edc\u64cd\u4f5c\u76f8\u5173 \u7ebf\u7a0bAttributes \u8fd9\u4e9bAttributes\u8bb0\u5f55\u4e86\u542f\u52a8\u4e00\u4e2aSpan\u540e\u76f8\u5173\u7ebf\u7a0b\u4fe1\u606f\u3002\u8003\u8651\u5230\u7cfb\u7edf\u53ef\u4ee5\u662f\u4e0d\u540c\u5f00\u53d1\u8bed\u8a00\uff0c\u76f8\u5e94\u8fd8\u4f1a\u8bb0\u5f55\u76f8\u5173\u8bed\u8a00\u5e73\u53f0\u4fe1\u606f\u3002 \u4e0b\u9762\u662f\u4e0d\u540c\u8bed\u8a00\u5f00\u53d1\u7684\u5e73\u53f0\u83b7\u53d6\u7ebf\u7a0bId\u3001Name\u65b9\u6cd5\uff1a \u8bb0\u5f55\u7ebf\u7a0b\u4fe1\u606f\uff0c\u5bf9\u4e8e\u6211\u4eec\u6392\u67e5\u95ee\u9898\u65f6\u5019\u975e\u5e38\u5fc5\u8981\u7684\uff0c\u5f53\u51fa\u73b0\u4e00\u4e2a\u7a0b\u5e8f\u5f02\u5e38\uff0c\u6211\u4eec\u81f3\u5c11\u8981\u77e5\u9053\u5b83\u4ec0\u4e48\u8bed\u8a00\u5f00\u53d1\uff0c\u627e\u5230\u5bf9\u4e8e\u7814\u53d1\u5de5\u7a0b\u5e08\u3002\u7814\u53d1\u5de5\u7a0b\u5e08\u5f80\u5f80\u9700\u8981\u7ebf\u7a0b\u76f8\u5173\u4fe1\u606f\u5feb\u901f\u5b9a\u4f4d\u9519\u8bef\u6808 \u3002 Span\u95f4\u5173\u7cfb\u63cf\u8ff0Links\uff1a \u6211\u4eec\u770b\u770b\u4e4b\u524dSpan\u6570\u636e\u6a21\u578b\uff1a [Span gateway] | +------+------+------------------+ | | | [Span auth] [Span billing] [Span loading resource] \u4e00\u4e2aTrace\u6709\u5411\u65e0\u73af\u56fe\uff0cSpan\u662f\u56fe\u7684\u8282\u70b9\uff0c\u94fe\u63a5\u5c31\u662f\u8282\u70b9\u95f4\u7684\u8fde\u7ebf \u3002\u53ef\u4ee5\u770b\u5230\u4e00\u4e2aSpan\u8282\u70b9\u53ef\u4ee5\u6709\u591a\u4e2aLink\uff0c\u8fd9\u4ee3\u8868\u5b83\u6709\u591a\u4e2a\u5b50Span\u3002 Trace\u5b9a\u4e49\u4e86Span\u95f4\u4e24\u79cd\u57fa\u672c\u5173\u7cfb\uff1a ChildOf\uff1aSpan A\u662fSpan B\u7684\u5b69\u5b50\uff0c\u5373\u201cChildOf\u201d\u5173\u7cfb FollowsFrom\uff1aSpan A\u662fSpan B\u7684\u7236\u7ea7Span Span\u4e0a\u4e0b\u6587\u4fe1\u606fSpanContext\uff1a \u5b57\u9762\u7406\u89e3Span\u4e0a\u4e0b\u6587\u5bf9\u8c61\u3002\u5b83\u4f5c\u7528\u5c31\u662f\u5728\u4e00\u4e2aTrace\u4e2d\uff0c\u628a\u5f53\u524dSpan\u548cTrace\u76f8\u5173\u4fe1\u606f\u4f20\u9012\u5230\u4e0b\u7ea7Span\u3002\u5b83\u7684\u57fa\u672c\u7ed3\u6784\u7c7b\u4f3c <Trace_id, Span_id, sampled> \uff0c\u6bcf\u4e2aSpanContext\u5305\u542b\u4ee5\u4e0b\u57fa\u672c\u5c5e\u6027\uff1a TraceId\uff1a\u968f\u673a16\u5b57\u8282\u6570\u7ec4\u3002\u6bd4\u5982\uff1a4bf92f3577b34da6a3ce929d0e0e4736 SpanId\uff1a\u968f\u673a8\u5b57\u8282\u6570\u7ec4\u3002\u6bd4\u5982\uff1a00f067aa0ba902b7 Baggage Items\u662f\u5b58\u5728\u4e8eTrace\u4e00\u4e2a\u952e\u503c\u5bf9\u96c6\u5408\uff0c\u4e5f\u9700\u8981Span\u95f4\u4f20\u8f93\u3002 3-4 Trace\u94fe\u8def\u4f20\u9012\u521d\u63a2 \u5728\u4e00\u4e2a\u94fe\u8def\u8ffd\u8e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u6709\u591a\u4e2aSpan\u64cd\u4f5c\uff0c\u4e3a\u4e86\u628a\u8c03\u7528\u94fe\u72b6\u6001\u5728Span\u4e2d\u4f20\u9012\u4e0b\u53bb\uff0c\u671f\u671b\u6700\u7ec8\u4fdd\u5b58\u4e0b\u6765\uff0c\u6bd4\u5982\u6253\u5165\u65e5\u5fd7\u3001\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u3002 SpanContext\u4f1a\u5c01\u88c5\u4e00\u4e2a\u952e\u503c\u5bf9\u96c6\u5408\uff0c\u7136\u540e\u5c06\u6570\u636e\u50cf\u884c\u674e\u4e00\u6837\u6253\u5305\uff0c\u8fd9\u4e2a\u6253\u5305\u7684\u884c\u674eOpenTelemetry\u79f0\u4e3aBaggage\uff08\u80cc\u5305\uff09 \u3002 Baggage\u4f1a\u5728\u4e00\u6761\u8ffd\u8e2a\u94fe\u8def\u4e0a\u7684\u6240\u6709Span\u5185\u5168\u5c40\u4f20\u8f93 \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cBaggage\u4f1a\u968f\u7740\u6574\u4e2a\u94fe\u8def\u4e00\u540c\u4f20\u64ad\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Baggage\u5b9e\u73b0\u5f3a\u5927\u7684\u8ffd\u8e2a\u529f\u80fd\u3002 \u65b9\u4fbf\u7406\u89e3\uff0c\u6211\u4eec\u7528\u5f00\u8d26\u5355\u670d\u52a1\u6f14\u793aBaggage\u6548\u679c\uff1a \u9996\u5148\uff0c\u6211\u4eec\u5728LoadBalancer\u8bf7\u6c42\u4e2d\u52a0\u4e00\u4e2aBaggage\uff0cLoadBalancer\u8bf7\u6c42\u4e86source\u670d\u52a1\u3002 @GetMapping(\"/loadBalancer\") @ResponseBody public String loadBalancer(String tag){ Span span = Span.current(); //\u4fdd\u5b58 Baggage Baggage.current() .toBuilder() .put(\"app.username\", \"XYZ\") .build() .makeCurrent(); ...... ##\u8bf7\u6c42 resource httpTemplate.getForEntity(APIUrl+\"/resource\",String.class).getBody(); \u7136\u540e\u6211\u4eec\u4eceresource\u670d\u52a1\u4e2d\u83b7\u53d6Baggage\u4fe1\u606f\uff0c\u5e76\u628a\u5b83\u5b58\u50a8\u5230Span\u7684Attributes\u4e2d\u3002 @GetMapping(\"/resource\") @ResponseBody public String resource(){ String baggage = Baggage.current().getEntryValue(\"app.username\"); Span spanCur = Span.current(); ##\u83b7\u53d6\u5f53\u524d\u7684 Span\uff0c\u628a Baggage \u5199\u7684 resource spanCur.setAttribute(\"app.username\", \"baggage \u4f20\u9012\u8fc7\u6765\u7684 value: \"+baggage); \u6700\u7ec8\uff0c\u6211\u4eec\u4ece\u8ddf\u8e2a\u7cfb\u7edf\u7684\u94fe\u8defUI\u4e2d\u70b9\u51fbsource\u8fd9\u4e2aSpan\uff0c\u627e\u5230\u4f20\u9012\u7684Baggage\u4fe1\u606f\u3002 \u5f53\u7136\uff0cBaggage\u62e5\u6709\u5f3a\u5927\u529f\u80fd\uff0c\u4e5f\u4f1a\u6709\u5f88\u5927\u7684\u6d88\u8017\u3002\u7531\u4e8eBaggage\u7684\u5168\u5c40\u4f20\u8f93\uff0c\u6bcf\u4e2a\u952e\u503c\u90fd\u4f1a\u88ab\u62f7\u8d1d\u5230\u6bcf\u4e00\u4e2a\u672c\u5730\uff08local\uff09\u53ca\u8fdc\u7a0b\u7684\u5b50Span\uff0c\u5982\u679c\u5305\u542b\u7684\u6570\u91cf\u91cf\u592a\u5927\uff0c\u6216\u8005\u5143\u7d20\u592a\u591a\uff0c\u5b83\u5c06\u964d\u4f4e\u7cfb\u7edf\u7684\u541e\u5410\u91cf\u6216\u589e\u52a0RPC\u7684\u5ef6\u8fdf\u3002 3-5 \u94fe\u8def\u6dfb\u52a0\u4e1a\u52a1\u76d1\u63a7 \u6211\u4eec\u8fdb\u884c\u7cfb\u7edf\u94fe\u8def\u8ffd\u8e2a\uff0c\u9664\u4e86Trace\u672c\u8eab\u81ea\u5e26\u4fe1\u606f\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u5e0c\u671b\u6dfb\u52a0\u81ea\u5df1\u5173\u6ce8\u7684\u76d1\u63a7\u3002 Trace\u652f\u6301\u7528\u6253\u6807\u7b7eTags\u65b9\u5f0f\u6765\u5b9e\u73b0 \u3002 Tags\u672c\u8d28\u8fd8\u662fSpan\u7684 Attributes\uff08\u5728OpenTelemetry \u5b9a\u4e49\u4e2d\uff0c\u7edf\u79f0Attributes\u3002\u5728Prometheus\u3001Jaeger\u91cc\u9762\u6cbf\u88adTags\u8001\u7684\u53eb\u6cd5\uff09\u3002 \u6253Tags\u7684\u8fc7\u7a0b\uff0c\u5176\u5b9e\u5c31\u662f\u5728Span\u6dfb\u52a0\u6211\u4eec\u81ea\u5b9a\u4e49\u7684Attributes\u4fe1\u606f\uff0c\u8fd9\u4e9bTags\u5927\u90e8\u5206\u548c\u6211\u4eec\u4e1a\u52a1\u606f\u606f\u76f8\u5173\uff0c\u4e3a\u4e86\u66f4\u65b9\u4fbf\u505a\u4e1a\u52a1\u76d1\u63a7\u3001\u5206\u6790\u4e1a\u52a1\u3002 \u6211\u4eec\u770b\u4e00\u4e2aJava\u6253Tags\u7684\u4f8b\u5b50\uff1a\u9875\u9762\u5b9a\u4e49\u597d\u4e86\u4e00\u4e2aTag\uff0c\u540d\u5b57\u53eb\u201cusername\u201d\u3002\u6211\u4eec\u8f93\u5165Tags\u7684\u503c\uff0c\u7136\u540e\u628aTags\u901a\u8fc7\u4e00\u4e2aHTTP\u8bf7\u6c42\u53d1\u9001\u7ed9\u4ed8\u8d26\u5355\u7684API\u3002 API\u83b7\u53d6Tags\u540e\uff0c\u628a\u5b83\u4fdd\u5b58\u5230\u5f53\u524dSpan\u7684Attribute\u4e2d\u3002\u8fd9\u4e2aSpan\u5bf9\u5e94\u7684\u662f\u4ee3\u7801\u91cc\u9762\u7684\u4e00\u4e2aGateway\u65b9\u6cd5\uff0c\u5982\u679c\u4e0d\u91cd\u540dSpan\u540d\u79f0\uff0c\u9ed8\u8ba4\u4f7f\u7528Gateway\u4f5c\u4e3aSpan\u540d\u79f0 \u3002 @GetMapping(\"/loadBalancer\") public String gateway(String tag){ Span Span = Span.current(); ##\u83b7\u53d6\u5f53\u524d Span\uff0c\u6dfb\u52a0 username \u7684 tag Span.setAttribute(\"username\", tag); ...... } \u6253\u4e86Tags\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8ddf\u8e2a\u7cfb\u7edf\u641c\u7d22Tag\u5173\u952e\u5b57\u3002\u901a\u8fc7Tag\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u5bf9\u5e94\u7684Trace\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u6839\u636eTags\u7684key\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7b5b\u9009\u60f3\u8981\u7684Span\u4fe1\u606f\u3002\u5b9e\u9645\u573a\u666f\u91cc\uff0c\u6211\u4eec\u9762\u4e34\u662f\u4ece\u6210\u5343\u4e0a\u4e07\u94fe\u8def\u4e2d\u5feb\u901f\u5b9a\u4f4d\u8bbf\u95ee\u5f02\u5e38\u7684\u8bf7\u6c42\u3002\u6253Tags\u5bf9\u6211\u4eec\u8bca\u65ad\u7a0b\u5e8f\u975e\u5e38\u6709\u5e2e\u52a9 \u3002 Baggage\u548cSpan Tags\u7684\u533a\u522b\uff1a Baggage\u5728\u5168\u5c40\u8303\u56f4\u5185\uff0c\uff08\u4f34\u968f\u4e1a\u52a1\u7cfb\u7edf\u7684\u8c03\u7528\uff09\u5728\u6240\u6709Span\u95f4\u4f20\u8f93\u6570\u636e\u3002Tags\u4e0d\u4f1a\u8fdb\u884c\u4f20\u8f93\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u4f1a\u88ab\u5b50\u7ea7\u7684 Span \u7ee7\u627f\u3002 Span\u7684Tags\u53ef\u4ee5\u7528\u6765\u8bb0\u5f55\u4e1a\u52a1\u76f8\u5173\u7684\u6570\u636e\uff0c\u5e76\u5b58\u50a8\u4e8e\u8ffd\u8e2a\u7cfb\u7edf\u4e2d \u3002 3-4 \u5168\u94fe\u8def\u517c\u5bb9\u6027\u8003\u8651 \u5728\u4e0d\u540c\u7684\u5e73\u53f0\u3001\u4e0d\u540c\u7684\u5f00\u53d1\u8bed\u8a00\u3001\u4e0d\u540c\u7684\u90e8\u7f72\u73af\u5883(\u5bb9\u5668\u975e\u5bb9\u5668\uff09\u4e0b\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5e95\u5c42\u8ffd\u8e2a\u7cfb\u7edf\u5b9e\u73b0\u517c\u5bb9\u6027\uff0c\u5c06\u76d1\u63a7\u6570\u636e\u8bb0\u5f55\u5230\u4e00\u4e2a\u53ef\u63d2\u62d4\u7684Tracer\u4e0a\u3002\u5728\u7edd\u5927\u90e8\u5206\u901a\u7528\u7684\u5e94\u7528\u573a\u666f\u4e0b \uff0c\u8ffd\u8e2a\u7cfb\u7edf\u8003\u8651\u4f7f\u7528\u67d0\u4e9b\u9ad8\u5ea6\u5171\u8bc6\u7684\u952e\u503c\u5bf9\uff0c\u4ece\u800c\u5bf9\u8bca\u65ad\u5e94\u7528\u7cfb\u7edf\u66f4\u6709\u517c\u5bb9\uff0c\u901a\u7528\u6027 \u3002 \u8fd9\u4e2a\u5171\u8bc6\u79f0\u4e3a\u8bed\u4e49\u7ea6\u5b9aSemantic conventions \u3002 \u4f60\u4f1a\u4ece\u4e0b\u9762\u4e00\u4e9b\u8bed\u4e49\u7ea6\u5b9a\u770b\u51faTrace\u505a\u4e86\u54ea\u4e9b\u517c\u5bb9\u6027\u3002 General\uff1a\u901a\u7528\u7ea6\u5b9a\uff0c\u4e4b\u524d\u63d0\u5230\u7f51\u7edc\u8fde\u63a5Attributes\uff0c\u7ebf\u7a0bAttributes HTTP\uff1a\u9488\u5bf9HTTP\u8bf7\u6c42\u7684\u6570\u636e\u7ea6\u5b9a Database\uff1a\u6570\u636e\u5e93\u6570\u636e\u7ea6\u5b9a\uff0c\u5305\u62ecSQL\u548cNoSQL\u4e0d\u540c\u7c7b\u578b RPC/RMI\uff1a\u6709\u5173\u8fdc\u7a0b\u8c03\u7528\u7684\u7ea6\u5b9a Messaging\uff1a\u6709\u5173\u6d88\u606f\u7cfb\u7edf\u7684Span\u7ea6\u5b9a\uff0c\u4f8b\u5982MQ\u7684\u8ba2\u9605\u3001\u53d1\u5e03\u7b49 Exceptions\uff1a\u9488\u5bf9\u5f02\u5e38\uff0c\u9519\u8bef\u72b6\u6001\u7b49 \u4f8b\u5982\uff0c\u6211\u4eec\u8bbf\u95eeHTTP\u7684\u5e94\u7528\u670d\u52a1\u5668\u3002\u5e94\u7528\u7cfb\u7edf\u5904\u7406\u8bf7\u6c42\u4e2d\u7684URL\u3001IP\u3001HTTP\u52a8\u4f5c\uff08get/post\u7b49\uff09\u3001\u8fd4\u56de\u7801\uff0c\u5bf9\u4e8e\u5e94\u7528\u7cfb\u7edf\u7684\u8bca\u65ad\u662f\u975e\u5e38\u6709\u5e2e\u52a9\u7684\u3002\u76d1\u63a7\u8005\u53ef\u4ee5\u9009\u62e9HTTP\u7ea6\u5b9a\u53c2\u6570\u8bb0\u5f55\u7cfb\u7edf\u72b6\u6001\uff0c\u50cf\u4e0b\u9762Trace\u5c55\u793a\u7684\u7ed3\u679c\u3002 Trace\u9ed8\u8ba4\u7684\u8bed\u4e49\u7ea6\u5b9a 4 \u94fe\u8def\u6570\u636e\u5982\u4f55\u4f20\u64ad \u5728Trace\u4f20\u9012\u4e2d\u6709\u4e00\u4e2a\u6838\u5fc3\u7684\u6982\u5ff5\uff0c\u53ebCarrier\uff08\u642c\u8fd0\u5de5\u5177 \uff09\u3002 \u5b83\u8868\u793a\u201c\u642c\u8fd0\u201dSpan\u4e2dSpanContext\u7684\u5de5\u5177 \u3002 \u6bd4\u65b9\u8bf4Trace\u4e3a\u4e86\u628aSpan\u4fe1\u606f\u4f20\u9012\u4e0b\u53bb\uff0c \u5728HTTP\u8c03\u7528\u573a\u666f\u4e2d\uff0c\u4f1a\u6709HttpCarrier\uff0c\u5728RPC\u7684\u8c03\u7528\u573a\u666f\u4e2d\u4f1a\u6709RpcCarrier\u6765\u642c\u8fd0SpanContext \u3002Trace\u901a\u8fc7Carrier\u53ef\u4ee5\u628a\u94fe\u8def\u8ffd\u8e2a\u72b6\u6001\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u201c\u642c\u8fd0\u201d\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u91cc\u3002 4-1 \u6570\u636e\u4f20\u64ad\u57fa\u672c\u64cd\u4f5c \u4e3a\u4e86\u66f4\u6e05\u6670\u770b\u61c2\u6570\u636e\u4f20\u64ad\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5148\u4e86\u89e3Span\u5728\u4f20\u64ad\u4e2d\u6709\u7684\u57fa\u672c\u64cd\u4f5c\uff1a 1\u3001StartSpan\uff1aTrace\u5728\u5177\u4f53\u64cd\u4f5c\u4e2d\u81ea\u52a8\u751f\u6210\u4e00\u4e2aSpan 2\u3001Inject\u6ce8\u5165\uff1a\u5c06Span\u7684SpanContext\u5199\u5165\u5230Carrier\u7684\u8fc7\u7a0b \u94fe\u8def\u6570\u636e\u4e3a\u4e86\u8fdb\u884c\u7f51\u7edc\u4f20\u8f93\uff0c\u9700\u8981\u6570\u636e\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316 \u3002\u8fd9\u4e2a\u8fc7\u7a0bTrace\u901a\u8fc7\u4e00\u4e2a\u8d1f\u8d23\u6570\u636e\u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316\u4e0a\u4e0b\u6587\u7684Formatter\u63a5\u53e3\u5b9e\u73b0\u7684\u3002 \u4f8b\u5982\u5728HttpCarrier\u4f7f\u7528\u4e2d\u901a\u5e38\u5c31\u4f1a\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684HttpFormatter\u3002\u6240\u4ee5Inject\u6ce8\u5165\u662f\u59d4\u6258\u7ed9Formatter\u5c06SpanContext\u8fdb\u884c\u5e8f\u5217\u5316\u5199\u5165Carrier\u3002 Formatter\u63d0\u4f9b\u4e0d\u540c\u573a\u666f\u5e8f\u5217\u5316\u7684\u6570\u636e\u683c\u5f0f\uff0c\u53eb\u505aFormat\u63cf\u8ff0\u3002\u6bd4\u5982\uff1a Text Map\uff1a\u57fa\u4e8e\u5b57\u7b26\u4e32\u7684Map\u8bb0\u5f55SpanContext\u4fe1\u606f\uff0c\u9002\u7528RPC\u7f51\u7edc\u4f20\u8f93 HTTP Headers\uff1a\u65b9\u4fbf\u89e3\u6790HTTP Headers\u4fe1\u606f\uff0c\u7528\u4e8eHTTP\u4f20\u8f93 \u4e00\u4e2aPython\u7a0b\u5e8f\u5b9e\u73b0Inject\u6ce8\u5165\u8fc7\u7a0b\uff0cFormatter\u5e8f\u5217\u5316SpanContext\u6210Text Map\u683c\u5f0f\u3002 ##Trace \u751f\u6210\u4e00\u4e2aspan tracer = Tracer() span = tracer.start_span(operation_name='test') tracer.inject( span_context=span.context, format=Format.TEXT_MAP, carrier=carrier) 3\u3001Extract\u63d0\u53d6\uff1a\u5c06SpanContext\u4eceCarrier\u4e2dExtract\uff08\u63d0\u53d6\u51fa\u6765\uff09\u3002 span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) \u540c\u7406\uff0c\u4eceCarrier\u63d0\u53d6\u7684\u8fc7\u7a0b\u4e5f\u9700\u8981\u59d4\u6258Formatter\u5c06SpanContext\u53cd\u5e8f\u5217\u5316\u3002 4-1 \u8fd0\u884c\u539f\u7406 \u94fe\u8def\u6570\u636e\u5728HTTP\u4f20\u9012 \u6211\u4eec\u57fa\u4e8eHTTP\u901a\u4fe1\u89e3\u91ca\u4f20\u64ad\u539f\u7406\u3002\u7531\u56fe\u4e00\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5927\u81f4\u5206\u4e3a\u4e24\u6b65\uff1a 1\u3001\u53d1\u9001\u7aef\u5c06 SpanContext \u6ce8\u5165\u5230\u8bf7\u6c42\u4e2d\uff0c\u76f8\u5e94\u4f2a\u4ee3\u7801\u5b9e\u73b0 /** ** \u5c06 SpanContext \u4e2d\u7684 TraceId\uff0cSpanId\uff0cBaggage \u7b49\u6839\u636e format \u53c2\u6570\u6ce8\u5165\u5230\u8bf7\u6c42\u4e2d\uff08Carrier\uff09 ** carrier := opentracing.HTTPHeadersCarrier(httpReq.Header) ** err := Tracer.Inject(Span.Context(), opentracing.HTTPHeaders, carrier) **/ Inject(sm SpanContext, format interface{}, carrier interface{}) error 2\u3001\u63a5\u6536\u7aef\u4ece\u8bf7\u6c42\u4e2d\u89e3\u6790\u51faSpanContext\uff0c\u76f8\u5e94\u4f2a\u4ee3\u7801\u5b9e\u73b0 // Inject() takes the `sm` SpanContext instance and injects it for // propagation within `carrier`. The actual type of `carrier` depends on /** \u6839\u636e format \u53c2\u6570\u4ece\u8bf7\u6c42\uff08Carrier\uff09\u4e2d\u89e3\u6790\u51fa SpanContext\uff08\u5305\u62ec TraceId\u3001SpanId\u3001baggage\uff09\u3002 ** \u4f8b\u5982\uff1a ** carrier := opentracing.HTTPHeadersCarrier(httpReq.Header) ** clientContext, err := Tracer.Extract(opentracing.HTTPHeaders, carrier) **/ Extract(format interface{}, carrier interface{}) (SpanContext, error) Carrier\u8d1f\u8d23\u5c06\u8ffd\u8e2a\u72b6\u6001\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u201cCarry\u201d\uff08\u642c\u8fd0\uff09\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u3002\u5bf9\u4e8e\u4e00\u4e2aCarrier\uff0c\u5982\u679c\u5df2\u7ecf\u88abInjected\uff0c\u90a3\u4e48\u5b83\u4e5f\u53ef\u4ee5\u88abExtracted\uff08\u63d0\u53d6\uff09\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u4e2aSpanContext\u5b9e\u4f8b\u3002\u8fd9\u4e2aSpanContext\u4ee3\u8868\u7740\u88abInjected\u5230Carrier\u7684\u4fe1\u606f\u3002 \u8bf4\u5230\u8fd9\u91cc\uff0c\u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u8fd9\u4e2aCarrier\u5728HTTP\u4e2d\u5177\u4f53\u5728\u54ea\u3002\u5176\u5b9e\u5b83\u5c31\u4fdd\u5b58\u5230HTTP\u7684Headers\u4e2d\u3002\u800c\u4e14\uff0cW3C\u7ec4\u7ec7\u4e3aHTTP\u652f\u6301\u94fe\u8def\u8ffd\u8e2a\u4e13\u95e8\u5728Headers\u4e2d\u5b9a\u4e49\u4e86Trace\u6807\u51c6\uff1a https://www.w3.org/TR/trace-context/#trace-context-http-headers-format W3C\u7ec4\u7ec7\u662f\u5bf9\u7f51\u7edc\u6807\u51c6\u5236\u5b9a\u7684\u4e00\u4e2a\u975e\u76c8\u5229\u7ec4\u7ec7\uff0cW3C\u662f\u4e07\u7ef4\u7f51\u8054\u76df\u7684\u7f29\u5199\uff0c\u50cfHTML\u3001XHTML\u3001CSS\u3001XML\u7684\u6807\u51c6\u5c31\u662f\u7531W3C\u6765\u5b9a\u5236\u3002 4-2 \u8de8\u8fdb\u7a0b\u95f4\u4f20\u64ad\u6570\u636e \u6570\u636e\u4f20\u64ad\u6309\u7167\u573a\u666f\u5206\u4e3a\u4e24\u7c7b\uff1a\u8fdb\u7a0b\u5185\u4f20\u64ad\u3001\u8de8\u8fdb\u7a0b\u95f4\u4f20\u64ad Cross-Process-Tracing \u3002 \u8fdb\u7a0b\u5185\u4f20\u64ad\u662f\u6307Trace\u5728\u4e00\u4e2a\u670d\u52a1\u5185\u90e8\u4f20\u9012\uff0c\u76d1\u63a7\u4e86\u670d\u52a1\u5185\u90e8\u76f8\u4e92\u8c03\u7528\u60c5\u51b5\uff0c\u76f8\u5f53\u6bd4\u8f83\u7b80\u5355\u3002\u8ffd\u8e2a\u7cfb\u7edf\u6700\u56f0\u96be\u7684\u90e8\u5206\u5c31\u662f\u5728\u5206\u5e03\u5f0f\u7684\u5e94\u7528\u73af\u5883\u4e0b\u4fdd\u6301\u8ffd\u8e2a\u7684\u6b63\u5e38\u5de5\u4f5c\u3002\u4efb\u4f55\u4e00\u4e2a\u8ffd\u8e2a\u7cfb\u7edf\uff0c\u90fd\u9700\u8981\u7406\u89e3\u591a\u4e2a\u8de8\u8fdb\u7a0b\u8c03\u7528\u95f4\u7684\u56e0\u679c\u5173\u7cfb\uff0c\u65e0\u8bba\u4ed6\u4eec\u662f\u901a\u8fc7RPC\u6846\u67b6\u3001\u53d1\u5e03-\u8ba2\u9605\u673a\u5236\u3001\u901a\u7528\u6d88\u606f\u961f\u5217\u3001HTTP\u8bf7\u6c42\u8c03\u7528\u3001UDP\u4f20\u8f93\u6216\u8005\u5176\u4ed6\u4f20\u8f93\u6a21\u5f0f\u3002\u6240\u4ee5\u4e1a\u754c\u8c08\u8d77Tracing\u6280\u672f \u5f80\u5f80\u8bf4\u7684\u662f\u8de8\u8fdb\u7a0b\u95f4\u7684\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\uff08Distrubute Tracing\uff09\u3002 \u6211\u4eec\u7528OpenTelemetry\u5b9e\u8df5\u4e00\u4e2aHTTP\u901a\u4fe1\u7684Trace\u4f8b\u5b50\uff1a \u8fd9\u662f\u4e00\u4e2a\u672c\u5730Localhost\u7684Java\u7a0b\u5e8f\uff0c\u6211\u4eec\u5411\u4e0b\u6e38\u670d\u52a1192.168.0.100\u53d1\u8d77\u4e00\u4e2aHTTP\u8bf7\u6c42\u3002 \u7a0b\u5e8f\u4e2d\u4f7f\u7528OpenTelemetry\u7684inject\u6ce8\u5165\uff0c\u901a\u8fc7HTTP Headers\u628aLocalhost\u7684Trace\u4f20\u9012\u7ed9192.168.0.100\u7684\u4e0b\u6e38\u670d\u52a1 \u3002\u4f20\u64ad\u524d\uff0c\u624b\u52a8\u8fd8\u521b\u5efa\u4e24\u4e2a\u60f3\u8981\u4e00\u5757\u4f20\u64ad\u7684Attributes\u3002 @GetMapping(\"/contextR\") @ResponseBody public String contextR() { TextMapSetter<HttpURLConnection> setter = new TextMapSetter<HttpURLConnection>() { @Override public void set(HttpURLConnection carrier, String key, String value) { // \u6211\u4eec\u628a\u4e0a\u4e0b\u6587\u653e\u5230 HTTP \u7684 Header carrier.setRequestProperty(key, value); } }; Span spanCur = Span.current(); Span outGoing = tracer.spanBuilder(\"/resource\").setSpanKind(SpanKind.CLIENT).startSpan(); try { URL url = new URL(\"http://192.168.0.100:8080/resource\"); HttpURLConnection transportLayer = (HttpURLConnection) url.openConnection(); outGoing.setAttribute(\"http.method\", \"GET\"); outGoing.setAttribute(\"http.url\", url.toString()); // \u5c06\u5f53\u524d Span \u7684\u4e0a\u4e0b\u6587\u6ce8\u5165\u5230\u8fd9\u4e2a HTTP \u8bf7\u6c42\u4e2d OpenTelemetry.getPropagators().getTextMapPropagator().inject(Context.current(), transportLayer, setter); // Make outgoing call ... \u8fd0\u884c\u7a0b\u5e8f\uff0c\u4ece\u76d1\u63a7\u5e73\u53f0\u6211\u4eec\u770b\u5230\uff0cTrace\u4ece\u672c\u5730\u7684\u7a0b\u5e8f\u6210\u529f\u4f20\u9012\u5230\u4e86192.168.0.100\u3002 5 \u624b\u52a8\u63a7\u5236Trace\uff1a\u81ea\u52a8\u6784\u5efa \u4e0a\u9762\u6211\u4eec\u63d0\u5230Trace\uff0c\u90fd\u662f\u94fe\u8def\u8ffd\u8e2a\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210\u7684\u3002\u867d\u7136\u8fd9\u5f88\u901a\u7528\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u6709\u4e9b\u65f6\u5019\u8fd8\u60f3\u67e5\u770b\u66f4\u591a\u7684\u8ddf\u8e2a\u7ec6\u8282\u548c\u6dfb\u52a0\u4e1a\u52a1\u76d1\u63a7\u3002 \u94fe\u8def\u8ffd\u8e2a\u6280\u672f\u652f\u6301\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u624b\u5de5\u65b9\u5f0f\u5728\u8ddf\u8e2a\u7684\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u4fe1\u606f\uff0c\u751a\u81f3\u624b\u52a8\u542f\u52a8Span \uff0c\u4ee5\u671f\u5f85\u76d1\u63a7\u66f4\u9ad8\u7ea7\u522b\u7684\u7cfb\u7edf\u884c\u4e3a\uff0c\u6216\u5e2e\u52a9\u8c03\u8bd5\u95ee\u9898\u3002 OpenTelemetry\u652f\u6301\u4ee5SDK\u548cAPI\u65b9\u5f0f\u624b\u52a8\u6784\u5efaTrace\u3002API\u3001SDK\u90fd\u53ef\u4ee5\u505a\u4e00\u4e9b\u57fa\u672cTrace\u64cd\u4f5c\uff0c\u53ef\u4ee5\u7406\u89e3API\u662fMin\u5b9e\u73b0\uff0cSDK\u662fAPI\u7684\u8d85\u96c6\u3002 \u751f\u4ea7\u73af\u5883\u6839\u636e\u5b9e\u9645\u573a\u666f\u9009\u62e9\u7528\u54ea\u4e00\u4e2a\u3002 5-1 \u521b\u5efaSpan \u8981\u521b\u5efaSpan\uff0c\u53ea\u9700\u6307\u5b9aSpan\u7684\u540d\u79f0\u3002\u624b\u52a8\u521b\u5efaSpan\u9700\u8981\u663e\u5f0f\u7ed3\u675f\u64cd\u4f5c\uff0c\u5b83\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\u7531\u94fe\u8def\u8ffd\u8e2a\u7cfb\u7edf\u81ea\u52a8\u8ba1\u7b97\u3002Java\u4ee3\u7801\u5b9e\u4f8b\uff1a Span Span = Tracer.SpanBuilder(\"\u624b\u5de5\u521b\u5efa SpanOne\").startSpan(); try{ ...... } finally { Span.end(); //\u624b\u52a8\u521b\u5efa Span\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u7ed3\u675f Span } \u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u83b7\u53d6\u4e00\u4e2aSpan\u3002 Span Span = Span.current() 5-2 \u521b\u5efa\u5e26\u94fe\u63a5Span \u4e00\u4e2aSpan\u53ef\u4ee5\u8fde\u63a5\u4e00\u4e2a\u6216\u591a\u4e2a\u56e0\u679c\u76f8\u5173\u7684\u5176\u4ed6Span\u3002\u5b9e\u4f8b\u4e2d\u6211\u4eec\u521b\u5efa\u4e00\u4e2aSpan \u3002 \u53eb\u505a\u201c\u624b\u5de5\u521b\u5efaSpanOne\u201d\uff0c\u7136\u540e\u5206\u522b\u521b\u5efa\u4e86\u4e09\u4e2aSpan\uff0c\u901a\u8fc7link\u628a\u5b83\u4eec\u5173\u8054\u6210\u5b69\u5b50Span\u3002\u6700\u540e\u53c8\u521b\u5efa\u4e86\u4e00\u4e2aSpan \u201cchildThree-Child\u201d\uff0c\u628a\u5b83\u4f5c\u4e3a\u201cchildThree\u201d\u7684\u5b69\u5b50Span \u5173\u8054 @GetMapping(\"/createSpanAndLink\") public String createSpanAndLink() { String SpanName = \"\u624b\u5de5\u521b\u5efa SpanOne\"; //\u521b\u5efa\u4e00\u4e2a Span\uff0c\u7136\u540e\u521b\u5efa\u4e09\u4e2a child Span\uff0c\u6700\u540e\u5173\u8054 Span Span SpanOne = Tracer.SpanBuilder(SpanName) .startSpan(); Span childSpan = Tracer.SpanBuilder(\"childOne\") .addLink(SpanOne.getSpanContext()).startSpan(); Span childSpan2 = Tracer.SpanBuilder(\"childTwo\") .addLink(SpanOne.getSpanContext()).startSpan(); Span childSpan3 = Tracer.SpanBuilder(\"childThree\") .addLink(SpanOne.getSpanContext()).startSpan(); //\u521b\u5efa\u4e00\u4e2a Span\uff0c\u5173\u8054 childSpan3,\u4f5c\u4e3a\u5b83\u7684 childSpan Span childSpan3Child = Tracer.SpanBuilder(\"childThree-Child\") .addLink(childSpan3.getSpanContext()).startSpan(); } \u6211\u4eec\u770b\u770b\u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u6536\u96c6\u7684Trace\u7684\u6548\u679c\uff1aLink\u5c06\u5404\u4e2aSpan\u8fde\u63a5\u8d77\u6765\u3002 5-3 \u521b\u5efa\u5e26\u4e8b\u4ef6\u7684Span Span\u53ef\u4ee5\u643a\u5e26\u96f6\u4e2a\u6216\u591a\u4e2aSpan\u5c5e\u6027\u7684\u547d\u540d\u4e8b\u4ef6\u8fdb\u884c\u6ce8\u91ca\uff0c\u6bcf\u4e00\u4e2a\u4e8b\u4ef6\u90fd\u662f\u4e00\u4e2a key:value\u952e\u503c\u5bf9\uff0c\u5e76\u81ea\u52a8\u643a\u5e26\u76f8\u5e94\u7684\u65f6\u95f4\u6233\u3002\u65f6\u95f4\u6233\u8868\u793a\u4e8b\u4ef6\u7684\u6301\u7eed\u65f6\u95f4\u3002 @GetMapping(\"/event\") public String event(){ Span span = Span.current(); span.updateName(\"\u521b\u5efa eventDemo\"); //\u624b\u52a8\u66f4\u65b0 Event \u6301\u7eed\u65f6\u95f4 span.addEvent(\"timeEvent\",System.currentTimeMillis()+2000, TimeUnit.MILLISECONDS); //\u7ed9 Event \u6dfb\u52a0\u76f8\u5173\u4fe1\u606f Attributes appInfo = Attributes.of(AttributeKey .stringKey(\"app.id\"), \"123456\", AttributeKey.stringKey(\"app.name\"), \"\u5e94\u7528\u7a0b\u5e8f demo\"); span.addEvent(\"auth.appinfo\", appInfo); logger.info(\"this is a event\"); } \u5728\u4e0a\u9762\u7a0b\u5e8f\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ed9\u4e8b\u4ef6\u624b\u52a8\u6dfb\u52a0\u65f6\u95f4\u6233\uff0c\u8fd9\u5728\u590d\u6742\u7cfb\u7edf\u73af\u5883\u4e0b\u8fd8\u539f\u771f\u5b9e\u6301\u7eed\u4e8b\u4ef6\u5f88\u6709\u610f\u4e49\u7684\u3002\u770b\u770b\u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u8ffd\u8e2a\u5e73\u53f0\u4e0bSpan\u751f\u6210\u7684\u7684\u6548\u679c\uff1a 6 \u6570\u636e\u5982\u4f55\u4e0a\u62a5 \u6709\u4e86\u7a0b\u5e8f\u7684Trace\u6570\u636e\uff0c\u5305\u542bTraceId\u3001Span\u3001Spancontext\u4e00\u7cfb\u5217\u6570\u636e\u3002\u63a5\u4e0b\u6765\u9700\u8981\u4e0a\u62a5\u5230\u76d1\u63a7\u7cfb\u7edf\uff0c\u901a\u8fc7\u89c6\u56fe\u65b9\u5f0f\u5c55\u793a\u51faTrace\u6574\u4e2a\u5168\u8c8c\u3002 \u6211\u4eec\u4e60\u60ef\u628aTrace\u6570\u636e\u4e0a\u62a5\u5230\u76d1\u63a7\u8fc7\u7a0b\u79f0\u4e3a\u6570\u636e\u6536\u96c6\uff08Data Collection\uff09 \u3002\u770b\u770b\u6570\u636e\u6536\u96c6\u57fa\u672c\u539f\u7406\uff1a \u4ece\u56fe\u4e2d\uff0c\u770b\u5230\u94fe\u8def\u6536\u96c6\u8fc7\u7a0b\u4e2d\uff0c\u6570\u636e\u4e0a\u62a5\u6838\u5fc3\u7684\u51e0\u4e2a\u7ec4\u4ef6\uff1a Collector\uff1a\u6570\u636e\u6536\u96c6\u7684\u5904\u7406\u5668\uff0c\u5b83\u540c\u65f6\u89e3\u6790\u3001\u52a0\u5de5\u76d1\u63a7\u6570\u636e\uff0c\u76ee\u7684\u662f\u7ed9\u76d1\u63a7\u5c55\u793a\u5e73\u53f0\u66f4\u76f4\u89c2\u7684\u89c6\u56fe\uff0c\u4fbf\u6377\u7684\u67e5\u8be2\u3002 Exporters\uff1a\u91c7\u96c6\u5668\uff0c\u4ece\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u83b7\u5f97Trace\u6570\u636e\uff0c\u76ee\u524d\u4e3b\u6d41\u8ddf\u8e2a\u7cfb\u7edf\u51e0\u4e4e\u53ef\u4ee5\u652f\u6301\u4efb\u4f55\u8bed\u8a00\u5e73\u53f0\u4e0b\u5f00\u53d1\u7a0b\u5e8f\uff0c\u5e76\u4e14\u517c\u5bb9\u4e3b\u6d41\u64cd\u4f5c\u7cfb\u7edf\u548c\u5bb9\u5668\u3002\u4e3a\u4e86\u652f\u6301Trace\u6807\u51c6\u5316\u5230\u8fd9\u79cd\u7a0b\u5e8f\uff0c\u5de5\u7a0b\u5e08\u53ef\u8c13\u5455\u5fc3\u6ca5\u8840\uff0c\u4e2d\u95f4\u8fc7\u7a0b\u6781\u4e0d\u5bb9\u6613\u3002 Data Collection\u5728\u6570\u636e\u91c7\u96c6\u65f6\u5019\uff0cCollector\u548cExporters\u6709\u4e24\u79cd\u5b9e\u73b0\uff1aAgent\u548cGateway\u3002\u9650\u4e8e\u7bc7\u5e45\uff0c\u6211\u4eec\u5728\u540e\u9762\u6587\u7ae0\u8be6\u7ec6\u7ed9\u5927\u5bb6\u8bb2\u89e3\u3002 7 \u603b\u7ed3 \u4eca\u5929\u8bb2\u89e3\u4e86\u94fe\u8def\u8ffd\u8e2a\u7684\u6570\u636e\u4f20\u64ad\u3001\u6570\u636e\u4e0a\u62a5\u7684\u539f\u7406\u3002\u5982\u679c\u4f60\u60f3\u52a8\u624b\u5b9e\u8df5\u6587\u7ae0\u4e2d\u7684\u4ee3\u7801, GitHub\u5f00\u653e\u4e86\u5730\u5740\uff1ahttps://github.com/laziobird/opentelemetry-jaeger APM\u4e3a\u6211\u4eec\u7ebf\u4e0a\u5e94\u7528\u7a0b\u5e8f\u5728\u6545\u969c\u5b9a\u4f4d\u3001\u6027\u80fd\u8c03\u4f18\u8d77\u5230\u5de8\u5927\u4f5c\u7528\u3002\u540c\u65f6\uff0c\u6211\u8fd8\u4f1a\u57fa\u4e8eAPM\u8c08\u8c08\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u6bd4\u5982\u5bb9\u5668\uff08Kubernetes\uff09\u3001\u670d\u52a1\u7f51\u683c\uff08Istio\uff09\u73af\u5883\u4e0b\uff0cTrace\u6570\u636e\u91c7\u96c6\u5177\u4f53\u5b9e\u73b0\u548c\u5982\u4f55\u505a\u76d1\u63a7\u3002","title":"\u7b2c\u4e09\u8282 \u600e\u4e48\u7406\u89e3\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u6280\u672f\uff1f"},{"location":"chap_apm/3apm_tracing/#3","text":"","title":"3 \u600e\u4e48\u7406\u89e3\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u6280\u672f\uff1f"},{"location":"chap_apm/3apm_tracing/#1","text":"\u5728\u5b66\u4e60\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u7406\u89e3\u8fd9\u9879\u6280\u672f\u4ea7\u751f\u7684\u80cc\u666f\uff0c\u4ee5\u53ca\u5b83\u80fd\u591f\u5e2e\u6211\u4eec\u89e3\u51b3\u54ea\u4e9b\u68d8\u624b\u95ee\u9898\u3002 \u63d0\u5230\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\uff0c\u6211\u4eec\u8981\u5148\u63d0\u5230\u5fae\u670d\u52a1\u3002\u76f8\u4fe1\u5f88\u591a\u4eba\u90fd\u63a5\u89e6\u8fc7\u5fae\u670d\u52a1\uff0c\u8fd9\u91cc\u518d\u56de\u987e\u4e00\u4e0b\u57fa\u672c\u6982\u5ff5\u3002 \u5fae\u670d\u52a1\u662f\u4e00\u79cd\u5f00\u53d1\u8f6f\u4ef6\u7684\u67b6\u6784\u548c\u7ec4\u7ec7\u65b9\u6cd5\uff0c \u5b83\u4fa7\u91cd\u5c06\u670d\u52a1\u89e3\u8026\uff0c\u670d\u52a1\u4e4b\u95f4\u901a\u8fc7API\u901a\u4fe1 \u3002\u4f7f\u5e94\u7528\u7a0b\u5e8f\u66f4\u6613\u4e8e\u6269\u5c55\u548c\u66f4\u5feb\u5730\u5f00\u53d1\uff0c\u4ece\u800c\u52a0\u901f\u65b0\u529f\u80fd\u4e0a\u7ebf\u3002 \u5fae\u670d\u52a1\u6f14\u53d8-\u4e9a\u9a6c\u900a\u4e91 \u52a0\u901f\u7814\u53d1\u5feb\u901f\u8fed\u4ee3\uff0c\u8ba9\u5fae\u670d\u52a1\u5728\u4e1a\u52a1\u9a71\u52a8\u7684\u4e92\u8054\u7f51\u9886\u57df\u5168\u9762\u666e\u53ca\uff0c\u72ec\u9886\u98ce\u9a9a\u3002\u4f46\u662f\uff0c\u968f\u4e4b\u800c\u6765\u4e5f\u4ea7\u751f\u4e86\u65b0\u95ee\u9898\uff1a \u5f53\u751f\u4ea7\u7cfb\u7edf\u9762\u5bf9\u9ad8\u5e76\u53d1\uff0c\u6216\u8005\u89e3\u8026\u6210\u5927\u91cf\u5fae\u670d\u52a1\u65f6\uff0c\u4ee5\u524d\u5f88\u5bb9\u6613\u5c31\u80fd\u5b9e\u73b0\u7684\u76d1\u63a7\u3001\u9884\u8b66\u3001\u5b9a\u4f4d\u6545\u969c\u5c31\u53d8\u56f0\u96be\u4e86 \u3002","title":"1 \u4e3a\u4ec0\u4e48\u9700\u8981\u94fe\u8def\u8ffd\u8e2a"},{"location":"chap_apm/3apm_tracing/#2","text":"\u521a\u624d\u8bf4\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8feb\u5207\u9700\u8981\u4e00\u4e9b\u65b0\u5de5\u5177\uff0c\u5e2e\u6211\u4eec\u7406\u89e3\u5fae\u670d\u52a1\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u884c\u4e3a\u3001\u7cbe\u51c6\u5206\u6790\u6027\u80fd\u95ee\u9898\u3002\u4e8e\u662f\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0b\u94fe\u8def\u8ffd\u8e2a\u6280\u672f\uff08Distributed Tracing\uff09\u51fa\u73b0\u4e86\u3002 \u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a \u5728\u7528\u6237\u4e00\u6b21\u8bf7\u6c42\u670d\u52a1\u7684\u8c03\u2f64\u8fc7\u7a0b\u4e2d\uff0c\u65e0\u8bba\u8bf7\u6c42\u88ab\u5206\u53d1\u5230\u591a\u5c11\u4e2a\u5b50\u7cfb\u7edf\u4e2d\uff0c\u5b50\u7cfb\u7edf\u53c8\u8c03\u7528\u4e86\u66f4\u591a\u7684\u5b50\u7cfb\u7edf\uff0c\u6211\u4eec\u628a\u7cfb\u7edf\u4fe1\u606f\u548c\u7cfb\u7edf\u95f4\u8c03\u7528\u5173\u7cfb\u90fd\u8ffd\u8e2a\u8bb0\u5f55\u4e0b\u6765\u3002\u6700\u7ec8\u628a\u6570\u636e\u96c6\u4e2d\u8d77\u6765\u53ef\u89c6\u5316\u5c55\u793a\u3002\u5b83\u4f1a\u5f62\u6210\u4e00\u4e2a\u6709\u5411\u56fe\u7684\u94fe\u8def\uff0c\u770b\u8d77\u6765\u50cf\u4e0b\u9762\u8fd9\u6837 \u3002 \u7535\u5546\u7cfb\u7edf\u7684\u94fe\u8def\u8ffd\u8e2a\u56fe \u540e\u6765\uff0c\u94fe\u8def\u8ffd\u8e2a\u6280\u672f\u76f8\u5173\u7cfb\u7edf\u6162\u6162\u6210\u719f\uff0c \u6d8c\u73b0\u4e86\u50cfDapper\u3001Zipkin\u3001HTrace\u3001OpenTelemetry\u7b49\u4f18\u79c0\u5f00\u6e90\u7cfb\u7edf \u3002\u4ed6\u4eec\u4e5f\u88ab\u4e1a\u754c\uff0c\u7279\u522b\u662f\u4e92\u8054\u7f51\u666e\u904d\u91c7\u7528\u3002 \u76ee\u524dDapper\uff08\u8bde\u751f\u4e8eGoogle\u56e2\u961f\uff09\u5e94\u7528\u5f71\u54cd\u6700\u5927\uff0cOpenTelemetry\u5df2\u7ecf\u6210\u4e3a\u6700\u65b0\u4e1a\u754c\u6807\u51c6\uff0c\u6211\u4eec\u91cd\u70b9\u57fa\u4e8eOpenTelemetry\u8bb2\u89e3\u4e00\u4e0bTrace\u5185\u90e8\u7ed3\u6784","title":"2 \u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a"},{"location":"chap_apm/3apm_tracing/#3-trace","text":"","title":"3 \u94fe\u8defTrace\u7684\u6838\u5fc3\u7ed3\u6784"},{"location":"chap_apm/3apm_tracing/#3-1","text":"\u6211\u4eec\u770b\u770b\u4e00\u4e2a\u4f8b\u5b50\uff0c\u67d0\u5546\u5bb6\u7ed9\uff08\u987e\u5ba2\uff09\u5f00\u8d26\u5355\uff08\u8981\u6c42\u4ed8\u6b3e\uff09\uff0c\u5728\u7cfb\u7edf\u4e2d\u5927\u4f53\u7684\u6d41\u7a0b\uff1a \u5f53\u5546\u5bb6\u4ececlient\u53d1\u8d77\u5f00\u8d26\u5355\u670d\u52a1\uff0c\u8bf7\u6c42\u4ececlient\u7a0b\u5e8f\u5148\u540e\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u64cd\u4f5c\uff1a \u7f51\u5173load balancer\uff1aclient\u7684https\u8bf7\u6c42\u5148\u7ecf\u8fc7\u7f51\u5173\uff0c\u7f51\u5173\u8c03\u7528\u4e0b\u9762\u7684\u5b50\u7cfb\u7edf \u8eab\u4efd\u8ba4\u8bc1auth\uff1a\u7f51\u5173RPC\u8bf7\u6c42\u5230\u670d\u52a1auth\uff0cauth\u53d1\u8d77\u8eab\u4efd\u8ba4\u8bc1\uff0c\u5b8c\u6210\u540e\u901a\u77e5\u7f51\u5173\u7a0b\u5e8f \u751f\u6210\u8d26\u5355billing\uff1a\u8eab\u4efd\u8ba4\u8bc1\u6210\u529f\u540e\uff0c\u7f51\u5173\u518d\u53d1\u9001RPC\u8bf7\u6c42\u5230\u670d\u52a1billing\uff0cbilling\u662f\u751f\u6210\u8d26\u5355\u7684\u64cd\u4f5c\uff0cbilling\u5904\u7406\u5b8c\u901a\u77e5\u7f51\u5173\u4e0b\u4e00\u6b65 \u8d44\u6e90\u52a0\u8f7dresource\uff1abilling\u6210\u529f\uff0c\u7f51\u5173\u53d1\u9001\u4e00\u4e2aHTTP\u8bf7\u6c42\u5230\u670d\u52a1resource\uff0c\u52a0\u8f7d\u548c\u8d26\u5355\u76f8\u5173\u8d44\u6e90\uff0c\u6bd4\u5982\u9759\u6001\u56fe\u7247\uff0c\u76f8\u5173\u987e\u5ba2\u8d44\u6599\uff0cresource\u5b8c\u6210\u901a\u77e5\u7f51\u5173 \u6700\u540e\u7f51\u5173\u7a0b\u5e8f\u5904\u7406\u5b8c\u5f00\u8d26\u5355\u670d\u52a1\uff0c\u8fd4\u56de\u7ed3\u679c\u7ed9client \u4f8b\u5b50\u4e2d\uff0c \u6211\u4eec\u628a\u5f00\u8d26\u5355\u670d\u52a1\u4e00\u4e2a\u6d41\u7a0b\u6216\u8005\u53eb\u4e00\u4e2a\u4e8b\u52a1\u79f0\u4e3aTrace \u3002\u8fd9\u91cc\u9762\u6709\u51e0\u4e2a\u64cd\u4f5c\uff0c\u5206\u522b\u662f\u8bf7\u6c42\u7f51\u5173\u3001\u8eab\u4efd\u8ba4\u8bc1\u3001\u751f\u6210\u8d26\u5355\u3001\u52a0\u8f7d\u8d44\u6e90\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u64cd\u4f5c\uff08Operation\uff09\u79f0\u4e3a\u4e00\u4e2a Span\u3002","title":"3-1 \u5feb\u901f\u5165\u95e8"},{"location":"chap_apm/3apm_tracing/#3-2-trace","text":"\u6211\u4eec\u770b\u770bTrace\u5e7f\u4e49\u7684\u5b9a\u4e49\uff1a Trace\u662f\u591a\u4e2a Span \u7ec4\u6210\u7684\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\uff0c\u6bcf\u4e00\u4e2a Span \u4ee3\u8868 Trace \u4e2d\u88ab\u547d\u540d\u5e76\u8ba1\u65f6\u7684\u8fde\u7eed\u6027\u7684\u6267\u884c\u7247\u6bb5 \u3002 \u6211\u4eec\u4e00\u822c\u7528\u8fd9\u6837\u6570\u636e\u6a21\u578b\u63cf\u8ff0Trace\u548cSpan\u5173\u7cfb\uff1a [Span user click] \u2190\u2190\u2190(the root Span) | [Span gateway] | +------+----------+-----------------------+ | | | [Span auth] [Span billing] [Span loading resource] \u5f00\u8d26\u5355Trace\u6570\u636e\u6a21\u578b \u6570\u636e\u6a21\u578b\u5305\u542b\u4e86Span\u4e4b\u95f4\u5173\u7cfb\u3002 Span\u5b9a\u4e49\u4e86\u7236\u7ea7Span\uff0c\u5b50Span\u7684\u6982\u5ff5 \u3002\u4e00\u4e2a\u7236\u7ea7\u7684Span\u4f1a\u5e76\u884c\u6216\u8005\u4e32\u884c\u542f\u52a8\u591a\u4e2a\u5b50Span\u3002\u56fe\u4e09\uff0cGateway\u5c31\u662fauth\u3001billing\u7684\u7236\u7ea7Span\u3002 \u4e0a\u9762\u8fd9\u79cd\u56fe\u5bf9\u4e8e\u770b\u6e05\u5404\u7ec4\u4ef6\u7684\u7ec4\u5408\u5173\u7cfb\u662f\u5f88\u6709\u7528\u7684\uff0c\u4f46\u662f\uff0c\u5b83\u4e0d\u80fd\u5f88\u597d\u663e\u793a\u7ec4\u4ef6\u7684\u8c03\u7528\u65f6\u95f4\uff0c\u662f\u4e32\u884c\u8c03\u7528\u8fd8\u662f\u5e76\u884c\u8c03\u7528\u3002\u53e6\u5916\uff0c\u8fd9\u79cd\u56fe\u4e5f\u65e0\u6cd5\u663e\u793a\u670d\u52a1\u8c03\u7528\u7684\u65f6\u95f4\u548c\u5148\u540e\u987a\u5e8f\u3002\u56e0\u6b64\uff0c\u5728\u94fe\u8def\u8ffd\u8e2a\u7cfb\u7edf\u4f1a\u7528\u53e6\u4e00\u79cd\u56fe\u5c55\u73b0\u4e00\u4e2a\u5178\u578b\u7684Trace\u8fc7\u7a0b\uff0c\u5982\u4e0b\u9762\u6240\u793a\uff1a \u8fd9\u79cd\u5c55\u73b0\u65b9\u5f0f\u589e\u52a0\u663e\u793a\u4e86\u6267\u884c\u65f6\u95f4\u7684\u4e0a\u4e0b\u6587\uff0c\u76f8\u5173\u670d\u52a1\u95f4\u7684\u5c42\u6b21\u5173\u7cfb\uff0c\u4efb\u52a1\u7684\u4e32\u884c\u6216\u5e76\u884c\u8c03\u7528\u5173\u7cfb\u3002\u8fd9\u6837\u7684\u89c6\u56fe\u6709\u52a9\u4e8e\u53d1\u73b0\u7cfb\u7edf\u8c03\u7528\u7684\u5173\u952e\u8def\u5f84\u3002\u901a\u8fc7\u5173\u6ce8\u5173\u952e\u8def\u5f84\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u9879\u76ee\u56e2\u961f\u53ef\u80fd\u4e13\u6ce8\u4e8e\u4f18\u5316\u8def\u5f84\u4e2d\u7684\u5173\u952e\u4f4d\u7f6e\uff0c\u6700\u5927\u5e45\u5ea6\u7684\u63d0\u5347\u7cfb\u7edf\u6027\u80fd\u3002\u4f8b\u5982\uff1a\u53ef\u4ee5\u901a\u8fc7\u8ffd\u8e2a\u4e00\u4e2a\u7528\u6237\u8bf7\u6c42\u8bbf\u95ee\u94fe\u8def\uff0c\u89c2\u5bdf\u5e95\u5c42\u7684\u5b50\u7cfb\u7edf\u8c03\u7528\u60c5\u51b5\uff0c\u53d1\u73b0\u54ea\u4e9b\u64cd\u4f5c\u6709\u8017\u65f6\u91cd\u8981\u5173\u6ce8\u4f18\u5316\u3002","title":"3-2 Trace\u6570\u636e\u6a21\u578b"},{"location":"chap_apm/3apm_tracing/#3-3-span","text":"\u524d\u9762\u63d0\u5230Span\u901a\u4fd7\u6982\u5ff5\uff1a \u4e00\u4e2a\u64cd\u4f5c\uff0c\u5b83\u4ee3\u8868\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u903b\u8f91\u8fd0\u884c\u5355\u5143\u3002Span\u4e4b\u95f4\u901a\u8fc7\u5d4c\u5957\u6216\u8005\u987a\u5e8f\u6392\u5217\u5efa\u7acb\u56e0\u679c\u5173\u7cfb \u3002Span\u5305\u542b\u4ee5\u4e0b\u5bf9\u8c61\uff1a \u64cd\u4f5c\u540d\u79f0Name \uff1a\u8fd9\u4e2a\u540d\u79f0\u7b80\u5355\uff0c\u5e76\u5177\u6709\u53ef\u8bfb\u6027\u9ad8\u3002\u4f8b\u5982\uff1a\u4e00\u4e2aRPC\u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u6216\u8005\u4e00\u4e2a\u5927\u578b\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u7684\u5b50\u4efb\u52a1\u6216\u9636\u6bb5 \u8d77\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4 \uff1a\u64cd\u4f5c\u7684\u751f\u547d\u5468\u671f \u5c5e\u6027Attributes \uff1a\u4e00\u7ec4 \u952e\u503c\u5bf9\u6784\u6210\u7684\u96c6\u5408\u3002\u503c\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u3001\u5e03\u5c14\u6216\u8005\u6570\u5b57\u7c7b\u578b\uff0c\u4e00\u4e9b\u94fe\u8def\u8ffd\u8e2a\u7cfb\u7edf\u4e5f\u79f0\u4e3aTags \u4e8b\u4ef6Event \u4e0a\u4e0b\u6587 SpanContext \uff1aSpan\u4e0a\u4e0b\u6587\u5185\u5bb9 \u94fe\u63a5Links \uff1a\u63cf\u8ff0Span\u8282\u70b9\u5173\u7cfb\u7684\u8fde\u7ebf\uff0c\u5b83\u7684\u63cf\u8ff0\u4fe1\u606f\u4fdd\u5b58\u5728SpanContext\u4e2d \u5c5e\u6027Attributes\uff1a \u6211\u4eec\u5206\u6790\u4e00\u4e2aTrace\uff0c\u901a\u8fc7Span\u91cc\u952e\u503c\u5bf9 <K,V> \u5f62\u5f0f\u7684Attributes\u83b7\u53d6\u57fa\u672c\u4fe1\u606f\u3002\u4e3a\u4e86\u7edf\u4e00\u7ea6\u5b9a\uff0c Span\u63d0\u4f9b\u4e86\u57fa\u7840\u7684Attributes \u3002\u6bd4\u5982\uff0cSpan\u6709\u4e0b\u9762\u5e38\u7528\u7684Attributes\u5c5e\u6027\uff1a \u7f51\u7edc\u8fde\u63a5Attributes\uff1a\u8fd9\u4e9bAttributes\u7528\u5728\u7f51\u7edc\u64cd\u4f5c\u76f8\u5173 \u7ebf\u7a0bAttributes \u8fd9\u4e9bAttributes\u8bb0\u5f55\u4e86\u542f\u52a8\u4e00\u4e2aSpan\u540e\u76f8\u5173\u7ebf\u7a0b\u4fe1\u606f\u3002\u8003\u8651\u5230\u7cfb\u7edf\u53ef\u4ee5\u662f\u4e0d\u540c\u5f00\u53d1\u8bed\u8a00\uff0c\u76f8\u5e94\u8fd8\u4f1a\u8bb0\u5f55\u76f8\u5173\u8bed\u8a00\u5e73\u53f0\u4fe1\u606f\u3002 \u4e0b\u9762\u662f\u4e0d\u540c\u8bed\u8a00\u5f00\u53d1\u7684\u5e73\u53f0\u83b7\u53d6\u7ebf\u7a0bId\u3001Name\u65b9\u6cd5\uff1a \u8bb0\u5f55\u7ebf\u7a0b\u4fe1\u606f\uff0c\u5bf9\u4e8e\u6211\u4eec\u6392\u67e5\u95ee\u9898\u65f6\u5019\u975e\u5e38\u5fc5\u8981\u7684\uff0c\u5f53\u51fa\u73b0\u4e00\u4e2a\u7a0b\u5e8f\u5f02\u5e38\uff0c\u6211\u4eec\u81f3\u5c11\u8981\u77e5\u9053\u5b83\u4ec0\u4e48\u8bed\u8a00\u5f00\u53d1\uff0c\u627e\u5230\u5bf9\u4e8e\u7814\u53d1\u5de5\u7a0b\u5e08\u3002\u7814\u53d1\u5de5\u7a0b\u5e08\u5f80\u5f80\u9700\u8981\u7ebf\u7a0b\u76f8\u5173\u4fe1\u606f\u5feb\u901f\u5b9a\u4f4d\u9519\u8bef\u6808 \u3002 Span\u95f4\u5173\u7cfb\u63cf\u8ff0Links\uff1a \u6211\u4eec\u770b\u770b\u4e4b\u524dSpan\u6570\u636e\u6a21\u578b\uff1a [Span gateway] | +------+------+------------------+ | | | [Span auth] [Span billing] [Span loading resource] \u4e00\u4e2aTrace\u6709\u5411\u65e0\u73af\u56fe\uff0cSpan\u662f\u56fe\u7684\u8282\u70b9\uff0c\u94fe\u63a5\u5c31\u662f\u8282\u70b9\u95f4\u7684\u8fde\u7ebf \u3002\u53ef\u4ee5\u770b\u5230\u4e00\u4e2aSpan\u8282\u70b9\u53ef\u4ee5\u6709\u591a\u4e2aLink\uff0c\u8fd9\u4ee3\u8868\u5b83\u6709\u591a\u4e2a\u5b50Span\u3002 Trace\u5b9a\u4e49\u4e86Span\u95f4\u4e24\u79cd\u57fa\u672c\u5173\u7cfb\uff1a ChildOf\uff1aSpan A\u662fSpan B\u7684\u5b69\u5b50\uff0c\u5373\u201cChildOf\u201d\u5173\u7cfb FollowsFrom\uff1aSpan A\u662fSpan B\u7684\u7236\u7ea7Span Span\u4e0a\u4e0b\u6587\u4fe1\u606fSpanContext\uff1a \u5b57\u9762\u7406\u89e3Span\u4e0a\u4e0b\u6587\u5bf9\u8c61\u3002\u5b83\u4f5c\u7528\u5c31\u662f\u5728\u4e00\u4e2aTrace\u4e2d\uff0c\u628a\u5f53\u524dSpan\u548cTrace\u76f8\u5173\u4fe1\u606f\u4f20\u9012\u5230\u4e0b\u7ea7Span\u3002\u5b83\u7684\u57fa\u672c\u7ed3\u6784\u7c7b\u4f3c <Trace_id, Span_id, sampled> \uff0c\u6bcf\u4e2aSpanContext\u5305\u542b\u4ee5\u4e0b\u57fa\u672c\u5c5e\u6027\uff1a TraceId\uff1a\u968f\u673a16\u5b57\u8282\u6570\u7ec4\u3002\u6bd4\u5982\uff1a4bf92f3577b34da6a3ce929d0e0e4736 SpanId\uff1a\u968f\u673a8\u5b57\u8282\u6570\u7ec4\u3002\u6bd4\u5982\uff1a00f067aa0ba902b7 Baggage Items\u662f\u5b58\u5728\u4e8eTrace\u4e00\u4e2a\u952e\u503c\u5bf9\u96c6\u5408\uff0c\u4e5f\u9700\u8981Span\u95f4\u4f20\u8f93\u3002","title":"3-3 Span\u57fa\u672c\u7ed3\u6784"},{"location":"chap_apm/3apm_tracing/#3-4-trace","text":"\u5728\u4e00\u4e2a\u94fe\u8def\u8ffd\u8e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u6709\u591a\u4e2aSpan\u64cd\u4f5c\uff0c\u4e3a\u4e86\u628a\u8c03\u7528\u94fe\u72b6\u6001\u5728Span\u4e2d\u4f20\u9012\u4e0b\u53bb\uff0c\u671f\u671b\u6700\u7ec8\u4fdd\u5b58\u4e0b\u6765\uff0c\u6bd4\u5982\u6253\u5165\u65e5\u5fd7\u3001\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u3002 SpanContext\u4f1a\u5c01\u88c5\u4e00\u4e2a\u952e\u503c\u5bf9\u96c6\u5408\uff0c\u7136\u540e\u5c06\u6570\u636e\u50cf\u884c\u674e\u4e00\u6837\u6253\u5305\uff0c\u8fd9\u4e2a\u6253\u5305\u7684\u884c\u674eOpenTelemetry\u79f0\u4e3aBaggage\uff08\u80cc\u5305\uff09 \u3002 Baggage\u4f1a\u5728\u4e00\u6761\u8ffd\u8e2a\u94fe\u8def\u4e0a\u7684\u6240\u6709Span\u5185\u5168\u5c40\u4f20\u8f93 \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cBaggage\u4f1a\u968f\u7740\u6574\u4e2a\u94fe\u8def\u4e00\u540c\u4f20\u64ad\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Baggage\u5b9e\u73b0\u5f3a\u5927\u7684\u8ffd\u8e2a\u529f\u80fd\u3002 \u65b9\u4fbf\u7406\u89e3\uff0c\u6211\u4eec\u7528\u5f00\u8d26\u5355\u670d\u52a1\u6f14\u793aBaggage\u6548\u679c\uff1a \u9996\u5148\uff0c\u6211\u4eec\u5728LoadBalancer\u8bf7\u6c42\u4e2d\u52a0\u4e00\u4e2aBaggage\uff0cLoadBalancer\u8bf7\u6c42\u4e86source\u670d\u52a1\u3002 @GetMapping(\"/loadBalancer\") @ResponseBody public String loadBalancer(String tag){ Span span = Span.current(); //\u4fdd\u5b58 Baggage Baggage.current() .toBuilder() .put(\"app.username\", \"XYZ\") .build() .makeCurrent(); ...... ##\u8bf7\u6c42 resource httpTemplate.getForEntity(APIUrl+\"/resource\",String.class).getBody(); \u7136\u540e\u6211\u4eec\u4eceresource\u670d\u52a1\u4e2d\u83b7\u53d6Baggage\u4fe1\u606f\uff0c\u5e76\u628a\u5b83\u5b58\u50a8\u5230Span\u7684Attributes\u4e2d\u3002 @GetMapping(\"/resource\") @ResponseBody public String resource(){ String baggage = Baggage.current().getEntryValue(\"app.username\"); Span spanCur = Span.current(); ##\u83b7\u53d6\u5f53\u524d\u7684 Span\uff0c\u628a Baggage \u5199\u7684 resource spanCur.setAttribute(\"app.username\", \"baggage \u4f20\u9012\u8fc7\u6765\u7684 value: \"+baggage); \u6700\u7ec8\uff0c\u6211\u4eec\u4ece\u8ddf\u8e2a\u7cfb\u7edf\u7684\u94fe\u8defUI\u4e2d\u70b9\u51fbsource\u8fd9\u4e2aSpan\uff0c\u627e\u5230\u4f20\u9012\u7684Baggage\u4fe1\u606f\u3002 \u5f53\u7136\uff0cBaggage\u62e5\u6709\u5f3a\u5927\u529f\u80fd\uff0c\u4e5f\u4f1a\u6709\u5f88\u5927\u7684\u6d88\u8017\u3002\u7531\u4e8eBaggage\u7684\u5168\u5c40\u4f20\u8f93\uff0c\u6bcf\u4e2a\u952e\u503c\u90fd\u4f1a\u88ab\u62f7\u8d1d\u5230\u6bcf\u4e00\u4e2a\u672c\u5730\uff08local\uff09\u53ca\u8fdc\u7a0b\u7684\u5b50Span\uff0c\u5982\u679c\u5305\u542b\u7684\u6570\u91cf\u91cf\u592a\u5927\uff0c\u6216\u8005\u5143\u7d20\u592a\u591a\uff0c\u5b83\u5c06\u964d\u4f4e\u7cfb\u7edf\u7684\u541e\u5410\u91cf\u6216\u589e\u52a0RPC\u7684\u5ef6\u8fdf\u3002","title":"3-4 Trace\u94fe\u8def\u4f20\u9012\u521d\u63a2"},{"location":"chap_apm/3apm_tracing/#3-5","text":"\u6211\u4eec\u8fdb\u884c\u7cfb\u7edf\u94fe\u8def\u8ffd\u8e2a\uff0c\u9664\u4e86Trace\u672c\u8eab\u81ea\u5e26\u4fe1\u606f\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u5e0c\u671b\u6dfb\u52a0\u81ea\u5df1\u5173\u6ce8\u7684\u76d1\u63a7\u3002 Trace\u652f\u6301\u7528\u6253\u6807\u7b7eTags\u65b9\u5f0f\u6765\u5b9e\u73b0 \u3002 Tags\u672c\u8d28\u8fd8\u662fSpan\u7684 Attributes\uff08\u5728OpenTelemetry \u5b9a\u4e49\u4e2d\uff0c\u7edf\u79f0Attributes\u3002\u5728Prometheus\u3001Jaeger\u91cc\u9762\u6cbf\u88adTags\u8001\u7684\u53eb\u6cd5\uff09\u3002 \u6253Tags\u7684\u8fc7\u7a0b\uff0c\u5176\u5b9e\u5c31\u662f\u5728Span\u6dfb\u52a0\u6211\u4eec\u81ea\u5b9a\u4e49\u7684Attributes\u4fe1\u606f\uff0c\u8fd9\u4e9bTags\u5927\u90e8\u5206\u548c\u6211\u4eec\u4e1a\u52a1\u606f\u606f\u76f8\u5173\uff0c\u4e3a\u4e86\u66f4\u65b9\u4fbf\u505a\u4e1a\u52a1\u76d1\u63a7\u3001\u5206\u6790\u4e1a\u52a1\u3002 \u6211\u4eec\u770b\u4e00\u4e2aJava\u6253Tags\u7684\u4f8b\u5b50\uff1a\u9875\u9762\u5b9a\u4e49\u597d\u4e86\u4e00\u4e2aTag\uff0c\u540d\u5b57\u53eb\u201cusername\u201d\u3002\u6211\u4eec\u8f93\u5165Tags\u7684\u503c\uff0c\u7136\u540e\u628aTags\u901a\u8fc7\u4e00\u4e2aHTTP\u8bf7\u6c42\u53d1\u9001\u7ed9\u4ed8\u8d26\u5355\u7684API\u3002 API\u83b7\u53d6Tags\u540e\uff0c\u628a\u5b83\u4fdd\u5b58\u5230\u5f53\u524dSpan\u7684Attribute\u4e2d\u3002\u8fd9\u4e2aSpan\u5bf9\u5e94\u7684\u662f\u4ee3\u7801\u91cc\u9762\u7684\u4e00\u4e2aGateway\u65b9\u6cd5\uff0c\u5982\u679c\u4e0d\u91cd\u540dSpan\u540d\u79f0\uff0c\u9ed8\u8ba4\u4f7f\u7528Gateway\u4f5c\u4e3aSpan\u540d\u79f0 \u3002 @GetMapping(\"/loadBalancer\") public String gateway(String tag){ Span Span = Span.current(); ##\u83b7\u53d6\u5f53\u524d Span\uff0c\u6dfb\u52a0 username \u7684 tag Span.setAttribute(\"username\", tag); ...... } \u6253\u4e86Tags\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8ddf\u8e2a\u7cfb\u7edf\u641c\u7d22Tag\u5173\u952e\u5b57\u3002\u901a\u8fc7Tag\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u5bf9\u5e94\u7684Trace\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u6839\u636eTags\u7684key\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7b5b\u9009\u60f3\u8981\u7684Span\u4fe1\u606f\u3002\u5b9e\u9645\u573a\u666f\u91cc\uff0c\u6211\u4eec\u9762\u4e34\u662f\u4ece\u6210\u5343\u4e0a\u4e07\u94fe\u8def\u4e2d\u5feb\u901f\u5b9a\u4f4d\u8bbf\u95ee\u5f02\u5e38\u7684\u8bf7\u6c42\u3002\u6253Tags\u5bf9\u6211\u4eec\u8bca\u65ad\u7a0b\u5e8f\u975e\u5e38\u6709\u5e2e\u52a9 \u3002 Baggage\u548cSpan Tags\u7684\u533a\u522b\uff1a Baggage\u5728\u5168\u5c40\u8303\u56f4\u5185\uff0c\uff08\u4f34\u968f\u4e1a\u52a1\u7cfb\u7edf\u7684\u8c03\u7528\uff09\u5728\u6240\u6709Span\u95f4\u4f20\u8f93\u6570\u636e\u3002Tags\u4e0d\u4f1a\u8fdb\u884c\u4f20\u8f93\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u4f1a\u88ab\u5b50\u7ea7\u7684 Span \u7ee7\u627f\u3002 Span\u7684Tags\u53ef\u4ee5\u7528\u6765\u8bb0\u5f55\u4e1a\u52a1\u76f8\u5173\u7684\u6570\u636e\uff0c\u5e76\u5b58\u50a8\u4e8e\u8ffd\u8e2a\u7cfb\u7edf\u4e2d \u3002","title":"3-5 \u94fe\u8def\u6dfb\u52a0\u4e1a\u52a1\u76d1\u63a7"},{"location":"chap_apm/3apm_tracing/#3-4","text":"\u5728\u4e0d\u540c\u7684\u5e73\u53f0\u3001\u4e0d\u540c\u7684\u5f00\u53d1\u8bed\u8a00\u3001\u4e0d\u540c\u7684\u90e8\u7f72\u73af\u5883(\u5bb9\u5668\u975e\u5bb9\u5668\uff09\u4e0b\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5e95\u5c42\u8ffd\u8e2a\u7cfb\u7edf\u5b9e\u73b0\u517c\u5bb9\u6027\uff0c\u5c06\u76d1\u63a7\u6570\u636e\u8bb0\u5f55\u5230\u4e00\u4e2a\u53ef\u63d2\u62d4\u7684Tracer\u4e0a\u3002\u5728\u7edd\u5927\u90e8\u5206\u901a\u7528\u7684\u5e94\u7528\u573a\u666f\u4e0b \uff0c\u8ffd\u8e2a\u7cfb\u7edf\u8003\u8651\u4f7f\u7528\u67d0\u4e9b\u9ad8\u5ea6\u5171\u8bc6\u7684\u952e\u503c\u5bf9\uff0c\u4ece\u800c\u5bf9\u8bca\u65ad\u5e94\u7528\u7cfb\u7edf\u66f4\u6709\u517c\u5bb9\uff0c\u901a\u7528\u6027 \u3002 \u8fd9\u4e2a\u5171\u8bc6\u79f0\u4e3a\u8bed\u4e49\u7ea6\u5b9aSemantic conventions \u3002 \u4f60\u4f1a\u4ece\u4e0b\u9762\u4e00\u4e9b\u8bed\u4e49\u7ea6\u5b9a\u770b\u51faTrace\u505a\u4e86\u54ea\u4e9b\u517c\u5bb9\u6027\u3002 General\uff1a\u901a\u7528\u7ea6\u5b9a\uff0c\u4e4b\u524d\u63d0\u5230\u7f51\u7edc\u8fde\u63a5Attributes\uff0c\u7ebf\u7a0bAttributes HTTP\uff1a\u9488\u5bf9HTTP\u8bf7\u6c42\u7684\u6570\u636e\u7ea6\u5b9a Database\uff1a\u6570\u636e\u5e93\u6570\u636e\u7ea6\u5b9a\uff0c\u5305\u62ecSQL\u548cNoSQL\u4e0d\u540c\u7c7b\u578b RPC/RMI\uff1a\u6709\u5173\u8fdc\u7a0b\u8c03\u7528\u7684\u7ea6\u5b9a Messaging\uff1a\u6709\u5173\u6d88\u606f\u7cfb\u7edf\u7684Span\u7ea6\u5b9a\uff0c\u4f8b\u5982MQ\u7684\u8ba2\u9605\u3001\u53d1\u5e03\u7b49 Exceptions\uff1a\u9488\u5bf9\u5f02\u5e38\uff0c\u9519\u8bef\u72b6\u6001\u7b49 \u4f8b\u5982\uff0c\u6211\u4eec\u8bbf\u95eeHTTP\u7684\u5e94\u7528\u670d\u52a1\u5668\u3002\u5e94\u7528\u7cfb\u7edf\u5904\u7406\u8bf7\u6c42\u4e2d\u7684URL\u3001IP\u3001HTTP\u52a8\u4f5c\uff08get/post\u7b49\uff09\u3001\u8fd4\u56de\u7801\uff0c\u5bf9\u4e8e\u5e94\u7528\u7cfb\u7edf\u7684\u8bca\u65ad\u662f\u975e\u5e38\u6709\u5e2e\u52a9\u7684\u3002\u76d1\u63a7\u8005\u53ef\u4ee5\u9009\u62e9HTTP\u7ea6\u5b9a\u53c2\u6570\u8bb0\u5f55\u7cfb\u7edf\u72b6\u6001\uff0c\u50cf\u4e0b\u9762Trace\u5c55\u793a\u7684\u7ed3\u679c\u3002 Trace\u9ed8\u8ba4\u7684\u8bed\u4e49\u7ea6\u5b9a","title":"3-4 \u5168\u94fe\u8def\u517c\u5bb9\u6027\u8003\u8651"},{"location":"chap_apm/3apm_tracing/#4","text":"\u5728Trace\u4f20\u9012\u4e2d\u6709\u4e00\u4e2a\u6838\u5fc3\u7684\u6982\u5ff5\uff0c\u53ebCarrier\uff08\u642c\u8fd0\u5de5\u5177 \uff09\u3002 \u5b83\u8868\u793a\u201c\u642c\u8fd0\u201dSpan\u4e2dSpanContext\u7684\u5de5\u5177 \u3002 \u6bd4\u65b9\u8bf4Trace\u4e3a\u4e86\u628aSpan\u4fe1\u606f\u4f20\u9012\u4e0b\u53bb\uff0c \u5728HTTP\u8c03\u7528\u573a\u666f\u4e2d\uff0c\u4f1a\u6709HttpCarrier\uff0c\u5728RPC\u7684\u8c03\u7528\u573a\u666f\u4e2d\u4f1a\u6709RpcCarrier\u6765\u642c\u8fd0SpanContext \u3002Trace\u901a\u8fc7Carrier\u53ef\u4ee5\u628a\u94fe\u8def\u8ffd\u8e2a\u72b6\u6001\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u201c\u642c\u8fd0\u201d\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u91cc\u3002","title":"4 \u94fe\u8def\u6570\u636e\u5982\u4f55\u4f20\u64ad"},{"location":"chap_apm/3apm_tracing/#4-1","text":"\u4e3a\u4e86\u66f4\u6e05\u6670\u770b\u61c2\u6570\u636e\u4f20\u64ad\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5148\u4e86\u89e3Span\u5728\u4f20\u64ad\u4e2d\u6709\u7684\u57fa\u672c\u64cd\u4f5c\uff1a 1\u3001StartSpan\uff1aTrace\u5728\u5177\u4f53\u64cd\u4f5c\u4e2d\u81ea\u52a8\u751f\u6210\u4e00\u4e2aSpan 2\u3001Inject\u6ce8\u5165\uff1a\u5c06Span\u7684SpanContext\u5199\u5165\u5230Carrier\u7684\u8fc7\u7a0b \u94fe\u8def\u6570\u636e\u4e3a\u4e86\u8fdb\u884c\u7f51\u7edc\u4f20\u8f93\uff0c\u9700\u8981\u6570\u636e\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316 \u3002\u8fd9\u4e2a\u8fc7\u7a0bTrace\u901a\u8fc7\u4e00\u4e2a\u8d1f\u8d23\u6570\u636e\u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316\u4e0a\u4e0b\u6587\u7684Formatter\u63a5\u53e3\u5b9e\u73b0\u7684\u3002 \u4f8b\u5982\u5728HttpCarrier\u4f7f\u7528\u4e2d\u901a\u5e38\u5c31\u4f1a\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684HttpFormatter\u3002\u6240\u4ee5Inject\u6ce8\u5165\u662f\u59d4\u6258\u7ed9Formatter\u5c06SpanContext\u8fdb\u884c\u5e8f\u5217\u5316\u5199\u5165Carrier\u3002 Formatter\u63d0\u4f9b\u4e0d\u540c\u573a\u666f\u5e8f\u5217\u5316\u7684\u6570\u636e\u683c\u5f0f\uff0c\u53eb\u505aFormat\u63cf\u8ff0\u3002\u6bd4\u5982\uff1a Text Map\uff1a\u57fa\u4e8e\u5b57\u7b26\u4e32\u7684Map\u8bb0\u5f55SpanContext\u4fe1\u606f\uff0c\u9002\u7528RPC\u7f51\u7edc\u4f20\u8f93 HTTP Headers\uff1a\u65b9\u4fbf\u89e3\u6790HTTP Headers\u4fe1\u606f\uff0c\u7528\u4e8eHTTP\u4f20\u8f93 \u4e00\u4e2aPython\u7a0b\u5e8f\u5b9e\u73b0Inject\u6ce8\u5165\u8fc7\u7a0b\uff0cFormatter\u5e8f\u5217\u5316SpanContext\u6210Text Map\u683c\u5f0f\u3002 ##Trace \u751f\u6210\u4e00\u4e2aspan tracer = Tracer() span = tracer.start_span(operation_name='test') tracer.inject( span_context=span.context, format=Format.TEXT_MAP, carrier=carrier) 3\u3001Extract\u63d0\u53d6\uff1a\u5c06SpanContext\u4eceCarrier\u4e2dExtract\uff08\u63d0\u53d6\u51fa\u6765\uff09\u3002 span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) \u540c\u7406\uff0c\u4eceCarrier\u63d0\u53d6\u7684\u8fc7\u7a0b\u4e5f\u9700\u8981\u59d4\u6258Formatter\u5c06SpanContext\u53cd\u5e8f\u5217\u5316\u3002","title":"4-1 \u6570\u636e\u4f20\u64ad\u57fa\u672c\u64cd\u4f5c"},{"location":"chap_apm/3apm_tracing/#4-1_1","text":"\u94fe\u8def\u6570\u636e\u5728HTTP\u4f20\u9012 \u6211\u4eec\u57fa\u4e8eHTTP\u901a\u4fe1\u89e3\u91ca\u4f20\u64ad\u539f\u7406\u3002\u7531\u56fe\u4e00\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5927\u81f4\u5206\u4e3a\u4e24\u6b65\uff1a 1\u3001\u53d1\u9001\u7aef\u5c06 SpanContext \u6ce8\u5165\u5230\u8bf7\u6c42\u4e2d\uff0c\u76f8\u5e94\u4f2a\u4ee3\u7801\u5b9e\u73b0 /** ** \u5c06 SpanContext \u4e2d\u7684 TraceId\uff0cSpanId\uff0cBaggage \u7b49\u6839\u636e format \u53c2\u6570\u6ce8\u5165\u5230\u8bf7\u6c42\u4e2d\uff08Carrier\uff09 ** carrier := opentracing.HTTPHeadersCarrier(httpReq.Header) ** err := Tracer.Inject(Span.Context(), opentracing.HTTPHeaders, carrier) **/ Inject(sm SpanContext, format interface{}, carrier interface{}) error 2\u3001\u63a5\u6536\u7aef\u4ece\u8bf7\u6c42\u4e2d\u89e3\u6790\u51faSpanContext\uff0c\u76f8\u5e94\u4f2a\u4ee3\u7801\u5b9e\u73b0 // Inject() takes the `sm` SpanContext instance and injects it for // propagation within `carrier`. The actual type of `carrier` depends on /** \u6839\u636e format \u53c2\u6570\u4ece\u8bf7\u6c42\uff08Carrier\uff09\u4e2d\u89e3\u6790\u51fa SpanContext\uff08\u5305\u62ec TraceId\u3001SpanId\u3001baggage\uff09\u3002 ** \u4f8b\u5982\uff1a ** carrier := opentracing.HTTPHeadersCarrier(httpReq.Header) ** clientContext, err := Tracer.Extract(opentracing.HTTPHeaders, carrier) **/ Extract(format interface{}, carrier interface{}) (SpanContext, error) Carrier\u8d1f\u8d23\u5c06\u8ffd\u8e2a\u72b6\u6001\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u201cCarry\u201d\uff08\u642c\u8fd0\uff09\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u3002\u5bf9\u4e8e\u4e00\u4e2aCarrier\uff0c\u5982\u679c\u5df2\u7ecf\u88abInjected\uff0c\u90a3\u4e48\u5b83\u4e5f\u53ef\u4ee5\u88abExtracted\uff08\u63d0\u53d6\uff09\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u4e2aSpanContext\u5b9e\u4f8b\u3002\u8fd9\u4e2aSpanContext\u4ee3\u8868\u7740\u88abInjected\u5230Carrier\u7684\u4fe1\u606f\u3002 \u8bf4\u5230\u8fd9\u91cc\uff0c\u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u8fd9\u4e2aCarrier\u5728HTTP\u4e2d\u5177\u4f53\u5728\u54ea\u3002\u5176\u5b9e\u5b83\u5c31\u4fdd\u5b58\u5230HTTP\u7684Headers\u4e2d\u3002\u800c\u4e14\uff0cW3C\u7ec4\u7ec7\u4e3aHTTP\u652f\u6301\u94fe\u8def\u8ffd\u8e2a\u4e13\u95e8\u5728Headers\u4e2d\u5b9a\u4e49\u4e86Trace\u6807\u51c6\uff1a https://www.w3.org/TR/trace-context/#trace-context-http-headers-format W3C\u7ec4\u7ec7\u662f\u5bf9\u7f51\u7edc\u6807\u51c6\u5236\u5b9a\u7684\u4e00\u4e2a\u975e\u76c8\u5229\u7ec4\u7ec7\uff0cW3C\u662f\u4e07\u7ef4\u7f51\u8054\u76df\u7684\u7f29\u5199\uff0c\u50cfHTML\u3001XHTML\u3001CSS\u3001XML\u7684\u6807\u51c6\u5c31\u662f\u7531W3C\u6765\u5b9a\u5236\u3002","title":"4-1 \u8fd0\u884c\u539f\u7406"},{"location":"chap_apm/3apm_tracing/#4-2","text":"\u6570\u636e\u4f20\u64ad\u6309\u7167\u573a\u666f\u5206\u4e3a\u4e24\u7c7b\uff1a\u8fdb\u7a0b\u5185\u4f20\u64ad\u3001\u8de8\u8fdb\u7a0b\u95f4\u4f20\u64ad Cross-Process-Tracing \u3002 \u8fdb\u7a0b\u5185\u4f20\u64ad\u662f\u6307Trace\u5728\u4e00\u4e2a\u670d\u52a1\u5185\u90e8\u4f20\u9012\uff0c\u76d1\u63a7\u4e86\u670d\u52a1\u5185\u90e8\u76f8\u4e92\u8c03\u7528\u60c5\u51b5\uff0c\u76f8\u5f53\u6bd4\u8f83\u7b80\u5355\u3002\u8ffd\u8e2a\u7cfb\u7edf\u6700\u56f0\u96be\u7684\u90e8\u5206\u5c31\u662f\u5728\u5206\u5e03\u5f0f\u7684\u5e94\u7528\u73af\u5883\u4e0b\u4fdd\u6301\u8ffd\u8e2a\u7684\u6b63\u5e38\u5de5\u4f5c\u3002\u4efb\u4f55\u4e00\u4e2a\u8ffd\u8e2a\u7cfb\u7edf\uff0c\u90fd\u9700\u8981\u7406\u89e3\u591a\u4e2a\u8de8\u8fdb\u7a0b\u8c03\u7528\u95f4\u7684\u56e0\u679c\u5173\u7cfb\uff0c\u65e0\u8bba\u4ed6\u4eec\u662f\u901a\u8fc7RPC\u6846\u67b6\u3001\u53d1\u5e03-\u8ba2\u9605\u673a\u5236\u3001\u901a\u7528\u6d88\u606f\u961f\u5217\u3001HTTP\u8bf7\u6c42\u8c03\u7528\u3001UDP\u4f20\u8f93\u6216\u8005\u5176\u4ed6\u4f20\u8f93\u6a21\u5f0f\u3002\u6240\u4ee5\u4e1a\u754c\u8c08\u8d77Tracing\u6280\u672f \u5f80\u5f80\u8bf4\u7684\u662f\u8de8\u8fdb\u7a0b\u95f4\u7684\u5206\u5e03\u5f0f\u94fe\u8def\u8ffd\u8e2a\uff08Distrubute Tracing\uff09\u3002 \u6211\u4eec\u7528OpenTelemetry\u5b9e\u8df5\u4e00\u4e2aHTTP\u901a\u4fe1\u7684Trace\u4f8b\u5b50\uff1a \u8fd9\u662f\u4e00\u4e2a\u672c\u5730Localhost\u7684Java\u7a0b\u5e8f\uff0c\u6211\u4eec\u5411\u4e0b\u6e38\u670d\u52a1192.168.0.100\u53d1\u8d77\u4e00\u4e2aHTTP\u8bf7\u6c42\u3002 \u7a0b\u5e8f\u4e2d\u4f7f\u7528OpenTelemetry\u7684inject\u6ce8\u5165\uff0c\u901a\u8fc7HTTP Headers\u628aLocalhost\u7684Trace\u4f20\u9012\u7ed9192.168.0.100\u7684\u4e0b\u6e38\u670d\u52a1 \u3002\u4f20\u64ad\u524d\uff0c\u624b\u52a8\u8fd8\u521b\u5efa\u4e24\u4e2a\u60f3\u8981\u4e00\u5757\u4f20\u64ad\u7684Attributes\u3002 @GetMapping(\"/contextR\") @ResponseBody public String contextR() { TextMapSetter<HttpURLConnection> setter = new TextMapSetter<HttpURLConnection>() { @Override public void set(HttpURLConnection carrier, String key, String value) { // \u6211\u4eec\u628a\u4e0a\u4e0b\u6587\u653e\u5230 HTTP \u7684 Header carrier.setRequestProperty(key, value); } }; Span spanCur = Span.current(); Span outGoing = tracer.spanBuilder(\"/resource\").setSpanKind(SpanKind.CLIENT).startSpan(); try { URL url = new URL(\"http://192.168.0.100:8080/resource\"); HttpURLConnection transportLayer = (HttpURLConnection) url.openConnection(); outGoing.setAttribute(\"http.method\", \"GET\"); outGoing.setAttribute(\"http.url\", url.toString()); // \u5c06\u5f53\u524d Span \u7684\u4e0a\u4e0b\u6587\u6ce8\u5165\u5230\u8fd9\u4e2a HTTP \u8bf7\u6c42\u4e2d OpenTelemetry.getPropagators().getTextMapPropagator().inject(Context.current(), transportLayer, setter); // Make outgoing call ... \u8fd0\u884c\u7a0b\u5e8f\uff0c\u4ece\u76d1\u63a7\u5e73\u53f0\u6211\u4eec\u770b\u5230\uff0cTrace\u4ece\u672c\u5730\u7684\u7a0b\u5e8f\u6210\u529f\u4f20\u9012\u5230\u4e86192.168.0.100\u3002","title":"4-2 \u8de8\u8fdb\u7a0b\u95f4\u4f20\u64ad\u6570\u636e"},{"location":"chap_apm/3apm_tracing/#5-trace","text":"\u4e0a\u9762\u6211\u4eec\u63d0\u5230Trace\uff0c\u90fd\u662f\u94fe\u8def\u8ffd\u8e2a\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210\u7684\u3002\u867d\u7136\u8fd9\u5f88\u901a\u7528\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u6709\u4e9b\u65f6\u5019\u8fd8\u60f3\u67e5\u770b\u66f4\u591a\u7684\u8ddf\u8e2a\u7ec6\u8282\u548c\u6dfb\u52a0\u4e1a\u52a1\u76d1\u63a7\u3002 \u94fe\u8def\u8ffd\u8e2a\u6280\u672f\u652f\u6301\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u624b\u5de5\u65b9\u5f0f\u5728\u8ddf\u8e2a\u7684\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u4fe1\u606f\uff0c\u751a\u81f3\u624b\u52a8\u542f\u52a8Span \uff0c\u4ee5\u671f\u5f85\u76d1\u63a7\u66f4\u9ad8\u7ea7\u522b\u7684\u7cfb\u7edf\u884c\u4e3a\uff0c\u6216\u5e2e\u52a9\u8c03\u8bd5\u95ee\u9898\u3002 OpenTelemetry\u652f\u6301\u4ee5SDK\u548cAPI\u65b9\u5f0f\u624b\u52a8\u6784\u5efaTrace\u3002API\u3001SDK\u90fd\u53ef\u4ee5\u505a\u4e00\u4e9b\u57fa\u672cTrace\u64cd\u4f5c\uff0c\u53ef\u4ee5\u7406\u89e3API\u662fMin\u5b9e\u73b0\uff0cSDK\u662fAPI\u7684\u8d85\u96c6\u3002 \u751f\u4ea7\u73af\u5883\u6839\u636e\u5b9e\u9645\u573a\u666f\u9009\u62e9\u7528\u54ea\u4e00\u4e2a\u3002","title":"5 \u624b\u52a8\u63a7\u5236Trace\uff1a\u81ea\u52a8\u6784\u5efa"},{"location":"chap_apm/3apm_tracing/#5-1-span","text":"\u8981\u521b\u5efaSpan\uff0c\u53ea\u9700\u6307\u5b9aSpan\u7684\u540d\u79f0\u3002\u624b\u52a8\u521b\u5efaSpan\u9700\u8981\u663e\u5f0f\u7ed3\u675f\u64cd\u4f5c\uff0c\u5b83\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\u7531\u94fe\u8def\u8ffd\u8e2a\u7cfb\u7edf\u81ea\u52a8\u8ba1\u7b97\u3002Java\u4ee3\u7801\u5b9e\u4f8b\uff1a Span Span = Tracer.SpanBuilder(\"\u624b\u5de5\u521b\u5efa SpanOne\").startSpan(); try{ ...... } finally { Span.end(); //\u624b\u52a8\u521b\u5efa Span\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u7ed3\u675f Span } \u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u83b7\u53d6\u4e00\u4e2aSpan\u3002 Span Span = Span.current()","title":"5-1 \u521b\u5efaSpan"},{"location":"chap_apm/3apm_tracing/#5-2-span","text":"\u4e00\u4e2aSpan\u53ef\u4ee5\u8fde\u63a5\u4e00\u4e2a\u6216\u591a\u4e2a\u56e0\u679c\u76f8\u5173\u7684\u5176\u4ed6Span\u3002\u5b9e\u4f8b\u4e2d\u6211\u4eec\u521b\u5efa\u4e00\u4e2aSpan \u3002 \u53eb\u505a\u201c\u624b\u5de5\u521b\u5efaSpanOne\u201d\uff0c\u7136\u540e\u5206\u522b\u521b\u5efa\u4e86\u4e09\u4e2aSpan\uff0c\u901a\u8fc7link\u628a\u5b83\u4eec\u5173\u8054\u6210\u5b69\u5b50Span\u3002\u6700\u540e\u53c8\u521b\u5efa\u4e86\u4e00\u4e2aSpan \u201cchildThree-Child\u201d\uff0c\u628a\u5b83\u4f5c\u4e3a\u201cchildThree\u201d\u7684\u5b69\u5b50Span \u5173\u8054 @GetMapping(\"/createSpanAndLink\") public String createSpanAndLink() { String SpanName = \"\u624b\u5de5\u521b\u5efa SpanOne\"; //\u521b\u5efa\u4e00\u4e2a Span\uff0c\u7136\u540e\u521b\u5efa\u4e09\u4e2a child Span\uff0c\u6700\u540e\u5173\u8054 Span Span SpanOne = Tracer.SpanBuilder(SpanName) .startSpan(); Span childSpan = Tracer.SpanBuilder(\"childOne\") .addLink(SpanOne.getSpanContext()).startSpan(); Span childSpan2 = Tracer.SpanBuilder(\"childTwo\") .addLink(SpanOne.getSpanContext()).startSpan(); Span childSpan3 = Tracer.SpanBuilder(\"childThree\") .addLink(SpanOne.getSpanContext()).startSpan(); //\u521b\u5efa\u4e00\u4e2a Span\uff0c\u5173\u8054 childSpan3,\u4f5c\u4e3a\u5b83\u7684 childSpan Span childSpan3Child = Tracer.SpanBuilder(\"childThree-Child\") .addLink(childSpan3.getSpanContext()).startSpan(); } \u6211\u4eec\u770b\u770b\u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u6536\u96c6\u7684Trace\u7684\u6548\u679c\uff1aLink\u5c06\u5404\u4e2aSpan\u8fde\u63a5\u8d77\u6765\u3002","title":"5-2 \u521b\u5efa\u5e26\u94fe\u63a5Span"},{"location":"chap_apm/3apm_tracing/#5-3-span","text":"Span\u53ef\u4ee5\u643a\u5e26\u96f6\u4e2a\u6216\u591a\u4e2aSpan\u5c5e\u6027\u7684\u547d\u540d\u4e8b\u4ef6\u8fdb\u884c\u6ce8\u91ca\uff0c\u6bcf\u4e00\u4e2a\u4e8b\u4ef6\u90fd\u662f\u4e00\u4e2a key:value\u952e\u503c\u5bf9\uff0c\u5e76\u81ea\u52a8\u643a\u5e26\u76f8\u5e94\u7684\u65f6\u95f4\u6233\u3002\u65f6\u95f4\u6233\u8868\u793a\u4e8b\u4ef6\u7684\u6301\u7eed\u65f6\u95f4\u3002 @GetMapping(\"/event\") public String event(){ Span span = Span.current(); span.updateName(\"\u521b\u5efa eventDemo\"); //\u624b\u52a8\u66f4\u65b0 Event \u6301\u7eed\u65f6\u95f4 span.addEvent(\"timeEvent\",System.currentTimeMillis()+2000, TimeUnit.MILLISECONDS); //\u7ed9 Event \u6dfb\u52a0\u76f8\u5173\u4fe1\u606f Attributes appInfo = Attributes.of(AttributeKey .stringKey(\"app.id\"), \"123456\", AttributeKey.stringKey(\"app.name\"), \"\u5e94\u7528\u7a0b\u5e8f demo\"); span.addEvent(\"auth.appinfo\", appInfo); logger.info(\"this is a event\"); } \u5728\u4e0a\u9762\u7a0b\u5e8f\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ed9\u4e8b\u4ef6\u624b\u52a8\u6dfb\u52a0\u65f6\u95f4\u6233\uff0c\u8fd9\u5728\u590d\u6742\u7cfb\u7edf\u73af\u5883\u4e0b\u8fd8\u539f\u771f\u5b9e\u6301\u7eed\u4e8b\u4ef6\u5f88\u6709\u610f\u4e49\u7684\u3002\u770b\u770b\u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u8ffd\u8e2a\u5e73\u53f0\u4e0bSpan\u751f\u6210\u7684\u7684\u6548\u679c\uff1a","title":"5-3 \u521b\u5efa\u5e26\u4e8b\u4ef6\u7684Span"},{"location":"chap_apm/3apm_tracing/#6","text":"\u6709\u4e86\u7a0b\u5e8f\u7684Trace\u6570\u636e\uff0c\u5305\u542bTraceId\u3001Span\u3001Spancontext\u4e00\u7cfb\u5217\u6570\u636e\u3002\u63a5\u4e0b\u6765\u9700\u8981\u4e0a\u62a5\u5230\u76d1\u63a7\u7cfb\u7edf\uff0c\u901a\u8fc7\u89c6\u56fe\u65b9\u5f0f\u5c55\u793a\u51faTrace\u6574\u4e2a\u5168\u8c8c\u3002 \u6211\u4eec\u4e60\u60ef\u628aTrace\u6570\u636e\u4e0a\u62a5\u5230\u76d1\u63a7\u8fc7\u7a0b\u79f0\u4e3a\u6570\u636e\u6536\u96c6\uff08Data Collection\uff09 \u3002\u770b\u770b\u6570\u636e\u6536\u96c6\u57fa\u672c\u539f\u7406\uff1a \u4ece\u56fe\u4e2d\uff0c\u770b\u5230\u94fe\u8def\u6536\u96c6\u8fc7\u7a0b\u4e2d\uff0c\u6570\u636e\u4e0a\u62a5\u6838\u5fc3\u7684\u51e0\u4e2a\u7ec4\u4ef6\uff1a Collector\uff1a\u6570\u636e\u6536\u96c6\u7684\u5904\u7406\u5668\uff0c\u5b83\u540c\u65f6\u89e3\u6790\u3001\u52a0\u5de5\u76d1\u63a7\u6570\u636e\uff0c\u76ee\u7684\u662f\u7ed9\u76d1\u63a7\u5c55\u793a\u5e73\u53f0\u66f4\u76f4\u89c2\u7684\u89c6\u56fe\uff0c\u4fbf\u6377\u7684\u67e5\u8be2\u3002 Exporters\uff1a\u91c7\u96c6\u5668\uff0c\u4ece\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u83b7\u5f97Trace\u6570\u636e\uff0c\u76ee\u524d\u4e3b\u6d41\u8ddf\u8e2a\u7cfb\u7edf\u51e0\u4e4e\u53ef\u4ee5\u652f\u6301\u4efb\u4f55\u8bed\u8a00\u5e73\u53f0\u4e0b\u5f00\u53d1\u7a0b\u5e8f\uff0c\u5e76\u4e14\u517c\u5bb9\u4e3b\u6d41\u64cd\u4f5c\u7cfb\u7edf\u548c\u5bb9\u5668\u3002\u4e3a\u4e86\u652f\u6301Trace\u6807\u51c6\u5316\u5230\u8fd9\u79cd\u7a0b\u5e8f\uff0c\u5de5\u7a0b\u5e08\u53ef\u8c13\u5455\u5fc3\u6ca5\u8840\uff0c\u4e2d\u95f4\u8fc7\u7a0b\u6781\u4e0d\u5bb9\u6613\u3002 Data Collection\u5728\u6570\u636e\u91c7\u96c6\u65f6\u5019\uff0cCollector\u548cExporters\u6709\u4e24\u79cd\u5b9e\u73b0\uff1aAgent\u548cGateway\u3002\u9650\u4e8e\u7bc7\u5e45\uff0c\u6211\u4eec\u5728\u540e\u9762\u6587\u7ae0\u8be6\u7ec6\u7ed9\u5927\u5bb6\u8bb2\u89e3\u3002","title":"6 \u6570\u636e\u5982\u4f55\u4e0a\u62a5"},{"location":"chap_apm/3apm_tracing/#7","text":"\u4eca\u5929\u8bb2\u89e3\u4e86\u94fe\u8def\u8ffd\u8e2a\u7684\u6570\u636e\u4f20\u64ad\u3001\u6570\u636e\u4e0a\u62a5\u7684\u539f\u7406\u3002\u5982\u679c\u4f60\u60f3\u52a8\u624b\u5b9e\u8df5\u6587\u7ae0\u4e2d\u7684\u4ee3\u7801, GitHub\u5f00\u653e\u4e86\u5730\u5740\uff1ahttps://github.com/laziobird/opentelemetry-jaeger APM\u4e3a\u6211\u4eec\u7ebf\u4e0a\u5e94\u7528\u7a0b\u5e8f\u5728\u6545\u969c\u5b9a\u4f4d\u3001\u6027\u80fd\u8c03\u4f18\u8d77\u5230\u5de8\u5927\u4f5c\u7528\u3002\u540c\u65f6\uff0c\u6211\u8fd8\u4f1a\u57fa\u4e8eAPM\u8c08\u8c08\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u6bd4\u5982\u5bb9\u5668\uff08Kubernetes\uff09\u3001\u670d\u52a1\u7f51\u683c\uff08Istio\uff09\u73af\u5883\u4e0b\uff0cTrace\u6570\u636e\u91c7\u96c6\u5177\u4f53\u5b9e\u73b0\u548c\u5982\u4f55\u505a\u76d1\u63a7\u3002","title":"7 \u603b\u7ed3"},{"location":"chap_apm/4apm_prod/","text":"4 \u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5982\u4f55\u9009\u62e9\u9760\u8c31\u7684APM\u7cfb\u7edf\uff1f 1 APM \u73b0\u72b6 \u6211\u4eec\u7528\u4e00\u5f20\u56fe\u63cf\u8ff0\u4e0b APM \u5728\u7cfb\u7edf\u7a33\u5b9a\u6027\u4fdd\u969c\u7684\u4f4d\u7f6e\uff1a \u76ee\u524d APM \u5f00\u6e90\u3001\u5546\u4e1a\u5316\u4ea7\u54c1\u6bd4\u8f83\u6210\u719f\uff0c\u5927\u90e8\u5206\u516c\u53f8\u751f\u4ea7\u73af\u5883\u90fd\u90e8\u7f72\u4e86 APM \u7cfb\u7edf\u3002\u672c\u6587\u4ece\u4e3b\u6d41 APM \u4ea7\u54c1\u4ecb\u7ecd\u51fa\u53d1\uff0c\u901a\u8fc7\u751f\u4ea7\u73af\u5883\u4e2d\u5173\u6ce8\u7684\u51e0\u4e2a\u91cd\u8981\u7ef4\u5ea6\uff0c\u7ed9\u5230\u5927\u5bb6\u4e00\u4e9b\u9002\u5408\u81ea\u8eab\u516c\u53f8\u573a\u666f\u7684 APM \u9009\u578b\u65b9\u6848\u5efa\u8bae\u3002 2 \u4e3b\u6d41\u7ade\u54c1\u6982\u8ff0 \u6211\u5e26\u5927\u5bb6\u5927\u81f4\u56de\u987e\u4e0b\u76ee\u524d\u56fd\u5185\u3001\u5916\u90fd\u6709\u54ea\u4e9b\u6bd4\u8f83\u6709\u53e3\u7891\u548c\u5e02\u573a\u5360\u6709\u7387\u7684 APM \u76d1\u63a7\u4ea7\u54c1\uff1a \u9664\u4e0a\u9762\u63d0\u53ca\u4ea7\u54c1 \uff0c\u5e02\u9762\u4e0a\u8fd8\u6709\u8b6c\u5982\uff1a\u5f00\u6e90 ZipKin\u3001Elastic APM\u3001Dynatrace\u3001\u56fd\u5185\u7684 OneAPM\u3001\u535a\u777f\u7b49\u3002\u9650\u4e8e\u7bc7\u5e45\u548c\u4e2a\u4eba\u4e86\u89e3\u7a0b\u5ea6\uff0c\u672c\u6587\u4e0d\u505a\u5bf9\u6bd4\u3002\u6211\u4e3b\u8981\u6536\u5f55\u7684\u5224\u5b9a\u7ef4\u5ea6\uff1a \u4ea7\u54c1\u4f53\u9a8c\uff1a\u4fa7\u91cd\u751f\u4ea7\u73af\u5883\u7684 APM \u529f\u80fd\u4e0a\u6613\u7528\u6027\u3001\u5b9e\u7528\u6027\uff0c\u4e2a\u4eba\u559c\u597d\u7a0b\u5ea6\u3002 \u6570\u636e\u91c7\u6837\uff1a\u5f88\u591a APM \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u6536\u96c6\u94fe\u8def\u6570\u636e\u8fc7\u591a\uff0c\u4f1a\u9047\u5230\u5f88\u591a\u6027\u80fd\u95ee\u9898\u3002\u7279\u522b\u5927\u578b\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0cAPM \u91c7\u6837\u80fd\u529b\u3001\u5b58\u50a8\u80fd\u529b\u51b3\u5b9a APM \u7684\u9760\u8c31\u7a0b\u5ea6\u3002 Agent\u80fd\u529b\uff1a\u4ece Agent \u7684\u6280\u672f\u751f\u6001\u3001\u652f\u6301\u7ec4\u4ef6\u3001\u5f00\u53d1\u8bed\u8a00\u80fd\u529b\u3002\u53ef\u80fd\u5f88\u591a\u516c\u53f8\u751f\u4ea7\u7cfb\u7edf\u5728\u8fd9\u4e2a\u7ef4\u5ea6\u5c31\u5df2\u7ecf\u505a\u4e86APM\u7684\u9009\u578b\u4e86\u3002\u6bd4\u5982\u4f60\u662f .Net \u4e1a\u52a1\u7cfb\u7edf\uff0c\u4e0a\u9762\u63d0\u5230\u4e00\u5927\u534a\u538b\u6839\u4e0d\u652f\u6301\u3002 \u62a5\u8b66 + DB \u652f\u6301\uff1a\u9884\u8b66\u3001\u544a\u8b66\u7684\u80fd\u529b\u3001\u5bf9\u8c03\u7528\u94fe\u8def\u4e2d\u6700\u5178\u578b\u6570\u636e\u5e93\u652f\u6301\u80fd\u529b\u3002 \u4e91\u539f\u751f\u7684\u652f\u6301\u80fd\u529b\uff1a\u5728 Kubernetes \u548c Istio \u751f\u4ea7\u73af\u5883\u7684\u6210\u719f\u5ea6\uff0c\u8fd9\u4e2a\u95e8\u69db\u4e5f\u6392\u9664\u4e86\u5f88\u591a APM\uff0c\u7279\u522b\u662f\u4e00\u4e9b\u5f00\u6e90\u4ea7\u54c1\uff0c\u8fd9\u5757\u666e\u904d\u505a\u5f97\u4e0d\u7406\u60f3\u3002 \u6570\u636e\u5927\u5c4f\uff1a\u9898\u5916\u8bdd\uff0c\u6570\u636e\u5927\u5c4f\u662f\u516c\u53f8\u671f\u671b\u5bf9\u6027\u80fd\u76d1\u63a7\u5de5\u5177\u52a0\u5f3a\u4e1a\u52a1\u76d1\u63a7\u7684\u4f53\u73b0\u3002 \u793e\u533a\u548c\u6587\u6863\u652f\u6301\uff1a\u4ea7\u54c1\u5bf9\u5e94\u7684\u6280\u672f\u793e\u533a\u6210\u719f\u5ea6\u548c\u4ea7\u54c1\u6587\u6863\u7684\u8d28\u91cf \u5176\u5b83\uff1a\u65e5\u5fd7\u3001\u6570\u636e\u5927\u5c4f\uff0c\u81ea\u68c0\uff0c\u5b58\u50a8\u80fd\u529b\u3002\u9650\u4e8e\u4f18\u5148\u7ea7\u548c\u672c\u6587\u7bc7\u5e45\uff0c\u4ee5\u540e\u505a\u66f4\u591a\u76f8\u5173\u5206\u4eab 3 \u4ea7\u54c1\u4f7f\u7528\u4f53\u9a8c \u6838\u5fc3\u529f\u80fd\uff1a\u4e1a\u52a1\u94fe\u8def\u56fe\u3001\u94fe\u8def\u8ffd\u8e2a\u5206\u6790\u3002 \u4eae\u70b9\uff1aPinpoint \u7684\u76d1\u63a7\u94fe\u8def\u89c6\u56fe\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u7528\u7684\u6bd4\u8f83\u987a\u624b\u3002 \u63a8\u8350\u7406\u7531\uff1a\u4e1a\u52a1\u94fe\u8def\u56fe\u66f4\u76f4\u89c2\u3001\u94fe\u8def\u8ffd\u8e2a\u5206\u6790\u66f4\u61c2\u4e1a\u52a1\u3002 Pinpoint \u94fe\u8def\u5206\u6790\u6307\u6807\u4e30\u5bcc\u3001\u4ece\u62d3\u6251\u56fe\u94bb\u53d6\u8be6\u7ec6\u94fe\u8def\u66f4\u9ad8\u6548\uff1a \u5907\u6ce8\uff1a\u4e00\u822c\u6210\u719f\u7684 APM\uff0c\u8003\u8651\u5230\u6570\u636e\u5e93\u6838\u5fc3\u573a\u666f\uff0c\u5728\u8c03\u7528\u94fe\u4e2d\uff0c\u4e00\u822c\u652f\u6301 SQL \u4f20\u53c2\u5b8c\u6574\u663e\u793a\u3002 4 \u6570\u636e\u91c7\u6837 \u8c03\u7528\u94fe\u6570\u636e\u603b\u4f53\u4f53\u91cf\u4e0e\u4e1a\u52a1\u4f53\u91cf\u6b63\u76f8\u5173\uff0c\u5168\u91cf\u91c7\u96c6\u8c03\u7528\u94fe\u6570\u636e\u5c06\u4f1a\u7ed9\u516c\u53f8\u7cfb\u7edf\u6574\u4f53\u5e26\u6765\u4e24\u65b9\u9762\u538b\u529b\uff1a \u56e0\u6570\u636e\u4e0a\u62a5\u9020\u6210\u7684\u6bcf\u4e2a\u4e1a\u52a1\u670d\u52a1\u7684\u7f51\u7edc I/O \u538b\u529b \u56e0\u6570\u636e\u91c7\u96c6\u3001\u5206\u6790\u9020\u6210\u7684\u8c03\u7528\u94fe\u8ffd\u8e2a\u670d\u52a1\u7684\u8ba1\u7b97\u548c\u5b58\u50a8\u538b\u529b \u4e3a\u4e86\u964d\u4f4e\u8fd9\u4e24\u65b9\u9762\u538b\u529b\uff0c\u91c7\u6837\u662f\u5927\u591a\u6570\u8c03\u7528\u94fe\u8ffd\u8e2a\u7cfb\u7edf\u7684\u5fc5\u5907\u6a21\u5757\u3002 \u5b9e\u8df5\u4e2d\u5e38\u7528\u7684\u91c7\u7528\u7b56\u7565\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a \u5934\u90e8\u8fde\u8d2f\u91c7\u6837\uff1aHead-based coherent sampling \u5c3e\u90e8\u8fde\u8d2f\u91c7\u6837\uff1aTail-based coherent sampling \u5355\u5143\u91c7\u6837\uff1aUnitary sampling \u76ee\u524d\u5e94\u7528\u6700\u5e7f\u6cdb\u7684\u91c7\u6837\u7b56\u7565\u4e3b\u8981\u662f\u5c3e\u90e8\u91c7\u6837 \u4e0b\u9762\u662f\u5b83\u4eec\u57fa\u672c\u539f\u7406\u56fe\u3002 Skywalking \uff1a\u91c7\u6837\u673a\u5236\u6210\u719f\uff0c\u505a\u5728 server-side\uff0c\u80fd\u591f\u652f\u6301\u7b80\u5355\u7684\u91c7\u6837\u767e\u5206\u6bd4 sample rate\u914d\u7f6e\uff0c\u5141\u8bb8 forceSampleErrorSegment\uff1a\u9519\u8bef\u94fe\u8def\u5f3a\u5236\u91c7\u7528\u3002\u66f4\u8be6\u7ec6\u914d\u7f6e\uff1a https://skywalking.apache.org/docs/main/latest/en/setup/backend/trace-sampling/ \u4eae\u70b9\uff1a\u5355\u72ec\u505a\u4e86Slow SQL sampling \u6570\u636e\u5e93\u6162\u67e5\u8be2\u7684\u91c7\u6837\u914d\u7f6e\u3002 https://skywalking.apache.org/docs/main/v8.5.0/en/setup/backend/slow-db-statement/ Pinpoint\uff1a\u57fa\u672c\u91c7\u6837\uff0c\u652f\u6301\u767e\u5206\u6bd4\u91c7\u6837 Percent \u548c\u7b80\u5355\u7684\u603b\u6570\u91c7\u6837 Counting \u542c\u4e91\uff1a\u57fa\u672c\u91c7\u6837 \u5bf9\u5f02\u5e38\u91c7\u96c6\u652f\u6301\u7b80\u5355\u914d\u7f6e\uff1aExceptionTrace Setting Jaeger \uff1a\u4f9d\u8d56\u4e8e Opentelemetry \u5e95\u5c42\u5b9e\u73b0\uff0c\u652f\u6301\u5c3e\u90e8\u91c7\u6837\uff0c\u5f02\u5e38\u91c7\u6837\uff0c\u8fc7\u6ee4\u89c4\u5219\u91c7\u6837\u7b49 https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/tailsamplingprocessor Datadog \u3001\u817e\u8baf\u4e91\u3001\u963f\u91cc Arms\uff1aAPM \u90fd\u6709\u57fa\u672c\u91c7\u6837\uff0c\u91c7\u6837\u652f\u6301\u7b56\u7565\u4e5f\u975e\u5e38\u4e30\u5bcc \u4eae\u70b9\uff1a\u8fd8\u8fdb\u4e00\u6b65\u652f\u6301\u4e30\u5bcc\u7684 DB\u3001RUM\uff08\u524d\u7aef\u91c7\u6837\uff09 \u7b80\u5355\u770b\u4e00\u4e2a\u817e\u8baf\u4e91\u4e0b\u9762 APM \u91c7\u6837\u914d\u7f6e\u3002 5 Agent \u80fd\u529b \u8003\u8651\u6211\u4eec\u4e1a\u52a1\u7cfb\u7edf\u5728\u4e0d\u540c\u8bed\u8a00\u5f00\u53d1\u3001\u4e0d\u540c\u64cd\u4f5c\u73af\u5883\u4e0b\u8fd0\u884c\u3002\u800c\u4e14\uff0c\u968f\u7740\u4e91\u539f\u751f\u548c\u5fae\u670d\u52a1\u7684\u53d1\u5c55\uff0c\u73b0\u5728\u4e1a\u52a1\u7cfb\u7edf\u4e5f\u9010\u6b65\u90e8\u7f72\u5728\u5bb9\u5668\u548c\u670d\u52a1\u7f51\u683c\u4e2d\u3002\u8fd9\u589e\u52a0\u4e86 APM \u4ea7\u54c1\u7684\u6280\u672f\u96be\u5ea6\uff0c\u5b9e\u9645\u60c5\u51b5\uff1a\u5f88\u591a APM \u90fd\u652f\u6301\u4e0d\u4e86\u6240\u6709\u573a\u666f\uff0c\u53ea\u80fd Case By Case \u8003\u91cf\u3002 \u56e0\u4e3a APM \u666e\u904d\u901a\u8fc7 Agent \u65b9\u5f0f\u91c7\u96c6\u94fe\u8def\u6570\u636e\u3002\u5982\u679c\u8981\u770b APM \u4ea7\u54c1\u662f\u5426\u652f\u6301\u4f60\u7684\u4e1a\u52a1\u7cfb\u7edf\uff0c\u6700\u76f4\u63a5\u65b9\u5f0f\u770b Agent \u7aef\u5b9e\u73b0\u80fd\u529b\u4e86\u3002 5-1 \u5f00\u6e90\u4ea7\u54c1 Pinpoint \u867d\u7136\u56fd\u5185 Java \u7cfb\u7edf\u6709\u4e00\u5b9a\u4f7f\u7528\u91cf\u3002\u4f46\u662f Pinpoint \u63a2\u9488\u5347\u7ea7\u6162\uff0c\u6700\u8fd1\u5feb\u534a\u5e74\u6ca1\u6709\u5347\u7ea7\u3002\u6700\u65b0 Java \u4e3b\u6d41\u4e2d\u95f4\u4ef6\u5f88\u591a\u4e0d\u652f\u6301\uff0c\u5bf9\u4e8e Kubernetes\u3001Istio \u8fd8\u652f\u6301\u4e0d\u4e86\u3002 \u542c\u4e91\u5f88\u4e45\u6ca1\u7ef4\u62a4\uff0c\u6700\u65b0 Java \u63a2\u9488\u662f 2020 \u5e74\u505a\u4e86\u66f4\u65b0\u3002Kubernetes\u3001Istio \u4e0a\u4e0d\u4e86\u751f\u4ea7\u73af\u5883 #### 2020-09-04 *Version:2.7.1* 1.\u91cd\u6784Webflux\u63d2\u4ef6\uff0c\u652f\u6301Spring Webflux 5.0.7.RELEASE ~ 5.2.8.RELEASE Skywalking \u5e73\u5747\u4e24\u4e2a\u6708\u4e00\u4e2a\u5468\u671f\uff0c\u4e3b\u8981\u652f\u6301 Java \u4e3b\u6d41\u4e2d\u95f4\u4ef6\u7248\u672c\u5347\u7ea7\u3001\u5b83\u5bf9 Kubenetes\u3001Istio \u6210\u719f\u7684\u652f\u6301\uff0c\u8fed\u4ee3\u517c\u5bb9\u4e0d\u540c\u6700\u65b0\u7248\u672c\u3002Python\u3001Go \u4e5f\u5f00\u59cb\u505a\u4e86\u652f\u6301\u3002 Istio \u6700\u65b0\u7248\u672c\u652f\u6301\uff1aIstio 1.10.3\u30011.11.4\u30011.12.0 release Java \u6700\u65b0\u7248\u672c\u652f\u6301\uff1aJDK 16\u300117 5-2 \u5546\u4e1a\u4ea7\u54c1 https://github.com/DataDog/dd-trace-java/releases \u6211\u603b\u7ed3\u6700\u8fd1\u4e00\u4e2a\u6708\uff0cDatadog Agent \u505a\u4e86\u4e00\u4e9b\u91cd\u8981\u66f4\u65b0\uff1a \u652f\u6301SAP\u7684\u94fe\u8def\u8ffd\u8e2a\uff1aEnable tracing of SAP's HANA in-memory DB \u652f\u6301 MQ \u4e2d\u95f4\u4ef6 Kafka \u6570\u636e\u6d41\u76d1\u63a7\uff1aData streams monitoring for Kafka \u652f\u6301\u6700\u65b0 Apache HttpClient 5 \u76d1\u63a7\uff1aApache HttpClient 5 instrumentation \u4eae\u70b9\uff1a\u5f00\u6e90\u7684 Skywalking\u3001\u5546\u4e1a\u7684 Datadog \u5728\u4e3b\u6d41\u7684\u7ec4\u4ef6\u76d1\u63a7\u652f\u6301\u4e0a\u4e0b\u4e86\u529f\u592b\uff0c\u800c\u4e14\u5bf9\u4e91\u539f\u751f\u4e0a Kubernetes \u5bb9\u5668\u548c Istio \u4e5f\u6210\u719f\u8fd0\u7528\u5230\u751f\u4ea7\u73af\u5883\uff0c\u8fd9\u662f\u5927\u90e8\u5206\u5176\u4ed6APM\u4ea7\u54c1\u6ca1\u6709\u505a\u5230\u7684\u3002 \u63a8\u8350\uff1a\u4ece\u8fd9\u4e9b\u65b9\u9762\u770b\uff0c\u5982\u679c\u4f60\u7684\u4e1a\u52a1\u7cfb\u7edf\u4e0d\u662f\u4e3b\u6d41\u7684 APM \u76d1\u63a7\u5bf9\u8c61\uff0c\u6bd4\u5982\u91c7\u7528 .Net \u8bed\u8a00\u5f00\u53d1\uff0c\u6216\u8005\u7528\u5230\u4e86 SAP \u516c\u53f8\u7684 IT \u7cfb\u7edf\uff0c\u90a3\u4e48\u4f60\u8003\u8651\u7684\u6700\u91cd\u8981\u4f18\u5148\u7ea7\u662f\u54ea\u4e9b APM \u80fd\u771f\u6b63\u652f\u6301\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u4f60\u7684\u4e1a\u52a1\u7cfb\u7edf\u7528\u5230\u4e86\u6700\u65b0\u7684\u4e00\u4e9b\u7ec4\u4ef6\u7248\u672c\u6216\u8005\u8bed\u8a00\u6846\u67b6\uff0c\u6bd4\u5982 Java \u7528\u4e86\u6700\u65b0\u7248\u672c\uff0c\u90a3\u5f88\u591a\u5f00\u6e90 APM \u662f\u6ca1\u6709\u53bb\u8fed\u4ee3\u66f4\u65b0\u7684\u3002 5-3 \u603b\u7ed3 \u6bd5\u7adf\u5546\u4e1a\u7aef\u7684 APM \u6709\u66f4\u591a\u6280\u672f\u50a8\u5907\uff0c\u548c\u4e13\u6ce8\u80fd\u529b\u53bb\u517c\u5bb9\u66f4\u591a\u7684\u7ec4\u4ef6\u3002\u5f53\u7136\u5728\u751f\u4ea7\u73af\u5883\uff0c\u4e00\u4e9b\u516c\u53f8\u7528\u4e86\u5f00\u6e90\uff0c\u501f\u52a9\u672c\u8eab\u6280\u672f\u80fd\u529b\uff0c\u91c7\u7528\u81ea\u7814\u65b9\u5f0f\uff0c\u505a\u4e86\u4e00\u4e9b\u4e2a\u6027\u5316\u76d1\u63a7\u7684\u6280\u672f\u65b9\u6848\u3002\u5230\u5e95\u662f\u5f00\u6e90\u8fd8\u662f\u5546\u4e1a\uff0c\u6700\u6838\u5fc3\u662f\u770b\u6027\u4ef7\u6bd4\u3002\u5982\u679c\u4f60\u786e\u5b9e\u81ea\u7814\u4e0d\u4e86\uff0c\u5f00\u6e90\u4e5f\u4e0d\u80fd\u652f\u6301\u516c\u53f8\u67d0\u4e9b\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8003\u8651\u5546\u4e1a APM \u4ea7\u54c1\u4e5f\u662f\u4e00\u79cd\u9009\u62e9\u3002 6 \u544a\u8b66\u7ba1\u7406\u80fd\u529b \u544a\u8b66\u7ba1\u7406\u63d0\u4f9b\u4e86\u53ef\u9760\u7684\u544a\u8b66\u6536\u655b\u3001\u901a\u77e5\uff0c\u5e2e\u52a9\u4e1a\u52a1\u7cfb\u7edf\u5feb\u901f\u68c0\u6d4b\u548c\u4fee\u590d\u4e1a\u52a1\u544a\u8b66\u3002 \u544a\u8b66\u7ba1\u7406\u4ece\u529f\u80fd\u4e0a\uff0c\u5305\u542b\u57fa\u672c\u529f\u80fd\uff1a \u6dfb\u52a0\u76d1\u63a7\u4e8b\u4ef6\u3001\u914d\u7f6e\u544a\u8b66\u3001\u544a\u8b66\u63a8\u9001 \u3002 \u5728\u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u4e00\u65b9\u9762\u4e1a\u52a1\u7cfb\u7edf\u5f80\u5f80\u590d\u6742\uff0c\u670d\u52a1\u4f17\u591a\uff0c\u7b80\u5355\u4e00\u4e2a\u4e2a\u6dfb\u52a0\u76d1\u63a7\u4e8b\u4ef6\uff0c\u4f1a\u5bfc\u81f4\u8fd0\u7ef4\u5de5\u4f5c\u91cf\u9aa4\u589e\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4e1a\u52a1\u544a\u8b66\u4e0d\u5149\u8981\u53ca\u65f6\u63a8\u9001\uff0c\u4e5f\u9700\u8981\u63d0\u4f9b\u8db3\u591f\u4e30\u5bcc\u7684\u62a5\u8b66\u6570\u636e\u548c\u53cb\u597d\u53ef\u89c6\u5316\u5c55\u793a\uff0c\u8ba9 IT \u4eba\u5458\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u548c\u4fee\u590d\u6545\u969c\u3002 \u4ece\u8fd9\u4e9b\u7ef4\u5ea6\uff0c\u5f88\u591a APM \u63d0\u4f9b\u4e86\u544a\u8b66\u9ad8\u7ea7\u529f\u80fd\uff1a \u544a\u8b66\u6a21\u677f\uff0c\u914d\u7f6e\u544a\u8b66\u81ea\u52a8\u5316\uff0c\u66f4\u53cb\u597d\u7684\u544a\u8b66\u754c\u9762 \u3002 \u6211\u4eec\u770b\u770b\u4e3b\u6d41APM\u5177\u4f53\u5bf9\u544a\u8b66\u652f\u6301\uff1a Skywalking \u544a\u8b66\u901a\u8fc7\u811a\u672c\u914d\u7f6e\uff1a https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/backend-alarm.md Skywalking \u62a5\u8b66\u754c\u9762\u4e0d\u592a\u53cb\u597d\uff0c\u67e5\u770b\u62a5\u8b66\u548c\u6dfb\u52a0\u62a5\u8b66\u4e8b\u4ef6\u6bd4\u8f83\u9ebb\u70e6\u3002 \u4e0d\u8fc7 Skywalking \u544a\u8b66\u6d88\u606f\u63a8\u9001\u6e90\u6bd4\u8f83\u4e30\u5bcc\uff0c\u6bd4\u5982\u98de\u4e66\u3001\u9489\u9489\u3001Slack\u3002 \u8fd8\u5f00\u653e\u544a\u8b66 hook\uff0c\u8fd9\u6837\u5f00\u53d1\u8005\u57fa\u4e8e\u81ea\u5b9a\u4e49\u66f4\u591a\u544a\u8b66\u63a8\u52a8\u6e90\u3002 Pinpoint \u57fa\u672c\u544a\u8b66\u6a21\u677f\u5e93\u3001\u505a\u4e86\u544a\u8b66\u6d88\u606f\u7b80\u5355\u5206\u7ec4\uff0c\u4f46\u662f\u4e0d\u5f00\u653e\u81ea\u5b9a\u4e49\u544a\u8b66\u6e90\uff0c\u6709\u7b80\u5355\u6a21\u677f\u3002 \u6bd4\u8d77\u5f00\u6e90 APM\uff0c\u5546\u4e1a\u5316 APM \u544a\u8b66\u9ad8\u7ea7\u529f\u80fd\u6bd4\u8f83\u5f3a\u4e86\u3002 \u6211\u4eec\u770b\u770b Datadog\u3001\u56fd\u5185\u89c2\u6d4b\u4e91\u3001\u963f\u91cc\u4e91 Arms \u7684\u9ad8\u7ea7\u529f\u80fd\uff1a \u544a\u8b66\u6a21\u677f\u5e93\uff1a\u4e30\u5bcc\u7684\u544a\u8b66\u6a21\u677f\uff0c\u4e0d\u7528\u81ea\u5df1\u624b\u52a8\u521b\u5efa \u76d1\u63a7\u914d\u7f6e\u66f4\u52a0\u81ea\u52a8\u5316\uff0c\u6bd4\u5982\u4e0b\u9762\u5bf9 MySQL \u544a\u8b66\uff0c\u901a\u8fc7\u7075\u6d3b\u7684\u76d1\u63a7\u9600\u503c\u548c\u6307\u6807\u914d\u7f6e\uff0c\u53ef\u4ee5\u5f88\u5feb\u901f\u548c\u5b9e\u7528\u505a\u5230\u76d1\u63a7\u3002\u8fd9\u4e2a\u6bd4\u8d77\u7eaf\u811a\u672c\u65b9\u5f0f\uff0c\u6781\u5927\u8282\u7ea6\u4e86\u7cfb\u7edf\u8fd0\u7ef4\u7684\u5de5\u4f5c\u91cf\u3002\u5f53\u7136\uff0c\u8981\u63d0\u4f9b\u8fd9\u6837\u7684\u9ad8\u7ea7\u529f\u80fd\uff0c\u5bf9 APM \u4ea7\u54c1\u5f00\u53d1\u6295\u5165\u4e5f\u662f\u5f88\u5927\u7684\u3002 \u53cb\u597d\u7684\u544a\u8b66\u5927\u5c4f\uff1a\u8986\u76d6\u6574\u4e2a IT \u7cfb\u7edf\u7684\u544a\u8b66\u72b6\u51b5\uff0c\u901a\u8fc7\u94bb\u53d6\u67e5\u770b\u5177\u4f53\u67d0\u9879\u670d\u52a1 \u76f8\u6bd4\u4e8e\u5546\u4e1a\u7684 APM \u624d\u80fd\u5177\u5907\u9ad8\u7ea7\u529f\u80fd\uff0c\u5f00\u6e90\u4ea7\u54c1\u9650\u4e8e\u8d44\u6e90\u6709\u9650\uff0c\u5f88\u96be\u628a\u544a\u8b66\u80fd\u591f\u505a\u5230\u5982\u6b64\u3002\u76ee\u524d\uff0c\u4ece\u5f00\u6e90\u4e0a\u80fd\u591f\u628a\u544a\u8b66\u505a\u5f97\u8fd9\u6837\u63a5\u8fd1\u7684\uff0c\u53ef\u4ee5\u770b\u770b\u56fd\u5185\u7684\u4e13\u95e8\u505a\u76d1\u63a7\u62a5\u8b66\u7684\u591c\u83ba\u56e2\u961f\uff0c\u5f00\u6e90\u76d1\u63a7\u4ea7\u54c1 Nightingale\uff0c\u539f\u6765 Open-falcon \u7684\u524d\u8eab\uff0c\u5728\u56fd\u5185\u4e5f\u662f\u6709\u4f17\u591a\u7684\u62e5\u62a4\u8005\u3002 https://n9e.gitee.io/usage/ \u544a\u8b66\u7ba1\u7406\u5bf9\u5e94 APM \u662f\u4e00\u4e2a\u76f8\u5bf9\u91cd\u8981\u529f\u80fd\uff0c\u5c3d\u7ba1\u5546\u4e1a APM \u8fdc\u597d\u4e8e\u5f00\u6e90\u4ea7\u54c1\uff0c\u6bd5\u7adf\u4ed8\u8d39\u3002\u6240\u4ee5\u5927\u5bb6\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u9009\u578b\u8fd8\u662f\u575a\u6301\u6027\u4ef7\u6bd4\uff0c\u4f60\u8981\u770b\u770b\u516c\u53f8\u4e1a\u52a1\u7cfb\u7edf\u5bf9\u8fd9\u4e9b\u9ad8\u7ea7\u529f\u80fd\u7684\u8feb\u5207\u6027\u548c\u6295\u5165\u4ef7\u503c\u3002\u786e\u5b9e\u6709\u4e00\u4e9b\u516c\u53f8\u4e5f\u5728\u5f00\u6e90\u57fa\u7840\u4e0a\u81ea\u7814\u4e86\u8fd9\u4e9b\u9ad8\u7ea7\u529f\u80fd\u3002 7 \u5bf9 DB \u7684\u652f\u6301 \u6570\u636e\u5e93\u662f\u4e1a\u52a1\u7cfb\u7edf\u91cc\u9762\u975e\u5e38\u6838\u5fc3\u7ec4\u4ef6\uff0c\u751f\u4ea7\u73af\u5883\u5e38\u5e38\u53ef\u80fd\u56e0\u4e3a\u6570\u636e\u5e93\u627f\u8f7d\u80fd\u529b\u51fa\u73b0\u6027\u80fd\u95ee\u9898\uff0c\u6700\u5e38\u89c1\u7684\u4f8b\u5b50\u5c31\u662f\u6162\u67e5\u8be2\u3002 \u901a\u8fc7 APM \u53ef\u4ee5\u770b\u5230\u5b8c\u6574\u6162\u67e5\u8be2 SQL \u8bed\u53e5\u548c\u8017\u65f6\uff0c\u4e5f\u53ef\u4ee5\u505a\u6162\u67e5\u8be2\u548c\u5176\u4ed6\u6570\u636e\u5e93 \u5f02\u5e38\u6307\u6807\u544a\u8b66\uff0c\u8fd9\u6837\u5feb\u901f\u5b9a\u4f4d\u6570\u636e\u5e93\u6027\u80fd\u6545\u969c \u3002\u6570\u636e\u5e93\u652f\u6301\u5b9e\u7528\u5ea6\u4f53\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\u3002 SQL \u8c03\u7528\u94fe\u4f20\u53c2\u5b8c\u6574\u663e\u793a\uff0c\u6bd4\u5982 Skywalking\uff0c\u901a\u8fc7\u914d\u7f6e\uff0c\u770b\u5230\u7684\u5b8c\u6574SQL\uff1a SQL\u4f20\u53c2\u663e\u793a\u6548\u679c \u652f\u6301\u6162\u67e5\u8be2\u548c\u76f8\u5173\u6027\u80fd\u6307\u6807\u7684\u91c7\u96c6\u548c\u5c55\u793a\uff0c\u6bd4\u5982\u542c\u4e91\u6162\u67e5\u8be2\u5206\u6790\uff0c\u5b83\u63d0\u4f9b\u652f\u6301\u6570\u636e\u5e93 Oracle\u3001MySQL\u3001MS SQL Server\u3002 \u521a\u624d\u63d0\u5230\u4e24\u4e2a\u6838\u5fc3\u7ef4\u5ea6\uff0c\u6709\u7684 APM \u4f1a\u6709\u4e0d\u652f\u6301\u7684\u60c5\u51b5\uff1a\u5404\u79cd\u6570\u636e\u5e93\u6bd4\u8f83\u591a\uff0c\u8981\u770b\u5177\u4f53\u8bf4\u660e\u3002 \u6574\u4f53\u770b\uff0cDB \u76d1\u63a7\u53cb\u597d\u6027\u8fd8\u662f\u4f53\u73b0\u7ec6\u8282\u65b9\u9762\uff0c\u6bd4\u5982\u6709\u4e9b APM \u63d0\u4f9b\u56fe\u5f62\u5316\u754c\u9762\u52a8\u6001\u914d\u7f6e\u6162\u67e5\u8be2\u548c\u62a5\u8b66\uff0c\u7684\u786e\u8fd0\u7ef4\u4f7f\u7528\u4e0a\u4f1a\u5927\u5927\u4fbf\u5229\u3002 \u6240\u4ee5\uff0c\u751f\u4ea7\u73af\u5883\u4e0b\u4f7f\u7528 APM \u5bf9 DB \u76d1\u63a7\u66f4\u591a\u8003\u8651\u6548\u7387\u7684\u95ee\u9898\u3002 \u4e00\u822c\u573a\u666f Pinpoint\u3001Skywalking \u8db3\u591f\u7528\u3002 8 Kubernetes \u548c Istio \u7684\u652f\u6301 \u5bf9\u5e94 Kubernetes\u3001Istio \u7684\u4ef7\u503c\u672c\u6587\u4e2d\u4e0d\u518d\u8d58\u8ff0\uff0c\u5728\u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u80fd\u771f\u6b63\u652f\u6301\u597d Kubernetes\u3001Istio \u7684 APM \u786e\u5b9e\u4e0d\u591a\uff0c\u5f88\u591a\u8fc7\u53bb\u4e3b\u6d41\u7684 APM \u90fd\u4e0d\u652f\u6301\u7684\uff0c\u751a\u81f3\u662f\u4e00\u4e9b\u5546\u4e1a\u7684 APM \u4ea7\u54c1\u3002 Pinpoint \u76ee\u524d\u6700\u65b0\u5f00\u59cb\u652f\u6301 Kubernetes\uff0c\u4e0d\u8fc7\u5230\u4e0d\u4e86\u751f\u4ea7\u73af\u5883\uff0cIstio \u5b8c\u5168\u4e0d\u652f\u6301\u3002 https://github.com/pinpoint-apm/pinpoint-kubernetes/issues Skywalking \u5728 Kubernetes\u3001Istio \u53ef\u89c2\u6d4b\u652f\u6301\u975e\u5e38\u6210\u719f\u3002 \u8fd9\u662f Skywalking \u5f88\u5927\u4eae\u70b9\uff0c\u800c\u4e14 Skywalking \u5bf9\u4ed6\u4eec\u652f\u6301\u6709\u4e00\u5b9a\u65f6\u95f4\uff0c\u8d9f\u8fc7\u5f88\u591a\u5751\u3002 \u4e4b\u524d\u751f\u4ea7\u73af\u5883\uff0cIstio \u672c\u8eab\u6027\u80fd\u7f3a\u9677\uff0cSkywalking \u505a\u4e86\u5f88\u591a\u4f18\u5316\uff1a \u6bd4\u5982\u8bf4 Skywalking \u4ece Istio \u6027\u80fd\u5f88\u5dee\u7684 Mixer \u65b9\u6848\u9010\u6e10\u8fc1\u79fb\u5230 Envoy \u7684 Access Log Service\uff0c\u4ee5\u89e3\u51b3\u670d\u52a1\u7f51\u683c\u89c2\u5bdf\u7684\u6027\u80fd\u74f6\u9888\u3002\u66f4\u591a\uff0c\u53c2\u8003\u8fd9\u7bc7\u5e72\u8d27\uff1a https://www.tetrate.io/blog/observe-service-mesh-with-skywalking-and-envoy-access-log-service/ Datadog Kubernetes\u3001Istio \u652f\u6301\u5f88\u5f3a\u608d\u4e86\u3002 \u6bd4\u5982\u652f\u6301\u7075\u6d3b\u7684\u65e5\u5fd7\u8fc7\u6ee4\u7ba1\u7406\uff0c\u53ef\u4ee5\u4f18\u5316 Kubernetes \u4e0b\u65e5\u5fd7\u7684\u91c7\u96c6\u7b56\u7565\u3002 https://docs.datadoghq.com/agent/logs/advanced_log_collection/?tab=kubernetes#filter-logs Datadog \u57fa\u4e8e Pod \u53bb\u7ba1\u7406\u5bb9\u5668\u8282\u70b9\u7684\u94fe\u8def\u8ffd\u8e2a\uff0c\u53ef\u4ee5\u652f\u6301 name\u3001image\u3001kube_namespace \u8fd9\u4e9b\u7c92\u5ea6\u7ba1\u7406\uff0c\u53ef\u8c13\u76f8\u5f53\u901a\u7528\u3002 Istio \u4e5f\u6709\u4e30\u5bcc\u652f\u6301\uff0c\u66b4\u9732\u5f88\u591a Envoy \u76d1\u63a7\u6307\u6807\uff1a https://docs.datadoghq.com/integrations/envoy 9 \u793e\u533a\u548c\u6587\u6863\u6210\u719f\u5ea6 9-1 \u6280\u672f\u6587\u6863 Skywalking\u3001Datadog\u3001Arms \u6587\u6863\u975e\u5e38\u5b8c\u6574\u4e30\u5bcc\uff0c\u540c\u65f6\u5728\u7f51\u4e0a\u641c\u7d22\u4e00\u4e9b\u95ee\u9898\uff0c\u90fd\u80fd\u627e\u5230\u5408\u9002\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8fd9\u70b9\u5bf9\u4e8e\u7ef4\u62a4\u8005\u6765\u8bf4\u662f\u975e\u5e38\u6709\u4ef7\u503c\u7684\u3002 \u4e0d\u8fc7 Arms \u6587\u6863\u76f4\u89c2\u663e\u5f97\u6bd4\u8f83\u51cc\u4e71\uff0c\u6bd5\u7adf\u5b83\u662f\u5f88\u591a\u56e2\u961f\uff0c\u4e0d\u540c\u5b50\u7cfb\u7edf\u96c6\u6210\u800c\u6765\uff0c\u7565\u5fae\u81c3\u80bf\u3002 \u50cf Skywalking \u5f00\u6e90\u4ea7\u54c1\u505a\u4e86\u4e00\u4e9b APM \u6280\u672f\u5e03\u9053\uff0c\u641c\u7d22\u7f51\u4e0a\u5f88\u591a\u94fe\u8def\u8ffd\u8e2a\u6280\u672f\u6587\u7ae0\u90fd\u6765\u4e8e\u4ed6\u4eec\uff0c\u8fd9\u662f\u5f00\u6e90\u793e\u533a\u7684\u4e00\u4e9b\u8d21\u732e\u3002 \u5b8c\u6574\u3001\u9ad8\u8d28\u91cf\u6280\u672f\u6587\u6863\u5bf9\u5e94\u4f7f\u7528\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u4f5c\u7528\u5f53\u7136\u4e0d\u8a00\u800c\u55bb\u3002\u53e6\u5916\u4e00\u9762\uff0c\u597d\u7684\u4ea7\u54c1\u6587\u6863\uff0c\u6709\u52a9\u4e8e\u6211\u4eec\u66f4\u591a\u4e86\u89e3\u5185\u90e8\u8fd0\u884c\u539f\u7406\u3002 \u63a8\u8350\u603b\u7ed3\uff1a\u4e0a\u751f\u4ea7\u73af\u5883\uff0c\u6211\u4eec\u5f80\u5f80\u5e0c\u671b\u9762\u5bf9\u7cfb\u7edf\u662f\u53ef\u63a7\u7684\uff0c\u5b8c\u5584\u3001\u6210\u719f\u7684\u6280\u672f\u6587\u6863\u5bf9\u4e8e\u9009\u578b\u6765\u8bf4\u662f\u4e00\u4e2a\u5f88\u57fa\u672c\u7684\u8981\u6c42\u3002\u5f00\u6e90\u8fd8\u6709\u597d\u5904\u5728\u4e8e\u4ee3\u7801\u5f00\u653e\u6027\uff0c\u4e0d\u7528\u62c5\u5fc3\u9ed1\u76d2\u60c5\u51b5\u4e0a\u4e00\u4e2a\u76d1\u63a7\uff0c\u5982\u679c\u56e2\u961f\u6280\u672f\u80fd\u529b\u8db3\u591f\u5f3a\uff0c\u4e5f\u80fd\u81ea\u5df1 fixed \u6216\u8005\u4f18\u5316\u95ee\u9898\u3002 9-2 \u793e\u533a\u751f\u6001 \u5f00\u6e90\u4ea7\u54c1\u4e00\u5927\u4f18\u52bf\u5728\u4e8e\u5f00\u653e\u6027\uff0c\u4e3b\u8981\u4f53\u73b0\u793e\u533a\u548c\u6280\u672f\u652f\u6301\u4e0a\u3002 \u6bd4\u5982Skywalking\u3001Opentelemetry\u3001Pinpoint \u56fd\u5185\u90fd\u6709\u6d3b\u8dc3\u7684\u793e\u7fa4\uff1a","title":"\u7b2c\u56db\u8282 \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5982\u4f55\u9009\u62e9\u9760\u8c31\u7684APM\u7cfb\u7edf\uff1f"},{"location":"chap_apm/4apm_prod/#4-apm","text":"","title":"4 \u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5982\u4f55\u9009\u62e9\u9760\u8c31\u7684APM\u7cfb\u7edf\uff1f"},{"location":"chap_apm/4apm_prod/#1-apm","text":"\u6211\u4eec\u7528\u4e00\u5f20\u56fe\u63cf\u8ff0\u4e0b APM \u5728\u7cfb\u7edf\u7a33\u5b9a\u6027\u4fdd\u969c\u7684\u4f4d\u7f6e\uff1a \u76ee\u524d APM \u5f00\u6e90\u3001\u5546\u4e1a\u5316\u4ea7\u54c1\u6bd4\u8f83\u6210\u719f\uff0c\u5927\u90e8\u5206\u516c\u53f8\u751f\u4ea7\u73af\u5883\u90fd\u90e8\u7f72\u4e86 APM \u7cfb\u7edf\u3002\u672c\u6587\u4ece\u4e3b\u6d41 APM \u4ea7\u54c1\u4ecb\u7ecd\u51fa\u53d1\uff0c\u901a\u8fc7\u751f\u4ea7\u73af\u5883\u4e2d\u5173\u6ce8\u7684\u51e0\u4e2a\u91cd\u8981\u7ef4\u5ea6\uff0c\u7ed9\u5230\u5927\u5bb6\u4e00\u4e9b\u9002\u5408\u81ea\u8eab\u516c\u53f8\u573a\u666f\u7684 APM \u9009\u578b\u65b9\u6848\u5efa\u8bae\u3002","title":"1 APM \u73b0\u72b6"},{"location":"chap_apm/4apm_prod/#2","text":"\u6211\u5e26\u5927\u5bb6\u5927\u81f4\u56de\u987e\u4e0b\u76ee\u524d\u56fd\u5185\u3001\u5916\u90fd\u6709\u54ea\u4e9b\u6bd4\u8f83\u6709\u53e3\u7891\u548c\u5e02\u573a\u5360\u6709\u7387\u7684 APM \u76d1\u63a7\u4ea7\u54c1\uff1a \u9664\u4e0a\u9762\u63d0\u53ca\u4ea7\u54c1 \uff0c\u5e02\u9762\u4e0a\u8fd8\u6709\u8b6c\u5982\uff1a\u5f00\u6e90 ZipKin\u3001Elastic APM\u3001Dynatrace\u3001\u56fd\u5185\u7684 OneAPM\u3001\u535a\u777f\u7b49\u3002\u9650\u4e8e\u7bc7\u5e45\u548c\u4e2a\u4eba\u4e86\u89e3\u7a0b\u5ea6\uff0c\u672c\u6587\u4e0d\u505a\u5bf9\u6bd4\u3002\u6211\u4e3b\u8981\u6536\u5f55\u7684\u5224\u5b9a\u7ef4\u5ea6\uff1a \u4ea7\u54c1\u4f53\u9a8c\uff1a\u4fa7\u91cd\u751f\u4ea7\u73af\u5883\u7684 APM \u529f\u80fd\u4e0a\u6613\u7528\u6027\u3001\u5b9e\u7528\u6027\uff0c\u4e2a\u4eba\u559c\u597d\u7a0b\u5ea6\u3002 \u6570\u636e\u91c7\u6837\uff1a\u5f88\u591a APM \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u6536\u96c6\u94fe\u8def\u6570\u636e\u8fc7\u591a\uff0c\u4f1a\u9047\u5230\u5f88\u591a\u6027\u80fd\u95ee\u9898\u3002\u7279\u522b\u5927\u578b\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0cAPM \u91c7\u6837\u80fd\u529b\u3001\u5b58\u50a8\u80fd\u529b\u51b3\u5b9a APM \u7684\u9760\u8c31\u7a0b\u5ea6\u3002 Agent\u80fd\u529b\uff1a\u4ece Agent \u7684\u6280\u672f\u751f\u6001\u3001\u652f\u6301\u7ec4\u4ef6\u3001\u5f00\u53d1\u8bed\u8a00\u80fd\u529b\u3002\u53ef\u80fd\u5f88\u591a\u516c\u53f8\u751f\u4ea7\u7cfb\u7edf\u5728\u8fd9\u4e2a\u7ef4\u5ea6\u5c31\u5df2\u7ecf\u505a\u4e86APM\u7684\u9009\u578b\u4e86\u3002\u6bd4\u5982\u4f60\u662f .Net \u4e1a\u52a1\u7cfb\u7edf\uff0c\u4e0a\u9762\u63d0\u5230\u4e00\u5927\u534a\u538b\u6839\u4e0d\u652f\u6301\u3002 \u62a5\u8b66 + DB \u652f\u6301\uff1a\u9884\u8b66\u3001\u544a\u8b66\u7684\u80fd\u529b\u3001\u5bf9\u8c03\u7528\u94fe\u8def\u4e2d\u6700\u5178\u578b\u6570\u636e\u5e93\u652f\u6301\u80fd\u529b\u3002 \u4e91\u539f\u751f\u7684\u652f\u6301\u80fd\u529b\uff1a\u5728 Kubernetes \u548c Istio \u751f\u4ea7\u73af\u5883\u7684\u6210\u719f\u5ea6\uff0c\u8fd9\u4e2a\u95e8\u69db\u4e5f\u6392\u9664\u4e86\u5f88\u591a APM\uff0c\u7279\u522b\u662f\u4e00\u4e9b\u5f00\u6e90\u4ea7\u54c1\uff0c\u8fd9\u5757\u666e\u904d\u505a\u5f97\u4e0d\u7406\u60f3\u3002 \u6570\u636e\u5927\u5c4f\uff1a\u9898\u5916\u8bdd\uff0c\u6570\u636e\u5927\u5c4f\u662f\u516c\u53f8\u671f\u671b\u5bf9\u6027\u80fd\u76d1\u63a7\u5de5\u5177\u52a0\u5f3a\u4e1a\u52a1\u76d1\u63a7\u7684\u4f53\u73b0\u3002 \u793e\u533a\u548c\u6587\u6863\u652f\u6301\uff1a\u4ea7\u54c1\u5bf9\u5e94\u7684\u6280\u672f\u793e\u533a\u6210\u719f\u5ea6\u548c\u4ea7\u54c1\u6587\u6863\u7684\u8d28\u91cf \u5176\u5b83\uff1a\u65e5\u5fd7\u3001\u6570\u636e\u5927\u5c4f\uff0c\u81ea\u68c0\uff0c\u5b58\u50a8\u80fd\u529b\u3002\u9650\u4e8e\u4f18\u5148\u7ea7\u548c\u672c\u6587\u7bc7\u5e45\uff0c\u4ee5\u540e\u505a\u66f4\u591a\u76f8\u5173\u5206\u4eab","title":"2 \u4e3b\u6d41\u7ade\u54c1\u6982\u8ff0"},{"location":"chap_apm/4apm_prod/#3","text":"\u6838\u5fc3\u529f\u80fd\uff1a\u4e1a\u52a1\u94fe\u8def\u56fe\u3001\u94fe\u8def\u8ffd\u8e2a\u5206\u6790\u3002 \u4eae\u70b9\uff1aPinpoint \u7684\u76d1\u63a7\u94fe\u8def\u89c6\u56fe\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u7528\u7684\u6bd4\u8f83\u987a\u624b\u3002 \u63a8\u8350\u7406\u7531\uff1a\u4e1a\u52a1\u94fe\u8def\u56fe\u66f4\u76f4\u89c2\u3001\u94fe\u8def\u8ffd\u8e2a\u5206\u6790\u66f4\u61c2\u4e1a\u52a1\u3002 Pinpoint \u94fe\u8def\u5206\u6790\u6307\u6807\u4e30\u5bcc\u3001\u4ece\u62d3\u6251\u56fe\u94bb\u53d6\u8be6\u7ec6\u94fe\u8def\u66f4\u9ad8\u6548\uff1a \u5907\u6ce8\uff1a\u4e00\u822c\u6210\u719f\u7684 APM\uff0c\u8003\u8651\u5230\u6570\u636e\u5e93\u6838\u5fc3\u573a\u666f\uff0c\u5728\u8c03\u7528\u94fe\u4e2d\uff0c\u4e00\u822c\u652f\u6301 SQL \u4f20\u53c2\u5b8c\u6574\u663e\u793a\u3002","title":"3 \u4ea7\u54c1\u4f7f\u7528\u4f53\u9a8c"},{"location":"chap_apm/4apm_prod/#4","text":"\u8c03\u7528\u94fe\u6570\u636e\u603b\u4f53\u4f53\u91cf\u4e0e\u4e1a\u52a1\u4f53\u91cf\u6b63\u76f8\u5173\uff0c\u5168\u91cf\u91c7\u96c6\u8c03\u7528\u94fe\u6570\u636e\u5c06\u4f1a\u7ed9\u516c\u53f8\u7cfb\u7edf\u6574\u4f53\u5e26\u6765\u4e24\u65b9\u9762\u538b\u529b\uff1a \u56e0\u6570\u636e\u4e0a\u62a5\u9020\u6210\u7684\u6bcf\u4e2a\u4e1a\u52a1\u670d\u52a1\u7684\u7f51\u7edc I/O \u538b\u529b \u56e0\u6570\u636e\u91c7\u96c6\u3001\u5206\u6790\u9020\u6210\u7684\u8c03\u7528\u94fe\u8ffd\u8e2a\u670d\u52a1\u7684\u8ba1\u7b97\u548c\u5b58\u50a8\u538b\u529b \u4e3a\u4e86\u964d\u4f4e\u8fd9\u4e24\u65b9\u9762\u538b\u529b\uff0c\u91c7\u6837\u662f\u5927\u591a\u6570\u8c03\u7528\u94fe\u8ffd\u8e2a\u7cfb\u7edf\u7684\u5fc5\u5907\u6a21\u5757\u3002 \u5b9e\u8df5\u4e2d\u5e38\u7528\u7684\u91c7\u7528\u7b56\u7565\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a \u5934\u90e8\u8fde\u8d2f\u91c7\u6837\uff1aHead-based coherent sampling \u5c3e\u90e8\u8fde\u8d2f\u91c7\u6837\uff1aTail-based coherent sampling \u5355\u5143\u91c7\u6837\uff1aUnitary sampling \u76ee\u524d\u5e94\u7528\u6700\u5e7f\u6cdb\u7684\u91c7\u6837\u7b56\u7565\u4e3b\u8981\u662f\u5c3e\u90e8\u91c7\u6837 \u4e0b\u9762\u662f\u5b83\u4eec\u57fa\u672c\u539f\u7406\u56fe\u3002 Skywalking \uff1a\u91c7\u6837\u673a\u5236\u6210\u719f\uff0c\u505a\u5728 server-side\uff0c\u80fd\u591f\u652f\u6301\u7b80\u5355\u7684\u91c7\u6837\u767e\u5206\u6bd4 sample rate\u914d\u7f6e\uff0c\u5141\u8bb8 forceSampleErrorSegment\uff1a\u9519\u8bef\u94fe\u8def\u5f3a\u5236\u91c7\u7528\u3002\u66f4\u8be6\u7ec6\u914d\u7f6e\uff1a https://skywalking.apache.org/docs/main/latest/en/setup/backend/trace-sampling/ \u4eae\u70b9\uff1a\u5355\u72ec\u505a\u4e86Slow SQL sampling \u6570\u636e\u5e93\u6162\u67e5\u8be2\u7684\u91c7\u6837\u914d\u7f6e\u3002 https://skywalking.apache.org/docs/main/v8.5.0/en/setup/backend/slow-db-statement/ Pinpoint\uff1a\u57fa\u672c\u91c7\u6837\uff0c\u652f\u6301\u767e\u5206\u6bd4\u91c7\u6837 Percent \u548c\u7b80\u5355\u7684\u603b\u6570\u91c7\u6837 Counting \u542c\u4e91\uff1a\u57fa\u672c\u91c7\u6837 \u5bf9\u5f02\u5e38\u91c7\u96c6\u652f\u6301\u7b80\u5355\u914d\u7f6e\uff1aExceptionTrace Setting Jaeger \uff1a\u4f9d\u8d56\u4e8e Opentelemetry \u5e95\u5c42\u5b9e\u73b0\uff0c\u652f\u6301\u5c3e\u90e8\u91c7\u6837\uff0c\u5f02\u5e38\u91c7\u6837\uff0c\u8fc7\u6ee4\u89c4\u5219\u91c7\u6837\u7b49 https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/tailsamplingprocessor Datadog \u3001\u817e\u8baf\u4e91\u3001\u963f\u91cc Arms\uff1aAPM \u90fd\u6709\u57fa\u672c\u91c7\u6837\uff0c\u91c7\u6837\u652f\u6301\u7b56\u7565\u4e5f\u975e\u5e38\u4e30\u5bcc \u4eae\u70b9\uff1a\u8fd8\u8fdb\u4e00\u6b65\u652f\u6301\u4e30\u5bcc\u7684 DB\u3001RUM\uff08\u524d\u7aef\u91c7\u6837\uff09 \u7b80\u5355\u770b\u4e00\u4e2a\u817e\u8baf\u4e91\u4e0b\u9762 APM \u91c7\u6837\u914d\u7f6e\u3002","title":"4 \u6570\u636e\u91c7\u6837"},{"location":"chap_apm/4apm_prod/#5-agent","text":"\u8003\u8651\u6211\u4eec\u4e1a\u52a1\u7cfb\u7edf\u5728\u4e0d\u540c\u8bed\u8a00\u5f00\u53d1\u3001\u4e0d\u540c\u64cd\u4f5c\u73af\u5883\u4e0b\u8fd0\u884c\u3002\u800c\u4e14\uff0c\u968f\u7740\u4e91\u539f\u751f\u548c\u5fae\u670d\u52a1\u7684\u53d1\u5c55\uff0c\u73b0\u5728\u4e1a\u52a1\u7cfb\u7edf\u4e5f\u9010\u6b65\u90e8\u7f72\u5728\u5bb9\u5668\u548c\u670d\u52a1\u7f51\u683c\u4e2d\u3002\u8fd9\u589e\u52a0\u4e86 APM \u4ea7\u54c1\u7684\u6280\u672f\u96be\u5ea6\uff0c\u5b9e\u9645\u60c5\u51b5\uff1a\u5f88\u591a APM \u90fd\u652f\u6301\u4e0d\u4e86\u6240\u6709\u573a\u666f\uff0c\u53ea\u80fd Case By Case \u8003\u91cf\u3002 \u56e0\u4e3a APM \u666e\u904d\u901a\u8fc7 Agent \u65b9\u5f0f\u91c7\u96c6\u94fe\u8def\u6570\u636e\u3002\u5982\u679c\u8981\u770b APM \u4ea7\u54c1\u662f\u5426\u652f\u6301\u4f60\u7684\u4e1a\u52a1\u7cfb\u7edf\uff0c\u6700\u76f4\u63a5\u65b9\u5f0f\u770b Agent \u7aef\u5b9e\u73b0\u80fd\u529b\u4e86\u3002","title":"5 Agent \u80fd\u529b"},{"location":"chap_apm/4apm_prod/#5-1","text":"Pinpoint \u867d\u7136\u56fd\u5185 Java \u7cfb\u7edf\u6709\u4e00\u5b9a\u4f7f\u7528\u91cf\u3002\u4f46\u662f Pinpoint \u63a2\u9488\u5347\u7ea7\u6162\uff0c\u6700\u8fd1\u5feb\u534a\u5e74\u6ca1\u6709\u5347\u7ea7\u3002\u6700\u65b0 Java \u4e3b\u6d41\u4e2d\u95f4\u4ef6\u5f88\u591a\u4e0d\u652f\u6301\uff0c\u5bf9\u4e8e Kubernetes\u3001Istio \u8fd8\u652f\u6301\u4e0d\u4e86\u3002 \u542c\u4e91\u5f88\u4e45\u6ca1\u7ef4\u62a4\uff0c\u6700\u65b0 Java \u63a2\u9488\u662f 2020 \u5e74\u505a\u4e86\u66f4\u65b0\u3002Kubernetes\u3001Istio \u4e0a\u4e0d\u4e86\u751f\u4ea7\u73af\u5883 #### 2020-09-04 *Version:2.7.1* 1.\u91cd\u6784Webflux\u63d2\u4ef6\uff0c\u652f\u6301Spring Webflux 5.0.7.RELEASE ~ 5.2.8.RELEASE Skywalking \u5e73\u5747\u4e24\u4e2a\u6708\u4e00\u4e2a\u5468\u671f\uff0c\u4e3b\u8981\u652f\u6301 Java \u4e3b\u6d41\u4e2d\u95f4\u4ef6\u7248\u672c\u5347\u7ea7\u3001\u5b83\u5bf9 Kubenetes\u3001Istio \u6210\u719f\u7684\u652f\u6301\uff0c\u8fed\u4ee3\u517c\u5bb9\u4e0d\u540c\u6700\u65b0\u7248\u672c\u3002Python\u3001Go \u4e5f\u5f00\u59cb\u505a\u4e86\u652f\u6301\u3002 Istio \u6700\u65b0\u7248\u672c\u652f\u6301\uff1aIstio 1.10.3\u30011.11.4\u30011.12.0 release Java \u6700\u65b0\u7248\u672c\u652f\u6301\uff1aJDK 16\u300117","title":"5-1 \u5f00\u6e90\u4ea7\u54c1"},{"location":"chap_apm/4apm_prod/#5-2","text":"https://github.com/DataDog/dd-trace-java/releases \u6211\u603b\u7ed3\u6700\u8fd1\u4e00\u4e2a\u6708\uff0cDatadog Agent \u505a\u4e86\u4e00\u4e9b\u91cd\u8981\u66f4\u65b0\uff1a \u652f\u6301SAP\u7684\u94fe\u8def\u8ffd\u8e2a\uff1aEnable tracing of SAP's HANA in-memory DB \u652f\u6301 MQ \u4e2d\u95f4\u4ef6 Kafka \u6570\u636e\u6d41\u76d1\u63a7\uff1aData streams monitoring for Kafka \u652f\u6301\u6700\u65b0 Apache HttpClient 5 \u76d1\u63a7\uff1aApache HttpClient 5 instrumentation \u4eae\u70b9\uff1a\u5f00\u6e90\u7684 Skywalking\u3001\u5546\u4e1a\u7684 Datadog \u5728\u4e3b\u6d41\u7684\u7ec4\u4ef6\u76d1\u63a7\u652f\u6301\u4e0a\u4e0b\u4e86\u529f\u592b\uff0c\u800c\u4e14\u5bf9\u4e91\u539f\u751f\u4e0a Kubernetes \u5bb9\u5668\u548c Istio \u4e5f\u6210\u719f\u8fd0\u7528\u5230\u751f\u4ea7\u73af\u5883\uff0c\u8fd9\u662f\u5927\u90e8\u5206\u5176\u4ed6APM\u4ea7\u54c1\u6ca1\u6709\u505a\u5230\u7684\u3002 \u63a8\u8350\uff1a\u4ece\u8fd9\u4e9b\u65b9\u9762\u770b\uff0c\u5982\u679c\u4f60\u7684\u4e1a\u52a1\u7cfb\u7edf\u4e0d\u662f\u4e3b\u6d41\u7684 APM \u76d1\u63a7\u5bf9\u8c61\uff0c\u6bd4\u5982\u91c7\u7528 .Net \u8bed\u8a00\u5f00\u53d1\uff0c\u6216\u8005\u7528\u5230\u4e86 SAP \u516c\u53f8\u7684 IT \u7cfb\u7edf\uff0c\u90a3\u4e48\u4f60\u8003\u8651\u7684\u6700\u91cd\u8981\u4f18\u5148\u7ea7\u662f\u54ea\u4e9b APM \u80fd\u771f\u6b63\u652f\u6301\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u4f60\u7684\u4e1a\u52a1\u7cfb\u7edf\u7528\u5230\u4e86\u6700\u65b0\u7684\u4e00\u4e9b\u7ec4\u4ef6\u7248\u672c\u6216\u8005\u8bed\u8a00\u6846\u67b6\uff0c\u6bd4\u5982 Java \u7528\u4e86\u6700\u65b0\u7248\u672c\uff0c\u90a3\u5f88\u591a\u5f00\u6e90 APM \u662f\u6ca1\u6709\u53bb\u8fed\u4ee3\u66f4\u65b0\u7684\u3002","title":"5-2 \u5546\u4e1a\u4ea7\u54c1"},{"location":"chap_apm/4apm_prod/#5-3","text":"\u6bd5\u7adf\u5546\u4e1a\u7aef\u7684 APM \u6709\u66f4\u591a\u6280\u672f\u50a8\u5907\uff0c\u548c\u4e13\u6ce8\u80fd\u529b\u53bb\u517c\u5bb9\u66f4\u591a\u7684\u7ec4\u4ef6\u3002\u5f53\u7136\u5728\u751f\u4ea7\u73af\u5883\uff0c\u4e00\u4e9b\u516c\u53f8\u7528\u4e86\u5f00\u6e90\uff0c\u501f\u52a9\u672c\u8eab\u6280\u672f\u80fd\u529b\uff0c\u91c7\u7528\u81ea\u7814\u65b9\u5f0f\uff0c\u505a\u4e86\u4e00\u4e9b\u4e2a\u6027\u5316\u76d1\u63a7\u7684\u6280\u672f\u65b9\u6848\u3002\u5230\u5e95\u662f\u5f00\u6e90\u8fd8\u662f\u5546\u4e1a\uff0c\u6700\u6838\u5fc3\u662f\u770b\u6027\u4ef7\u6bd4\u3002\u5982\u679c\u4f60\u786e\u5b9e\u81ea\u7814\u4e0d\u4e86\uff0c\u5f00\u6e90\u4e5f\u4e0d\u80fd\u652f\u6301\u516c\u53f8\u67d0\u4e9b\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8003\u8651\u5546\u4e1a APM \u4ea7\u54c1\u4e5f\u662f\u4e00\u79cd\u9009\u62e9\u3002","title":"5-3 \u603b\u7ed3"},{"location":"chap_apm/4apm_prod/#6","text":"\u544a\u8b66\u7ba1\u7406\u63d0\u4f9b\u4e86\u53ef\u9760\u7684\u544a\u8b66\u6536\u655b\u3001\u901a\u77e5\uff0c\u5e2e\u52a9\u4e1a\u52a1\u7cfb\u7edf\u5feb\u901f\u68c0\u6d4b\u548c\u4fee\u590d\u4e1a\u52a1\u544a\u8b66\u3002 \u544a\u8b66\u7ba1\u7406\u4ece\u529f\u80fd\u4e0a\uff0c\u5305\u542b\u57fa\u672c\u529f\u80fd\uff1a \u6dfb\u52a0\u76d1\u63a7\u4e8b\u4ef6\u3001\u914d\u7f6e\u544a\u8b66\u3001\u544a\u8b66\u63a8\u9001 \u3002 \u5728\u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u4e00\u65b9\u9762\u4e1a\u52a1\u7cfb\u7edf\u5f80\u5f80\u590d\u6742\uff0c\u670d\u52a1\u4f17\u591a\uff0c\u7b80\u5355\u4e00\u4e2a\u4e2a\u6dfb\u52a0\u76d1\u63a7\u4e8b\u4ef6\uff0c\u4f1a\u5bfc\u81f4\u8fd0\u7ef4\u5de5\u4f5c\u91cf\u9aa4\u589e\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4e1a\u52a1\u544a\u8b66\u4e0d\u5149\u8981\u53ca\u65f6\u63a8\u9001\uff0c\u4e5f\u9700\u8981\u63d0\u4f9b\u8db3\u591f\u4e30\u5bcc\u7684\u62a5\u8b66\u6570\u636e\u548c\u53cb\u597d\u53ef\u89c6\u5316\u5c55\u793a\uff0c\u8ba9 IT \u4eba\u5458\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u548c\u4fee\u590d\u6545\u969c\u3002 \u4ece\u8fd9\u4e9b\u7ef4\u5ea6\uff0c\u5f88\u591a APM \u63d0\u4f9b\u4e86\u544a\u8b66\u9ad8\u7ea7\u529f\u80fd\uff1a \u544a\u8b66\u6a21\u677f\uff0c\u914d\u7f6e\u544a\u8b66\u81ea\u52a8\u5316\uff0c\u66f4\u53cb\u597d\u7684\u544a\u8b66\u754c\u9762 \u3002 \u6211\u4eec\u770b\u770b\u4e3b\u6d41APM\u5177\u4f53\u5bf9\u544a\u8b66\u652f\u6301\uff1a Skywalking \u544a\u8b66\u901a\u8fc7\u811a\u672c\u914d\u7f6e\uff1a https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/backend-alarm.md Skywalking \u62a5\u8b66\u754c\u9762\u4e0d\u592a\u53cb\u597d\uff0c\u67e5\u770b\u62a5\u8b66\u548c\u6dfb\u52a0\u62a5\u8b66\u4e8b\u4ef6\u6bd4\u8f83\u9ebb\u70e6\u3002 \u4e0d\u8fc7 Skywalking \u544a\u8b66\u6d88\u606f\u63a8\u9001\u6e90\u6bd4\u8f83\u4e30\u5bcc\uff0c\u6bd4\u5982\u98de\u4e66\u3001\u9489\u9489\u3001Slack\u3002 \u8fd8\u5f00\u653e\u544a\u8b66 hook\uff0c\u8fd9\u6837\u5f00\u53d1\u8005\u57fa\u4e8e\u81ea\u5b9a\u4e49\u66f4\u591a\u544a\u8b66\u63a8\u52a8\u6e90\u3002 Pinpoint \u57fa\u672c\u544a\u8b66\u6a21\u677f\u5e93\u3001\u505a\u4e86\u544a\u8b66\u6d88\u606f\u7b80\u5355\u5206\u7ec4\uff0c\u4f46\u662f\u4e0d\u5f00\u653e\u81ea\u5b9a\u4e49\u544a\u8b66\u6e90\uff0c\u6709\u7b80\u5355\u6a21\u677f\u3002 \u6bd4\u8d77\u5f00\u6e90 APM\uff0c\u5546\u4e1a\u5316 APM \u544a\u8b66\u9ad8\u7ea7\u529f\u80fd\u6bd4\u8f83\u5f3a\u4e86\u3002 \u6211\u4eec\u770b\u770b Datadog\u3001\u56fd\u5185\u89c2\u6d4b\u4e91\u3001\u963f\u91cc\u4e91 Arms \u7684\u9ad8\u7ea7\u529f\u80fd\uff1a \u544a\u8b66\u6a21\u677f\u5e93\uff1a\u4e30\u5bcc\u7684\u544a\u8b66\u6a21\u677f\uff0c\u4e0d\u7528\u81ea\u5df1\u624b\u52a8\u521b\u5efa \u76d1\u63a7\u914d\u7f6e\u66f4\u52a0\u81ea\u52a8\u5316\uff0c\u6bd4\u5982\u4e0b\u9762\u5bf9 MySQL \u544a\u8b66\uff0c\u901a\u8fc7\u7075\u6d3b\u7684\u76d1\u63a7\u9600\u503c\u548c\u6307\u6807\u914d\u7f6e\uff0c\u53ef\u4ee5\u5f88\u5feb\u901f\u548c\u5b9e\u7528\u505a\u5230\u76d1\u63a7\u3002\u8fd9\u4e2a\u6bd4\u8d77\u7eaf\u811a\u672c\u65b9\u5f0f\uff0c\u6781\u5927\u8282\u7ea6\u4e86\u7cfb\u7edf\u8fd0\u7ef4\u7684\u5de5\u4f5c\u91cf\u3002\u5f53\u7136\uff0c\u8981\u63d0\u4f9b\u8fd9\u6837\u7684\u9ad8\u7ea7\u529f\u80fd\uff0c\u5bf9 APM \u4ea7\u54c1\u5f00\u53d1\u6295\u5165\u4e5f\u662f\u5f88\u5927\u7684\u3002 \u53cb\u597d\u7684\u544a\u8b66\u5927\u5c4f\uff1a\u8986\u76d6\u6574\u4e2a IT \u7cfb\u7edf\u7684\u544a\u8b66\u72b6\u51b5\uff0c\u901a\u8fc7\u94bb\u53d6\u67e5\u770b\u5177\u4f53\u67d0\u9879\u670d\u52a1 \u76f8\u6bd4\u4e8e\u5546\u4e1a\u7684 APM \u624d\u80fd\u5177\u5907\u9ad8\u7ea7\u529f\u80fd\uff0c\u5f00\u6e90\u4ea7\u54c1\u9650\u4e8e\u8d44\u6e90\u6709\u9650\uff0c\u5f88\u96be\u628a\u544a\u8b66\u80fd\u591f\u505a\u5230\u5982\u6b64\u3002\u76ee\u524d\uff0c\u4ece\u5f00\u6e90\u4e0a\u80fd\u591f\u628a\u544a\u8b66\u505a\u5f97\u8fd9\u6837\u63a5\u8fd1\u7684\uff0c\u53ef\u4ee5\u770b\u770b\u56fd\u5185\u7684\u4e13\u95e8\u505a\u76d1\u63a7\u62a5\u8b66\u7684\u591c\u83ba\u56e2\u961f\uff0c\u5f00\u6e90\u76d1\u63a7\u4ea7\u54c1 Nightingale\uff0c\u539f\u6765 Open-falcon \u7684\u524d\u8eab\uff0c\u5728\u56fd\u5185\u4e5f\u662f\u6709\u4f17\u591a\u7684\u62e5\u62a4\u8005\u3002 https://n9e.gitee.io/usage/ \u544a\u8b66\u7ba1\u7406\u5bf9\u5e94 APM \u662f\u4e00\u4e2a\u76f8\u5bf9\u91cd\u8981\u529f\u80fd\uff0c\u5c3d\u7ba1\u5546\u4e1a APM \u8fdc\u597d\u4e8e\u5f00\u6e90\u4ea7\u54c1\uff0c\u6bd5\u7adf\u4ed8\u8d39\u3002\u6240\u4ee5\u5927\u5bb6\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u9009\u578b\u8fd8\u662f\u575a\u6301\u6027\u4ef7\u6bd4\uff0c\u4f60\u8981\u770b\u770b\u516c\u53f8\u4e1a\u52a1\u7cfb\u7edf\u5bf9\u8fd9\u4e9b\u9ad8\u7ea7\u529f\u80fd\u7684\u8feb\u5207\u6027\u548c\u6295\u5165\u4ef7\u503c\u3002\u786e\u5b9e\u6709\u4e00\u4e9b\u516c\u53f8\u4e5f\u5728\u5f00\u6e90\u57fa\u7840\u4e0a\u81ea\u7814\u4e86\u8fd9\u4e9b\u9ad8\u7ea7\u529f\u80fd\u3002","title":"6 \u544a\u8b66\u7ba1\u7406\u80fd\u529b"},{"location":"chap_apm/4apm_prod/#7-db","text":"\u6570\u636e\u5e93\u662f\u4e1a\u52a1\u7cfb\u7edf\u91cc\u9762\u975e\u5e38\u6838\u5fc3\u7ec4\u4ef6\uff0c\u751f\u4ea7\u73af\u5883\u5e38\u5e38\u53ef\u80fd\u56e0\u4e3a\u6570\u636e\u5e93\u627f\u8f7d\u80fd\u529b\u51fa\u73b0\u6027\u80fd\u95ee\u9898\uff0c\u6700\u5e38\u89c1\u7684\u4f8b\u5b50\u5c31\u662f\u6162\u67e5\u8be2\u3002 \u901a\u8fc7 APM \u53ef\u4ee5\u770b\u5230\u5b8c\u6574\u6162\u67e5\u8be2 SQL \u8bed\u53e5\u548c\u8017\u65f6\uff0c\u4e5f\u53ef\u4ee5\u505a\u6162\u67e5\u8be2\u548c\u5176\u4ed6\u6570\u636e\u5e93 \u5f02\u5e38\u6307\u6807\u544a\u8b66\uff0c\u8fd9\u6837\u5feb\u901f\u5b9a\u4f4d\u6570\u636e\u5e93\u6027\u80fd\u6545\u969c \u3002\u6570\u636e\u5e93\u652f\u6301\u5b9e\u7528\u5ea6\u4f53\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\u3002 SQL \u8c03\u7528\u94fe\u4f20\u53c2\u5b8c\u6574\u663e\u793a\uff0c\u6bd4\u5982 Skywalking\uff0c\u901a\u8fc7\u914d\u7f6e\uff0c\u770b\u5230\u7684\u5b8c\u6574SQL\uff1a SQL\u4f20\u53c2\u663e\u793a\u6548\u679c \u652f\u6301\u6162\u67e5\u8be2\u548c\u76f8\u5173\u6027\u80fd\u6307\u6807\u7684\u91c7\u96c6\u548c\u5c55\u793a\uff0c\u6bd4\u5982\u542c\u4e91\u6162\u67e5\u8be2\u5206\u6790\uff0c\u5b83\u63d0\u4f9b\u652f\u6301\u6570\u636e\u5e93 Oracle\u3001MySQL\u3001MS SQL Server\u3002 \u521a\u624d\u63d0\u5230\u4e24\u4e2a\u6838\u5fc3\u7ef4\u5ea6\uff0c\u6709\u7684 APM \u4f1a\u6709\u4e0d\u652f\u6301\u7684\u60c5\u51b5\uff1a\u5404\u79cd\u6570\u636e\u5e93\u6bd4\u8f83\u591a\uff0c\u8981\u770b\u5177\u4f53\u8bf4\u660e\u3002 \u6574\u4f53\u770b\uff0cDB \u76d1\u63a7\u53cb\u597d\u6027\u8fd8\u662f\u4f53\u73b0\u7ec6\u8282\u65b9\u9762\uff0c\u6bd4\u5982\u6709\u4e9b APM \u63d0\u4f9b\u56fe\u5f62\u5316\u754c\u9762\u52a8\u6001\u914d\u7f6e\u6162\u67e5\u8be2\u548c\u62a5\u8b66\uff0c\u7684\u786e\u8fd0\u7ef4\u4f7f\u7528\u4e0a\u4f1a\u5927\u5927\u4fbf\u5229\u3002 \u6240\u4ee5\uff0c\u751f\u4ea7\u73af\u5883\u4e0b\u4f7f\u7528 APM \u5bf9 DB \u76d1\u63a7\u66f4\u591a\u8003\u8651\u6548\u7387\u7684\u95ee\u9898\u3002 \u4e00\u822c\u573a\u666f Pinpoint\u3001Skywalking \u8db3\u591f\u7528\u3002","title":"7 \u5bf9 DB \u7684\u652f\u6301"},{"location":"chap_apm/4apm_prod/#8-kubernetes-istio","text":"\u5bf9\u5e94 Kubernetes\u3001Istio \u7684\u4ef7\u503c\u672c\u6587\u4e2d\u4e0d\u518d\u8d58\u8ff0\uff0c\u5728\u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u80fd\u771f\u6b63\u652f\u6301\u597d Kubernetes\u3001Istio \u7684 APM \u786e\u5b9e\u4e0d\u591a\uff0c\u5f88\u591a\u8fc7\u53bb\u4e3b\u6d41\u7684 APM \u90fd\u4e0d\u652f\u6301\u7684\uff0c\u751a\u81f3\u662f\u4e00\u4e9b\u5546\u4e1a\u7684 APM \u4ea7\u54c1\u3002 Pinpoint \u76ee\u524d\u6700\u65b0\u5f00\u59cb\u652f\u6301 Kubernetes\uff0c\u4e0d\u8fc7\u5230\u4e0d\u4e86\u751f\u4ea7\u73af\u5883\uff0cIstio \u5b8c\u5168\u4e0d\u652f\u6301\u3002 https://github.com/pinpoint-apm/pinpoint-kubernetes/issues Skywalking \u5728 Kubernetes\u3001Istio \u53ef\u89c2\u6d4b\u652f\u6301\u975e\u5e38\u6210\u719f\u3002 \u8fd9\u662f Skywalking \u5f88\u5927\u4eae\u70b9\uff0c\u800c\u4e14 Skywalking \u5bf9\u4ed6\u4eec\u652f\u6301\u6709\u4e00\u5b9a\u65f6\u95f4\uff0c\u8d9f\u8fc7\u5f88\u591a\u5751\u3002 \u4e4b\u524d\u751f\u4ea7\u73af\u5883\uff0cIstio \u672c\u8eab\u6027\u80fd\u7f3a\u9677\uff0cSkywalking \u505a\u4e86\u5f88\u591a\u4f18\u5316\uff1a \u6bd4\u5982\u8bf4 Skywalking \u4ece Istio \u6027\u80fd\u5f88\u5dee\u7684 Mixer \u65b9\u6848\u9010\u6e10\u8fc1\u79fb\u5230 Envoy \u7684 Access Log Service\uff0c\u4ee5\u89e3\u51b3\u670d\u52a1\u7f51\u683c\u89c2\u5bdf\u7684\u6027\u80fd\u74f6\u9888\u3002\u66f4\u591a\uff0c\u53c2\u8003\u8fd9\u7bc7\u5e72\u8d27\uff1a https://www.tetrate.io/blog/observe-service-mesh-with-skywalking-and-envoy-access-log-service/ Datadog Kubernetes\u3001Istio \u652f\u6301\u5f88\u5f3a\u608d\u4e86\u3002 \u6bd4\u5982\u652f\u6301\u7075\u6d3b\u7684\u65e5\u5fd7\u8fc7\u6ee4\u7ba1\u7406\uff0c\u53ef\u4ee5\u4f18\u5316 Kubernetes \u4e0b\u65e5\u5fd7\u7684\u91c7\u96c6\u7b56\u7565\u3002 https://docs.datadoghq.com/agent/logs/advanced_log_collection/?tab=kubernetes#filter-logs Datadog \u57fa\u4e8e Pod \u53bb\u7ba1\u7406\u5bb9\u5668\u8282\u70b9\u7684\u94fe\u8def\u8ffd\u8e2a\uff0c\u53ef\u4ee5\u652f\u6301 name\u3001image\u3001kube_namespace \u8fd9\u4e9b\u7c92\u5ea6\u7ba1\u7406\uff0c\u53ef\u8c13\u76f8\u5f53\u901a\u7528\u3002 Istio \u4e5f\u6709\u4e30\u5bcc\u652f\u6301\uff0c\u66b4\u9732\u5f88\u591a Envoy \u76d1\u63a7\u6307\u6807\uff1a https://docs.datadoghq.com/integrations/envoy","title":"8 Kubernetes \u548c Istio \u7684\u652f\u6301"},{"location":"chap_apm/4apm_prod/#9","text":"","title":"9 \u793e\u533a\u548c\u6587\u6863\u6210\u719f\u5ea6"},{"location":"chap_apm/4apm_prod/#9-1","text":"Skywalking\u3001Datadog\u3001Arms \u6587\u6863\u975e\u5e38\u5b8c\u6574\u4e30\u5bcc\uff0c\u540c\u65f6\u5728\u7f51\u4e0a\u641c\u7d22\u4e00\u4e9b\u95ee\u9898\uff0c\u90fd\u80fd\u627e\u5230\u5408\u9002\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8fd9\u70b9\u5bf9\u4e8e\u7ef4\u62a4\u8005\u6765\u8bf4\u662f\u975e\u5e38\u6709\u4ef7\u503c\u7684\u3002 \u4e0d\u8fc7 Arms \u6587\u6863\u76f4\u89c2\u663e\u5f97\u6bd4\u8f83\u51cc\u4e71\uff0c\u6bd5\u7adf\u5b83\u662f\u5f88\u591a\u56e2\u961f\uff0c\u4e0d\u540c\u5b50\u7cfb\u7edf\u96c6\u6210\u800c\u6765\uff0c\u7565\u5fae\u81c3\u80bf\u3002 \u50cf Skywalking \u5f00\u6e90\u4ea7\u54c1\u505a\u4e86\u4e00\u4e9b APM \u6280\u672f\u5e03\u9053\uff0c\u641c\u7d22\u7f51\u4e0a\u5f88\u591a\u94fe\u8def\u8ffd\u8e2a\u6280\u672f\u6587\u7ae0\u90fd\u6765\u4e8e\u4ed6\u4eec\uff0c\u8fd9\u662f\u5f00\u6e90\u793e\u533a\u7684\u4e00\u4e9b\u8d21\u732e\u3002 \u5b8c\u6574\u3001\u9ad8\u8d28\u91cf\u6280\u672f\u6587\u6863\u5bf9\u5e94\u4f7f\u7528\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u4f5c\u7528\u5f53\u7136\u4e0d\u8a00\u800c\u55bb\u3002\u53e6\u5916\u4e00\u9762\uff0c\u597d\u7684\u4ea7\u54c1\u6587\u6863\uff0c\u6709\u52a9\u4e8e\u6211\u4eec\u66f4\u591a\u4e86\u89e3\u5185\u90e8\u8fd0\u884c\u539f\u7406\u3002 \u63a8\u8350\u603b\u7ed3\uff1a\u4e0a\u751f\u4ea7\u73af\u5883\uff0c\u6211\u4eec\u5f80\u5f80\u5e0c\u671b\u9762\u5bf9\u7cfb\u7edf\u662f\u53ef\u63a7\u7684\uff0c\u5b8c\u5584\u3001\u6210\u719f\u7684\u6280\u672f\u6587\u6863\u5bf9\u4e8e\u9009\u578b\u6765\u8bf4\u662f\u4e00\u4e2a\u5f88\u57fa\u672c\u7684\u8981\u6c42\u3002\u5f00\u6e90\u8fd8\u6709\u597d\u5904\u5728\u4e8e\u4ee3\u7801\u5f00\u653e\u6027\uff0c\u4e0d\u7528\u62c5\u5fc3\u9ed1\u76d2\u60c5\u51b5\u4e0a\u4e00\u4e2a\u76d1\u63a7\uff0c\u5982\u679c\u56e2\u961f\u6280\u672f\u80fd\u529b\u8db3\u591f\u5f3a\uff0c\u4e5f\u80fd\u81ea\u5df1 fixed \u6216\u8005\u4f18\u5316\u95ee\u9898\u3002","title":"9-1 \u6280\u672f\u6587\u6863"},{"location":"chap_apm/4apm_prod/#9-2","text":"\u5f00\u6e90\u4ea7\u54c1\u4e00\u5927\u4f18\u52bf\u5728\u4e8e\u5f00\u653e\u6027\uff0c\u4e3b\u8981\u4f53\u73b0\u793e\u533a\u548c\u6280\u672f\u652f\u6301\u4e0a\u3002 \u6bd4\u5982Skywalking\u3001Opentelemetry\u3001Pinpoint \u56fd\u5185\u90fd\u6709\u6d3b\u8dc3\u7684\u793e\u7fa4\uff1a","title":"9-2 \u793e\u533a\u751f\u6001"},{"location":"chap_apm/5apm_Sentry/","text":"\u7b2c\u4e94\u8282 Sentry+OpenTelemetry\u524d\u540e\u7aef\u5168\u94fe\u8def\u6253\u901a \u81ea\u4ece\u5fae\u670d\u52a1\u5927\u884c\u5176\u9053\uff0c\u5bb9\u5668\u5316\u548ck8s\u7f16\u6392\u4e00\u7edf\u5929\u4e0b\u4e4b\u540e\uff0c\u201c\u53ef\u89c2\u6d4b\u6027\u201d \u4fbf\u88ab\u63d0\u51fa\u6765\u3002\u8fd9\u4e2a\u6982\u5ff5\u662f\u6307\uff0c\u5bf9\u4e8e\u5e94\u7528\u6216\u8005\u5bb9\u5668\u7684\u8fd0\u884c\u72b6\u51b5\u7684\u638c\u63a7\u7a0b\u5ea6\uff0c\u5176\u4e2d\u5206\u4e3a\u4e86\u4e09\u4e2a\u6a21\u5757\uff1a Metrics \u3001 Tracing \u3001 Logging \u3002 Metrics \u6307\u5e94\u7528\u91c7\u96c6\u7684\u6307\u6807 \uff1b Tracing \u6307\u5e94\u7528\u7684\u8ffd\u8e2a\uff1bLogging \u6307\u5e94\u7528\u7684\u65e5\u5fd7 \u3002 \u65e5\u5fd7\u81ea\u4e0d\u7528\u591a\u8bf4\uff0c\u8fd9\u662f\u6700\u539f\u59cb\u7684\u8c03\u8bd5\u548c\u6570\u636e\u91c7\u96c6\u80fd\u529b\u3002Metrics \u6bd4\u8f83\u706b\u7684\u65b9\u6848\u5c31\u662f Prometheus + Grafana\uff0c\u601d\u8def\u5c31\u662f\u901a\u8fc7\u5e94\u7528\u5185\u57cb\u5165SDK\uff0c\u9009\u62e9 Pull \u6216\u8005 Push \u7684\u65b9\u5f0f\u5c06\u6570\u636e\u6536\u96c6\u5230 prometheus \u4e2d\uff0c\u7136\u540e\u901a\u8fc7 Grafana \u5b9e\u73b0\u53ef\u89c6\u5316\uff0c\u5f53\u7136\u8fd9\u4e0d\u662f\u672c\u6587\u7684\u91cd\u70b9\u5c31\u6b64\u7565\u8fc7\u3002 Tracing \u4e5f\u5e76\u4e0d\u662f\u53ef\u89c2\u6d4b\u6027\u63d0\u51fa\u540e\u624d\u8bde\u751f\u7684\u6982\u5ff5\uff0c\u5728\u5fae\u670d\u52a1\u5316\u7684\u8fdb\u7a0b\u4e2d\u5c31\u5df2\u7ecf\u6709Google\u7684Dapper\u843d\u5730\u5b9e\u8df5\uff0c\u5e76\u6162\u6162\u5f62\u6210 OpenTracing \u89c4\u8303\uff0c\u8fd9\u4e00\u89c4\u8303\u53c8\u88ab\u591a\u5bb6\u7b2c\u4e09\u65b9\u6846\u67b6\u6240\u652f\u6301\uff0c\u5982 Jaeger\u3001Zipkin \u7b49\u3002 OpenTelemetry \u5c31\u662f\u7ed3\u5408\u4e86 OpenTracing + OpenCensus \u89c4\u8303\uff0c\u7ea6\u5b9a\u5e76\u63d0\u4f9b\u5b8c\u6210\u7684\u53ef\u89c2\u6d4b\u6027\u5957\u4ef6\uff0c\u53ea\u662f\u76ee\u524d\uff082021-12-15\uff09\u7a33\u5b9a\u4e0b\u6765\u7684\u53ea\u6709 Tracing \u8fd9\u4e00\u90e8\u5206\u800c\u5df2\u3002\u5bf9 OpenTelemetry \u53d1\u5c55\u5386\u53f2\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u3002 \u6548\u679c\u9884\u89c8 \u94fe\u8def\u603b\u89c8\uff0c\u5305\u542b\u4e86\u524d\u7aef\u9875\u9762\u7684\u751f\u547d\u5468\u671f + \u6574\u4e2a\u4e86\u94fe\u8def\u91c7\u96c6\u5230\u7684Span\u805a\u5408\u3002 \u524d\u7aef\u9875\u9762\u6307\u6807\u91c7\u96c6\u6982\u89c8\uff0c \u5305\u542b\u4e86\u8be5\u9875\u9762\u751f\u547d\u5468\u671f\u5185\u7684\u52a8\u4f5c\u548c\u65e5\u5fd7\u7b49 \u3002 \u670d\u52a1\u7aef\u94fe\u8def\u7ec6\u8282\uff0c\u5305\u542b\u4e86\u670d\u52a1\u7aef\u94fe\u8def\u91c7\u96c6\u7684\u6807\u7b7e\u548c\u65e5\u5fd7\uff08\u4e8b\u4ef6\uff09\u7b49\u4fe1\u606f \u3002 propagation\u517c\u5bb9jaeger\u6548\u679c\uff0c\u4fdd\u8bc1jaeger\u4fa7\u94fe\u8def\u5b8c\u6574\uff0c\u4f7f\u7528\u4e00\u81f4\u7684 traceId\u68c0\u7d22\u3002\u56e0\u4e3a\u670d\u52a1\u4fa7 sentry \u662f\u6e10\u8fdb\u66f4\u65b0\u7684\uff0c\u56e0\u6b64\u6ca1\u6709\u63a5\u5165\u7684\u5e94\u7528\u5e76\u4e0d\u4f1a\u5c55\u793a\u5728sentry\u4fa7\uff0c \u7b49\u5230\u5b8c\u5168\u66f4\u65b0\u540e\u5c31\u4f1a\u5b8c\u6574\u3002 \u80cc\u666f \u76ee\u524d\u8fd0\u884c\u4e2d\u7684\u94fe\u8def\u8ffd\u8e2a\u7ec4\u4ef6\u662f\u91c7\u7528 opentracing + jaeger \u5b9e\u73b0\uff0c\u8fd9\u5957\u65b9\u6848\u552f\u4e8c\u7684\u4e0d\u8db3\u5c31\u662f\uff1a opentracing \u5df2\u7ecf\u88ab opentelemetry \u517c\u5bb9\uff0c\u4e14 opentelemetry \u5728\u53ef\u89c2\u6d4b\u6027\u4e0a\u66f4\u5168\u9762\uff0c\u66f4\u7075\u6d3b\u3002 \u6d4f\u89c8\u5668\u4fa7\u652f\u6301\u4e0d\u5b8c\u5584\uff08\u53ef\u4ee5\u53c2\u89c1 https://github.com/jaegertracing/jaeger-client-javascript \uff09\u3002 \u524d\u7aef\u91c7\u7528 sentry \u6765\u91c7\u96c6\u524d\u7aef\u9875\u9762\u6570\u636e\uff08APP + WEB \u90fd\u652f\u6301\u5f88\u597d\uff09\uff0c\u56e0\u6b64\u624d\u6709\u4e86\u8fd9\u4e48\u4e00\u4e2a \u524d\u540e\u7aef\u94fe\u8def\u6253\u901a\u7684\u9700\u6c42\u3002\u6253\u901a\u603b\u7ed3/#sentry\u4f5c\u4e3a\u94fe\u8def\u91c7\u96c6\u7ec4\u4ef6\u7684\u4f18\u7f3a\u70b9) \u6700\u5f00\u59cb\u7684\u9700\u6c42\u76ee\u6807\u662f\u540e\u7aef\u76f8\u5173 Tracing SDK \u5168\u90e8\u4f7f\u7528sentry\u66ff\u6362\uff0c\u4f46\u662f\u7ed3\u5408\u4e0a\u8ff0\u5bf9\u4e8esentry\u7684\u8c03\u7814\uff0c\u53d1\u73b0\u76f4\u63a5\u63a5\u5165sentry\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u9009\u62e9\uff1a \u76f8\u5173\u7684 Tracing \u6982\u5ff5\u6ca1\u6709\u88ab\u6211\u4e2a\u4eba\u548c\u793e\u533a\u63a5\u53d7\uff0c\u793e\u533a\u5185\u4e3b\u6d41\u7684\u8fd8\u662f OpenTracing \u548c OpenTeletemetry \u89c4\u8303\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u89c4\u8303\u90fd\u662f\u76f8\u4e92\u517c\u5bb9\u7684\uff08\u4e2a\u4eba\u8ba4\u4e3a\uff1aOpenTelemetry \u5927\u6709\u4e00\u7edf\u53ef\u89c2\u6d4b\u6027\u7684\u8d8b\u52bf\uff0c\u4ed6\u4eec\u7acb\u9879\u4e5f\u662f\u671d\u7740\u8fd9\u4e2a\u65b9\u5411\u524d\u8fdb\uff09\u3002 \u5b98\u65b9go-SDK\u6d3b\u8dc3\u5ea6\u4f4e\u4e4e\u60f3\u8c61\uff0c\u53c2\u89c1 https://github.com/getsentry/sentry-go/issues/387 \u622a\u6b62\u672c\u6587\u65f6\uff08since 2021-10-22\uff09\u4ecd\u7136\u6ca1\u6709\u4efb\u4f55\u56de\u590d\uff0c\u8fdb\u4e00\u6b65\u963b\u6b62\u6211\u76f4\u63a5\u4f7f\u7528sentry\u3002 \u8c03\u7814 OpenTelemetry \u5728\u7814\u7a76\u5b83\u7684\u67b6\u6784\u8bbe\u8ba1\u65f6\uff0c\u53d1\u73b0\u5176\u8bbe\u8ba1\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a Collector\uff08\u8be6\u7ec6\u4ecb\u7ecd\u53c2\u89c1 \u9644\u5f55/OpenTelemetry\u4e2d\u7684\u6982\u5ff5\uff09 \u3002\u4ece\u793a\u610f\u56fe\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u7684\u4f5c\u7528\u8fd1\u4f3c\u4e8e Jaeger Collector / Agent\uff0c\u4f46\u662f\u76f8\u6bd4\u4e8e Jaeger \u5b83\u66f4\u5f00\u653e\uff0c\u652f\u6301\u591a\u79cd Vendor (Jaeger / Zipkin \u7b49\u7b49)\uff0c\u66f4\u52a0\u7075\u6d3b\u3002 \u5982\u679c\u66ff\u6362\u4e86 sentry \u52a0\u5165\u662f\u4e0d\u662f\u4ee5\u540e\u8fd8\u53ef\u80fd\u66f4\u6362\u65b0\u7684\u91c7\u96c6\u7ec4\u4ef6\uff0c\u670d\u52a1\u8fd9\u4e48\u591a\u518d\u6765\u6362\u4e00\u904d\u8fd8\u662f\u8d39\u65f6\u8d39\u529b \u65b9\u6848\u63cf\u8ff0 \u90a3\u4e48\u57fa\u4e8e\u4ee5\u4e0a\u7684\u8003\u8651\uff0c\u8bbe\u8ba1\u4e86\u5982\u4e0b\u7684\u6539\u9020\u65b9\u6848 \u5728\u5e94\u7528\u4fa7 Tracing SDK \u5168\u90e8\u66ff\u6362\u4e3a otel SDK\uff08\u540e\u9762\u7ecf\u8fc7\u8003\u8651\uff0c\u8fd8\u662f\u81ea\u5df1\u505a\u4e86\u4e00\u4e2a\u9632\u8150\u7684 Tracing API\u5c01\u88c5\uff09 \u3002 \u4e3a\u4e86\u4fdd\u8bc1\u6e10\u8fdb\u66f4\u65b0\u670d\u52a1\u7aef\u94fe\u8def\u91c7\u96c6\u7684\u540c\u65f6\uff0c\u5728Jaeger Dashborad\u4e2d\u7684\u94fe\u8def\u4e0d\u65ad\uff0c\u5728 propagator \u5b9e\u73b0 otel \u5230 jaeger \u7684\u8f6c\u6362\u3002 \u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a Sentry Trace Exporter, \u5c06\u5ba2\u6237\u7aef\u4e0a\u62a5\u7684\u94fe\u8def\uff0c\u518d\u6295\u9012\u5230 sentry \u3002 Collector \u914d\u7f6e exporter \u65f6\uff0c\u540c\u65f6\u4e0a\u62a5\u5230 sentry \u548c jaeger https://github.com/yeqown/opentelemetry-quake \u671f\u95f4\u9047\u5230\u7684\u95ee\u9898 \u600e\u4e48\u5b9a\u5236\u81ea\u5df1\u7684 Trace Exporter\uff1f \u4e3b\u8981\u8fd8\u662f\u53c2\u8003 https://github.com/open-telemetry/opentelemetry-collector-contrib \u4ed3\u5e93\u4e2d\u7684\u5b9e\u73b0\u3002Collector \u8bbe\u8ba1\u65f6\u5df2\u7ecf\u8003\u8651\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u6240\u4ee5\u6309\u7167\u5b98\u65b9\u7684\u7ea6\u5b9a\u5f00\u53d1\u5373\u53ef\uff0c\u81f3\u4e8e sentryexporter \u5728\u5b98\u65b9\u4ed3\u5e93\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u6240\u4ee5\u6211\u53ea\u662f\u5b9a\u5236\u5316\u4e86\u4e00\u4e0b\u3002 \u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4f60\u7684collector\u9700\u8981\u4f7f\u7528\u7279\u5b9a\u7684\u63d2\u4ef6\uff0c\u90a3\u4e48\u9700\u8981\u4f7f\u7528\u5b98\u65b9\u7684 https://github.com/open-telemetry/opentelemetry-collector/cmd/builder \u6765\u81ea\u5df1\u5b9a\u5236\u7f16\u8bd1 collector, \u8fd9\u4e00\u70b9\u4e5f\u53ef\u4ee5\u5728\u6211\u63d0\u4f9b\u7684\u5b9e\u8df5\u4ee3\u7801\u4e2d\u627e\u5230\u3002 Collector \u548c Agent \u7684\u5dee\u5f02\uff1f \u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\uff1a\u4e2d\u5fc3\u5316\u548c\u5206\u5e03\u5f0f\u90e8\u7f72\u7684\u533a\u522b\uff0c\u5728\u5b9e\u73b0\u4e0a\u5e76\u6ca1\u6709\u533a\u522b\u3002\u81f3\u4e8e\u4f60\u5e94\u8be5\u4f7f\u7528\u54ea\u79cd\u90e8\u7f72\u65b9\u5f0f\uff0c\u5f53\u7136\u89c6\u4f60\u7684\u96c6\u7fa4\u89c4\u6a21\u800c\u5b9a\uff0c\u5982\u679c\u53ea\u6709\u4e0d\u5230100\u4e2a\u670d\u52a1\u5b9e\u4f8b\uff0c\u4e2a\u4eba\u89c9\u5f97\u4ec5\u4ec5collector\u8db3\u4ee5\uff0c\u76f4\u5230\u4e0d\u8db3\u4ee5\u627f\u8f7d\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u4f60\u96c6\u7fa4\u4e2d\u8282\u70b9\u4f17\u591a\uff0c\u670d\u52a1\u5b9e\u4f8b\u4e5f\u4f17\u591a\uff0c\u90a3\u4e48\u6700\u597d\u4e00\u5f00\u59cb\u5c31\u4e0aagent\u3002 k8s \u4e2d\u5982\u4f55\u4ee5 agent \u65b9\u5f0f\u90e8\u7f72 collector\uff1f \u5b98\u65b9\u4e5f\u5df2\u7ecf\u63d0\u4f9b\u4e86\u6837\u4f8b\u4ee3\u7801\uff0c\u53ef\u4ee5\u53c2\u8003 https://github.com/open-telemetry/opentelemetry-collector/examples/k8s/otel-config.yaml \u3002 \u5927\u81f4\u601d\u8def\u4e3a\uff1a\u901a\u8fc7DaemonSet \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a Collector \u5b9e\u4f8b\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u60f3\u8981\u914d\u7f6e NODE_IP:PORT \u7684\u65b9\u5f0f\u8ba9\u8be5\u8282\u70b9\u4e0a\u7684\u670d\u52a1\u76f4\u8fde agent\uff0c\u90a3\u4e48\u9700\u8981\u5728 otel-config.yaml \u4e2d\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a apiVersion: apps/v1 # .... template: metadata: labels: app: opentelemetry component: otel-agent spec: hostNetwork: true # \u589e\u52a0\u8fd9\u4e00\u884c dnsPolicy: ClusterFirstWithHostNet # \u589e\u52a0\u8fd9\u4e00\u884c containers: # ... \u5f53\u7136\u4e0d\u6b62\u8fd9\u4e48\u4e00\u79cd\u65b9\u5f0f\uff0c\u6bd4\u5982\u8fd8\u53ef\u4ee5\u4f7f\u7528 hostPort, \u89c6\u4f60\u7684k8s\u96c6\u7fa4\u914d\u7f6e\u800c\u5b9a\u3002 sentry\u4f5c\u4e3a\u94fe\u8def\u91c7\u96c6\u7ec4\u4ef6\u7684\u4f18\u7f3a\u70b9 \u7f3a\u70b9: sentry \u7684\u4e3b\u8981\u573a\u666f\u5e76\u4e0d\u662f\u5728\u4e8e\u94fe\u8def\u91c7\u96c6\uff0c\u800c\u662f\u5728\u4e8e\u524d\u7aef\u9875\u9762\u91c7\u96c6\uff08\u9875\u9762\u52a0\u8f7d/\u8def\u5f84/\u65e5\u5fd7\uff09\uff0c\u5305\u62ec\u9875\u9762\u5f02\u5e38\u6570\u636e\uff1b\u4e3b\u8981\u6839\u636e\u5728\u4e8e\u5b83\u72ec\u6709\uff08\u6216\u8bb8\uff09\u7684\u94fe\u8def\u91c7\u96c6\u6982\u5ff5\u3002\u5176\u4e2d\u5e38\u89c1\u7684\u5982\u4e0b\uff1a \u4f18\u70b9: \u5df2\u7ecf\u652f\u6301\u524d\u540e\u7aef\u94fe\u8def\u6253\u901a\uff0c\u96c6\u6210\u5c55\u793a\u524d\u7aef\u9875\u9762\u4e0a\u53d1\u751f\u7684\u4e00\u5207\u884c\u4e3a\u3002 \u5355\u72ec\u5bf9\u5f02\u5e38\u8fdb\u884c\u91c7\u96c6\u548c\u5c55\u793a\u3002 OpenTelemetry\u4e2d\u7684\u6982\u5ff5 \u8fd9\u91cc\u53ea\u662f\u7f57\u5217\u4e86 Tracing \u76f8\u5173\u7684\u6982\u5ff5\uff1a","title":"\u7b2c\u4e94\u8282 Sentry+OpenTelemetry\u524d\u540e\u7aef\u5168\u94fe\u8def\u6253\u901a"},{"location":"chap_apm/5apm_Sentry/#sentryopentelemetry","text":"\u81ea\u4ece\u5fae\u670d\u52a1\u5927\u884c\u5176\u9053\uff0c\u5bb9\u5668\u5316\u548ck8s\u7f16\u6392\u4e00\u7edf\u5929\u4e0b\u4e4b\u540e\uff0c\u201c\u53ef\u89c2\u6d4b\u6027\u201d \u4fbf\u88ab\u63d0\u51fa\u6765\u3002\u8fd9\u4e2a\u6982\u5ff5\u662f\u6307\uff0c\u5bf9\u4e8e\u5e94\u7528\u6216\u8005\u5bb9\u5668\u7684\u8fd0\u884c\u72b6\u51b5\u7684\u638c\u63a7\u7a0b\u5ea6\uff0c\u5176\u4e2d\u5206\u4e3a\u4e86\u4e09\u4e2a\u6a21\u5757\uff1a Metrics \u3001 Tracing \u3001 Logging \u3002 Metrics \u6307\u5e94\u7528\u91c7\u96c6\u7684\u6307\u6807 \uff1b Tracing \u6307\u5e94\u7528\u7684\u8ffd\u8e2a\uff1bLogging \u6307\u5e94\u7528\u7684\u65e5\u5fd7 \u3002 \u65e5\u5fd7\u81ea\u4e0d\u7528\u591a\u8bf4\uff0c\u8fd9\u662f\u6700\u539f\u59cb\u7684\u8c03\u8bd5\u548c\u6570\u636e\u91c7\u96c6\u80fd\u529b\u3002Metrics \u6bd4\u8f83\u706b\u7684\u65b9\u6848\u5c31\u662f Prometheus + Grafana\uff0c\u601d\u8def\u5c31\u662f\u901a\u8fc7\u5e94\u7528\u5185\u57cb\u5165SDK\uff0c\u9009\u62e9 Pull \u6216\u8005 Push \u7684\u65b9\u5f0f\u5c06\u6570\u636e\u6536\u96c6\u5230 prometheus \u4e2d\uff0c\u7136\u540e\u901a\u8fc7 Grafana \u5b9e\u73b0\u53ef\u89c6\u5316\uff0c\u5f53\u7136\u8fd9\u4e0d\u662f\u672c\u6587\u7684\u91cd\u70b9\u5c31\u6b64\u7565\u8fc7\u3002 Tracing \u4e5f\u5e76\u4e0d\u662f\u53ef\u89c2\u6d4b\u6027\u63d0\u51fa\u540e\u624d\u8bde\u751f\u7684\u6982\u5ff5\uff0c\u5728\u5fae\u670d\u52a1\u5316\u7684\u8fdb\u7a0b\u4e2d\u5c31\u5df2\u7ecf\u6709Google\u7684Dapper\u843d\u5730\u5b9e\u8df5\uff0c\u5e76\u6162\u6162\u5f62\u6210 OpenTracing \u89c4\u8303\uff0c\u8fd9\u4e00\u89c4\u8303\u53c8\u88ab\u591a\u5bb6\u7b2c\u4e09\u65b9\u6846\u67b6\u6240\u652f\u6301\uff0c\u5982 Jaeger\u3001Zipkin \u7b49\u3002 OpenTelemetry \u5c31\u662f\u7ed3\u5408\u4e86 OpenTracing + OpenCensus \u89c4\u8303\uff0c\u7ea6\u5b9a\u5e76\u63d0\u4f9b\u5b8c\u6210\u7684\u53ef\u89c2\u6d4b\u6027\u5957\u4ef6\uff0c\u53ea\u662f\u76ee\u524d\uff082021-12-15\uff09\u7a33\u5b9a\u4e0b\u6765\u7684\u53ea\u6709 Tracing \u8fd9\u4e00\u90e8\u5206\u800c\u5df2\u3002\u5bf9 OpenTelemetry \u53d1\u5c55\u5386\u53f2\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u3002","title":"\u7b2c\u4e94\u8282 Sentry+OpenTelemetry\u524d\u540e\u7aef\u5168\u94fe\u8def\u6253\u901a"},{"location":"chap_apm/5apm_Sentry/#_1","text":"\u94fe\u8def\u603b\u89c8\uff0c\u5305\u542b\u4e86\u524d\u7aef\u9875\u9762\u7684\u751f\u547d\u5468\u671f + \u6574\u4e2a\u4e86\u94fe\u8def\u91c7\u96c6\u5230\u7684Span\u805a\u5408\u3002 \u524d\u7aef\u9875\u9762\u6307\u6807\u91c7\u96c6\u6982\u89c8\uff0c \u5305\u542b\u4e86\u8be5\u9875\u9762\u751f\u547d\u5468\u671f\u5185\u7684\u52a8\u4f5c\u548c\u65e5\u5fd7\u7b49 \u3002 \u670d\u52a1\u7aef\u94fe\u8def\u7ec6\u8282\uff0c\u5305\u542b\u4e86\u670d\u52a1\u7aef\u94fe\u8def\u91c7\u96c6\u7684\u6807\u7b7e\u548c\u65e5\u5fd7\uff08\u4e8b\u4ef6\uff09\u7b49\u4fe1\u606f \u3002 propagation\u517c\u5bb9jaeger\u6548\u679c\uff0c\u4fdd\u8bc1jaeger\u4fa7\u94fe\u8def\u5b8c\u6574\uff0c\u4f7f\u7528\u4e00\u81f4\u7684 traceId\u68c0\u7d22\u3002\u56e0\u4e3a\u670d\u52a1\u4fa7 sentry \u662f\u6e10\u8fdb\u66f4\u65b0\u7684\uff0c\u56e0\u6b64\u6ca1\u6709\u63a5\u5165\u7684\u5e94\u7528\u5e76\u4e0d\u4f1a\u5c55\u793a\u5728sentry\u4fa7\uff0c \u7b49\u5230\u5b8c\u5168\u66f4\u65b0\u540e\u5c31\u4f1a\u5b8c\u6574\u3002","title":"\u6548\u679c\u9884\u89c8"},{"location":"chap_apm/5apm_Sentry/#_2","text":"\u76ee\u524d\u8fd0\u884c\u4e2d\u7684\u94fe\u8def\u8ffd\u8e2a\u7ec4\u4ef6\u662f\u91c7\u7528 opentracing + jaeger \u5b9e\u73b0\uff0c\u8fd9\u5957\u65b9\u6848\u552f\u4e8c\u7684\u4e0d\u8db3\u5c31\u662f\uff1a opentracing \u5df2\u7ecf\u88ab opentelemetry \u517c\u5bb9\uff0c\u4e14 opentelemetry \u5728\u53ef\u89c2\u6d4b\u6027\u4e0a\u66f4\u5168\u9762\uff0c\u66f4\u7075\u6d3b\u3002 \u6d4f\u89c8\u5668\u4fa7\u652f\u6301\u4e0d\u5b8c\u5584\uff08\u53ef\u4ee5\u53c2\u89c1 https://github.com/jaegertracing/jaeger-client-javascript \uff09\u3002 \u524d\u7aef\u91c7\u7528 sentry \u6765\u91c7\u96c6\u524d\u7aef\u9875\u9762\u6570\u636e\uff08APP + WEB \u90fd\u652f\u6301\u5f88\u597d\uff09\uff0c\u56e0\u6b64\u624d\u6709\u4e86\u8fd9\u4e48\u4e00\u4e2a \u524d\u540e\u7aef\u94fe\u8def\u6253\u901a\u7684\u9700\u6c42\u3002\u6253\u901a\u603b\u7ed3/#sentry\u4f5c\u4e3a\u94fe\u8def\u91c7\u96c6\u7ec4\u4ef6\u7684\u4f18\u7f3a\u70b9) \u6700\u5f00\u59cb\u7684\u9700\u6c42\u76ee\u6807\u662f\u540e\u7aef\u76f8\u5173 Tracing SDK \u5168\u90e8\u4f7f\u7528sentry\u66ff\u6362\uff0c\u4f46\u662f\u7ed3\u5408\u4e0a\u8ff0\u5bf9\u4e8esentry\u7684\u8c03\u7814\uff0c\u53d1\u73b0\u76f4\u63a5\u63a5\u5165sentry\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u9009\u62e9\uff1a \u76f8\u5173\u7684 Tracing \u6982\u5ff5\u6ca1\u6709\u88ab\u6211\u4e2a\u4eba\u548c\u793e\u533a\u63a5\u53d7\uff0c\u793e\u533a\u5185\u4e3b\u6d41\u7684\u8fd8\u662f OpenTracing \u548c OpenTeletemetry \u89c4\u8303\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u89c4\u8303\u90fd\u662f\u76f8\u4e92\u517c\u5bb9\u7684\uff08\u4e2a\u4eba\u8ba4\u4e3a\uff1aOpenTelemetry \u5927\u6709\u4e00\u7edf\u53ef\u89c2\u6d4b\u6027\u7684\u8d8b\u52bf\uff0c\u4ed6\u4eec\u7acb\u9879\u4e5f\u662f\u671d\u7740\u8fd9\u4e2a\u65b9\u5411\u524d\u8fdb\uff09\u3002 \u5b98\u65b9go-SDK\u6d3b\u8dc3\u5ea6\u4f4e\u4e4e\u60f3\u8c61\uff0c\u53c2\u89c1 https://github.com/getsentry/sentry-go/issues/387 \u622a\u6b62\u672c\u6587\u65f6\uff08since 2021-10-22\uff09\u4ecd\u7136\u6ca1\u6709\u4efb\u4f55\u56de\u590d\uff0c\u8fdb\u4e00\u6b65\u963b\u6b62\u6211\u76f4\u63a5\u4f7f\u7528sentry\u3002 \u8c03\u7814 OpenTelemetry \u5728\u7814\u7a76\u5b83\u7684\u67b6\u6784\u8bbe\u8ba1\u65f6\uff0c\u53d1\u73b0\u5176\u8bbe\u8ba1\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a Collector\uff08\u8be6\u7ec6\u4ecb\u7ecd\u53c2\u89c1 \u9644\u5f55/OpenTelemetry\u4e2d\u7684\u6982\u5ff5\uff09 \u3002\u4ece\u793a\u610f\u56fe\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u7684\u4f5c\u7528\u8fd1\u4f3c\u4e8e Jaeger Collector / Agent\uff0c\u4f46\u662f\u76f8\u6bd4\u4e8e Jaeger \u5b83\u66f4\u5f00\u653e\uff0c\u652f\u6301\u591a\u79cd Vendor (Jaeger / Zipkin \u7b49\u7b49)\uff0c\u66f4\u52a0\u7075\u6d3b\u3002 \u5982\u679c\u66ff\u6362\u4e86 sentry \u52a0\u5165\u662f\u4e0d\u662f\u4ee5\u540e\u8fd8\u53ef\u80fd\u66f4\u6362\u65b0\u7684\u91c7\u96c6\u7ec4\u4ef6\uff0c\u670d\u52a1\u8fd9\u4e48\u591a\u518d\u6765\u6362\u4e00\u904d\u8fd8\u662f\u8d39\u65f6\u8d39\u529b","title":"\u80cc\u666f"},{"location":"chap_apm/5apm_Sentry/#_3","text":"\u90a3\u4e48\u57fa\u4e8e\u4ee5\u4e0a\u7684\u8003\u8651\uff0c\u8bbe\u8ba1\u4e86\u5982\u4e0b\u7684\u6539\u9020\u65b9\u6848 \u5728\u5e94\u7528\u4fa7 Tracing SDK \u5168\u90e8\u66ff\u6362\u4e3a otel SDK\uff08\u540e\u9762\u7ecf\u8fc7\u8003\u8651\uff0c\u8fd8\u662f\u81ea\u5df1\u505a\u4e86\u4e00\u4e2a\u9632\u8150\u7684 Tracing API\u5c01\u88c5\uff09 \u3002 \u4e3a\u4e86\u4fdd\u8bc1\u6e10\u8fdb\u66f4\u65b0\u670d\u52a1\u7aef\u94fe\u8def\u91c7\u96c6\u7684\u540c\u65f6\uff0c\u5728Jaeger Dashborad\u4e2d\u7684\u94fe\u8def\u4e0d\u65ad\uff0c\u5728 propagator \u5b9e\u73b0 otel \u5230 jaeger \u7684\u8f6c\u6362\u3002 \u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a Sentry Trace Exporter, \u5c06\u5ba2\u6237\u7aef\u4e0a\u62a5\u7684\u94fe\u8def\uff0c\u518d\u6295\u9012\u5230 sentry \u3002 Collector \u914d\u7f6e exporter \u65f6\uff0c\u540c\u65f6\u4e0a\u62a5\u5230 sentry \u548c jaeger https://github.com/yeqown/opentelemetry-quake","title":"\u65b9\u6848\u63cf\u8ff0"},{"location":"chap_apm/5apm_Sentry/#_4","text":"","title":"\u671f\u95f4\u9047\u5230\u7684\u95ee\u9898"},{"location":"chap_apm/5apm_Sentry/#trace-exporter","text":"\u4e3b\u8981\u8fd8\u662f\u53c2\u8003 https://github.com/open-telemetry/opentelemetry-collector-contrib \u4ed3\u5e93\u4e2d\u7684\u5b9e\u73b0\u3002Collector \u8bbe\u8ba1\u65f6\u5df2\u7ecf\u8003\u8651\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u6240\u4ee5\u6309\u7167\u5b98\u65b9\u7684\u7ea6\u5b9a\u5f00\u53d1\u5373\u53ef\uff0c\u81f3\u4e8e sentryexporter \u5728\u5b98\u65b9\u4ed3\u5e93\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u6240\u4ee5\u6211\u53ea\u662f\u5b9a\u5236\u5316\u4e86\u4e00\u4e0b\u3002 \u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4f60\u7684collector\u9700\u8981\u4f7f\u7528\u7279\u5b9a\u7684\u63d2\u4ef6\uff0c\u90a3\u4e48\u9700\u8981\u4f7f\u7528\u5b98\u65b9\u7684 https://github.com/open-telemetry/opentelemetry-collector/cmd/builder \u6765\u81ea\u5df1\u5b9a\u5236\u7f16\u8bd1 collector, \u8fd9\u4e00\u70b9\u4e5f\u53ef\u4ee5\u5728\u6211\u63d0\u4f9b\u7684\u5b9e\u8df5\u4ee3\u7801\u4e2d\u627e\u5230\u3002","title":"\u600e\u4e48\u5b9a\u5236\u81ea\u5df1\u7684 Trace Exporter\uff1f"},{"location":"chap_apm/5apm_Sentry/#collector-agent","text":"\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\uff1a\u4e2d\u5fc3\u5316\u548c\u5206\u5e03\u5f0f\u90e8\u7f72\u7684\u533a\u522b\uff0c\u5728\u5b9e\u73b0\u4e0a\u5e76\u6ca1\u6709\u533a\u522b\u3002\u81f3\u4e8e\u4f60\u5e94\u8be5\u4f7f\u7528\u54ea\u79cd\u90e8\u7f72\u65b9\u5f0f\uff0c\u5f53\u7136\u89c6\u4f60\u7684\u96c6\u7fa4\u89c4\u6a21\u800c\u5b9a\uff0c\u5982\u679c\u53ea\u6709\u4e0d\u5230100\u4e2a\u670d\u52a1\u5b9e\u4f8b\uff0c\u4e2a\u4eba\u89c9\u5f97\u4ec5\u4ec5collector\u8db3\u4ee5\uff0c\u76f4\u5230\u4e0d\u8db3\u4ee5\u627f\u8f7d\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u4f60\u96c6\u7fa4\u4e2d\u8282\u70b9\u4f17\u591a\uff0c\u670d\u52a1\u5b9e\u4f8b\u4e5f\u4f17\u591a\uff0c\u90a3\u4e48\u6700\u597d\u4e00\u5f00\u59cb\u5c31\u4e0aagent\u3002","title":"Collector \u548c Agent \u7684\u5dee\u5f02\uff1f"},{"location":"chap_apm/5apm_Sentry/#k8s-agent-collector","text":"\u5b98\u65b9\u4e5f\u5df2\u7ecf\u63d0\u4f9b\u4e86\u6837\u4f8b\u4ee3\u7801\uff0c\u53ef\u4ee5\u53c2\u8003 https://github.com/open-telemetry/opentelemetry-collector/examples/k8s/otel-config.yaml \u3002 \u5927\u81f4\u601d\u8def\u4e3a\uff1a\u901a\u8fc7DaemonSet \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a Collector \u5b9e\u4f8b\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u60f3\u8981\u914d\u7f6e NODE_IP:PORT \u7684\u65b9\u5f0f\u8ba9\u8be5\u8282\u70b9\u4e0a\u7684\u670d\u52a1\u76f4\u8fde agent\uff0c\u90a3\u4e48\u9700\u8981\u5728 otel-config.yaml \u4e2d\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a apiVersion: apps/v1 # .... template: metadata: labels: app: opentelemetry component: otel-agent spec: hostNetwork: true # \u589e\u52a0\u8fd9\u4e00\u884c dnsPolicy: ClusterFirstWithHostNet # \u589e\u52a0\u8fd9\u4e00\u884c containers: # ... \u5f53\u7136\u4e0d\u6b62\u8fd9\u4e48\u4e00\u79cd\u65b9\u5f0f\uff0c\u6bd4\u5982\u8fd8\u53ef\u4ee5\u4f7f\u7528 hostPort, \u89c6\u4f60\u7684k8s\u96c6\u7fa4\u914d\u7f6e\u800c\u5b9a\u3002","title":"k8s \u4e2d\u5982\u4f55\u4ee5 agent \u65b9\u5f0f\u90e8\u7f72 collector\uff1f"},{"location":"chap_apm/5apm_Sentry/#sentry","text":"\u7f3a\u70b9: sentry \u7684\u4e3b\u8981\u573a\u666f\u5e76\u4e0d\u662f\u5728\u4e8e\u94fe\u8def\u91c7\u96c6\uff0c\u800c\u662f\u5728\u4e8e\u524d\u7aef\u9875\u9762\u91c7\u96c6\uff08\u9875\u9762\u52a0\u8f7d/\u8def\u5f84/\u65e5\u5fd7\uff09\uff0c\u5305\u62ec\u9875\u9762\u5f02\u5e38\u6570\u636e\uff1b\u4e3b\u8981\u6839\u636e\u5728\u4e8e\u5b83\u72ec\u6709\uff08\u6216\u8bb8\uff09\u7684\u94fe\u8def\u91c7\u96c6\u6982\u5ff5\u3002\u5176\u4e2d\u5e38\u89c1\u7684\u5982\u4e0b\uff1a \u4f18\u70b9: \u5df2\u7ecf\u652f\u6301\u524d\u540e\u7aef\u94fe\u8def\u6253\u901a\uff0c\u96c6\u6210\u5c55\u793a\u524d\u7aef\u9875\u9762\u4e0a\u53d1\u751f\u7684\u4e00\u5207\u884c\u4e3a\u3002 \u5355\u72ec\u5bf9\u5f02\u5e38\u8fdb\u884c\u91c7\u96c6\u548c\u5c55\u793a\u3002","title":"sentry\u4f5c\u4e3a\u94fe\u8def\u91c7\u96c6\u7ec4\u4ef6\u7684\u4f18\u7f3a\u70b9"},{"location":"chap_apm/5apm_Sentry/#opentelemetry","text":"\u8fd9\u91cc\u53ea\u662f\u7f57\u5217\u4e86 Tracing \u76f8\u5173\u7684\u6982\u5ff5\uff1a","title":"OpenTelemetry\u4e2d\u7684\u6982\u5ff5"},{"location":"chap_apm/6k8s_watching/","text":"\u7b2c\u516d\u8282 \u804a\u804a\u53ef\u89c2\u6d4b\u6027\u4e4b\u6570\u636e\u6a21\u578b \u5728 201x \u5e74\uff0c\u968f\u7740\u5bb9\u5668\u6280\u672f\u7684\u51fa\u73b0\uff0c\u5bb9\u5668\u7684\u90e8\u7f72\u65b9\u5f0f\u9010\u6e10\u88ab\u5404\u5927\u4e92\u8054\u7f51\u516c\u53f8\u91c7\u7528\uff0c\u76f8\u6bd4\u7269\u7406\u673a/\u865a\u62df\u673a\uff0c\u5bb9\u5668\u7684\u597d\u5904\u662f\u73af\u5883\u9694\u79bb\u3001\u8f7b\u91cf\u3001\u5feb\u901f\u3002 \u4f46\u662f\u7ba1\u7406\u5bb9\u5668\u662f\u4e00\u4ef6\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u540e\u6765\u51fa\u73b0\u4e86 Kubernetes\uff0c\u6210\u4e3a\u4e86\u4e8b\u5b9e\u4e0a\u7684\u5bb9\u5668\u7ba1\u7406\u6807\u51c6\uff0c\u76ee\u524d\u5404\u5927\u516c\u53f8\u90fd\u5728\u4f7f\u7528 Kubernetes\u3002 \u56e0\u4e3a\u5bb9\u5668\u548c Kubernetes \u964d\u4f4e\u4e86\u670d\u52a1\uff08\u5e94\u7528\uff09\u7684\u90e8\u7f72\u548c\u5347\u7ea7\u6210\u672c\uff0c\u6240\u4ee5\u50ac\u751f\u4e86\u300c\u5fae\u670d\u52a1\u300d\u7684\u6982\u5ff5\uff0c\u670d\u52a1\u4ece\u300c\u5355\u4f53\u590d\u6742\u670d\u52a1\u300d\u5411\u300c\u591a\u4e2a\u7b80\u5355\u670d\u52a1\u300d\u6f14\u53d8\uff0c\u5728\u4e4b\u524d\uff0c\u9700\u8981\u7740\u91cd\u8003\u8651\u670d\u52a1\u5185\u7684\u67b6\u6784\u8bbe\u8ba1\uff0c\u5355\u4e2a\u670d\u52a1\u5bf9\u5916\u63d0\u4f9b\u5c3d\u53ef\u80fd\u591a\u7684\u80fd\u529b\uff0c\u800c\u5728\u5fae\u670d\u52a1\u4e2d\uff0c\u4f1a\u76f4\u63a5\u628a\u5355\u4e2a\u670d\u52a1\u62c6\u5206\u6210\u591a\u4e2a\u670d\u52a1\uff0c\u670d\u52a1\u4e4b\u95f4\u7528 API \u8c03\u7528\u3002 \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u5fae\u670d\u52a1\u4e2d\uff0c\u67b6\u6784\u8bbe\u8ba1\u7684\u91cd\u8981\u6027\u964d\u4f4e\uff0cAPI \u8bbe\u8ba1\u7684\u91cd\u8981\u6027\u63d0\u9ad8\u3002 \u53e6\u5916\uff0c\u62c6\u5206\u51fa\u5fae\u670d\u52a1\u540e\uff0c\u7f16\u7a0b\u7684\u96be\u5ea6\u4e8b\u5b9e\u4e0a\u964d\u4f4e\u4e86\uff0c\u5bf9\u7f16\u7a0b\u4eba\u5458\u7684\u8981\u6c42\u4e5f\u964d\u4f4e\u4e86\u3002 \u8fd9\u8bf4\u660e\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u968f\u7740\u57fa\u7840\u8bbe\u65bd\u7684\u4e0d\u65ad\u53d1\u5c55\uff0c\u4f1a\u6709\u8d8a\u6765\u8d8a\u591a\u7684\u300c\u7f16\u7a0b\u80fd\u529b\u300d\u6c89\u6dc0\u6210\u57fa\u7840\u8bbe\u65bd\uff0c\u4f7f\u7f16\u7a0b\u7684\u96be\u5ea6\u4e0d\u65ad\u964d\u4f4e\uff1a\u8f6f\u4ef6\u5f00\u53d1\u4e0d\u65ad\u5411\u7b80\u5355\u7684\u65b9\u5f0f\u53d1\u5c55\u3002 \u4f46\u662f\uff0c\u968f\u7740\u5fae\u670d\u52a1\u7684\u53d1\u5c55\uff0c\u670d\u52a1\u53d8\u5f97\u592a\u591a\u4e86\uff0c\u7ba1\u7406\u8d1f\u8d23\u5ea6\u53c8\u4e0a\u5347\u4e86\uff0c\u6bd4\u5982\u600e\u4e48\u53bb\u89e3\u51b3\u670d\u52a1\u53d1\u73b0\u7684\u95ee\u9898\u3001\u600e\u4e48\u63a7\u5236\u6d41\u91cf\u3001\u670d\u52a1\u4e4b\u95f4\u600e\u4e48\u505a\u9694\u79bb\uff0c\u670d\u52a1\u72b6\u6001\u600e\u4e48\u89c2\u6d4b\u7b49\u7b49\u3002\u8fd9\u65f6\u5019\u53c8\u51fa\u73b0\u4e86\u300c\u670d\u52a1\u6cbb\u7406\u300d\u7684\u6982\u5ff5\uff0c\u5173\u4e8e\u670d\u52a1\u6cbb\u7406\uff0c\u6709\u4e00\u4e2a\u65b0\u7684\u8bcd\uff1aService Mesh\uff0c\u73b0\u5728\u4e8b\u5b9e\u6807\u51c6\u662f Istio\u3002 \u6982\u8ff0 \u53ef\u89c2\u6d4b\u6027\u662f\u4e3a\u4e86\u5e94\u5bf9\u5fae\u670d\u52a1\u7684\u590d\u6742\u573a\u666f\u4e0b\u53d1\u660e\u51fa\u6765\u7684\u4e00\u4e2a\u8bcd\uff0c\u672c\u8d28\u4e0a\u662f\u4e3a\u4e86\u8861\u91cf\u7cfb\u7edf\u8fd0\u884c\u7684\u72b6\u6001\uff0c\u53ef\u89c2\u6d4b\u6027\u662f\u670d\u52a1\u6cbb\u7406\u7684\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u548c\u529f\u80fd\u6027\u3001\u53ef\u6d4b\u8bd5\u6027\u3001\u53ef\u8fd0\u7ef4\u6027\u4e00\u6837\u3002 \u4e00\u822c\u5e38\u8bf4\u53ef\u89c2\u6d4b\u6027\u5305\u542b\u4e09\u4e2a\u5ea6\u91cf\u89d2\u5ea6\uff1aMetric\u3001Logging\u3001Tracing\uff0c\u5176\u5b9e\u8fd8\u6709\u4e00\u4e2a\uff1aProfiling\u3002 Metric\uff1a\u6307\u6807\uff0c\u5bf9\u7cfb\u7edf\u4e2d\u67d0\u4e00\u7c7b\u4fe1\u606f\u7684\u805a\u5408\u7edf\u8ba1\uff0c\u6bd4\u5982 QPS\u3001\u5ef6\u8fdf\u3001\u9519\u8bef\u7387\u7b49\u3002 Logging\uff1a\u65e5\u5fd7\uff0c\u5bf9\u7cfb\u7edf\u6240\u505a\u884c\u4e3a\u7684\u4e00\u79cd\u8bb0\u5f55\uff0c\u5b83\u662f\u79bb\u6563\u7684\uff0c\u6ca1\u6709\u76f8\u5173\u6027\uff0c\u4e3a\u4e86\u533a\u5206\u8fd9\u79cd\u8bb0\u5f55\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u4f1a\u5206\u7ea7\u522b\uff08DEBUG\u3001INFO\u3001WARN\u3001ERROR\u3001FATAL\uff09\u3002 Tracing\uff1a\u8c03\u7528\u94fe\uff0c\u5b83\u53cd\u6620\u7684\u662f\u8bf7\u6c42\u7ecf\u8fc7\u67d0\u4e2a\u7ec4\u4ef6\u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u7ecf\u8fc7\u7ec4\u4ef6\u7684\u6570\u636e\u53eb\u505a Span\uff0cSpan \u53ef\u4ee5\u4f53\u73b0\u7ecf\u8fc7\u7ec4\u4ef6\u7684\u72b6\u6001\u3001\u4e00\u4e9b\u5173\u952e\u5c5e\u6027\u548c\u4e8b\u4ef6\u3001\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002Span \u4e4b\u95f4\u901a\u8fc7 Trace ID \u5173\u8054\u3002 Profiling\uff1a\u4e00\u822c\u53eb\u505a Continuous Profiling\uff0c\u6301\u7eed\u5206\u6790\uff0c\u5b83\u53cd\u6620\u7684\u662f\u7a0b\u5e8f\u5185\u90e8\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u6bd4\u5982\u6808\u8c03\u7528\u3001\u6267\u884c\u65f6\u95f4\u7b49\u3002\u53ef\u4ee5\u628a Profiling \u53ef\u89c6\u5316\u6210\u706b\u7130\u56fe\u65b9\u9762\u5206\u6790\u95ee\u9898\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u57fa\u4e8e\u8fd9\u4e9b\u5ea6\u91cf\u5904\u7406\u6545\u969c\u7684\u6d41\u7a0b\u662f\uff1a Metric \u2192 Tracing \u2192 Logging \u2192 Profiling \u6570\u636e\u6a21\u578b \u5728 Tracing \u9886\u57df\uff0c\u4e4b\u524d\u6709\u4e24\u4e2a\u9879\u76ee\uff0c\u4e00\u4e2a\u662f OpenTracing\uff0c\u5b83\u662f\u4e00\u4e2a\u89c4\u8303 \uff0c Jaeger \u5c31\u662f\u57fa\u4e8e OpenTracing \u7684\u5f00\u6e90\u5b9e\u73b0\uff0c \u53e6\u4e00\u4e2a\u662f OpenCensus\uff0c\u5b83\u662f Google \u5f00\u6e90\u7684\u5ea6\u91cf\u5de5\u5177\u3002 \u8fd9\u4e24\u4e2a\u9879\u76ee\u529f\u80fd\u9ad8\u5ea6\u91cd\u5408\uff0c\u5728 CNCF \u4e3b\u5bfc\u4e0b\u5408\u5e76\u6210\u4e86 OpenTelemetry\uff0c\u800c OpenTracing \u548c OpenCensus \u4e5f\u4e0d\u518d\u7ef4\u62a4\u3002 \u5f53\u7136 OpenTelemetry \u4e0d\u6b62\u505a Tracing\uff0c \u8fd8\u8986\u76d6 Metric \u548c Logging\uff0c\u5b83\u7684\u76ee\u6807\u662f\u7edf\u4e00\u53ef\u89c2\u6d4b\u6027\u7684\u6807\u51c6\u534f\u8bae\uff0c\u5305\u62ec\u6570\u636e\u6a21\u578b\u3001API \u89c4\u8303\u3001\u591a\u8bed\u8a00 SDK\u3001\u91c7\u96c6\u5668 \u3002 OpenTelemetry \u53ea\u505a\u7edf\u4e00\u7684\u534f\u8bae\u548c\u89c4\u8303\uff0c\u5177\u4f53\u6570\u636e\u7684\u540e\u7aef\u5b58\u50a8\u548c\u5c55\u793a\u4e0d\u662f\u5b83\u7684\u8303\u56f4\u3002\u534f\u8bae\u548c\u89c4\u8303\u662f \u53ef\u89c2\u6d4b\u6027\u5bf9\u5916\u66b4\u9732\u7684\u300c\u63a5\u53e3\u300d \uff0c\u5b83\u7684\u7edf\u4e00\u5bf9\u4e8e\u4f7f\u7528\u65b9\u6765\u8bf4\u662f\u5de8\u5927\u7684\u597d\u5904\uff0c\u76ee\u524d\u6765\u770b\uff0cOpenTelemetry \u672a\u6765\u4f1a\u6210\u4e3a\u4e8b\u5b9e\u6807\u51c6\u3002 \u4e3a\u4e86\u5bf9\u63a5\u4e0d\u540c\u7684\u540e\u7aef\u5b9e\u73b0\uff0cOpenTelemetry \u63d0\u4f9b\u4e86\u5404\u79cd Exporter\uff0c\u6bd4\u5982\u4e3a\u5bf9\u63a5 Prometheus \u63d0\u4f9b\u4e86 Prometheus Exporter\uff0c\u5bf9\u63a5 Cortex \u548c Thanos \u63d0\u4f9b\u4e86 Prometheus Remote Write Exporter\uff0c\u5bf9\u63a5 Loki \u63d0\u4f9b\u4e86 Loki Exporter\uff0c\u5bf9\u63a5 Jaeger \u63d0\u4f9b\u4e86 Jaeger gRPC Exporter\u3002 \u4e0d\u8fc7\uff0c\u76ee\u524d OpenTelemetry \u8fd8\u4e0d\u6210\u719f\uff0c\u672c\u6587\u7684\u6570\u636e\u6a21\u578b\u57fa\u4e8e\u6211\u4eec\u4e8b\u5b9e\u4e0a\u4f7f\u7528\u7684\u540e\u7aef\u5b9e\u73b0\u6765\u8ba8\u8bba\u3002 Metric \u6211\u4eec\u4f7f\u7528\u5206\u5e03\u5f0f Prometheus \u65b9\u6848 Cortex\uff0c\u6570\u636e\u6a21\u578b\u548c Prometheus \u4e00\u81f4 Logging \u6211\u4eec\u4f7f\u7528 Loki Tracing \u6211\u4eec\u4f7f\u7528 Grafana Tempo\uff0cTempo \u672c\u8eab\u517c\u5bb9 Zipkin\u3001Jaeger\u3001OpenTelemetry \u7b49\u534f\u8bae\uff0c\u6240\u4ee5 Tracing \u76f4\u63a5\u91c7\u7528 OpenTelemetry \u7684\u6570\u636e\u6a21\u578b Profiling \u7684\u540e\u7aef\u5b9e\u73b0\u57fa\u672c\u53ef\u4ee5\u590d\u7528 Loki\uff0c\u6570\u636e\u6a21\u578b\u4e5f\u548c Logging \u7c7b\u4f3c \u5148\u770b Metric\uff0c\u5b83\u7684\u6570\u636e\u6a21\u578b\uff1a LabelSet + Timestamp + Number LabelSet \u5c31\u662f Series\uff0c\u662f\u82e5\u5e72\u4e2a label name / value \u7ec4\u5408\uff0c\u6307\u6807\u540d\u79f0\u4e5f\u662f\u4e00\u4e2a label name / value\u3002 Timestamp \u662f\u65f6\u95f4\u6233\uff0c\u7cbe\u5ea6\u662f\u6beb\u7c73\u3002 Number \u662f\u6570\u503c\uff0c\u7c7b\u578b\u662f float64\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a Metric \u4f8b\u5b50\uff1a \u53e6\u5916\uff0cPrometheus \u5185\u7f6e\u51e0\u79cd Metric \u7c7b\u578b\uff0c\u5305\u62ec Counter\u3001Gauge\u3001Histogram\u3001Summary\uff0cCounter \u662f\u81ea\u589e\u7684\uff0cGauge \u53ef\u589e\u53ef\u51cf\uff0cHistogram \u662f\u76f4\u65b9\u56fe\uff0cSummary \u662f\u6458\u8981\uff0cHistogram \u548c Summary \u533a\u522b\u662f Histogram \u9700\u8981\u901a\u8fc7 _bucket \u6765\u8ba1\u7b97 P \u503c\uff0c\u800c Summary \u5728\u5ba2\u6237\u7aef\u76f4\u63a5\u8ba1\u7b97\u597d P \u503c\uff0c\u76f4\u63a5\u5b58\u50a8\u5373\u53ef\u3002 \u53e6\u5916\uff0cPrometheus \u8fd8\u6709\u5f88\u591a\u5185\u7f6e\u51fd\u6570\uff0c\u6765\u505a Metric \u7684\u805a\u5408\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 \u518d\u770b Logging\uff0c\u6570\u636e\u6a21\u578b\uff1aLabelSet + Timestamp + String \u548c Metric \u7c7b\u4f3c\uff0c\u53ea\u662f Number \u6362\u6210\u4e86 String\uff0cTimestamp \u7cbe\u5ea6\u662f\u7eb3\u79d2\u3002 \u5728 Loki \u4e2d\uff0c\u4f7f\u7528 Logql \u8bed\u6cd5\u67e5\u8be2\u65e5\u5fd7\uff08\u548c Promql \u7c7b\u4f3c\uff09\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a {container=\"query-frontend\",namespace=\"loki-dev\"} |= \"metrics.go\" | logfmt | duration > 10s and throughput_mb < 500 \u4e0b\u4e00\u4e2a\u662f Tracing\uff0cTracing \u6bd4\u8f83\u590d\u6742\uff1a Operation Name + Start / End Timestamp + Attributes + Events + Parent + SpanContext Operation Name\uff1a\u64cd\u4f5c\u540d Start / End Timestamp\uff1a\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4 Attributes\uff1aKV \u5bf9\uff0c\u5305\u62ec Status\uff08\u6bd4\u5982 OK\u3001Cancelled\u3001Permission Denied\uff09\u3001 SpanKind\uff08CLIENT\u3001SERVER\u3001PRODUCER\u3001CONSUMER\u3001INTERNAL \u7b49\uff09\u3001\u81ea\u5b9a\u4e49\u4fe1\u606f\u7b49 Events\uff1a\u82e5\u5e72\u4e2a\u5143\u7ec4\u5217\u8868\uff0c\u6bcf\u4e2a\u5143\u7ec4\u5305\u62ec timestamp\u3001name\u3001Attributes\uff0c\u7528\u4e8e\u8bb0\u5f55\u4e00\u7cfb\u5217\u91cd\u8981\u4e8b\u4ef6 Parent \u5305\u542b\u7236\u4eb2\u7684 Span ID\u3001Trace ID SpanContext \u5305\u542b\u81ea\u8eab\u7684 Span ID\u3001Trace ID \u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a \u6700\u540e\u770b Profiling\uff0c\u6570\u636e\u6a21\u578b\uff1a LabelSet + Timestamp + []byte Profiling \u7684\u6570\u636e\u683c\u5f0f\u662f protocol buffers\uff0c\u6240\u4ee5\u7528 []byte \u3002 \u4e0a\u9762\u4ecb\u7ecd\u4e86\u56db\u79cd\u6570\u636e\u6a21\u578b\uff0c\u5176\u5b9e\u5728\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u5b83\u4eec\u4e4b\u95f4\u4e5f\u4f1a\u4e92\u76f8\u878d\u5408\uff0c\u4e0b\u9762\u8bf4\u51e0\u79cd\u5e38\u89c1\u7684\u878d\u5408\u573a\u666f\u3002 \u7b2c\u4e00\uff0cMetric \u548c Tracing \u878d\u5408\u3002 \u8fd9\u91cc\u8981\u7528\u5230 Exemplar\uff0cExemplar \u6700\u65e9\u88ab\u7528\u5728 Google \u7684 StackDriver \u4e2d\uff0c\u540e\u9762\u6210\u4e3a\u4e86 OpenMetrics \u6807\u51c6\u7684\u4e00\u90e8\u5206\uff0c\u5728\u5e94\u7528\u901a\u8fc7\u6807\u51c6 /metrics \u7aef\u53e3\u66b4\u9732 Metric \u65f6\uff0cExemplar \u4fe1\u606f\u4e5f\u4f1a\u88ab\u4e00\u8d77\u66b4\u9732\u3002 Prometheus \u76ee\u524d\u5df2\u652f\u6301 Exemplar\uff0cPrometheus \u901a\u8fc7 /metrics \u91c7\u96c6\u6570\u636e\u65f6\u4e5f\u4f1a\u628a Exemplar \u5b58\u50a8\u4e0b\u6765\uff0c\u5e76\u66b4\u9732\u5355\u72ec\u7684 API \u6765\u83b7\u53d6 Exemplar \u4fe1\u606f\u3002 $ curl -g 'http://localhost:9090/api/v1/query_exemplar?query=test_exemplar_metric_total&start=2020-09-14T15:22:25.479Z&end=020-09-14T15:23:25.479Z' { \"status\": \"success\", \"data\": [ { \"seriesLabels\": { \"__name__\": \"test_exemplar_metric_total\", \"instance\": \"localhost:8090\", \"job\": \"prometheus\", \"service\": \"bar\" }, \"exemplars\": [ { \"labels\": { \"traceID\": \"EpTxMJ40fUus7aGY\" }, \"value\": 6, \"timestamp\": 1600096945479, \"hasTimestamp\": true } ] }, ] } \u501f\u52a9 Exemplar\uff0c\u53ef\u4ee5\u628a Trace ID \u4f5c\u4e3a\u4e00\u4e2a label pair \u52a0\u5165 Exemplar \u4e2d\uff0c\u4ece\u800c\u53ef\u4ee5\u5728Prometheus \u67e5\u8be2\u5230 Tracing \u7684\u4fe1\u606f\uff0c\u4ece\u800c\u5c06 Metric \u548c Tracing \u8fde\u63a5\u8d77\u6765\u3002 \u7b2c\u4e8c\uff0cLogging \u548c Tracing \u878d\u5408\u3002 \u53ea\u8981\u4f7f\u7528\u5e26\u6709 Tracing \u5e93\u7684 SDK\uff0c\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4f1a\u5e26\u4e0a Trace ID\uff0c\u5e76\u628a\u8fd9\u4e9b ID \u6253\u5728\u65e5\u5fd7\u4e2d\u3002 \u901a\u8fc7 Trace ID \u53ef\u4ee5\u5b9a\u4f4d\u5230\u4e00\u4e2a\u552f\u4e00\u7684 Tracing\uff0c \u8df3\u8f6c\u5230 Tracing \u7cfb\u7edf\u7684 UI \u8fdb\u884c\u67e5\u8be2\u3002 \u7b2c\u4e09\uff0cMetric \u548c Profiling \u878d\u5408 \u3002 \u57fa\u4e8e Exemplar\uff0c\u628a Profiling ID \u4e5f\u653e\u5165 Exemplar \u4e2d\uff0cPrometheus \u652f\u6301\u5b58\u50a8\u548c\u67e5\u8be2\u5373\u53ef\u3002 \u81f3\u4e8e\u5c55\u793a\uff0c\u53ef\u4ee5\u5728 Grafana \u4e0a\u5f00\u53d1\u4e00\u4e2a pprof \u7684 Panel \u63d2\u4ef6\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c55\u793a Profiling\u3002","title":"\u7b2c\u516d\u8282 \u804a\u804a\u53ef\u89c2\u6d4b\u6027\u4e4b\u6570\u636e\u6a21\u578b"},{"location":"chap_apm/6k8s_watching/#_1","text":"\u5728 201x \u5e74\uff0c\u968f\u7740\u5bb9\u5668\u6280\u672f\u7684\u51fa\u73b0\uff0c\u5bb9\u5668\u7684\u90e8\u7f72\u65b9\u5f0f\u9010\u6e10\u88ab\u5404\u5927\u4e92\u8054\u7f51\u516c\u53f8\u91c7\u7528\uff0c\u76f8\u6bd4\u7269\u7406\u673a/\u865a\u62df\u673a\uff0c\u5bb9\u5668\u7684\u597d\u5904\u662f\u73af\u5883\u9694\u79bb\u3001\u8f7b\u91cf\u3001\u5feb\u901f\u3002 \u4f46\u662f\u7ba1\u7406\u5bb9\u5668\u662f\u4e00\u4ef6\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u540e\u6765\u51fa\u73b0\u4e86 Kubernetes\uff0c\u6210\u4e3a\u4e86\u4e8b\u5b9e\u4e0a\u7684\u5bb9\u5668\u7ba1\u7406\u6807\u51c6\uff0c\u76ee\u524d\u5404\u5927\u516c\u53f8\u90fd\u5728\u4f7f\u7528 Kubernetes\u3002 \u56e0\u4e3a\u5bb9\u5668\u548c Kubernetes \u964d\u4f4e\u4e86\u670d\u52a1\uff08\u5e94\u7528\uff09\u7684\u90e8\u7f72\u548c\u5347\u7ea7\u6210\u672c\uff0c\u6240\u4ee5\u50ac\u751f\u4e86\u300c\u5fae\u670d\u52a1\u300d\u7684\u6982\u5ff5\uff0c\u670d\u52a1\u4ece\u300c\u5355\u4f53\u590d\u6742\u670d\u52a1\u300d\u5411\u300c\u591a\u4e2a\u7b80\u5355\u670d\u52a1\u300d\u6f14\u53d8\uff0c\u5728\u4e4b\u524d\uff0c\u9700\u8981\u7740\u91cd\u8003\u8651\u670d\u52a1\u5185\u7684\u67b6\u6784\u8bbe\u8ba1\uff0c\u5355\u4e2a\u670d\u52a1\u5bf9\u5916\u63d0\u4f9b\u5c3d\u53ef\u80fd\u591a\u7684\u80fd\u529b\uff0c\u800c\u5728\u5fae\u670d\u52a1\u4e2d\uff0c\u4f1a\u76f4\u63a5\u628a\u5355\u4e2a\u670d\u52a1\u62c6\u5206\u6210\u591a\u4e2a\u670d\u52a1\uff0c\u670d\u52a1\u4e4b\u95f4\u7528 API \u8c03\u7528\u3002 \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u5fae\u670d\u52a1\u4e2d\uff0c\u67b6\u6784\u8bbe\u8ba1\u7684\u91cd\u8981\u6027\u964d\u4f4e\uff0cAPI \u8bbe\u8ba1\u7684\u91cd\u8981\u6027\u63d0\u9ad8\u3002 \u53e6\u5916\uff0c\u62c6\u5206\u51fa\u5fae\u670d\u52a1\u540e\uff0c\u7f16\u7a0b\u7684\u96be\u5ea6\u4e8b\u5b9e\u4e0a\u964d\u4f4e\u4e86\uff0c\u5bf9\u7f16\u7a0b\u4eba\u5458\u7684\u8981\u6c42\u4e5f\u964d\u4f4e\u4e86\u3002 \u8fd9\u8bf4\u660e\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u968f\u7740\u57fa\u7840\u8bbe\u65bd\u7684\u4e0d\u65ad\u53d1\u5c55\uff0c\u4f1a\u6709\u8d8a\u6765\u8d8a\u591a\u7684\u300c\u7f16\u7a0b\u80fd\u529b\u300d\u6c89\u6dc0\u6210\u57fa\u7840\u8bbe\u65bd\uff0c\u4f7f\u7f16\u7a0b\u7684\u96be\u5ea6\u4e0d\u65ad\u964d\u4f4e\uff1a\u8f6f\u4ef6\u5f00\u53d1\u4e0d\u65ad\u5411\u7b80\u5355\u7684\u65b9\u5f0f\u53d1\u5c55\u3002 \u4f46\u662f\uff0c\u968f\u7740\u5fae\u670d\u52a1\u7684\u53d1\u5c55\uff0c\u670d\u52a1\u53d8\u5f97\u592a\u591a\u4e86\uff0c\u7ba1\u7406\u8d1f\u8d23\u5ea6\u53c8\u4e0a\u5347\u4e86\uff0c\u6bd4\u5982\u600e\u4e48\u53bb\u89e3\u51b3\u670d\u52a1\u53d1\u73b0\u7684\u95ee\u9898\u3001\u600e\u4e48\u63a7\u5236\u6d41\u91cf\u3001\u670d\u52a1\u4e4b\u95f4\u600e\u4e48\u505a\u9694\u79bb\uff0c\u670d\u52a1\u72b6\u6001\u600e\u4e48\u89c2\u6d4b\u7b49\u7b49\u3002\u8fd9\u65f6\u5019\u53c8\u51fa\u73b0\u4e86\u300c\u670d\u52a1\u6cbb\u7406\u300d\u7684\u6982\u5ff5\uff0c\u5173\u4e8e\u670d\u52a1\u6cbb\u7406\uff0c\u6709\u4e00\u4e2a\u65b0\u7684\u8bcd\uff1aService Mesh\uff0c\u73b0\u5728\u4e8b\u5b9e\u6807\u51c6\u662f Istio\u3002","title":"\u7b2c\u516d\u8282 \u804a\u804a\u53ef\u89c2\u6d4b\u6027\u4e4b\u6570\u636e\u6a21\u578b"},{"location":"chap_apm/6k8s_watching/#_2","text":"\u53ef\u89c2\u6d4b\u6027\u662f\u4e3a\u4e86\u5e94\u5bf9\u5fae\u670d\u52a1\u7684\u590d\u6742\u573a\u666f\u4e0b\u53d1\u660e\u51fa\u6765\u7684\u4e00\u4e2a\u8bcd\uff0c\u672c\u8d28\u4e0a\u662f\u4e3a\u4e86\u8861\u91cf\u7cfb\u7edf\u8fd0\u884c\u7684\u72b6\u6001\uff0c\u53ef\u89c2\u6d4b\u6027\u662f\u670d\u52a1\u6cbb\u7406\u7684\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u548c\u529f\u80fd\u6027\u3001\u53ef\u6d4b\u8bd5\u6027\u3001\u53ef\u8fd0\u7ef4\u6027\u4e00\u6837\u3002 \u4e00\u822c\u5e38\u8bf4\u53ef\u89c2\u6d4b\u6027\u5305\u542b\u4e09\u4e2a\u5ea6\u91cf\u89d2\u5ea6\uff1aMetric\u3001Logging\u3001Tracing\uff0c\u5176\u5b9e\u8fd8\u6709\u4e00\u4e2a\uff1aProfiling\u3002 Metric\uff1a\u6307\u6807\uff0c\u5bf9\u7cfb\u7edf\u4e2d\u67d0\u4e00\u7c7b\u4fe1\u606f\u7684\u805a\u5408\u7edf\u8ba1\uff0c\u6bd4\u5982 QPS\u3001\u5ef6\u8fdf\u3001\u9519\u8bef\u7387\u7b49\u3002 Logging\uff1a\u65e5\u5fd7\uff0c\u5bf9\u7cfb\u7edf\u6240\u505a\u884c\u4e3a\u7684\u4e00\u79cd\u8bb0\u5f55\uff0c\u5b83\u662f\u79bb\u6563\u7684\uff0c\u6ca1\u6709\u76f8\u5173\u6027\uff0c\u4e3a\u4e86\u533a\u5206\u8fd9\u79cd\u8bb0\u5f55\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u4f1a\u5206\u7ea7\u522b\uff08DEBUG\u3001INFO\u3001WARN\u3001ERROR\u3001FATAL\uff09\u3002 Tracing\uff1a\u8c03\u7528\u94fe\uff0c\u5b83\u53cd\u6620\u7684\u662f\u8bf7\u6c42\u7ecf\u8fc7\u67d0\u4e2a\u7ec4\u4ef6\u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u7ecf\u8fc7\u7ec4\u4ef6\u7684\u6570\u636e\u53eb\u505a Span\uff0cSpan \u53ef\u4ee5\u4f53\u73b0\u7ecf\u8fc7\u7ec4\u4ef6\u7684\u72b6\u6001\u3001\u4e00\u4e9b\u5173\u952e\u5c5e\u6027\u548c\u4e8b\u4ef6\u3001\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002Span \u4e4b\u95f4\u901a\u8fc7 Trace ID \u5173\u8054\u3002 Profiling\uff1a\u4e00\u822c\u53eb\u505a Continuous Profiling\uff0c\u6301\u7eed\u5206\u6790\uff0c\u5b83\u53cd\u6620\u7684\u662f\u7a0b\u5e8f\u5185\u90e8\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u6bd4\u5982\u6808\u8c03\u7528\u3001\u6267\u884c\u65f6\u95f4\u7b49\u3002\u53ef\u4ee5\u628a Profiling \u53ef\u89c6\u5316\u6210\u706b\u7130\u56fe\u65b9\u9762\u5206\u6790\u95ee\u9898\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u57fa\u4e8e\u8fd9\u4e9b\u5ea6\u91cf\u5904\u7406\u6545\u969c\u7684\u6d41\u7a0b\u662f\uff1a Metric \u2192 Tracing \u2192 Logging \u2192 Profiling","title":"\u6982\u8ff0"},{"location":"chap_apm/6k8s_watching/#_3","text":"\u5728 Tracing \u9886\u57df\uff0c\u4e4b\u524d\u6709\u4e24\u4e2a\u9879\u76ee\uff0c\u4e00\u4e2a\u662f OpenTracing\uff0c\u5b83\u662f\u4e00\u4e2a\u89c4\u8303 \uff0c Jaeger \u5c31\u662f\u57fa\u4e8e OpenTracing \u7684\u5f00\u6e90\u5b9e\u73b0\uff0c \u53e6\u4e00\u4e2a\u662f OpenCensus\uff0c\u5b83\u662f Google \u5f00\u6e90\u7684\u5ea6\u91cf\u5de5\u5177\u3002 \u8fd9\u4e24\u4e2a\u9879\u76ee\u529f\u80fd\u9ad8\u5ea6\u91cd\u5408\uff0c\u5728 CNCF \u4e3b\u5bfc\u4e0b\u5408\u5e76\u6210\u4e86 OpenTelemetry\uff0c\u800c OpenTracing \u548c OpenCensus \u4e5f\u4e0d\u518d\u7ef4\u62a4\u3002 \u5f53\u7136 OpenTelemetry \u4e0d\u6b62\u505a Tracing\uff0c \u8fd8\u8986\u76d6 Metric \u548c Logging\uff0c\u5b83\u7684\u76ee\u6807\u662f\u7edf\u4e00\u53ef\u89c2\u6d4b\u6027\u7684\u6807\u51c6\u534f\u8bae\uff0c\u5305\u62ec\u6570\u636e\u6a21\u578b\u3001API \u89c4\u8303\u3001\u591a\u8bed\u8a00 SDK\u3001\u91c7\u96c6\u5668 \u3002 OpenTelemetry \u53ea\u505a\u7edf\u4e00\u7684\u534f\u8bae\u548c\u89c4\u8303\uff0c\u5177\u4f53\u6570\u636e\u7684\u540e\u7aef\u5b58\u50a8\u548c\u5c55\u793a\u4e0d\u662f\u5b83\u7684\u8303\u56f4\u3002\u534f\u8bae\u548c\u89c4\u8303\u662f \u53ef\u89c2\u6d4b\u6027\u5bf9\u5916\u66b4\u9732\u7684\u300c\u63a5\u53e3\u300d \uff0c\u5b83\u7684\u7edf\u4e00\u5bf9\u4e8e\u4f7f\u7528\u65b9\u6765\u8bf4\u662f\u5de8\u5927\u7684\u597d\u5904\uff0c\u76ee\u524d\u6765\u770b\uff0cOpenTelemetry \u672a\u6765\u4f1a\u6210\u4e3a\u4e8b\u5b9e\u6807\u51c6\u3002 \u4e3a\u4e86\u5bf9\u63a5\u4e0d\u540c\u7684\u540e\u7aef\u5b9e\u73b0\uff0cOpenTelemetry \u63d0\u4f9b\u4e86\u5404\u79cd Exporter\uff0c\u6bd4\u5982\u4e3a\u5bf9\u63a5 Prometheus \u63d0\u4f9b\u4e86 Prometheus Exporter\uff0c\u5bf9\u63a5 Cortex \u548c Thanos \u63d0\u4f9b\u4e86 Prometheus Remote Write Exporter\uff0c\u5bf9\u63a5 Loki \u63d0\u4f9b\u4e86 Loki Exporter\uff0c\u5bf9\u63a5 Jaeger \u63d0\u4f9b\u4e86 Jaeger gRPC Exporter\u3002 \u4e0d\u8fc7\uff0c\u76ee\u524d OpenTelemetry \u8fd8\u4e0d\u6210\u719f\uff0c\u672c\u6587\u7684\u6570\u636e\u6a21\u578b\u57fa\u4e8e\u6211\u4eec\u4e8b\u5b9e\u4e0a\u4f7f\u7528\u7684\u540e\u7aef\u5b9e\u73b0\u6765\u8ba8\u8bba\u3002 Metric \u6211\u4eec\u4f7f\u7528\u5206\u5e03\u5f0f Prometheus \u65b9\u6848 Cortex\uff0c\u6570\u636e\u6a21\u578b\u548c Prometheus \u4e00\u81f4 Logging \u6211\u4eec\u4f7f\u7528 Loki Tracing \u6211\u4eec\u4f7f\u7528 Grafana Tempo\uff0cTempo \u672c\u8eab\u517c\u5bb9 Zipkin\u3001Jaeger\u3001OpenTelemetry \u7b49\u534f\u8bae\uff0c\u6240\u4ee5 Tracing \u76f4\u63a5\u91c7\u7528 OpenTelemetry \u7684\u6570\u636e\u6a21\u578b Profiling \u7684\u540e\u7aef\u5b9e\u73b0\u57fa\u672c\u53ef\u4ee5\u590d\u7528 Loki\uff0c\u6570\u636e\u6a21\u578b\u4e5f\u548c Logging \u7c7b\u4f3c \u5148\u770b Metric\uff0c\u5b83\u7684\u6570\u636e\u6a21\u578b\uff1a LabelSet + Timestamp + Number LabelSet \u5c31\u662f Series\uff0c\u662f\u82e5\u5e72\u4e2a label name / value \u7ec4\u5408\uff0c\u6307\u6807\u540d\u79f0\u4e5f\u662f\u4e00\u4e2a label name / value\u3002 Timestamp \u662f\u65f6\u95f4\u6233\uff0c\u7cbe\u5ea6\u662f\u6beb\u7c73\u3002 Number \u662f\u6570\u503c\uff0c\u7c7b\u578b\u662f float64\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a Metric \u4f8b\u5b50\uff1a \u53e6\u5916\uff0cPrometheus \u5185\u7f6e\u51e0\u79cd Metric \u7c7b\u578b\uff0c\u5305\u62ec Counter\u3001Gauge\u3001Histogram\u3001Summary\uff0cCounter \u662f\u81ea\u589e\u7684\uff0cGauge \u53ef\u589e\u53ef\u51cf\uff0cHistogram \u662f\u76f4\u65b9\u56fe\uff0cSummary \u662f\u6458\u8981\uff0cHistogram \u548c Summary \u533a\u522b\u662f Histogram \u9700\u8981\u901a\u8fc7 _bucket \u6765\u8ba1\u7b97 P \u503c\uff0c\u800c Summary \u5728\u5ba2\u6237\u7aef\u76f4\u63a5\u8ba1\u7b97\u597d P \u503c\uff0c\u76f4\u63a5\u5b58\u50a8\u5373\u53ef\u3002 \u53e6\u5916\uff0cPrometheus \u8fd8\u6709\u5f88\u591a\u5185\u7f6e\u51fd\u6570\uff0c\u6765\u505a Metric \u7684\u805a\u5408\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 \u518d\u770b Logging\uff0c\u6570\u636e\u6a21\u578b\uff1aLabelSet + Timestamp + String \u548c Metric \u7c7b\u4f3c\uff0c\u53ea\u662f Number \u6362\u6210\u4e86 String\uff0cTimestamp \u7cbe\u5ea6\u662f\u7eb3\u79d2\u3002 \u5728 Loki \u4e2d\uff0c\u4f7f\u7528 Logql \u8bed\u6cd5\u67e5\u8be2\u65e5\u5fd7\uff08\u548c Promql \u7c7b\u4f3c\uff09\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a {container=\"query-frontend\",namespace=\"loki-dev\"} |= \"metrics.go\" | logfmt | duration > 10s and throughput_mb < 500 \u4e0b\u4e00\u4e2a\u662f Tracing\uff0cTracing \u6bd4\u8f83\u590d\u6742\uff1a Operation Name + Start / End Timestamp + Attributes + Events + Parent + SpanContext Operation Name\uff1a\u64cd\u4f5c\u540d Start / End Timestamp\uff1a\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4 Attributes\uff1aKV \u5bf9\uff0c\u5305\u62ec Status\uff08\u6bd4\u5982 OK\u3001Cancelled\u3001Permission Denied\uff09\u3001 SpanKind\uff08CLIENT\u3001SERVER\u3001PRODUCER\u3001CONSUMER\u3001INTERNAL \u7b49\uff09\u3001\u81ea\u5b9a\u4e49\u4fe1\u606f\u7b49 Events\uff1a\u82e5\u5e72\u4e2a\u5143\u7ec4\u5217\u8868\uff0c\u6bcf\u4e2a\u5143\u7ec4\u5305\u62ec timestamp\u3001name\u3001Attributes\uff0c\u7528\u4e8e\u8bb0\u5f55\u4e00\u7cfb\u5217\u91cd\u8981\u4e8b\u4ef6 Parent \u5305\u542b\u7236\u4eb2\u7684 Span ID\u3001Trace ID SpanContext \u5305\u542b\u81ea\u8eab\u7684 Span ID\u3001Trace ID \u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a \u6700\u540e\u770b Profiling\uff0c\u6570\u636e\u6a21\u578b\uff1a LabelSet + Timestamp + []byte Profiling \u7684\u6570\u636e\u683c\u5f0f\u662f protocol buffers\uff0c\u6240\u4ee5\u7528 []byte \u3002 \u4e0a\u9762\u4ecb\u7ecd\u4e86\u56db\u79cd\u6570\u636e\u6a21\u578b\uff0c\u5176\u5b9e\u5728\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u5b83\u4eec\u4e4b\u95f4\u4e5f\u4f1a\u4e92\u76f8\u878d\u5408\uff0c\u4e0b\u9762\u8bf4\u51e0\u79cd\u5e38\u89c1\u7684\u878d\u5408\u573a\u666f\u3002 \u7b2c\u4e00\uff0cMetric \u548c Tracing \u878d\u5408\u3002 \u8fd9\u91cc\u8981\u7528\u5230 Exemplar\uff0cExemplar \u6700\u65e9\u88ab\u7528\u5728 Google \u7684 StackDriver \u4e2d\uff0c\u540e\u9762\u6210\u4e3a\u4e86 OpenMetrics \u6807\u51c6\u7684\u4e00\u90e8\u5206\uff0c\u5728\u5e94\u7528\u901a\u8fc7\u6807\u51c6 /metrics \u7aef\u53e3\u66b4\u9732 Metric \u65f6\uff0cExemplar \u4fe1\u606f\u4e5f\u4f1a\u88ab\u4e00\u8d77\u66b4\u9732\u3002 Prometheus \u76ee\u524d\u5df2\u652f\u6301 Exemplar\uff0cPrometheus \u901a\u8fc7 /metrics \u91c7\u96c6\u6570\u636e\u65f6\u4e5f\u4f1a\u628a Exemplar \u5b58\u50a8\u4e0b\u6765\uff0c\u5e76\u66b4\u9732\u5355\u72ec\u7684 API \u6765\u83b7\u53d6 Exemplar \u4fe1\u606f\u3002 $ curl -g 'http://localhost:9090/api/v1/query_exemplar?query=test_exemplar_metric_total&start=2020-09-14T15:22:25.479Z&end=020-09-14T15:23:25.479Z' { \"status\": \"success\", \"data\": [ { \"seriesLabels\": { \"__name__\": \"test_exemplar_metric_total\", \"instance\": \"localhost:8090\", \"job\": \"prometheus\", \"service\": \"bar\" }, \"exemplars\": [ { \"labels\": { \"traceID\": \"EpTxMJ40fUus7aGY\" }, \"value\": 6, \"timestamp\": 1600096945479, \"hasTimestamp\": true } ] }, ] } \u501f\u52a9 Exemplar\uff0c\u53ef\u4ee5\u628a Trace ID \u4f5c\u4e3a\u4e00\u4e2a label pair \u52a0\u5165 Exemplar \u4e2d\uff0c\u4ece\u800c\u53ef\u4ee5\u5728Prometheus \u67e5\u8be2\u5230 Tracing \u7684\u4fe1\u606f\uff0c\u4ece\u800c\u5c06 Metric \u548c Tracing \u8fde\u63a5\u8d77\u6765\u3002 \u7b2c\u4e8c\uff0cLogging \u548c Tracing \u878d\u5408\u3002 \u53ea\u8981\u4f7f\u7528\u5e26\u6709 Tracing \u5e93\u7684 SDK\uff0c\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4f1a\u5e26\u4e0a Trace ID\uff0c\u5e76\u628a\u8fd9\u4e9b ID \u6253\u5728\u65e5\u5fd7\u4e2d\u3002 \u901a\u8fc7 Trace ID \u53ef\u4ee5\u5b9a\u4f4d\u5230\u4e00\u4e2a\u552f\u4e00\u7684 Tracing\uff0c \u8df3\u8f6c\u5230 Tracing \u7cfb\u7edf\u7684 UI \u8fdb\u884c\u67e5\u8be2\u3002 \u7b2c\u4e09\uff0cMetric \u548c Profiling \u878d\u5408 \u3002 \u57fa\u4e8e Exemplar\uff0c\u628a Profiling ID \u4e5f\u653e\u5165 Exemplar \u4e2d\uff0cPrometheus \u652f\u6301\u5b58\u50a8\u548c\u67e5\u8be2\u5373\u53ef\u3002 \u81f3\u4e8e\u5c55\u793a\uff0c\u53ef\u4ee5\u5728 Grafana \u4e0a\u5f00\u53d1\u4e00\u4e2a pprof \u7684 Panel \u63d2\u4ef6\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c55\u793a Profiling\u3002","title":"\u6570\u636e\u6a21\u578b"}]}